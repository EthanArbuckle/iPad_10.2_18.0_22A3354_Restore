uint64_t assignWithCopy for SportsEmbedConfigResourceTag(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 *v9;
  uint64_t v10;
  __int128 *v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 24);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAA34B14(a1 + 24);
      v7 = *(_OWORD *)(a2 + 40);
      *v4 = *v5;
      *(_OWORD *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 40);
    *v4 = *v5;
    *(_OWORD *)(a1 + 40) = v8;
  }
  v9 = (__int128 *)(a1 + 56);
  v11 = (__int128 *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 56) = v10;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      v14 = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v14)
      {
        v15 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v15;
        return a1;
      }
LABEL_18:
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
    v18 = *v11;
    v19 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
LABEL_22:
    *v9 = v18;
    v9[1] = v19;
    return a1;
  }
  if (!v10)
  {
    sub_1BAB68F68(a1 + 56);
    v17 = *(_OWORD *)(a2 + 72);
    v16 = *(_OWORD *)(a2 + 88);
    *v9 = *v11;
    *(_OWORD *)(a1 + 72) = v17;
    *(_OWORD *)(a1 + 88) = v16;
    return a1;
  }
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (__int128 *)(a1 + 72);
  v12 = (__int128 *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v13)
      goto LABEL_18;
    v18 = *v12;
    v19 = *(_OWORD *)(a2 + 88);
    goto LABEL_22;
  }
  if (v13)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BAA34B14(a1 + 72);
    v20 = *(_OWORD *)(a2 + 88);
    *v9 = *v12;
    *(_OWORD *)(a1 + 88) = v20;
  }
  return a1;
}

uint64_t sub_1BAB68F68(uint64_t a1)
{
  destroy for SportsEmbedConfigResourceConfig(a1);
  return a1;
}

uint64_t assignWithTake for SportsEmbedConfigResourceTag(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
  {
    v4 = *(_QWORD *)(a2 + 32);
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v4;
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BAA34B14(a1 + 24);
  }
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v6;
LABEL_6:
  v7 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
LABEL_12:
    v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    return a1;
  }
  if (!v7)
  {
    sub_1BAB68F68(a1 + 56);
    goto LABEL_12;
  }
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 80))
  {
LABEL_14:
    v11 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v11;
    return a1;
  }
  v8 = *(_QWORD *)(a2 + 80);
  if (!v8)
  {
    sub_1BAA34B14(a1 + 72);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceTag()
{
  return &type metadata for SportsEmbedConfigResourceTag;
}

uint64_t storeEnumTagSinglePayload for SportsEmbedConfigResourceTag.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAB69130 + 4 * byte_1BB8A4875[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAB69164 + 4 * byte_1BB8A4870[v4]))();
}

uint64_t sub_1BAB69164(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6916C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB69174);
  return result;
}

uint64_t sub_1BAB69180(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB69188);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAB6918C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB69194(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceTag.CodingKeys()
{
  return &type metadata for SportsEmbedConfigResourceTag.CodingKeys;
}

unint64_t sub_1BAB691B4()
{
  unint64_t result;

  result = qword_1EF2B0C88;
  if (!qword_1EF2B0C88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A4998, &type metadata for SportsEmbedConfigResourceTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C88);
  }
  return result;
}

unint64_t sub_1BAB691FC()
{
  unint64_t result;

  result = qword_1ED3A15F0;
  if (!qword_1ED3A15F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A4908, &type metadata for SportsEmbedConfigResourceTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A15F0);
  }
  return result;
}

unint64_t sub_1BAB69244()
{
  unint64_t result;

  result = qword_1ED3A8488;
  if (!qword_1ED3A8488)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A4930, &type metadata for SportsEmbedConfigResourceTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A8488);
  }
  return result;
}

uint64_t sub_1BAB69288(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736449676174 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xEE006769666E6F43)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t FormatTextNodeFormat.format.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatTextNodeFormat.tokens.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeFormat.Token.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatTextNodeFormat.Token.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNodeFormat.Token.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

uint64_t FormatTextNodeFormat.Token.style.getter()
{
  return swift_retain();
}

uint64_t FormatTextNodeFormat.Token.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatTextNodeFormat.Token.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static FormatTextNodeFormat.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;

  v2 = a1[1];
  v3 = *(_QWORD *)(a2 + 8);
  v6 = *a1;
  static FormatTextContent.== infix(_:_:)((uint64_t)&v6);
  if ((v4 & 1) != 0)
    return sub_1BA895250(v2, v3);
  else
    return 0;
}

uint64_t sub_1BAB694EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;

  v2 = a1[1];
  v3 = *(_QWORD *)(a2 + 8);
  v6 = *a1;
  static FormatTextContent.== infix(_:_:)((uint64_t)&v6);
  if ((v4 & 1) != 0)
    return sub_1BA895250(v2, v3);
  else
    return 0;
}

uint64_t _s8NewsFeed014FormatTextNodeC0V5TokenV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a2[3];
  v6 = a2[4];
  v7 = *a1 == *a2 && a1[1] == a2[1];
  if (v7 || (sub_1BB874398() & 1) != 0)
  {
    v13 = v2;
    static FormatTextContent.== infix(_:_:)((uint64_t)&v13);
    if ((v8 & 1) != 0)
    {
      if (v4)
      {
        if (v5)
        {
          swift_retain();
          v9 = swift_retain();
          v10 = _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v9, v5);
          swift_release();
          swift_release();
          if ((v10 & 1) != 0)
            goto LABEL_10;
        }
      }
      else if (!v5)
      {
LABEL_10:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v11 = sub_1BA6EB330(v3, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v11 & 1;
      }
    }
  }
  return 0;
}

unint64_t sub_1BAB69638(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB6965C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB6965C()
{
  unint64_t result;

  result = qword_1EF2B0C90;
  if (!qword_1EF2B0C90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeFormat.Token, &type metadata for FormatTextNodeFormat.Token);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C90);
  }
  return result;
}

uint64_t sub_1BAB696A0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA83F148, (uint64_t (*)(void))sub_1BA83F18C, (uint64_t (*)(void))sub_1BAB696BC);
}

unint64_t sub_1BAB696BC()
{
  unint64_t result;

  result = qword_1EF2B0C98;
  if (!qword_1EF2B0C98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeFormat.Token, &type metadata for FormatTextNodeFormat.Token);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C98);
  }
  return result;
}

unint64_t sub_1BAB69700(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB69724();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB69724()
{
  unint64_t result;

  result = qword_1EF2B0CA0;
  if (!qword_1EF2B0CA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeFormat, &type metadata for FormatTextNodeFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B0CA0);
  }
  return result;
}

uint64_t sub_1BAB69768(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA6466A8, (uint64_t (*)(void))sub_1BA63504C, (uint64_t (*)(void))sub_1BAB69784);
}

unint64_t sub_1BAB69784()
{
  unint64_t result;

  result = qword_1EF2B0CA8[0];
  if (!qword_1EF2B0CA8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeFormat, &type metadata for FormatTextNodeFormat);
    atomic_store(result, qword_1EF2B0CA8);
  }
  return result;
}

uint64_t sub_1BAB697C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB697D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

_QWORD *assignWithCopy for FormatProcessedColor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FormatProcessedColor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeFormat()
{
  return &type metadata for FormatTextNodeFormat;
}

_QWORD *assignWithCopy for FormatTextNodeFormat.Token(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatTextNodeFormat.Token(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeFormat.Token()
{
  return &type metadata for FormatTextNodeFormat.Token;
}

uint64_t sub_1BAB699DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAB69A18();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

void sub_1BAB69A18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3970)
  {
    type metadata accessor for SportsEventStatusResponseData();
    sub_1BA4A2870(&qword_1ED3A89F8, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponseData, (uint64_t)&unk_1BB93D1F8);
    sub_1BA4A2870(&qword_1ED3A89F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsEventStatusResponseData, (uint64_t)&unk_1BB93D1D0);
    v0 = sub_1BB86E1F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3970);
  }
}

uint64_t sub_1BAB69ABC(uint64_t a1)
{
  uint64_t v2;

  sub_1BAB69A18();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1BAB69AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAB69A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BAB69B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAB69A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BAB69B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAB69A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BAB69BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAB69A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1BAB69C00()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB69C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAB69A18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BAB69C48()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB69C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAB69A18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SportsEventStatusResponse()
{
  uint64_t result;

  result = qword_1ED3A7A00;
  if (!qword_1ED3A7A00)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BAB69CD0()
{
  unint64_t v0;

  sub_1BAB69A18();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BAB69D38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  v19 = a2;
  sub_1BAB69A18();
  v21 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v22 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB6A1B0(0, &qword_1ED3AB450, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v20 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for SportsEventStatusResponse();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB6A128();
  sub_1BB87468C();
  if (!v2)
  {
    v14 = (uint64_t)v13;
    sub_1BA4A2870((unint64_t *)&unk_1ED3A3960, (uint64_t (*)(uint64_t))sub_1BAB69A18, MEMORY[0x1E0DB3A38]);
    v16 = v20;
    v15 = v21;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v14, v22, v15);
    sub_1BAB6A16C(v14, v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BAB69F18()
{
  return 1635017060;
}

uint64_t sub_1BAB69F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BAB69FAC()
{
  sub_1BAB6A128();
  return sub_1BB874710();
}

uint64_t sub_1BAB69FD4()
{
  sub_1BAB6A128();
  return sub_1BB87471C();
}

uint64_t sub_1BAB69FFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAB69D38(a1, a2);
}

uint64_t sub_1BAB6A010(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BAB6A1B0(0, &qword_1EF2B0CD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB6A128();
  sub_1BB8746C8();
  sub_1BAB69A18();
  sub_1BA4A2870(&qword_1EF2B0CE0, (uint64_t (*)(uint64_t))sub_1BAB69A18, MEMORY[0x1E0DB3A30]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BAB6A128()
{
  unint64_t result;

  result = qword_1ED3A79D8;
  if (!qword_1ED3A79D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A4D10, &type metadata for SportsEventStatusResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A79D8);
  }
  return result;
}

uint64_t sub_1BAB6A16C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsEventStatusResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BAB6A1B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAB6A128();
    v7 = a3(a1, &type metadata for SportsEventStatusResponse.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsEventStatusResponse.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAB6A24C + 4 * asc_1BB8A4BD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAB6A26C + 4 * byte_1BB8A4BD5[v4]))();
}

_BYTE *sub_1BAB6A24C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAB6A26C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB6A274(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB6A27C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB6A284(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB6A28C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsEventStatusResponse.CodingKeys()
{
  return &type metadata for SportsEventStatusResponse.CodingKeys;
}

unint64_t sub_1BAB6A2AC()
{
  unint64_t result;

  result = qword_1EF2B0CE8;
  if (!qword_1EF2B0CE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A4CE8, &type metadata for SportsEventStatusResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0CE8);
  }
  return result;
}

unint64_t sub_1BAB6A2F4()
{
  unint64_t result;

  result = qword_1ED3A79E8;
  if (!qword_1ED3A79E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A4C58, &type metadata for SportsEventStatusResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A79E8);
  }
  return result;
}

unint64_t sub_1BAB6A33C()
{
  unint64_t result;

  result = qword_1ED3A79E0;
  if (!qword_1ED3A79E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A4C80, &type metadata for SportsEventStatusResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A79E0);
  }
  return result;
}

uint64_t static FeedGroupConfigError.== infix(_:_:)()
{
  return 1;
}

uint64_t FeedGroupConfigError.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FeedGroupConfigError.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAB6A3F0()
{
  unint64_t result;

  result = qword_1EF2B0CF0;
  if (!qword_1EF2B0CF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupConfigError, &type metadata for FeedGroupConfigError);
    atomic_store(result, (unint64_t *)&qword_1EF2B0CF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedGroupConfigError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAB6A474 + 4 * byte_1BB8A4D60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAB6A494 + 4 * byte_1BB8A4D65[v4]))();
}

_BYTE *sub_1BAB6A474(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAB6A494(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB6A49C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB6A4A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB6A4AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB6A4B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupConfigError()
{
  return &type metadata for FeedGroupConfigError;
}

uint64_t static LayeredMediaViewVisibilityTracking.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      if ((v3 & 0xC0) != 0x40)
        return 0;
      return (((v2 & 1) == 0) ^ v3) & 1;
    }
    if (v3 == 128)
      return 1;
  }
  else if (v3 < 0x40)
  {
    return (((v2 & 1) == 0) ^ v3) & 1;
  }
  return 0;
}

uint64_t sub_1BAB6A530(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      if ((v3 & 0xC0) != 0x40)
        return 0;
      return (((v2 & 1) == 0) ^ v3) & 1;
    }
    if (v3 == 128)
      return 1;
  }
  else if (v3 < 0x40)
  {
    return (((v2 & 1) == 0) ^ v3) & 1;
  }
  return 0;
}

uint64_t getEnumTagSinglePayload for LayeredMediaViewVisibilityTracking(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7E)
    goto LABEL_17;
  if (a2 + 130 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 130) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 130;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 130;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 130;
  }
LABEL_17:
  v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7D)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for LayeredMediaViewVisibilityTracking(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 130 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 130) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7D)
    return ((uint64_t (*)(void))((char *)&loc_1BAB6A67C + 4 * byte_1BB8A4E45[v4]))();
  *a1 = a2 - 126;
  return ((uint64_t (*)(void))((char *)sub_1BAB6A6B0 + 4 * byte_1BB8A4E40[v4]))();
}

uint64_t sub_1BAB6A6B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6A6B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB6A6C0);
  return result;
}

uint64_t sub_1BAB6A6D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB6A6E0);
  *(_BYTE *)result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_1BAB6A6E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6A6EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6A6F8(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 6;
  else
    return v1 & 1 | 2u;
}

_BYTE *sub_1BAB6A714(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 1 | ((_BYTE)a2 << 6);
  else
    *result = a2 & 1 | 0x80;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaViewVisibilityTracking()
{
  return &type metadata for LayeredMediaViewVisibilityTracking;
}

uint64_t sub_1BAB6A750(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAB6A78C + 4 * byte_1BB8A4EB0[a1]))(0x654E6E496E65706FLL, 0xEC00000062615477);
}

uint64_t sub_1BAB6A7A0()
{
  return 0x6572616873;
}

uint64_t sub_1BAB6A7B4()
{
  return 0x6B6E694C79706F63;
}

uint64_t sub_1BAB6A7CC()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_1BAB6A7E4()
{
  return 0x65766F6D6572;
}

uint64_t sub_1BAB6A7F8()
{
  return 0x6E6168436E65706FLL;
}

uint64_t sub_1BAB6A818()
{
  return 0x776F6C6C6F66;
}

uint64_t sub_1BAB6A82C()
{
  return 0x617461436B636162;
}

unint64_t sub_1BAB6A84C()
{
  return 0xD000000000000013;
}

uint64_t sub_1BAB6A868()
{
  return 0x6B636F6C62;
}

uint64_t sub_1BAB6A87C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BAB6A750(*a1);
  v5 = v4;
  if (v3 == sub_1BAB6A750(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BAB6A904()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BAB6A750(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB6A964()
{
  unsigned __int8 *v0;

  sub_1BAB6A750(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB6A9A4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BAB6A750(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB6AA00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAB6B7A8();
  *a1 = result;
  return result;
}

uint64_t sub_1BAB6AA2C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAB6A750(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAB6AA54()
{
  sub_1BAB6AF3C();
  return sub_1BB872D60();
}

uint64_t sub_1BAB6AAB0()
{
  sub_1BAB6AF3C();
  return sub_1BB872D0C();
}

void sub_1BAB6AAFC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724F7F0;
}

BOOL static FormatIssueBinding.Command.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatIssueBinding.Command.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatIssueBinding.Command.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAB6AB90()
{
  unint64_t result;

  result = qword_1EF2B0CF8;
  if (!qword_1EF2B0CF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Command, &type metadata for FormatIssueBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2B0CF8);
  }
  return result;
}

unint64_t sub_1BAB6ABD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB6ABF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB6ABF8()
{
  unint64_t result;

  result = qword_1EF2B0D00;
  if (!qword_1EF2B0D00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Command, &type metadata for FormatIssueBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D00);
  }
  return result;
}

unint64_t sub_1BAB6AC3C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAB6AC70();
  a1[2] = sub_1BAB6ACB4();
  result = sub_1BAB6AB90();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB6AC70()
{
  unint64_t result;

  result = qword_1EF2B0D08;
  if (!qword_1EF2B0D08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Command, &type metadata for FormatIssueBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D08);
  }
  return result;
}

unint64_t sub_1BAB6ACB4()
{
  unint64_t result;

  result = qword_1EF2B0D10;
  if (!qword_1EF2B0D10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Command, &type metadata for FormatIssueBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D10);
  }
  return result;
}

uint64_t sub_1BAB6ACF8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatIssueBinding.Command.init(from:)(a1, a2);
}

void sub_1BAB6AD0C(_QWORD *a1)
{
  FormatIssueBinding.Command.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatIssueBinding.Command()
{
  return &type metadata for FormatIssueBinding.Command;
}

uint64_t getEnumTagSinglePayload for SharingArticleActivity(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s7CommandOwst_3_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BAB6AE10 + 4 * byte_1BB8A4EC0[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BAB6AE44 + 4 * byte_1BB8A4EBB[v4]))();
}

uint64_t sub_1BAB6AE44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6AE4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB6AE54);
  return result;
}

uint64_t sub_1BAB6AE60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB6AE68);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BAB6AE6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6AE74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7CommandO10CodingTypeOMa()
{
  return &_s7CommandO10CodingTypeON;
}

unint64_t sub_1BAB6AE94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B0D18;
  if (!qword_1EF2B0D18)
  {
    sub_1BA4AD288(255, &qword_1EF2B0D20, (uint64_t)&_s7CommandO10CodingTypeON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D18);
  }
  return result;
}

unint64_t sub_1BAB6AEF8()
{
  unint64_t result;

  result = qword_1EF2B0D28;
  if (!qword_1EF2B0D28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A50E4, &_s7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D28);
  }
  return result;
}

unint64_t sub_1BAB6AF3C()
{
  unint64_t result;

  result = qword_1EF2B0D30;
  if (!qword_1EF2B0D30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A506C, &_s7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D30);
  }
  return result;
}

void sub_1BAB6AF80(unsigned __int8 a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = sub_1BAB6A750(a1);
  v4 = v3;
  swift_bridgeObjectRetain();
  sub_1BA689E44(v2, v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    sub_1BA7114A0();
    sub_1BB873ABC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v7 = sub_1BA9C0430(1uLL, v2, v4);
    v9 = v8;
    v11 = v10;
    v13 = v12;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE334C](v7, v9, v11, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __asm { BR              X10 }
}

uint64_t sub_1BAB6B0E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t result;
  char *v11;
  void *v12;

  if (qword_1ED3ABAF0 != -1)
    swift_once();
  v4 = qword_1ED3ABAE0;
  type metadata accessor for FormatCommandAction();
  swift_allocObject();
  swift_retain();
  v5 = v12;
  v6 = sub_1BAFE88F4(v4, v12, 0, 0);
  sub_1BA8DAD20(v3);
  sub_1BA8D1FE4((uint64_t)&v12);
  v7 = type metadata accessor for FormatInspectionItem(0);
  v8 = (_QWORD *)((char *)v0 + *(int *)(v7 + 24));
  *v8 = v6;
  v9 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  *v0 = v2;
  v0[1] = v1;
  v0[2] = 0;
  v0[3] = 0;
  v11 = (char *)v0 + *(int *)(v7 + 28);
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = -1;
  return result;
}

uint64_t sub_1BAB6B7A8()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

id sub_1BAB6B7F0(void *a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *ObjCClassFromMetadata;
  void *v25;
  void *v26;
  id v27;
  _BYTE *v28;
  _BYTE *v29;
  void *v31;
  _QWORD v32[2];
  id v33;
  uint64_t v34;
  id v35[2];

  v35[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_dataProvider, v8);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_1BAB6BB80();
    swift_allocError();
    *v28 = 0;
    swift_willThrow();
    goto LABEL_13;
  }
  v12 = v11;
  v34 = a2;
  if ((objc_msgSend(v11, sel_isRawFileConsumable) & 1) == 0
    || (v13 = objc_msgSend(v12, sel_filePath)) == 0)
  {
    v19 = objc_msgSend(v12, sel_data);
    if (v19)
    {
      v20 = v19;
      v33 = a1;
      v21 = sub_1BB86C6E8();
      v23 = v22;

      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      v25 = (void *)sub_1BB86C6DC();
      v26 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v35[0] = 0;
      v2 = objc_msgSend(ObjCClassFromMetadata, sel_packageWithData_type_options_error_, v25, v26, 0, v35);

      if (v2)
      {
        v27 = v35[0];
      }
      else
      {
        v2 = v35[0];
        sub_1BB86C484();

        swift_willThrow();
      }

      sub_1BA69D314(v21, v23);
      swift_unknownObjectRelease();
      return v2;
    }
    swift_bridgeObjectRelease();
    sub_1BAB6BB80();
    swift_allocError();
    *v29 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
LABEL_13:

    return v2;
  }
  v14 = v13;
  v32[1] = v3;
  v33 = a1;
  sub_1BB8729A0();

  v15 = (void *)swift_getObjCClassFromMetadata();
  sub_1BB86C55C();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_1BB86C58C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v17 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v35[0] = 0;
  v2 = objc_msgSend(v15, sel_packageWithContentsOfURL_type_options_error_, v16, v17, 0, v35);

  v18 = v35[0];
  if (!v2)
  {
    v31 = v18;
    sub_1BB86C484();

    swift_willThrow();
  }
  swift_unknownObjectRelease();

  return v2;
}

unint64_t sub_1BAB6BB80()
{
  unint64_t result;

  result = qword_1EF2B0D38;
  if (!qword_1EF2B0D38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A51B0, &_s6ErrorsON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D38);
  }
  return result;
}

uint64_t _s6ErrorsOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB6BC10 + 4 * byte_1BB8A5139[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB6BC44 + 4 * byte_1BB8A5134[v4]))();
}

uint64_t sub_1BAB6BC44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6BC4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB6BC54);
  return result;
}

uint64_t sub_1BAB6BC60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB6BC68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB6BC6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6BC74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6ErrorsOMa_1()
{
  return &_s6ErrorsON_0;
}

unint64_t sub_1BAB6BC94()
{
  unint64_t result;

  result = qword_1EF2B0D40;
  if (!qword_1EF2B0D40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A5188, &_s6ErrorsON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D40);
  }
  return result;
}

void sub_1BAB6BCDC()
{
  sub_1BA7E84DC();
}

void _s8NewsFeed18FormatGroupBindingV7CommandO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAB6BD48()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v10[2];
  char v11;
  _QWORD v12[2];
  char v13;

  if ((v4 & 0x30) != 0)
  {
    sub_1BA856DD0(v3, v2, v1);
    sub_1BA856ECC(v7, v6, v5, v4, (uint64_t (*)(void))sub_1BA856DD0);
    sub_1BA856ECC(v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA7EDFFC);
    sub_1BA856ECC(v7, v6, v5, v4, (uint64_t (*)(void))sub_1BA7EDFFC);
    v8 = 0;
  }
  else
  {
    v12[0] = v3;
    v12[1] = v2;
    v13 = v1;
    v10[0] = v7;
    v10[1] = v6;
    v11 = v5;
    sub_1BA856ECC(v7, v6, v5, v4, (uint64_t (*)(void))sub_1BA856DD0);
    sub_1BA856ECC(v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA856DD0);
    sub_1BA856ECC(v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA856DD0);
    sub_1BA856ECC(v7, v6, v5, v4, (uint64_t (*)(void))sub_1BA856DD0);
    v8 = _s8NewsFeed16FormatTagBindingV7CommandO2eeoiySbAE_AEtFZ_0((uint64_t)v12, (uint64_t)v10);
    sub_1BA856ECC(v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA7EDFFC);
    sub_1BA856ECC(v7, v6, v5, v4, (uint64_t (*)(void))sub_1BA7EDFFC);
    sub_1BA856ECC(v7, v6, v5, v4, (uint64_t (*)(void))sub_1BA7EDFFC);
    sub_1BA856ECC(v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA7EDFFC);
  }
  return v8 & 1;
}

unint64_t sub_1BAB6BFE8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB6C00C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB6C00C()
{
  unint64_t result;

  result = qword_1EF2B0D48;
  if (!qword_1EF2B0D48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Command, &type metadata for FormatGroupBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D48);
  }
  return result;
}

unint64_t sub_1BAB6C050(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA59D948();
  a1[2] = sub_1BA5C99DC();
  result = sub_1BAB6C084();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB6C084()
{
  unint64_t result;

  result = qword_1EF2B0D50;
  if (!qword_1EF2B0D50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Command, &type metadata for FormatGroupBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D50);
  }
  return result;
}

uint64_t _s7CommandOwxx_0(uint64_t a1)
{
  return sub_1BA856ECC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), (uint64_t (*)(void))sub_1BA7EDFFC);
}

uint64_t _s7CommandOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 24);
  sub_1BA856ECC(*(_QWORD *)a2, v4, v5, v6, (uint64_t (*)(void))sub_1BA856DD0);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s7CommandOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 24);
  sub_1BA856ECC(*(_QWORD *)a2, v4, v5, v6, (uint64_t (*)(void))sub_1BA856DD0);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BA856ECC(v7, v8, v9, v10, (uint64_t (*)(void))sub_1BA7EDFFC);
  return a1;
}

uint64_t _s7CommandOwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BA856ECC(v5, v7, v6, v8, (uint64_t (*)(void))sub_1BA7EDFFC);
  return a1;
}

uint64_t sub_1BAB6C228(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 24) >> 4) & 3;
}

uint64_t sub_1BAB6C234(uint64_t result)
{
  *(_BYTE *)(result + 24) &= 0xCFu;
  return result;
}

uint64_t sub_1BAB6C244(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = *(_BYTE *)(result + 24) & 0xC3 | (16 * (a2 & 3));
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.Command()
{
  return &type metadata for FormatGroupBinding.Command;
}

uint64_t sub_1BAB6C26C(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1BAB6C29C()
{
  unint64_t result;

  result = qword_1ED3A3000;
  if (!qword_1ED3A3000)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3A3000);
  }
  return result;
}

unint64_t sub_1BAB6C2E0(_QWORD *a1)
{
  return FormatBindingDateTimeExpressionLogic.encode(to:)(a1);
}

void FormatBindingDateTimeExpressionLogicCompare.operator.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

unint64_t FormatBindingDateTimeExpressionLogicCompare.dateTime.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  return sub_1BA739250(v2);
}

uint64_t sub_1BAB6C310(_QWORD *a1)
{
  return FormatBindingDateTimeExpressionLogicCompare.encode(to:)(a1);
}

uint64_t _s8NewsFeed43FormatBindingDateTimeExpressionLogicCompareV2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 8);
  LOBYTE(v10) = *(_BYTE *)a1;
  v2 = FormatOperator.rawValue.getter();
  v4 = v3;
  if (v2 == FormatOperator.rawValue.getter() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  v10 = v1;
  static FormatDateTime.== infix(_:_:)((uint64_t)&v10);
  return v8 & 1;
}

uint64_t _s8NewsFeed36FormatBindingDateTimeExpressionLogicO2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  char v7;
  _BYTE v9[8];
  unint64_t v10;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  v6 = *a1;
  if (v6 == 12)
  {
    if (*a2 != 12)
      goto LABEL_8;
  }
  else
  {
    if (v6 != 13)
    {
      if ((v5 & 0xFE) != 0xC)
      {
        v9[0] = *a1;
        v10 = v2;
        sub_1BA75D96C(v5, v4);
        sub_1BA75D96C(v3, v2);
        sub_1BA75D96C(v3, v2);
        sub_1BA75D96C(v5, v4);
        v7 = _s8NewsFeed43FormatBindingDateTimeExpressionLogicCompareV2eeoiySbAC_ACtFZ_0((uint64_t)v9);
        sub_1BA7DE08C(v3, v2);
        sub_1BA7DE08C(v5, v4);
        sub_1BA7DE08C(v5, v4);
        sub_1BA7DE08C(v3, v2);
        return v7 & 1;
      }
      goto LABEL_8;
    }
    if (*a2 != 13)
    {
LABEL_8:
      sub_1BA75D96C(*a1, v2);
      sub_1BA75D96C(v5, v4);
      sub_1BA7DE08C(v3, v2);
      sub_1BA7DE08C(v5, v4);
      v7 = 0;
      return v7 & 1;
    }
  }
  sub_1BA7DE08C(*a1, v2);
  sub_1BA7DE08C(v5, v4);
  v7 = 1;
  return v7 & 1;
}

unint64_t sub_1BAB6C544(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB6C568();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB6C568()
{
  unint64_t result;

  result = qword_1EF2B0D58;
  if (!qword_1EF2B0D58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpressionLogic, &type metadata for FormatBindingDateTimeExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D58);
  }
  return result;
}

uint64_t sub_1BAB6C5AC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA509E58, (uint64_t (*)(void))sub_1BA946D6C, (uint64_t (*)(void))sub_1BAB6C5C8);
}

unint64_t sub_1BAB6C5C8()
{
  unint64_t result;

  result = qword_1EF2B0D60;
  if (!qword_1EF2B0D60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpressionLogic, &type metadata for FormatBindingDateTimeExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D60);
  }
  return result;
}

unint64_t sub_1BAB6C60C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB6C630();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB6C630()
{
  unint64_t result;

  result = qword_1EF2B0D68;
  if (!qword_1EF2B0D68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpressionLogicCompare, &type metadata for FormatBindingDateTimeExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D68);
  }
  return result;
}

uint64_t sub_1BAB6C674(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA508DF8, (uint64_t (*)(void))sub_1BAB6C690, (uint64_t (*)(void))sub_1BAB6C6D4);
}

unint64_t sub_1BAB6C690()
{
  unint64_t result;

  result = qword_1ED3AA980;
  if (!qword_1ED3AA980)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpressionLogicCompare, &type metadata for FormatBindingDateTimeExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1ED3AA980);
  }
  return result;
}

unint64_t sub_1BAB6C6D4()
{
  unint64_t result;

  result = qword_1EF2B0D70;
  if (!qword_1EF2B0D70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpressionLogicCompare, &type metadata for FormatBindingDateTimeExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D70);
  }
  return result;
}

unsigned __int8 *destroy for FormatBindingDateTimeExpressionLogic(unsigned __int8 *result)
{
  if (*result <= 0xBu)
    return (unsigned __int8 *)sub_1BA6F5D74(*((_QWORD *)result + 1));
  return result;
}

uint64_t _s8NewsFeed36FormatBindingDateTimeExpressionLogicOwCP_0(uint64_t a1, unsigned __int8 *a2)
{
  unsigned int v3;
  unint64_t v4;

  v3 = *a2;
  if (v3 > 0xB)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_BYTE *)a1 = v3;
    v4 = *((_QWORD *)a2 + 1);
    sub_1BA739250(v4);
    *(_QWORD *)(a1 + 8) = v4;
  }
  return a1;
}

unsigned __int8 *assignWithCopy for FormatBindingDateTimeExpressionLogic(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = *a2;
  if (*a1 > 0xBu)
  {
    if (v4 <= 0xB)
    {
      *a1 = v4;
      v7 = *((_QWORD *)a2 + 1);
      sub_1BA739250(v7);
      *((_QWORD *)a1 + 1) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 > 0xB)
  {
    sub_1BA6F5D74(*((_QWORD *)a1 + 1));
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = *((_QWORD *)a2 + 1);
  sub_1BA739250(v5);
  v6 = *((_QWORD *)a1 + 1);
  *((_QWORD *)a1 + 1) = v5;
  sub_1BA6F5D74(v6);
  return a1;
}

unsigned __int8 *assignWithTake for FormatBindingDateTimeExpressionLogic(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v4;
  unint64_t v5;

  if (*a1 > 0xBu)
    goto LABEL_5;
  v4 = *a2;
  if (v4 > 0xB)
  {
    sub_1BA6F5D74(*((_QWORD *)a1 + 1));
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = v4;
  v5 = *((_QWORD *)a1 + 1);
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  sub_1BA6F5D74(v5);
  return a1;
}

uint64_t sub_1BAB6C870(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 0xC)
    return v1 - 11;
  else
    return 0;
}

_QWORD *sub_1BAB6C884(_QWORD *result, unsigned int a2)
{
  if (a2 > 0xF4)
  {
    *result = a2 - 245;
    result[1] = 0;
  }
  else if (a2)
  {
    *(_BYTE *)result = a2 + 11;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingDateTimeExpressionLogic()
{
  return &type metadata for FormatBindingDateTimeExpressionLogic;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatBindingDateTimeExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  sub_1BA739250(v3);
  *(_QWORD *)(a1 + 8) = v3;
  return a1;
}

unint64_t destroy for FormatBindingDateTimeExpressionLogicCompare(uint64_t a1)
{
  return sub_1BA6F5D74(*(_QWORD *)(a1 + 8));
}

uint64_t assignWithCopy for FormatBindingDateTimeExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  sub_1BA739250(v3);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  sub_1BA6F5D74(v4);
  return a1;
}

uint64_t assignWithTake for FormatBindingDateTimeExpressionLogicCompare(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1BA6F5D74(v3);
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingDateTimeExpressionLogicCompare()
{
  return &type metadata for FormatBindingDateTimeExpressionLogicCompare;
}

uint64_t sub_1BAB6C984@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v6;

  type metadata accessor for FeedCursorGroup(0, a1, a2, a3);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = sub_1BB86DEE8();
  *a4 = result;
  a4[1] = v6;
  return result;
}

uint64_t sub_1BAB6CA7C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *a1;
  v13 = sub_1BA632490();
  v2 = *(_QWORD *)(v1 + 88);
  v11 = *(_QWORD *)(v1 + 80);
  v12 = v2;
  type metadata accessor for FeedCursorGroup(255, v11, v2, v3);
  v4 = sub_1BB872EE0();
  v5 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v4);
  v7 = sub_1BAA52384((void (*)(char *, char *))sub_1BAB6CB40, (uint64_t)&v10, v4, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v5, MEMORY[0x1E0DEDD18], v6);
  swift_bridgeObjectRelease();
  v8 = sub_1BA6E43EC(v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BAB6CB40@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BAB6C984(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_1BAB6CB60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAccessibilityValue.init(from:)(a1, a2);
}

uint64_t sub_1BAB6CB74(_QWORD *a1)
{
  return FormatAccessibilityValue.encode(to:)(a1);
}

uint64_t _s8NewsFeed24FormatAccessibilityValueO2eeoiySbAC_ACtFZ_0(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *a2;
  switch(*a1)
  {
    case 0x12:
      if (v2 != 18)
        goto LABEL_17;
      goto LABEL_9;
    case 0x13:
      if (v2 == 19)
        goto LABEL_9;
      goto LABEL_17;
    case 0x14:
      if (v2 != 20)
        goto LABEL_17;
      goto LABEL_9;
    case 0x15:
      if (v2 != 21)
        goto LABEL_17;
      goto LABEL_9;
    case 0x16:
      if (v2 != 22)
        goto LABEL_17;
      goto LABEL_9;
    case 0x17:
      if (v2 != 23)
        goto LABEL_17;
LABEL_9:
      v7 = 1;
      break;
    default:
      if ((v2 - 18) < 6)
      {
LABEL_17:
        v7 = 0;
      }
      else
      {
        v3 = FormatAccessibilityTrait.rawValue.getter();
        v5 = v4;
        if (v3 == FormatAccessibilityTrait.rawValue.getter() && v5 == v6)
          v7 = 1;
        else
          v7 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
  }
  return v7 & 1;
}

unint64_t sub_1BAB6CCAC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB6CCD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB6CCD0()
{
  unint64_t result;

  result = qword_1EF2B0D78;
  if (!qword_1EF2B0D78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityValue, &type metadata for FormatAccessibilityValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D78);
  }
  return result;
}

unint64_t sub_1BAB6CD14(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAB6CD48();
  a1[2] = sub_1BAB6CD8C();
  result = sub_1BAB6CDD0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB6CD48()
{
  unint64_t result;

  result = qword_1EF2B0D80;
  if (!qword_1EF2B0D80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityValue, &type metadata for FormatAccessibilityValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D80);
  }
  return result;
}

unint64_t sub_1BAB6CD8C()
{
  unint64_t result;

  result = qword_1EF2B0D88;
  if (!qword_1EF2B0D88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityValue, &type metadata for FormatAccessibilityValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D88);
  }
  return result;
}

unint64_t sub_1BAB6CDD0()
{
  unint64_t result;

  result = qword_1EF2B0D90;
  if (!qword_1EF2B0D90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityValue, &type metadata for FormatAccessibilityValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B0D90);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatAccessibilityValue(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xE9)
  {
    v6 = *a1;
    if (v6 >= 0x12)
      v7 = v6 - 17;
    else
      v7 = 0;
    if (v7 >= 7)
      return v7 - 6;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 23;
    if (a2 + 23 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BAB6CE64 + 4 * byte_1BB8A54C6[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FormatAccessibilityValue(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 23;
  if (a3 + 23 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xE9)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_1BAB6CF10 + 4 * byte_1BB8A54D0[v5]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_1BAB6CF44 + 4 * byte_1BB8A54CB[v5]))();
}

uint64_t sub_1BAB6CF44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6CF4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB6CF54);
  return result;
}

uint64_t sub_1BAB6CF60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB6CF68);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_1BAB6CF6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6CF74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6CF80(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 0x12)
    return v1 - 17;
  else
    return 0;
}

_BYTE *sub_1BAB6CF94(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 17;
  return result;
}

ValueMetadata *type metadata accessor for FormatAccessibilityValue()
{
  return &type metadata for FormatAccessibilityValue;
}

uint64_t sub_1BAB6CFB4(char a1)
{
  char *v1;
  objc_class *ObjectType;
  char v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  char *v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  double v47;
  double v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  objc_super v55;
  uint64_t v56;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_scale] = 0x3FF0000000000000;
  v4 = a1 & 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_edge] = 0x3FF0000000000000;
  v5 = &v1[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v6 = &v1[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_canvasOffset];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v1[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v8 = &v1[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v9 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_markerLayer;
  v10 = objc_allocWithZone(MEMORY[0x1E0CD2840]);
  v11 = v1;
  *(_QWORD *)&v1[v9] = objc_msgSend(v10, sel_init);
  v56 = MEMORY[0x1E0DEE9D8];
  v12 = 21;
  result = sub_1BB873DD4();
  v14 = 0;
  v15 = 0;
  while (1)
  {
    if (v15)
      goto LABEL_20;
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_1BB873DB0();
    sub_1BB873DE0();
    sub_1BB873DEC();
    result = sub_1BB873DBC();
    v15 = v14 == 20;
    if (v14 != 20)
      break;
    v14 = 0;
LABEL_3:
    if (!--v12)
      goto LABEL_9;
  }
  if (!__OFADD__(v14++, 1))
    goto LABEL_3;
  __break(1u);
LABEL_9:
  *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_markerLabels] = v56;
  v17 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentView;
  *(_QWORD *)&v11[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionView;
  *(_QWORD *)&v11[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v19 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionView;
  *(_QWORD *)&v11[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v11[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_direction] = v4;
  v20 = objc_allocWithZone((Class)type metadata accessor for DebugFormatRulerIndicatorView());
  *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_indicatorView] = sub_1BAF6BD80(v4);

  v55.receiver = v11;
  v55.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v55, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v21, sel_setUserInteractionEnabled_, 1);
  v22 = (void *)objc_opt_self();
  v23 = (char *)v21;
  v24 = objc_msgSend(v22, sel_secondarySystemBackgroundColor);
  objc_msgSend(v23, sel_setBackgroundColor_, v24);

  v25 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentView;
  v26 = *(void **)&v23[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentView];
  objc_msgSend(v26, sel_setClipsToBounds_, 1);
  objc_msgSend(v23, sel_addSubview_, v26);
  v27 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionView;
  v28 = *(id *)&v23[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionView];
  v29 = objc_msgSend(v22, sel_systemBlueColor);
  v30 = objc_msgSend(v29, sel_colorWithAlphaComponent_, 0.3);

  objc_msgSend(v28, sel_setBackgroundColor_, v30);
  objc_msgSend(*(id *)&v23[v25], sel_addSubview_, *(_QWORD *)&v23[v27]);
  v31 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionView;
  v32 = *(id *)&v23[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionView];
  v54 = v22;
  v33 = objc_msgSend(v22, sel_systemYellowColor);
  v34 = objc_msgSend(v33, sel_colorWithAlphaComponent_, 0.6);

  objc_msgSend(v32, sel_setBackgroundColor_, v34);
  objc_msgSend(*(id *)&v23[v25], sel_addSubview_, *(_QWORD *)&v23[v31]);
  v35 = *(_QWORD *)&v23[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_markerLabels];
  if (!(v35 >> 62))
  {
    v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v36)
      goto LABEL_11;
LABEL_18:
    swift_bridgeObjectRelease();
    v42 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_markerLayer;
    v43 = *(void **)&v23[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_markerLayer];
    v44 = (void *)objc_opt_self();
    v45 = v43;
    v46 = objc_msgSend(v44, sel_mainScreen);
    objc_msgSend(v46, sel_scale);
    v48 = v47;

    objc_msgSend(v45, sel_setLineWidth_, 1.0 / v48);
    v49 = *(id *)&v23[v42];
    v50 = objc_msgSend(v54, sel_labelColor);
    v51 = objc_msgSend(v50, sel_CGColor);

    objc_msgSend(v49, sel_setStrokeColor_, v51);
    v52 = objc_msgSend(*(id *)&v23[v25], sel_layer);
    objc_msgSend(v52, sel_addSublayer_, *(_QWORD *)&v23[v42]);

    objc_msgSend(v23, sel_addSubview_, *(_QWORD *)&v23[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_indicatorView]);
    v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AA0]), sel_initWithTarget_action_, v23, sel_didUpdatePan_);
    objc_msgSend(v53, sel_setMinimumNumberOfTouches_, 1);
    objc_msgSend(v53, sel_setMaximumNumberOfTouches_, 2);
    objc_msgSend(v23, sel_addGestureRecognizer_, v53);

    return (uint64_t)v23;
  }
  swift_bridgeObjectRetain();
  v36 = sub_1BB873F30();
  if (!v36)
    goto LABEL_18;
LABEL_11:
  result = objc_opt_self();
  if (v36 >= 1)
  {
    v37 = (void *)result;
    v38 = 0;
    do
    {
      if ((v35 & 0xC000000000000001) != 0)
        v39 = (id)MEMORY[0x1BCCE4630](v38, v35);
      else
        v39 = *(id *)(v35 + 8 * v38 + 32);
      v40 = v39;
      ++v38;
      v41 = objc_msgSend(v37, sel_systemFontOfSize_, 12.0);
      objc_msgSend(v40, sel_setFont_, v41);

      objc_msgSend(v23, sel_addSubview_, v40);
    }
    while (v36 != v38);
    goto LABEL_18;
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

id sub_1BAB6D68C()
{
  char *v0;
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  id v7;
  void *v8;
  char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  CGRect *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double MinY;
  CGRect *v20;
  double v21;
  double v22;
  double Height;
  double v24;
  void *v25;
  CGRect *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  id v32;
  double Width;
  void *v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  double v44;
  id v45;
  void *v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double MinX;
  CGRect *v56;
  double v57;
  double v58;
  double v59;
  double v60;
  void *v61;
  CGRect *v62;
  double v63;
  double v64;
  double v65;
  double v66;
  void *v67;
  double v68;
  id v69;
  void *v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  double v75;
  CGFloat v76;
  double v77;
  CGFloat v78;
  char *v79;
  uint64_t v80;
  id v81;
  _QWORD v82[6];
  objc_super v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;

  v83.receiver = v0;
  v83.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v83, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  v2 = (void *)objc_opt_self();
  objc_msgSend(v2, sel_begin);
  v81 = v2;
  objc_msgSend(v2, sel_setDisableActions_, 1);
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_markerLabels];
  v79 = v0;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_1BB873F30();
    v4 = (uint64_t)result;
    if (!result)
      goto LABEL_10;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (!v4)
      goto LABEL_10;
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  v6 = 0;
  do
  {
    if ((v3 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x1BCCE4630](v6, v3);
    else
      v7 = *(id *)(v3 + 8 * v6 + 32);
    v8 = v7;
    ++v6;
    objc_msgSend(v7, sel_setText_, 0, v79);
    v82[1] = 0;
    v82[2] = 0;
    v82[0] = 0x3FF0000000000000;
    v82[3] = 0x3FF0000000000000;
    v82[4] = 0;
    v82[5] = 0;
    objc_msgSend(v8, sel_setTransform_, v82);
    objc_msgSend(v8, sel_setFrame_, 0.0, 0.0, 0.0, 0.0);

  }
  while (v4 != v6);
LABEL_10:
  swift_bridgeObjectRelease();
  v9 = v79;
  v10 = *(void **)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_markerLayer];
  sub_1BAB6DC88();
  v12 = v11;
  objc_msgSend(v10, sel_setPath_, v11);

  v13 = *(void **)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionView];
  v14 = (CGRect *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame];
  v15 = *(_QWORD *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame];
  v16 = *(_QWORD *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame + 8];
  v17 = *(_QWORD *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame + 16];
  v18 = *(_QWORD *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame + 24];
  if ((v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_direction] & 1) != 0)
  {
    MinY = CGRectGetMinY(*(CGRect *)&v15);
    v20 = (CGRect *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds];
    v21 = MinY - CGRectGetMinY(*(CGRect *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds]);
    objc_msgSend(v79, sel_frame);
    v22 = v21 - CGRectGetMinY(v84);
    Height = CGRectGetHeight(*v14);
    objc_msgSend(v79, sel_bounds);
    v24 = 0.0;
    objc_msgSend(v13, sel_setFrame_, v22, 0.0, Height, CGRectGetHeight(v85));
    v25 = *(void **)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionView];
    v26 = (CGRect *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame];
    v27 = CGRectGetMinY(*(CGRect *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame]);
    v28 = v27 - CGRectGetMinY(*v20);
    objc_msgSend(v79, sel_frame);
    v29 = v28 - CGRectGetMinY(v86);
    v30 = CGRectGetHeight(*v26);
    objc_msgSend(v79, sel_bounds);
    objc_msgSend(v25, sel_setFrame_, v29, 0.0, v30, CGRectGetHeight(v87));
    v31 = *(void **)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_indicatorView];
    v32 = objc_msgSend(v79, sel_superview);
    Width = 0.0;
    if (v32)
    {
      v34 = v32;
      objc_msgSend(v32, sel_bounds);
      v36 = v35;
      v38 = v37;
      v40 = v39;
      v42 = v41;

      v88.origin.x = v36;
      v88.origin.y = v38;
      v88.size.width = v40;
      v88.size.height = v42;
      Width = CGRectGetWidth(v88);
    }
    objc_msgSend(v79, sel_bounds, v79);
    v43 = CGRectGetHeight(v89);
    objc_msgSend(v9, sel_bounds);
    v44 = CGRectGetWidth(v90);
    v45 = objc_msgSend(v9, sel_superview);
    if (v45)
    {
      v46 = v45;
      objc_msgSend(v45, sel_bounds);
      v48 = v47;
      v50 = v49;
      v52 = v51;
      v54 = v53;

      v91.origin.x = v48;
      v91.origin.y = v50;
      v91.size.width = v52;
      v91.size.height = v54;
      v24 = CGRectGetWidth(v91);
    }
    objc_msgSend(v31, sel_setFrame_, 0.0, v43 - Width, v44, v24, v80);
  }
  else
  {
    MinX = CGRectGetMinX(*(CGRect *)&v15);
    v56 = (CGRect *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds];
    v57 = MinX - CGRectGetMinX(*(CGRect *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds]);
    objc_msgSend(v79, sel_frame);
    v58 = v57 - CGRectGetMinX(v92);
    v59 = CGRectGetWidth(*v14);
    objc_msgSend(v79, sel_bounds);
    v60 = 0.0;
    objc_msgSend(v13, sel_setFrame_, v58, 0.0, v59, CGRectGetHeight(v93));
    v61 = *(void **)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionView];
    v62 = (CGRect *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame];
    v63 = CGRectGetMinX(*(CGRect *)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame]);
    v64 = v63 - CGRectGetMinX(*v56);
    objc_msgSend(v79, sel_frame);
    v65 = v64 - CGRectGetMinX(v94);
    v66 = CGRectGetWidth(*v62);
    objc_msgSend(v79, sel_bounds);
    objc_msgSend(v61, sel_setFrame_, v65, 0.0, v66, CGRectGetHeight(v95));
    v67 = *(void **)&v79[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_indicatorView];
    objc_msgSend(v79, sel_bounds);
    v68 = CGRectGetWidth(v96);
    v69 = objc_msgSend(v79, sel_superview);
    if (v69)
    {
      v70 = v69;
      objc_msgSend(v69, sel_bounds);
      v72 = v71;
      v74 = v73;
      v76 = v75;
      v78 = v77;

      v97.origin.x = v72;
      v97.origin.y = v74;
      v97.size.width = v76;
      v97.size.height = v78;
      v60 = CGRectGetHeight(v97);
    }
    objc_msgSend(v67, sel_setFrame_, 0.0, 0.0, v68, v60, v79);
  }
  return objc_msgSend(v81, sel_commit);
}

void sub_1BAB6DC88()
{
  _BYTE *v0;
  uint64_t v1;
  double v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double MinY;
  double v14;
  double MaxY;
  double MinX;
  char *v17;
  double v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  double v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double Height;
  double v32;
  double v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  double v39;
  _QWORD *v40;
  void *v41;
  double v42;
  id v43;
  id v44;
  CGFloat tx;
  CGFloat ty;
  CGFloat v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  CGAffineTransform v55;
  CGAffineTransform t2;
  CGAffineTransform t1;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;

  v1 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_scale;
  v2 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_edge]
     / *(double *)&v0[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_scale];
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v3 = v0;
  v4 = (uint64_t)v2;
  if ((uint64_t)v2 < 2)
    return;
  CGPathCreateMutable();
  v58 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_markerLabels];
  if (v4 + 0x4000000000000000 >= 0)
  {
    v5 = -v4;
    v54 = 2 * v4;
    if (2 * v4 >= -v4)
    {
      v6 = &v3[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds];
      v7 = v3[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_direction];
      swift_bridgeObjectRetain();
      while (1)
      {
        v8 = *(double *)&v3[v1] * (double)v5;
        v9 = *(_QWORD *)v6;
        v10 = *((_QWORD *)v6 + 1);
        v11 = *((_QWORD *)v6 + 2);
        v12 = *((_QWORD *)v6 + 3);
        if ((v7 & 1) != 0)
        {
          MinY = CGRectGetMinY(*(CGRect *)&v9);
          objc_msgSend(v3, sel_frame);
          if (MinY + CGRectGetMinY(v65) < v8)
          {
            v14 = CGRectGetMinY(*(CGRect *)v6);
            objc_msgSend(v3, sel_frame);
            MaxY = CGRectGetMaxY(v66);
            goto LABEL_13;
          }
        }
        else
        {
          MinX = CGRectGetMinX(*(CGRect *)&v9);
          objc_msgSend(v3, sel_frame);
          if (MinX + CGRectGetMinX(v67) < v8)
          {
            v14 = CGRectGetMinX(*(CGRect *)v6);
            objc_msgSend(v3, sel_frame);
            MaxY = CGRectGetMaxX(v68);
LABEL_13:
            if (v8 < v14 + MaxY)
            {
              v17 = (char *)MEMORY[0x1E0DEE9D8];
              if (*(double *)&v3[v1] > 0.0)
              {
                objc_msgSend(v3, sel_bounds);
                v18 = CGRectGetWidth(v69) / *(double *)&v3[v1];
                v17 = (char *)&unk_1E7269678;
                if (v18 > 100.0)
                {
                  v17 = (char *)&unk_1E72696C8;
                  if (v18 > 200.0)
                  {
                    v17 = (char *)&unk_1E7269718;
                    if (v18 > 500.0)
                    {
                      if (v18 > 1000.0)
                        v17 = (char *)&unk_1E72697B8;
                      else
                        v17 = (char *)&unk_1E7269768;
                    }
                  }
                }
              }
              v19 = *((_QWORD *)v17 + 2);
              if (v19)
              {
                v20 = (unsigned __int8 *)(v17 + 48);
                while (1)
                {
                  v21 = *((_QWORD *)v20 - 2);
                  if (!v21)
                  {
                    __break(1u);
LABEL_55:
                    __break(1u);
                    goto LABEL_56;
                  }
                  if (v5 == 0x8000000000000000 && v21 == -1)
                    goto LABEL_55;
                  if (!(v5 % v21))
                    break;
                  v20 += 24;
                  if (!--v19)
                    goto LABEL_28;
                }
                v23 = *((double *)v20 - 1);
                v24 = *v20;
                swift_bridgeObjectRelease();
                v25 = *(_QWORD *)v6;
                v26 = *((_QWORD *)v6 + 1);
                v27 = *((_QWORD *)v6 + 2);
                v28 = *((_QWORD *)v6 + 3);
                if ((v7 & 1) != 0)
                {
                  v29 = v8 - CGRectGetMinY(*(CGRect *)&v25);
                  objc_msgSend(v3, sel_frame);
                  v30 = v29 - CGRectGetMinY(v70);
                  objc_msgSend(v3, sel_bounds);
                  Height = v23 * CGRectGetHeight(v71);
                  v32 = 0.0;
                }
                else
                {
                  v33 = v8 - CGRectGetMinX(*(CGRect *)&v25);
                  objc_msgSend(v3, sel_frame);
                  v30 = v33 - CGRectGetMinX(v72);
                  objc_msgSend(v3, sel_bounds);
                  v32 = (1.0 - v23) * CGRectGetHeight(v73);
                  objc_msgSend(v3, sel_bounds);
                  Height = CGRectGetHeight(v74);
                }
                sub_1BAB6EA48();
                v34 = swift_allocObject();
                *(_OWORD *)(v34 + 16) = xmmword_1BB87A390;
                *(double *)(v34 + 32) = v30;
                *(double *)(v34 + 40) = v32;
                *(double *)(v34 + 48) = v30;
                *(double *)(v34 + 56) = Height;
                v60 = 0;
                v61 = 0;
                v59 = 0x3FF0000000000000;
                v62 = 0x3FF0000000000000;
                v63 = 0;
                v64 = 0;
                sub_1BB873360();
                swift_bridgeObjectRelease();
                if (v24)
                {
                  v35 = v58;
                  if (v58 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    v51 = sub_1BB873F30();
                    swift_bridgeObjectRelease();
                    if (!v51)
                      goto LABEL_29;
                  }
                  else if (!*(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    goto LABEL_29;
                  }
                  if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                    || (v35 & 0x8000000000000000) != 0
                    || (v35 & 0x4000000000000000) != 0)
                  {
                    sub_1BAA67DA8(v35);
                  }
                  v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  if (!v36)
                    goto LABEL_62;
                  v37 = v36 - 1;
                  v38 = *(void **)((v35 & 0xFFFFFFFFFFFFFF8) + 8 * v37 + 0x20);
                  *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) = v37;
                  sub_1BB872DCC();
                  *(_QWORD *)&t1.a = 32;
                  t1.b = -1.7573882e159;
                  v39 = v8 / *(double *)&v3[v1];
                  if ((~*(_QWORD *)&v39 & 0x7FF0000000000000) == 0)
                    goto LABEL_63;
                  if (v39 <= -9.22337204e18)
                    goto LABEL_64;
                  if (v39 >= 9.22337204e18)
                    goto LABEL_65;
                  *(_QWORD *)&t2.a = (uint64_t)v39;
                  sub_1BB87420C();
                  sub_1BB872AFC(v40);
                  swift_bridgeObjectRelease();
                  v41 = (void *)sub_1BB872970();
                  swift_bridgeObjectRelease();
                  objc_msgSend(v38, sel_setText_, v41);

                  v42 = *(double *)&v3[v1] * (double)v21;
                  v43 = v38;
                  objc_msgSend(v3, sel_bounds);
                  objc_msgSend(v43, sel_setFrame_, v30, v32, v42, CGRectGetHeight(v75));

                  if ((v7 & 1) != 0)
                  {
                    v44 = objc_msgSend(v43, sel_layer);
                    objc_msgSend(v44, sel_setAnchorPoint_, 0.0, 0.0);

                    CGAffineTransformMakeRotation(&t1, -3.14159265);
                    v52 = *(_OWORD *)&t1.c;
                    v53 = *(_OWORD *)&t1.a;
                    tx = t1.tx;
                    ty = t1.ty;
                    v43 = v43;
                    objc_msgSend(v43, sel_bounds);
                    v47 = CGRectGetHeight(v76);
                    CGAffineTransformMakeTranslation(&t1, 0.0, v47);
                    v48 = *(_OWORD *)&t1.a;
                    v49 = *(_OWORD *)&t1.c;
                    v50 = *(_OWORD *)&t1.tx;
                    *(_OWORD *)&t1.a = v53;
                    *(_OWORD *)&t1.c = v52;
                    t1.tx = tx;
                    t1.ty = ty;
                    *(_OWORD *)&t2.a = v48;
                    *(_OWORD *)&t2.c = v49;
                    *(_OWORD *)&t2.tx = v50;
                    CGAffineTransformConcat(&v55, &t1, &t2);
                    t1 = v55;
                    objc_msgSend(v43, sel_setTransform_, &t1);

                  }
                }
              }
              else
              {
LABEL_28:
                swift_bridgeObjectRelease();
              }
            }
          }
        }
LABEL_29:
        if (v5 == v54)
        {
          swift_bridgeObjectRelease();
          return;
        }
        if (__OFADD__(v5++, 1))
        {
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
      }
    }
    goto LABEL_61;
  }
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
}

unint64_t sub_1BAB6E42C(void *a1)
{
  char *v1;
  unint64_t result;
  char *v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  result = (unint64_t)objc_msgSend(a1, sel_state);
  if (result <= 5)
  {
    if (((1 << result) & 0x39) != 0)
    {
      v4 = *(char **)&v1[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_indicatorView];
      *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_selections] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      return (unint64_t)objc_msgSend(v4, sel_setNeedsLayout);
    }
    else
    {
      v5 = *(char **)&v1[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_indicatorView];
      result = (unint64_t)objc_msgSend(a1, sel_numberOfTouches);
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v6 = result;
        v7 = a1;
        v8 = v1;
        sub_1BAB6E78C(0, v6, v7, v8);
        v10 = v9;

        *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed29DebugFormatRulerIndicatorView_selections] = v10;
        swift_bridgeObjectRelease();
        return (unint64_t)objc_msgSend(v5, sel_setNeedsLayout);
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatRulerEdgeView()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for DebugFormatRulerEdgeView.Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB6E6C4 + 4 * byte_1BB8A55F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB6E6F8 + 4 * byte_1BB8A55F0[v4]))();
}

uint64_t sub_1BAB6E6F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6E700(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB6E708);
  return result;
}

uint64_t sub_1BAB6E714(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB6E71CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB6E720(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6E728(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatRulerEdgeView.Direction()
{
  return &type metadata for DebugFormatRulerEdgeView.Direction;
}

unint64_t sub_1BAB6E748()
{
  unint64_t result;

  result = qword_1EF2B0E28;
  if (!qword_1EF2B0E28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A5664, &type metadata for DebugFormatRulerEdgeView.Direction);
    atomic_store(result, (unint64_t *)&qword_1EF2B0E28);
  }
  return result;
}

void sub_1BAB6E78C(uint64_t a1, uint64_t a2, void *a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v7;
  char *v8;
  void *v9;
  double v10;
  double v11;
  double MaxX;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double MinY;
  CGFloat v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double MinX;
  CGFloat v27;
  double v28;
  double v29;
  double v30;
  CGFloat Height;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
    goto LABEL_30;
  if (v4)
  {
    v7 = a1;
    v38 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AB08(0, v4 & ~(v4 >> 63), 0);
    if (a2 < v7 || v4 < 0)
      goto LABEL_31;
    v8 = &a4[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds];
    v36 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_scale;
    v9 = *(void **)&a4[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentView];
    v35 = a4[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_direction];
    while (a2 != v7)
    {
      objc_msgSend(a3, sel_locationOfTouch_inView_, v7, v9);
      v11 = v10;
      objc_msgSend(v9, sel_frame);
      MaxX = CGRectGetMaxX(v39);
      if (v11 < 0.0)
        v13 = 0.0;
      else
        v13 = v11;
      if (v13 >= MaxX)
        v14 = MaxX;
      else
        v14 = v13;
      v15 = *(_QWORD *)v8;
      v16 = *((_QWORD *)v8 + 1);
      v17 = *((_QWORD *)v8 + 2);
      v18 = *((_QWORD *)v8 + 3);
      if ((v35 & 1) != 0)
      {
        MinY = CGRectGetMinY(*(CGRect *)&v15);
        objc_msgSend(a4, sel_frame);
        v20 = CGRectGetMinY(v40);
        v21 = *(double *)&a4[v36];
        v22 = ceil((v14 + MinY + v20) / v21);
        v23 = v21 * v22;
        v24 = CGRectGetMinY(*(CGRect *)v8);
        objc_msgSend(a4, sel_frame);
        v25 = CGRectGetMinY(v41);
      }
      else
      {
        MinX = CGRectGetMinX(*(CGRect *)&v15);
        objc_msgSend(a4, sel_frame);
        v27 = CGRectGetMinX(v42);
        v28 = *(double *)&a4[v36];
        v22 = ceil((v14 + MinX + v27) / v28);
        v23 = v28 * v22;
        v24 = CGRectGetMinX(*(CGRect *)v8);
        objc_msgSend(a4, sel_frame);
        v25 = CGRectGetMinX(v43);
      }
      v29 = v23 - (v24 + v25);
      if (v29 > 0.0)
        v30 = v29;
      else
        v30 = 0.0;
      if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
        goto LABEL_27;
      if (v22 <= -9.22337204e18)
        goto LABEL_28;
      if (v22 >= 9.22337204e18)
        goto LABEL_29;
      objc_msgSend(a4, sel_bounds);
      Height = CGRectGetHeight(v44);
      v33 = *(_QWORD *)(v38 + 16);
      v32 = *(_QWORD *)(v38 + 24);
      if (v33 >= v32 >> 1)
        sub_1BAC7AB08(v32 > 1, v33 + 1, 1);
      *(_QWORD *)(v38 + 16) = v33 + 1;
      v34 = v38 + 24 * v33;
      *(_QWORD *)(v34 + 32) = (uint64_t)v22;
      *(double *)(v34 + 40) = v30;
      *(CGFloat *)(v34 + 48) = Height;
      if (a2 == ++v7)
        return;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
}

void sub_1BAB6EA48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39DCA8)
  {
    type metadata accessor for CGPoint(255);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39DCA8);
  }
}

uint64_t sub_1BAB6EA9C()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_scale] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_edge] = 0x3FF0000000000000;
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentBounds];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v3 = &v0[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_canvasOffset];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = &v0[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v5 = &v0[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v6 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_markerLayer;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v15 = MEMORY[0x1E0DEE9D8];
  v7 = 21;
  sub_1BB873DD4();
  v8 = 0;
  v9 = 0;
  while (!v9)
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_1BB873DB0();
    sub_1BB873DE0();
    sub_1BB873DEC();
    sub_1BB873DBC();
    v9 = v8 == 20;
    if (v8 == 20)
    {
      v8 = 0;
    }
    else if (__OFADD__(v8++, 1))
    {
      __break(1u);
      break;
    }
    if (!--v7)
      goto LABEL_10;
  }
  __break(1u);
LABEL_10:
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_markerLabels] = v15;
  v11 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_contentView;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionView;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionView;
  *(_QWORD *)&v1[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  result = sub_1BB873EAC();
  __break(1u);
  return result;
}

void sub_1BAB6ECE0()
{
  uint64_t v0;
  char v1;
  int v2;
  BOOL v3;

  v1 = *(_BYTE *)(v0 + 48);
  v3 = (v1 & 0xF0) == 48;
  v2 = ((2 * *(_BYTE *)(v0 + 49)) | ((v1 & 8) != 0));
  v3 = v3 && v2 == 2;
  if (v3)
    __asm { BR              X13 }
}

void FormatFloat.bindChildren(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAB6EDA4()
{
  swift_retain();
  FormatFloat.bind(binder:context:)();
  return swift_release();
}

void FormatAccessibilityContent.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v5 = (_QWORD *)*v2;
  v6 = *v2 >> 62;
  if ((_DWORD)v6)
  {
    if ((_DWORD)v6 == 1)
    {
      v7 = v5[2];
      v8 = v5[3];
      v9 = v5[4];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BAB6EED4(a1, a2, v7, v8, v9);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    FormatTextNodeBinding.bind(binder:context:)(a1, a2);
  }
}

void sub_1BAB6EED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;

  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(a3 + 32);
  v10 = *(_BYTE *)(a3 + 41);
  v11 = *(unsigned __int8 *)(a3 + 40);
  swift_retain();
  sub_1BAC65170(v7, v8, v9, v11, v10, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  FormatCommandBinding.bind(binder:context:)();
  sub_1BAC65170(v7, v8, v9, v11, v10, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  swift_release();
  if (!v17)
  {
    sub_1BAB7A30C(a1, a2, a4);
    if (a5 >> 62)
    {
      if (a5 >> 62 != 1)
        return;
      v12 = *(_QWORD *)(a5 + 16);
      v13 = *(_QWORD *)(a5 + 24);
      v14 = *(_QWORD *)(a5 + 32);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BAB6EED4(a1, a2, v12, v13, v14);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      FormatTextNodeBinding.bind(binder:context:)(a1, a2);
    }
    swift_release();
  }
}

uint64_t sub_1BAB6F0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unsigned int v11;
  uint64_t result;
  uint64_t v15;

  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(a3 + 32);
  v10 = *(_BYTE *)(a3 + 41);
  v11 = *(unsigned __int8 *)(a3 + 40);
  swift_retain();
  sub_1BAC65170(v7, v8, v9, v11, v10, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  FormatCommandBinding.bind(binder:context:)();
  sub_1BAC65170(v7, v8, v9, v11, v10, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  result = swift_release();
  if (!v15)
  {
    sub_1BAB7F9A0(a1, a2, a4);
    swift_retain();
    sub_1BABD3FF4(a1, a2, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAB6F1E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  uint64_t result;
  uint64_t v13;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_BYTE *)(a3 + 41);
  v10 = *(unsigned __int8 *)(a3 + 40);
  swift_retain();
  sub_1BAC65170(v6, v7, v8, v10, v9, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  FormatCommandBinding.bind(binder:context:)();
  sub_1BAC65170(v6, v7, v8, v10, v9, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  result = swift_release();
  if (!v13)
  {
    sub_1BAB8F380(a1, a2, a4);
    swift_retain();
    FormatSyncImageContent.bind(binder:context:)(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAB6F320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned int v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;

  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(a3 + 32);
  v11 = *(_BYTE *)(a3 + 41);
  v12 = *(unsigned __int8 *)(a3 + 40);
  swift_retain();
  sub_1BAC65170(v8, v9, v10, v12, v11, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  FormatCommandBinding.bind(binder:context:)();
  sub_1BAC65170(v8, v9, v10, v12, v11, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  result = swift_release();
  if (!v20)
  {
    v14 = *(_QWORD *)(a4 + 16);
    if (v14)
    {
      v15 = swift_bridgeObjectRetain() + 56;
      do
      {
        v17 = *(_QWORD *)(v15 - 24);
        v16 = *(_QWORD *)(v15 - 16);
        v18 = *(_BYTE *)(v15 - 8);
        sub_1BA73B1CC(v17, v16, v18);
        swift_retain_n();
        a6(a1, a2);
        v15 += 32;
        swift_release();
        sub_1BA73B1B8(v17, v16, v18);
        swift_release();
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
    }
    swift_retain();
    a6(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t FormatCommandValue.bind(binder:context:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_retain();
  FormatCommand.bind(binder:context:)();
  result = swift_release();
  if (!v4)
  {
    v9 = *(_QWORD *)(v3 + 8);
    v10 = a3[2];
    v11 = a3[3];
    v12 = a3[4];
    v13 = type metadata accessor for FormatCommandValue.CaseValue(0, v10, v11, v12);
    Array<A>.bind(binder:context:)(a1, a2, v9, v13, (uint64_t)&off_1E729D270);
    v14 = type metadata accessor for FormatCommandValue.DefaultValue(0, v10, v11, v12);
    return sub_1BABB09A8(a1, a2, v14);
  }
  return result;
}

void sub_1BAB6F610(uint64_t a1, uint64_t a2)
{
  FormatAccessibilityContent.bind(binder:context:)(a1, a2);
}

uint64_t FormatAccessibilityData.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;

  if ((*v2 & 0x8000000000000000) != 0)
  {
    v4 = result;
    swift_retain();
    sub_1BAB71A3C(v4, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAB6F680(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 24);
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = v3 + 32;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  swift_retain();
  FormatMenuGroupableData.bind(binder:context:)(a1, a2);
  return swift_release();
}

void sub_1BAB71934(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  sub_1BAB79F78(a1, a2, *(_QWORD *)(v2 + 24));
  if (!v3)
  {
    v6 = *(void **)(v2 + 32);
    sub_1BA49DEA8();
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    v7 = v6;
    if (swift_dynamicCast())
    {
      v8 = *((_QWORD *)&v11 + 1);
      v9 = v12;
      __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, v8, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
    }
    else
    {
      v12 = 0;
      v10 = 0u;
      v11 = 0u;
      sub_1BA65DB80((uint64_t)&v10, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    }
  }
}

uint64_t sub_1BAB71A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v4 = v3;
  result = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(result + 16);
  if (v6)
  {
    v7 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
    while (1)
    {
      v8 = *(v7 - 3);
      v9 = *(v7 - 2);
      v10 = *((unsigned __int8 *)v7 - 8);
      v11 = *v7;
      sub_1BA73B1CC(v8, v9, *((_BYTE *)v7 - 8));
      swift_retain();
      sub_1BABC99CC(a1, a2, v8, v9, v10, v11);
      if (v3)
        break;
      v7 += 4;
      sub_1BA73B1B8(v8, v9, v10);
      swift_release();
      if (!--v6)
      {
        result = swift_bridgeObjectRelease();
        v2 = v100;
        goto LABEL_6;
      }
    }
    sub_1BA73B1B8(v8, v9, v10);
    swift_bridgeObjectRelease();
    return swift_release();
  }
LABEL_6:
  v12 = *(_QWORD *)(v2 + 32);
  if ((v12 & 0x8000000000000000) == 0)
    return result;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v13 + 24);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    swift_retain();
    v101 = v13;
    swift_retain();
    swift_bridgeObjectRetain();
    v16 = (uint64_t *)(v14 + 56);
    do
    {
      v17 = *(v16 - 3);
      v18 = *(v16 - 2);
      v19 = *((unsigned __int8 *)v16 - 8);
      v20 = *v16;
      sub_1BA73B1CC(v17, v18, *((_BYTE *)v16 - 8));
      swift_retain();
      sub_1BABC99CC(a1, a2, v17, v18, v19, v20);
      if (v4)
      {
        sub_1BA73B1B8(v17, v18, v19);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      v16 += 4;
      sub_1BA73B1B8(v17, v18, v19);
      swift_release();
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    v21 = *(_QWORD *)(v101 + 32);
    if ((v21 & 0x8000000000000000) == 0)
      goto LABEL_89;
LABEL_15:
    v22 = *(_QWORD *)(v21 + 16);
    v23 = *(_QWORD *)(v22 + 24);
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      swift_retain();
      v99 = v22;
      swift_retain();
      swift_bridgeObjectRetain();
      v25 = (uint64_t *)(v23 + 56);
      while (1)
      {
        v26 = *(v25 - 3);
        v27 = *(v25 - 2);
        v28 = *((unsigned __int8 *)v25 - 8);
        v29 = *v25;
        sub_1BA73B1CC(v26, v27, *((_BYTE *)v25 - 8));
        swift_retain();
        sub_1BABC99CC(a1, a2, v26, v27, v28, v29);
        if (v4)
          break;
        v25 += 4;
        sub_1BA73B1B8(v26, v27, v28);
        swift_release();
        if (!--v24)
        {
          swift_bridgeObjectRelease();
          v22 = v99;
          goto LABEL_22;
        }
      }
      sub_1BA73B1B8(v26, v27, v28);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_107;
    }
    swift_retain();
    swift_retain();
LABEL_22:
    v30 = *(_QWORD *)(v22 + 32);
    if ((v30 & 0x8000000000000000) == 0)
      goto LABEL_88;
    v31 = *(_QWORD *)(v30 + 16);
    v32 = *(_QWORD *)(v31 + 24);
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      swift_retain();
      v98 = v31;
      swift_retain();
      swift_bridgeObjectRetain();
      v34 = (uint64_t *)(v32 + 56);
      while (1)
      {
        v35 = *(v34 - 3);
        v36 = *(v34 - 2);
        v37 = *((unsigned __int8 *)v34 - 8);
        v38 = *v34;
        sub_1BA73B1CC(v35, v36, *((_BYTE *)v34 - 8));
        swift_retain();
        sub_1BABC99CC(a1, a2, v35, v36, v37, v38);
        if (v4)
          break;
        v34 += 4;
        sub_1BA73B1B8(v35, v36, v37);
        swift_release();
        if (!--v33)
        {
          swift_bridgeObjectRelease();
          v31 = v98;
          goto LABEL_30;
        }
      }
      sub_1BA73B1B8(v35, v36, v37);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_106;
    }
    swift_retain();
    swift_retain();
LABEL_30:
    v39 = *(_QWORD *)(v31 + 32);
    if ((v39 & 0x8000000000000000) == 0)
    {
      swift_release();
      swift_release();
LABEL_88:
      swift_release();
      swift_release();
      goto LABEL_89;
    }
    v40 = *(_QWORD *)(v39 + 16);
    v41 = *(_QWORD *)(v40 + 24);
    v42 = *(_QWORD *)(v41 + 16);
    if (v42)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v43 = (uint64_t *)(v41 + 56);
      while (1)
      {
        v44 = *(v43 - 3);
        v45 = *(v43 - 2);
        v46 = *((unsigned __int8 *)v43 - 8);
        v47 = *v43;
        sub_1BA73B1CC(v44, v45, *((_BYTE *)v43 - 8));
        swift_retain();
        sub_1BABC99CC(a1, a2, v44, v45, v46, v47);
        if (v4)
          break;
        v43 += 4;
        sub_1BA73B1B8(v44, v45, v46);
        swift_release();
        if (!--v42)
        {
          swift_bridgeObjectRelease();
          goto LABEL_39;
        }
      }
      sub_1BA73B1B8(v44, v45, v46);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_105;
    }
    swift_retain();
    swift_retain();
LABEL_39:
    v48 = *(_QWORD *)(v40 + 32);
    if ((v48 & 0x8000000000000000) == 0)
    {
LABEL_87:
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_88;
    }
    v49 = *(_QWORD *)(v48 + 16);
    v50 = *(_QWORD *)(*(_QWORD *)(v49 + 24) + 16);
    if (v50)
    {
      v51 = *(_QWORD *)(v49 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v52 = (uint64_t *)(v51 + 56);
      while (1)
      {
        v53 = *(v52 - 3);
        v54 = *(v52 - 2);
        v55 = *((unsigned __int8 *)v52 - 8);
        v56 = *v52;
        sub_1BA73B1CC(v53, v54, *((_BYTE *)v52 - 8));
        swift_retain();
        sub_1BABC99CC(a1, a2, v53, v54, v55, v56);
        if (v4)
          break;
        v52 += 4;
        sub_1BA73B1B8(v53, v54, v55);
        swift_release();
        if (!--v50)
        {
          swift_bridgeObjectRelease();
          goto LABEL_47;
        }
      }
      sub_1BA73B1B8(v53, v54, v55);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_104;
    }
    swift_retain();
    swift_retain();
LABEL_47:
    v57 = *(_QWORD *)(v49 + 32);
    if ((v57 & 0x8000000000000000) == 0)
    {
LABEL_86:
      swift_release();
      swift_release();
      goto LABEL_87;
    }
    v58 = *(_QWORD *)(v57 + 16);
    v59 = *(_QWORD *)(v58 + 24);
    v60 = *(_QWORD *)(v59 + 16);
    if (v60)
    {
      swift_retain();
      v97 = v58;
      swift_retain();
      swift_bridgeObjectRetain();
      v61 = (uint64_t *)(v59 + 56);
      while (1)
      {
        v63 = *(v61 - 3);
        v62 = *(v61 - 2);
        v64 = *((unsigned __int8 *)v61 - 8);
        v65 = *v61;
        sub_1BA73B1CC(v63, v62, *((_BYTE *)v61 - 8));
        swift_retain();
        sub_1BABC99CC(a1, a2, v63, v62, v64, v65);
        if (v4)
          break;
        v61 += 4;
        sub_1BA73B1B8(v63, v62, v64);
        swift_release();
        if (!--v60)
        {
          swift_bridgeObjectRelease();
          v58 = v97;
          goto LABEL_56;
        }
      }
      sub_1BA73B1B8(v63, v62, v64);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_103;
    }
    swift_retain();
    swift_retain();
LABEL_56:
    v66 = *(_QWORD *)(v58 + 32);
    if ((v66 & 0x8000000000000000) == 0)
    {
      swift_release();
      swift_release();
      goto LABEL_86;
    }
    v67 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v66 + 16) + 24) + 16);
    v96 = *(_QWORD *)(v66 + 16);
    if (v67)
    {
      swift_retain();
      swift_retain();
      v68 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        v70 = *(v68 - 3);
        v69 = *(v68 - 2);
        v71 = *((unsigned __int8 *)v68 - 8);
        v72 = *v68;
        sub_1BA73B1CC(v70, v69, *((_BYTE *)v68 - 8));
        swift_retain();
        sub_1BABC99CC(a1, a2, v70, v69, v71, v72);
        if (v4)
          break;
        v68 += 4;
        sub_1BA73B1B8(v70, v69, v71);
        swift_release();
        if (!--v67)
        {
          swift_bridgeObjectRelease();
          goto LABEL_65;
        }
      }
      sub_1BA73B1B8(v70, v69, v71);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_102;
    }
    swift_retain();
    swift_retain();
LABEL_65:
    v73 = *(_QWORD *)(v96 + 32);
    if ((v73 & 0x8000000000000000) == 0)
    {
LABEL_85:
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_86;
    }
    v95 = *(_QWORD *)(v73 + 16);
    v74 = *(_QWORD *)(*(_QWORD *)(v95 + 24) + 16);
    if (v74)
    {
      swift_retain();
      swift_retain();
      v75 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        v77 = *(v75 - 3);
        v76 = *(v75 - 2);
        v78 = *((unsigned __int8 *)v75 - 8);
        v79 = *v75;
        sub_1BA73B1CC(v77, v76, *((_BYTE *)v75 - 8));
        swift_retain();
        sub_1BABC99CC(a1, a2, v77, v76, v78, v79);
        if (v4)
          break;
        v75 += 4;
        sub_1BA73B1B8(v77, v76, v78);
        swift_release();
        if (!--v74)
        {
          swift_bridgeObjectRelease();
          goto LABEL_74;
        }
      }
      sub_1BA73B1B8(v77, v76, v78);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      swift_retain();
      swift_retain();
LABEL_74:
      v80 = *(_QWORD *)(v95 + 32);
      if ((v80 & 0x8000000000000000) == 0)
      {
        swift_release();
        swift_release();
        goto LABEL_85;
      }
      v94 = *(_QWORD *)(v80 + 16);
      v81 = *(_QWORD *)(*(_QWORD *)(v94 + 24) + 16);
      if (v81)
      {
        swift_retain();
        swift_retain();
        v82 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
        while (1)
        {
          v84 = *(v82 - 3);
          v83 = *(v82 - 2);
          v85 = *((unsigned __int8 *)v82 - 8);
          v86 = *v82;
          sub_1BA73B1CC(v84, v83, *((_BYTE *)v82 - 8));
          swift_retain();
          sub_1BABC99CC(a1, a2, v84, v83, v85, v86);
          if (v4)
            break;
          v82 += 4;
          sub_1BA73B1B8(v84, v83, v85);
          swift_release();
          if (!--v81)
          {
            swift_bridgeObjectRelease();
            goto LABEL_83;
          }
        }
        sub_1BA73B1B8(v84, v83, v85);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      else
      {
        swift_retain();
        swift_retain();
LABEL_83:
        v87 = *(_QWORD *)(v94 + 32);
        if ((v87 & 0x8000000000000000) == 0)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_85;
        }
        v88 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v87 + 16) + 24) + 16);
        if (!v88)
        {
          swift_retain();
          swift_retain();
LABEL_97:
          swift_retain();
          sub_1BAB72910(a1, a2, (uint64_t)&type metadata for FormatAccessibilityData, (uint64_t)&protocol witness table for FormatAccessibilityData);
          if (!v4)
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            goto LABEL_85;
          }
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
LABEL_101:
          swift_release();
LABEL_102:
          swift_release();
          swift_release();
LABEL_103:
          swift_release();
          swift_release();
LABEL_104:
          swift_release();
          swift_release();
LABEL_105:
          swift_release();
          swift_release();
LABEL_106:
          swift_release();
          swift_release();
LABEL_107:
          swift_release();
          swift_release();
          return swift_release();
        }
        swift_retain();
        swift_retain();
        v89 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
        while (1)
        {
          v91 = *(v89 - 3);
          v90 = *(v89 - 2);
          v92 = *((unsigned __int8 *)v89 - 8);
          v93 = *v89;
          sub_1BA73B1CC(v91, v90, *((_BYTE *)v89 - 8));
          swift_retain();
          sub_1BABC99CC(a1, a2, v91, v90, v92, v93);
          if (v4)
            break;
          v89 += 4;
          sub_1BA73B1B8(v91, v90, v92);
          swift_release();
          if (!--v88)
          {
            swift_bridgeObjectRelease();
            goto LABEL_97;
          }
        }
        sub_1BA73B1B8(v91, v90, v92);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_101;
  }
  swift_retain();
  swift_retain();
  v21 = *(_QWORD *)(v13 + 32);
  if (v21 < 0)
    goto LABEL_15;
LABEL_89:
  swift_release();
  return swift_release();
}

uint64_t FormatCommandActionValue.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = v4[3];
  v9 = *(_QWORD *)(*v4 + 80);
  v10 = type metadata accessor for FormatCommandActionValue.CaseValue(0, v9, a3, a4);
  result = Array<A>.bind(binder:context:)(a1, a2, v8, v10, (uint64_t)&off_1E729D260);
  if (!v5)
  {
    v14 = type metadata accessor for FormatCommandActionValue.DefaultValue(0, v9, v12, v13);
    return sub_1BABB09A8(a1, a2, v14);
  }
  return result;
}

uint64_t sub_1BAB72910(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;

  v6 = v5;
  if ((*(_QWORD *)v4 & 0x8000000000000000) != 0)
  {
    v10 = result;
    v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 16) + 24);
    swift_retain();
    sub_1BAB7F29C(v10, a2, v11);
    if (!v6)
    {
      swift_retain();
      sub_1BAB72910(v10, a2, a3, a4);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAB729E0()
{
  return FormatAccessibilityNode.bind(binder:context:)();
}

uint64_t FormatValue.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BABB09A8(a1, a2, a3);
}

void sub_1BAB72A14()
{
  FormatAccessibilityProperty.bind(binder:context:)();
}

unint64_t FormatAdMetricsNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v14 = v2[6];
  sub_1BA71CA6C(v14);
  FormatSize.bind(binder:context:)();
  result = sub_1BA719718(v14);
  if (!v3)
  {
    swift_beginAccess();
    v7 = v2[8];
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v8; ++i)
      {
        v10 = *(_QWORD *)(v7 + 8 * i + 32);
        sub_1BA7196DC(v10);
        FormatAdjustment.bind(binder:context:)();
        sub_1BA719340(v10);
      }
      swift_bridgeObjectRelease_n();
    }
    result = swift_beginAccess();
    v11 = v2[10];
    if (v11 >> 62 == 1)
    {
      v12 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      sub_1BA67D3F4(v11);
      sub_1BA67D3F4(v12);
      swift_bridgeObjectRetain();
      sub_1BABC2BF8(a1, a2, v12, v13);
      sub_1BA6EEDB4(v12);
      swift_bridgeObjectRelease();
      return sub_1BA6EEDB4(v11);
    }
  }
  return result;
}

uint64_t sub_1BAB72BC0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v8 = result;
    swift_bridgeObjectRetain();
    v9 = a3 + 64;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(v8, a2);
      if (v4)
        break;
      v9 += 40;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v5)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1BAB72CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
}

uint64_t sub_1BAB72EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAB730C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2AD4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAB72EC8);
}

uint64_t sub_1BAB72EEC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v7;
  void *v8;
  uint64_t v9;
  ValueMetadata *v10;
  uint64_t v11;
  char v12;
  ValueMetadata *v13;
  void *v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  v18 = result;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return result;
  swift_bridgeObjectRetain();
  v7 = (unint64_t *)&qword_1ED3B3EE0;
  v8 = &protocol descriptor for FormatBindable;
  v9 = a3 + 64;
  v10 = &type metadata for FormatStateMachineEventValue;
  while (1)
  {
    v11 = *(_QWORD *)(v9 - 32);
    v12 = *(_BYTE *)(v9 - 16);
    v26 = *(_QWORD *)(v9 - 24);
    v22 = v12;
    sub_1BA73B1CC(v11, v26, v12);
    sub_1BA4D9CE8(0, v7);
    swift_bridgeObjectRetain_n();
    if (swift_dynamicCast())
      break;
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    sub_1BA65DB80((uint64_t)&v23, qword_1ED3B3EE8, v7);
    sub_1BA73B1B8(v11, v26, v22);
    swift_bridgeObjectRelease();
LABEL_4:
    v9 += 40;
    if (!--v5)
      return swift_bridgeObjectRelease();
  }
  v20 = v4;
  v21 = v11;
  v13 = v10;
  v14 = v8;
  v15 = v7;
  v16 = *((_QWORD *)&v24 + 1);
  v17 = v25;
  __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8))(v18, a2, v16, v17);
  v4 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  sub_1BA73B1B8(v21, v26, v22);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    v7 = v15;
    v8 = v14;
    v10 = v13;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB730A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAB730C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2AF8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAB730A0);
}

uint64_t sub_1BAB730C4(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = v5;
  v39 = result;
  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(a3 + 48); ; i += 3)
    {
      v11 = *i;
      if (*i < 0)
      {
        v13 = *(_QWORD *)(v11 + 16);
        v12 = *(_QWORD *)(v11 + 24);
        if (v13 < 0)
        {
          v14 = *(_QWORD *)(v13 + 16);
          v15 = *(_QWORD *)(v13 + 24);
          if (v14 < 0)
          {
            v38 = *(_QWORD *)(v13 + 24);
            v16 = *(_QWORD *)(v14 + 16);
            v17 = *(_QWORD *)(v14 + 24);
            if (v16 < 0)
            {
              v37 = *(_QWORD *)(v14 + 24);
              v18 = *(_QWORD *)(v16 + 16);
              v19 = *(_QWORD *)(v16 + 24);
              if (v18 < 0)
              {
                v35 = *(_QWORD *)(v16 + 24);
                v20 = *(_QWORD *)(v18 + 16);
                v34 = *(_QWORD *)(v18 + 24);
                if (v20 < 0)
                {
                  v21 = *(_QWORD *)(v20 + 16);
                  if (v21 < 0)
                  {
                    v23 = *(_QWORD *)(v21 + 16);
                    v33 = *(_QWORD *)(v20 + 24);
                    if (v23 < 0)
                    {
                      v25 = *(_QWORD *)(v23 + 16);
                      v32 = *(_QWORD *)(v21 + 24);
                      if (v25 < 0)
                      {
                        v27 = *(_QWORD *)(v25 + 16);
                        v30 = *(_QWORD *)(v25 + 24);
                        v31 = *(_QWORD *)(v23 + 24);
                        if (v27 < 0)
                        {
                          v28 = *(_QWORD *)(v27 + 24);
                          v29 = *(_QWORD *)(v27 + 16);
                          swift_retain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          a4(v39, a2, v29, v28);
                          if (v6)
                          {
                            swift_release();
                            swift_bridgeObjectRelease();
                            swift_release_n();
                            swift_bridgeObjectRelease();
                            swift_release_n();
                            swift_bridgeObjectRelease();
                            goto LABEL_55;
                          }
                          swift_release();
                          swift_bridgeObjectRelease();
                          swift_release();
                        }
                        else
                        {
                          swift_retain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                        }
                        swift_bridgeObjectRetain();
                        a5(v39, a2, v30);
                        if (v6)
                        {
                          swift_release();
                          swift_bridgeObjectRelease();
                          swift_release_n();
                          swift_bridgeObjectRelease_n();
LABEL_55:
                          swift_release();
                          swift_release();
                          swift_bridgeObjectRelease();
                          goto LABEL_56;
                        }
                        swift_release();
                        swift_bridgeObjectRelease_n();
                        swift_release();
                        v26 = v31;
                      }
                      else
                      {
                        v26 = *(_QWORD *)(v23 + 24);
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                      }
                      swift_bridgeObjectRetain();
                      a5(v39, a2, v26);
                      if (v6)
                      {
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_release_n();
                        swift_bridgeObjectRelease_n();
LABEL_56:
                        swift_release();
                        swift_release();
                        swift_bridgeObjectRelease();
                        goto LABEL_57;
                      }
                      swift_release();
                      swift_bridgeObjectRelease_n();
                      swift_release();
                      v24 = v32;
                    }
                    else
                    {
                      v24 = *(_QWORD *)(v21 + 24);
                      swift_retain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_retain_n();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                    }
                    swift_bridgeObjectRetain();
                    a5(v39, a2, v24);
                    if (v6)
                    {
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_release_n();
                      swift_bridgeObjectRelease_n();
LABEL_57:
                      swift_release();
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_release();
                      goto LABEL_58;
                    }
                    swift_release();
                    swift_bridgeObjectRelease_n();
                    swift_release();
                    v22 = v33;
                  }
                  else
                  {
                    v22 = *(_QWORD *)(v20 + 24);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                  }
                  swift_bridgeObjectRetain();
                  a5(v39, a2, v22);
                  if (v6)
                  {
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease_n();
                    swift_release();
LABEL_58:
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release();
                    goto LABEL_59;
                  }
                  swift_release();
                  swift_bridgeObjectRelease_n();
                  swift_release();
                }
                else
                {
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                }
                swift_bridgeObjectRetain();
                a5(v39, a2, v34);
                if (v6)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease_n();
                  swift_release();
LABEL_59:
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_60;
                }
                swift_release();
                swift_bridgeObjectRelease_n();
                swift_release();
                v19 = v35;
              }
              else
              {
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
              }
              swift_bridgeObjectRetain();
              a5(v39, a2, v19);
              if (v6)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
                swift_release();
LABEL_60:
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_61;
              }
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_release();
              v17 = v37;
            }
            else
            {
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRetain();
            a5(v39, a2, v17);
            if (v6)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease_n();
              swift_release();
LABEL_61:
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_62;
            }
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
            v15 = v38;
          }
          else
          {
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRetain();
          a5(v39, a2, v15);
          if (v6)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            swift_release();
LABEL_62:
            swift_bridgeObjectRelease();
            swift_release();
            return swift_bridgeObjectRelease();
          }
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
        }
        else
        {
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain_n();
        }
        swift_bridgeObjectRetain();
        a5(v39, a2, v12);
        if (v6)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          return swift_release();
        }
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_release();
      }
      if (!--v7)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BAB73D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t result;
  uint64_t v9;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (i = a3 + 64; ; i += 40)
    {
      v9 = v5;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      FormatColor.bind(binder:context:)();
      if (v4)
        break;
      swift_release();
      swift_retain();
      FormatFloat.bind(binder:context:)();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      --v5;
      if (v9 == 1)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

void sub_1BAB73F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return;
  swift_bridgeObjectRetain();
  v7 = (uint64_t *)(a3 + 48);
  while (1)
  {
    v9 = *(v7 - 2);
    v8 = *(v7 - 1);
    v10 = *v7;
    if ((~v9 & 0xF000000000000007) != 0)
    {
      sub_1BA5E7FF4(v9);
      sub_1BA6E6C68(v8);
      sub_1BA6E6C68(v10);
      sub_1BA5E7FF4(v9);
      sub_1BA6E6C68(v8);
      sub_1BA6E6C68(v10);
      sub_1BA5E7FF4(v9);
      FormatColor.bind(binder:context:)();
      if (v4)
      {
        sub_1BA5E800C(v9);
        goto LABEL_17;
      }
      sub_1BA5E800C(v9);
      if ((~v8 & 0xF000000000000007) == 0)
      {
LABEL_7:
        if ((~v10 & 0xF000000000000007) == 0)
          goto LABEL_3;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1BA5E7FF4(*(v7 - 2));
      sub_1BA6E6C68(v8);
      sub_1BA6E6C68(v10);
      sub_1BA5E7FF4(v9);
      sub_1BA6E6C68(v8);
      sub_1BA6E6C68(v10);
      if ((~v8 & 0xF000000000000007) == 0)
        goto LABEL_7;
    }
    swift_retain();
    FormatFloat.bind(binder:context:)();
    if (v4)
      break;
    sub_1BA6E6CD8(v8);
    if ((~v10 & 0xF000000000000007) == 0)
    {
LABEL_3:
      sub_1BA5E800C(v9);
      sub_1BA6E6CD8(v8);
      sub_1BA6E6CD8(v10);
      sub_1BA5E800C(v9);
      sub_1BA6E6CD8(v8);
      sub_1BA6E6CD8(v10);
      goto LABEL_4;
    }
LABEL_13:
    swift_retain();
    FormatFloat.bind(binder:context:)();
    sub_1BA6E6CD8(v10);
    sub_1BA5E800C(v9);
    sub_1BA6E6CD8(v8);
    sub_1BA6E6CD8(v10);
    sub_1BA5E800C(v9);
    sub_1BA6E6CD8(v8);
    sub_1BA6E6CD8(v10);
    if (v4)
      goto LABEL_18;
LABEL_4:
    v7 += 3;
    if (!--v5)
      goto LABEL_18;
  }
  sub_1BA6E6CD8(v8);
LABEL_17:
  sub_1BA5E800C(v9);
  sub_1BA6E6CD8(v8);
  sub_1BA6E6CD8(v10);
  sub_1BA5E800C(v9);
  sub_1BA6E6CD8(v8);
  sub_1BA6E6CD8(v10);
LABEL_18:
  swift_bridgeObjectRelease();
}

uint64_t sub_1BAB74164(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return result;
  v8 = result;
  swift_bridgeObjectRetain();
  v9 = (unint64_t *)(a3 + 48);
  v55 = a2;
  v54 = v8;
  while (1)
  {
    v10 = *v9;
    if (*v9 >> 62 != 1)
      goto LABEL_3;
    v12 = *(_QWORD *)(v10 + 16);
    v11 = *(_QWORD *)(v10 + 24);
    if (v12 >> 62)
      break;
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    v22 = v12;
LABEL_29:
    sub_1BA67D3F4(v22);
    swift_bridgeObjectRetain();
LABEL_87:
    swift_bridgeObjectRetain();
    sub_1BAB74164(v8, a2, v11);
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_108;
    sub_1BA6EEDB4(v12);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v10);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v10);
LABEL_3:
    v9 += 3;
    if (!--v5)
      return swift_bridgeObjectRelease();
  }
  if (v12 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    if (v12 == 0x8000000000000000)
      v22 = 0x8000000000000000;
    else
      v22 = 0x8000000000000008;
    goto LABEL_29;
  }
  v14 = *(_QWORD *)(v12 + 16);
  v13 = *(_QWORD *)(v12 + 24);
  if (!(v14 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    v23 = v14;
LABEL_34:
    sub_1BA67D3F4(v23);
    swift_bridgeObjectRetain();
LABEL_85:
    swift_bridgeObjectRetain();
    sub_1BAB74164(v54, v55, v13);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_107;
    }
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v14);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v12);
    a2 = v55;
    v8 = v54;
    goto LABEL_87;
  }
  if (v14 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    if (v14 == 0x8000000000000000)
      v23 = 0x8000000000000000;
    else
      v23 = 0x8000000000000008;
    goto LABEL_34;
  }
  v53 = *(_QWORD *)(v12 + 16);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = *(_QWORD *)(v14 + 24);
  v52 = v15;
  v17 = v15 >> 62;
  if (!(_DWORD)v17)
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
LABEL_83:
    swift_bridgeObjectRetain();
    sub_1BAB74164(v54, v55, v16);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_106;
    }
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v19);
    swift_bridgeObjectRelease();
    v14 = v53;
    sub_1BA6EEDB4(v53);
    goto LABEL_85;
  }
  v51 = *(_QWORD *)(v12 + 24);
  if ((_DWORD)v17 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    if (v52 == 0x8000000000000000)
      v24 = 0x8000000000000000;
    else
      v24 = 0x8000000000000008;
    sub_1BA67D3F4(v24);
    swift_bridgeObjectRetain();
LABEL_82:
    v13 = v51;
    goto LABEL_83;
  }
  v49 = *(_QWORD *)(v52 + 24);
  v50 = *(_QWORD *)(v52 + 16);
  v48 = v16;
  if (!(v50 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    v25 = v50;
LABEL_44:
    sub_1BA67D3F4(v25);
    v26 = v49;
    swift_bridgeObjectRetain();
LABEL_80:
    swift_bridgeObjectRetain();
    sub_1BAB74164(v54, v55, v26);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_105;
    }
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v20);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v19);
    v16 = v48;
    goto LABEL_82;
  }
  if (v50 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    if (v50 == 0x8000000000000000)
      v25 = 0x8000000000000000;
    else
      v25 = 0x8000000000000008;
    goto LABEL_44;
  }
  v46 = *(_QWORD *)(v50 + 24);
  v47 = *(_QWORD *)(v50 + 16);
  if (!(v47 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    sub_1BA67D3F4(v50);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v50);
    v27 = v47;
LABEL_49:
    sub_1BA67D3F4(v27);
    v28 = v46;
    swift_bridgeObjectRetain();
LABEL_78:
    swift_bridgeObjectRetain();
    sub_1BAB74164(v54, v55, v28);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_104;
    }
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v47);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v20);
    v26 = v49;
    goto LABEL_80;
  }
  if (v47 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    sub_1BA67D3F4(v50);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v50);
    if (v47 == 0x8000000000000000)
      v27 = 0x8000000000000000;
    else
      v27 = 0x8000000000000008;
    goto LABEL_49;
  }
  v44 = *(_QWORD *)(v47 + 24);
  v45 = *(_QWORD *)(v47 + 16);
  if (!(v45 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    sub_1BA67D3F4(v50);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v50);
    sub_1BA67D3F4(v47);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v47);
    v29 = v45;
LABEL_54:
    sub_1BA67D3F4(v29);
    v30 = v44;
    swift_bridgeObjectRetain();
LABEL_76:
    swift_bridgeObjectRetain();
    sub_1BAB74164(v54, v55, v30);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_103;
    }
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v45);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v47);
    v28 = v46;
    goto LABEL_78;
  }
  if (v45 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    sub_1BA67D3F4(v50);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v50);
    sub_1BA67D3F4(v47);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v47);
    if (v45 == 0x8000000000000000)
      v29 = 0x8000000000000000;
    else
      v29 = 0x8000000000000008;
    goto LABEL_54;
  }
  v42 = *(_QWORD *)(v45 + 24);
  v43 = *(_QWORD *)(v45 + 16);
  if (!(v43 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    sub_1BA67D3F4(v50);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v50);
    sub_1BA67D3F4(v47);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v47);
    sub_1BA67D3F4(v45);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v45);
    v31 = v43;
LABEL_59:
    sub_1BA67D3F4(v31);
    v32 = v42;
    swift_bridgeObjectRetain();
LABEL_74:
    swift_bridgeObjectRetain();
    sub_1BAB74164(v54, v55, v32);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_102;
    }
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v43);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v45);
    v30 = v44;
    goto LABEL_76;
  }
  if (v43 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    sub_1BA67D3F4(v50);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v50);
    sub_1BA67D3F4(v47);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v47);
    sub_1BA67D3F4(v45);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v45);
    if (v43 == 0x8000000000000000)
      v31 = 0x8000000000000000;
    else
      v31 = 0x8000000000000008;
    goto LABEL_59;
  }
  v40 = *(_QWORD *)(v43 + 24);
  v41 = *(_QWORD *)(v43 + 16);
  if (!(v41 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    sub_1BA67D3F4(v50);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v50);
    sub_1BA67D3F4(v47);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v47);
    sub_1BA67D3F4(v45);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v45);
    sub_1BA67D3F4(v43);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v43);
    v33 = v41;
LABEL_64:
    sub_1BA67D3F4(v33);
    v34 = v40;
    swift_bridgeObjectRetain();
LABEL_72:
    swift_bridgeObjectRetain();
    sub_1BAB74164(v54, v55, v34);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_101;
    }
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v41);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v43);
    v32 = v42;
    goto LABEL_74;
  }
  if (v41 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    sub_1BA67D3F4(v50);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v50);
    sub_1BA67D3F4(v47);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v47);
    sub_1BA67D3F4(v45);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v45);
    sub_1BA67D3F4(v43);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v43);
    if (v41 == 0x8000000000000000)
      v33 = 0x8000000000000000;
    else
      v33 = 0x8000000000000008;
    goto LABEL_64;
  }
  v18 = *(_QWORD *)(v41 + 16);
  v38 = *(_QWORD *)(v41 + 24);
  v39 = v18;
  if (!(v18 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    v19 = v52;
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    sub_1BA67D3F4(v50);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v50);
    sub_1BA67D3F4(v47);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v47);
    sub_1BA67D3F4(v45);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v45);
    sub_1BA67D3F4(v43);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v43);
    sub_1BA67D3F4(v41);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v41);
    sub_1BA67D3F4(v39);
    v21 = v38;
    swift_bridgeObjectRetain();
LABEL_70:
    swift_bridgeObjectRetain();
    sub_1BAB74164(v54, v55, v21);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_100;
    }
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v39);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v41);
    v34 = v40;
    goto LABEL_72;
  }
  if (v18 >> 62 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v10);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v12);
    sub_1BA67D3F4(v53);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v53);
    sub_1BA67D3F4(v52);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v52);
    v20 = v50;
    sub_1BA67D3F4(v50);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v50);
    sub_1BA67D3F4(v47);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v47);
    sub_1BA67D3F4(v45);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v45);
    sub_1BA67D3F4(v43);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v43);
    sub_1BA67D3F4(v41);
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v41);
    if (v39 == 0x8000000000000000)
      v35 = 0x8000000000000000;
    else
      v35 = 0x8000000000000008;
    sub_1BA67D3F4(v35);
    v21 = v38;
    swift_bridgeObjectRetain();
    v19 = v52;
    goto LABEL_70;
  }
  v36 = *(_QWORD *)(v18 + 16);
  v37 = *(_QWORD *)(v18 + 24);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v10);
  sub_1BA67D3F4(v10);
  sub_1BA67D3F4(v12);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v12);
  sub_1BA67D3F4(v53);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v53);
  v19 = v52;
  sub_1BA67D3F4(v52);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v52);
  v20 = v50;
  sub_1BA67D3F4(v50);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v50);
  sub_1BA67D3F4(v47);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v47);
  sub_1BA67D3F4(v45);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v45);
  sub_1BA67D3F4(v43);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v43);
  sub_1BA67D3F4(v41);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v41);
  sub_1BA67D3F4(v39);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v39);
  sub_1BA67D3F4(v36);
  swift_bridgeObjectRetain();
  sub_1BABC2BF8(v54, v55, v36, v37);
  if (!v4)
  {
    sub_1BA6EEDB4(v36);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v39);
    v21 = v38;
    goto LABEL_70;
  }
  sub_1BA6EEDB4(v36);
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(v39);
LABEL_100:
  sub_1BA6EEDB4(v39);
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(v41);
LABEL_101:
  sub_1BA6EEDB4(v41);
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(v43);
LABEL_102:
  sub_1BA6EEDB4(v43);
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(v45);
LABEL_103:
  sub_1BA6EEDB4(v45);
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(v47);
LABEL_104:
  sub_1BA6EEDB4(v47);
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(v50);
LABEL_105:
  sub_1BA6EEDB4(v50);
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(v52);
LABEL_106:
  sub_1BA6EEDB4(v52);
  swift_bridgeObjectRelease();
  v14 = v53;
  sub_1BA6EEDB4(v53);
LABEL_107:
  sub_1BA6EEDB4(v14);
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(v12);
LABEL_108:
  sub_1BA6EEDB4(v12);
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(v10);
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB75454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t result;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (i = (unsigned __int8 *)(a3 + 64); ; i += 40)
    {
      v8 = *((_QWORD *)i - 4);
      v9 = *((_QWORD *)i - 3);
      v10 = *((_QWORD *)i - 2);
      v11 = *((_QWORD *)i - 1);
      v12 = *i;
      sub_1BA527164(v8, v9, v10, v11, *i);
      FormatImageNodeRequestAdjustment.bind(binder:context:)();
      if (v4)
        break;
      sub_1BA5271D4(v8, v9, v10, v11, v12);
      if (!--v5)
        return swift_bridgeObjectRelease();
    }
    sub_1BA5271D4(v8, v9, v10, v11, v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAB75550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v3)
        break;
      ++v5;
      swift_release();
      if (v4 == v5)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAB75614(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v9 = result;
  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v11 = v3;
    swift_bridgeObjectRetain();
    sub_1BA4AD288(0, &qword_1EF2B0E50, (uint64_t)&type metadata for FormatSourceItemTipTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    for (i = (uint64_t *)(a3 + 48); ; i += 3)
    {
      v15 = *i;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      if (swift_dynamicCast())
      {
        v7 = *((_QWORD *)&v13 + 1);
        v8 = v14;
        __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(v9, a2, v7, v8);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
        if (v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        v11 = 0;
      }
      else
      {
        v14 = 0;
        v12 = 0u;
        v13 = 0u;
        sub_1BA65DB80((uint64_t)&v12, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v4)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BAB757B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v7 = (char *)(a3 + 80);
    while (1)
    {
      v16 = v5;
      v8 = *((_QWORD *)v7 - 6);
      v9 = *((_QWORD *)v7 - 5);
      v10 = *((_QWORD *)v7 - 4);
      v11 = *((_QWORD *)v7 - 3);
      v12 = *((_QWORD *)v7 - 2);
      v13 = *((_QWORD *)v7 - 1);
      v14 = *v7;
      sub_1BAC6607C(v8, v9, v10, v11, v12, v13, *v7);
      FormatBezierPathComponent.bind(binder:context:)();
      if (v4)
        break;
      v7 += 56;
      sub_1BAC66130(v8, v9, v10, v11, v12, v13, v14);
      v5 = v16 - 1;
      if (v16 == 1)
        return swift_bridgeObjectRelease();
    }
    sub_1BAC66130(v8, v9, v10, v11, v12, v13, v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAB758D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE v15[144];
  _BYTE v16[144];
  __int128 v17;
  uint64_t v18;

  v4 = v3;
  v18 = a2;
  v14 = (_QWORD *)result;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = a3;
    swift_bridgeObjectRetain();
    v7 = 0;
    v12 = v5;
    v13 = v6;
    v8 = MEMORY[0x1E0DEB940];
    while (1)
    {
      v9 = *(_QWORD *)(v6 + 8 * v7 + 32);
      if (!(v9 >> 62))
        break;
      if (v9 >> 62 == 1)
      {
        swift_retain();
        swift_retain();
        FormatAnimationNodeSpringAnimation.bind(binder:context:)(v14, v18);
        if (v4)
          goto LABEL_15;
LABEL_10:
        swift_release();
        swift_release();
        goto LABEL_4;
      }
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v10 + 16);
      swift_retain();
      swift_retain();
      sub_1BAB758D0(v14, v18, v11);
      if (v4)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release();
      }
      sub_1BA760F3C(v10 + 24, (uint64_t)v16, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
      sub_1BA760F3C((uint64_t)v16, (uint64_t)&v17, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
      if (sub_1BA896370((uint64_t *)&v17) != 1)
      {
        sub_1BA760F3C((uint64_t)v16, (uint64_t)v15, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
        sub_1BA89652C((uint64_t)v15);
        FormatMediaTiming.bind(binder:context:)();
        sub_1BAC653DC((uint64_t)v16);
      }
      swift_release();
      swift_release();
      v5 = v12;
      v6 = v13;
LABEL_4:
      if (v5 == ++v7)
        return swift_bridgeObjectRelease();
    }
    swift_retain();
    swift_retain();
    FormatAnimationNodeBasicAnimation.bind(binder:context:)();
    if (v4)
      goto LABEL_15;
    goto LABEL_10;
  }
  return result;
}

void sub_1BAB75B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a2;
  v6 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  if (v10)
  {
    v11 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v12 = *(_QWORD *)(v7 + 72);
    v13 = a3;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BA4C2DD8(v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v15 = *((_QWORD *)v9 + 2);
      swift_retain();
      FormatOptionValue.bind(binder:context:)(a1, v14);
      if (v3)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v11 += v12;
      if (!--v10)
        goto LABEL_7;
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
LABEL_7:
    swift_bridgeObjectRelease();
  }
}

void sub_1BAB75CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (*(_QWORD *)(a3 + 16))
  {
    v3 = a3 + 32;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
}

void sub_1BAB79F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v5;
  _QWORD *i;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  id v11;
  void *v12;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  void *v23;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v5 = (unint64_t *)&qword_1ED3B3EE0;
    for (i = (_QWORD *)(a3 + 56); ; i += 4)
    {
      v8 = *(i - 3);
      v7 = *(i - 2);
      v9 = *((_BYTE *)i - 8);
      v23 = (void *)*i;
      v10 = v23;
      sub_1BA73B1CC(v8, v7, v9);
      sub_1BA49DEA8();
      sub_1BA4D9CE8(0, v5);
      v11 = v10;
      if (swift_dynamicCast())
      {
        v18 = v7;
        v12 = v11;
        v13 = v5;
        v14 = *((_QWORD *)&v21 + 1);
        v15 = v22;
        __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(a1, a2, v14, v15);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
        sub_1BA73B1B8(v8, v18, v9);
        if (v19)
        {
          swift_bridgeObjectRelease();

          return;
        }

        v5 = v13;
      }
      else
      {
        v22 = 0;
        v20 = 0u;
        v21 = 0u;
        sub_1BA65DB80((uint64_t)&v20, qword_1ED3B3EE8, v5);
        sub_1BA73B1B8(v8, v7, v9);

      }
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1BAB7A134(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  v18 = result;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return result;
  swift_bridgeObjectRetain();
  v7 = (unint64_t *)&qword_1ED3B3EE0;
  v8 = &protocol descriptor for FormatBindable;
  v9 = a3 + 64;
  v10 = MEMORY[0x1E0DEA968];
  while (1)
  {
    v11 = *(_QWORD *)(v9 - 32);
    v12 = *(_BYTE *)(v9 - 16);
    v26 = *(_QWORD *)(v9 - 24);
    v22 = v12;
    sub_1BA73B1CC(v11, v26, v12);
    sub_1BA4D9CE8(0, v7);
    swift_bridgeObjectRetain_n();
    if (swift_dynamicCast())
      break;
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    sub_1BA65DB80((uint64_t)&v23, qword_1ED3B3EE8, v7);
    sub_1BA73B1B8(v11, v26, v22);
    swift_bridgeObjectRelease();
LABEL_4:
    v9 += 40;
    if (!--v5)
      return swift_bridgeObjectRelease();
  }
  v20 = v4;
  v21 = v11;
  v13 = v10;
  v14 = v8;
  v15 = v7;
  v16 = *((_QWORD *)&v24 + 1);
  v17 = v25;
  __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8))(v18, a2, v16, v17);
  v4 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  sub_1BA73B1B8(v21, v26, v22);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    v7 = v15;
    v8 = v14;
    v10 = v13;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB7A2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAB730C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2E14, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAB7A2E8);
}

void sub_1BAB7A30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  char *v54;
  _QWORD v55[38];
  int v56;

  v4 = v3;
  v55[30] = a1;
  v55[31] = a2;
  v6 = type metadata accessor for FormatOption();
  v55[24] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v55 - v10;
  MEMORY[0x1E0C80A78](v12);
  v55[18] = (char *)v55 - v13;
  MEMORY[0x1E0C80A78](v14);
  v55[17] = (char *)v55 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v55 - v17;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  v55[19] = (char *)v55 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v55 - v26;
  MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78]((char *)v55 - v29);
  MEMORY[0x1E0C80A78](v30);
  MEMORY[0x1E0C80A78](v31);
  MEMORY[0x1E0C80A78](v32);
  v55[21] = (char *)v55 - v33;
  MEMORY[0x1E0C80A78](v34);
  v43 = *(_QWORD *)(a3 + 16);
  if (v43)
  {
    v55[16] = (char *)v55 - v39;
    v55[4] = v38;
    v55[5] = v37;
    v55[6] = v36;
    v55[7] = v35;
    v55[14] = v27;
    v55[12] = v42;
    v55[13] = v41;
    v55[9] = v40;
    v55[23] = v6;
    v55[11] = v11;
    v55[10] = v8;
    v55[37] = v4;
    v55[22] = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
    v44 = v43;
    swift_bridgeObjectRetain();
    v45 = v44;
    v55[20] = a3;
    v46 = (uint64_t *)(a3 + 56);
    v55[15] = v18;
    do
    {
      v47 = *(v46 - 3);
      v48 = *(v46 - 2);
      v49 = *((unsigned __int8 *)v46 - 8);
      v50 = *v46;
      v51 = (unint64_t)*v46 >> 62;
      if (!(_DWORD)v51)
        __asm { BR              X9 }
      if ((_DWORD)v51 == 1)
      {
        v55[35] = v46;
        v55[36] = v50 & 0x3FFFFFFFFFFFFFFFLL;
        v52 = *(_QWORD *)(v50 + 16);
        if (*(_BYTE *)(v52 + 41))
          v53 = 4;
        else
          v53 = 0;
        v54 = (char *)&loc_1BAB7A6D8 + 4 * word_1BB8A56F2[v53 & 0xFFFFFFFC | (*(unsigned __int8 *)(v52 + 40) >> 2) & 3];
        v56 = v49;
        v55[33] = v47;
        v55[34] = v48;
        v55[32] = v45;
        __asm { BR              X9 }
      }
      v46 += 4;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAB7F29C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v7 = result;
    swift_bridgeObjectRetain();
    v8 = (uint64_t *)(a3 + 56);
    while (1)
    {
      v9 = *(v8 - 3);
      v10 = *(v8 - 2);
      v11 = *((unsigned __int8 *)v8 - 8);
      v12 = *v8;
      sub_1BA73B1CC(v9, v10, *((_BYTE *)v8 - 8));
      swift_retain();
      sub_1BABC99CC(v7, a2, v9, v10, v11, v12);
      if (v4)
        break;
      v8 += 4;
      sub_1BA73B1B8(v9, v10, v11);
      swift_release();
      if (!--v5)
        return swift_bridgeObjectRelease();
    }
    sub_1BA73B1B8(v9, v10, v11);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1BAB7F3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  v24 = a1;
  v25 = a2;
  v6 = type metadata accessor for FormatOption();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  if (v10)
  {
    v11 = a3 + 32;
    v21 = a3;
    swift_bridgeObjectRetain();
    v12 = 0;
    v19 = v10;
    v20 = v7;
    v18 = a3 + 32;
    while (1)
    {
      v13 = v11 + 32 * v12;
      v14 = *(_QWORD *)(v13 + 24);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 16);
        if (v15)
          break;
      }
LABEL_3:
      if (++v12 == v10)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    v16 = v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v22 = *(_QWORD *)(v13 + 8);
    swift_bridgeObjectRetain();
    v23 = v14;
    swift_bridgeObjectRetain_n();
    v17 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_1BA4C2DD8(v16, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v26 = *((_QWORD *)v9 + 2);
      swift_retain();
      FormatOptionValue.bind(binder:context:)(v24, v25);
      if (v4)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v16 += v17;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v10 = v19;
        v7 = v20;
        v11 = v18;
        goto LABEL_3;
      }
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
}

void sub_1BAB7F560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[136];
  __int128 v19[8];
  _BYTE v20[136];
  _BYTE v21[136];
  _BYTE v22[144];

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return;
  v7 = a3 + 32;
  swift_bridgeObjectRetain();
  sub_1BA895BCC(v7, (uint64_t)v21);
  v8 = a3 + 168;
  for (i = v5 - 1; ; --i)
  {
    sub_1BA895BCC((uint64_t)v21, (uint64_t)v22);
    v10 = sub_1BA895C08((uint64_t)v22);
    if (!v10)
    {
      v14 = (__int128 *)sub_1BA895E68((uint64_t)v22);
      sub_1BA896178(v14, (uint64_t)v19);
      sub_1BA895FE8(v19, (uint64_t)v18);
      sub_1BA895BCC((uint64_t)v21, (uint64_t)v20);
      v15 = (_QWORD *)sub_1BA895E68((uint64_t)v20);
      sub_1BA6A0C50(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA895C14);
      FormatDirectionalGradient.bind(binder:context:)();
LABEL_8:
      sub_1BAC68720((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BAC686C8);
      if (v4)
        goto LABEL_17;
LABEL_11:
      if (!i)
        goto LABEL_17;
      goto LABEL_12;
    }
    if (v10 != 1)
    {
      sub_1BA895E68((uint64_t)v22);
      goto LABEL_11;
    }
    v11 = sub_1BA895E68((uint64_t)v22);
    sub_1BA53BAD8(v11, (uint64_t)v20);
    if (sub_1BA895ED8((uint64_t)v20) == 1)
    {
      sub_1BA895EE4((uint64_t)v20);
      sub_1BA895BCC((uint64_t)v21, (uint64_t)v18);
      v12 = sub_1BA895E68((uint64_t)v18);
      sub_1BA895BCC((uint64_t)v21, (uint64_t)v19);
      v13 = sub_1BA895E68((uint64_t)v19);
      sub_1BAC68720(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      sub_1BAC68720(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      FormatColor.bind(binder:context:)();
      sub_1BAC68720((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BAC686C8);
      goto LABEL_8;
    }
    sub_1BA895EE4((uint64_t)v20);
    sub_1BA895BCC((uint64_t)v21, (uint64_t)v18);
    v16 = sub_1BA895E68((uint64_t)v18);
    sub_1BA895BCC((uint64_t)v21, (uint64_t)v19);
    v17 = sub_1BA895E68((uint64_t)v19);
    sub_1BAC68720(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
    sub_1BAC68720(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
    FormatImageAdjustmentBlend.GradientData.bind(binder:context:)();
    if (v4)
      break;
    sub_1BAC68720((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BAC686C8);
    sub_1BAC68720((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BAC686C8);
    if (!i)
      goto LABEL_17;
LABEL_12:
    sub_1BA895BCC(v8, (uint64_t)v21);
    v8 += 136;
  }
  sub_1BAC68720((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BAC686C8);
  sub_1BAC68720((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BAC686C8);
LABEL_17:
  swift_bridgeObjectRelease();
}

uint64_t sub_1BAB7F804(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v7 = result;
    v8 = a3 + 32;
    swift_bridgeObjectRetain();
    v9 = 0;
    v13 = v8;
    v14 = v5;
    while (1)
    {
      v10 = *(_QWORD *)(v8 + 40 * v9 + 32);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
        break;
LABEL_3:
      if (++v9 == v5)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = v10 + 64;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(v7, a2);
      if (v4)
        break;
      v12 += 40;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v8 = v13;
        v5 = v14;
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1BAB7F9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[27];
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;

  v27 = type metadata accessor for FormatOption();
  v26[26] = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v26 - v9;
  v11 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v11);
  v29 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v28 = (char *)v26 - v14;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v26 - v19;
  MEMORY[0x1E0C80A78](v21);
  if (*(_QWORD *)(a3 + 16))
  {
    v26[11] = (char *)v26 - v22;
    v26[20] = v20;
    v26[21] = v25;
    v26[18] = v24;
    v26[19] = v23;
    v26[24] = v11;
    v26[13] = v10;
    v26[12] = v7;
    v30 = a2;
    v26[23] = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
    swift_bridgeObjectRetain();
    v26[25] = a3;
    v31 = a1;
    v32 = *(_QWORD *)(a3 + 40);
    v33 = *(unsigned __int8 *)(a3 + 48);
    __asm { BR              X9 }
  }
}

void sub_1BAB87CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned __int8 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  char v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unsigned __int8 v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unsigned __int8 v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  __int128 v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  unint64_t v266;
  uint64_t v267;
  unint64_t v268;
  char *v269;
  char *v270;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  __int128 v287;
  __int128 v288;
  __int16 v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char v294;
  unint64_t v295;
  int v296;

  v261 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v261);
  v269 = (char *)&v236 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v270 = (char *)&v236 - v8;
  v263 = type metadata accessor for FormatOption();
  v262 = *(_QWORD *)(v263 - 8);
  MEMORY[0x1E0C80A78](v263);
  v10 = (char *)&v236 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v236 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v236 - v15;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v17);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v236 - v22;
  MEMORY[0x1E0C80A78](v24);
  MEMORY[0x1E0C80A78]((char *)&v236 - v25);
  if (!*(_QWORD *)(a3 + 16))
    return;
  v248 = (char *)&v236 - v27;
  v249 = v26;
  v251 = v23;
  v252 = v30;
  v245 = v29;
  v246 = v28;
  v244 = v10;
  v247 = v16;
  v250 = v13;
  v253 = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
  v272 = (uint64_t *)(a3 + 32);
  v254 = a3;
  swift_bridgeObjectRetain();
  v282 = a1;
  v283 = a2;
  v31 = *v272;
  v32 = v272[1];
  v34 = v272[2];
  v33 = v272[3];
  v36 = v272[4];
  v35 = v272[5];
  v37 = v272[6];
  v278 = v272[7];
  v279 = 0;
  if ((v33 & 4) != 0)
  {
    v285 = v31;
    sub_1BA7CCBB4(v31, v32, v34, v33);
    sub_1BA7CCBB4(v31, v32, v34, v33);
    sub_1BA7CCBB4(v31, v32, v34, v33);
    v38 = v35;
    sub_1BA7CCCA0(v36, v35, v37);
    swift_retain();
    v40 = v284;
    FormatTextContent.bind(binder:context:)();
    v284 = v40;
    if (!v40)
      goto LABEL_6;
LABEL_84:
    sub_1BA7CCC14(v31, v32, v34, v33);
    sub_1BA7CCC14(v31, v32, v34, v33);
    sub_1BA7CCC14(v31, v32, v34, v33);
    v205 = v36;
    v206 = v35;
    v207 = v37;
    goto LABEL_109;
  }
  sub_1BA7CCBB4(v31, v32, v34, v33);
  sub_1BA7CCBB4(v31, v32, v34, v33);
  sub_1BA7CCBB4(v31, v32, v34, v33);
  v38 = v35;
  sub_1BA7CCCA0(v36, v35, v37);
  swift_retain();
  v39 = v284;
  sub_1BABBA838(v282, v283, v31, v32, v34, v33);
  v284 = v39;
  if (v39)
    goto LABEL_84;
LABEL_6:
  sub_1BA7CCC14(v31, v32, v34, v33);
  sub_1BA7CCC14(v31, v32, v34, v33);
  v274 = v32;
  v280 = v37;
  v276 = v38;
  v281 = v36;
  v277 = v34;
  v275 = v31;
  if ((v37 & 0x2000000000000000) == 0)
  {
    v41 = v36;
    v42 = *(unsigned __int8 *)(v36 + 40);
    if (*(_BYTE *)(v41 + 41))
      v43 = 4;
    else
      v43 = 0;
    __asm { BR              X9 }
  }
  if (!(v36 >> 62))
  {
    v273 = v33;
    v57 = *(_QWORD *)(v36 + 16);
    v58 = *(_QWORD *)(v36 + 24);
    v59 = *(_QWORD *)(v36 + 32);
    v60 = *(_BYTE *)(v36 + 40);
    v264 = *(_QWORD *)(v36 + 48);
    v61 = v36;
    v62 = *(_QWORD *)(v36 + 56);
    LODWORD(v259) = *(unsigned __int16 *)(v61 + 64);
    v63 = *(_QWORD *)(v61 + 80);
    v265 = *(_QWORD *)(v61 + 72);
    *(_QWORD *)&v260 = v63;
    v64 = *(_QWORD *)(v61 + 96);
    v266 = *(_QWORD *)(v61 + 88);
    *((_QWORD *)&v260 + 1) = v64;
    LODWORD(v267) = *(unsigned __int8 *)(v61 + 104);
    v268 = *(_QWORD *)(v61 + 112);
    v285 = v57;
    v286 = v58;
    *(_QWORD *)&v287 = v59;
    BYTE8(v287) = v60;
    *(_QWORD *)&v288 = v264;
    *((_QWORD *)&v288 + 1) = v62;
    v289 = v259;
    v290 = v265;
    v291 = v63;
    v292 = v266;
    v293 = v64;
    v294 = v267;
    v295 = v268;
    v65 = v276;
    sub_1BA7CCCA0(v61, v276, v37);
    sub_1BA7CCCA0(v61, v65, v37);
    v66 = v57;
    v67 = v57;
    v68 = v58;
    sub_1BA60DF54(v67, v58, v59, v60);
    v258 = v62;
    v69 = v259;
    sub_1BA740E74(v264, v62, v259);
    sub_1BA60DEE4(v265);
    v70 = *((_QWORD *)&v260 + 1);
    sub_1BA69C808(v266, *((uint64_t *)&v260 + 1), v267);
    sub_1BA895BA4(v268);
    v71 = v284;
    FormatSymbolImage.bind(binder:context:)(v282, v283);
    v284 = v71;
    if (!v71)
    {
      sub_1BA60DFC4(v66, v68, v59, v60);
      sub_1BA740460(v264, v258, v69);
      sub_1BA60DF1C(v265);
      sub_1BA69C828(v266, v70, v267);
      sub_1BA895BB8(v268);
      v72 = v276;
      v73 = v280;
      sub_1BA7CCC64(v61, v276, v280);
      sub_1BA7CCC64(v61, v72, v73);
      v52 = v278;
      goto LABEL_83;
    }
    sub_1BA60DFC4(v66, v68, v59, v60);
    sub_1BA740460(v264, v258, v69);
    sub_1BA60DF1C(v265);
    sub_1BA69C828(v266, v70, v267);
    sub_1BA895BB8(v268);
    v213 = v276;
    v214 = v280;
    sub_1BA7CCC64(v61, v276, v280);
    sub_1BA7CCC64(v61, v213, v214);
    sub_1BA7CCC14(v275, v274, v277, v273);
    v205 = v61;
    goto LABEL_93;
  }
  if (v36 >> 62 != 1)
  {
    v74 = *(_QWORD *)(v36 + 16);
    v75 = *(_QWORD *)(v36 + 24);
    v268 = v74;
    if (v74 >> 62)
    {
      if (v74 >> 62 == 1)
      {
        v77 = *(_QWORD *)(v74 + 48);
        v76 = *(_QWORD *)(v74 + 56);
        if (*(unsigned __int8 *)(v74 + 64) > 1u)
        {
          v127 = v75;
          v79 = v280;
          if (*(_BYTE *)(v74 + 64) == 2)
          {
            v285 = *(_QWORD *)(v74 + 48);
            v286 = v76;
            v128 = v281;
            v129 = v276;
            sub_1BA7CCCA0(v281, v276, v280);
            sub_1BA7CCCA0(v128, v129, v79);
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BA76F5C4(v77, v76, 2u);
            v130 = v284;
            FormatSizeEquation.bind(binder:context:)();
            v284 = v130;
            v84 = v77;
            v85 = v76;
            v86 = 2;
            if (v130)
            {
LABEL_99:
              sub_1BA76F520(v84, v85, v86);
              swift_bridgeObjectRelease();
              swift_release_n();
              v229 = v281;
              v235 = v276;
              sub_1BA7CCC64(v281, v276, v79);
              sub_1BA7CCC64(v229, v235, v79);
              sub_1BA7CCC14(v275, v274, v277, v33);
              v205 = v229;
              v206 = v235;
              v207 = v79;
              goto LABEL_109;
            }
            sub_1BA76F520(v77, v76, 2u);
            swift_release();
            v34 = v277;
            v52 = v278;
            v31 = v275;
            v75 = v127;
          }
          else
          {
            v171 = v281;
            v172 = v276;
            sub_1BA7CCCA0(v281, v276, v280);
            sub_1BA7CCCA0(v171, v172, v79);
            swift_retain();
            v75 = v127;
            swift_bridgeObjectRetain();
            v34 = v277;
            v52 = v278;
          }
        }
        else
        {
          v78 = v75;
          v79 = v280;
          v80 = v282;
          if (*(_BYTE *)(v74 + 64))
          {
            v168 = v281;
            v169 = v276;
            sub_1BA7CCCA0(v281, v276, v280);
            sub_1BA7CCCA0(v168, v169, v79);
            swift_retain_n();
            v75 = v78;
            swift_bridgeObjectRetain();
            sub_1BA76F5C4(v77, v76, 1u);
            v170 = v284;
            sub_1BABB07FC(v80, v283, v77);
            v284 = v170;
            v84 = v77;
            v85 = v76;
            v86 = 1;
            if (v170)
              goto LABEL_99;
          }
          else
          {
            v81 = v281;
            v82 = v276;
            sub_1BA7CCCA0(v281, v276, v280);
            sub_1BA7CCCA0(v81, v82, v79);
            swift_retain_n();
            v75 = v78;
            swift_bridgeObjectRetain();
            sub_1BA76F5C4(v77, v76, 0);
            v83 = v284;
            sub_1BABB07FC(v80, v283, v77);
            v284 = v83;
            v84 = v77;
            v85 = v76;
            v86 = 0;
            if (v83)
              goto LABEL_99;
          }
          sub_1BA76F520(v84, v85, v86);
          swift_release();
          v34 = v277;
          v52 = v278;
          v31 = v275;
        }
LABEL_81:
        swift_bridgeObjectRetain();
        v202 = v284;
        sub_1BAB92B90(v282, v283, v75);
        v284 = v202;
        if (v202)
        {
          swift_bridgeObjectRelease_n();
          swift_release();
          v215 = v281;
          v216 = v276;
          sub_1BA7CCC64(v281, v276, v79);
          sub_1BA7CCC64(v215, v216, v79);
          sub_1BA7CCC14(v31, v274, v34, v33);
          v205 = v215;
          v206 = v216;
          v207 = v79;
          goto LABEL_109;
        }
        swift_bridgeObjectRelease_n();
        swift_release();
        v203 = v281;
        v204 = v276;
        sub_1BA7CCC64(v281, v276, v79);
        sub_1BA7CCC64(v203, v204, v79);
        goto LABEL_83;
      }
      v265 = v74 & 0x3FFFFFFFFFFFFFFFLL;
      v110 = *(_QWORD *)(v74 + 16);
      v264 = *(_QWORD *)(v74 + 24);
      v266 = v110;
      if (!(v110 >> 62))
      {
        v273 = v33;
        v131 = v266;
        v132 = *(_QWORD *)(v266 + 24);
        v242 = *(_QWORD *)(v266 + 16);
        v133 = v36;
        v134 = *(_QWORD *)(v266 + 32);
        v135 = *(_BYTE *)(v266 + 40);
        v136 = *(_QWORD *)(v266 + 56);
        v256 = *(_QWORD *)(v266 + 48);
        v255 = v136;
        LODWORD(v243) = *(unsigned __int16 *)(v266 + 64);
        v137 = *(_QWORD *)(v266 + 80);
        v257 = *(_QWORD *)(v266 + 72);
        v258 = v137;
        v138 = *(_QWORD *)(v266 + 88);
        v259 = *(_QWORD *)(v266 + 96);
        LODWORD(v260) = *(unsigned __int8 *)(v266 + 104);
        *((_QWORD *)&v260 + 1) = *(_QWORD *)(v266 + 112);
        v285 = v242;
        v286 = v132;
        *(_QWORD *)&v287 = v134;
        v139 = v134;
        BYTE8(v287) = v135;
        *(_QWORD *)&v288 = v256;
        *((_QWORD *)&v288 + 1) = v136;
        v289 = v243;
        v290 = v257;
        v291 = v137;
        v292 = v138;
        v293 = v259;
        v294 = v260;
        v295 = *((_QWORD *)&v260 + 1);
        v140 = v276;
        v141 = v75;
        v142 = v280;
        sub_1BA7CCCA0(v133, v276, v280);
        sub_1BA7CCCA0(v133, v140, v142);
        v241 = v131 & 0x3FFFFFFFFFFFFFFFLL;
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        v267 = v141;
        v143 = v138;
        swift_bridgeObjectRetain();
        v33 = v242;
        v144 = v132;
        v145 = v132;
        v146 = v139;
        sub_1BA60DF54(v242, v145, v139, v135);
        v147 = v256;
        v148 = v255;
        v149 = v243;
        sub_1BA740E74(v256, v255, v243);
        sub_1BA60DEE4(v257);
        v240 = v143;
        sub_1BA69C808(v143, v259, v260);
        sub_1BA895BA4(*((unint64_t *)&v260 + 1));
        v150 = v282;
        v151 = v284;
        FormatSymbolImage.bind(binder:context:)(v282, v283);
        v284 = v151;
        if (v151)
        {
          sub_1BA60DFC4(v33, v144, v146, v135);
          sub_1BA740460(v147, v148, v149);
          sub_1BA60DF1C(v257);
          sub_1BA69C828(v240, v259, v260);
          sub_1BA895BB8(*((unint64_t *)&v260 + 1));
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          v224 = v280;
          v225 = v281;
          v226 = v276;
          sub_1BA7CCC64(v281, v276, v280);
          sub_1BA7CCC64(v225, v226, v224);
          sub_1BA7CCC14(v275, v274, v277, v273);
          v227 = v225;
          v228 = v226;
          goto LABEL_107;
        }
        sub_1BA60DFC4(v33, v144, v146, v135);
        sub_1BA740460(v147, v148, v149);
        sub_1BA60DF1C(v257);
        sub_1BA69C828(v240, v259, v260);
        sub_1BA895BB8(*((unint64_t *)&v260 + 1));
        swift_release();
        LOBYTE(v33) = v273;
        v121 = v150;
        v34 = v277;
        v31 = v275;
        v75 = v267;
LABEL_78:
        v119 = v264;
        goto LABEL_79;
      }
      v111 = v36;
      v112 = v33;
      if (v110 >> 62 == 1)
      {
        v113 = *(unsigned __int8 *)(v266 + 64);
        v33 = v276;
        if (v113 == 255)
        {
          v173 = v280;
          sub_1BA7CCCA0(v111, v276, v280);
          sub_1BA7CCCA0(v111, v33, v173);
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain();
          v174 = swift_bridgeObjectRetain();
          v31 = v275;
          v121 = v282;
          LOBYTE(v33) = v112;
          v119 = v174;
          goto LABEL_79;
        }
        v273 = v112;
        v114 = *(_QWORD *)(v266 + 56);
        v285 = *(_QWORD *)(v266 + 48);
        v115 = v285;
        v286 = v114;
        LOBYTE(v287) = v113;
        v116 = v75;
        v117 = v280;
        sub_1BA7CCCA0(v111, v276, v280);
        sub_1BA7CCCA0(v111, v33, v117);
        swift_retain_n();
        v118 = v116;
        swift_bridgeObjectRetain();
        swift_retain_n();
        v119 = v264;
        swift_bridgeObjectRetain();
        sub_1BA76F5C4(v115, v114, v113);
        v120 = v284;
        FormatBundleImageSize.bind(binder:context:)();
        v284 = v120;
        if (!v120)
        {
          sub_1BA76F520(v115, v114, v113);
          swift_release();
          LOBYTE(v33) = v273;
          v31 = v275;
          v121 = v282;
          v34 = v277;
          v75 = v118;
LABEL_79:
          swift_bridgeObjectRetain();
          v201 = v284;
          sub_1BAB92B90(v121, v283, v119);
          v284 = v201;
          v52 = v278;
          if (!v201)
          {
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
            v79 = v280;
            goto LABEL_81;
          }
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_release();
          v218 = v281;
          v219 = v276;
          v220 = v31;
          v221 = v280;
          sub_1BA7CCC64(v281, v276, v280);
          sub_1BA7CCC64(v218, v219, v221);
          sub_1BA7CCC14(v220, v274, v34, v33);
          sub_1BA7CCC64(v218, v219, v221);
LABEL_108:
          swift_release();
          swift_bridgeObjectRelease();
          return;
        }
        sub_1BA76F520(v115, v114, v113);
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        v224 = v280;
        v230 = v281;
        sub_1BA7CCC64(v281, v33, v280);
        sub_1BA7CCC64(v230, v33, v224);
        sub_1BA7CCC14(v275, v274, v277, v273);
        v227 = v230;
        v228 = v33;
LABEL_107:
        sub_1BA7CCC64(v227, v228, v224);
        goto LABEL_108;
      }
      *((_QWORD *)&v260 + 1) = v266 & 0x3FFFFFFFFFFFFFFFLL;
      v153 = *(_QWORD *)(v266 + 16);
      v152 = *(_QWORD *)(v266 + 24);
      v267 = v75;
      *(_QWORD *)&v260 = v152;
      if (v153 >> 62)
      {
        if (v153 >> 62 == 1)
        {
          v154 = *(_QWORD *)(v153 + 24);
          v155 = *(_BYTE *)(v153 + 64);
          v285 = *(_QWORD *)(v153 + 16);
          v286 = v154;
          v156 = *(_OWORD *)(v153 + 48);
          v287 = *(_OWORD *)(v153 + 32);
          v288 = v156;
          LOBYTE(v289) = v155;
          v157 = v276;
          v158 = v280;
          sub_1BA7CCCA0(v111, v276, v280);
          sub_1BA7CCCA0(v111, v157, v158);
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          v159 = v260;
          swift_bridgeObjectRetain();
          v121 = v282;
          v160 = v284;
          FormatBundleImage.bind(binder:context:)();
          v284 = v160;
          if (v160)
          {
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_release_n();
LABEL_102:
            v231 = v276;
            v224 = v280;
            sub_1BA7CCC64(v111, v276, v280);
            v232 = v112;
LABEL_106:
            sub_1BA7CCC64(v111, v231, v224);
            sub_1BA7CCC14(v275, v274, v34, v232);
            v227 = v111;
            v228 = v231;
            goto LABEL_107;
          }
          swift_release();
          v75 = v267;
LABEL_76:
          swift_bridgeObjectRetain();
          v200 = v284;
          sub_1BAB92B90(v121, v283, v159);
          v284 = v200;
          if (!v200)
          {
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
            v31 = v275;
            LOBYTE(v33) = v112;
            goto LABEL_78;
          }
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_release();
          goto LABEL_102;
        }
        v190 = v111;
        v273 = v112;
        v192 = *(_QWORD *)(v153 + 16);
        v191 = *(_QWORD *)(v153 + 24);
        v193 = v111;
        v194 = v276;
        v195 = v280;
        sub_1BA7CCCA0(v193, v276, v280);
        v196 = v194;
        v111 = v190;
        v197 = v190;
        v198 = v196;
        sub_1BA7CCCA0(v197, v196, v195);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        v199 = v284;
        sub_1BABC3158(v282, v283, v192, v191, (void (*)(uint64_t, uint64_t))FormatSyncImageContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAB92B90);
        v284 = v199;
        if (!v199)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          LOBYTE(v112) = v273;
          v121 = v282;
          v34 = v277;
          goto LABEL_75;
        }
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release();
        v233 = v111;
        v231 = v198;
        v234 = v198;
      }
      else
      {
        v273 = v112;
        v175 = *(_QWORD *)(v153 + 24);
        v239 = *(_QWORD *)(v153 + 16);
        v241 = v175;
        v240 = *(_QWORD *)(v153 + 32);
        v176 = v276;
        v296 = *(unsigned __int8 *)(v153 + 40);
        v177 = *(_QWORD *)(v153 + 56);
        v243 = *(_QWORD *)(v153 + 48);
        v242 = v177;
        LODWORD(v255) = *(unsigned __int16 *)(v153 + 64);
        v178 = *(_QWORD *)(v153 + 80);
        v257 = *(_QWORD *)(v153 + 72);
        v258 = v178;
        v179 = *(_QWORD *)(v153 + 96);
        v259 = *(_QWORD *)(v153 + 88);
        LODWORD(v256) = *(unsigned __int8 *)(v153 + 104);
        v180 = *(_QWORD *)(v153 + 112);
        v285 = v239;
        v286 = v175;
        *(_QWORD *)&v287 = v240;
        BYTE8(v287) = v296;
        *(_QWORD *)&v288 = v243;
        *((_QWORD *)&v288 + 1) = v177;
        v289 = v255;
        v290 = v257;
        v291 = v178;
        v292 = v259;
        v293 = v179;
        v294 = v256;
        v295 = v180;
        v181 = v280;
        sub_1BA7CCCA0(v111, v276, v280);
        sub_1BA7CCCA0(v111, v176, v181);
        v238 = v153 & 0x3FFFFFFFFFFFFFFFLL;
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        v182 = v180;
        v183 = v179;
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        v184 = v239;
        v185 = v241;
        v186 = v240;
        v187 = v296;
        sub_1BA60DF54(v239, v241, v240, v296);
        v188 = v243;
        v112 = v242;
        sub_1BA740E74(v243, v242, v255);
        sub_1BA60DEE4(v257);
        v236 = v183;
        sub_1BA69C808(v259, v183, v256);
        v237 = v182;
        sub_1BA895BA4(v182);
        v121 = v282;
        v189 = v284;
        FormatSymbolImage.bind(binder:context:)(v282, v283);
        v284 = v189;
        if (!v189)
        {
          sub_1BA60DFC4(v184, v185, v186, v187);
          sub_1BA740460(v188, v112, v255);
          sub_1BA60DF1C(v257);
          sub_1BA69C828(v259, v236, v256);
          sub_1BA895BB8(v237);
          swift_release();
          LOBYTE(v112) = v273;
          v34 = v277;
          v111 = v281;
LABEL_75:
          v75 = v267;
          v159 = v260;
          goto LABEL_76;
        }
        sub_1BA60DFC4(v184, v185, v186, v187);
        sub_1BA740460(v188, v112, v255);
        sub_1BA60DF1C(v257);
        sub_1BA69C828(v259, v236, v256);
        sub_1BA895BB8(v237);
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        v111 = v281;
        v233 = v281;
        v231 = v276;
        v234 = v276;
      }
      v224 = v280;
      sub_1BA7CCC64(v233, v234, v280);
      v232 = v273;
      v34 = v277;
      goto LABEL_106;
    }
    v273 = v33;
    v93 = *(_QWORD *)(v74 + 24);
    v256 = *(_QWORD *)(v74 + 16);
    v94 = v36;
    v257 = v93;
    v258 = *(_QWORD *)(v74 + 32);
    LODWORD(v259) = *(unsigned __int8 *)(v74 + 40);
    v260 = *(_OWORD *)(v74 + 48);
    LODWORD(v264) = *(unsigned __int16 *)(v74 + 64);
    v265 = *(_QWORD *)(v74 + 72);
    v95 = *(_QWORD *)(v74 + 88);
    v266 = *(_QWORD *)(v74 + 80);
    v96 = *(_QWORD *)(v74 + 96);
    v97 = *(unsigned __int8 *)(v74 + 104);
    v98 = *(_QWORD *)(v74 + 112);
    v285 = v256;
    v286 = v93;
    *(_QWORD *)&v287 = v258;
    BYTE8(v287) = v259;
    v288 = v260;
    v289 = v264;
    v290 = v265;
    v291 = v266;
    v292 = v95;
    v293 = v96;
    v294 = v97;
    v295 = v98;
    v99 = v276;
    v100 = v75;
    v101 = v280;
    v102 = v74;
    sub_1BA7CCCA0(v94, v276, v280);
    sub_1BA7CCCA0(v94, v99, v101);
    LODWORD(v101) = v97;
    v255 = v102 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain_n();
    v267 = v100;
    v103 = v98;
    v104 = v95;
    swift_bridgeObjectRetain();
    v105 = v256;
    v106 = v257;
    v107 = v258;
    v108 = v259;
    sub_1BA60DF54(v256, v257, v258, v259);
    sub_1BA740E74(v260, *((uint64_t *)&v260 + 1), v264);
    sub_1BA60DEE4(v265);
    v240 = v104;
    v241 = v96;
    LODWORD(v242) = v101;
    sub_1BA69C808(v104, v96, v101);
    v243 = v103;
    sub_1BA895BA4(v103);
    v109 = v284;
    FormatSymbolImage.bind(binder:context:)(v282, v283);
    v284 = v109;
    if (!v109)
    {
      sub_1BA60DFC4(v105, v106, v107, v108);
      sub_1BA740460(v260, *((uint64_t *)&v260 + 1), v264);
      sub_1BA60DF1C(v265);
      sub_1BA69C828(v240, v241, v242);
      sub_1BA895BB8(v243);
      swift_release();
      v79 = v280;
      LOBYTE(v33) = v273;
      v34 = v277;
      v52 = v278;
      v31 = v275;
      v75 = v267;
      goto LABEL_81;
    }
    sub_1BA60DFC4(v105, v106, v107, v108);
    sub_1BA740460(v260, *((uint64_t *)&v260 + 1), v264);
    sub_1BA60DF1C(v265);
    sub_1BA69C828(v240, v241, v242);
    sub_1BA895BB8(v243);
    swift_bridgeObjectRelease();
    swift_release_n();
    v214 = v280;
    v217 = v281;
    v213 = v276;
    sub_1BA7CCC64(v281, v276, v280);
    sub_1BA7CCC64(v217, v213, v214);
    sub_1BA7CCC14(v275, v274, v277, v273);
    v205 = v217;
LABEL_93:
    v206 = v213;
    v207 = v214;
    goto LABEL_109;
  }
  v44 = v33;
  v45 = v36;
  v46 = *(_QWORD *)(v36 + 48);
  v47 = *(_QWORD *)(v45 + 56);
  v48 = v45;
  v49 = *(unsigned __int8 *)(v45 + 64);
  if (v49 > 1)
  {
    v87 = v276;
    if (v49 == 2)
    {
      v88 = *(_QWORD *)(v46 + 16);
      v89 = v280;
      sub_1BA7CCCA0(v48, v276, v280);
      if (v88)
      {
        v273 = v44;
        swift_bridgeObjectRetain();
        sub_1BA7CCCA0(v48, v87, v89);
        sub_1BA76F5C4(v46, v47, 2u);
        swift_bridgeObjectRetain();
        v90 = (_BYTE *)(v46 + 40);
        do
        {
          if ((*v90 & 1) == 0)
          {
            v91 = *((_QWORD *)v90 - 1);
            v285 = v91;
            sub_1BA7E8124(v91, 0);
            swift_retain();
            v92 = v284;
            FormatFloat.bind(binder:context:)();
            v284 = v92;
            if (v92)
            {
              sub_1BA72C46C(v91, 0);
              sub_1BA72C46C(v91, 0);
              swift_bridgeObjectRelease_n();
              sub_1BA76F520(v46, v47, 2u);
              v211 = v276;
              v212 = v280;
              sub_1BA7CCC64(v48, v276, v280);
              sub_1BA7CCC64(v48, v211, v212);
              sub_1BA7CCC14(v275, v274, v277, v273);
              v205 = v48;
              v206 = v211;
              goto LABEL_89;
            }
            sub_1BA72C46C(v91, 0);
            sub_1BA72C46C(v91, 0);
          }
          v90 += 16;
          --v88;
        }
        while (v88);
        swift_bridgeObjectRelease_n();
        LOBYTE(v44) = v273;
      }
      else
      {
        sub_1BA7CCCA0(v48, v87, v89);
        sub_1BA76F5C4(v46, v47, 2u);
      }
      swift_bridgeObjectRetain();
      v165 = v284;
      sub_1BABB07FC(v282, v283, v47);
      v284 = v165;
      if (v165)
      {
        swift_bridgeObjectRelease();
        sub_1BA76F520(v46, v47, 2u);
        v222 = v276;
        v223 = v280;
        sub_1BA7CCC64(v48, v276, v280);
        sub_1BA7CCC64(v48, v222, v223);
        sub_1BA7CCC14(v275, v274, v277, v44);
        v205 = v48;
        v206 = v222;
        v207 = v223;
        goto LABEL_109;
      }
      swift_bridgeObjectRelease();
      sub_1BA76F520(v46, v47, 2u);
      v166 = v276;
      v167 = v280;
      sub_1BA7CCC64(v48, v276, v280);
      sub_1BA7CCC64(v48, v166, v167);
    }
    v52 = v278;
    goto LABEL_83;
  }
  v273 = v44;
  v50 = v276;
  if (!v49)
  {
    v51 = *(_QWORD *)(v46 + 16);
    v52 = v278;
    if (v51)
    {
      v53 = v280;
      sub_1BA7CCCA0(v48, v276, v280);
      sub_1BA76F5C4(v46, v47, 0);
      sub_1BA7CCCA0(v48, v50, v53);
      sub_1BA76F5C4(v46, v47, 0);
      v54 = (_BYTE *)(v46 + 40);
      do
      {
        if ((*v54 & 1) == 0)
        {
          v55 = *((_QWORD *)v54 - 1);
          v285 = v55;
          sub_1BA7E8124(v55, 0);
          swift_retain();
          v56 = v284;
          FormatFloat.bind(binder:context:)();
          v284 = v56;
          if (v56)
          {
            sub_1BA72C46C(v55, 0);
            sub_1BA72C46C(v55, 0);
            sub_1BA76F520(v46, v47, 0);
            v208 = v46;
            v209 = v47;
            v210 = 0;
            goto LABEL_88;
          }
          sub_1BA72C46C(v55, 0);
          sub_1BA72C46C(v55, 0);
        }
        v54 += 16;
        --v51;
      }
      while (v51);
      sub_1BA76F520(v46, v47, 0);
      v161 = v46;
      v162 = v47;
      v163 = 0;
      goto LABEL_62;
    }
LABEL_83:
    __asm { BR              X9 }
  }
  v122 = *(_QWORD *)(v46 + 16);
  v52 = v278;
  if (!v122)
    goto LABEL_83;
  v123 = v280;
  sub_1BA7CCCA0(v48, v276, v280);
  sub_1BA76F5C4(v46, v47, 1u);
  sub_1BA7CCCA0(v48, v50, v123);
  sub_1BA76F5C4(v46, v47, 1u);
  v124 = (_BYTE *)(v46 + 40);
  while ((*v124 & 1) != 0)
  {
LABEL_45:
    v124 += 16;
    if (!--v122)
    {
      sub_1BA76F520(v46, v47, 1u);
      v161 = v46;
      v162 = v47;
      v163 = 1;
LABEL_62:
      sub_1BA76F520(v161, v162, v163);
      v164 = v280;
      sub_1BA7CCC64(v48, v50, v280);
      sub_1BA7CCC64(v48, v50, v164);
      goto LABEL_83;
    }
  }
  v125 = *((_QWORD *)v124 - 1);
  v285 = v125;
  sub_1BA7E8124(v125, 0);
  swift_retain();
  v126 = v284;
  FormatFloat.bind(binder:context:)();
  v284 = v126;
  if (!v126)
  {
    sub_1BA72C46C(v125, 0);
    sub_1BA72C46C(v125, 0);
    goto LABEL_45;
  }
  sub_1BA72C46C(v125, 0);
  sub_1BA72C46C(v125, 0);
  sub_1BA76F520(v46, v47, 1u);
  v208 = v46;
  v209 = v47;
  v210 = 1;
LABEL_88:
  sub_1BA76F520(v208, v209, v210);
  v212 = v280;
  sub_1BA7CCC64(v48, v50, v280);
  sub_1BA7CCC64(v48, v50, v212);
  sub_1BA7CCC14(v275, v274, v277, v273);
  v205 = v48;
  v206 = v50;
LABEL_89:
  v207 = v212;
LABEL_109:
  sub_1BA7CCC64(v205, v206, v207);
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_1BAB8F380(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned __int8 v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned __int8 v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unsigned __int8 v166;
  uint64_t v167;
  uint64_t v168;
  _BYTE *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _BYTE *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unsigned __int8 v184;
  uint64_t v185;
  uint64_t v186;
  _BYTE *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _BYTE *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unsigned __int8 v196;
  uint64_t v197;
  uint64_t v198;
  _BYTE *v199;
  uint64_t v200;
  uint64_t v201;
  unsigned __int8 v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned __int8 v206;
  uint64_t v207;
  uint64_t v208;
  unsigned __int8 v209;
  uint64_t v210;
  uint64_t v211;
  unsigned __int8 v212;
  uint64_t v213;
  uint64_t v214;
  unsigned __int8 v215;
  uint64_t v216;
  uint64_t v217;
  unsigned __int8 v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char v263;
  char v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char v273;
  uint64_t v274;
  unint64_t v275;
  uint64_t v276;

  v266 = *(_QWORD *)(a3 + 16);
  if (!v266)
    return result;
  v275 = result;
  v267 = a3 + 32;
  swift_bridgeObjectRetain();
  v4 = 0;
  v274 = a2;
  while (1)
  {
    v5 = v267 + 32 * v4;
    v7 = *(_QWORD *)v5;
    v6 = *(_QWORD *)(v5 + 8);
    v8 = *(_BYTE *)(v5 + 16);
    v9 = *(_QWORD *)(v5 + 24);
    if (!(v9 >> 62))
    {
      v271 = v4;
      v19 = *(_QWORD *)(v9 + 16);
      v18 = *(_QWORD *)(v9 + 24);
      v20 = *(_QWORD *)(v9 + 32);
      v21 = *(_BYTE *)(v9 + 40);
      v22 = *(unsigned __int16 *)(v9 + 64);
      v23 = *(_QWORD *)(v9 + 72);
      v254 = *(_QWORD *)(v9 + 56);
      v265 = *(_QWORD *)(v9 + 88);
      v257 = *(_QWORD *)(v9 + 96);
      v262 = *(_QWORD *)(v9 + 48);
      v264 = *(_BYTE *)(v9 + 104);
      v268 = *(_QWORD *)(v9 + 112);
      v270 = *(_QWORD *)v5;
      v272 = *(_QWORD *)(v5 + 8);
      v273 = *(_BYTE *)(v5 + 16);
      sub_1BA73B1CC(v7, v6, v8);
      swift_retain_n();
      sub_1BA60DF54(v19, v18, v20, v21);
      sub_1BA740E74(v262, v254, v22);
      sub_1BA60DEE4(v23);
      sub_1BA69C808(v265, v257, v264);
      sub_1BA895BA4(v268);
      FormatSymbolImage.bind(binder:context:)(v275, v274);
      if (v276)
      {
        sub_1BA60DFC4(v19, v18, v20, v21);
        sub_1BA740460(v262, v254, v22);
        sub_1BA60DF1C(v23);
        sub_1BA69C828(v265, v257, v264);
        sub_1BA895BB8(v268);
        swift_release();
        goto LABEL_290;
      }
      sub_1BA60DFC4(v19, v18, v20, v21);
      sub_1BA740460(v262, v254, v22);
      sub_1BA60DF1C(v23);
      sub_1BA69C828(v265, v257, v264);
      sub_1BA895BB8(v268);
      swift_release();
      sub_1BA73B1B8(v270, v272, v8);
      goto LABEL_267;
    }
    if (v9 >> 62 != 1)
    {
      v24 = *(_QWORD *)(v9 + 16);
      v269 = *(_QWORD *)(v9 + 24);
      v273 = *(_BYTE *)(v5 + 16);
      v271 = v4;
      v272 = *(_QWORD *)(v5 + 8);
      v270 = *(_QWORD *)v5;
      if (!(v24 >> 62))
      {
        v39 = *(_QWORD *)(v24 + 16);
        v40 = *(_QWORD *)(v24 + 24);
        v41 = *(_QWORD *)(v24 + 32);
        v42 = *(_BYTE *)(v24 + 40);
        v43 = *(_QWORD *)(v24 + 48);
        v44 = *(unsigned __int16 *)(v24 + 64);
        v255 = *(_QWORD *)(v24 + 72);
        v258 = *(_QWORD *)(v24 + 88);
        v247 = *(_QWORD *)(v24 + 56);
        v250 = *(_QWORD *)(v24 + 96);
        v263 = *(_BYTE *)(v24 + 104);
        v45 = *(_QWORD *)(v24 + 112);
        sub_1BA73B1CC(v7, v6, v8);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA60DF54(v39, v40, v41, v42);
        sub_1BA740E74(v43, v247, v44);
        sub_1BA60DEE4(v255);
        sub_1BA69C808(v258, v250, v263);
        sub_1BA895BA4(v45);
        FormatSymbolImage.bind(binder:context:)(v275, v274);
        if (v276)
        {
          sub_1BA60DFC4(v39, v40, v41, v42);
          sub_1BA740460(v43, v247, v44);
          sub_1BA60DF1C(v255);
          sub_1BA69C828(v258, v250, v263);
          sub_1BA895BB8(v45);
          swift_release();
          swift_bridgeObjectRelease();
LABEL_289:
          swift_release_n();
          goto LABEL_290;
        }
        sub_1BA60DFC4(v39, v40, v41, v42);
        sub_1BA740460(v43, v247, v44);
        sub_1BA60DF1C(v255);
        sub_1BA69C828(v258, v250, v263);
        sub_1BA895BB8(v45);
        swift_release();
        v27 = v274;
        goto LABEL_265;
      }
      if (v24 >> 62 == 1)
      {
        v25 = *(_QWORD *)(v24 + 48);
        v26 = *(_QWORD *)(v24 + 56);
        if (*(unsigned __int8 *)(v24 + 64) <= 1u)
        {
          v27 = v274;
          if (!*(_BYTE *)(v24 + 64))
          {
            v28 = *(_QWORD *)(v25 + 16);
            if (v28)
            {
              v29 = *(_QWORD *)v5;
              v30 = *(_QWORD *)(v5 + 8);
              sub_1BA76F5C4(v25, v26, 0);
              sub_1BA73B1CC(v29, v30, v8);
              swift_retain_n();
              swift_retain_n();
              v27 = v274;
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v25, v26, 0);
              v31 = (_BYTE *)(v25 + 40);
              do
              {
                if ((*v31 & 1) == 0)
                {
                  v32 = *((_QWORD *)v31 - 1);
                  swift_retain_n();
                  FormatFloat.bind(binder:context:)();
                  if (v276)
                  {
                    sub_1BA72C46C(v32, 0);
                    sub_1BA72C46C(v32, 0);
                    sub_1BA76F520(v25, v26, 0);
                    v204 = v25;
                    v205 = v26;
                    v206 = 0;
                    goto LABEL_279;
                  }
                  sub_1BA72C46C(v32, 0);
                  sub_1BA72C46C(v32, 0);
                }
                v31 += 16;
                --v28;
              }
              while (v28);
              sub_1BA76F520(v25, v26, 0);
              v108 = v25;
              v109 = v26;
              v110 = 0;
              goto LABEL_135;
            }
LABEL_83:
            sub_1BA73B1CC(v7, v6, v8);
            swift_retain_n();
            swift_retain();
            swift_bridgeObjectRetain();
LABEL_265:
            swift_bridgeObjectRetain();
            sub_1BAB92B90(v275, v27, v269);
            if (v276)
            {
              swift_release();
              swift_bridgeObjectRelease_n();
              goto LABEL_315;
            }
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
            sub_1BA73B1B8(v270, v272, v8);
LABEL_267:
            swift_release();
            v4 = v271;
            goto LABEL_268;
          }
          v81 = *(_QWORD *)(v25 + 16);
          if (!v81)
            goto LABEL_83;
          v82 = *(_QWORD *)v5;
          v83 = *(_QWORD *)(v5 + 8);
          sub_1BA76F5C4(v25, v26, 1u);
          sub_1BA73B1CC(v82, v83, v8);
          swift_retain_n();
          swift_retain_n();
          v27 = v274;
          swift_bridgeObjectRetain();
          sub_1BA76F5C4(v25, v26, 1u);
          v84 = (_BYTE *)(v25 + 40);
          do
          {
            if ((*v84 & 1) == 0)
            {
              v85 = *((_QWORD *)v84 - 1);
              swift_retain_n();
              FormatFloat.bind(binder:context:)();
              if (v276)
              {
                sub_1BA72C46C(v85, 0);
                sub_1BA72C46C(v85, 0);
                sub_1BA76F520(v25, v26, 1u);
                v204 = v25;
                v205 = v26;
                v206 = 1;
                goto LABEL_279;
              }
              sub_1BA72C46C(v85, 0);
              sub_1BA72C46C(v85, 0);
            }
            v84 += 16;
            --v81;
          }
          while (v81);
          sub_1BA76F520(v25, v26, 1u);
          v108 = v25;
          v109 = v26;
          v110 = 1;
LABEL_135:
          sub_1BA76F520(v108, v109, v110);
          swift_release();
          goto LABEL_265;
        }
        v27 = v274;
        if (*(_BYTE *)(v24 + 64) != 2)
          goto LABEL_83;
        v58 = *(_QWORD *)(v25 + 16);
        if (v58)
        {
          v59 = *(_QWORD *)v5;
          v60 = *(_QWORD *)(v5 + 8);
          swift_bridgeObjectRetain();
          sub_1BA73B1CC(v59, v60, v8);
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA76F5C4(v25, v26, 2u);
          swift_bridgeObjectRetain();
          v61 = (_BYTE *)(v25 + 40);
          do
          {
            if ((*v61 & 1) == 0)
            {
              v62 = *((_QWORD *)v61 - 1);
              sub_1BA7E8124(v62, 0);
              swift_retain();
              FormatFloat.bind(binder:context:)();
              v63 = v62;
              if (v276)
              {
LABEL_124:
                sub_1BA72C46C(v63, 0);
                sub_1BA72C46C(v62, 0);
                swift_bridgeObjectRelease_n();
                v204 = v25;
                v205 = v26;
                v206 = 2;
LABEL_279:
                sub_1BA76F520(v204, v205, v206);
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                v203 = v270;
                goto LABEL_280;
              }
              sub_1BA72C46C(v62, 0);
              sub_1BA72C46C(v62, 0);
            }
            v61 += 16;
            --v58;
          }
          while (v58);
          swift_bridgeObjectRelease_n();
          v111 = *(_QWORD *)(v26 + 16);
          if (!v111)
            goto LABEL_134;
        }
        else
        {
          sub_1BA73B1CC(v7, v6, v8);
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA76F5C4(v25, v26, 2u);
          v111 = *(_QWORD *)(v26 + 16);
          if (!v111)
          {
LABEL_134:
            v108 = v25;
            v109 = v26;
            v110 = 2;
            goto LABEL_135;
          }
        }
        swift_bridgeObjectRetain_n();
        v112 = (_BYTE *)(v26 + 40);
        do
        {
          if ((*v112 & 1) == 0)
          {
            v62 = *((_QWORD *)v112 - 1);
            sub_1BA7E8124(v62, 0);
            swift_retain();
            FormatFloat.bind(binder:context:)();
            v63 = v62;
            if (v276)
              goto LABEL_124;
            sub_1BA72C46C(v62, 0);
            sub_1BA72C46C(v62, 0);
          }
          v112 += 16;
          --v111;
        }
        while (v111);
        swift_bridgeObjectRelease_n();
        goto LABEL_134;
      }
      v47 = *(_QWORD *)(v24 + 16);
      v46 = *(_QWORD *)(v24 + 24);
      if (!(v47 >> 62))
      {
        v64 = *(_QWORD *)(v47 + 16);
        v65 = *(_QWORD *)(v47 + 24);
        v66 = *(_QWORD *)(v47 + 32);
        v67 = *(_BYTE *)(v47 + 40);
        v68 = *(_QWORD *)(v24 + 24);
        v231 = *(_QWORD *)(v47 + 56);
        v233 = *(_QWORD *)(v47 + 48);
        v69 = *(unsigned __int16 *)(v47 + 64);
        v240 = *(_QWORD *)(v47 + 72);
        v244 = *(_QWORD *)(v47 + 88);
        v249 = *(_QWORD *)(v47 + 96);
        v252 = *(_BYTE *)(v47 + 104);
        v256 = *(_QWORD *)(v47 + 112);
        sub_1BA73B1CC(v7, v6, v8);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA60DF54(v64, v65, v66, v67);
        sub_1BA740E74(v233, v231, v69);
        sub_1BA60DEE4(v240);
        sub_1BA69C808(v244, v249, v252);
        sub_1BA895BA4(v256);
        FormatSymbolImage.bind(binder:context:)(v275, v274);
        if (v276)
        {
          sub_1BA60DFC4(v64, v65, v66, v67);
          sub_1BA740460(v233, v231, v69);
          sub_1BA60DF1C(v240);
          sub_1BA69C828(v244, v249, v252);
          sub_1BA895BB8(v256);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          goto LABEL_289;
        }
        sub_1BA60DFC4(v64, v65, v66, v67);
        sub_1BA740460(v233, v231, v69);
        sub_1BA60DF1C(v240);
        sub_1BA69C828(v244, v249, v252);
        sub_1BA895BB8(v256);
        swift_release();
        v27 = v274;
        v46 = v68;
        goto LABEL_263;
      }
      if (v47 >> 62 == 1)
      {
        v251 = *(_QWORD *)(v47 + 48);
        v248 = *(_QWORD *)(v47 + 56);
        if (*(unsigned __int8 *)(v47 + 64) > 1u)
        {
          v27 = v274;
          if (*(_BYTE *)(v47 + 64) == 2)
          {
            v87 = *(_QWORD *)(v251 + 16);
            if (v87)
            {
              v88 = *(_QWORD *)v5;
              v89 = *(_QWORD *)(v5 + 8);
              swift_bridgeObjectRetain();
              sub_1BA73B1CC(v88, v89, v8);
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v251, v248, 2u);
              swift_bridgeObjectRetain();
              v90 = (_BYTE *)(v251 + 40);
              do
              {
                if ((*v90 & 1) == 0)
                {
                  v91 = *((_QWORD *)v90 - 1);
                  sub_1BA7E8124(v91, 0);
                  swift_retain();
                  FormatFloat.bind(binder:context:)();
                  v92 = v91;
                  if (v276)
                  {
LABEL_100:
                    sub_1BA72C46C(v92, 0);
                    sub_1BA72C46C(v91, 0);
                    swift_bridgeObjectRelease_n();
                    sub_1BA76F520(v251, v248, 2u);
                    goto LABEL_285;
                  }
                  sub_1BA72C46C(v91, 0);
                  sub_1BA72C46C(v91, 0);
                }
                v90 += 16;
                --v87;
              }
              while (v87);
              swift_bridgeObjectRelease_n();
              v141 = v248;
            }
            else
            {
              sub_1BA73B1CC(v7, v6, v8);
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              v141 = v248;
              sub_1BA76F5C4(v251, v248, 2u);
            }
            v142 = *(_QWORD *)(v141 + 16);
            if (v142)
            {
              swift_bridgeObjectRetain_n();
              v143 = (_BYTE *)(v141 + 40);
              do
              {
                if ((*v143 & 1) == 0)
                {
                  v91 = *((_QWORD *)v143 - 1);
                  sub_1BA7E8124(v91, 0);
                  swift_retain();
                  FormatFloat.bind(binder:context:)();
                  v92 = v91;
                  if (v276)
                    goto LABEL_100;
                  sub_1BA72C46C(v91, 0);
                  sub_1BA72C46C(v91, 0);
                }
                v143 += 16;
                --v142;
              }
              while (v142);
              swift_bridgeObjectRelease_n();
              sub_1BA76F520(v251, v248, 2u);
              swift_release();
            }
            else
            {
              sub_1BA76F520(v251, v141, 2u);
              swift_release();
            }
            goto LABEL_263;
          }
        }
        else
        {
          v27 = v274;
          if (*(_BYTE *)(v47 + 64))
          {
            v113 = *(_QWORD *)(v251 + 16);
            if (v113)
            {
              v114 = *(_QWORD *)v5;
              v115 = *(_QWORD *)(v5 + 8);
              sub_1BA76F5C4(v251, v248, 1u);
              sub_1BA73B1CC(v114, v115, v8);
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v259 = v46;
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v251, v248, 1u);
              v116 = (_BYTE *)(v251 + 40);
              do
              {
                if ((*v116 & 1) == 0)
                {
                  v117 = *((_QWORD *)v116 - 1);
                  sub_1BA7E8124(v117, 0);
                  swift_retain();
                  FormatFloat.bind(binder:context:)();
                  if (v276)
                  {
                    sub_1BA72C46C(v117, 0);
                    sub_1BA72C46C(v117, 0);
                    sub_1BA76F520(v251, v248, 1u);
                    v207 = v251;
                    v208 = v248;
                    v209 = 1;
LABEL_284:
                    sub_1BA76F520(v207, v208, v209);
LABEL_285:
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    sub_1BA73B1B8(v270, v272, v8);
                    swift_release();
                    return swift_bridgeObjectRelease();
                  }
                  sub_1BA72C46C(v117, 0);
                  sub_1BA72C46C(v117, 0);
                }
                v116 += 16;
                --v113;
              }
              while (v113);
              sub_1BA76F520(v251, v248, 1u);
              v138 = v251;
              v139 = v248;
              v140 = 1;
              goto LABEL_161;
            }
          }
          else
          {
            v48 = *(_QWORD *)(v251 + 16);
            if (v48)
            {
              v49 = *(_QWORD *)v5;
              v50 = *(_QWORD *)(v5 + 8);
              sub_1BA76F5C4(v251, v248, 0);
              sub_1BA73B1CC(v49, v50, v8);
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v259 = v46;
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v251, v248, 0);
              v51 = (_BYTE *)(v251 + 40);
              do
              {
                if ((*v51 & 1) == 0)
                {
                  v57 = *((_QWORD *)v51 - 1);
                  sub_1BA7E8124(v57, 0);
                  swift_retain();
                  FormatFloat.bind(binder:context:)();
                  if (v276)
                  {
                    sub_1BA72C46C(v57, 0);
                    sub_1BA72C46C(v57, 0);
                    sub_1BA76F520(v251, v248, 0);
                    v207 = v251;
                    v208 = v248;
                    v209 = 0;
                    goto LABEL_284;
                  }
                  sub_1BA72C46C(v57, 0);
                  sub_1BA72C46C(v57, 0);
                }
                v51 += 16;
                --v48;
              }
              while (v48);
              sub_1BA76F520(v251, v248, 0);
              v138 = v251;
              v139 = v248;
              v140 = 0;
LABEL_161:
              sub_1BA76F520(v138, v139, v140);
              swift_release();
              v46 = v259;
              goto LABEL_263;
            }
          }
        }
        sub_1BA73B1CC(v7, v6, v8);
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
LABEL_263:
        swift_bridgeObjectRetain();
        sub_1BAB92B90(v275, v27, v46);
        if (v276)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          goto LABEL_315;
        }
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_265;
      }
      v70 = *(_QWORD *)(v47 + 16);
      v253 = *(_QWORD *)(v47 + 24);
      if (!(v70 >> 62))
      {
        v93 = *(_QWORD *)(v70 + 16);
        v94 = *(_QWORD *)(v70 + 24);
        v95 = *(_QWORD *)(v70 + 32);
        v96 = *(_BYTE *)(v70 + 40);
        v97 = *(_QWORD *)(v24 + 24);
        v98 = *(_QWORD *)(v70 + 48);
        v99 = *(unsigned __int16 *)(v70 + 64);
        v225 = *(_QWORD *)(v70 + 56);
        v229 = *(_QWORD *)(v70 + 72);
        v234 = *(_QWORD *)(v70 + 88);
        v241 = *(_QWORD *)(v70 + 96);
        v243 = *(_BYTE *)(v70 + 104);
        v245 = *(_QWORD *)(v70 + 112);
        sub_1BA73B1CC(v7, v6, v8);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        v260 = v97;
        swift_bridgeObjectRetain();
        sub_1BA60DF54(v93, v94, v95, v96);
        sub_1BA740E74(v98, v225, v99);
        sub_1BA60DEE4(v229);
        sub_1BA69C808(v234, v241, v243);
        sub_1BA895BA4(v245);
        FormatSymbolImage.bind(binder:context:)(v275, v274);
        if (v276)
        {
          sub_1BA60DFC4(v93, v94, v95, v96);
          sub_1BA740460(v98, v225, v99);
          sub_1BA60DF1C(v229);
          sub_1BA69C828(v234, v241, v243);
          sub_1BA895BB8(v245);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_290;
        }
        sub_1BA60DFC4(v93, v94, v95, v96);
        sub_1BA740460(v98, v225, v99);
        sub_1BA60DF1C(v229);
        sub_1BA69C828(v234, v241, v243);
        sub_1BA895BB8(v245);
        swift_release();
        v27 = v274;
        goto LABEL_103;
      }
      if (v70 >> 62 == 1)
      {
        v71 = *(_QWORD *)(v70 + 48);
        v242 = *(_QWORD *)(v70 + 56);
        if (*(unsigned __int8 *)(v70 + 64) > 1u)
        {
          v27 = v274;
          if (*(_BYTE *)(v70 + 64) == 2)
          {
            v118 = *(_QWORD *)(v71 + 16);
            if (v118)
            {
              v119 = *(_QWORD *)v5;
              v120 = *(_QWORD *)(v5 + 8);
              swift_bridgeObjectRetain();
              sub_1BA73B1CC(v119, v120, v8);
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v71, v242, 2u);
              swift_bridgeObjectRetain();
              v121 = (_BYTE *)(v71 + 40);
              do
              {
                if ((*v121 & 1) == 0)
                {
                  v122 = *((_QWORD *)v121 - 1);
                  sub_1BA7E8124(v122, 0);
                  swift_retain();
                  FormatFloat.bind(binder:context:)();
                  v123 = v122;
                  if (v276)
                  {
LABEL_293:
                    sub_1BA72C46C(v123, 0);
                    sub_1BA72C46C(v122, 0);
                    swift_bridgeObjectRelease_n();
                    sub_1BA76F520(v71, v242, 2u);
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release();
                    goto LABEL_315;
                  }
                  sub_1BA72C46C(v122, 0);
                  sub_1BA72C46C(v122, 0);
                }
                v121 += 16;
                --v118;
              }
              while (v118);
              swift_bridgeObjectRelease_n();
              v167 = v242;
            }
            else
            {
              sub_1BA73B1CC(v7, v6, v8);
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              v167 = v242;
              sub_1BA76F5C4(v71, v242, 2u);
            }
            v168 = *(_QWORD *)(v167 + 16);
            if (v168)
            {
              swift_bridgeObjectRetain_n();
              v169 = (_BYTE *)(v167 + 40);
              do
              {
                if ((*v169 & 1) == 0)
                {
                  v122 = *((_QWORD *)v169 - 1);
                  sub_1BA7E8124(v122, 0);
                  swift_retain();
                  FormatFloat.bind(binder:context:)();
                  v123 = v122;
                  if (v276)
                    goto LABEL_293;
                  sub_1BA72C46C(v122, 0);
                  sub_1BA72C46C(v122, 0);
                }
                v169 += 16;
                --v168;
              }
              while (v168);
              swift_bridgeObjectRelease_n();
              sub_1BA76F520(v71, v242, 2u);
              swift_release();
            }
            else
            {
              sub_1BA76F520(v71, v167, 2u);
              swift_release();
            }
            goto LABEL_260;
          }
        }
        else
        {
          v27 = v274;
          if (*(_BYTE *)(v70 + 64))
          {
            v144 = *(_QWORD *)(v71 + 16);
            if (v144)
            {
              v145 = *(_QWORD *)v5;
              v146 = *(_QWORD *)(v5 + 8);
              sub_1BA76F5C4(v71, v242, 1u);
              sub_1BA73B1CC(v145, v146, v8);
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v260 = v46;
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v71, v242, 1u);
              v147 = (_BYTE *)(v71 + 40);
              do
              {
                if ((*v147 & 1) == 0)
                {
                  v148 = *((_QWORD *)v147 - 1);
                  sub_1BA7E8124(v148, 0);
                  swift_retain();
                  FormatFloat.bind(binder:context:)();
                  if (v276)
                  {
                    sub_1BA72C46C(v148, 0);
                    sub_1BA72C46C(v148, 0);
                    sub_1BA76F520(v71, v242, 1u);
                    v210 = v71;
                    v211 = v242;
                    v212 = 1;
LABEL_292:
                    sub_1BA76F520(v210, v211, v212);
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
LABEL_315:
                    swift_release();
LABEL_290:
                    sub_1BA73B1B8(v270, v272, v273);
                    swift_bridgeObjectRelease();
                    return swift_release();
                  }
                  sub_1BA72C46C(v148, 0);
                  sub_1BA72C46C(v148, 0);
                }
                v147 += 16;
                --v144;
              }
              while (v144);
              sub_1BA76F520(v71, v242, 1u);
              v164 = v71;
              v165 = v242;
              v166 = 1;
              goto LABEL_195;
            }
          }
          else
          {
            v72 = *(_QWORD *)(v71 + 16);
            if (v72)
            {
              v73 = *(_QWORD *)v5;
              v74 = *(_QWORD *)(v5 + 8);
              sub_1BA76F5C4(v71, v242, 0);
              sub_1BA73B1CC(v73, v74, v8);
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v260 = v46;
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v71, v242, 0);
              v75 = (_BYTE *)(v71 + 40);
              do
              {
                if ((*v75 & 1) == 0)
                {
                  v86 = *((_QWORD *)v75 - 1);
                  sub_1BA7E8124(v86, 0);
                  swift_retain();
                  FormatFloat.bind(binder:context:)();
                  if (v276)
                  {
                    sub_1BA72C46C(v86, 0);
                    sub_1BA72C46C(v86, 0);
                    sub_1BA76F520(v71, v242, 0);
                    v210 = v71;
                    v211 = v242;
                    v212 = 0;
                    goto LABEL_292;
                  }
                  sub_1BA72C46C(v86, 0);
                  sub_1BA72C46C(v86, 0);
                }
                v75 += 16;
                --v72;
              }
              while (v72);
              sub_1BA76F520(v71, v242, 0);
              v164 = v71;
              v165 = v242;
              v166 = 0;
LABEL_195:
              sub_1BA76F520(v164, v165, v166);
              swift_release();
LABEL_103:
              v46 = v260;
LABEL_260:
              v149 = v253;
              goto LABEL_261;
            }
          }
        }
        sub_1BA73B1CC(v7, v6, v8);
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        v149 = v253;
        swift_bridgeObjectRetain();
LABEL_261:
        swift_bridgeObjectRetain();
        sub_1BAB92B90(v275, v27, v149);
        if (v276)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          goto LABEL_315;
        }
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_263;
      }
      v261 = *(_QWORD *)(v24 + 24);
      v100 = *(_QWORD *)(v70 + 16);
      v246 = *(_QWORD *)(v70 + 24);
      if (!(v100 >> 62))
      {
        v124 = *(_QWORD *)(v100 + 16);
        v125 = *(_QWORD *)(v100 + 24);
        v126 = *(_QWORD *)(v100 + 32);
        v127 = *(_BYTE *)(v100 + 40);
        v128 = *(_QWORD *)(v100 + 48);
        v129 = *(unsigned __int16 *)(v100 + 64);
        v221 = *(_QWORD *)(v100 + 56);
        v222 = *(_QWORD *)(v100 + 72);
        v226 = *(_QWORD *)(v100 + 88);
        v230 = *(_QWORD *)(v100 + 96);
        v232 = *(_BYTE *)(v100 + 104);
        v236 = *(_QWORD *)(v100 + 112);
        sub_1BA73B1CC(v7, v6, v8);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA60DF54(v124, v125, v126, v127);
        sub_1BA740E74(v128, v221, v129);
        sub_1BA60DEE4(v222);
        sub_1BA69C808(v226, v230, v232);
        sub_1BA895BA4(v236);
        FormatSymbolImage.bind(binder:context:)(v275, v274);
        if (v276)
        {
          sub_1BA60DFC4(v124, v125, v126, v127);
          sub_1BA740460(v128, v221, v129);
          sub_1BA60DF1C(v222);
          sub_1BA69C828(v226, v230, v232);
          sub_1BA895BB8(v236);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_314;
        }
        sub_1BA60DFC4(v124, v125, v126, v127);
        sub_1BA740460(v128, v221, v129);
        sub_1BA60DF1C(v222);
        sub_1BA69C828(v226, v230, v232);
        sub_1BA895BB8(v236);
        swift_release();
        v27 = v274;
        goto LABEL_147;
      }
      if (v100 >> 62 == 1)
      {
        v102 = *(_QWORD *)(v100 + 48);
        v101 = *(_QWORD *)(v100 + 56);
        if (*(unsigned __int8 *)(v100 + 64) <= 1u)
        {
          if (*(_BYTE *)(v100 + 64))
          {
            v170 = *(_QWORD *)(v102 + 16);
            if (v170)
            {
              v239 = *(_QWORD *)(v100 + 56);
              v171 = *(_QWORD *)v5;
              v172 = *(_QWORD *)(v5 + 8);
              sub_1BA76F5C4(v102, v101, 1u);
              sub_1BA73B1CC(v171, v172, v8);
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v102, v239, 1u);
              v173 = (_BYTE *)(v102 + 40);
              v27 = v274;
              do
              {
                if ((*v173 & 1) == 0)
                {
                  v174 = *((_QWORD *)v173 - 1);
                  sub_1BA7E8124(v174, 0);
                  swift_retain();
                  FormatFloat.bind(binder:context:)();
                  if (v276)
                  {
                    sub_1BA72C46C(v174, 0);
                    sub_1BA72C46C(v174, 0);
                    sub_1BA76F520(v102, v239, 1u);
                    v213 = v102;
                    v214 = v239;
                    v215 = 1;
LABEL_299:
                    sub_1BA76F520(v213, v214, v215);
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
LABEL_313:
                    swift_release();
LABEL_314:
                    swift_release();
                    swift_bridgeObjectRelease();
                    goto LABEL_315;
                  }
                  sub_1BA72C46C(v174, 0);
                  sub_1BA72C46C(v174, 0);
                }
                v173 += 16;
                --v170;
              }
              while (v170);
              sub_1BA76F520(v102, v239, 1u);
              v182 = v102;
              v183 = v239;
              v184 = 1;
              goto LABEL_238;
            }
          }
          else
          {
            v103 = *(_QWORD *)(v102 + 16);
            if (v103)
            {
              v235 = *(_QWORD *)(v100 + 56);
              v104 = *(_QWORD *)v5;
              v105 = *(_QWORD *)(v5 + 8);
              sub_1BA76F5C4(v102, v101, 0);
              sub_1BA73B1CC(v104, v105, v8);
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v102, v235, 0);
              v106 = (_BYTE *)(v102 + 40);
              v27 = v274;
              do
              {
                if ((*v106 & 1) == 0)
                {
                  v107 = *((_QWORD *)v106 - 1);
                  sub_1BA7E8124(v107, 0);
                  swift_retain();
                  FormatFloat.bind(binder:context:)();
                  if (v276)
                  {
                    sub_1BA72C46C(v107, 0);
                    sub_1BA72C46C(v107, 0);
                    sub_1BA76F520(v102, v235, 0);
                    v213 = v102;
                    v214 = v235;
                    v215 = 0;
                    goto LABEL_299;
                  }
                  sub_1BA72C46C(v107, 0);
                  sub_1BA72C46C(v107, 0);
                }
                v106 += 16;
                --v103;
              }
              while (v103);
              sub_1BA76F520(v102, v235, 0);
              v182 = v102;
              v183 = v235;
              v184 = 0;
LABEL_238:
              sub_1BA76F520(v182, v183, v184);
              swift_release();
              v46 = v261;
              goto LABEL_258;
            }
          }
          goto LABEL_212;
        }
        if (*(_BYTE *)(v100 + 64) != 2)
        {
LABEL_212:
          sub_1BA73B1CC(v7, v6, v8);
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
LABEL_257:
          v27 = v274;
          goto LABEL_258;
        }
        v238 = *(_QWORD *)(v100 + 56);
        v150 = *(_QWORD *)(v102 + 16);
        v27 = v274;
        if (v150)
        {
          v151 = *(_QWORD *)v5;
          v152 = *(_QWORD *)(v5 + 8);
          swift_bridgeObjectRetain();
          sub_1BA73B1CC(v151, v152, v8);
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA76F5C4(v102, v238, 2u);
          swift_bridgeObjectRetain();
          v153 = (_BYTE *)(v102 + 40);
          do
          {
            if ((*v153 & 1) == 0)
            {
              v154 = *((_QWORD *)v153 - 1);
              sub_1BA7E8124(v154, 0);
              swift_retain();
              FormatFloat.bind(binder:context:)();
              if (v276)
              {
LABEL_300:
                sub_1BA72C46C(v154, 0);
                sub_1BA72C46C(v154, 0);
                swift_bridgeObjectRelease_n();
                sub_1BA76F520(v102, v238, 2u);
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_313;
              }
              sub_1BA72C46C(v154, 0);
              sub_1BA72C46C(v154, 0);
            }
            v153 += 16;
            --v150;
          }
          while (v150);
          swift_bridgeObjectRelease_n();
          v185 = v238;
        }
        else
        {
          sub_1BA73B1CC(v7, v6, v8);
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          v185 = v238;
          sub_1BA76F5C4(v102, v238, 2u);
        }
        v186 = *(_QWORD *)(v185 + 16);
        if (v186)
        {
          swift_bridgeObjectRetain_n();
          v187 = (_BYTE *)(v185 + 40);
          do
          {
            if ((*v187 & 1) == 0)
            {
              v154 = *((_QWORD *)v187 - 1);
              sub_1BA7E8124(v154, 0);
              swift_retain();
              FormatFloat.bind(binder:context:)();
              if (v276)
                goto LABEL_300;
              sub_1BA72C46C(v154, 0);
              sub_1BA72C46C(v154, 0);
            }
            v187 += 16;
            --v186;
          }
          while (v186);
          swift_bridgeObjectRelease_n();
          v182 = v102;
          v183 = v238;
          v184 = 2;
          goto LABEL_238;
        }
        sub_1BA76F520(v102, v185, 2u);
        swift_release();
LABEL_147:
        v46 = v261;
LABEL_258:
        swift_bridgeObjectRetain();
        sub_1BAB92B90(v275, v27, v246);
        if (v276)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          goto LABEL_313;
        }
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_260;
      }
      v130 = *(_QWORD *)(v100 + 16);
      v237 = *(_QWORD *)(v100 + 24);
      if (!(v130 >> 62))
      {
        v155 = *(_QWORD *)(v130 + 16);
        v156 = *(_QWORD *)(v130 + 24);
        v157 = *(_QWORD *)(v130 + 32);
        v158 = *(_BYTE *)(v130 + 40);
        v159 = *(_QWORD *)(v130 + 48);
        v160 = *(unsigned __int16 *)(v130 + 64);
        v219 = *(_QWORD *)(v130 + 56);
        v220 = *(_QWORD *)(v130 + 72);
        v223 = *(_QWORD *)(v130 + 88);
        v224 = *(_QWORD *)(v130 + 96);
        v228 = *(_BYTE *)(v130 + 104);
        v161 = *(_QWORD *)(v130 + 112);
        sub_1BA73B1CC(v7, v6, v8);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA60DF54(v155, v156, v157, v158);
        sub_1BA740E74(v159, v219, v160);
        sub_1BA60DEE4(v220);
        sub_1BA69C808(v223, v224, v228);
        sub_1BA895BA4(v161);
        FormatSymbolImage.bind(binder:context:)(v275, v274);
        if (v276)
        {
          sub_1BA60DFC4(v155, v156, v157, v158);
          sub_1BA740460(v159, v219, v160);
          sub_1BA60DF1C(v220);
          sub_1BA69C828(v223, v224, v228);
          sub_1BA895BB8(v161);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_312;
        }
        sub_1BA60DFC4(v155, v156, v157, v158);
        sub_1BA740460(v159, v219, v160);
        sub_1BA60DF1C(v220);
        sub_1BA69C828(v223, v224, v228);
        sub_1BA895BB8(v161);
        swift_release();
        v46 = v261;
        goto LABEL_254;
      }
      if (v130 >> 62 != 1)
      {
        v162 = *(_QWORD *)(v130 + 24);
        sub_1BA73B1CC(v7, v6, v8);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        FormatSyncImageContent.bind(binder:context:)(v275, v274);
        if (v276)
        {
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          goto LABEL_310;
        }
        swift_release();
        swift_bridgeObjectRetain();
        sub_1BAB92B90(v275, v274, v162);
        v276 = 0;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        v163 = v237;
        goto LABEL_255;
      }
      v131 = *(_QWORD *)(v130 + 48);
      v227 = *(_QWORD *)(v130 + 56);
      if (*(unsigned __int8 *)(v130 + 64) > 1u)
      {
        if (*(_BYTE *)(v130 + 64) == 2)
        {
          v175 = *(_QWORD *)(v130 + 48);
          v176 = *(_QWORD *)(v131 + 16);
          if (v176)
          {
            v177 = *(_QWORD *)v5;
            v178 = *(_QWORD *)(v5 + 8);
            swift_bridgeObjectRetain();
            sub_1BA73B1CC(v177, v178, v8);
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BA76F5C4(v175, v227, 2u);
            swift_bridgeObjectRetain();
            v179 = (_BYTE *)(v175 + 40);
            do
            {
              if ((*v179 & 1) == 0)
              {
                v180 = *((_QWORD *)v179 - 1);
                sub_1BA7E8124(v180, 0);
                swift_retain();
                FormatFloat.bind(binder:context:)();
                v181 = v180;
                if (v276)
                {
LABEL_307:
                  sub_1BA72C46C(v181, 0);
                  sub_1BA72C46C(v180, 0);
                  swift_bridgeObjectRelease_n();
                  sub_1BA76F520(v175, v227, 2u);
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_311;
                }
                sub_1BA72C46C(v180, 0);
                sub_1BA72C46C(v180, 0);
              }
              v179 += 16;
              --v176;
            }
            while (v176);
            swift_bridgeObjectRelease_n();
            v197 = v227;
          }
          else
          {
            sub_1BA73B1CC(v7, v6, v8);
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            v197 = v227;
            sub_1BA76F5C4(v175, v227, 2u);
          }
          v198 = *(_QWORD *)(v197 + 16);
          if (v198)
          {
            swift_bridgeObjectRetain_n();
            v199 = (_BYTE *)(v197 + 40);
            do
            {
              if ((*v199 & 1) == 0)
              {
                v180 = *((_QWORD *)v199 - 1);
                sub_1BA7E8124(v180, 0);
                swift_retain();
                FormatFloat.bind(binder:context:)();
                v181 = v180;
                if (v276)
                  goto LABEL_307;
                sub_1BA72C46C(v180, 0);
                sub_1BA72C46C(v180, 0);
              }
              v199 += 16;
              --v198;
            }
            while (v198);
            v197 = v227;
            swift_bridgeObjectRelease_n();
          }
          v194 = v175;
          v195 = v197;
          v196 = 2;
          goto LABEL_253;
        }
      }
      else if (*(_BYTE *)(v130 + 64))
      {
        v188 = *(_QWORD *)(v131 + 16);
        if (v188)
        {
          v189 = *(_QWORD *)(v130 + 48);
          v190 = *(_QWORD *)v5;
          v191 = *(_QWORD *)(v5 + 8);
          sub_1BA76F5C4(v131, v227, 1u);
          sub_1BA73B1CC(v190, v191, v8);
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA76F5C4(v189, v227, 1u);
          v192 = (_BYTE *)(v189 + 40);
          do
          {
            if ((*v192 & 1) == 0)
            {
              v193 = *((_QWORD *)v192 - 1);
              sub_1BA7E8124(v193, 0);
              swift_retain();
              FormatFloat.bind(binder:context:)();
              if (v276)
              {
                sub_1BA72C46C(v193, 0);
                sub_1BA72C46C(v193, 0);
                sub_1BA76F520(v189, v227, 1u);
                v216 = v189;
                v217 = v227;
                v218 = 1;
LABEL_306:
                sub_1BA76F520(v216, v217, v218);
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
LABEL_310:
                swift_release_n();
LABEL_311:
                swift_release();
LABEL_312:
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_313;
              }
              sub_1BA72C46C(v193, 0);
              sub_1BA72C46C(v193, 0);
            }
            v192 += 16;
            --v188;
          }
          while (v188);
          sub_1BA76F520(v189, v227, 1u);
          v194 = v189;
          v195 = v227;
          v196 = 1;
          goto LABEL_253;
        }
      }
      else
      {
        v132 = *(_QWORD *)(v131 + 16);
        if (v132)
        {
          v133 = *(_QWORD *)(v130 + 48);
          v134 = *(_QWORD *)v5;
          v135 = *(_QWORD *)(v5 + 8);
          sub_1BA76F5C4(v131, v227, 0);
          sub_1BA73B1CC(v134, v135, v8);
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA76F5C4(v133, v227, 0);
          v136 = (_BYTE *)(v133 + 40);
          do
          {
            if ((*v136 & 1) == 0)
            {
              v137 = *((_QWORD *)v136 - 1);
              sub_1BA7E8124(v137, 0);
              swift_retain();
              FormatFloat.bind(binder:context:)();
              if (v276)
              {
                sub_1BA72C46C(v137, 0);
                sub_1BA72C46C(v137, 0);
                sub_1BA76F520(v133, v227, 0);
                v216 = v133;
                v217 = v227;
                v218 = 0;
                goto LABEL_306;
              }
              sub_1BA72C46C(v137, 0);
              sub_1BA72C46C(v137, 0);
            }
            v136 += 16;
            --v132;
          }
          while (v132);
          sub_1BA76F520(v133, v227, 0);
          v194 = v133;
          v195 = v227;
          v196 = 0;
LABEL_253:
          sub_1BA76F520(v194, v195, v196);
          swift_release();
          v46 = v261;
LABEL_254:
          v163 = v237;
          goto LABEL_255;
        }
      }
      sub_1BA73B1CC(v7, v6, v8);
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      v163 = v237;
      swift_bridgeObjectRetain();
LABEL_255:
      swift_bridgeObjectRetain();
      sub_1BAB92B90(v275, v274, v163);
      if (v276)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_312;
      }
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release();
      goto LABEL_257;
    }
    v11 = *(_QWORD *)(v9 + 48);
    v10 = *(_QWORD *)(v9 + 56);
    if (*(unsigned __int8 *)(v9 + 64) > 1u)
    {
      if (*(_BYTE *)(v9 + 64) != 2)
        goto LABEL_268;
      v271 = v4;
      v33 = *(_QWORD *)(v11 + 16);
      v273 = *(_BYTE *)(v5 + 16);
      v272 = *(_QWORD *)(v5 + 8);
      if (v33)
      {
        v34 = *(_QWORD *)v5;
        v35 = *(_QWORD *)(v5 + 8);
        swift_bridgeObjectRetain();
        v15 = v34;
        sub_1BA73B1CC(v34, v35, v8);
        swift_retain_n();
        sub_1BA76F5C4(v11, v10, 2u);
        swift_bridgeObjectRetain();
        v36 = (_BYTE *)(v11 + 40);
        do
        {
          if ((*v36 & 1) == 0)
          {
            v37 = *((_QWORD *)v36 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            v38 = v37;
            if (v276)
            {
LABEL_76:
              sub_1BA72C46C(v38, 0);
              sub_1BA72C46C(v37, 0);
              swift_bridgeObjectRelease_n();
              v200 = v11;
              v201 = v10;
              v202 = 2;
              goto LABEL_273;
            }
            sub_1BA72C46C(v37, 0);
            sub_1BA72C46C(v37, 0);
          }
          v36 += 16;
          --v33;
        }
        while (v33);
        swift_bridgeObjectRelease_n();
        v79 = *(_QWORD *)(v10 + 16);
        if (!v79)
        {
LABEL_85:
          v76 = v11;
          v77 = v10;
          v78 = 2;
LABEL_86:
          sub_1BA76F520(v76, v77, v78);
          swift_release();
          sub_1BA73B1B8(v15, v272, v273);
          goto LABEL_267;
        }
      }
      else
      {
        v15 = *(_QWORD *)v5;
        sub_1BA73B1CC(v7, v6, v8);
        swift_retain_n();
        sub_1BA76F5C4(v11, v10, 2u);
        v79 = *(_QWORD *)(v10 + 16);
        if (!v79)
          goto LABEL_85;
      }
      swift_bridgeObjectRetain_n();
      v80 = (_BYTE *)(v10 + 40);
      do
      {
        if ((*v80 & 1) == 0)
        {
          v37 = *((_QWORD *)v80 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          v38 = v37;
          if (v276)
            goto LABEL_76;
          sub_1BA72C46C(v37, 0);
          sub_1BA72C46C(v37, 0);
        }
        v80 += 16;
        --v79;
      }
      while (v79);
      swift_bridgeObjectRelease_n();
      goto LABEL_85;
    }
    if (!*(_BYTE *)(v9 + 64))
    {
      v12 = *(_QWORD *)(v11 + 16);
      if (v12)
      {
        v271 = v4;
        v13 = *(_QWORD *)v5;
        v14 = *(_QWORD *)(v5 + 8);
        sub_1BA76F5C4(v11, v10, 0);
        v15 = v13;
        v272 = v14;
        v273 = v8;
        sub_1BA73B1CC(v13, v14, v8);
        swift_retain_n();
        sub_1BA76F5C4(v11, v10, 0);
        v16 = (_BYTE *)(v11 + 40);
        while (1)
        {
          if ((*v16 & 1) == 0)
          {
            v17 = *((_QWORD *)v16 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            if (v276)
            {
              sub_1BA72C46C(v17, 0);
              sub_1BA72C46C(v17, 0);
              sub_1BA76F520(v11, v10, 0);
              v200 = v11;
              v201 = v10;
              v202 = 0;
              goto LABEL_273;
            }
            sub_1BA72C46C(v17, 0);
            sub_1BA72C46C(v17, 0);
          }
          v16 += 16;
          if (!--v12)
          {
            sub_1BA76F520(v11, v10, 0);
            v76 = v11;
            v77 = v10;
            v78 = 0;
            goto LABEL_86;
          }
        }
      }
      goto LABEL_268;
    }
    v52 = *(_QWORD *)(v11 + 16);
    if (v52)
      break;
LABEL_268:
    if (++v4 == v266)
      return swift_bridgeObjectRelease();
  }
  v271 = v4;
  v53 = *(_QWORD *)v5;
  v54 = *(_QWORD *)(v5 + 8);
  sub_1BA76F5C4(v11, v10, 1u);
  v15 = v53;
  v272 = v54;
  v273 = v8;
  sub_1BA73B1CC(v53, v54, v8);
  swift_retain_n();
  sub_1BA76F5C4(v11, v10, 1u);
  v55 = (_BYTE *)(v11 + 40);
  while ((*v55 & 1) != 0)
  {
LABEL_42:
    v55 += 16;
    if (!--v52)
    {
      sub_1BA76F520(v11, v10, 1u);
      v76 = v11;
      v77 = v10;
      v78 = 1;
      goto LABEL_86;
    }
  }
  v56 = *((_QWORD *)v55 - 1);
  swift_retain_n();
  FormatFloat.bind(binder:context:)();
  if (!v276)
  {
    sub_1BA72C46C(v56, 0);
    sub_1BA72C46C(v56, 0);
    goto LABEL_42;
  }
  sub_1BA72C46C(v56, 0);
  sub_1BA72C46C(v56, 0);
  sub_1BA76F520(v11, v10, 1u);
  v200 = v11;
  v201 = v10;
  v202 = 1;
LABEL_273:
  sub_1BA76F520(v200, v201, v202);
  swift_release();
  v203 = v15;
LABEL_280:
  sub_1BA73B1B8(v203, v272, v273);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BAB92B90(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned __int8 v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned __int8 v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  uint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned __int8 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  unsigned __int8 v150;
  uint64_t v151;
  uint64_t v152;
  unsigned __int8 v153;
  uint64_t v154;
  uint64_t v155;
  unsigned __int8 v156;
  uint64_t v157;
  uint64_t v158;
  unsigned __int8 v159;
  uint64_t v160;
  uint64_t v161;
  unsigned __int8 v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  unsigned int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;

  v4 = v3;
  v202 = *(_QWORD *)(a3 + 16);
  if (!v202)
    return result;
  v209 = result;
  v203 = a3 + 32;
  swift_bridgeObjectRetain();
  v5 = 0;
  while (1)
  {
    v9 = *(_QWORD *)(v203 + 24 * v5 + 16);
    if (!(v9 >> 62))
    {
      v204 = v4;
      v207 = v5;
      v16 = *(_QWORD *)(v9 + 24);
      v17 = *(_QWORD *)(v9 + 32);
      v179 = *(_BYTE *)(v9 + 40);
      v19 = *(_QWORD *)(v9 + 48);
      v18 = *(_QWORD *)(v9 + 56);
      v20 = *(_QWORD *)(v9 + 72);
      v21 = *(_QWORD *)(v9 + 88);
      v189 = *(_QWORD *)(v9 + 96);
      v22 = *(_BYTE *)(v9 + 104);
      v23 = *(_QWORD *)(v9 + 112);
      v183 = *(unsigned __int16 *)(v9 + 64);
      v24 = *(_QWORD *)(v9 + 16);
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA60DF54(v24, v16, v17, v179);
      sub_1BA740E74(v19, v18, v183);
      sub_1BA60DEE4(v20);
      sub_1BA69C808(v21, v189, v22);
      sub_1BA895BA4(v23);
      FormatSymbolImage.bind(binder:context:)(v209, a2);
      sub_1BA60DFC4(v24, v16, v17, v179);
      v4 = v204;
      sub_1BA740460(v19, v18, v183);
      sub_1BA60DF1C(v20);
      sub_1BA69C828(v21, v189, v22);
      sub_1BA895BB8(v23);
      if (v204)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      swift_bridgeObjectRelease();
LABEL_5:
      swift_release_n();
      goto LABEL_6;
    }
    if (v9 >> 62 != 1)
    {
      v25 = *(_QWORD *)(v9 + 16);
      v26 = *(_QWORD *)(v9 + 24);
      v208 = v5;
      if (!(v25 >> 62))
      {
        v37 = *(_QWORD *)(v25 + 16);
        v36 = *(_QWORD *)(v25 + 24);
        v38 = *(_QWORD *)(v25 + 32);
        v205 = v4;
        v39 = *(_BYTE *)(v25 + 40);
        v40 = *(_QWORD *)(v25 + 48);
        v41 = *(unsigned __int16 *)(v25 + 64);
        v190 = *(_QWORD *)(v25 + 72);
        v184 = *(_QWORD *)(v25 + 56);
        v186 = *(_QWORD *)(v25 + 96);
        v42 = *(_BYTE *)(v25 + 104);
        v192 = *(_QWORD *)(v25 + 88);
        v198 = *(_QWORD *)(v25 + 112);
        swift_retain_n();
        v200 = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA60DF54(v37, v36, v38, v39);
        sub_1BA740E74(v40, v184, v41);
        sub_1BA60DEE4(v190);
        sub_1BA69C808(v192, v186, v42);
        sub_1BA895BA4(v198);
        FormatSymbolImage.bind(binder:context:)(v209, a2);
        if (v205)
        {
          sub_1BA60DFC4(v37, v36, v38, v39);
          sub_1BA740460(v40, v184, v41);
          sub_1BA60DF1C(v190);
          sub_1BA69C828(v192, v186, v42);
          sub_1BA895BB8(v198);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          return swift_release_n();
        }
        sub_1BA60DFC4(v37, v36, v38, v39);
        sub_1BA740460(v40, v184, v41);
        sub_1BA60DF1C(v190);
        sub_1BA69C828(v192, v186, v42);
        sub_1BA895BB8(v198);
        swift_release();
        v4 = 0;
        goto LABEL_139;
      }
      if (v25 >> 62 == 1)
      {
        v28 = *(_QWORD *)(v25 + 48);
        v27 = *(_QWORD *)(v25 + 56);
        if (*(unsigned __int8 *)(v25 + 64) <= 1u)
        {
          if (*(_BYTE *)(v25 + 64))
          {
            v72 = *(_QWORD *)(v28 + 16);
            if (v72)
            {
              sub_1BA76F5C4(*(_QWORD *)(v25 + 48), *(_QWORD *)(v25 + 56), 1u);
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              v200 = v26;
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v28, v27, 1u);
              v73 = (_BYTE *)(v28 + 40);
              do
              {
                if ((*v73 & 1) == 0)
                {
                  v74 = *((_QWORD *)v73 - 1);
                  swift_retain_n();
                  FormatFloat.bind(binder:context:)();
                  if (v4)
                  {
                    sub_1BA72C46C(v74, 0);
                    sub_1BA72C46C(v74, 0);
                    sub_1BA76F520(v28, v27, 1u);
                    v151 = v28;
                    v152 = v27;
                    v153 = 1;
                    goto LABEL_233;
                  }
                  sub_1BA72C46C(v74, 0);
                  sub_1BA72C46C(v74, 0);
                }
                v73 += 16;
                --v72;
              }
              while (v72);
              sub_1BA76F520(v28, v27, 1u);
              v93 = v28;
              v94 = v27;
              v95 = 1;
LABEL_138:
              sub_1BA76F520(v93, v94, v95);
              swift_release();
LABEL_139:
              v26 = v200;
              goto LABEL_225;
            }
          }
          else
          {
            v29 = *(_QWORD *)(v28 + 16);
            if (v29)
            {
              sub_1BA76F5C4(*(_QWORD *)(v25 + 48), *(_QWORD *)(v25 + 56), 0);
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              v200 = v26;
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v28, v27, 0);
              v30 = (_BYTE *)(v28 + 40);
              do
              {
                if ((*v30 & 1) == 0)
                {
                  v31 = *((_QWORD *)v30 - 1);
                  swift_retain_n();
                  FormatFloat.bind(binder:context:)();
                  if (v4)
                  {
                    sub_1BA72C46C(v31, 0);
                    sub_1BA72C46C(v31, 0);
                    sub_1BA76F520(v28, v27, 0);
                    v151 = v28;
                    v152 = v27;
                    v153 = 0;
LABEL_233:
                    sub_1BA76F520(v151, v152, v153);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    return swift_release_n();
                  }
                  sub_1BA72C46C(v31, 0);
                  sub_1BA72C46C(v31, 0);
                }
                v30 += 16;
                --v29;
              }
              while (v29);
              sub_1BA76F520(v28, v27, 0);
              v93 = v28;
              v94 = v27;
              v95 = 0;
              goto LABEL_138;
            }
          }
          goto LABEL_94;
        }
        if (*(_BYTE *)(v25 + 64) != 2)
        {
LABEL_94:
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain();
          swift_bridgeObjectRetain();
LABEL_225:
          swift_bridgeObjectRetain();
          sub_1BAB92B90(v209, a2, v26);
          if (v4)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            return swift_release();
          }
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_release();
          goto LABEL_7;
        }
        v53 = *(_QWORD *)(v28 + 16);
        v200 = *(_QWORD *)(v9 + 24);
        if (v53)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA76F5C4(v28, v27, 2u);
          swift_bridgeObjectRetain();
          v54 = (_BYTE *)(v28 + 40);
          do
          {
            if ((*v54 & 1) == 0)
            {
              v55 = *((_QWORD *)v54 - 1);
              swift_retain_n();
              FormatFloat.bind(binder:context:)();
              v56 = v55;
              if (v4)
              {
LABEL_64:
                sub_1BA72C46C(v56, 0);
                sub_1BA72C46C(v55, 0);
                swift_bridgeObjectRelease_n();
                v151 = v28;
                v152 = v27;
                v153 = 2;
                goto LABEL_233;
              }
              sub_1BA72C46C(v55, 0);
              sub_1BA72C46C(v55, 0);
            }
            v54 += 16;
            --v53;
          }
          while (v53);
          swift_bridgeObjectRelease_n();
          v26 = v200;
          v96 = *(_QWORD *)(v27 + 16);
          if (v96)
            goto LABEL_120;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA76F5C4(v28, v27, 2u);
          v96 = *(_QWORD *)(v27 + 16);
          if (v96)
          {
LABEL_120:
            swift_bridgeObjectRetain_n();
            v97 = (_BYTE *)(v27 + 40);
            do
            {
              if ((*v97 & 1) == 0)
              {
                v55 = *((_QWORD *)v97 - 1);
                swift_retain_n();
                FormatFloat.bind(binder:context:)();
                v56 = v55;
                if (v4)
                  goto LABEL_64;
                sub_1BA72C46C(v55, 0);
                sub_1BA72C46C(v55, 0);
              }
              v97 += 16;
              --v96;
            }
            while (v96);
            swift_bridgeObjectRelease_n();
            v93 = v28;
            v94 = v27;
            v95 = 2;
            goto LABEL_138;
          }
        }
        sub_1BA76F520(v28, v27, 2u);
        swift_release();
        goto LABEL_225;
      }
      v206 = v4;
      v43 = *(_QWORD *)(v25 + 16);
      v44 = *(_QWORD *)(v25 + 24);
      if (!(v43 >> 62))
      {
        v57 = *(_QWORD *)(v9 + 24);
        v58 = *(_QWORD *)(v43 + 16);
        v59 = *(_QWORD *)(v43 + 24);
        v60 = *(_QWORD *)(v43 + 32);
        v61 = *(_BYTE *)(v43 + 40);
        v62 = *(_QWORD *)(v43 + 48);
        v174 = *(_QWORD *)(v43 + 56);
        v63 = *(unsigned __int16 *)(v43 + 64);
        v180 = *(_QWORD *)(v43 + 72);
        v185 = *(_QWORD *)(v43 + 88);
        v176 = *(_QWORD *)(v43 + 96);
        v187 = *(_BYTE *)(v43 + 104);
        v191 = *(_QWORD *)(v43 + 112);
        swift_retain_n();
        v193 = v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA60DF54(v58, v59, v60, v61);
        sub_1BA740E74(v62, v174, v63);
        sub_1BA60DEE4(v180);
        sub_1BA69C808(v185, v176, v187);
        sub_1BA895BA4(v191);
        FormatSymbolImage.bind(binder:context:)(v209, a2);
        if (v206)
        {
          sub_1BA60DFC4(v58, v59, v60, v61);
          sub_1BA740460(v62, v174, v63);
          sub_1BA60DF1C(v180);
          sub_1BA69C828(v185, v176, v187);
          sub_1BA895BB8(v191);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          return swift_release_n();
        }
        sub_1BA60DFC4(v58, v59, v60, v61);
        sub_1BA740460(v62, v174, v63);
        sub_1BA60DF1C(v180);
        sub_1BA69C828(v185, v176, v187);
        sub_1BA895BB8(v191);
        swift_release();
        v4 = 0;
        v26 = v57;
        goto LABEL_172;
      }
      if (v43 >> 62 == 1)
      {
        v45 = *(_QWORD *)(v43 + 48);
        v46 = *(_QWORD *)(v43 + 56);
        if (*(unsigned __int8 *)(v43 + 64) > 1u)
        {
          if (*(_BYTE *)(v43 + 64) == 2)
          {
            v193 = *(_QWORD *)(v25 + 24);
            v75 = *(_QWORD *)(v45 + 16);
            if (v75)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v45, v46, 2u);
              swift_bridgeObjectRetain();
              v76 = (_BYTE *)(v45 + 40);
              do
              {
                if ((*v76 & 1) == 0)
                {
                  v77 = *((_QWORD *)v76 - 1);
                  swift_retain_n();
                  FormatFloat.bind(binder:context:)();
                  v78 = v77;
                  if (v4)
                  {
LABEL_238:
                    sub_1BA72C46C(v78, 0);
                    sub_1BA72C46C(v77, 0);
                    swift_bridgeObjectRelease_n();
                    sub_1BA76F520(v45, v46, 2u);
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_release();
                    swift_bridgeObjectRelease();
                    return swift_bridgeObjectRelease();
                  }
                  sub_1BA72C46C(v77, 0);
                  sub_1BA72C46C(v77, 0);
                }
                v76 += 16;
                --v75;
              }
              while (v75);
              swift_bridgeObjectRelease_n();
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v45, v46, 2u);
            }
            v122 = *(_QWORD *)(v46 + 16);
            if (!v122)
            {
              sub_1BA76F520(v45, v46, 2u);
              swift_release();
              v5 = v208;
              v44 = v193;
              goto LABEL_223;
            }
            swift_bridgeObjectRetain_n();
            v123 = (_BYTE *)(v46 + 40);
            do
            {
              if ((*v123 & 1) == 0)
              {
                v77 = *((_QWORD *)v123 - 1);
                swift_retain_n();
                FormatFloat.bind(binder:context:)();
                v78 = v77;
                if (v4)
                  goto LABEL_238;
                sub_1BA72C46C(v77, 0);
                sub_1BA72C46C(v77, 0);
              }
              v123 += 16;
              --v122;
            }
            while (v122);
            swift_bridgeObjectRelease_n();
            v119 = v45;
            v120 = v46;
            v121 = 2;
            goto LABEL_171;
          }
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          v193 = *(_QWORD *)(v25 + 24);
          if (*(_BYTE *)(v43 + 64))
          {
            v98 = *(_QWORD *)(v45 + 16);
            if (v98)
            {
              sub_1BA76F5C4(v45, v46, 1u);
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v45, v46, 1u);
              v99 = (_BYTE *)(v45 + 40);
              do
              {
                if ((*v99 & 1) == 0)
                {
                  v100 = *((_QWORD *)v99 - 1);
                  swift_retain_n();
                  FormatFloat.bind(binder:context:)();
                  if (v4)
                  {
                    sub_1BA72C46C(v100, 0);
                    sub_1BA72C46C(v100, 0);
                    sub_1BA76F520(v45, v46, 1u);
                    v154 = v45;
                    v155 = v46;
                    v156 = 1;
LABEL_237:
                    sub_1BA76F520(v154, v155, v156);
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    return swift_bridgeObjectRelease();
                  }
                  sub_1BA72C46C(v100, 0);
                  sub_1BA72C46C(v100, 0);
                }
                v99 += 16;
                --v98;
              }
              while (v98);
              sub_1BA76F520(v45, v46, 1u);
              v119 = v45;
              v120 = v46;
              v121 = 1;
              goto LABEL_171;
            }
          }
          else
          {
            v47 = *(_QWORD *)(v45 + 16);
            if (v47)
            {
              sub_1BA76F5C4(v45, v46, 0);
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v45, v46, 0);
              v48 = (_BYTE *)(v45 + 40);
              do
              {
                if ((*v48 & 1) == 0)
                {
                  v52 = *((_QWORD *)v48 - 1);
                  swift_retain_n();
                  FormatFloat.bind(binder:context:)();
                  if (v4)
                  {
                    sub_1BA72C46C(v52, 0);
                    sub_1BA72C46C(v52, 0);
                    sub_1BA76F520(v45, v46, 0);
                    v154 = v45;
                    v155 = v46;
                    v156 = 0;
                    goto LABEL_237;
                  }
                  sub_1BA72C46C(v52, 0);
                  sub_1BA72C46C(v52, 0);
                }
                v48 += 16;
                --v47;
              }
              while (v47);
              sub_1BA76F520(v45, v46, 0);
              v119 = v45;
              v120 = v46;
              v121 = 0;
LABEL_171:
              sub_1BA76F520(v119, v120, v121);
              swift_release();
LABEL_172:
              v5 = v208;
              v44 = v193;
              goto LABEL_223;
            }
          }
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain();
          v44 = v193;
        }
        swift_bridgeObjectRetain();
        v5 = v208;
LABEL_223:
        swift_bridgeObjectRetain();
        sub_1BAB92B90(v209, a2, v44);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          return swift_release();
        }
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_225;
      }
      v64 = *(_QWORD *)(v43 + 16);
      v65 = *(_QWORD *)(v43 + 24);
      v188 = v65;
      if (!(v64 >> 62))
      {
        v201 = *(_QWORD *)(v9 + 24);
        v80 = *(_QWORD *)(v64 + 16);
        v79 = *(_QWORD *)(v64 + 24);
        v81 = *(_QWORD *)(v64 + 32);
        v82 = *(_QWORD *)(v25 + 24);
        v83 = *(_BYTE *)(v64 + 40);
        v84 = *(_QWORD *)(v64 + 56);
        v85 = *(unsigned __int16 *)(v64 + 64);
        v165 = *(_QWORD *)(v64 + 48);
        v167 = *(_QWORD *)(v64 + 72);
        v171 = *(_QWORD *)(v64 + 88);
        v175 = *(_QWORD *)(v64 + 96);
        v177 = *(_BYTE *)(v64 + 104);
        v181 = *(_QWORD *)(v64 + 112);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        v195 = v82;
        swift_bridgeObjectRetain();
        sub_1BA60DF54(v80, v79, v81, v83);
        sub_1BA740E74(v165, v84, v85);
        sub_1BA60DEE4(v167);
        sub_1BA69C808(v171, v175, v177);
        sub_1BA895BA4(v181);
        FormatSymbolImage.bind(binder:context:)(v209, a2);
        if (v4)
        {
          sub_1BA60DFC4(v80, v79, v81, v83);
          sub_1BA740460(v165, v84, v85);
          sub_1BA60DF1C(v167);
          sub_1BA69C828(v171, v175, v177);
          sub_1BA895BB8(v181);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_261;
        }
        sub_1BA60DFC4(v80, v79, v81, v83);
        sub_1BA740460(v165, v84, v85);
        sub_1BA60DF1C(v167);
        sub_1BA69C828(v171, v175, v177);
        sub_1BA895BB8(v181);
        swift_release();
        v26 = v201;
        v86 = a2;
        v5 = v208;
        goto LABEL_107;
      }
      if (v64 >> 62 == 1)
      {
        v66 = *(_QWORD *)(v64 + 48);
        v199 = *(_QWORD *)(v64 + 56);
        if (*(unsigned __int8 *)(v64 + 64) <= 1u)
        {
          if (*(_BYTE *)(v64 + 64))
          {
            v124 = *(_QWORD *)(v66 + 16);
            if (v124)
            {
              sub_1BA76F5C4(v66, v199, 1u);
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v194 = v44;
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v66, v199, 1u);
              v125 = (_BYTE *)(v66 + 40);
              do
              {
                if ((*v125 & 1) == 0)
                {
                  v126 = *((_QWORD *)v125 - 1);
                  swift_retain_n();
                  FormatFloat.bind(binder:context:)();
                  if (v206)
                  {
                    sub_1BA72C46C(v126, 0);
                    sub_1BA72C46C(v126, 0);
                    sub_1BA76F520(v66, v199, 1u);
                    v157 = v66;
                    v158 = v199;
                    v159 = 1;
LABEL_247:
                    sub_1BA76F520(v157, v158, v159);
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
LABEL_260:
                    swift_release();
LABEL_261:
                    swift_bridgeObjectRelease();
                    swift_release();
                    return swift_bridgeObjectRelease();
                  }
                  sub_1BA72C46C(v126, 0);
                  sub_1BA72C46C(v126, 0);
                }
                v125 += 16;
                --v124;
              }
              while (v124);
              sub_1BA76F520(v66, v199, 1u);
              v132 = v66;
              v133 = v199;
              v134 = 1;
              goto LABEL_185;
            }
          }
          else
          {
            v67 = *(_QWORD *)(v66 + 16);
            if (v67)
            {
              sub_1BA76F5C4(v66, v199, 0);
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v194 = v44;
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA76F5C4(v66, v199, 0);
              v68 = (_BYTE *)(v66 + 40);
              do
              {
                if ((*v68 & 1) == 0)
                {
                  v69 = *((_QWORD *)v68 - 1);
                  swift_retain_n();
                  FormatFloat.bind(binder:context:)();
                  if (v206)
                  {
                    sub_1BA72C46C(v69, 0);
                    sub_1BA72C46C(v69, 0);
                    sub_1BA76F520(v66, v199, 0);
                    v157 = v66;
                    v158 = v199;
                    v159 = 0;
                    goto LABEL_247;
                  }
                  sub_1BA72C46C(v69, 0);
                  sub_1BA72C46C(v69, 0);
                }
                v68 += 16;
                --v67;
              }
              while (v67);
              sub_1BA76F520(v66, v199, 0);
              v132 = v66;
              v133 = v199;
              v134 = 0;
LABEL_185:
              sub_1BA76F520(v132, v133, v134);
              swift_release();
              v44 = v194;
              v86 = a2;
              v65 = v188;
              goto LABEL_221;
            }
          }
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain();
          v65 = v188;
          swift_bridgeObjectRetain();
          v86 = a2;
LABEL_221:
          swift_bridgeObjectRetain();
          sub_1BAB92B90(v209, v86, v65);
          v4 = v206;
          if (v206)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_260;
          }
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
          goto LABEL_223;
        }
        v182 = *(_QWORD *)(v64 + 48);
        v86 = a2;
        if (*(_BYTE *)(v64 + 64) != 2)
        {
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          goto LABEL_221;
        }
        v101 = *(_QWORD *)(v182 + 16);
        v195 = *(_QWORD *)(v25 + 24);
        if (v101)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA76F5C4(v182, v199, 2u);
          swift_bridgeObjectRetain();
          v102 = (_BYTE *)(v182 + 40);
          do
          {
            if ((*v102 & 1) == 0)
            {
              v103 = *((_QWORD *)v102 - 1);
              swift_retain_n();
              FormatFloat.bind(binder:context:)();
              v104 = v103;
              if (v206)
              {
LABEL_248:
                sub_1BA72C46C(v104, 0);
                sub_1BA72C46C(v103, 0);
                swift_bridgeObjectRelease_n();
                sub_1BA76F520(v182, v199, 2u);
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_260;
              }
              sub_1BA72C46C(v103, 0);
              sub_1BA72C46C(v103, 0);
            }
            v102 += 16;
            --v101;
          }
          while (v101);
          swift_bridgeObjectRelease_n();
          v44 = v195;
          v135 = v199;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          v135 = v199;
          sub_1BA76F5C4(v182, v199, 2u);
        }
        v136 = *(_QWORD *)(v135 + 16);
        if (!v136)
        {
          sub_1BA76F520(v182, v135, 2u);
          swift_release();
          v65 = v188;
          goto LABEL_221;
        }
        swift_bridgeObjectRetain_n();
        v137 = (_BYTE *)(v135 + 40);
        do
        {
          if ((*v137 & 1) == 0)
          {
            v103 = *((_QWORD *)v137 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            v104 = v103;
            if (v206)
              goto LABEL_248;
            sub_1BA72C46C(v103, 0);
            sub_1BA72C46C(v103, 0);
          }
          v137 += 16;
          --v136;
        }
        while (v136);
        swift_bridgeObjectRelease_n();
        sub_1BA76F520(v182, v199, 2u);
        swift_release();
LABEL_107:
        v44 = v195;
        v65 = v188;
        goto LABEL_221;
      }
      v87 = *(_QWORD *)(v64 + 16);
      v88 = *(_QWORD *)(v64 + 24);
      v178 = v88;
      if (!(v87 >> 62))
      {
        v197 = *(_QWORD *)(v25 + 24);
        v105 = *(_QWORD *)(v87 + 16);
        v106 = *(_QWORD *)(v87 + 32);
        v107 = *(_QWORD *)(v9 + 24);
        v108 = *(_BYTE *)(v87 + 40);
        v109 = *(_QWORD *)(v87 + 56);
        v110 = *(unsigned __int16 *)(v87 + 64);
        v163 = *(_QWORD *)(v87 + 48);
        v164 = *(_QWORD *)(v87 + 72);
        v166 = *(_QWORD *)(v87 + 88);
        v168 = *(_QWORD *)(v87 + 96);
        v170 = *(_BYTE *)(v87 + 104);
        v173 = *(_QWORD *)(v87 + 112);
        v111 = *(_QWORD *)(v87 + 24);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        v112 = v111;
        v113 = v111;
        v114 = v108;
        sub_1BA60DF54(v105, v112, v106, v108);
        v115 = v109;
        v116 = v109;
        v117 = v110;
        sub_1BA740E74(v163, v116, v110);
        sub_1BA60DEE4(v164);
        sub_1BA69C808(v166, v168, v170);
        sub_1BA895BA4(v173);
        v86 = a2;
        FormatSymbolImage.bind(binder:context:)(v209, a2);
        if (v206)
        {
          sub_1BA60DFC4(v105, v113, v106, v114);
          sub_1BA740460(v163, v115, v117);
          sub_1BA60DF1C(v164);
          sub_1BA69C828(v166, v168, v170);
          sub_1BA895BB8(v173);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_259;
        }
        sub_1BA60DFC4(v105, v113, v106, v114);
        sub_1BA740460(v163, v115, v117);
        sub_1BA60DF1C(v164);
        sub_1BA69C828(v166, v168, v170);
        sub_1BA895BB8(v173);
        swift_release();
        v26 = v107;
        v44 = v197;
        goto LABEL_217;
      }
      v86 = a2;
      if (v87 >> 62 != 1)
      {
        v118 = *(_QWORD *)(v87 + 24);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        FormatSyncImageContent.bind(binder:context:)(v209, a2);
        if (v206)
        {
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_release();
          goto LABEL_259;
        }
        swift_release();
        swift_bridgeObjectRetain();
        sub_1BAB92B90(v209, a2, v118);
        v206 = 0;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        v65 = v188;
        goto LABEL_218;
      }
      v169 = *(_QWORD *)(v87 + 56);
      v172 = *(_QWORD *)(v87 + 48);
      if (*(unsigned __int8 *)(v87 + 64) > 1u)
      {
        if (*(_BYTE *)(v87 + 64) == 2)
        {
          v89 = a2;
          v127 = *(_QWORD *)(v172 + 16);
          if (v127)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            v128 = v44;
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BA76F5C4(v172, v169, 2u);
            swift_bridgeObjectRetain();
            v129 = (_BYTE *)(v172 + 40);
            do
            {
              if ((*v129 & 1) == 0)
              {
                v130 = *((_QWORD *)v129 - 1);
                swift_retain_n();
                FormatFloat.bind(binder:context:)();
                v131 = v130;
                if (v206)
                {
LABEL_255:
                  sub_1BA72C46C(v131, 0);
                  sub_1BA72C46C(v130, 0);
                  swift_bridgeObjectRelease_n();
                  sub_1BA76F520(v172, v169, 2u);
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_256;
                }
                sub_1BA72C46C(v130, 0);
                sub_1BA72C46C(v130, 0);
              }
              v129 += 16;
              --v127;
            }
            while (v127);
            swift_bridgeObjectRelease_n();
            v44 = v128;
            v144 = v169;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            v144 = v169;
            sub_1BA76F5C4(v172, v169, 2u);
          }
          v145 = *(_QWORD *)(v144 + 16);
          if (v145)
          {
            v146 = v44;
            swift_bridgeObjectRetain_n();
            v147 = (_BYTE *)(v144 + 40);
            do
            {
              if ((*v147 & 1) == 0)
              {
                v130 = *((_QWORD *)v147 - 1);
                swift_retain_n();
                FormatFloat.bind(binder:context:)();
                v131 = v130;
                if (v206)
                  goto LABEL_255;
                sub_1BA72C46C(v130, 0);
                sub_1BA72C46C(v130, 0);
              }
              v147 += 16;
              --v145;
            }
            while (v145);
            swift_bridgeObjectRelease_n();
            sub_1BA76F520(v172, v169, 2u);
            swift_release();
            v44 = v146;
          }
          else
          {
            sub_1BA76F520(v172, v144, 2u);
            swift_release();
          }
          goto LABEL_216;
        }
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v89 = a2;
        if (*(_BYTE *)(v87 + 64))
        {
          v138 = *(_QWORD *)(v172 + 16);
          if (v138)
          {
            sub_1BA76F5C4(v172, v169, 1u);
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            v196 = v44;
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BA76F5C4(v172, v169, 1u);
            v139 = (_BYTE *)(v172 + 40);
            do
            {
              if ((*v139 & 1) == 0)
              {
                v140 = *((_QWORD *)v139 - 1);
                swift_retain_n();
                FormatFloat.bind(binder:context:)();
                if (v206)
                {
                  sub_1BA72C46C(v140, 0);
                  sub_1BA72C46C(v140, 0);
                  sub_1BA76F520(v172, v169, 1u);
                  v160 = v172;
                  v161 = v169;
                  v162 = 1;
LABEL_254:
                  sub_1BA76F520(v160, v161, v162);
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
LABEL_256:
                  swift_release();
LABEL_259:
                  swift_release();
                  swift_bridgeObjectRelease();
                  goto LABEL_260;
                }
                sub_1BA72C46C(v140, 0);
                sub_1BA72C46C(v140, 0);
              }
              v139 += 16;
              --v138;
            }
            while (v138);
            sub_1BA76F520(v172, v169, 1u);
            v141 = v172;
            v142 = v169;
            v143 = 1;
            goto LABEL_206;
          }
        }
        else
        {
          v90 = *(_QWORD *)(v172 + 16);
          if (v90)
          {
            sub_1BA76F5C4(v172, v169, 0);
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            v196 = v44;
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BA76F5C4(v172, v169, 0);
            v91 = (_BYTE *)(v172 + 40);
            do
            {
              if ((*v91 & 1) == 0)
              {
                v92 = *((_QWORD *)v91 - 1);
                swift_retain_n();
                FormatFloat.bind(binder:context:)();
                if (v206)
                {
                  sub_1BA72C46C(v92, 0);
                  sub_1BA72C46C(v92, 0);
                  sub_1BA76F520(v172, v169, 0);
                  v160 = v172;
                  v161 = v169;
                  v162 = 0;
                  goto LABEL_254;
                }
                sub_1BA72C46C(v92, 0);
                sub_1BA72C46C(v92, 0);
              }
              v91 += 16;
              --v90;
            }
            while (v90);
            sub_1BA76F520(v172, v169, 0);
            v141 = v172;
            v142 = v169;
            v143 = 0;
LABEL_206:
            sub_1BA76F520(v141, v142, v143);
            swift_release();
            v44 = v196;
LABEL_216:
            v86 = v89;
LABEL_217:
            v65 = v188;
LABEL_218:
            v88 = v178;
            goto LABEL_219;
          }
        }
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        v65 = v188;
        swift_bridgeObjectRetain();
        swift_retain();
        v88 = swift_bridgeObjectRetain();
      }
LABEL_219:
      swift_bridgeObjectRetain();
      sub_1BAB92B90(v209, v86, v88);
      if (v206)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_259;
      }
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release();
      goto LABEL_221;
    }
    v11 = *(_QWORD *)(v9 + 48);
    v10 = *(_QWORD *)(v9 + 56);
    v12 = *(unsigned __int8 *)(v9 + 64);
    if (v12 > 1)
    {
      if (v12 != 2)
        goto LABEL_7;
      v207 = v5;
      v32 = *(_QWORD *)(v11 + 16);
      if (v32)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA76F5C4(v11, v10, 2u);
        swift_bridgeObjectRetain();
        v33 = (_BYTE *)(v11 + 40);
        do
        {
          if ((*v33 & 1) == 0)
          {
            v34 = *((_QWORD *)v33 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            v35 = v34;
            if (v4)
            {
LABEL_86:
              sub_1BA72C46C(v35, 0);
              sub_1BA72C46C(v34, 0);
              swift_bridgeObjectRelease_n();
              v148 = v11;
              v149 = v10;
              v150 = 2;
              goto LABEL_230;
            }
            sub_1BA72C46C(v34, 0);
            sub_1BA72C46C(v34, 0);
          }
          v33 += 16;
          --v32;
        }
        while (v32);
        swift_bridgeObjectRelease_n();
        v70 = *(_QWORD *)(v10 + 16);
        if (!v70)
          goto LABEL_96;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA76F5C4(v11, v10, 2u);
        v70 = *(_QWORD *)(v10 + 16);
        if (!v70)
        {
LABEL_96:
          sub_1BA76F520(v11, v10, 2u);
          swift_release_n();
          swift_bridgeObjectRelease();
LABEL_6:
          v5 = v207;
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRetain_n();
      v71 = (_BYTE *)(v10 + 40);
      do
      {
        if ((*v71 & 1) == 0)
        {
          v34 = *((_QWORD *)v71 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          v35 = v34;
          if (v4)
            goto LABEL_86;
          sub_1BA72C46C(v34, 0);
          sub_1BA72C46C(v34, 0);
        }
        v71 += 16;
        --v70;
      }
      while (v70);
      swift_bridgeObjectRelease_n();
      goto LABEL_96;
    }
    if (!v12)
    {
      v13 = *(_QWORD *)(v11 + 16);
      if (v13)
      {
        v207 = v5;
        sub_1BA76F5C4(v11, v10, 0);
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA76F5C4(v11, v10, 0);
        v14 = (_BYTE *)(v11 + 40);
        while (1)
        {
          if ((*v14 & 1) == 0)
          {
            v15 = *((_QWORD *)v14 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            if (v4)
            {
              sub_1BA72C46C(v15, 0);
              sub_1BA72C46C(v15, 0);
              sub_1BA76F520(v11, v10, 0);
              v148 = v11;
              v149 = v10;
              v150 = 0;
              goto LABEL_230;
            }
            sub_1BA72C46C(v15, 0);
            sub_1BA72C46C(v15, 0);
          }
          v14 += 16;
          if (!--v13)
          {
            sub_1BA76F520(v11, v10, 0);
            v6 = v11;
            v7 = v10;
            v8 = 0;
            goto LABEL_4;
          }
        }
      }
      goto LABEL_7;
    }
    v49 = *(_QWORD *)(v11 + 16);
    if (v49)
      break;
LABEL_7:
    if (++v5 == v202)
      return swift_bridgeObjectRelease();
  }
  v207 = v5;
  sub_1BA76F5C4(v11, v10, 1u);
  swift_bridgeObjectRetain();
  swift_retain_n();
  sub_1BA76F5C4(v11, v10, 1u);
  v50 = (_BYTE *)(v11 + 40);
  while ((*v50 & 1) != 0)
  {
LABEL_48:
    v50 += 16;
    if (!--v49)
    {
      sub_1BA76F520(v11, v10, 1u);
      v6 = v11;
      v7 = v10;
      v8 = 1;
LABEL_4:
      sub_1BA76F520(v6, v7, v8);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
  }
  v51 = *((_QWORD *)v50 - 1);
  swift_retain_n();
  FormatFloat.bind(binder:context:)();
  if (!v4)
  {
    sub_1BA72C46C(v51, 0);
    sub_1BA72C46C(v51, 0);
    goto LABEL_48;
  }
  sub_1BA72C46C(v51, 0);
  sub_1BA72C46C(v51, 0);
  sub_1BA76F520(v11, v10, 1u);
  v148 = v11;
  v149 = v10;
  v150 = 1;
LABEL_230:
  sub_1BA76F520(v148, v149, v150);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1BAB95734(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;

  v58 = result;
  v48 = *(_QWORD *)(a3 + 16);
  if (v48)
  {
    v49 = a3 + 32;
    swift_bridgeObjectRetain();
    v3 = 0;
    while (1)
    {
      v4 = v49 + 48 * v3;
      v5 = *(_QWORD *)v4;
      v6 = *(_QWORD *)(v4 + 8);
      v7 = *(_BYTE *)(v4 + 16);
      v8 = *(_QWORD **)(v4 + 24);
      v9 = *(_BYTE *)(v4 + 32);
      v56 = *(_QWORD *)v4;
      v57 = v6;
      v53 = v7;
      if ((v7 & 1) != 0)
      {
        v52 = *(_BYTE *)(v4 + 32);
        v50 = v3;
        v54 = *(void **)(v4 + 24);
        v10 = *(_QWORD *)(v5 + 24);
        v11 = *(_QWORD *)(v10 + 16);
        if (v11)
        {
          v12 = *(_QWORD *)v4;
          v13 = *(_QWORD *)(v4 + 8);
          sub_1BAB5EC7C(v5, v6, 1);
          sub_1BAB5EC7C(v12, v13, 1);
          sub_1BA92F754(v54, v52);
          swift_retain();
          sub_1BAB5EC7C(v12, v13, 1);
          swift_bridgeObjectRetain();
          v14 = v10 + 64;
          while (1)
          {
            v16 = *(_QWORD *)(v14 - 32);
            v15 = *(_QWORD *)(v14 - 24);
            v17 = *(_BYTE *)(v14 - 16);
            sub_1BA73B1CC(v16, v15, v17);
            sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
            swift_bridgeObjectRetain_n();
            if (swift_dynamicCast())
            {
              v18 = v17;
              v20 = *((_QWORD *)&v61 + 1);
              v19 = v62;
              __swift_project_boxed_opaque_existential_1(&v60, *((uint64_t *)&v61 + 1));
              v21 = v63;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8))(v58, a2, v20, v19);
              v63 = v21;
              if (v21)
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
                sub_1BA73B1B8(v16, v15, v18);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1BAB5EC9C(v56, v57, 1);
                sub_1BAB5EC9C(v56, v57, 1);
                sub_1BAB5EC9C(v56, v57, 1);
                v46 = v54;
                v47 = v52;
                goto LABEL_38;
              }
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
              sub_1BA73B1B8(v16, v15, v18);
              swift_bridgeObjectRelease();
            }
            else
            {
              v62 = 0;
              v60 = 0u;
              v61 = 0u;
              sub_1BA65DB80((uint64_t)&v60, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
              sub_1BA73B1B8(v16, v15, v17);
              swift_bridgeObjectRelease();
            }
            v14 += 40;
            if (!--v11)
            {
              swift_bridgeObjectRelease();
              v8 = v54;
              v22 = v56;
              goto LABEL_17;
            }
          }
        }
        v22 = *(_QWORD *)v4;
        v23 = *(_QWORD *)(v4 + 8);
        sub_1BAB5EC7C(v5, v6, 1);
        sub_1BAB5EC7C(v22, v23, 1);
        v8 = v54;
        sub_1BA92F754(v54, v52);
        swift_retain();
        sub_1BAB5EC7C(v22, v23, 1);
LABEL_17:
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
        swift_bridgeObjectRetain();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v24 = *((_QWORD *)&v61 + 1);
          v25 = v62;
          __swift_project_boxed_opaque_existential_1(&v60, *((uint64_t *)&v61 + 1));
          v26 = v63;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8))(v58, a2, v24, v25);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
          sub_1BAB5EC9C(v22, v57, 1);
          sub_1BAB5EC9C(v22, v57, 1);
          v63 = v26;
          if (v26)
          {
            sub_1BAB5EC9C(v56, v57, 1);
            sub_1BA92F770(v8, v52);
            swift_bridgeObjectRelease();
            return swift_release();
          }
        }
        else
        {
          v62 = 0;
          v60 = 0u;
          v61 = 0u;
          sub_1BA65DB80((uint64_t)&v60, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          sub_1BAB5EC9C(v22, v57, 1);
          sub_1BAB5EC9C(v22, v57, 1);
        }
        v3 = v50;
        v7 = v53;
        if ((v52 & 1) != 0)
        {
LABEL_22:
          v27 = v8[3];
          v28 = v8;
          v29 = *(_QWORD *)(v27 + 16);
          if (v29)
          {
            v51 = v3;
            sub_1BA92F754(v28, 1);
            v55 = v28;
            sub_1BA92F754(v28, 1);
            swift_bridgeObjectRetain();
            v30 = (void **)(v27 + 56);
            while (1)
            {
              v32 = (uint64_t)*(v30 - 3);
              v31 = (uint64_t)*(v30 - 2);
              v33 = *((_BYTE *)v30 - 8);
              v34 = *v30;
              sub_1BA73B1CC(v32, v31, v33);
              sub_1BA49DEA8();
              sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
              v35 = v34;
              if (swift_dynamicCast())
              {
                v36 = v32;
                v37 = *((_QWORD *)&v61 + 1);
                v38 = v62;
                __swift_project_boxed_opaque_existential_1(&v60, *((uint64_t *)&v61 + 1));
                v39 = v63;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8))(v58, a2, v37, v38);
                v63 = v39;
                if (v39)
                {
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
                  sub_1BA73B1B8(v36, v31, v33);
                  swift_bridgeObjectRelease();

                  sub_1BA92F770(v55, 1);
                  sub_1BA92F770(v55, 1);
                  sub_1BAB5EC9C(v56, v57, v53);
                  v46 = v55;
                  goto LABEL_37;
                }
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
                sub_1BA73B1B8(v36, v31, v33);

              }
              else
              {
                v62 = 0;
                v60 = 0u;
                v61 = 0u;
                sub_1BA65DB80((uint64_t)&v60, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
                sub_1BA73B1B8(v32, v31, v33);

              }
              v30 += 4;
              if (!--v29)
              {
                swift_bridgeObjectRelease();
                v40 = v55;
                v3 = v51;
                goto LABEL_31;
              }
            }
          }
          swift_retain_n();
          v40 = v28;
LABEL_31:
          v41 = (void *)v40[4];
          sub_1BA49DEA8();
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
          v42 = v41;
          if ((swift_dynamicCast() & 1) != 0)
          {
            v43 = *((_QWORD *)&v61 + 1);
            v44 = v62;
            __swift_project_boxed_opaque_existential_1(&v60, *((uint64_t *)&v61 + 1));
            v45 = v63;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8))(v58, a2, v43, v44);
            v63 = v45;
            if (v45)
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
              sub_1BA92F770(v40, 1);
              sub_1BA92F770(v40, 1);
              sub_1BAB5EC9C(v56, v57, v53);
              v46 = v40;
LABEL_37:
              v47 = 1;
LABEL_38:
              sub_1BA92F770(v46, v47);
              swift_bridgeObjectRelease();
              return swift_release();
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
            sub_1BA92F770(v40, 1);
            sub_1BA92F770(v40, 1);
            sub_1BAB5EC9C(v56, v57, v53);
            sub_1BA92F770(v40, 1);
            swift_release();
          }
          else
          {
            v62 = 0;
            v60 = 0u;
            v61 = 0u;
            sub_1BA65DB80((uint64_t)&v60, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            sub_1BA92F770(v40, 1);
            sub_1BA92F770(v40, 1);
            sub_1BAB5EC9C(v56, v57, v53);
            sub_1BA92F770(v40, 1);
            swift_release();
          }
          goto LABEL_4;
        }
      }
      else
      {
        sub_1BAB5EC7C(v5, v6, 0);
        sub_1BA92F754(v8, v9);
        swift_retain();
        if ((v9 & 1) != 0)
          goto LABEL_22;
      }
      sub_1BAB5EC9C(v56, v57, v7);
      sub_1BA92F770(v8, 0);
      swift_release();
LABEL_4:
      if (++v3 == v48)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1BAB95F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  BOOL v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unsigned __int8 v173;
  uint64_t *v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unsigned __int8 v180;
  uint64_t *v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unsigned __int8 v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unsigned __int8 v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unsigned __int8 v200;
  uint64_t v201;
  _QWORD *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unsigned __int8 v207;
  uint64_t *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned __int8 v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t *v241;
  uint64_t v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t *v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unsigned __int8 v267;

  v4 = v3;
  v262 = a1;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  v259 = v7;
  v260 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v214 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v214 - v12;
  MEMORY[0x1E0C80A78](v14);
  v243 = (uint64_t *)((char *)&v214 - v15);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v214 - v17;
  MEMORY[0x1E0C80A78](v19);
  v245 = (uint64_t)&v214 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v214 - v22;
  MEMORY[0x1E0C80A78](v24);
  v250 = (char *)&v214 - v25;
  MEMORY[0x1E0C80A78](v26);
  v249 = (uint64_t)&v214 - v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v214 - v29;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v31);
  MEMORY[0x1E0C80A78](v32);
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v214 - v36;
  MEMORY[0x1E0C80A78](v38);
  MEMORY[0x1E0C80A78]((char *)&v214 - v39);
  MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v42);
  v246 = (uint64_t)&v214 - v43;
  MEMORY[0x1E0C80A78](v44);
  MEMORY[0x1E0C80A78](v45);
  v252 = (uint64_t)&v214 - v46;
  MEMORY[0x1E0C80A78](v47);
  v251 = (uint64_t)&v214 - v48;
  MEMORY[0x1E0C80A78](v49);
  v256 = (uint64_t)&v214 - v50;
  MEMORY[0x1E0C80A78](v51);
  v255 = (uint64_t)&v214 - v60;
  v61 = *(_QWORD *)(a3 + 16);
  if (!v61)
    return;
  v240 = v56;
  v235 = v55;
  v236 = v54;
  v233 = v53;
  v232 = v52;
  v230 = v37;
  v231 = v59;
  v228 = v58;
  v227 = v57;
  v226 = (uint64_t *)v10;
  v257 = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
  swift_bridgeObjectRetain();
  v247 = a3;
  v62 = (uint64_t *)(a3 + 48);
  v229 = (uint64_t *)v13;
  v234 = (uint64_t *)v18;
  v241 = (uint64_t *)v23;
  v263 = a2;
  v248 = (uint64_t *)v30;
  v63 = v4;
  while (1)
  {
    v77 = *(v62 - 1);
    v76 = *v62;
    v78 = (unint64_t)*v62 >> 62;
    if (!(_DWORD)v78)
    {
      if ((*(_BYTE *)(v76 + 40) & 1) == 0)
        goto LABEL_7;
      v87 = *(_QWORD *)(v76 + 24);
      v86 = *(_QWORD *)(v76 + 32);
      v264 = *(_QWORD *)(v76 + 16);
      v88 = v264;
      v265 = v87;
      v266 = v86;
      v267 = 6;
      v89 = v76 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BAC68C24(v88, v87, v86, 1);
      v90 = sub_1BB6B84D4(&v264, (char *)&v267);
      if (v63)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_123:
        swift_release_n();
        return;
      }
      v91 = v90;
      v258 = v89;
      v261 = v77;
      v92 = *(_QWORD *)(v263 + v257);
      v93 = *(_QWORD *)(v92 + 16);
      swift_beginAccess();
      v94 = *(_QWORD *)(v93 + 16);
      if (*(_QWORD *)(v94 + 16))
      {
        swift_bridgeObjectRetain();
        v95 = sub_1BA6E35A8(v88, v87);
        if ((v96 & 1) != 0)
        {
          v254 = 0;
          v64 = *(_QWORD *)(*(_QWORD *)(v94 + 56) + 8 * v95);
          swift_endAccess();
          swift_retain();
          swift_bridgeObjectRelease();
          v65 = *(_QWORD *)(v64 + 16);
          swift_retain();
          swift_release();
          v66 = v250;
          sub_1BA6E9B50(v65);
          swift_release();
          v67 = (uint64_t)v66;
          v68 = v249;
          sub_1BA5193C4(v67, v249, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v69 = v68;
          v70 = v256;
          sub_1BA5193C4(v69, v256, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
LABEL_4:
          v71 = v259;
          v72 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v260 + 56);
          v72(v70, 0, 1, v259);
          v73 = v248;
          sub_1BA5193C4(v70, (uint64_t)v248, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v264 = v73[2];
          FormatOptionValue.type.getter();
          v74 = sub_1BA713E54(v267, v91);
          a2 = v263;
          if ((v74 & 1) != 0)
          {
            v75 = v255;
            sub_1BA5193C4((uint64_t)v73, v255, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v72(v75, 0, 1, v71);
            v63 = v254;
LABEL_6:
            sub_1BA502AD0(v75, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
          type metadata accessor for FormatDerivedDataError();
          sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
          swift_allocError();
          v170 = v169;
          v171 = *v73;
          v172 = v73[1];
          v264 = v73[2];
          swift_bridgeObjectRetain();
          FormatOptionValue.type.getter();
          v173 = v267;
          *(_QWORD *)v170 = v171;
          *(_QWORD *)(v170 + 8) = v172;
          *(_BYTE *)(v170 + 16) = v173;
          *(_QWORD *)(v170 + 24) = v91;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BA4A2E80((uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          goto LABEL_116;
        }
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_endAccess();
      }
      swift_beginAccess();
      v106 = *(_QWORD *)(v92 + 24);
      if (*(_QWORD *)(v106 + 16))
      {
        swift_bridgeObjectRetain();
        v107 = sub_1BA6E35A8(v88, v87);
        if ((v108 & 1) != 0)
        {
          v254 = 0;
          v109 = *(_QWORD *)(*(_QWORD *)(v106 + 56) + 8 * v107);
          swift_endAccess();
          swift_retain();
          swift_bridgeObjectRelease();
          v110 = *(_QWORD *)(v109 + 16);
          swift_retain();
          swift_release();
          v70 = v256;
          sub_1BA6E9B50(v110);
          swift_release();
          goto LABEL_4;
        }
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_endAccess();
      }
      v118 = v259;
      v119 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56);
      v120 = v256;
      v119(v256, 1, 1, v259);
      sub_1BA502AD0(v120, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      if ((*(_BYTE *)(v263 + 48) & 1) != 0)
      {
        v121 = v255;
        v119(v255, 1, 1, v118);
        v75 = v121;
        a2 = v263;
        v63 = 0;
        goto LABEL_6;
      }
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      *v174 = v88;
      v174[1] = v87;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
LABEL_116:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      goto LABEL_109;
    }
    if ((_DWORD)v78 == 1)
      goto LABEL_7;
    v79 = v76 & 0x3FFFFFFFFFFFFFFFLL;
    v80 = *(_QWORD *)(v76 + 16);
    v81 = *(_QWORD *)(v76 + 24);
    if (v80 >> 62)
      break;
    if ((*(_BYTE *)(v80 + 40) & 1) == 0)
      goto LABEL_27;
    v98 = *(_QWORD *)(v80 + 24);
    v97 = *(_QWORD *)(v80 + 32);
    v264 = *(_QWORD *)(v80 + 16);
    v99 = v264;
    v265 = v98;
    v266 = v97;
    v267 = 6;
    v258 = v80 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain_n();
    v254 = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v253 = v79;
    swift_retain_n();
    sub_1BAC68C24(v99, v98, v97, 1);
    v100 = sub_1BB6B84D4(&v264, (char *)&v267);
    if (v63)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      goto LABEL_123;
    }
    v244 = v80;
    v101 = v100;
    v261 = v77;
    v102 = v263;
    v103 = v252;
    FormatOptionCollection.subscript.getter(v99, v98, v252);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v260 + 48))(v103, 1, v259) == 1)
    {
      sub_1BA502AD0(v103, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      if ((*(_BYTE *)(v102 + 48) & 1) == 0)
      {
        type metadata accessor for FormatLayoutError();
        sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
        swift_allocError();
        *v175 = v99;
        v175[1] = v98;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_willThrow();
LABEL_121:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        goto LABEL_109;
      }
      v104 = 1;
      v105 = v251;
    }
    else
    {
      v122 = v241;
      sub_1BA5193C4(v103, (uint64_t)v241, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v264 = v122[2];
      FormatOptionValue.type.getter();
      if ((sub_1BA713E54(v267, v101) & 1) == 0)
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
        swift_allocError();
        v177 = v176;
        v178 = *v122;
        v179 = v122[1];
        v264 = v122[2];
        swift_bridgeObjectRetain();
        FormatOptionValue.type.getter();
        v180 = v267;
        *(_QWORD *)v177 = v178;
        *(_QWORD *)(v177 + 8) = v179;
        *(_BYTE *)(v177 + 16) = v180;
        *(_QWORD *)(v177 + 24) = v101;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_willThrow();
        sub_1BA4A2E80((uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        goto LABEL_121;
      }
      v105 = v251;
      sub_1BA5193C4((uint64_t)v122, v251, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v104 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56))(v105, v104, 1, v259);
    sub_1BA502AD0(v105, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_release();
    swift_bridgeObjectRelease();
    v81 = v254;
    a2 = v263;
LABEL_106:
    swift_bridgeObjectRetain();
    sub_1BAB95F20(v262, a2, v81);
    if (v63)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_113;
    }
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
LABEL_7:
    v62 += 3;
    if (!--v61)
      goto LABEL_109;
  }
  if (v80 >> 62 == 1)
  {
LABEL_27:
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    goto LABEL_106;
  }
  v82 = *(_QWORD *)(v80 + 16);
  v83 = *(_QWORD *)(v80 + 24);
  v258 = v80 & 0x3FFFFFFFFFFFFFFFLL;
  if (!(v82 >> 62))
  {
    if ((*(_BYTE *)(v82 + 40) & 1) != 0)
    {
      v261 = *(_QWORD *)(v82 + 32);
      v254 = v81;
      v111 = *(_QWORD *)(v82 + 24);
      v264 = *(_QWORD *)(v82 + 16);
      v112 = v264;
      v265 = v111;
      v266 = v261;
      v267 = 6;
      v238 = v82;
      v242 = v82 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain_n();
      v237 = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v253 = v79;
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BAC68C24(v112, v111, v261, 1);
      v244 = sub_1BB6B84D4(&v264, (char *)&v267);
      if (v63)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        goto LABEL_123;
      }
      v261 = v77;
      v113 = v263;
      v114 = v246;
      v239 = v112;
      FormatOptionCollection.subscript.getter(v112, v111, v246);
      v115 = v259;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v260 + 48))(v114, 1, v259) == 1)
      {
        sub_1BA502AD0(v114, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        if ((*(_BYTE *)(v113 + 48) & 1) == 0)
        {
          type metadata accessor for FormatLayoutError();
          sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
          swift_allocError();
          *v181 = v239;
          v181[1] = v111;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_109;
        }
        v116 = 1;
        v83 = v237;
        v117 = v240;
      }
      else
      {
        v136 = v245;
        sub_1BA5193C4(v114, v245, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v264 = *(_QWORD *)(v136 + 16);
        FormatOptionValue.type.getter();
        if ((sub_1BA713E54(v267, v244) & 1) == 0)
        {
          type metadata accessor for FormatDerivedDataError();
          sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
          swift_allocError();
          v182 = (uint64_t *)v136;
          v184 = v183;
          v185 = *v182;
          v186 = v182[1];
          v264 = v182[2];
          swift_bridgeObjectRetain();
          FormatOptionValue.type.getter();
          v187 = v267;
          *(_QWORD *)v184 = v185;
          *(_QWORD *)(v184 + 8) = v186;
          *(_BYTE *)(v184 + 16) = v187;
          *(_QWORD *)(v184 + 24) = v244;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BA4A2E80((uint64_t)v182, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_109;
        }
        v137 = v136;
        v117 = v240;
        sub_1BA5193C4(v137, v240, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v116 = 0;
        v83 = v237;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56))(v117, v116, 1, v115);
      sub_1BA502AD0(v117, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_release();
      swift_bridgeObjectRelease();
      v81 = v254;
      goto LABEL_104;
    }
LABEL_38:
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    goto LABEL_104;
  }
  if (v82 >> 62 == 1)
    goto LABEL_38;
  v84 = *(_QWORD *)(v82 + 16);
  v244 = *(_QWORD *)(v82 + 24);
  v254 = v81;
  v242 = v82 & 0x3FFFFFFFFFFFFFFFLL;
  v239 = v84;
  if (!(v84 >> 62))
  {
    if ((*(_BYTE *)(v84 + 40) & 1) != 0)
    {
      v238 = v82;
      v123 = *(_QWORD *)(v84 + 24);
      v261 = *(_QWORD *)(v84 + 32);
      v124 = v76 & 0x3FFFFFFFFFFFFFFFLL;
      v264 = *(_QWORD *)(v84 + 16);
      v125 = v264;
      v265 = v123;
      v266 = v261;
      v267 = 6;
      v225 = v84 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v253 = v124;
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain_n();
      v237 = v83;
      swift_bridgeObjectRetain();
      sub_1BAC68C24(v125, v123, v261, 1);
      v126 = sub_1BB6B84D4(&v264, (char *)&v267);
      if (v63)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        goto LABEL_150;
      }
      v127 = v126;
      v261 = v77;
      v128 = v263;
      v129 = v125;
      v130 = v236;
      v223 = v129;
      FormatOptionCollection.subscript.getter(v129, v123, v236);
      v131 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v260 + 48))(v130, 1, v259) == 1;
      v224 = v127;
      if (v131)
      {
        sub_1BA502AD0(v130, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        if ((*(_BYTE *)(v128 + 48) & 1) == 0)
        {
          type metadata accessor for FormatLayoutError();
          sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
          swift_allocError();
          *v188 = v223;
          v188[1] = v123;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_131;
        }
        v132 = 1;
        v83 = v237;
        v133 = v235;
      }
      else
      {
        v146 = v234;
        sub_1BA5193C4(v130, (uint64_t)v234, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v264 = v146[2];
        FormatOptionValue.type.getter();
        v147 = sub_1BA713E54(v267, v127);
        if ((v147 & 1) == 0)
        {
          type metadata accessor for FormatDerivedDataError();
          sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
          swift_allocError();
          v190 = v189;
          v191 = *v146;
          v192 = v146[1];
          v264 = v146[2];
          swift_bridgeObjectRetain();
          FormatOptionValue.type.getter();
          v193 = v267;
          *(_QWORD *)v190 = v191;
          *(_QWORD *)(v190 + 8) = v192;
          *(_BYTE *)(v190 + 16) = v193;
          *(_QWORD *)(v190 + 24) = v127;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BA4A2E80((uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          swift_release();
          swift_bridgeObjectRelease();
LABEL_131:
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
LABEL_150:
          swift_bridgeObjectRelease();
          swift_release();
LABEL_109:
          swift_bridgeObjectRelease();
          return;
        }
        v133 = v235;
        sub_1BA5193C4((uint64_t)v146, v235, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v132 = 0;
        v83 = v237;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56))(v133, v132, 1, v259);
      sub_1BA502AD0(v133, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_release();
      swift_bridgeObjectRelease();
      v85 = v244;
    }
    else
    {
      swift_retain();
      v85 = v244;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain();
LABEL_60:
      swift_retain_n();
      swift_bridgeObjectRetain();
    }
    goto LABEL_102;
  }
  if (v84 >> 62 == 1)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    v85 = v244;
    goto LABEL_60;
  }
  v225 = v84 & 0x3FFFFFFFFFFFFFFFLL;
  v134 = *(_QWORD *)(v84 + 16);
  v224 = *(_QWORD *)(v84 + 24);
  v238 = v82;
  v223 = v134;
  if (!(v134 >> 62))
  {
    if ((*(_BYTE *)(v134 + 40) & 1) == 0)
      goto LABEL_66;
    v261 = *(_QWORD *)(v134 + 32);
    v138 = v76 & 0x3FFFFFFFFFFFFFFFLL;
    v237 = v83;
    v140 = *(_QWORD *)(v134 + 24);
    v264 = *(_QWORD *)(v134 + 16);
    v139 = v264;
    v265 = v140;
    v266 = v261;
    v267 = 6;
    v221 = v134 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v253 = v138;
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BAC68C24(v139, v140, v261, 1);
    v222 = sub_1BB6B84D4(&v264, (char *)&v267);
    if (v63)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      goto LABEL_149;
    }
    v261 = v77;
    v141 = v263;
    v142 = v140;
    v143 = v232;
    v220 = v142;
    FormatOptionCollection.subscript.getter(v139, v142, v232);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v260 + 48))(v143, 1, v259) == 1)
    {
      sub_1BA502AD0(v143, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      if ((*(_BYTE *)(v141 + 48) & 1) != 0)
      {
        v144 = 1;
LABEL_81:
        v83 = v237;
        v158 = v233;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56))(v233, v144, 1, v259);
        sub_1BA502AD0(v158, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_release();
        swift_bridgeObjectRelease();
        v145 = v224;
        goto LABEL_100;
      }
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v194 = v220;
      *v195 = v139;
      v195[1] = v194;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      v157 = v243;
      sub_1BA5193C4(v143, (uint64_t)v243, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v264 = v157[2];
      FormatOptionValue.type.getter();
      if ((sub_1BA713E54(v267, v222) & 1) != 0)
      {
        sub_1BA5193C4((uint64_t)v157, v233, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v144 = 0;
        goto LABEL_81;
      }
      type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      v197 = v196;
      v198 = *v157;
      v199 = v157[1];
      v264 = v157[2];
      swift_bridgeObjectRetain();
      FormatOptionValue.type.getter();
      v200 = v267;
      *(_QWORD *)v197 = v198;
      *(_QWORD *)(v197 + 8) = v199;
      *(_BYTE *)(v197 + 16) = v200;
      *(_QWORD *)(v197 + 24) = v222;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      sub_1BA4A2E80((uint64_t)v157, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    swift_bridgeObjectRelease();
    goto LABEL_149;
  }
  if (v134 >> 62 == 1)
  {
LABEL_66:
    swift_retain();
    v145 = v224;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    goto LABEL_100;
  }
  v237 = v83;
  v135 = *(_QWORD *)(v134 + 16);
  v221 = *(_QWORD *)(v134 + 24);
  v222 = v134 & 0x3FFFFFFFFFFFFFFFLL;
  v220 = v135;
  if (!(v135 >> 62))
  {
    if ((*(_BYTE *)(v135 + 40) & 1) == 0)
      goto LABEL_82;
    v148 = *(_QWORD *)(v135 + 24);
    v261 = *(_QWORD *)(v135 + 32);
    v264 = *(_QWORD *)(v135 + 16);
    v149 = v264;
    v265 = v148;
    v266 = v261;
    v267 = 6;
    v218 = v135 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v253 = v79;
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BAC68C24(v149, v148, v261, 1);
    v219 = sub_1BB6B84D4(&v264, (char *)&v267);
    if (v63)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      goto LABEL_148;
    }
    v261 = v77;
    v150 = v231;
    v216 = v149;
    v217 = v148;
    FormatOptionCollection.subscript.getter(v149, v148, v231);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v260 + 48))(v150, 1, v259) == 1)
    {
      sub_1BA502AD0(v150, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      if ((*(_BYTE *)(v263 + 48) & 1) != 0)
      {
        v151 = 1;
        v152 = (uint64_t)v230;
LABEL_91:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56))(v152, v151, 1, v259);
        sub_1BA502AD0(v152, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_97;
      }
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v201 = v217;
      *v202 = v216;
      v202[1] = v201;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      v165 = v150;
      v166 = v229;
      sub_1BA5193C4(v165, (uint64_t)v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v264 = v166[2];
      FormatOptionValue.type.getter();
      if ((sub_1BA713E54(v267, v219) & 1) != 0)
      {
        v152 = (uint64_t)v230;
        sub_1BA5193C4((uint64_t)v166, (uint64_t)v230, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v151 = 0;
        goto LABEL_91;
      }
      type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      v204 = v203;
      v205 = *v166;
      v206 = v166[1];
      v264 = v166[2];
      swift_bridgeObjectRetain();
      FormatOptionValue.type.getter();
      v207 = v267;
      *(_QWORD *)v204 = v205;
      *(_QWORD *)(v204 + 8) = v206;
      *(_BYTE *)(v204 + 16) = v207;
      *(_QWORD *)(v204 + 24) = v219;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      sub_1BA4A2E80((uint64_t)v166, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    swift_bridgeObjectRelease();
    goto LABEL_148;
  }
  if (v135 >> 62 == 1)
  {
LABEL_82:
    swift_retain();
    v159 = v221;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    goto LABEL_98;
  }
  v153 = *(_QWORD *)(v135 + 16);
  v154 = *(_QWORD *)(v135 + 24);
  v219 = v135 & 0x3FFFFFFFFFFFFFFFLL;
  v218 = v153;
  if (!(v153 >> 62))
  {
    if ((*(_BYTE *)(v153 + 40) & 1) == 0)
      goto LABEL_88;
    v160 = v154;
    v161 = *(_QWORD *)(v153 + 24);
    v261 = *(_QWORD *)(v153 + 32);
    v264 = *(_QWORD *)(v153 + 16);
    v162 = v264;
    v265 = v161;
    v266 = v261;
    v267 = 6;
    v215 = v153 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain_n();
    v217 = v160;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v253 = v79;
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BAC68C24(v162, v161, v261, 1);
    v216 = sub_1BB6B84D4(&v264, (char *)&v267);
    if (v63)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      goto LABEL_146;
    }
    v261 = v77;
    v163 = v227;
    v214 = v162;
    FormatOptionCollection.subscript.getter(v162, v161, v227);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v260 + 48))(v163, 1, v259) == 1)
    {
      sub_1BA502AD0(v163, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      if ((*(_BYTE *)(v263 + 48) & 1) != 0)
      {
        v164 = 1;
LABEL_94:
        v168 = v228;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56))(v228, v164, 1, v259);
        sub_1BA502AD0(v168, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_release();
        swift_bridgeObjectRelease();
        v154 = v217;
        goto LABEL_95;
      }
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      *v208 = v214;
      v208[1] = v161;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      v167 = v226;
      sub_1BA5193C4(v163, (uint64_t)v226, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v264 = v167[2];
      FormatOptionValue.type.getter();
      if ((sub_1BA713E54(v267, v216) & 1) != 0)
      {
        sub_1BA5193C4((uint64_t)v167, v228, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v164 = 0;
        goto LABEL_94;
      }
      type metadata accessor for FormatDerivedDataError();
      sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      v210 = v209;
      v211 = *v167;
      v212 = v167[1];
      v264 = v167[2];
      swift_bridgeObjectRetain();
      FormatOptionValue.type.getter();
      v213 = v267;
      *(_QWORD *)v210 = v211;
      *(_QWORD *)(v210 + 8) = v212;
      *(_BYTE *)(v210 + 16) = v213;
      *(_QWORD *)(v210 + 24) = v216;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      sub_1BA4A2E80((uint64_t)v167, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    swift_bridgeObjectRelease();
    goto LABEL_146;
  }
  if (v153 >> 62 != 1)
  {
    v216 = *(_QWORD *)(v153 + 16);
    v217 = v154;
    v155 = v76 & 0x3FFFFFFFFFFFFFFFLL;
    v156 = *(_QWORD *)(v153 + 24);
    v215 = v216 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain();
    swift_bridgeObjectRetain();
    v261 = v77;
    swift_bridgeObjectRetain();
    v253 = v155;
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    v154 = v217;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BABC2F64(v262, v263, v216, v156);
    if (!v63)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_95;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_146:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_147:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_148:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_149:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_150;
  }
LABEL_88:
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
LABEL_95:
  swift_bridgeObjectRetain();
  sub_1BAB95F20(v262, v263, v154);
  if (v63)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    goto LABEL_147;
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_release();
LABEL_97:
  v159 = v221;
LABEL_98:
  swift_bridgeObjectRetain();
  sub_1BAB95F20(v262, v263, v159);
  if (v63)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    goto LABEL_148;
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_release();
  v145 = v224;
  v83 = v237;
LABEL_100:
  swift_bridgeObjectRetain();
  sub_1BAB95F20(v262, v263, v145);
  if (v63)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    goto LABEL_149;
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_release();
  v85 = v244;
LABEL_102:
  swift_bridgeObjectRetain();
  sub_1BAB95F20(v262, v263, v85);
  if (v63)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    goto LABEL_150;
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_release();
  v81 = v254;
LABEL_104:
  swift_bridgeObjectRetain();
  sub_1BAB95F20(v262, v263, v83);
  if (!v63)
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    a2 = v263;
    goto LABEL_106;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease_n();
LABEL_113:
  swift_release();
}

void sub_1BAB98B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[22];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a2;
  v28 = type metadata accessor for FormatOption();
  v27 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v25 - v8;
  v26 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v30 = (char *)v25 - v12;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v25 - v17;
  MEMORY[0x1E0C80A78](v19);
  v24 = *(_QWORD *)(a3 + 16);
  if (v24)
  {
    v25[8] = (char *)v25 - v20;
    v25[18] = v18;
    v25[19] = v23;
    v25[16] = v22;
    v25[17] = v21;
    v25[21] = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
    swift_bridgeObjectRetain();
    v31 = a3;
    v33 = a1;
    v25[9] = v6;
    v25[10] = v9;
    v32 = v24;
    __asm { BR              X9 }
  }
}

uint64_t sub_1BAB9FB94(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v24 = result;
  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return result;
  v5 = a3 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
  v19 = v4;
  v20 = v5;
  while (1)
  {
    v9 = v5 + 32 * v6;
    if (*(_BYTE *)(v9 + 24) == 1)
      break;
LABEL_5:
    if (++v6 == v4)
      return swift_bridgeObjectRelease();
  }
  v10 = *(_QWORD *)(v9 + 8);
  v7 = *(_QWORD *)(v9 + 16);
  v29 = v10;
  sub_1BA896BB8(v10, v7, 1);
  sub_1BA896BB8(v10, v7, 1);
  sub_1BA4AD288(0, &qword_1EF2B0E50, (uint64_t)&type metadata for FormatSourceItemTipTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  swift_bridgeObjectRetain();
  v22 = v6;
  v23 = v10;
  if ((swift_dynamicCast() & 1) == 0)
  {
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
    sub_1BA65DB80((uint64_t)&v26, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    v13 = *(_QWORD *)(v7 + 16);
    if (v13)
    {
LABEL_12:
      swift_bridgeObjectRetain_n();
      v21 = v7;
      v14 = (uint64_t *)(v7 + 48);
      while (1)
      {
        v29 = *v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        if (swift_dynamicCast())
        {
          v15 = *((_QWORD *)&v27 + 1);
          v16 = v28;
          __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v24, a2, v15, v16);
          if (v3)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA896BE0(v23, v21, 1);
            v17 = v23;
            v18 = v21;
            goto LABEL_19;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v28 = 0;
          v26 = 0u;
          v27 = 0u;
          sub_1BA65DB80((uint64_t)&v26, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v14 += 3;
        if (!--v13)
        {
          v7 = v21;
          swift_bridgeObjectRelease_n();
          v4 = v19;
          v5 = v20;
          v6 = v22;
          v8 = v23;
          goto LABEL_4;
        }
      }
    }
    goto LABEL_10;
  }
  v11 = *((_QWORD *)&v27 + 1);
  v12 = v28;
  __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v24, a2, v11, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  if (!v3)
  {
    v13 = *(_QWORD *)(v7 + 16);
    if (v13)
      goto LABEL_12;
LABEL_10:
    v5 = v20;
    v8 = v23;
LABEL_4:
    sub_1BA896BE0(v8, v7, 1);
    sub_1BA896BE0(v8, v7, 1);
    goto LABEL_5;
  }
  sub_1BA896BE0(v10, v7, 1);
  v17 = v10;
  v18 = v7;
LABEL_19:
  sub_1BA896BE0(v17, v18, 1);
  return swift_bridgeObjectRelease();
}

void sub_1BAB9FEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v5 = type metadata accessor for FormatOption();
  v23[14] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v23[8] = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v23[7] = (char *)v23 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v23 - v10;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v12);
  MEMORY[0x1E0C80A78](v13);
  v23[13] = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v23 - v16;
  v18 = sub_1BB86EB00();
  v26 = *(_QWORD *)(v18 - 8);
  v27 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1E0C80A78](v21);
  v23[15] = (char *)v23 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a3 + 16))
  {
    v23[12] = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
    v25 = a3 + 32;
    v23[6] = a3;
    swift_bridgeObjectRetain();
    v23[10] = v17;
    v23[2] = v11;
    v23[11] = v5;
    v28 = v20;
    v23[9] = a1;
    __asm { BR              X9 }
  }
}

uint64_t sub_1BABA0C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return result;
  swift_bridgeObjectRetain();
  for (i = (uint64_t *)(a3 + 56); ; i += 5)
  {
    v8 = *(i - 1);
    v9 = *i;
    if ((~v8 & 0xF000000000000007) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1BA5E7FF4(v8);
      sub_1BA5E7FF4(v9);
      if ((~v9 & 0xF000000000000007) == 0)
        goto LABEL_3;
      goto LABEL_10;
    }
    swift_bridgeObjectRetain();
    sub_1BA5E7FF4(v8);
    sub_1BA5E7FF4(v9);
    sub_1BA5E7FF4(v8);
    FormatColor.bind(binder:context:)();
    sub_1BA5E800C(v8);
    if (v4)
      break;
    if ((~v9 & 0xF000000000000007) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      sub_1BA5E800C(v8);
      sub_1BA5E800C(v9);
      goto LABEL_4;
    }
LABEL_10:
    swift_retain();
    FormatColor.bind(binder:context:)();
    sub_1BA5E800C(v9);
    swift_bridgeObjectRelease();
    sub_1BA5E800C(v8);
    sub_1BA5E800C(v9);
    if (v4)
      return swift_bridgeObjectRelease();
LABEL_4:
    if (!--v5)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1BA5E800C(v8);
  sub_1BA5E800C(v9);
  return swift_bridgeObjectRelease();
}

void sub_1BABA0DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v5 = a3 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    v15 = v5;
    v16 = v4;
    while (1)
    {
      v7 = (_QWORD *)(v5 + 48 * v6);
      v8 = v7[2];
      v10 = v7[3];
      v9 = v7[4];
      if (v8)
      {
        v17 = v7[4];
        v11 = *(_QWORD *)(v8 + 16);
        if (v11)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_1BA5E7FF4(v10);
          sub_1BA5E7FF4(v17);
          swift_bridgeObjectRetain();
          v12 = (_BYTE *)(v8 + 40);
          while (1)
          {
            if ((*v12 & 1) == 0)
            {
              v13 = *((_QWORD *)v12 - 1);
              swift_retain_n();
              FormatFloat.bind(binder:context:)();
              if (v3)
              {
                sub_1BA72C46C(v13, 0);
                sub_1BA72C46C(v13, 0);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                sub_1BA5E800C(v10);
                v14 = v17;
                goto LABEL_22;
              }
              sub_1BA72C46C(v13, 0);
              sub_1BA72C46C(v13, 0);
            }
            v12 += 16;
            if (!--v11)
            {
              swift_bridgeObjectRelease_n();
              v5 = v15;
              v4 = v16;
              v9 = v17;
              goto LABEL_16;
            }
          }
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA5E7FF4(v10);
        v9 = v17;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BA5E7FF4(v10);
      }
      sub_1BA5E7FF4(v9);
LABEL_16:
      if ((~v10 & 0xF000000000000007) != 0)
      {
        swift_retain();
        FormatColor.bind(binder:context:)();
        sub_1BA5E800C(v10);
        if (v3)
          break;
      }
      if ((~v9 & 0xF000000000000007) != 0)
      {
        swift_retain();
        FormatColor.bind(binder:context:)();
        sub_1BA5E800C(v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v10);
        sub_1BA5E800C(v9);
        if (v3)
          goto LABEL_23;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v10);
        sub_1BA5E800C(v9);
      }
      if (++v6 == v4)
        goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5E800C(v10);
    v14 = v9;
LABEL_22:
    sub_1BA5E800C(v14);
LABEL_23:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BABA1098(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 v115;
  unsigned __int8 v116;
  unsigned __int8 v117;
  unsigned __int8 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return result;
  v5 = result;
  v6 = a3 + 32;
  swift_bridgeObjectRetain();
  v7 = 0;
  v128 = v5;
  v129 = a2;
  v126 = v6;
  v124 = v3;
  while (1)
  {
    v8 = (__int128 *)(v6 + 152 * v7);
    v9 = v8[6];
    v10 = v8[8];
    v143 = v8[7];
    v144 = v10;
    v11 = v8[3];
    v138 = v8[2];
    v139 = v11;
    v12 = v8[5];
    v140 = v8[4];
    v145 = *((_QWORD *)v8 + 18);
    v141 = v12;
    v142 = v9;
    v13 = v8[1];
    v136 = *v8;
    v137 = v13;
    v14 = v13;
    v127 = v7;
    if ((_QWORD)v13)
    {
      v15 = *(_QWORD *)(v13 + 16);
      if (v15)
      {
        swift_bridgeObjectRetain();
        sub_1BAADEEC0((uint64_t)&v136);
        swift_bridgeObjectRetain();
        v16 = (_BYTE *)(v14 + 40);
        do
        {
          if ((*v16 & 1) == 0)
          {
            *(_QWORD *)&v133 = *((_QWORD *)v16 - 1);
            v17 = v133;
            swift_retain_n();
            v18 = v146;
            FormatFloat.bind(binder:context:)();
            v146 = v18;
            if (v18)
            {
              sub_1BA72C46C(v17, 0);
              sub_1BA72C46C(v17, 0);
              swift_bridgeObjectRelease_n();
              goto LABEL_102;
            }
            sub_1BA72C46C(v17, 0);
            sub_1BA72C46C(v17, 0);
          }
          v16 += 16;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease_n();
        v19 = *((_QWORD *)&v137 + 1);
        if (!*((_QWORD *)&v137 + 1))
          goto LABEL_19;
LABEL_14:
        v20 = *(_QWORD *)(v19 + 16);
        if (!v20)
          goto LABEL_19;
        v21 = swift_bridgeObjectRetain() + 64;
        while (1)
        {
          v130 = v20;
          v22 = *(_QWORD *)(v21 - 16);
          *(_QWORD *)&v133 = *(_QWORD *)(v21 - 24);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          v23 = v146;
          FormatColor.bind(binder:context:)();
          if (v23)
            break;
          swift_release();
          *(_QWORD *)&v133 = v22;
          swift_retain();
          FormatFloat.bind(binder:context:)();
          v146 = 0;
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v21 += 40;
          v20 = v130 - 1;
          if (v130 == 1)
          {
            swift_bridgeObjectRelease();
            v3 = v124;
            goto LABEL_19;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        sub_1BAADED48((uint64_t)&v136);
        result = swift_bridgeObjectRelease();
        v146 = v23;
        return result;
      }
    }
    sub_1BAADEEC0((uint64_t)&v136);
    v19 = *((_QWORD *)&v137 + 1);
    if (*((_QWORD *)&v137 + 1))
      goto LABEL_14;
LABEL_19:
    v24 = BYTE8(v144);
    if (BYTE8(v144) != 254)
      break;
    sub_1BAADED48((uint64_t)&v136);
LABEL_21:
    v6 = v126;
LABEL_22:
    v25 = v127;
LABEL_99:
    v7 = v25 + 1;
    if (v7 == v3)
      return swift_bridgeObjectRelease();
  }
  v26 = *((_QWORD *)&v139 + 1);
  v27 = v140;
  v28 = *((_QWORD *)&v141 + 1);
  v122 = v141;
  v123 = v142;
  v29 = *((_QWORD *)&v143 + 1);
  v131 = *((_QWORD *)&v142 + 1);
  v132 = v143;
  v30 = v144;
  *(_QWORD *)&v133 = *((_QWORD *)&v141 + 1);
  swift_retain_n();
  v31 = v146;
  FormatColor.bind(binder:context:)();
  v146 = v31;
  v125 = v30;
  if (v31)
  {
    sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v28, v123, v131, v132, v29, v30, v24);
    sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v28, v123, v131, v132, v29, v30, v24);
    goto LABEL_102;
  }
  v111 = v30;
  v121 = v29;
  v32 = v132;
  sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v28, v123, v131, v132, v29, v111, v24);
  v3 = v124;
  switch(v24)
  {
    case 0:
      v115 = 0;
      goto LABEL_27;
    case 1:
      v33 = v28;
      v34 = v131;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v35 = *((_QWORD *)&v134 + 1);
        v36 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v37 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8))(v128, v129, v35, v36);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v38 = v121;
        v146 = v37;
        if (v37)
        {
          v118 = 1;
          v110 = v121;
          v114 = v125;
          v101 = v26;
          v103 = *((_QWORD *)&v27 + 1);
          v102 = v27;
          v104 = v122;
          v105 = v33;
LABEL_111:
          v106 = v123;
          v107 = v34;
          goto LABEL_119;
        }
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v38 = v121;
      }
      if (swift_dynamicCast())
      {
        v55 = *((_QWORD *)&v134 + 1);
        v56 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v57 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8))(v128, v129, v55, v56);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v33, v123, v131, v132, v38, v125, 1u);
        sub_1BAADED48((uint64_t)&v136);
        v146 = v57;
        if (v57)
          return swift_bridgeObjectRelease();
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v33, v123, v131, v132, v38, v125, 1u);
        sub_1BAADED48((uint64_t)&v136);
      }
      goto LABEL_21;
    case 2:
      v119 = v28;
      v39 = v123;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v40 = *((_QWORD *)&v134 + 1);
        v41 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v42 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8))(v128, v129, v40, v41);
        v43 = v121;
        v146 = v42;
        if (v42)
          goto LABEL_106;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v6 = v126;
        v43 = v121;
      }
      if (swift_dynamicCast())
      {
        v58 = *((_QWORD *)&v134 + 1);
        v59 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v60 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8))(v128, v129, v58, v59);
        v146 = v60;
        if (v60)
          goto LABEL_106;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      v70 = v132;
      if (swift_dynamicCast())
      {
        v71 = *((_QWORD *)&v134 + 1);
        v72 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v73 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 8))(v128, v129, v71, v72);
        v146 = v73;
        if (v73)
        {
LABEL_106:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
          v118 = 2;
          v110 = v43;
          v114 = v125;
          v101 = v26;
          v103 = *((_QWORD *)&v27 + 1);
          v102 = v27;
          v104 = v122;
LABEL_116:
          v105 = v119;
          goto LABEL_117;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
        v70 = v132;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      if (swift_dynamicCast())
      {
        v80 = *((_QWORD *)&v134 + 1);
        v81 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v82 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 8))(v128, v129, v80, v81);
        v146 = v82;
        if (!v82)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
          v116 = 2;
          v108 = v43;
          v112 = v125;
          v83 = v26;
          v85 = *((_QWORD *)&v27 + 1);
          v84 = v27;
          v86 = v122;
          v87 = v119;
LABEL_86:
          v91 = v39;
          goto LABEL_91;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v118 = 2;
        v110 = v43;
        v114 = v125;
        v101 = v26;
        v103 = *((_QWORD *)&v27 + 1);
        v102 = v27;
        v104 = v122;
        v105 = v119;
LABEL_117:
        v106 = v39;
        goto LABEL_118;
      }
      v135 = 0;
      v133 = 0u;
      v134 = 0u;
      sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      v117 = 2;
      v109 = v43;
      v113 = v125;
      v95 = v26;
      v97 = *((_QWORD *)&v27 + 1);
      v96 = v27;
      v98 = v122;
      goto LABEL_95;
    case 3:
      v119 = v28;
      v39 = v123;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v44 = *((_QWORD *)&v134 + 1);
        v45 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v46 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8))(v128, v129, v44, v45);
        v47 = v121;
        v146 = v46;
        if (v46)
          goto LABEL_115;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v6 = v126;
        v47 = v121;
      }
      if (swift_dynamicCast())
      {
        v61 = *((_QWORD *)&v134 + 1);
        v62 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v63 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8))(v128, v129, v61, v62);
        v146 = v63;
        if (v63)
          goto LABEL_115;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      v70 = v132;
      if (swift_dynamicCast())
      {
        v74 = *((_QWORD *)&v134 + 1);
        v75 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v76 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 8))(v128, v129, v74, v75);
        v146 = v76;
        if (v76)
          goto LABEL_115;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
        v70 = v132;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      if (!swift_dynamicCast())
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v117 = 3;
        v109 = v47;
        v113 = v125;
        v95 = v26;
        v97 = *((_QWORD *)&v27 + 1);
        v96 = v27;
        v98 = v122;
LABEL_95:
        v99 = v119;
        v100 = v39;
LABEL_97:
        sub_1BA6E8A78(v95, v96, v97, v98, v99, v100, v131, v70, v109, v113, v117);
        sub_1BAADED48((uint64_t)&v136);
LABEL_98:
        v25 = v127;
        goto LABEL_99;
      }
      v88 = *((_QWORD *)&v134 + 1);
      v89 = v135;
      __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
      v90 = v146;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 8))(v128, v129, v88, v89);
      v146 = v90;
      if (!v90)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v116 = 3;
        v108 = v47;
        v112 = v125;
        v83 = v26;
        v85 = *((_QWORD *)&v27 + 1);
        v84 = v27;
        v86 = v122;
        v87 = v119;
        goto LABEL_86;
      }
LABEL_115:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
      v118 = 3;
      v110 = v47;
      v114 = v125;
      v101 = v26;
      v103 = *((_QWORD *)&v27 + 1);
      v102 = v27;
      v104 = v122;
      goto LABEL_116;
    case 4:
      v120 = v28;
      v34 = v131;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v48 = *((_QWORD *)&v134 + 1);
        v49 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v50 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8))(v128, v129, v48, v49);
        v51 = v121;
        v146 = v50;
        if (v50)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
          v118 = 4;
          v110 = v121;
          v114 = v125;
          v101 = v26;
          v103 = *((_QWORD *)&v27 + 1);
          v102 = v27;
          v104 = v122;
          v105 = v120;
          goto LABEL_111;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
        v32 = v132;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v6 = v126;
        v51 = v121;
      }
      if (!swift_dynamicCast())
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v120, v123, v131, v32, v51, v125, 4u);
        sub_1BAADED48((uint64_t)&v136);
        goto LABEL_22;
      }
      v64 = *((_QWORD *)&v134 + 1);
      v65 = v135;
      __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
      v66 = v146;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8))(v128, v129, v64, v65);
      v146 = v66;
      if (v66)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v120, v123, v131, v132, v51, v125, 4u);
        sub_1BAADED48((uint64_t)&v136);
        return swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
      sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v120, v123, v131, v132, v51, v125, 4u);
      sub_1BAADED48((uint64_t)&v136);
      goto LABEL_21;
    case 5:
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v52 = *((_QWORD *)&v134 + 1);
        v53 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v54 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8))(v128, v129, v52, v53);
        v146 = v54;
        if (v54)
          goto LABEL_112;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v6 = v126;
      }
      if (swift_dynamicCast())
      {
        v67 = *((_QWORD *)&v134 + 1);
        v68 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v69 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8))(v128, v129, v67, v68);
        v146 = v69;
        if (v69)
          goto LABEL_112;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      v70 = v132;
      if (swift_dynamicCast())
      {
        v77 = *((_QWORD *)&v134 + 1);
        v78 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v79 = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 8))(v128, v129, v77, v78);
        v146 = v79;
        if (v79)
        {
LABEL_112:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
          v118 = 5;
          v110 = v121;
          v114 = v125;
          v101 = v26;
          v103 = *((_QWORD *)&v27 + 1);
          v102 = v27;
          v104 = v122;
          v105 = v28;
          v106 = v123;
          goto LABEL_118;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
        v70 = v132;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      if (!swift_dynamicCast())
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v117 = 5;
        v109 = v121;
        v113 = v125;
        v95 = v26;
        v97 = *((_QWORD *)&v27 + 1);
        v96 = v27;
        v98 = v122;
        v99 = v28;
        v100 = v123;
        goto LABEL_97;
      }
      v92 = *((_QWORD *)&v134 + 1);
      v93 = v135;
      __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
      v94 = v146;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 8))(v128, v129, v92, v93);
      v146 = v94;
      if (!v94)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v116 = 5;
        v85 = *((_QWORD *)&v27 + 1);
        v108 = v121;
        v112 = v125;
        v83 = v26;
        v84 = v27;
        v86 = v122;
        v87 = v28;
        v91 = v123;
LABEL_91:
        sub_1BA6E8A78(v83, v84, v85, v86, v87, v91, v131, v132, v108, v112, v116);
LABEL_92:
        sub_1BAADED48((uint64_t)&v136);
        v6 = v126;
        goto LABEL_98;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
      v118 = 5;
      v103 = *((_QWORD *)&v27 + 1);
      v110 = v121;
      v114 = v125;
      v101 = v26;
      v102 = v27;
      v104 = v122;
      v105 = v28;
      v106 = v123;
LABEL_118:
      v107 = v131;
LABEL_119:
      sub_1BA6E8A78(v101, v102, v103, v104, v105, v106, v107, v132, v110, v114, v118);
LABEL_102:
      sub_1BAADED48((uint64_t)&v136);
      return swift_bridgeObjectRelease();
    default:
      v115 = -1;
LABEL_27:
      sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v28, v123, v131, v132, v121, v125, v115);
      goto LABEL_92;
  }
}

uint64_t sub_1BABA23B4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 v94;
  uint64_t v95;
  unsigned __int8 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  char v126;
  uint64_t v127;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return result;
  v4 = a3;
  v6 = result;
  v7 = a3 + 32;
  swift_bridgeObjectRetain();
  v8 = 0;
  v109 = v6;
  v110 = a2;
  v106 = v7;
  v107 = v4;
  v103 = v3;
  while (1)
  {
    v9 = (__int128 *)(v7 + 168 * v8);
    v10 = v9[8];
    v11 = v9[9];
    v12 = v9[6];
    v123 = v9[7];
    v124 = v10;
    v125 = v11;
    v14 = v9[4];
    v13 = v9[5];
    v126 = *((_BYTE *)v9 + 160);
    v121 = v13;
    v122 = v12;
    v15 = v9[1];
    v116 = *v9;
    v117 = v15;
    v16 = v9[2];
    v119 = v9[3];
    v120 = v14;
    v118 = v16;
    v17 = v117;
    v108 = v8;
    if ((_QWORD)v117)
    {
      v18 = v4;
      v19 = *(_QWORD *)(v117 + 16);
      if (v19)
      {
        v20 = v3;
        swift_bridgeObjectRetain();
        sub_1BAC6926C((uint64_t)&v116);
        swift_bridgeObjectRetain();
        v21 = (_BYTE *)(v17 + 40);
        do
        {
          if ((*v21 & 1) == 0)
          {
            *(_QWORD *)&v113 = *((_QWORD *)v21 - 1);
            v22 = v113;
            swift_retain_n();
            v23 = v127;
            FormatFloat.bind(binder:context:)();
            v127 = v23;
            if (v23)
            {
              sub_1BA72C46C(v22, 0);
              sub_1BA72C46C(v22, 0);
              swift_bridgeObjectRelease_n();
              goto LABEL_105;
            }
            sub_1BA72C46C(v22, 0);
            sub_1BA72C46C(v22, 0);
          }
          v21 += 16;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease_n();
        v3 = v20;
        v7 = v106;
        v4 = v107;
      }
      else
      {
        sub_1BAC6926C((uint64_t)&v116);
        v7 = v106;
        v4 = v18;
      }
    }
    else
    {
      sub_1BAC6926C((uint64_t)&v116);
    }
    v24 = *((_QWORD *)&v117 + 1);
    if ((~*((_QWORD *)&v117 + 1) & 0xF000000000000007) != 0)
    {
      *(_QWORD *)&v113 = *((_QWORD *)&v117 + 1);
      swift_retain();
      v27 = v127;
      FormatBackground.bind(binder:context:)();
      v127 = v27;
      if (v27)
      {
        sub_1BA6E6CD8(v24);
        goto LABEL_114;
      }
      v25 = v7;
      sub_1BA6E6CD8(v24);
      v26 = v118;
      if (!(_QWORD)v118)
        goto LABEL_23;
LABEL_18:
      v28 = *(_QWORD *)(v26 + 16);
      if (!v28)
        goto LABEL_23;
      v29 = swift_bridgeObjectRetain() + 64;
      while (1)
      {
        v111 = v28;
        v30 = *(_QWORD *)(v29 - 16);
        *(_QWORD *)&v113 = *(_QWORD *)(v29 - 24);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        v31 = v127;
        FormatColor.bind(binder:context:)();
        if (v31)
          break;
        swift_release();
        *(_QWORD *)&v113 = v30;
        swift_retain();
        FormatFloat.bind(binder:context:)();
        v127 = 0;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v29 += 40;
        v28 = v111 - 1;
        if (v111 == 1)
        {
          swift_bridgeObjectRelease();
          v25 = v106;
          v4 = v107;
          v3 = v103;
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      sub_1BAC69354((uint64_t)&v116);
      result = swift_bridgeObjectRelease();
      v127 = v31;
      return result;
    }
    v25 = v7;
    v26 = v118;
    if ((_QWORD)v118)
      goto LABEL_18;
LABEL_23:
    v32 = v125;
    if (v125 == 254)
    {
      v7 = v25;
    }
    else
    {
      v33 = v120;
      v34 = v122;
      v104 = v121;
      v105 = *((_QWORD *)&v122 + 1);
      v35 = v124;
      v112 = v123;
      v36 = *((_QWORD *)&v124 + 1);
      *(_QWORD *)&v113 = v122;
      swift_retain_n();
      v37 = v127;
      FormatColor.bind(binder:context:)();
      v127 = v37;
      if (v37)
      {
        sub_1BA6E8A78(v33, *((uint64_t *)&v33 + 1), v104, *((uint64_t *)&v104 + 1), v34, v105, v112, *((uint64_t *)&v112 + 1), v35, v36, v32);
        sub_1BA6E8A78(v33, *((uint64_t *)&v33 + 1), v104, *((uint64_t *)&v104 + 1), v34, v105, v112, *((uint64_t *)&v112 + 1), v35, v36, v32);
LABEL_105:
        sub_1BAC69354((uint64_t)&v116);
        return swift_bridgeObjectRelease();
      }
      v102 = v35;
      sub_1BA6E8A78(v33, *((uint64_t *)&v33 + 1), v104, *((uint64_t *)&v104 + 1), v34, v105, v112, *((uint64_t *)&v112 + 1), v35, v36, v32);
      switch(v32)
      {
        case 0:
          sub_1BA6E8A78(v33, *((uint64_t *)&v33 + 1), v104, *((uint64_t *)&v104 + 1), v34, v105, v112, *((uint64_t *)&v112 + 1), v35, v36, 0);
          goto LABEL_29;
        case 1:
          v99 = v34;
          v98 = *((_QWORD *)&v33 + 1);
          v101 = v33;
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v4 = v107;
            v39 = *((_QWORD *)&v114 + 1);
            v38 = v115;
            __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
            v40 = v127;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8))(v109, v110, v39, v38);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
            v41 = v102;
            v127 = v40;
            if (v40)
              goto LABEL_118;
            v42 = *((_QWORD *)&v112 + 1);
            v3 = v103;
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v42 = *((_QWORD *)&v112 + 1);
            v4 = v107;
            v41 = v102;
            v3 = v103;
          }
          if (!swift_dynamicCast())
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            sub_1BA6E8A78(v33, *((uint64_t *)&v33 + 1), v104, *((uint64_t *)&v104 + 1), v99, v105, v112, v42, *((uint64_t *)&v33 + 1), v36, 1u);
            goto LABEL_97;
          }
          v56 = *((_QWORD *)&v114 + 1);
          v57 = v115;
          __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
          v58 = v127;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8))(v109, v110, v56, v57);
          v127 = v58;
          if (v58)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
LABEL_118:
            sub_1BA6E8A78(v33, *((uint64_t *)&v33 + 1), v104, *((uint64_t *)&v104 + 1), v99, v105, v112, *((uint64_t *)&v112 + 1), v41, v36, 1u);
            goto LABEL_114;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
          v96 = 1;
          v95 = v36;
          goto LABEL_92;
        case 2:
          v97 = v36;
          v98 = *((_QWORD *)&v33 + 1);
          v99 = v34;
          v101 = v33;
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v43 = *((_QWORD *)&v114 + 1);
            v44 = v115;
            __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
            v45 = v127;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8))(v109, v110, v43, v44);
            v4 = v107;
            v41 = v102;
            v127 = v45;
            if (v45)
              goto LABEL_110;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
            v3 = v103;
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v4 = v107;
            v41 = v102;
            v3 = v103;
          }
          if (swift_dynamicCast())
          {
            v59 = *((_QWORD *)&v114 + 1);
            v60 = v115;
            __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
            v61 = v127;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8))(v109, v110, v59, v60);
            v127 = v61;
            if (v61)
              goto LABEL_110;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          v71 = *((_QWORD *)&v112 + 1);
          if (swift_dynamicCast())
          {
            v72 = *((_QWORD *)&v114 + 1);
            v73 = v115;
            __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
            v74 = v127;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 8))(v109, v110, v72, v73);
            v127 = v74;
            if (v74)
              goto LABEL_110;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
            v71 = *((_QWORD *)&v112 + 1);
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          if (!swift_dynamicCast())
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v91 = 2;
            goto LABEL_96;
          }
          v81 = *((_QWORD *)&v114 + 1);
          v82 = v115;
          __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
          v83 = v127;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 8))(v109, v110, v81, v82);
          v127 = v83;
          if (v83)
          {
LABEL_110:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
            v94 = 2;
            goto LABEL_113;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
          v84 = 2;
          goto LABEL_91;
        case 3:
          v97 = v36;
          v98 = *((_QWORD *)&v33 + 1);
          v99 = v34;
          v101 = v33;
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v46 = *((_QWORD *)&v114 + 1);
            v47 = v115;
            __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
            v48 = v127;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8))(v109, v110, v46, v47);
            v4 = v107;
            v41 = v102;
            v127 = v48;
            if (v48)
              goto LABEL_111;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
            v3 = v103;
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v4 = v107;
            v41 = v102;
            v3 = v103;
          }
          if (swift_dynamicCast())
          {
            v62 = *((_QWORD *)&v114 + 1);
            v63 = v115;
            __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
            v64 = v127;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8))(v109, v110, v62, v63);
            v127 = v64;
            if (v64)
              goto LABEL_111;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          v71 = *((_QWORD *)&v112 + 1);
          if (swift_dynamicCast())
          {
            v75 = *((_QWORD *)&v114 + 1);
            v76 = v115;
            __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
            v77 = v127;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 8))(v109, v110, v75, v76);
            v127 = v77;
            if (v77)
              goto LABEL_111;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
            v71 = *((_QWORD *)&v112 + 1);
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          if (!swift_dynamicCast())
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v91 = 3;
            goto LABEL_96;
          }
          v85 = *((_QWORD *)&v114 + 1);
          v86 = v115;
          __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
          v87 = v127;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 8))(v109, v110, v85, v86);
          v127 = v87;
          if (v87)
          {
LABEL_111:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
            v94 = 3;
            goto LABEL_113;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
          v84 = 3;
          goto LABEL_91;
        case 4:
          v100 = v34;
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v49 = *((_QWORD *)&v114 + 1);
            v50 = v115;
            __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
            v51 = v127;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8))(v109, v110, v49, v50);
            v52 = v35;
            v3 = v103;
            v127 = v51;
            if (v51)
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
              sub_1BA6E8A78(v33, *((uint64_t *)&v33 + 1), v104, *((uint64_t *)&v104 + 1), v100, v105, v112, *((uint64_t *)&v112 + 1), v35, v36, 4u);
              goto LABEL_105;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v52 = v35;
            v3 = v103;
          }
          if (!swift_dynamicCast())
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            sub_1BA6E8A78(v33, *((uint64_t *)&v33 + 1), v104, *((uint64_t *)&v104 + 1), v100, v105, v112, *((uint64_t *)&v112 + 1), *((uint64_t *)&v33 + 1), v36, 4u);
            v4 = v107;
LABEL_97:
            v7 = v106;
            break;
          }
          v65 = *((_QWORD *)&v114 + 1);
          v66 = v115;
          __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
          v67 = v127;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8))(v109, v110, v65, v66);
          v127 = v67;
          if (v67)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
            sub_1BA6E8A78(v33, *((uint64_t *)&v33 + 1), v104, *((uint64_t *)&v104 + 1), v100, v105, v112, *((uint64_t *)&v112 + 1), v52, v36, 4u);
            sub_1BAC69354((uint64_t)&v116);
            return swift_bridgeObjectRelease();
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
          sub_1BA6E8A78(v33, *((uint64_t *)&v33 + 1), v104, *((uint64_t *)&v104 + 1), v100, v105, v112, *((uint64_t *)&v112 + 1), v52, v36, 4u);
          v7 = v106;
          v4 = v107;
          break;
        case 5:
          v97 = v36;
          v98 = *((_QWORD *)&v33 + 1);
          v99 = v34;
          v101 = v33;
          sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v53 = *((_QWORD *)&v114 + 1);
            v54 = v115;
            __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
            v55 = v127;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8))(v109, v110, v53, v54);
            v4 = v107;
            v41 = v102;
            v127 = v55;
            if (v55)
              goto LABEL_112;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
            v3 = v103;
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v4 = v107;
            v41 = v102;
            v3 = v103;
          }
          if (swift_dynamicCast())
          {
            v68 = *((_QWORD *)&v114 + 1);
            v69 = v115;
            __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
            v70 = v127;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8))(v109, v110, v68, v69);
            v127 = v70;
            if (v70)
              goto LABEL_112;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          v71 = *((_QWORD *)&v112 + 1);
          if (swift_dynamicCast())
          {
            v78 = *((_QWORD *)&v114 + 1);
            v79 = v115;
            __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
            v80 = v127;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 8))(v109, v110, v78, v79);
            v127 = v80;
            if (v80)
              goto LABEL_112;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
            v71 = *((_QWORD *)&v112 + 1);
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
          }
          if (!swift_dynamicCast())
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
            sub_1BA65DB80((uint64_t)&v113, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
            v91 = 5;
LABEL_96:
            sub_1BA6E8A78(v101, v98, v104, *((uint64_t *)&v104 + 1), v99, v105, v112, v71, v41, v97, v91);
            goto LABEL_97;
          }
          v88 = *((_QWORD *)&v114 + 1);
          v89 = v115;
          __swift_project_boxed_opaque_existential_1(&v113, *((uint64_t *)&v114 + 1));
          v90 = v127;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 8))(v109, v110, v88, v89);
          v127 = v90;
          if (!v90)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
            v84 = 5;
LABEL_91:
            v96 = v84;
            v95 = v97;
LABEL_92:
            sub_1BA6E8A78(v101, v98, v104, *((uint64_t *)&v104 + 1), v99, v105, v112, *((uint64_t *)&v112 + 1), v41, v95, v96);
            goto LABEL_97;
          }
LABEL_112:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
          v94 = 5;
LABEL_113:
          sub_1BA6E8A78(v101, v98, v104, *((uint64_t *)&v104 + 1), v99, v105, v112, *((uint64_t *)&v112 + 1), v41, v97, v94);
LABEL_114:
          sub_1BAC69354((uint64_t)&v116);
          return swift_bridgeObjectRelease();
        default:
          sub_1BA6E8A78(v33, *((uint64_t *)&v33 + 1), v104, *((uint64_t *)&v104 + 1), v34, v105, v112, *((uint64_t *)&v112 + 1), v35, v36, 0xFFu);
LABEL_29:
          v4 = v107;
          v3 = v103;
          goto LABEL_97;
      }
    }
    v92 = *((_QWORD *)&v125 + 1);
    if ((~*((_QWORD *)&v125 + 1) & 0xF000000000000007) != 0)
    {
      *(_QWORD *)&v113 = *((_QWORD *)&v125 + 1);
      swift_retain();
      v93 = v127;
      FormatColor.bind(binder:context:)();
      sub_1BA5E800C(v92);
      sub_1BAC69354((uint64_t)&v116);
      v127 = v93;
      if (v93)
        return swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAC69354((uint64_t)&v116);
    }
    v8 = v108 + 1;
    if (v108 + 1 == v3)
      return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BABA3568(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned __int8 v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;
  unsigned __int8 v90;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t i;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  _OWORD v108[3];
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int16 v115;
  uint64_t v116;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return result;
  v5 = result;
  v6 = a3 + 32;
  swift_bridgeObjectRetain();
  v7 = 0;
  v101 = v5;
  v98 = v3;
  for (i = v6; ; v6 = i)
  {
    v8 = v6 + 152 * v7;
    v9 = *(_OWORD *)(v8 + 96);
    v10 = *(_OWORD *)(v8 + 128);
    v113 = *(_OWORD *)(v8 + 112);
    v114 = v10;
    v11 = *(_OWORD *)(v8 + 48);
    v108[2] = *(_OWORD *)(v8 + 32);
    v109 = v11;
    v12 = *(_OWORD *)(v8 + 80);
    v110 = *(_OWORD *)(v8 + 64);
    v115 = *(_WORD *)(v8 + 144);
    v111 = v12;
    v112 = v9;
    v13 = *(_OWORD *)(v8 + 16);
    v108[0] = *(_OWORD *)v8;
    v108[1] = v13;
    v14 = v13;
    v100 = v7;
    if ((_QWORD)v13)
    {
      v15 = *(_QWORD *)(v13 + 16);
      if (v15)
      {
        sub_1BA9F06B0((uint64_t)v108);
        swift_bridgeObjectRetain();
        v16 = v14 + 64;
        while (1)
        {
          v102 = v15;
          v17 = *(_QWORD *)(v16 - 16);
          *(_QWORD *)&v105 = *(_QWORD *)(v16 - 24);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          v18 = v116;
          FormatColor.bind(binder:context:)();
          if (v18)
            break;
          swift_release();
          *(_QWORD *)&v105 = v17;
          swift_retain();
          FormatFloat.bind(binder:context:)();
          v116 = 0;
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v16 += 40;
          --v15;
          if (v102 == 1)
          {
            swift_bridgeObjectRelease();
            v3 = v98;
            goto LABEL_10;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        sub_1BA9F0544((uint64_t)v108);
        result = swift_bridgeObjectRelease();
        v116 = v18;
        return result;
      }
    }
    sub_1BA9F06B0((uint64_t)v108);
LABEL_10:
    v19 = v114;
    if (v114 != 254)
      break;
LABEL_64:
    v70 = *((_QWORD *)&v114 + 1);
    if (*((_QWORD *)&v114 + 1))
    {
LABEL_88:
      v85 = *(_QWORD *)(v70 + 16);
      if (!v85)
        goto LABEL_95;
      swift_bridgeObjectRetain_n();
      v86 = (_BYTE *)(v70 + 40);
      while (1)
      {
        if ((*v86 & 1) == 0)
        {
          *(_QWORD *)&v105 = *((_QWORD *)v86 - 1);
          v87 = v105;
          swift_retain_n();
          v88 = v116;
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v87, 0);
          sub_1BA72C46C(v87, 0);
          v116 = v88;
          if (v88)
            break;
        }
        v86 += 16;
        if (!--v85)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_95;
        }
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_107;
    }
LABEL_95:
    v7 = v100 + 1;
    sub_1BA9F0544((uint64_t)v108);
    if (v100 + 1 == v3)
      return swift_bridgeObjectRelease();
  }
  v20 = v109;
  v21 = v110;
  v22 = v111;
  v23 = v113;
  v103 = *((_QWORD *)&v112 + 1);
  v104 = v112;
  v24 = *((_QWORD *)&v113 + 1);
  *(_QWORD *)&v105 = v111;
  swift_retain_n();
  v25 = v116;
  FormatColor.bind(binder:context:)();
  v116 = v25;
  if (v25)
  {
    sub_1BA6E8A78(v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v104, v103, v23, v24, v19);
    sub_1BA6E8A78(v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v104, v103, v23, v24, v19);
    goto LABEL_107;
  }
  v96 = v23;
  v97 = v24;
  sub_1BA6E8A78(v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v104, v103, v23, v24, v19);
  v26 = v103;
  switch(v19)
  {
    case 0:
      v91 = 0;
      goto LABEL_15;
    case 1:
      v92 = *((_QWORD *)&v20 + 1);
      v27 = v20;
      v93 = v21;
      v94 = v22;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v28 = *((_QWORD *)&v106 + 1);
        v29 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
        v30 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8))(v101, a2, v28, v29);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
        v31 = v96;
        v116 = v30;
        if (v30)
          goto LABEL_105;
        v26 = v103;
      }
      else
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v31 = v96;
      }
      if (!swift_dynamicCast())
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v62 = 1;
LABEL_62:
        sub_1BA6E8A78(v27, v92, v93, *((uint64_t *)&v21 + 1), v94, *((uint64_t *)&v22 + 1), v21, v26, v31, v97, v62);
LABEL_63:
        v3 = v98;
        goto LABEL_64;
      }
      v46 = *((_QWORD *)&v106 + 1);
      v47 = v107;
      __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
      v48 = v116;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8))(v101, a2, v46, v47);
      v116 = v48;
      if (!v48)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
        v49 = 1;
LABEL_47:
        sub_1BA6E8A78(v27, v92, v93, *((uint64_t *)&v21 + 1), v94, *((uint64_t *)&v22 + 1), v104, v103, v31, v97, v49);
        goto LABEL_63;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
LABEL_105:
      v90 = 1;
LABEL_106:
      sub_1BA6E8A78(v27, v92, v93, *((uint64_t *)&v21 + 1), v94, *((uint64_t *)&v22 + 1), v104, v103, v31, v97, v90);
LABEL_107:
      sub_1BA9F0544((uint64_t)v108);
      return swift_bridgeObjectRelease();
    case 2:
      v32 = v20;
      v95 = v22;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v33 = *((_QWORD *)&v106 + 1);
        v34 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
        v35 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8))(v101, a2, v33, v34);
        v36 = v96;
        v116 = v35;
        if (v35)
          goto LABEL_99;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      }
      else
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v36 = v96;
      }
      if (swift_dynamicCast())
      {
        v50 = *((_QWORD *)&v106 + 1);
        v51 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
        v52 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8))(v101, a2, v50, v51);
        v116 = v52;
        if (v52)
          goto LABEL_99;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      }
      else
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      v63 = v103;
      if (swift_dynamicCast())
      {
        v64 = *((_QWORD *)&v106 + 1);
        v65 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
        v66 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8))(v101, a2, v64, v65);
        v116 = v66;
        if (v66)
          goto LABEL_99;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
        v63 = v103;
      }
      else
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      if (!swift_dynamicCast())
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v84 = 2;
        goto LABEL_86;
      }
      v74 = *((_QWORD *)&v106 + 1);
      v75 = v107;
      __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
      v76 = v116;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 8))(v101, a2, v74, v75);
      v116 = v76;
      if (!v76)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
        v77 = 2;
        goto LABEL_82;
      }
LABEL_99:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      v89 = 2;
      goto LABEL_102;
    case 3:
      v32 = v20;
      v95 = v22;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v37 = *((_QWORD *)&v106 + 1);
        v38 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
        v39 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8))(v101, a2, v37, v38);
        v36 = v96;
        v116 = v39;
        if (v39)
          goto LABEL_100;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      }
      else
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v36 = v96;
      }
      if (swift_dynamicCast())
      {
        v53 = *((_QWORD *)&v106 + 1);
        v54 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
        v55 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8))(v101, a2, v53, v54);
        v116 = v55;
        if (v55)
          goto LABEL_100;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      }
      else
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      v63 = v103;
      if (swift_dynamicCast())
      {
        v67 = *((_QWORD *)&v106 + 1);
        v68 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
        v69 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8))(v101, a2, v67, v68);
        v116 = v69;
        if (v69)
          goto LABEL_100;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
        v63 = v103;
      }
      else
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      if (!swift_dynamicCast())
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v84 = 3;
        goto LABEL_86;
      }
      v78 = *((_QWORD *)&v106 + 1);
      v79 = v107;
      __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
      v80 = v116;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 8))(v101, a2, v78, v79);
      v116 = v80;
      if (!v80)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
        v77 = 3;
        goto LABEL_82;
      }
LABEL_100:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      v89 = 3;
      goto LABEL_102;
    case 4:
      v92 = *((_QWORD *)&v20 + 1);
      v27 = v20;
      v93 = v21;
      v94 = v22;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v40 = *((_QWORD *)&v106 + 1);
        v41 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
        v42 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8))(v101, a2, v40, v41);
        v31 = v96;
        v116 = v42;
        if (v42)
          goto LABEL_103;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
        v26 = v103;
      }
      else
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v31 = v96;
      }
      if (!swift_dynamicCast())
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v62 = 4;
        goto LABEL_62;
      }
      v56 = *((_QWORD *)&v106 + 1);
      v57 = v107;
      __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
      v58 = v116;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8))(v101, a2, v56, v57);
      v116 = v58;
      if (v58)
      {
LABEL_103:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
        v90 = 4;
        goto LABEL_106;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      v49 = 4;
      goto LABEL_47;
    case 5:
      v32 = v20;
      v95 = v22;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v43 = *((_QWORD *)&v106 + 1);
        v44 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
        v45 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8))(v101, a2, v43, v44);
        v36 = v96;
        v116 = v45;
        if (v45)
          goto LABEL_101;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      }
      else
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v36 = v96;
      }
      if (swift_dynamicCast())
      {
        v59 = *((_QWORD *)&v106 + 1);
        v60 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
        v61 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8))(v101, a2, v59, v60);
        v116 = v61;
        if (v61)
          goto LABEL_101;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      }
      else
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      v63 = v103;
      if (swift_dynamicCast())
      {
        v71 = *((_QWORD *)&v106 + 1);
        v72 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
        v73 = v116;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 8))(v101, a2, v71, v72);
        v116 = v73;
        if (v73)
          goto LABEL_101;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
        v63 = v103;
      }
      else
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      if (!swift_dynamicCast())
      {
        v107 = 0;
        v105 = 0u;
        v106 = 0u;
        sub_1BA65DB80((uint64_t)&v105, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v84 = 5;
LABEL_86:
        sub_1BA6E8A78(v32, v21, v21, *((uint64_t *)&v21 + 1), v95, *((uint64_t *)&v22 + 1), v104, v63, v36, v97, v84);
        goto LABEL_87;
      }
      v81 = *((_QWORD *)&v106 + 1);
      v82 = v107;
      __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
      v83 = v116;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 8))(v101, a2, v81, v82);
      v116 = v83;
      if (!v83)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
        v77 = 5;
LABEL_82:
        sub_1BA6E8A78(v32, v21, v21, *((uint64_t *)&v21 + 1), v95, *((uint64_t *)&v22 + 1), v104, v103, v36, v97, v77);
LABEL_87:
        v3 = v98;
        v70 = *((_QWORD *)&v114 + 1);
        if (!*((_QWORD *)&v114 + 1))
          goto LABEL_95;
        goto LABEL_88;
      }
LABEL_101:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
      v89 = 5;
LABEL_102:
      sub_1BA6E8A78(v32, v21, v21, *((uint64_t *)&v21 + 1), v95, *((uint64_t *)&v22 + 1), v104, v103, v36, v97, v89);
      goto LABEL_107;
    default:
      v91 = -1;
LABEL_15:
      sub_1BA6E8A78(v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v104, v103, v96, v24, v91);
      goto LABEL_87;
  }
}

void sub_1BABA45FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)();
  unint64_t *v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int EnumCaseMultiPayload;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  unint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  int v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  int v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t (*v270)();
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  unint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  int v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  _QWORD v370[2];
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  char *v374;
  char *v375;
  uint64_t v376;
  char *v377;
  char *v378;
  char *v379;
  char *v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  char *v397;
  char *v398;
  char *v399;
  char *v400;
  char *v401;
  char *v402;
  char *v403;
  uint64_t v404;
  char *v405;
  char *v406;
  char *v407;
  char *v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  unint64_t v421;
  uint64_t v422;
  uint64_t v423;
  unint64_t v424;
  uint64_t v425;
  char *v426;
  char *v427;
  uint64_t v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  unint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  unint64_t *v442;
  char *v443;
  uint64_t v444;
  char *v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;

  v4 = v3;
  v453 = a1;
  v454 = a2;
  v423 = type metadata accessor for FormatOption();
  v422 = *(_QWORD *)(v423 - 8);
  MEMORY[0x1E0C80A78](v423);
  v7 = (char *)v370 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v370 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v370 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v370 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v370 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v370 - v21;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v23);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v370 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v406 = (char *)v370 - v28;
  MEMORY[0x1E0C80A78](v29);
  v403 = (char *)v370 - v30;
  MEMORY[0x1E0C80A78](v31);
  v401 = (char *)v370 - v32;
  MEMORY[0x1E0C80A78](v33);
  v400 = (char *)v370 - v34;
  MEMORY[0x1E0C80A78](v35);
  v399 = (char *)v370 - v36;
  MEMORY[0x1E0C80A78](v37);
  v397 = (char *)v370 - v38;
  MEMORY[0x1E0C80A78](v39);
  v398 = (char *)v370 - v40;
  MEMORY[0x1E0C80A78](v41);
  v396 = (char *)v370 - v42;
  MEMORY[0x1E0C80A78](v43);
  v405 = (char *)v370 - v44;
  MEMORY[0x1E0C80A78](v45);
  v402 = (char *)v370 - v46;
  MEMORY[0x1E0C80A78](v47);
  v408 = (char *)v370 - v48;
  MEMORY[0x1E0C80A78](v49);
  v407 = (char *)v370 - v50;
  v451 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v451);
  v414 = (uint64_t)v370 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v52);
  v418 = (uint64_t)v370 - v53;
  MEMORY[0x1E0C80A78](v54);
  v437 = (uint64_t)v370 - v55;
  MEMORY[0x1E0C80A78](v56);
  v441 = (uint64_t)v370 - v57;
  MEMORY[0x1E0C80A78](v58);
  v434 = (uint64_t)v370 - v59;
  MEMORY[0x1E0C80A78](v60);
  v435 = (uint64_t)v370 - v61;
  MEMORY[0x1E0C80A78](v62);
  v413 = (uint64_t)v370 - v63;
  MEMORY[0x1E0C80A78](v64);
  v420 = (uint64_t)v370 - v65;
  MEMORY[0x1E0C80A78](v66);
  v412 = (uint64_t)v370 - v67;
  MEMORY[0x1E0C80A78](v68);
  v419 = (uint64_t)v370 - v69;
  MEMORY[0x1E0C80A78](v70);
  v436 = (uint64_t)v370 - v71;
  MEMORY[0x1E0C80A78](v72);
  v440 = (uint64_t)v370 - v73;
  MEMORY[0x1E0C80A78](v74);
  v449 = (uint64_t)v370 - v75;
  MEMORY[0x1E0C80A78](v76);
  v450 = (uint64_t)v370 - v77;
  v78 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1E0C80A78](v78);
  MEMORY[0x1E0C80A78](v79);
  MEMORY[0x1E0C80A78](v80);
  MEMORY[0x1E0C80A78](v81);
  v417 = (uint64_t)v370 - v82;
  MEMORY[0x1E0C80A78](v83);
  v85 = (char *)v370 - v84;
  MEMORY[0x1E0C80A78](v86);
  MEMORY[0x1E0C80A78]((char *)v370 - v87);
  MEMORY[0x1E0C80A78](v88);
  MEMORY[0x1E0C80A78](v89);
  v430 = (uint64_t)v370 - v90;
  MEMORY[0x1E0C80A78](v91);
  v439 = (uint64_t)v370 - v92;
  MEMORY[0x1E0C80A78](v93);
  MEMORY[0x1E0C80A78](v94);
  MEMORY[0x1E0C80A78](v95);
  MEMORY[0x1E0C80A78](v96);
  MEMORY[0x1E0C80A78](v97);
  MEMORY[0x1E0C80A78](v98);
  v443 = (char *)v370 - v99;
  MEMORY[0x1E0C80A78](v100);
  v425 = (uint64_t)v370 - v101;
  MEMORY[0x1E0C80A78](v102);
  v433 = (uint64_t)v370 - v103;
  MEMORY[0x1E0C80A78](v104);
  v429 = (char *)v370 - v105;
  MEMORY[0x1E0C80A78](v106);
  v445 = (char *)v370 - v107;
  MEMORY[0x1E0C80A78](v108);
  v410 = (uint64_t)v370 - v109;
  MEMORY[0x1E0C80A78](v110);
  v416 = (uint64_t)v370 - v111;
  MEMORY[0x1E0C80A78](v112);
  v426 = (char *)v370 - v113;
  MEMORY[0x1E0C80A78](v114);
  v427 = (char *)v370 - v115;
  MEMORY[0x1E0C80A78](v116);
  v404 = (uint64_t)v370 - v117;
  MEMORY[0x1E0C80A78](v118);
  v409 = (uint64_t)v370 - v119;
  MEMORY[0x1E0C80A78](v120);
  v415 = (uint64_t)v370 - v121;
  MEMORY[0x1E0C80A78](v122);
  v428 = (uint64_t)v370 - v123;
  MEMORY[0x1E0C80A78](v124);
  v438 = (uint64_t)v370 - v125;
  MEMORY[0x1E0C80A78](v126);
  v444 = (uint64_t)v370 - v127;
  MEMORY[0x1E0C80A78](v128);
  v448 = (uint64_t)v370 - v140;
  if (!*(_QWORD *)(a3 + 16))
    return;
  v455 = *(_QWORD *)(a3 + 16);
  v382 = v136;
  v390 = v135;
  v391 = v134;
  v383 = v133;
  v384 = v132;
  v393 = v131;
  v385 = v130;
  v386 = v129;
  v392 = v85;
  v394 = v139;
  v387 = v138;
  v388 = v137;
  v374 = v16;
  v375 = v13;
  v381 = v22;
  v379 = v19;
  v378 = v10;
  v380 = v7;
  v395 = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
  swift_bridgeObjectRetain();
  v141 = type metadata accessor for FormatMicaNodeArchive;
  v411 = a3;
  v142 = (unint64_t *)(a3 + 48);
  v377 = v26;
  v143 = v454;
  while (1)
  {
    v144 = *v142;
    v456 = *(v142 - 1);
    if (!(v144 >> 62))
    {
      v158 = swift_projectBox();
      v159 = v448;
      sub_1BA4C2DD8(v158, v448, (uint64_t (*)(_QWORD))v141);
      v160 = v159;
      v161 = v444;
      sub_1BA4C2DD8(v160, v444, (uint64_t (*)(_QWORD))v141);
      v162 = v161;
      v163 = v450;
      sub_1BA5193C4(v162, v450, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      sub_1BA4C2DD8(v163, v449, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
          __asm { BR              X9 }
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA4A2E80(v449, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      sub_1BA4A2E80(v450, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      sub_1BA4A2E80(v448, (uint64_t (*)(_QWORD))v141);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_5;
    }
    if (v144 >> 62 == 1)
      break;
    v165 = v144 & 0x3FFFFFFFFFFFFFFFLL;
    v167 = *(_QWORD *)(v144 + 16);
    v166 = *(_QWORD *)(v144 + 24);
    if (v167 >> 62)
    {
      v447 = v144 & 0x3FFFFFFFFFFFFFFFLL;
      if (v167 >> 62 != 1)
      {
        v432 = v167 & 0x3FFFFFFFFFFFFFFFLL;
        v198 = *(_QWORD *)(v167 + 16);
        v431 = *(_QWORD *)(v167 + 24);
        v424 = v198;
        if (v198 >> 62)
        {
          if (v198 >> 62 == 1)
          {
            v389 = v198 & 0x3FFFFFFFFFFFFFFFLL;
            v200 = *(_QWORD *)(v198 + 16);
            v199 = *(_QWORD *)(v198 + 24);
            v372 = v199;
            if (v200 >> 62)
            {
              v446 = v4;
              if (v200 >> 62 == 1)
              {
                v201 = *(_QWORD *)(v200 + 16);
                v371 = *(_QWORD *)(v200 + 24);
                v202 = v199 & 0x3FFFFFFFFFFFFFFFLL;
                v421 = v371 & 0x3FFFFFFFFFFFFFFFLL;
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                v373 = v202;
                swift_retain();
                v376 = v201 & 0x3FFFFFFFFFFFFFFFLL;
                swift_retain();
                v203 = v446;
                sub_1BABC277C(v453, v143);
                v4 = v203;
                if (v203)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_release();
                  swift_release_n();
                  swift_release();
                  goto LABEL_248;
                }
                swift_release();
                swift_release();
              }
              else
              {
                v285 = *(_QWORD *)(v200 + 16);
                v284 = *(_QWORD *)(v200 + 24);
                v286 = v199 & 0x3FFFFFFFFFFFFFFFLL;
                v376 = v285 & 0x3FFFFFFFFFFFFFFFLL;
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                v421 = v200 & 0x3FFFFFFFFFFFFFFFLL;
                swift_retain_n();
                v373 = v286;
                swift_retain();
                v287 = v285;
                v288 = v446;
                sub_1BABC3158(v453, v143, v287, v284, (void (*)(uint64_t, uint64_t))FormatMicaNodeContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA45FC);
                v4 = v288;
                if (v288)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_release();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  goto LABEL_248;
                }
                swift_release();
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              v421 = v167;
              v280 = v199;
              v281 = swift_projectBox();
              v282 = v387;
              sub_1BA4C2DD8(v281, v387, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
              v373 = v280 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              v376 = v200 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              v283 = v454;
              sub_1BAC67580();
              if (v4)
              {
                sub_1BA4A2E80(v282, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_release();
                goto LABEL_248;
              }
              sub_1BA4A2E80(v282, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
              v143 = v283;
            }
            swift_release();
            v457 = v372;
            swift_retain();
            v255 = v453;
            FormatMicaNodeContent.bind(binder:context:)(v453, v143);
            swift_release();
            swift_release_n();
            swift_release();
LABEL_166:
            v331 = v431;
          }
          else
          {
            v389 = v198 & 0x3FFFFFFFFFFFFFFFLL;
            v257 = *(_QWORD *)(v198 + 16);
            v256 = *(_QWORD *)(v198 + 24);
            v452 = v166;
            v376 = v256;
            if (v257 >> 62)
            {
              v446 = v4;
              if (v257 >> 62 == 1)
              {
                v421 = *(_QWORD *)(v257 + 24);
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain();
                v258 = v446;
                sub_1BABC277C(v453, v143);
                v4 = v258;
                if (v258)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  goto LABEL_245;
                }
                swift_release();
                swift_release();
                v166 = v452;
                v255 = v453;
              }
              else
              {
                v335 = *(_QWORD *)(v257 + 16);
                v334 = *(_QWORD *)(v257 + 24);
                v373 = v335 & 0x3FFFFFFFFFFFFFFFLL;
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                v336 = v335;
                v337 = v446;
                sub_1BABC3158(v453, v143, v336, v334, (void (*)(uint64_t, uint64_t))FormatMicaNodeContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA45FC);
                v4 = v337;
                if (v337)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
LABEL_247:
                  swift_release_n();
                  swift_bridgeObjectRelease();
LABEL_248:
                  swift_release();
LABEL_249:
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                  return;
                }
                swift_release();
                swift_bridgeObjectRelease();
                v166 = v452;
                v255 = v453;
              }
            }
            else
            {
              v421 = v167;
              v332 = swift_projectBox();
              v333 = v388;
              sub_1BA4C2DD8(v332, v388, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
              v373 = v257 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v166 = v452;
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BAC67580();
              if (v4)
              {
                sub_1BA4A2E80(v333, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                goto LABEL_245;
              }
              sub_1BA4A2E80(v333, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
              v255 = v453;
            }
            swift_release();
            v338 = v376;
            swift_bridgeObjectRetain();
            sub_1BABA45FC(v255, v143, v338);
            v331 = v431;
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
          }
          swift_bridgeObjectRetain();
          sub_1BABA45FC(v255, v143, v331);
          if (v4)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_223;
          }
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
          v247 = v255;
          v141 = type metadata accessor for FormatMicaNodeArchive;
          goto LABEL_174;
        }
        v248 = swift_projectBox();
        v249 = v417;
        sub_1BA4C2DD8(v248, v417, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
        v250 = v249;
        v251 = v394;
        sub_1BA4C2DD8(v250, v394, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
        v252 = v251;
        v253 = v418;
        sub_1BA5193C4(v252, v418, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        sub_1BA4C2DD8(v253, v414, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v254 = swift_getEnumCaseMultiPayload();
        v255 = v453;
        if (v254)
        {
          if (v254 != 1)
            __asm { BR              X9 }
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA4A2E80(v414, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        sub_1BA4A2E80(v418, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        sub_1BA4A2E80(v417, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
        swift_release();
        goto LABEL_166;
      }
      v452 = v166;
      v432 = v167 & 0x3FFFFFFFFFFFFFFFLL;
      v168 = *(_QWORD *)(v167 + 16);
      v169 = *(_QWORD *)(v167 + 24);
      v431 = v168;
      if (v168 >> 62)
      {
        if (v168 >> 62 == 1)
        {
          v171 = *(_QWORD *)(v168 + 16);
          v170 = *(_QWORD *)(v168 + 24);
          v424 = v168 & 0x3FFFFFFFFFFFFFFFLL;
          v376 = v171;
          v373 = v170;
          if (v171 >> 62)
          {
            if (v171 >> 62 == 1)
            {
              v421 = v167;
              v442 = v142;
              v371 = v171 & 0x3FFFFFFFFFFFFFFFLL;
              v446 = v4;
              v172 = *(_QWORD *)(v171 + 16);
              v372 = *(_QWORD *)(v171 + 24) & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              v173 = v454;
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain();
              swift_retain_n();
              swift_retain();
              v389 = v172 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              v143 = v173;
              v174 = v446;
              sub_1BABC277C(v453, v173);
              v4 = v174;
              if (v174)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_release_n();
                swift_release();
                swift_release_n();
                swift_release();
                goto LABEL_248;
              }
              swift_release();
              swift_release();
              v142 = v442;
              v167 = v421;
            }
            else
            {
              v272 = *(_QWORD *)(v171 + 24);
              v421 = *(_QWORD *)(v171 + 16);
              v273 = v170 & 0x3FFFFFFFFFFFFFFFLL;
              v389 = v421 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v372 = v169 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              swift_retain_n();
              v446 = v273;
              swift_retain();
              v143 = v454;
              sub_1BABC3158(v453, v454, v421, v272, (void (*)(uint64_t, uint64_t))FormatMicaNodeContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA45FC);
              if (v4)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_release_n();
                swift_release();
                swift_release_n();
                swift_bridgeObjectRelease();
                goto LABEL_248;
              }
              swift_release();
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            v269 = swift_projectBox();
            v270 = v141;
            v271 = v385;
            sub_1BA4C2DD8(v269, v385, (uint64_t (*)(_QWORD))v270);
            swift_retain();
            v389 = v171 & 0x3FFFFFFFFFFFFFFFLL;
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain();
            sub_1BAC67580();
            if (v4)
            {
              sub_1BA4A2E80(v271, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release();
              swift_release_n();
              swift_release();
              goto LABEL_245;
            }
            sub_1BA4A2E80(v271, (uint64_t (*)(_QWORD))v270);
            v141 = v270;
            v143 = v454;
          }
          swift_release();
          v457 = v373;
          swift_retain();
          FormatMicaNodeContent.bind(binder:context:)(v453, v143);
          swift_release();
          swift_release_n();
        }
        else
        {
          v421 = v169;
          v389 = v168 & 0x3FFFFFFFFFFFFFFFLL;
          v219 = *(_QWORD *)(v168 + 16);
          v424 = *(_QWORD *)(v168 + 24);
          v376 = v219;
          if (v219 >> 62)
          {
            v446 = v4;
            if (v219 >> 62 == 1)
            {
              v372 = *(_QWORD *)(v219 + 16);
              v371 = *(_QWORD *)(v219 + 24);
              v169 = v421;
              v220 = v421 & 0x3FFFFFFFFFFFFFFFLL;
              v373 = v371 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v370[1] = v220;
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain();
              v221 = v446;
              sub_1BABC277C(v453, v143);
              v4 = v221;
              if (v221)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
LABEL_245:
                swift_release();
                goto LABEL_248;
              }
              swift_release();
              swift_release();
            }
            else
            {
              v308 = *(_QWORD *)(v219 + 16);
              v307 = *(_QWORD *)(v219 + 24);
              v169 = v421;
              v309 = v421 & 0x3FFFFFFFFFFFFFFFLL;
              v373 = v308 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v372 = v309;
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              v310 = v308;
              v311 = v446;
              sub_1BABC3158(v453, v143, v310, v307, (void (*)(uint64_t, uint64_t))FormatMicaNodeContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA45FC);
              v4 = v311;
              if (v311)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_release_n();
                swift_bridgeObjectRelease();
                goto LABEL_247;
              }
              swift_release();
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            v305 = swift_projectBox();
            v306 = v386;
            sub_1BA4C2DD8(v305, v386, (uint64_t (*)(_QWORD))v141);
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain();
            sub_1BAC67580();
            if (v4)
            {
              sub_1BA4A2E80(v306, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release();
              swift_release_n();
              swift_bridgeObjectRelease();
              goto LABEL_245;
            }
            sub_1BA4A2E80(v306, (uint64_t (*)(_QWORD))v141);
            v169 = v421;
          }
          swift_release();
          v312 = v424;
          swift_bridgeObjectRetain();
          sub_1BABA45FC(v453, v143, v312);
          swift_release();
          swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        v217 = swift_projectBox();
        v218 = v393;
        sub_1BA4C2DD8(v217, v393, (uint64_t (*)(_QWORD))v141);
        swift_retain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BAC67580();
        if (v4)
        {
          sub_1BA4A2E80(v218, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_release();
          swift_release_n();
          return;
        }
        sub_1BA4A2E80(v218, (uint64_t (*)(_QWORD))v141);
      }
      swift_release();
      if (v169 >> 62)
      {
        v421 = v167;
        if (v169 >> 62 == 1)
        {
          v442 = v142;
          v313 = v143;
          v314 = *(_QWORD *)(v169 + 24);
          v457 = *(_QWORD *)(v169 + 16);
          swift_retain();
          swift_retain_n();
          swift_retain();
          v315 = v453;
          FormatMicaNodeContent.bind(binder:context:)(v453, v313);
          swift_release();
          v457 = v314;
          swift_retain();
          FormatMicaNodeContent.bind(binder:context:)(v315, v313);
          v247 = v315;
          swift_release();
          swift_release_n();
          swift_release();
          swift_release_n();
          swift_release();
          v143 = v454;
          v141 = type metadata accessor for FormatMicaNodeArchive;
          v142 = v442;
          v166 = v452;
        }
        else
        {
          v318 = *(_QWORD *)(v169 + 24);
          v457 = *(_QWORD *)(v169 + 16);
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain();
          v319 = v453;
          FormatMicaNodeContent.bind(binder:context:)(v453, v143);
          swift_release();
          swift_bridgeObjectRetain();
          v247 = v319;
          sub_1BABA45FC(v319, v143, v318);
          v166 = v452;
          swift_release();
          swift_release_n();
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
        }
        goto LABEL_174;
      }
      v316 = swift_projectBox();
      v317 = (uint64_t)v392;
      sub_1BA4C2DD8(v316, (uint64_t)v392, (uint64_t (*)(_QWORD))v141);
      swift_retain();
      sub_1BAC67580();
      sub_1BA4A2E80(v317, (uint64_t (*)(_QWORD))v141);
      swift_release();
      swift_release_n();
      swift_release();
      v247 = v453;
    }
    else
    {
      v191 = swift_projectBox();
      v192 = v439;
      sub_1BA4C2DD8(v191, v439, (uint64_t (*)(_QWORD))v141);
      v193 = v192;
      v194 = v430;
      sub_1BA4C2DD8(v193, v430, (uint64_t (*)(_QWORD))v141);
      v195 = v194;
      v196 = v441;
      sub_1BA5193C4(v195, v441, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      sub_1BA4C2DD8(v196, v437, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v197 = swift_getEnumCaseMultiPayload();
      v452 = v166;
      if (v197)
      {
        if (v197 != 1)
        {
          v447 = v165;
          __asm { BR              X9 }
        }
        v446 = *(_QWORD *)(v437 + 8);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA4A2E80(v437, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      sub_1BA4A2E80(v441, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      sub_1BA4A2E80(v439, (uint64_t (*)(_QWORD))v141);
      swift_release();
      v247 = v453;
    }
    v166 = v452;
LABEL_174:
    swift_bridgeObjectRetain();
    sub_1BABA45FC(v247, v143, v166);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();
LABEL_223:
      swift_release();
      return;
    }
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease_n();
LABEL_5:
    swift_release();
    v142 += 3;
    if (!--v455)
      goto LABEL_222;
  }
  v145 = *(_QWORD *)(v144 + 16);
  v146 = *(_QWORD *)(v144 + 24);
  v147 = (uint64_t)v445;
  v452 = v144 & 0x3FFFFFFFFFFFFFFFLL;
  v447 = v145;
  if (v145 >> 62)
  {
    if (v145 >> 62 == 1)
    {
      v431 = v145 & 0x3FFFFFFFFFFFFFFFLL;
      v149 = *(_QWORD *)(v145 + 16);
      v148 = *(_QWORD *)(v145 + 24);
      v421 = v149;
      v424 = v148;
      if (v149 >> 62)
      {
        v446 = v4;
        if (v149 >> 62 == 1)
        {
          v442 = v142;
          v150 = v453;
          v151 = *(_QWORD *)(v149 + 24);
          v457 = *(_QWORD *)(v149 + 16);
          v432 = v146;
          v152 = v148 & 0x3FFFFFFFFFFFFFFFLL;
          swift_retain();
          swift_retain_n();
          v153 = v454;
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          v376 = v146 & 0x3FFFFFFFFFFFFFFFLL;
          swift_retain();
          swift_retain_n();
          v389 = v152;
          swift_retain();
          v154 = v446;
          FormatMicaNodeContent.bind(binder:context:)(v150, v153);
          v4 = v154;
          if (v154)
          {
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_release();
            swift_release_n();
            swift_release();
            swift_release_n();
            swift_release();
            swift_release_n();
            goto LABEL_222;
          }
          swift_release();
          v457 = v151;
          swift_retain();
          FormatMicaNodeContent.bind(binder:context:)(v150, v153);
          swift_release();
          swift_release();
          swift_release_n();
          v155 = v453;
          v156 = (uint64_t)v426;
          v157 = (uint64_t)v427;
          v142 = v442;
          v146 = v432;
        }
        else
        {
          v211 = *(_QWORD *)(v149 + 16);
          v389 = *(_QWORD *)(v149 + 24);
          v376 = v149 & 0x3FFFFFFFFFFFFFFFLL;
          if (v211 >> 62)
          {
            if (v211 >> 62 == 1)
            {
              v212 = *(_QWORD *)(v211 + 24);
              v457 = *(_QWORD *)(v211 + 16);
              v432 = v146;
              v213 = v148 & 0x3FFFFFFFFFFFFFFFLL;
              v373 = v212 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              v371 = v146 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              swift_retain_n();
              v372 = v213;
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              v214 = v453;
              v215 = v454;
              v216 = v446;
              FormatMicaNodeContent.bind(binder:context:)(v453, v454);
              if (v216)
              {
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_release_n();
                swift_release();
                swift_release();
                swift_release_n();
                swift_release();
LABEL_250:
                swift_release_n();
                goto LABEL_249;
              }
              swift_release();
              v457 = v212;
              swift_retain();
              FormatMicaNodeContent.bind(binder:context:)(v214, v215);
              swift_release();
              swift_release();
              swift_release_n();
              v146 = v432;
            }
            else
            {
              v292 = *(_QWORD *)(v211 + 16);
              v293 = *(_QWORD *)(v211 + 24);
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_retain();
              swift_retain_n();
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              v294 = v292;
              v295 = v446;
              sub_1BABC3158(v453, v454, v294, v293, (void (*)(uint64_t, uint64_t))FormatMicaNodeContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA45FC);
              if (v295)
              {
                swift_release();
                swift_release();
                swift_release_n();
                swift_release();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_249;
              }
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
            }
          }
          else
          {
            v289 = swift_projectBox();
            v290 = v404;
            sub_1BA4C2DD8(v289, v404, (uint64_t (*)(_QWORD))v141);
            v373 = v211 & 0x3FFFFFFFFFFFFFFFLL;
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_retain();
            swift_retain_n();
            swift_retain();
            v291 = v446;
            sub_1BAC67580();
            if (v291)
            {
              sub_1BA4A2E80(v290, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
              swift_release();
              swift_release();
              swift_release_n();
              swift_release();
              swift_release_n();
              swift_bridgeObjectRelease();
              goto LABEL_250;
            }
            sub_1BA4A2E80(v290, (uint64_t (*)(_QWORD))v141);
            swift_release();
          }
          v296 = v389;
          swift_bridgeObjectRetain();
          sub_1BABA45FC(v453, v454, v296);
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
          v4 = 0;
          v155 = v453;
          v156 = (uint64_t)v426;
          v157 = (uint64_t)v427;
        }
      }
      else
      {
        v204 = swift_projectBox();
        v205 = v415;
        sub_1BA4C2DD8(v204, v415, (uint64_t (*)(_QWORD))v141);
        v206 = v205;
        v207 = v409;
        sub_1BA4C2DD8(v206, v409, (uint64_t (*)(_QWORD))v141);
        v208 = v207;
        v209 = v419;
        sub_1BA5193C4(v208, v419, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        sub_1BA4C2DD8(v209, v412, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v210 = swift_getEnumCaseMultiPayload();
        v157 = (uint64_t)v427;
        if (v210)
        {
          if (v210 != 1)
            __asm { BR              X9 }
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_retain();
          sub_1BA4A2E80(v412, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        sub_1BA4A2E80(v419, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        sub_1BA4A2E80(v415, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
        swift_release();
        v156 = (uint64_t)v426;
        v155 = v453;
      }
      if (v424 >> 62)
      {
        if (v424 >> 62 == 1)
        {
          v432 = v146;
          v297 = v155;
          v298 = *(_QWORD *)(v424 + 24);
          v457 = *(_QWORD *)(v424 + 16);
          swift_retain();
          swift_retain_n();
          swift_retain();
          v299 = v454;
          FormatMicaNodeContent.bind(binder:context:)(v297, v454);
          if (v4)
          {
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_release_n();
            swift_release_n();
            swift_release();
            swift_release_n();
            swift_release();
            goto LABEL_221;
          }
          swift_release();
          v457 = v298;
          swift_retain();
          FormatMicaNodeContent.bind(binder:context:)(v297, v299);
          swift_release();
          swift_release_n();
          swift_release();
          swift_release_n();
          swift_release();
          v182 = (uint64_t)v443;
          v141 = type metadata accessor for FormatMicaNodeArchive;
          v146 = v432;
          v222 = v432 >> 62;
          if (!(v432 >> 62))
          {
LABEL_157:
            v324 = swift_projectBox();
            v325 = v433;
            sub_1BA4C2DD8(v324, v433, (uint64_t (*)(_QWORD))v141);
            v326 = v325;
            v327 = v425;
            sub_1BA4C2DD8(v326, v425, (uint64_t (*)(_QWORD))v141);
            v328 = v327;
            v329 = v435;
            sub_1BA5193C4(v328, v435, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
            sub_1BA4C2DD8(v329, v434, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
            v330 = swift_getEnumCaseMultiPayload();
            if (v330)
            {
              if (v330 != 1)
                __asm { BR              X9 }
              swift_retain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_retain();
              sub_1BA4A2E80(v434, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
            }
            sub_1BA4A2E80(v435, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
            sub_1BA4A2E80(v433, (uint64_t (*)(_QWORD))v141);
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_release_n();
LABEL_200:
            v143 = v454;
            goto LABEL_5;
          }
        }
        else
        {
          v442 = v142;
          v301 = v4;
          v303 = *(_QWORD *)(v424 + 16);
          v302 = *(_QWORD *)(v424 + 24);
          if (v303 >> 62)
          {
            if (v303 >> 62 == 1)
            {
              v432 = v146;
              swift_retain();
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain();
              sub_1BABC277C(v453, v454);
              if (v301)
              {
                swift_release();
                swift_release_n();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                goto LABEL_254;
              }
              swift_release();
              swift_release();
              v304 = v454;
              v146 = v432;
            }
            else
            {
              v341 = *(_QWORD *)(v303 + 16);
              v340 = *(_QWORD *)(v303 + 24);
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BABC3158(v453, v454, v341, v340, (void (*)(uint64_t, uint64_t))FormatMicaNodeContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA45FC);
              if (v301)
              {
                swift_release();
                swift_release_n();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
LABEL_254:
                swift_release();
                swift_release();
LABEL_255:
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                return;
              }
              swift_release();
              swift_bridgeObjectRelease();
              v304 = v454;
            }
          }
          else
          {
            v339 = swift_projectBox();
            sub_1BA4C2DD8(v339, v156, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain();
            sub_1BAC67580();
            if (v301)
            {
              sub_1BA4A2E80(v156, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
              swift_release();
              swift_release_n();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_254;
            }
            sub_1BA4A2E80(v156, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
            v304 = v454;
          }
          swift_release();
          swift_bridgeObjectRetain();
          sub_1BABA45FC(v453, v304, v302);
          v142 = v442;
          v182 = (uint64_t)v443;
          swift_release();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();
          v4 = 0;
          v141 = type metadata accessor for FormatMicaNodeArchive;
          v222 = v146 >> 62;
          if (!(v146 >> 62))
            goto LABEL_157;
        }
      }
      else
      {
        v300 = swift_projectBox();
        v141 = type metadata accessor for FormatMicaNodeArchive;
        sub_1BA4C2DD8(v300, v157, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
        swift_retain();
        sub_1BAC67580();
        if (v4)
        {
          sub_1BA4A2E80(v157, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_release();
          goto LABEL_223;
        }
        sub_1BA4A2E80(v157, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
        swift_release();
        swift_release_n();
        swift_release();
        v182 = (uint64_t)v443;
        v222 = v146 >> 62;
        if (!(v146 >> 62))
          goto LABEL_157;
      }
    }
    else
    {
      v431 = v145 & 0x3FFFFFFFFFFFFFFFLL;
      v183 = *(_QWORD *)(v145 + 16);
      v184 = *(_QWORD *)(v145 + 24);
      v185 = (uint64_t)v429;
      if (v183 >> 62)
      {
        v432 = v146;
        v424 = v184;
        if (v183 >> 62 == 1)
        {
          v421 = v183 & 0x3FFFFFFFFFFFFFFFLL;
          v187 = *(_QWORD *)(v183 + 16);
          v186 = *(_QWORD *)(v183 + 24);
          if (v187 >> 62)
          {
            v446 = v4;
            if (v187 >> 62 == 1)
            {
              v188 = *(_QWORD *)(v187 + 16);
              v376 = *(_QWORD *)(v187 + 24);
              v189 = v186;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain();
              v389 = v188 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              v190 = v446;
              sub_1BABC277C(v453, v454);
              if (v190)
              {
                swift_release();
                swift_release();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_release_n();
                swift_release();
                goto LABEL_255;
              }
              swift_release();
              swift_release();
            }
            else
            {
              v278 = *(_QWORD *)(v187 + 16);
              v277 = *(_QWORD *)(v187 + 24);
              v189 = v186;
              v389 = v278 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain();
              v279 = v446;
              sub_1BABC3158(v453, v454, v278, v277, (void (*)(uint64_t, uint64_t))FormatMicaNodeContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA45FC);
              if (v279)
              {
                swift_release();
                swift_release();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_release_n();
                swift_bridgeObjectRelease();
                goto LABEL_255;
              }
              swift_release();
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            v442 = v142;
            v274 = v186;
            v275 = swift_projectBox();
            sub_1BA4C2DD8(v275, v147, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
            v276 = v4;
            v189 = v274;
            swift_retain();
            v389 = v187 & 0x3FFFFFFFFFFFFFFFLL;
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_retain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BAC67580();
            if (v276)
            {
              sub_1BA4A2E80(v147, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
              swift_release();
              swift_release();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release();
              swift_release();
              goto LABEL_255;
            }
            sub_1BA4A2E80(v147, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
            v142 = v442;
          }
          swift_release();
          v457 = v189;
          swift_retain();
          FormatMicaNodeContent.bind(binder:context:)(v453, v454);
          v4 = 0;
          v184 = v424;
          swift_release();
          swift_release_n();
          swift_release();
          v182 = (uint64_t)v443;
        }
        else
        {
          v421 = v183 & 0x3FFFFFFFFFFFFFFFLL;
          v244 = *(_QWORD *)(v183 + 16);
          v243 = *(_QWORD *)(v183 + 24);
          if (v244 >> 62)
          {
            v446 = v4;
            if (v244 >> 62 == 1)
            {
              v389 = *(_QWORD *)(v244 + 24);
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v245 = v243;
              swift_bridgeObjectRetain();
              swift_retain();
              v246 = v446;
              sub_1BABC277C(v453, v454);
              if (v246)
              {
                swift_release();
                swift_release();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
LABEL_242:
                swift_release();
                goto LABEL_255;
              }
              swift_release();
              swift_release();
            }
            else
            {
              v322 = *(_QWORD *)(v244 + 16);
              v321 = *(_QWORD *)(v244 + 24);
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v245 = v243;
              swift_bridgeObjectRetain();
              v323 = v446;
              sub_1BABC3158(v453, v454, v322, v321, (void (*)(uint64_t, uint64_t))FormatMicaNodeContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA45FC);
              if (v323)
              {
                swift_release();
                swift_release();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                goto LABEL_255;
              }
              swift_release();
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            v442 = v142;
            v320 = swift_projectBox();
            sub_1BA4C2DD8(v320, v185, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
            swift_retain_n();
            v245 = v243;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_retain_n();
            swift_retain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BAC67580();
            if (v4)
            {
              sub_1BA4A2E80(v185, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
              swift_release();
              swift_release();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              goto LABEL_242;
            }
            sub_1BA4A2E80(v185, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
            v142 = v442;
          }
          swift_release();
          swift_bridgeObjectRetain();
          sub_1BABA45FC(v453, v454, v245);
          v4 = 0;
          v182 = (uint64_t)v443;
          v184 = v424;
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
        }
        v146 = v432;
      }
      else
      {
        v236 = swift_projectBox();
        v237 = v416;
        sub_1BA4C2DD8(v236, v416, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
        v238 = v237;
        v239 = v410;
        sub_1BA4C2DD8(v238, v410, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
        v240 = v239;
        v241 = v420;
        sub_1BA5193C4(v240, v420, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        sub_1BA4C2DD8(v241, v413, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v242 = swift_getEnumCaseMultiPayload();
        if (v242)
        {
          if (v242 != 1)
            __asm { BR              X9 }
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_retain_n();
          swift_retain();
          sub_1BA4A2E80(v413, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        sub_1BA4A2E80(v420, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        sub_1BA4A2E80(v416, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
        swift_release();
        v182 = (uint64_t)v443;
      }
      swift_bridgeObjectRetain();
      sub_1BABA45FC(v453, v454, v184);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_223;
      }
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release();
      v141 = type metadata accessor for FormatMicaNodeArchive;
      v222 = v146 >> 62;
      if (!(v146 >> 62))
        goto LABEL_157;
    }
  }
  else
  {
    v175 = swift_projectBox();
    v176 = v438;
    sub_1BA4C2DD8(v175, v438, (uint64_t (*)(_QWORD))v141);
    v177 = v176;
    v178 = v428;
    sub_1BA4C2DD8(v177, v428, (uint64_t (*)(_QWORD))v141);
    v179 = v178;
    v180 = v440;
    sub_1BA5193C4(v179, v440, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    sub_1BA4C2DD8(v180, v436, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v181 = swift_getEnumCaseMultiPayload();
    if (v181)
    {
      if (v181 != 1)
        __asm { BR              X9 }
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v182 = (uint64_t)v443;
    }
    else
    {
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA4A2E80(v436, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v182 = (uint64_t)v443;
    }
    sub_1BA4A2E80(v440, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v438, (uint64_t (*)(_QWORD))v141);
    swift_release();
    v222 = v146 >> 62;
    if (!(v146 >> 62))
      goto LABEL_157;
  }
  if ((_DWORD)v222 == 1)
  {
    v431 = v146 & 0x3FFFFFFFFFFFFFFFLL;
    v224 = *(_QWORD *)(v146 + 16);
    v223 = *(_QWORD *)(v146 + 24);
    v432 = v223;
    if (v224 >> 62)
    {
      v442 = v142;
      if (v224 >> 62 == 1)
      {
        v225 = *(_QWORD *)(v224 + 24);
        v457 = *(_QWORD *)(v224 + 16);
        v226 = v223 & 0x3FFFFFFFFFFFFFFFLL;
        swift_retain();
        swift_retain_n();
        swift_retain();
        swift_retain_n();
        v446 = v226;
        swift_retain();
        v227 = v453;
        v228 = v454;
        FormatMicaNodeContent.bind(binder:context:)(v453, v454);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_release_n();
          swift_release();
          swift_release_n();
          swift_release();
          swift_release_n();
          goto LABEL_221;
        }
        swift_release();
        v457 = v225;
        swift_retain();
        FormatMicaNodeContent.bind(binder:context:)(v227, v228);
        swift_release();
        swift_release();
        swift_release_n();
        v141 = type metadata accessor for FormatMicaNodeArchive;
        v142 = v442;
      }
      else
      {
        v260 = *(_QWORD *)(v224 + 16);
        v261 = *(_QWORD *)(v224 + 24);
        v424 = v224;
        if (v260 >> 62)
        {
          v446 = v4;
          if (v260 >> 62 == 1)
          {
            swift_retain();
            swift_retain();
            swift_retain_n();
            swift_retain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain();
            v262 = v446;
            sub_1BABC277C(v453, v454);
            if (v262)
            {
              swift_release();
              swift_release_n();
              swift_release();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release();
              goto LABEL_265;
            }
            swift_release();
            swift_release();
          }
          else
          {
            v355 = *(_QWORD *)(v260 + 16);
            v354 = *(_QWORD *)(v260 + 24);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain_n();
            swift_retain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            v356 = v355;
            v357 = v446;
            sub_1BABC3158(v453, v454, v356, v354, (void (*)(uint64_t, uint64_t))FormatMicaNodeContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA45FC);
            if (v357)
            {
              swift_release();
              swift_release_n();
              swift_release();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              goto LABEL_265;
            }
            swift_release();
            swift_bridgeObjectRelease();
          }
          v353 = v454;
          v141 = type metadata accessor for FormatMicaNodeArchive;
        }
        else
        {
          v350 = swift_projectBox();
          v351 = v382;
          sub_1BA4C2DD8(v350, v382, (uint64_t (*)(_QWORD))v141);
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain_n();
          swift_retain();
          v352 = v454;
          sub_1BAC67580();
          if (v4)
          {
            sub_1BA4A2E80(v351, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
            swift_release();
            swift_release_n();
            swift_release();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_265;
          }
          sub_1BA4A2E80(v351, (uint64_t (*)(_QWORD))v141);
          v353 = v352;
        }
        swift_release();
        swift_bridgeObjectRetain();
        sub_1BABA45FC(v453, v353, v261);
        v4 = 0;
        v142 = v442;
        v224 = v424;
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_release();
      }
    }
    else
    {
      v259 = swift_projectBox();
      sub_1BA4C2DD8(v259, v182, (uint64_t (*)(_QWORD))v141);
      swift_retain();
      swift_retain_n();
      swift_retain();
      sub_1BAC67580();
      if (v4)
      {
        sub_1BA4A2E80(v182, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        swift_release();
LABEL_219:
        swift_release_n();
        goto LABEL_223;
      }
      sub_1BA4A2E80(v182, (uint64_t (*)(_QWORD))v141);
      swift_release();
    }
    if (v432 >> 62)
    {
      if (v432 >> 62 == 1)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1BABC277C(v453, v454);
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release();
        swift_release();
      }
      else
      {
        v424 = v224;
        v361 = v453;
        v360 = v454;
        v362 = *(_QWORD *)(v432 + 24);
        v457 = *(_QWORD *)(v432 + 16);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        FormatMicaNodeContent.bind(binder:context:)(v361, v360);
        swift_release();
        swift_bridgeObjectRetain();
        sub_1BABA45FC(v361, v360, v362);
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release();
        swift_bridgeObjectRelease_n();
      }
      swift_release();
      v141 = type metadata accessor for FormatMicaNodeArchive;
      v143 = v454;
      goto LABEL_5;
    }
    v358 = swift_projectBox();
    v359 = v390;
    sub_1BA4C2DD8(v358, v390, (uint64_t (*)(_QWORD))v141);
    swift_retain();
    sub_1BAC67580();
    sub_1BA4A2E80(v359, (uint64_t (*)(_QWORD))v141);
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release();
    goto LABEL_200;
  }
  v431 = v146 & 0x3FFFFFFFFFFFFFFFLL;
  v229 = *(_QWORD *)(v146 + 16);
  v230 = *(_QWORD *)(v146 + 24);
  if (!(v229 >> 62))
  {
    v263 = swift_projectBox();
    v264 = v391;
    sub_1BA4C2DD8(v263, v391, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BAC67580();
    if (v4)
    {
      sub_1BA4A2E80(v264, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      goto LABEL_219;
    }
    sub_1BA4A2E80(v264, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
    swift_release();
    v265 = v453;
LABEL_208:
    swift_bridgeObjectRetain();
    v143 = v454;
    sub_1BABA45FC(v265, v454, v230);
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    v141 = type metadata accessor for FormatMicaNodeArchive;
    goto LABEL_5;
  }
  if (v229 >> 62 == 1)
  {
    v231 = *(_QWORD *)(v229 + 16);
    v232 = *(_QWORD *)(v229 + 24);
    v424 = v230;
    v432 = v229 & 0x3FFFFFFFFFFFFFFFLL;
    if (v231 >> 62)
    {
      v446 = v4;
      if (v231 >> 62 == 1)
      {
        v442 = v142;
        v421 = *(_QWORD *)(v231 + 24);
        v233 = v232;
        swift_retain();
        swift_retain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_retain();
        swift_retain();
        v234 = v446;
        sub_1BABC277C(v453, v454);
        v446 = v234;
        if (v234)
        {
          swift_release();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_release();
          swift_release_n();
          swift_release();
          goto LABEL_265;
        }
        swift_release();
        swift_release();
        v235 = v454;
        v142 = v442;
LABEL_187:
        swift_release();
        v457 = v233;
        swift_retain();
        v349 = v446;
        FormatMicaNodeContent.bind(binder:context:)(v453, v235);
        v4 = v349;
        if (!v349)
        {
          swift_release();
          swift_release_n();
          swift_release();
          v265 = v453;
          v230 = v424;
          goto LABEL_208;
        }
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        swift_release();
LABEL_221:
        swift_release();
LABEL_222:
        swift_bridgeObjectRelease();
        return;
      }
      v346 = *(_QWORD *)(v231 + 16);
      v345 = *(_QWORD *)(v231 + 24);
      v233 = v232;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain();
      v347 = v346;
      v348 = v446;
      sub_1BABC3158(v453, v454, v347, v345, (void (*)(uint64_t, uint64_t))FormatMicaNodeContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA45FC);
      v446 = v348;
      if (v348)
      {
        swift_release();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release();
        swift_release_n();
        swift_bridgeObjectRelease();
        goto LABEL_265;
      }
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      v442 = v142;
      v342 = swift_projectBox();
      v343 = v383;
      sub_1BA4C2DD8(v342, v383, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
      v344 = v4;
      v233 = v232;
      swift_retain();
      swift_retain_n();
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BAC67580();
      v446 = v344;
      if (v344)
      {
        sub_1BA4A2E80(v343, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
        swift_release();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release();
        swift_release();
        goto LABEL_265;
      }
      sub_1BA4A2E80(v343, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
      v142 = v442;
    }
    v235 = v454;
    goto LABEL_187;
  }
  v432 = v229 & 0x3FFFFFFFFFFFFFFFLL;
  v267 = *(_QWORD *)(v229 + 16);
  v266 = *(_QWORD *)(v229 + 24);
  if (!(v267 >> 62))
  {
    v363 = swift_projectBox();
    v364 = v384;
    sub_1BA4C2DD8(v363, v384, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BAC67580();
    if (v4)
    {
      sub_1BA4A2E80(v364, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
      swift_release();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_265;
    }
    sub_1BA4A2E80(v364, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
    v365 = v454;
    goto LABEL_207;
  }
  v446 = v4;
  if (v267 >> 62 == 1)
  {
    swift_retain();
    swift_retain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    v268 = v446;
    sub_1BABC277C(v453, v454);
    if (v268)
    {
      swift_release();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      goto LABEL_265;
    }
    swift_release();
    swift_release();
LABEL_206:
    v365 = v454;
LABEL_207:
    swift_release();
    swift_bridgeObjectRetain();
    sub_1BABA45FC(v453, v365, v266);
    v4 = 0;
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    v265 = v453;
    goto LABEL_208;
  }
  v367 = *(_QWORD *)(v267 + 16);
  v366 = *(_QWORD *)(v267 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  v368 = v367;
  v369 = v446;
  sub_1BABC3158(v453, v454, v368, v366, (void (*)(uint64_t, uint64_t))FormatMicaNodeContent.bind(binder:context:), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA45FC);
  if (!v369)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_206;
  }
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
LABEL_265:
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1BABAB6DC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 v115;
  unsigned __int8 v116;
  unsigned __int8 v117;
  unsigned __int8 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  _BYTE v143[26];
  uint64_t v144;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return result;
  v5 = result;
  v6 = a3 + 32;
  swift_bridgeObjectRetain();
  v7 = 0;
  v128 = v5;
  v129 = a2;
  v126 = v6;
  v124 = v3;
  while (1)
  {
    v8 = (__int128 *)(v6 + 144 * v7);
    v9 = v8[6];
    v10 = v8[7];
    v11 = v8[4];
    v141 = v8[5];
    v142 = v9;
    *(_OWORD *)v143 = v10;
    *(_OWORD *)&v143[10] = *(__int128 *)((char *)v8 + 122);
    v12 = v8[3];
    v138 = v8[2];
    v139 = v12;
    v140 = v11;
    v13 = v8[1];
    v136 = *v8;
    v137 = v13;
    v14 = v13;
    v127 = v7;
    if ((_QWORD)v13)
    {
      v15 = *(_QWORD *)(v13 + 16);
      if (v15)
      {
        swift_bridgeObjectRetain();
        sub_1BAC690CC((uint64_t)&v136);
        swift_bridgeObjectRetain();
        v16 = (_BYTE *)(v14 + 40);
        do
        {
          if ((*v16 & 1) == 0)
          {
            *(_QWORD *)&v133 = *((_QWORD *)v16 - 1);
            v17 = v133;
            swift_retain_n();
            v18 = v144;
            FormatFloat.bind(binder:context:)();
            v144 = v18;
            if (v18)
            {
              sub_1BA72C46C(v17, 0);
              sub_1BA72C46C(v17, 0);
              swift_bridgeObjectRelease_n();
              goto LABEL_102;
            }
            sub_1BA72C46C(v17, 0);
            sub_1BA72C46C(v17, 0);
          }
          v16 += 16;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease_n();
        v19 = *((_QWORD *)&v137 + 1);
        if (!*((_QWORD *)&v137 + 1))
          goto LABEL_19;
LABEL_14:
        v20 = *(_QWORD *)(v19 + 16);
        if (!v20)
          goto LABEL_19;
        v21 = swift_bridgeObjectRetain() + 64;
        while (1)
        {
          v130 = v20;
          v22 = *(_QWORD *)(v21 - 16);
          *(_QWORD *)&v133 = *(_QWORD *)(v21 - 24);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          v23 = v144;
          FormatColor.bind(binder:context:)();
          if (v23)
            break;
          swift_release();
          *(_QWORD *)&v133 = v22;
          swift_retain();
          FormatFloat.bind(binder:context:)();
          v144 = 0;
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v21 += 40;
          v20 = v130 - 1;
          if (v130 == 1)
          {
            swift_bridgeObjectRelease();
            v3 = v124;
            goto LABEL_19;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        sub_1BAC6919C((uint64_t)&v136);
        result = swift_bridgeObjectRelease();
        v144 = v23;
        return result;
      }
    }
    sub_1BAC690CC((uint64_t)&v136);
    v19 = *((_QWORD *)&v137 + 1);
    if (*((_QWORD *)&v137 + 1))
      goto LABEL_14;
LABEL_19:
    v24 = v143[24];
    if (v143[24] != 254)
      break;
    sub_1BAC6919C((uint64_t)&v136);
LABEL_21:
    v6 = v126;
LABEL_22:
    v25 = v127;
LABEL_99:
    v7 = v25 + 1;
    if (v7 == v3)
      return swift_bridgeObjectRelease();
  }
  v26 = *((_QWORD *)&v139 + 1);
  v27 = v140;
  v28 = *((_QWORD *)&v141 + 1);
  v122 = v141;
  v123 = v142;
  v29 = *(_QWORD *)&v143[8];
  v131 = *((_QWORD *)&v142 + 1);
  v132 = *(_QWORD *)v143;
  v30 = *(_QWORD *)&v143[16];
  *(_QWORD *)&v133 = *((_QWORD *)&v141 + 1);
  swift_retain_n();
  v31 = v144;
  FormatColor.bind(binder:context:)();
  v144 = v31;
  v125 = v30;
  if (v31)
  {
    sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v28, v123, v131, v132, v29, v30, v24);
    sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v28, v123, v131, v132, v29, v30, v24);
    goto LABEL_102;
  }
  v111 = v30;
  v121 = v29;
  v32 = v132;
  sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v28, v123, v131, v132, v29, v111, v24);
  v3 = v124;
  switch(v24)
  {
    case 0:
      v115 = 0;
      goto LABEL_27;
    case 1:
      v33 = v28;
      v34 = v131;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v35 = *((_QWORD *)&v134 + 1);
        v36 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v37 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8))(v128, v129, v35, v36);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v38 = v121;
        v144 = v37;
        if (v37)
        {
          v118 = 1;
          v110 = v121;
          v114 = v125;
          v101 = v26;
          v103 = *((_QWORD *)&v27 + 1);
          v102 = v27;
          v104 = v122;
          v105 = v33;
LABEL_111:
          v106 = v123;
          v107 = v34;
          goto LABEL_119;
        }
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v38 = v121;
      }
      if (swift_dynamicCast())
      {
        v55 = *((_QWORD *)&v134 + 1);
        v56 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v57 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8))(v128, v129, v55, v56);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v33, v123, v131, v132, v38, v125, 1u);
        sub_1BAC6919C((uint64_t)&v136);
        v144 = v57;
        if (v57)
          return swift_bridgeObjectRelease();
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v33, v123, v131, v132, v38, v125, 1u);
        sub_1BAC6919C((uint64_t)&v136);
      }
      goto LABEL_21;
    case 2:
      v119 = v28;
      v39 = v123;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v40 = *((_QWORD *)&v134 + 1);
        v41 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v42 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8))(v128, v129, v40, v41);
        v43 = v121;
        v144 = v42;
        if (v42)
          goto LABEL_106;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v6 = v126;
        v43 = v121;
      }
      if (swift_dynamicCast())
      {
        v58 = *((_QWORD *)&v134 + 1);
        v59 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v60 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8))(v128, v129, v58, v59);
        v144 = v60;
        if (v60)
          goto LABEL_106;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      v70 = v132;
      if (swift_dynamicCast())
      {
        v71 = *((_QWORD *)&v134 + 1);
        v72 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v73 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 8))(v128, v129, v71, v72);
        v144 = v73;
        if (v73)
        {
LABEL_106:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
          v118 = 2;
          v110 = v43;
          v114 = v125;
          v101 = v26;
          v103 = *((_QWORD *)&v27 + 1);
          v102 = v27;
          v104 = v122;
LABEL_116:
          v105 = v119;
          goto LABEL_117;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
        v70 = v132;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      if (swift_dynamicCast())
      {
        v80 = *((_QWORD *)&v134 + 1);
        v81 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v82 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 8))(v128, v129, v80, v81);
        v144 = v82;
        if (!v82)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
          v116 = 2;
          v108 = v43;
          v112 = v125;
          v83 = v26;
          v85 = *((_QWORD *)&v27 + 1);
          v84 = v27;
          v86 = v122;
          v87 = v119;
LABEL_86:
          v91 = v39;
          goto LABEL_91;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v118 = 2;
        v110 = v43;
        v114 = v125;
        v101 = v26;
        v103 = *((_QWORD *)&v27 + 1);
        v102 = v27;
        v104 = v122;
        v105 = v119;
LABEL_117:
        v106 = v39;
        goto LABEL_118;
      }
      v135 = 0;
      v133 = 0u;
      v134 = 0u;
      sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      v117 = 2;
      v109 = v43;
      v113 = v125;
      v95 = v26;
      v97 = *((_QWORD *)&v27 + 1);
      v96 = v27;
      v98 = v122;
      goto LABEL_95;
    case 3:
      v119 = v28;
      v39 = v123;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v44 = *((_QWORD *)&v134 + 1);
        v45 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v46 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8))(v128, v129, v44, v45);
        v47 = v121;
        v144 = v46;
        if (v46)
          goto LABEL_115;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v6 = v126;
        v47 = v121;
      }
      if (swift_dynamicCast())
      {
        v61 = *((_QWORD *)&v134 + 1);
        v62 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v63 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8))(v128, v129, v61, v62);
        v144 = v63;
        if (v63)
          goto LABEL_115;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      v70 = v132;
      if (swift_dynamicCast())
      {
        v74 = *((_QWORD *)&v134 + 1);
        v75 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v76 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 8))(v128, v129, v74, v75);
        v144 = v76;
        if (v76)
          goto LABEL_115;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
        v70 = v132;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      if (!swift_dynamicCast())
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v117 = 3;
        v109 = v47;
        v113 = v125;
        v95 = v26;
        v97 = *((_QWORD *)&v27 + 1);
        v96 = v27;
        v98 = v122;
LABEL_95:
        v99 = v119;
        v100 = v39;
LABEL_97:
        sub_1BA6E8A78(v95, v96, v97, v98, v99, v100, v131, v70, v109, v113, v117);
        sub_1BAC6919C((uint64_t)&v136);
LABEL_98:
        v25 = v127;
        goto LABEL_99;
      }
      v88 = *((_QWORD *)&v134 + 1);
      v89 = v135;
      __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
      v90 = v144;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 8))(v128, v129, v88, v89);
      v144 = v90;
      if (!v90)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v116 = 3;
        v108 = v47;
        v112 = v125;
        v83 = v26;
        v85 = *((_QWORD *)&v27 + 1);
        v84 = v27;
        v86 = v122;
        v87 = v119;
        goto LABEL_86;
      }
LABEL_115:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
      v118 = 3;
      v110 = v47;
      v114 = v125;
      v101 = v26;
      v103 = *((_QWORD *)&v27 + 1);
      v102 = v27;
      v104 = v122;
      goto LABEL_116;
    case 4:
      v120 = v28;
      v34 = v131;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v48 = *((_QWORD *)&v134 + 1);
        v49 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v50 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8))(v128, v129, v48, v49);
        v51 = v121;
        v144 = v50;
        if (v50)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
          v118 = 4;
          v110 = v121;
          v114 = v125;
          v101 = v26;
          v103 = *((_QWORD *)&v27 + 1);
          v102 = v27;
          v104 = v122;
          v105 = v120;
          goto LABEL_111;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
        v32 = v132;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v6 = v126;
        v51 = v121;
      }
      if (!swift_dynamicCast())
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v120, v123, v131, v32, v51, v125, 4u);
        sub_1BAC6919C((uint64_t)&v136);
        goto LABEL_22;
      }
      v64 = *((_QWORD *)&v134 + 1);
      v65 = v135;
      __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
      v66 = v144;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8))(v128, v129, v64, v65);
      v144 = v66;
      if (v66)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v120, v123, v131, v132, v51, v125, 4u);
        sub_1BAC6919C((uint64_t)&v136);
        return swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
      sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v120, v123, v131, v132, v51, v125, 4u);
      sub_1BAC6919C((uint64_t)&v136);
      goto LABEL_21;
    case 5:
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v52 = *((_QWORD *)&v134 + 1);
        v53 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v54 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8))(v128, v129, v52, v53);
        v144 = v54;
        if (v54)
          goto LABEL_112;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v6 = v126;
      }
      if (swift_dynamicCast())
      {
        v67 = *((_QWORD *)&v134 + 1);
        v68 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v69 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8))(v128, v129, v67, v68);
        v144 = v69;
        if (v69)
          goto LABEL_112;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      v70 = v132;
      if (swift_dynamicCast())
      {
        v77 = *((_QWORD *)&v134 + 1);
        v78 = v135;
        __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
        v79 = v144;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 8))(v128, v129, v77, v78);
        v144 = v79;
        if (v79)
        {
LABEL_112:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
          v118 = 5;
          v110 = v121;
          v114 = v125;
          v101 = v26;
          v103 = *((_QWORD *)&v27 + 1);
          v102 = v27;
          v104 = v122;
          v105 = v28;
          v106 = v123;
          goto LABEL_118;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v6 = v126;
        v70 = v132;
      }
      else
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
      if (!swift_dynamicCast())
      {
        v135 = 0;
        v133 = 0u;
        v134 = 0u;
        sub_1BA65DB80((uint64_t)&v133, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
        v117 = 5;
        v109 = v121;
        v113 = v125;
        v95 = v26;
        v97 = *((_QWORD *)&v27 + 1);
        v96 = v27;
        v98 = v122;
        v99 = v28;
        v100 = v123;
        goto LABEL_97;
      }
      v92 = *((_QWORD *)&v134 + 1);
      v93 = v135;
      __swift_project_boxed_opaque_existential_1(&v133, *((uint64_t *)&v134 + 1));
      v94 = v144;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 8))(v128, v129, v92, v93);
      v144 = v94;
      if (!v94)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
        v116 = 5;
        v85 = *((_QWORD *)&v27 + 1);
        v108 = v121;
        v112 = v125;
        v83 = v26;
        v84 = v27;
        v86 = v122;
        v87 = v28;
        v91 = v123;
LABEL_91:
        sub_1BA6E8A78(v83, v84, v85, v86, v87, v91, v131, v132, v108, v112, v116);
LABEL_92:
        sub_1BAC6919C((uint64_t)&v136);
        v6 = v126;
        goto LABEL_98;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
      v118 = 5;
      v103 = *((_QWORD *)&v27 + 1);
      v110 = v121;
      v114 = v125;
      v101 = v26;
      v102 = v27;
      v104 = v122;
      v105 = v28;
      v106 = v123;
LABEL_118:
      v107 = v131;
LABEL_119:
      sub_1BA6E8A78(v101, v102, v103, v104, v105, v106, v107, v132, v110, v114, v118);
LABEL_102:
      sub_1BAC6919C((uint64_t)&v136);
      return swift_bridgeObjectRelease();
    default:
      v115 = -1;
LABEL_27:
      sub_1BA6E8A78(v26, v27, *((uint64_t *)&v27 + 1), v122, v28, v123, v131, v132, v121, v125, v115);
      goto LABEL_92;
  }
}

void sub_1BABAC9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[24];
  uint64_t v38;
  uint64_t v39;

  v39 = a1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v36 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v36 - v13;
  MEMORY[0x1E0C80A78](v15);
  v36[20] = (char *)v36 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v36 - v18;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v20);
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v36 - v25;
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78]((char *)v36 - v28);
  MEMORY[0x1E0C80A78](v29);
  if (*(_QWORD *)(a3 + 16))
  {
    v36[10] = (char *)v36 - v32;
    v36[13] = v31;
    v36[11] = v30;
    v36[12] = v26;
    v36[14] = v35;
    v36[4] = v34;
    v36[5] = v33;
    v36[6] = v14;
    v36[9] = v11;
    v36[7] = v8;
    v36[17] = v6;
    v36[18] = v5;
    v36[8] = v19;
    v36[16] = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
    swift_bridgeObjectRetain();
    v36[22] = a3;
    v38 = a2;
    v36[23] = a3 + 32;
    __asm { BR              X9 }
  }
}

uint64_t sub_1BABB02F8(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t i;

  v5 = v4;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v10 = result;
    swift_bridgeObjectRetain();
    for (i = a3 + 48; ; i += 24)
    {
      swift_retain_n();
      swift_bridgeObjectRetain();
      a4(v10, a2);
      if (v5)
        break;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v6)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

void sub_1BABB03EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD, double))
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v22 = a1;
  v23 = a2;
  v7 = a4(0);
  v26 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v20 - v9;
  v11 = a5(0, v8);
  MEMORY[0x1E0C80A78](v11);
  v24 = (uint64_t)v20 - v13;
  v14 = *(_QWORD *)(a3 + 16);
  if (!v14)
    return;
  v15 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v25 = *(_QWORD *)(v12 + 72);
  v20[1] = a3;
  swift_bridgeObjectRetain();
  v16 = v24;
  v21 = (uint64_t (*)(_QWORD))a5;
  while (1)
  {
    sub_1BA4C2DD8(v15, v16, (uint64_t (*)(_QWORD))a5);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v10, v16 + *(int *)(v11 + 36), v7);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if (swift_dynamicCast())
      break;
    v29 = 0;
    v27 = 0u;
    v28 = 0u;
    sub_1BA65DB80((uint64_t)&v27, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
LABEL_4:
    sub_1BA4A2E80(v16, (uint64_t (*)(_QWORD))a5);
    v15 += v25;
    if (!--v14)
      goto LABEL_9;
  }
  v17 = *((_QWORD *)&v28 + 1);
  v18 = v29;
  __swift_project_boxed_opaque_existential_1(&v27, *((uint64_t *)&v28 + 1));
  v19 = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8))(v22, v23, v17, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  v30 = v19;
  if (!v19)
  {
    a5 = (uint64_t (*)(_QWORD, double))v21;
    v16 = v24;
    goto LABEL_4;
  }
  sub_1BA4A2E80(v24, v21);
LABEL_9:
  swift_bridgeObjectRelease();
}

uint64_t sub_1BABB05F0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char v14;

  v9 = result;
  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return result;
  swift_bridgeObjectRetain();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  for (i = (char *)(a3 + 48); ; i += 24)
  {
    v14 = *i;
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
      break;
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    sub_1BA65DB80((uint64_t)&v11, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v4)
      return swift_bridgeObjectRelease();
  }
  v8 = *((_QWORD *)&v12 + 1);
  v7 = v13;
  __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v9, a2, v8, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  if (!v3)
    goto LABEL_4;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FormatVisibility.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *v2;
  if ((unint64_t)*v2 >> 62 == 1)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(_QWORD *)(v3 + 24);
    sub_1BA67D3F4(v6);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(v5, a2, v6, v7);
    sub_1BA6EEDB4(v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BABB07C8(uint64_t a1, uint64_t a2)
{
  return FormatAdMetricsNode.bind(binder:context:)(a1, a2);
}

uint64_t FormatPointEquation.bind(binder:context:)()
{
  return sub_1BABD1F34();
}

uint64_t sub_1BABB07FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v6;
  uint64_t v7;
  uint64_t result;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = (_BYTE *)(a3 + 40);
    do
    {
      if ((*v6 & 1) == 0)
      {
        v7 = *((_QWORD *)v6 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v7, 0);
        sub_1BA72C46C(v7, 0);
        if (v3)
          break;
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FormatEquation.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;

  v7 = *v4;
  v8 = type metadata accessor for FormatEquationToken(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  return Array<A>.bind(binder:context:)(a1, a2, v7, v8, (uint64_t)&protocol witness table for FormatEquationToken<A>);
}

_QWORD *FormatTextAdjustmentBaseline.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return FormatTextNodeStyle.bind(binder:context:)(a1, a2);
}

_QWORD *FormatTextAdjustmentOtherBaseline.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return FormatTextNodeStyle.bind(binder:context:)(a1, a2);
}

_QWORD *FormatTextAdjustmentMetric.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return FormatTextNodeStyle.bind(binder:context:)(a1, a2);
}

void sub_1BABB0980()
{
  FormatAdjustment.bind(binder:context:)();
}

uint64_t FormatAlphaColor.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BABB09A8(a1, a2, a3);
}

uint64_t sub_1BABB09A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v5, v6);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v10 = *((_QWORD *)&v14 + 1);
    v11 = v15;
    __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, a2, v10, v11);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  }
  else
  {
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
    return sub_1BA65DB80((uint64_t)&v13, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

uint64_t sub_1BABB0AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatValue.bind(binder:context:)(a1, a2, a3);
}

uint64_t FormatAndExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABDFFE8(a1, a2, (void (*)(uint64_t, uint64_t))FormatExpression.bind(binder:context:));
}

uint64_t sub_1BABB0B04(uint64_t a1, uint64_t a2)
{
  return FormatOrExpression.bind(binder:context:)(a1, a2);
}

uint64_t FormatAnimationNodeAnimation.bind(binder:context:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  _BYTE v11[144];
  _BYTE v12[144];
  __int128 v13;

  v6 = *(_QWORD *)v2 >> 62;
  if ((_DWORD)v6)
  {
    if ((_DWORD)v6 == 1)
    {
      swift_retain();
      FormatAnimationNodeSpringAnimation.bind(binder:context:)(a1, a2);
    }
    else
    {
      v7 = *(_QWORD *)(*(_QWORD *)v2 + 16);
      v8 = *(_QWORD *)(v7 + 16);
      swift_retain();
      sub_1BAB758D0((uint64_t)a1, a2, v8);
      if (!v3)
      {
        v9 = MEMORY[0x1E0DEB940];
        sub_1BA760F3C(v7 + 24, (uint64_t)v12, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
        sub_1BA760F3C((uint64_t)v12, (uint64_t)&v13, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v9, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
        if (sub_1BA896370((uint64_t *)&v13) != 1)
        {
          sub_1BA760F3C((uint64_t)v12, (uint64_t)v11, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
          sub_1BA89652C((uint64_t)v11);
          FormatMediaTiming.bind(binder:context:)();
          sub_1BAC653DC((uint64_t)v12);
        }
      }
    }
  }
  else
  {
    swift_retain();
    FormatAnimationNodeBasicAnimation.bind(binder:context:)();
  }
  return swift_release();
}

void FormatAnimationNodeBasicAnimation.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[90];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v7[4] = v4;
  v7[5] = (char *)v7 - v3;
  v5 = *(_QWORD *)(v0 + 48);
  v6 = (char *)sub_1BABB0D94 + 4 * word_1BB8A5A32[*(unsigned __int8 *)(v0 + 64)];
  v7[89] = *(_QWORD *)(v0 + 56);
  v7[7] = v5;
  __asm { BR              X9 }
}

uint64_t sub_1BABB0D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v10 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BABB2684(v3, v2, v4, v8, v6);
  result = sub_1BA51A9E0(v4, v8, v6, v10, *(_QWORD *)(v1 + 56), *(_QWORD *)(v9 - 72), 0);
  if (!v7)
  {
    *(_QWORD *)(v1 + 24) = v3;
    v12 = *(unsigned __int8 *)(v5 + 88);
    if (v12 != 255)
    {
      v14 = *(_QWORD *)(v5 + 72);
      v13 = *(_QWORD *)(v5 + 80);
      if ((v12 & 1) != 0)
      {
        sub_1BA796C58(*(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_BYTE *)(v5 + 88));
        v15 = sub_1BA862600((uint64_t)&unk_1E72543F8);
        v16 = *(_QWORD *)(v1 + 40);
        sub_1BB3757A0(v14, v13, v15, 1, v16);
        sub_1BA502AD0(v16, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
      }
      sub_1BA796C70(v14, v13, v12);
    }
    v17 = *(unsigned __int8 *)(v5 + 112);
    if (v17 == 255)
    {
      *(_QWORD *)(v1 + 16) = v2;
    }
    else
    {
      v18 = *(_QWORD *)(v5 + 96);
      v19 = *(_QWORD *)(v5 + 104);
      if ((v17 & 1) != 0)
      {
        sub_1BA796C58(*(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_BYTE *)(v5 + 112));
        v20 = sub_1BA862600((uint64_t)&unk_1E7254420);
        v21 = *(_QWORD *)(v1 + 32);
        sub_1BB3757A0(v18, v19, v20, 1, v21);
        *(_QWORD *)(v1 + 16) = v2;
        sub_1BA502AD0(v21, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
      }
      else
      {
        *(_QWORD *)(v1 + 16) = v2;
      }
      sub_1BA796C70(v18, v19, v17);
    }
    v22 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C(v5 + 120, v1 + 360, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C(v1 + 360, v1 + 504, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v22, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    result = sub_1BA896370((uint64_t *)(v1 + 504));
    if ((_DWORD)result != 1)
    {
      v23 = *(_OWORD *)(v1 + 616);
      *(_OWORD *)(v1 + 160) = *(_OWORD *)(v1 + 600);
      *(_OWORD *)(v1 + 176) = v23;
      *(_OWORD *)(v1 + 185) = *(_OWORD *)(v1 + 625);
      v24 = *(_OWORD *)(v1 + 552);
      *(_OWORD *)(v1 + 96) = *(_OWORD *)(v1 + 536);
      *(_OWORD *)(v1 + 112) = v24;
      v25 = *(_OWORD *)(v1 + 584);
      *(_OWORD *)(v1 + 128) = *(_OWORD *)(v1 + 568);
      *(_OWORD *)(v1 + 144) = v25;
      v26 = *(_OWORD *)(v1 + 520);
      *(_OWORD *)(v1 + 64) = *(_OWORD *)(v1 + 504);
      *(_OWORD *)(v1 + 80) = v26;
      sub_1BA760F3C(v1 + 360, v1 + 216, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
      sub_1BA89652C(v1 + 216);
      FormatMediaTiming.bind(binder:context:)();
      return sub_1BAC653DC(v1 + 360);
    }
  }
  return result;
}

uint64_t FormatAnimationNodeSpringAnimation.bind(binder:context:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(void);
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  uint64_t v53;
  _QWORD *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _OWORD v62[2];
  _BYTE v63[144];
  _BYTE v64[144];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _OWORD v72[2];
  uint64_t v73;

  v3 = v2;
  v73 = a2;
  v54 = a1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v51 = (char *)&v49 - v7;
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 40);
  v12 = *(_QWORD *)(v2 + 48);
  v13 = *(_QWORD *)(v2 + 56);
  v14 = *(unsigned __int8 *)(v2 + 64);
  *(_QWORD *)&v65 = v8;
  *((_QWORD *)&v65 + 1) = v9;
  *(_QWORD *)&v66 = v10;
  *((_QWORD *)&v66 + 1) = v11;
  *(_QWORD *)&v67 = v12;
  *((_QWORD *)&v67 + 1) = v13;
  LOBYTE(v68) = v14;
  v52 = v14;
  sub_1BA51A92C(v8, v9, v10, v11, v12, v13, v14);
  v15 = v53;
  FormatAnimationNodeKeyPath.bind(binder:context:)();
  v53 = v15;
  if (v15)
    return sub_1BA51A9E0(v8, v9, v10, v11, v12, v13, v52);
  v17 = (uint64_t)v51;
  sub_1BA51A9E0(v8, v9, v10, v11, v12, v13, v52);
  v18 = *(unsigned __int8 *)(v3 + 88);
  v19 = (_QWORD *)v3;
  if (v18 == 255)
    goto LABEL_7;
  v20 = *(_QWORD *)(v3 + 72);
  v21 = *(_QWORD *)(v3 + 80);
  if ((v18 & 1) == 0)
  {
    sub_1BA796C70(*(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_BYTE *)(v3 + 88));
LABEL_7:
    v22 = v53;
    goto LABEL_8;
  }
  sub_1BA796C58(*(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_BYTE *)(v3 + 88));
  v31 = sub_1BA862600((uint64_t)&unk_1E7254448);
  v32 = v53;
  sub_1BB3757A0(v20, v21, v31, 1, v17);
  v22 = v32;
  if (v32)
  {
    swift_bridgeObjectRelease();
    v28 = v20;
    v29 = v21;
    v30 = v18;
    return sub_1BA796C70(v28, v29, v30);
  }
  sub_1BA502AD0(v17, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  swift_bridgeObjectRelease();
  sub_1BA796C70(v20, v21, v18);
LABEL_8:
  v23 = (uint64_t)v50;
  v24 = *(unsigned __int8 *)(v3 + 112);
  if (v24 != 255)
  {
    v26 = *(_QWORD *)(v3 + 96);
    v25 = *(_QWORD *)(v3 + 104);
    if ((v24 & 1) != 0)
    {
      sub_1BA796C58(*(_QWORD *)(v3 + 96), *(_QWORD *)(v3 + 104), *(_BYTE *)(v3 + 112));
      v27 = sub_1BA862600((uint64_t)&unk_1E7254470);
      sub_1BB3757A0(v26, v25, v27, 1, v23);
      if (v22)
      {
        swift_bridgeObjectRelease();
        v28 = v26;
        v29 = v25;
        v30 = v24;
        return sub_1BA796C70(v28, v29, v30);
      }
      sub_1BA502AD0(v23, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
    sub_1BA796C70(v26, v25, v24);
  }
  v33 = *(_QWORD *)(v3 + 120);
  v54 = (_QWORD *)v3;
  if (v33)
  {
    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
    {
      swift_bridgeObjectRetain_n();
      v35 = (_BYTE *)(v33 + 40);
      while (1)
      {
        if ((*v35 & 1) == 0)
        {
          v36 = *((_QWORD *)v35 - 1);
          *(_QWORD *)&v65 = v36;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v22)
          {
LABEL_35:
            sub_1BA72C46C(v36, 0);
            sub_1BA72C46C(v36, 0);
            return swift_bridgeObjectRelease_n();
          }
          sub_1BA72C46C(v36, 0);
          sub_1BA72C46C(v36, 0);
        }
        v35 += 16;
        if (!--v34)
        {
          swift_bridgeObjectRelease_n();
          break;
        }
      }
    }
    v19 = v54;
  }
  v37 = v19[16];
  if (v37)
  {
    v38 = *(_QWORD *)(v37 + 16);
    if (v38)
    {
      swift_bridgeObjectRetain_n();
      v39 = (_BYTE *)(v37 + 40);
      do
      {
        if ((*v39 & 1) == 0)
        {
          v36 = *((_QWORD *)v39 - 1);
          *(_QWORD *)&v65 = v36;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v22)
            goto LABEL_35;
          sub_1BA72C46C(v36, 0);
          sub_1BA72C46C(v36, 0);
        }
        v39 += 16;
        --v38;
      }
      while (v38);
      swift_bridgeObjectRelease_n();
    }
    v19 = v54;
  }
  v40 = v19[17];
  if (v40)
  {
    v41 = *(_QWORD *)(v40 + 16);
    if (v41)
    {
      swift_bridgeObjectRetain_n();
      v42 = (_BYTE *)(v40 + 40);
      do
      {
        if ((*v42 & 1) == 0)
        {
          v36 = *((_QWORD *)v42 - 1);
          *(_QWORD *)&v65 = v36;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v22)
            goto LABEL_35;
          sub_1BA72C46C(v36, 0);
          sub_1BA72C46C(v36, 0);
        }
        v42 += 16;
        --v41;
      }
      while (v41);
      swift_bridgeObjectRelease_n();
    }
    v19 = v54;
  }
  v43 = v19[18];
  if (!v43)
    goto LABEL_56;
  v44 = *(_QWORD *)(v43 + 16);
  if (!v44)
  {
LABEL_55:
    v19 = v54;
LABEL_56:
    v47 = (uint64_t)(v19 + 19);
    v48 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C(v47, (uint64_t)v64, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v64, (uint64_t)&v65, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v48, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    result = sub_1BA896370((uint64_t *)&v65);
    if ((_DWORD)result != 1)
    {
      v61 = v71;
      v62[0] = v72[0];
      *(_OWORD *)((char *)v62 + 9) = *(_OWORD *)((char *)v72 + 9);
      v57 = v67;
      v58 = v68;
      v59 = v69;
      v60 = v70;
      v55 = v65;
      v56 = v66;
      sub_1BA760F3C((uint64_t)v64, (uint64_t)v63, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
      sub_1BA89652C((uint64_t)v63);
      FormatMediaTiming.bind(binder:context:)();
      return sub_1BAC653DC((uint64_t)v64);
    }
    return result;
  }
  swift_bridgeObjectRetain_n();
  v45 = (_BYTE *)(v43 + 40);
  while (1)
  {
    if ((*v45 & 1) == 0)
    {
      *(_QWORD *)&v65 = *((_QWORD *)v45 - 1);
      v46 = v65;
      swift_retain_n();
      FormatFloat.bind(binder:context:)();
      sub_1BA72C46C(v46, 0);
      sub_1BA72C46C(v46, 0);
      if (v22)
        return swift_bridgeObjectRelease_n();
    }
    v45 += 16;
    if (!--v44)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_55;
    }
  }
}

uint64_t FormatAnimationNodeGroupAnimation.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t (*v5)(void);
  _BYTE v6[144];
  _BYTE v7[144];
  __int128 v8;

  result = sub_1BAB758D0(a1, a2, *(_QWORD *)(v2 + 16));
  if (!v3)
  {
    v5 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C(v2 + 24, (uint64_t)v7, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v7, (uint64_t)&v8, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v5, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    result = sub_1BA896370((uint64_t *)&v8);
    if ((_DWORD)result != 1)
    {
      sub_1BA760F3C((uint64_t)v7, (uint64_t)v6, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
      sub_1BA89652C((uint64_t)v6);
      FormatMediaTiming.bind(binder:context:)();
      return sub_1BAC653DC((uint64_t)v7);
    }
  }
  return result;
}

uint64_t sub_1BABB1C78(_QWORD *a1, uint64_t a2)
{
  return FormatAnimationNodeAnimation.bind(binder:context:)(a1, a2);
}

void FormatAnimationNodeKeyPath.bind(binder:context:)()
{
  __asm { BR              X10 }
}

void sub_1BABB1CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BABB2684(v2, v0, v4, v3, v1);
}

void sub_1BABB1D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (!v3
    || (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        FormatSizeEquation.bind(binder:context:)(),
        sub_1BA5DCC4C(v3),
        !v0))
  {
    if (!v1
      || (swift_bridgeObjectRetain(),
          swift_bridgeObjectRetain(),
          FormatSizeEquation.bind(binder:context:)(),
          sub_1BA5DCC4C(v1),
          !v0))
    {
      if (v2)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        FormatSizeEquation.bind(binder:context:)();
        sub_1BA5DCC4C(v2);
      }
    }
  }
  JUMPOUT(0x1BABB1D00);
}

uint64_t FormatMediaTiming.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v54 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v53 - v5;
  v7 = *v0;
  v8 = v0[1];
  v10 = v0[2];
  v9 = v0[3];
  v12 = v0[5];
  v11 = v0[6];
  result = v0[7];
  v14 = v0[8];
  v65 = *((unsigned __int8 *)v0 + 72);
  v59 = v0[10];
  v60 = v0[11];
  v61 = v0[12];
  v62 = v0[13];
  v15 = *((unsigned __int8 *)v0 + 112);
  v56 = v0[15];
  v57 = v0[16];
  v63 = *((unsigned __int8 *)v0 + 136);
  v66 = result;
  v67 = v14;
  v68 = v6;
  v69 = v12;
  v74 = v11;
  v64 = v9;
  if (v7)
  {
    v55 = v15;
    v16 = *(_QWORD *)(v7 + 16);
    if (!v16)
    {
      v15 = v55;
      if (!v8)
        goto LABEL_21;
      goto LABEL_13;
    }
    v58 = v10;
    swift_bridgeObjectRetain_n();
    v17 = (_BYTE *)(v7 + 40);
    do
    {
      if ((*v17 & 1) == 0)
      {
        v70 = *((_QWORD *)v17 - 1);
        v18 = v70;
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v1)
        {
          sub_1BA72C46C(v18, 0);
          sub_1BA72C46C(v18, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v18, 0);
        sub_1BA72C46C(v18, 0);
      }
      v17 += 16;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease_n();
    v15 = v55;
    result = v66;
    v14 = v67;
    v6 = v68;
    v12 = v69;
    v11 = v74;
    v9 = v64;
    v10 = v58;
  }
  if (!v8)
  {
LABEL_21:
    if (!v10)
      goto LABEL_32;
    goto LABEL_24;
  }
LABEL_13:
  v19 = v15;
  v20 = *(_QWORD *)(v8 + 16);
  if (v20)
  {
    v58 = v10;
    swift_bridgeObjectRetain_n();
    v21 = (_BYTE *)(v8 + 40);
    while (1)
    {
      if ((*v21 & 1) == 0)
      {
        v70 = *((_QWORD *)v21 - 1);
        v22 = v70;
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        v23 = v22;
        if (v1)
        {
LABEL_49:
          sub_1BA72C46C(v23, 0);
          sub_1BA72C46C(v22, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v22, 0);
        sub_1BA72C46C(v22, 0);
      }
      v21 += 16;
      if (!--v20)
      {
        swift_bridgeObjectRelease_n();
        v15 = v19;
        result = v66;
        v14 = v67;
        v6 = v68;
        v12 = v69;
        v11 = v74;
        v9 = v64;
        v10 = v58;
        goto LABEL_21;
      }
    }
  }
  v15 = v19;
  if (v10)
  {
LABEL_24:
    v24 = *(_QWORD *)(v10 + 16);
    if (v24)
    {
      swift_bridgeObjectRetain_n();
      v25 = (_BYTE *)(v10 + 40);
      do
      {
        if ((*v25 & 1) == 0)
        {
          v70 = *((_QWORD *)v25 - 1);
          v22 = v70;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          v23 = v22;
          if (v1)
            goto LABEL_49;
          sub_1BA72C46C(v22, 0);
          sub_1BA72C46C(v22, 0);
        }
        v25 += 16;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease_n();
      result = v66;
      v14 = v67;
      v6 = v68;
      v12 = v69;
      v11 = v74;
      v9 = v64;
    }
  }
LABEL_32:
  v26 = v65;
  if (v9)
  {
    v27 = *(_QWORD *)(v9 + 16);
    if (v27)
    {
      v28 = v9;
      swift_bridgeObjectRetain_n();
      v29 = (_BYTE *)(v28 + 40);
      do
      {
        if ((*v29 & 1) == 0)
        {
          v70 = *((_QWORD *)v29 - 1);
          v22 = v70;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          v23 = v22;
          if (v1)
            goto LABEL_49;
          sub_1BA72C46C(v22, 0);
          sub_1BA72C46C(v22, 0);
        }
        v29 += 16;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease_n();
      v26 = v65;
      result = v66;
      v14 = v67;
      v6 = v68;
    }
    v11 = v74;
    v12 = v69;
  }
  if (v12)
  {
    v30 = *(_QWORD *)(v12 + 16);
    if (v30)
    {
      v31 = v12;
      swift_bridgeObjectRetain_n();
      v32 = (_BYTE *)(v31 + 40);
      do
      {
        if ((*v32 & 1) == 0)
        {
          v70 = *((_QWORD *)v32 - 1);
          v22 = v70;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          v23 = v22;
          if (v1)
            goto LABEL_49;
          sub_1BA72C46C(v22, 0);
          sub_1BA72C46C(v22, 0);
        }
        v32 += 16;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease_n();
      v26 = v65;
      result = v66;
      v14 = v67;
      v6 = v68;
    }
    v11 = v74;
  }
  if (v11)
  {
    v33 = *(_QWORD *)(v11 + 16);
    if (v33)
    {
      v34 = v11;
      swift_bridgeObjectRetain_n();
      v35 = (_BYTE *)(v34 + 40);
      while (1)
      {
        if ((*v35 & 1) == 0)
        {
          v70 = *((_QWORD *)v35 - 1);
          v36 = v70;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v36, 0);
          sub_1BA72C46C(v36, 0);
          if (v1)
            return swift_bridgeObjectRelease_n();
        }
        v35 += 16;
        if (!--v33)
        {
          swift_bridgeObjectRelease_n();
          v26 = v65;
          result = v66;
          v14 = v67;
          v6 = v68;
          break;
        }
      }
    }
  }
  if (v26 != 255)
  {
    if ((v26 & 1) != 0)
    {
      v37 = result;
      v38 = v14;
      v39 = (uint64_t)v6;
      sub_1BA796C58(result, v14, v26);
      v40 = sub_1BA862600((uint64_t)&unk_1E72543A8);
      sub_1BB3757A0(v37, v38, v40, 1, v39);
      if (v1)
      {
        swift_bridgeObjectRelease();
        v41 = v37;
        v42 = v38;
        v43 = v26;
        return sub_1BA796C70(v41, v42, v43);
      }
      sub_1BA502AD0((uint64_t)v68, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      result = v37;
      v14 = v38;
    }
    result = sub_1BA796C70(result, v14, v26);
  }
  if (v15 != 255)
  {
    if ((v15 & 1) != 0)
    {
      v45 = v59;
      v44 = v60;
      v70 = v59;
      v71 = v60;
      v47 = v61;
      v46 = v62;
      v72 = v61;
      v73 = v62;
      sub_1BA896394(v59, v60, v61, v62, 1);
      FormatEdgeInsetsEquation.bind(binder:context:)();
      result = sub_1BA825F5C(v45, v44, v47, v46, v15);
      if (v1)
        return result;
    }
    else
    {
      result = sub_1BA825F5C(v59, v60, v61, v62, v15);
    }
  }
  v48 = v63;
  if (v63 != 255)
  {
    if ((v63 & 1) != 0)
    {
      v50 = v56;
      v49 = v57;
      sub_1BA796C58(v56, v57, v63);
      v51 = sub_1BA862600((uint64_t)&unk_1E72543D0);
      v52 = v54;
      sub_1BB3757A0(v50, v49, v51, 1, v54);
      if (!v1)
        sub_1BA502AD0(v52, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
    else
    {
      v50 = v56;
      v49 = v57;
    }
    v41 = v50;
    v42 = v49;
    v43 = v48;
    return sub_1BA796C70(v41, v42, v43);
  }
  return result;
}

void sub_1BABB2528()
{
  FormatAnimationNodeBasicAnimation.bind(binder:context:)();
}

uint64_t sub_1BABB2548(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t (*v6)(void);
  _BYTE v7[144];
  _BYTE v8[144];
  __int128 v9;

  v4 = *v2;
  result = sub_1BAB758D0(a1, a2, *(_QWORD *)(v4 + 16));
  if (!v3)
  {
    v6 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C(v4 + 24, (uint64_t)v8, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v8, (uint64_t)&v9, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v6, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    result = sub_1BA896370((uint64_t *)&v9);
    if ((_DWORD)result != 1)
    {
      sub_1BA760F3C((uint64_t)v8, (uint64_t)v7, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
      sub_1BA89652C((uint64_t)v7);
      FormatMediaTiming.bind(binder:context:)();
      return sub_1BAC653DC((uint64_t)v8);
    }
  }
  return result;
}

void sub_1BABB2684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;

  v6 = a5;
  if (a3)
  {
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      v10 = (_BYTE *)(a3 + 40);
      do
      {
        if ((*v10 & 1) == 0)
        {
          v11 = *((_QWORD *)v10 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v5)
          {
            sub_1BA72C46C(v11, 0);
            sub_1BA72C46C(v11, 0);
            goto LABEL_25;
          }
          sub_1BA72C46C(v11, 0);
          sub_1BA72C46C(v11, 0);
        }
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease_n();
    }
    v6 = a5;
  }
  if (a4)
  {
    v12 = *(_QWORD *)(a4 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain_n();
      v13 = (_BYTE *)(a4 + 40);
      while (1)
      {
        if ((*v13 & 1) == 0)
        {
          v14 = *((_QWORD *)v13 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v14, 0);
          sub_1BA72C46C(v14, 0);
          if (v5)
            goto LABEL_25;
        }
        v13 += 16;
        if (!--v12)
        {
          swift_bridgeObjectRelease_n();
          break;
        }
      }
    }
  }
  if (v6)
  {
    v15 = *(_QWORD *)(v6 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      v16 = (_BYTE *)(v6 + 40);
      do
      {
        if ((*v16 & 1) == 0)
        {
          v17 = *((_QWORD *)v16 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v17, 0);
          sub_1BA72C46C(v17, 0);
          if (v5)
            break;
        }
        v16 += 16;
        --v15;
      }
      while (v15);
LABEL_25:
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1BABB28A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  if (!*v0
    || (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        FormatSizeEquation.bind(binder:context:)(),
        result = sub_1BA5DCC4C(v2),
        !v1))
  {
    v4 = v0[2];
    if (!v4
      || (swift_bridgeObjectRetain(),
          swift_bridgeObjectRetain(),
          FormatSizeEquation.bind(binder:context:)(),
          result = sub_1BA5DCC4C(v4),
          !v1))
    {
      v5 = v0[4];
      if (v5)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        FormatSizeEquation.bind(binder:context:)();
        return sub_1BA5DCC4C(v5);
      }
    }
  }
  return result;
}

uint64_t FormatAnimationNodeKeyPathAnimation.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  void (*v37)(char *, uint64_t, uint64_t, double);
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v5 = v3;
  v41 = a3;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = sub_1BB873A2C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v34 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v30 - v17;
  v37 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  v37((char *)&v30 - v17, v5, v9, v16);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  v19 = v36(v18, 1, v8);
  v35 = v5;
  if (v19 == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
LABEL_7:
    v40 = 0;
    v38 = 0u;
    v39 = 0u;
    goto LABEL_8;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (!swift_dynamicCast())
    goto LABEL_7;
  v20 = *((_QWORD *)&v39 + 1);
  if (!*((_QWORD *)&v39 + 1))
  {
LABEL_8:
    sub_1BA65DB80((uint64_t)&v38, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    goto LABEL_9;
  }
  v33 = v40;
  __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 8))(a1, a2, v20);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  if (v4)
    return result;
LABEL_9:
  v22 = v35;
  ((void (*)(char *, uint64_t, uint64_t))v37)(v14, v35 + *(int *)(v41 + 36), v9);
  if (v36(v14, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
LABEL_15:
    v40 = 0;
    v38 = 0u;
    v39 = 0u;
    goto LABEL_16;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (!swift_dynamicCast())
    goto LABEL_15;
  v23 = *((_QWORD *)&v39 + 1);
  if (!*((_QWORD *)&v39 + 1))
  {
LABEL_16:
    sub_1BA65DB80((uint64_t)&v38, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    goto LABEL_17;
  }
  v33 = v4;
  v24 = v40;
  __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8);
  v31 = a1;
  v32 = a2;
  v26 = v33;
  v25(a1, a2, v23, v24);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  if (v26)
    return result;
  a1 = v31;
  a2 = v32;
LABEL_17:
  v27 = v34;
  ((void (*)(char *, uint64_t, uint64_t))v37)(v34, v22 + *(int *)(v41 + 40), v9);
  if (v36(v27, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v27, v9);
LABEL_22:
    v40 = 0;
    v38 = 0u;
    v39 = 0u;
    return sub_1BA65DB80((uint64_t)&v38, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (!swift_dynamicCast())
    goto LABEL_22;
  v28 = *((_QWORD *)&v39 + 1);
  if (*((_QWORD *)&v39 + 1))
  {
    v29 = v40;
    __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8))(a1, a2, v28, v29);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  }
  return sub_1BA65DB80((uint64_t)&v38, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
}

void sub_1BABB2D98()
{
  __asm { BR              X10 }
}

void sub_1BABB2DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1BABB2684(a1, a2, a3, a4, a5);
}

void sub_1BABB2DE0()
{
  sub_1BABB28A0();
  JUMPOUT(0x1BABB2DD0);
}

uint64_t sub_1BABB2E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatAnimationNodeKeyPathAnimation.bind(binder:context:)(a1, a2, a3);
}

uint64_t sub_1BABB2E18(_QWORD *a1, uint64_t a2)
{
  return FormatAnimationNodeSpringAnimation.bind(binder:context:)(a1, a2);
}

uint64_t FormatAnimationNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t *i;
  uint64_t v11;

  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 72);
  if (!v6 || (swift_bridgeObjectRetain(), sub_1BAB758D0(a1, a2, v6), result = swift_bridgeObjectRelease(), !v3))
  {
    result = swift_beginAccess();
    v8 = *(_QWORD *)(v2 + 88);
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (i = (uint64_t *)(v8 + 72); ; i += 7)
      {
        v11 = *i;
        if (*i)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAB758D0(a1, a2, v11);
          if (v3)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (!--v9)
          return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1BABB2F80(uint64_t a1, uint64_t a2)
{
  return FormatAnimationNodeStyle.bind(binder:context:)(a1, a2);
}

uint64_t FormatAnimationNodeStyle.Selector.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 40);
  if (v3)
    return sub_1BAB758D0(result, a2, v3);
  return result;
}

uint64_t sub_1BABB2FBC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 40);
  if (v3)
    return sub_1BAB758D0(result, a2, v3);
  return result;
}

uint64_t sub_1BABB2FD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char v12;

  v12 = a4;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v6 = *((_QWORD *)&v10 + 1);
    v7 = v11;
    __swift_project_boxed_opaque_existential_1(&v9, *((uint64_t *)&v10 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(a1, a2, v6, v7);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  }
  else
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
    return sub_1BA65DB80((uint64_t)&v9, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

void sub_1BABB30C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v8;
  uint64_t v9;
  char v10;

  if (a6)
  {
    if (a6 == 1)
      return;
    v8 = a4;
    v9 = a5;
    v10 = 2;
  }
  else
  {
    if ((~a4 & 0xF000000000000007) == 0)
      return;
    sub_1BA856DD0(a4, a5, 0);
    sub_1BA5E7FF4(a4);
    FormatTextContent.bind(binder:context:)();
    sub_1BA5E800C(a4);
    v8 = a4;
    v9 = a5;
    v10 = 0;
  }
  sub_1BA7EDFFC(v8, v9, v10);
}

uint64_t FormatArraySubscript.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BABDCB74(a1, a2, a3);
}

uint64_t sub_1BABB31A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatSelectorValueSelector.bind(binder:context:)(a1, a2, a3);
}

uint64_t FormatBundleImage.bind(binder:context:)()
{
  uint64_t v0;
  int v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255)
  {
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    sub_1BA76F534(v3, v4, v1);
    FormatBundleImageSize.bind(binder:context:)();
    return sub_1BA76F520(v3, v4, v1);
  }
  return result;
}

uint64_t FormatRemoteImage.bind(binder:context:)()
{
  return sub_1BA54A3B0();
}

void sub_1BABB326C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;

  v5 = v4;
  v65 = a1;
  v9 = type metadata accessor for FormatOption();
  v61 = *(_QWORD *)(v9 - 8);
  v62 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v12);
  MEMORY[0x1E0C80A78](v13);
  v60 = (uint64_t)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v59 = (uint64_t)&v52 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v52 - v18;
  v20 = sub_1BB86EB00();
  v63 = *(_QWORD *)(v20 - 8);
  v64 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(a3 + 16);
  if (v23)
  {
    v54 = v19;
    v55 = a4;
    v66 = a2;
    v56 = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
    v57 = v11;
    swift_bridgeObjectRetain();
    v58 = a3;
    v24 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v26 = *(v24 - 1);
      v25 = *v24;
      v67 = v26;
      swift_retain();
      swift_retain_n();
      sub_1BA7049A8();
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release_n();
        return;
      }
      swift_release();
      if ((sub_1BB86EAF4() & 1) == 0)
      {
        v67 = v26;
        swift_retain();
        FormatExpression.bind(binder:context:)();
        swift_release();
        if (v25 < 0)
        {
          if (*(unsigned __int8 *)((v25 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) < 2u)
            goto LABEL_15;
          v29 = *(_QWORD *)((v25 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
          v30 = *(_QWORD *)((v25 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
          v31 = *(_QWORD *)((v25 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
          v67 = v31;
          v68 = v29;
          v69 = v30;
          v70 = 6;
          swift_retain();
          sub_1BA896AAC(v31, v29, v30, 2);
          v32 = sub_1BB6B84D4(&v67, (char *)&v70);
          v33 = v31;
          v34 = v60;
          v52 = v33;
          v53 = v29;
          FormatOptionCollection.subscript.getter(v33, v29, v60);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v34, 1, v62) == 1)
          {
            sub_1BA502AD0(v34, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
            if ((*(_BYTE *)(v66 + 48) & 1) == 0)
            {
              type metadata accessor for FormatLayoutError();
              sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
              swift_allocError();
              v45 = v53;
              *v46 = v52;
              v46[1] = v45;
              swift_storeEnumTagMultiPayload();
              swift_bridgeObjectRetain();
              swift_willThrow();
              goto LABEL_28;
            }
            v35 = 1;
            v36 = v59;
          }
          else
          {
            v37 = v57;
            sub_1BA5193C4(v34, (uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v67 = v37[2];
            FormatOptionValue.type.getter();
            if ((sub_1BA713E54(v70, v32) & 1) == 0)
            {
              v66 = type metadata accessor for FormatDerivedDataError();
              sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
              swift_allocError();
              v48 = v47;
              v49 = v57;
              v50 = v57[1];
              v65 = *v57;
              v67 = v57[2];
              swift_bridgeObjectRetain();
              FormatOptionValue.type.getter();
              v51 = v70;
              *(_QWORD *)v48 = v65;
              *(_QWORD *)(v48 + 8) = v50;
              *(_BYTE *)(v48 + 16) = v51;
              *(_QWORD *)(v48 + 24) = v32;
              swift_storeEnumTagMultiPayload();
              swift_bridgeObjectRetain();
              swift_willThrow();
              sub_1BA4A2E80((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
LABEL_28:
              swift_release();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v64);
              swift_bridgeObjectRelease();
              swift_release();
LABEL_29:
              swift_release();
              return;
            }
            v36 = v59;
            sub_1BA5193C4((uint64_t)v57, v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v35 = 0;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v36, v35, 1, v62);
          sub_1BA502AD0(v36, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        }
        else
        {
          v28 = *(_QWORD *)(v25 + 16);
          v27 = *(_QWORD *)(v25 + 24);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1BABB326C(v65, v66, v28, v27);
          swift_release();
        }
        swift_release();
        swift_bridgeObjectRelease();
      }
LABEL_15:
      v38 = sub_1BB86EAE8();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v64);
      swift_release();
      swift_release();
      if ((v38 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return;
      }
      v24 += 2;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        a2 = v66;
        v19 = v54;
        a4 = v55;
        break;
      }
    }
  }
  if (a4 < 0)
  {
    if (*(unsigned __int8 *)(a4 + 40) >= 2u)
    {
      v43 = *(_QWORD *)((a4 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      v42 = *(_QWORD *)((a4 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
      v67 = *(_QWORD *)(a4 + 16);
      v41 = v67;
      v68 = v43;
      v69 = v42;
      v70 = 6;
      swift_retain();
      sub_1BA896AAC(v41, v43, v42, 2);
      v44 = sub_1BB6B84D4(&v67, (char *)&v70);
      if (v5)
        goto LABEL_29;
      sub_1BB3757A0(v41, v43, v44, 1, (uint64_t)v19);
      sub_1BA502AD0((uint64_t)v19, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v39 = *(_QWORD *)(a4 + 16);
    v40 = *(_QWORD *)(a4 + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BABB326C(v65, a2, v39, v40);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BABB3910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v39[14];
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v5 = v4;
  v62 = a1;
  v51 = type metadata accessor for FormatOption();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v44 = (char *)v39 - v12;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v13);
  MEMORY[0x1E0C80A78](v14);
  v43 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v47 = (char *)v39 - v17;
  MEMORY[0x1E0C80A78](v18);
  v45 = (char *)v39 - v19;
  MEMORY[0x1E0C80A78](v20);
  v42 = (char *)v39 - v21;
  MEMORY[0x1E0C80A78](v22);
  v48 = (char *)v39 - v23;
  MEMORY[0x1E0C80A78](v24);
  v46 = (char *)v39 - v25;
  v49 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v49);
  v52 = (char *)v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v39 - v28;
  v58 = sub_1BB86EB00();
  v30 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v32 = (char *)v39 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = a3;
  v55 = *(_QWORD *)(a3 + 16);
  if (v55)
  {
    v41 = v29;
    v60 = a2;
    v40 = a4;
    v39[12] = v10;
    v39[13] = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
    v56 = v53 + 32;
    swift_bridgeObjectRetain();
    v33 = 0;
    v57 = v30;
    v54 = v32;
    while (1)
    {
      v59 = v33;
      v34 = (uint64_t *)(v56 + 16 * v33);
      v35 = v34[1];
      v63 = *v34;
      v36 = v63;
      v61 = v35 & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_retain_n();
      sub_1BA7049A8();
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release_n();
      }
      swift_release();
      if ((sub_1BB86EAF4() & 1) == 0)
      {
        v63 = v36;
        swift_retain();
        FormatExpression.bind(binder:context:)();
        swift_release();
        __asm { BR              X9 }
      }
      v37 = sub_1BB86EAE8();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v32, v58);
      swift_release();
      swift_release();
      if ((v37 & 1) != 0)
        return swift_bridgeObjectRelease();
      v33 = v59 + 1;
      if (v59 + 1 == v55)
      {
        swift_bridgeObjectRelease();
        a4 = v40;
        a2 = v60;
        goto LABEL_11;
      }
    }
  }
  else
  {
LABEL_11:
    swift_retain();
    sub_1BABD3FF4(v62, a2, a4);
    return swift_release();
  }
}

uint64_t sub_1BABBA838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  int v46;
  char *v47;
  char v48;
  uint64_t v50;
  _QWORD v51[10];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;

  v68 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1E0C80A78](v68);
  v59 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v58 = (char *)v51 - v14;
  MEMORY[0x1E0C80A78](v15);
  v69 = (char *)v51 - v16;
  MEMORY[0x1E0C80A78](v17);
  v57 = (char *)v51 - v18;
  v65 = type metadata accessor for FormatOption();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v20 = (char *)v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v21);
  MEMORY[0x1E0C80A78](v22);
  v66 = (char *)v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v56 = (char *)v51 - v25;
  MEMORY[0x1E0C80A78](v26);
  v62 = (char *)v51 - v27;
  MEMORY[0x1E0C80A78](v28);
  v61 = (char *)v51 - v29;
  MEMORY[0x1E0C80A78](v30);
  v60 = (char *)v51 - v31;
  v78 = sub_1BB86EB00();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v74 = (char *)v51 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)v51 - v34;
  v72 = *(_QWORD *)(a3 + 16);
  if (v72)
  {
    v51[9] = v20;
    v52 = a6;
    v53 = a5;
    v54 = a4;
    v55 = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
    v36 = a3 + 32;
    v67 = a3;
    swift_bridgeObjectRetain();
    v37 = 0;
    v70 = v35;
    v83 = a1;
    v84 = a2;
    v63 = a3 + 32;
    while (1)
    {
      v75 = v37;
      v38 = (uint64_t *)(v36 + 32 * v37);
      v39 = *v38;
      v40 = v38[1];
      v42 = v38[2];
      v41 = v38[3];
      *(_QWORD *)&v86 = v39;
      v73 = v41;
      v79 = v41 & 0xFFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_retain_n();
      swift_retain();
      v82 = v42;
      swift_bridgeObjectRetain();
      v43 = v85;
      sub_1BA7049A8();
      v85 = v43;
      if (v43)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release_n();
      }
      swift_release();
      if ((sub_1BB86EAF4() & 1) == 0)
        break;
      v48 = sub_1BB86EAE8();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v35, v78);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if ((v48 & 1) != 0)
        return swift_bridgeObjectRelease();
      v37 = v75 + 1;
      if (v75 + 1 == v72)
      {
        swift_bridgeObjectRelease();
        a4 = v54;
        a5 = v53;
        a6 = v52;
        goto LABEL_15;
      }
    }
    *(_QWORD *)&v86 = v39;
    swift_retain();
    v44 = v85;
    FormatExpression.bind(binder:context:)();
    v85 = v44;
    if (!v44)
    {
      swift_release();
      v80 = *(_QWORD *)(v40 + 24);
      v81 = *(_QWORD *)(v40 + 32);
      v45 = *(unsigned __int8 *)(v40 + 40);
      v76 = v40;
      if (*(_BYTE *)(v40 + 41))
        v46 = 4;
      else
        v46 = 0;
      v47 = (char *)&loc_1BABBAC1C + *((int *)qword_1BABBF7C0 + (v46 & 0xFFFFFFFC | (v45 >> 2) & 3));
      v71 = v39 & 0xFFFFFFFFFFFFFFFLL;
      __asm { BR              X9 }
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v35, v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_15:
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v50 = v85;
    sub_1BAB6F320(a1, a2, a4, a5, a6, (void (*)(uint64_t, uint64_t))FormatTextContent.bind(binder:context:));
    v85 = v50;
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1BABBF92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  _QWORD v36[9];
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v52 = a1;
  v8 = type metadata accessor for FormatOption();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v36 - v12;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v14);
  MEMORY[0x1E0C80A78](v15);
  v40 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v39 = (char *)v36 - v18;
  MEMORY[0x1E0C80A78](v19);
  v42 = (char *)v36 - v20;
  MEMORY[0x1E0C80A78](v21);
  v41 = (char *)v36 - v22;
  v46 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v46);
  v47 = (char *)v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v48 = (char *)v36 - v25;
  v26 = sub_1BB86EB00();
  v49 = *(_QWORD *)(v26 - 8);
  v50 = v26;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v36 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)(a3 + 16);
  if (v29)
  {
    v51 = a2;
    v36[8] = v13;
    v37 = a4;
    v36[7] = v10;
    v53 = v28;
    v38 = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
    swift_bridgeObjectRetain();
    v43 = a3;
    v30 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v32 = *(v30 - 1);
      v31 = *v30;
      v54 = v32;
      swift_retain();
      swift_retain_n();
      sub_1BA7049A8();
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release_n();
      }
      swift_release();
      if ((sub_1BB86EAF4() & 1) == 0)
      {
        v54 = v32;
        swift_retain();
        FormatExpression.bind(binder:context:)();
        swift_release();
        __asm { BR              X9 }
      }
      v33 = v53;
      v34 = sub_1BB86EAE8();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v50);
      swift_release();
      swift_release();
      if ((v34 & 1) != 0)
        return swift_bridgeObjectRelease();
      v30 += 2;
      if (!--v29)
      {
        swift_bridgeObjectRelease();
        a4 = v37;
        a2 = v51;
        goto LABEL_11;
      }
    }
  }
  else
  {
LABEL_11:
    swift_retain();
    sub_1BABD48C8(v52, a2, a4);
    return swift_release();
  }
}

uint64_t sub_1BABC1DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  _QWORD v25[2];
  void (*v26)(uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v26 = a5;
  v9 = sub_1BB86EB00();
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v25[0] = a4;
    swift_bridgeObjectRetain();
    v25[1] = a3;
    v13 = (uint64_t *)(a3 + 40);
    v27 = v11;
    while (1)
    {
      v30 = v12;
      v14 = a2;
      v16 = *(v13 - 1);
      v15 = *v13;
      v32 = v16;
      swift_retain();
      swift_retain_n();
      v17 = a1;
      v18 = v14;
      v19 = v31;
      sub_1BA7049A8();
      v31 = v19;
      if (v19)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release_n();
      }
      swift_release();
      if ((sub_1BB86EAF4() & 1) != 0)
      {
        a2 = v18;
        a1 = v17;
      }
      else
      {
        v32 = v16;
        swift_retain();
        v20 = v18;
        v21 = v31;
        FormatExpression.bind(binder:context:)();
        if (v21)
        {
          swift_release();
          (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
          swift_bridgeObjectRelease();
          swift_release();
          return swift_release();
        }
        swift_release();
        v32 = v15;
        swift_retain();
        v26(v17, v18);
        a1 = v17;
        a2 = v20;
        v31 = 0;
        swift_release();
      }
      v22 = v27;
      v23 = sub_1BB86EAE8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v29);
      swift_release();
      swift_release();
      if ((v23 & 1) != 0)
        return swift_bridgeObjectRelease();
      v13 += 2;
      v12 = v30 - 1;
      if (v30 == 1)
      {
        swift_bridgeObjectRelease();
        a4 = v25[0];
        break;
      }
    }
  }
  v32 = a4;
  swift_retain();
  v26(a1, a2);
  return swift_release();
}

uint64_t sub_1BABC2028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v8 = sub_1BB86EB00();
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a3 + 16);
  if (v11)
  {
    v25 = a4;
    swift_bridgeObjectRetain();
    v26 = a3;
    v27 = v10;
    v12 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v30 = v11;
      v13 = a2;
      v15 = *(v12 - 1);
      v14 = *v12;
      v32 = v15;
      swift_retain();
      swift_retain_n();
      v16 = a1;
      v17 = v13;
      v18 = v31;
      sub_1BA7049A8();
      v31 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release_n();
      }
      swift_release();
      if ((sub_1BB86EAF4() & 1) != 0)
      {
        a2 = v17;
        a1 = v16;
      }
      else
      {
        v32 = v15;
        swift_retain();
        v19 = v17;
        v20 = v31;
        FormatExpression.bind(binder:context:)();
        if (v20)
        {
          swift_release();
          (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
          swift_bridgeObjectRelease();
          swift_release();
          return swift_release();
        }
        swift_release();
        v32 = v14;
        swift_retain();
        FormatVideoNodeContent.bind(binder:context:)(v16, v17);
        a1 = v16;
        a2 = v19;
        v31 = 0;
        swift_release();
      }
      v21 = v27;
      v22 = sub_1BB86EAE8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v29);
      swift_release();
      swift_release();
      if ((v22 & 1) != 0)
        return swift_bridgeObjectRelease();
      v12 += 2;
      v11 = v30 - 1;
      if (v30 == 1)
      {
        swift_bridgeObjectRelease();
        a4 = v25;
        break;
      }
    }
  }
  v32 = a4;
  swift_retain();
  FormatVideoNodeContent.bind(binder:context:)(a1, a2);
  return swift_release();
}

unint64_t sub_1BABC2298(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v8 = sub_1BB86EB00();
  v21 = *(_QWORD *)(v8 - 8);
  v22 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11)
  {
LABEL_11:
    v25 = a4;
    sub_1BA705894(a4);
    FormatTextSize.bind(binder:context:)(a1, a2);
    return sub_1BA7058C4(a4);
  }
  v20[0] = a4;
  swift_bridgeObjectRetain();
  v20[1] = a3;
  v12 = (unint64_t *)(a3 + 40);
  while (1)
  {
    v23 = v11;
    v13 = a2;
    v14 = *(v12 - 1);
    v15 = *v12;
    v25 = v14;
    swift_retain();
    sub_1BA705894(v15);
    swift_retain();
    v16 = v24;
    sub_1BA7049A8();
    swift_release();
    v24 = v16;
    if (v16)
    {
      swift_release();
      sub_1BA7058C4(v15);
      return swift_bridgeObjectRelease();
    }
    if ((sub_1BB86EAF4() & 1) != 0)
    {
      a2 = v13;
      goto LABEL_8;
    }
    v25 = v14;
    swift_retain();
    a2 = v13;
    v17 = v24;
    FormatExpression.bind(binder:context:)();
    if (v17)
      break;
    swift_release();
    v25 = v15;
    sub_1BA705894(v15);
    FormatTextSize.bind(binder:context:)(a1, v13);
    v24 = 0;
    sub_1BA7058C4(v15);
LABEL_8:
    v18 = sub_1BB86EAE8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v22);
    swift_release();
    sub_1BA7058C4(v15);
    if ((v18 & 1) != 0)
      return swift_bridgeObjectRelease();
    v12 += 2;
    v11 = v23 - 1;
    if (v23 == 1)
    {
      swift_bridgeObjectRelease();
      a4 = v20[0];
      goto LABEL_11;
    }
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v22);
  swift_release();
  sub_1BA7058C4(v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BABC2508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v8 = sub_1BB86EB00();
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a3 + 16);
  if (v11)
  {
    v25 = a4;
    swift_bridgeObjectRetain();
    v26 = a3;
    v27 = v10;
    v12 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v30 = v11;
      v13 = a2;
      v15 = *(v12 - 1);
      v14 = *v12;
      v32 = v15;
      swift_retain();
      swift_retain_n();
      v16 = a1;
      v17 = v13;
      v18 = v31;
      sub_1BA7049A8();
      v31 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release_n();
      }
      swift_release();
      if ((sub_1BB86EAF4() & 1) != 0)
      {
        a2 = v17;
        a1 = v16;
      }
      else
      {
        v32 = v15;
        swift_retain();
        v19 = v17;
        v20 = v31;
        FormatExpression.bind(binder:context:)();
        if (v20)
        {
          swift_release();
          (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
          swift_bridgeObjectRelease();
          swift_release();
          return swift_release();
        }
        swift_release();
        v32 = v14;
        swift_retain();
        FormatAsyncImageContent.bind(binder:context:)(v16, v17);
        a1 = v16;
        a2 = v19;
        v31 = 0;
        swift_release();
      }
      v21 = v27;
      v22 = sub_1BB86EAE8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v29);
      swift_release();
      swift_release();
      if ((v22 & 1) != 0)
        return swift_bridgeObjectRelease();
      v12 += 2;
      v11 = v30 - 1;
      if (v30 == 1)
      {
        swift_bridgeObjectRelease();
        a4 = v25;
        break;
      }
    }
  }
  v32 = a4;
  swift_retain();
  FormatAsyncImageContent.bind(binder:context:)(a1, a2);
  return swift_release();
}

uint64_t sub_1BABC277C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  swift_retain();
  FormatMicaNodeContent.bind(binder:context:)(a1, a2);
  result = swift_release();
  if (!v2)
  {
    swift_retain();
    FormatMicaNodeContent.bind(binder:context:)(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t FormatUserInterfaceValue.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, double);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, double);
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v3;
  v7 = a1;
  v31 = a3;
  v8 = *(_QWORD *)(a3 + 16);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v14((char *)&v24 - v15, v3, v8, v12);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v25 = v14;
    v27 = v3;
    v16 = a2;
    v17 = *((_QWORD *)&v29 + 1);
    v18 = v30;
    __swift_project_boxed_opaque_existential_1(&v28, *((uint64_t *)&v29 + 1));
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8);
    v26 = v7;
    v19(v7, v16, v17, v18);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    if (v4)
      return result;
    a2 = v16;
    v7 = v26;
    v5 = v27;
    v14 = v25;
  }
  else
  {
    v30 = 0;
    v28 = 0u;
    v29 = 0u;
    sub_1BA65DB80((uint64_t)&v28, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
  ((void (*)(char *, uint64_t, uint64_t))v14)(v10, v5 + *(int *)(v31 + 36), v8);
  if (swift_dynamicCast())
  {
    v21 = a2;
    v22 = *((_QWORD *)&v29 + 1);
    v23 = v30;
    __swift_project_boxed_opaque_existential_1(&v28, *((uint64_t *)&v29 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(v7, v21, v22, v23);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  }
  else
  {
    v30 = 0;
    v28 = 0u;
    v29 = 0u;
    return sub_1BA65DB80((uint64_t)&v28, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

uint64_t FormatStyleImage.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  swift_retain();
  FormatAsyncImageContent.bind(binder:context:)();
  result = swift_release();
  if (!v2)
    return FormatImageNodeStyle.bind(binder:context:)(a1, a2);
  return result;
}

uint64_t sub_1BABC2AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BABC2B1C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2AD4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAB72EC8);
}

uint64_t sub_1BABC2AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BABC2B1C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2AF8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAB730A0);
}

uint64_t sub_1BABC2B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v8 = v6;
  if ((a3 & 0x8000000000000000) == 0)
    goto LABEL_3;
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(a3 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  a5(a1, a2, v13, v14);
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v8)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    a6(a1, a2, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BABC2BF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v9;
  uint64_t v10;
  unint64_t result;

  if (a3 >> 62 != 1)
    goto LABEL_3;
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(a3 + 24);
  sub_1BA67D3F4(a3);
  sub_1BA67D3F4(v9);
  swift_bridgeObjectRetain();
  sub_1BABC2BF8(a1, a2, v9, v10);
  sub_1BA6EEDB4(v9);
  swift_bridgeObjectRelease();
  result = sub_1BA6EEDB4(a3);
  if (!v4)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    sub_1BAB74164(a1, a2, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABC2CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = a3;
  sub_1BA4AD288(0, &qword_1EF2B0E50, (uint64_t)&type metadata for FormatSourceItemTipTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  swift_bridgeObjectRetain();
  if (swift_dynamicCast())
  {
    v8 = *((_QWORD *)&v12 + 1);
    v9 = v13;
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, v8, v9);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
    if (v4)
      return result;
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    sub_1BA65DB80((uint64_t)&v11, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
  swift_bridgeObjectRetain();
  sub_1BAB75614(a1, a2, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BABC2E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BABC2B1C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2E14, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAB7A2E8);
}

uint64_t sub_1BABC2E38(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char v14;

  v14 = a3 & 1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v8 = *((_QWORD *)&v12 + 1);
    v9 = v13;
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, v8, v9);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
    if (v4)
      return result;
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    sub_1BA65DB80((uint64_t)&v11, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
  swift_bridgeObjectRetain();
  sub_1BABB05F0(a1, a2, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BABC2F64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21[3];
  char v22;

  v5 = v4;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21[-1] - v11;
  if (!(a3 >> 62))
  {
    if ((*(_BYTE *)(a3 + 40) & 1) != 0)
    {
      v17 = *(_QWORD *)(a3 + 24);
      v16 = *(_QWORD *)(a3 + 32);
      v21[0] = *(_QWORD *)(a3 + 16);
      v18 = v21[0];
      v21[1] = v17;
      v21[2] = v16;
      v22 = 6;
      swift_retain();
      sub_1BAC68C24(v18, v17, v16, 1);
      v19 = sub_1BB6B84D4(v21, &v22);
      if (v5)
        return swift_release();
      sub_1BB3757A0(v18, v17, v19, 1, (uint64_t)v12);
      sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_release();
      swift_bridgeObjectRelease();
    }
    goto LABEL_9;
  }
  if (a3 >> 62 == 1)
    goto LABEL_9;
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(a3 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BABC2F64(a1, a2, v13, v14);
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRetain();
    sub_1BAB95F20(a1, a2, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABC3158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t result;

  swift_retain();
  a5(a1, a2);
  result = swift_release();
  if (!v6)
  {
    swift_bridgeObjectRetain();
    a6(a1, a2, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BABC31F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

unint64_t sub_1BABC3248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 16);
  if (v5)
  {
    v8 = v1;
    sub_1BA739250(v4);
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v0)
        break;
      ++v6;
      swift_release();
      if (v5 == v6)
      {
        swift_bridgeObjectRelease();
        sub_1BA6F5D74(v4);
        v1 = v8;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1BA6F5D74(v4);
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRetain();
    sub_1BABAC9F4(v3, v2, v1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BABC33C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  swift_retain();
  a5(a1, a2);
  result = swift_release();
  if (!v5)
  {
    v11 = *(_QWORD *)(a4 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      v12 = a4 + 48;
      do
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        a5(a1, a2);
        swift_bridgeObjectRelease();
        swift_release_n();
        v12 += 24;
        --v11;
      }
      while (v11);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BABC34F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD, double))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD, double);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);

  v10 = v5;
  v13 = a3(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))((char *)&v23 - v16, v10, v13, v14);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v26 = a4;
    v17 = a5;
    v19 = *((_QWORD *)&v24 + 1);
    v18 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8))(a1, a2, v19, v18);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
    if (v6)
      return result;
    a5 = v17;
    v21 = v26(0);
  }
  else
  {
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    sub_1BA65DB80((uint64_t)&v23, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    v21 = a4(0);
  }
  v22 = *(_QWORD *)(v10 + *(int *)(v21 + 36));
  swift_bridgeObjectRetain();
  sub_1BABB03EC(a1, a2, v22, a3, a5);
  return swift_bridgeObjectRelease();
}

uint64_t FormatSelectorValue.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v8 = *(_QWORD *)(a3 + 16);
  v9 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v8, v9);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v12 = *((_QWORD *)&v19 + 1);
    v13 = v20;
    __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(a1, a2, v12, v13);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
    if (v4)
      return result;
  }
  else
  {
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
    sub_1BA65DB80((uint64_t)&v18, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
  v15 = sub_1BA647A38(a3);
  v17 = type metadata accessor for FormatSelectorValueSelector(0, v8, *(_QWORD *)(a3 + 24), v16);
  swift_bridgeObjectRetain();
  Array<A>.bind(binder:context:)(a1, a2, v15, v17, (uint64_t)&protocol witness table for FormatSelectorValueSelector<A>);
  return swift_bridgeObjectRelease();
}

void sub_1BABC3828()
{
  FormatAsyncImageContent.bind(binder:context:)();
}

uint64_t FormatAuxiliaryNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v20 = a2;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = *(_QWORD *)(v2 + 32);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v17 = v2;
    v18 = v6;
    swift_bridgeObjectRetain_n();
    v19 = v9;
    v11 = (_QWORD *)(v9 + 64);
    while (1)
    {
      v12 = *v11;
      v21 = *((_OWORD *)v11 - 2);
      v22 = *((_OWORD *)v11 - 1);
      v23 = v12;
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(a1, v20);
      if (v3)
        break;
      v11 += 5;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v10)
      {
        swift_bridgeObjectRelease_n();
        v2 = v17;
        v6 = v18;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    result = *(_QWORD *)(v2 + 48);
    v14 = *(_QWORD *)(result + 16);
    if (v14)
    {
      v15 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v16 = *(_QWORD *)(v6 + 72);
      v19 = *(_QWORD *)(v2 + 48);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v24 = *((_QWORD *)v8 + 2);
        swift_retain();
        FormatOptionValue.bind(binder:context:)(a1, v20);
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v15 += v16;
        if (!--v14)
          return swift_bridgeObjectRelease_n();
      }
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

void FormatBackground.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BABC3AB4()
{
  swift_retain();
  FormatColor.bind(binder:context:)();
  return swift_release();
}

void FormatColor.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BABC4030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  *(_BYTE *)(v3 - 65) = *(_BYTE *)(a1 + 16);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *((_QWORD *)&v8 + 1);
    v5 = v9;
    __swift_project_boxed_opaque_existential_1(&v7, *((uint64_t *)&v8 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v2, v1, v4, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  }
  else
  {
    v9 = 0;
    v7 = 0u;
    v8 = 0u;
    return sub_1BA65DB80((uint64_t)&v7, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

uint64_t FormatGradient.bind(binder:context:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = v0[6];
  v3 = *(_QWORD *)(*v0 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    while (1)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v1)
        break;
      ++v4;
      swift_release();
      if (v3 == v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
LABEL_6:
    if (v2)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      FormatSizeEquation.bind(binder:context:)();
      return sub_1BA5DCC4C(v2);
    }
  }
  return result;
}

uint64_t FormatRadialGradient.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    while (1)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v1)
        break;
      ++v3;
      swift_release();
      if (v2 == v3)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void FormatShine.bind(binder:context:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BABC4744()
{
  uint64_t v0;

  swift_retain();
  FormatColor.bind(binder:context:)();
  return sub_1BA756FBC(v0);
}

uint64_t FormatSplitBackground.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = *v0;
  v2 = v0[1];
  v24 = v0[3];
  v25 = v0[2];
  v22 = v0[5];
  v23 = v0[4];
  v21 = v0[6];
  v28 = v0[7];
  v26 = v0[9];
  v27 = v0[8];
  v20 = *((_BYTE *)v0 + 80);
  v14 = v0[13];
  v15 = v0[12];
  v12 = v0[15];
  v13 = v0[14];
  v18 = v0[16];
  v19 = v0[11];
  v16 = v0[18];
  v17 = v0[17];
  v11 = *((_BYTE *)v0 + 152);
  v4 = *(_QWORD *)(*v0 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    v5 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v1)
        {
          sub_1BA72C46C(v6, 0);
          sub_1BA72C46C(v6, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
  }
  v7 = *(_QWORD *)(v2 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain_n();
    v8 = (_BYTE *)(v2 + 40);
    while (1)
    {
      if ((*v8 & 1) == 0)
      {
        v9 = *((_QWORD *)v8 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v9, 0);
        sub_1BA72C46C(v9, 0);
        if (v1)
          return swift_bridgeObjectRelease_n();
      }
      v8 += 16;
      if (!--v7)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_16;
      }
    }
  }
  else
  {
LABEL_16:
    sub_1BAA8C5C0(v25, v24, v23, v22, v21, v28, v27, v26, v20);
    FormatSplitBackgroundSide.bind(binder:context:)();
    result = sub_1BAA4E044(v25, v24, v23, v22, v21, v28, v27, v26, v20);
    if (!v1)
    {
      sub_1BAA8C5C0(v19, v15, v14, v13, v12, v18, v17, v16, v11);
      FormatSplitBackgroundSide.bind(binder:context:)();
      return sub_1BAA4E044(v19, v15, v14, v13, v12, v18, v17, v16, v11);
    }
  }
  return result;
}

uint64_t FormatImageBackground.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;

  v6 = *(_QWORD *)(v2 + 8);
  swift_retain();
  FormatAsyncImageContent.bind(binder:context:)();
  result = swift_release();
  if (!v3)
  {
    if (v6)
      return FormatImageNodeStyle.bind(binder:context:)(a1, a2);
  }
  return result;
}

uint64_t FormatMicaBackground.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[144];
  uint64_t v9[19];
  _BYTE v10[144];

  v6 = *v2;
  sub_1BA760F3C((uint64_t)(v2 + 1), (uint64_t)v10, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  v9[18] = v6;
  swift_retain();
  FormatMicaNodeContent.bind(binder:context:)(a1, a2);
  if (v3)
    return swift_release();
  swift_release();
  sub_1BA760F3C((uint64_t)v10, (uint64_t)v9, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  result = sub_1BA896370(v9);
  if ((_DWORD)result != 1)
  {
    sub_1BA760F3C((uint64_t)v10, (uint64_t)v8, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA89652C((uint64_t)v8);
    FormatMediaTiming.bind(binder:context:)();
    return sub_1BAC653DC((uint64_t)v10);
  }
  return result;
}

void sub_1BABC4CB0()
{
  FormatBackground.bind(binder:context:)();
}

uint64_t FormatBezierPath.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  result = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    v3 = (char *)(swift_bridgeObjectRetain() + 80);
    while (1)
    {
      v4 = *((_QWORD *)v3 - 6);
      v5 = *((_QWORD *)v3 - 5);
      v6 = *((_QWORD *)v3 - 4);
      v7 = *((_QWORD *)v3 - 3);
      v8 = *((_QWORD *)v3 - 2);
      v9 = *((_QWORD *)v3 - 1);
      v10 = *v3;
      v11 = v2;
      sub_1BAC6607C(v4, v5, v6, v7, v8, v9, *v3);
      FormatBezierPathComponent.bind(binder:context:)();
      if (v12)
        break;
      v12 = 0;
      v3 += 56;
      sub_1BAC66130(v4, v5, v6, v7, v8, v9, v10);
      --v2;
      if (v11 == 1)
        return swift_bridgeObjectRelease();
    }
    sub_1BAC66130(v4, v5, v6, v7, v8, v9, v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABC4DF0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BAB757B0(a1, a2, *v2);
}

uint64_t FormatBezierPathArcComponent.bind(binder:context:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = *v0;
  v2 = v0[1];
  v22 = v0[3];
  v23 = v0[4];
  v24 = v0[2];
  v4 = *(_QWORD *)(*v0 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v5 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        v7 = v6;
        if (v1)
        {
LABEL_39:
          sub_1BA72C46C(v7, 0);
          sub_1BA72C46C(v6, 0);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
    v8 = *(_QWORD *)(v2 + 16);
    if (v8)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = *(_QWORD *)(v2 + 16);
    if (v8)
    {
LABEL_11:
      swift_bridgeObjectRetain_n();
      v9 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v9 & 1) == 0)
        {
          v6 = *((_QWORD *)v9 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          v7 = v6;
          if (v1)
            goto LABEL_39;
          sub_1BA72C46C(v6, 0);
          sub_1BA72C46C(v6, 0);
        }
        v9 += 16;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v24 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain_n();
    v12 = (_BYTE *)(v24 + 40);
    v14 = v22;
    v13 = v23;
    do
    {
      if ((*v12 & 1) == 0)
      {
        v15 = *((_QWORD *)v12 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v1)
        {
          sub_1BA72C46C(v15, 0);
          sub_1BA72C46C(v15, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v15, 0);
        sub_1BA72C46C(v15, 0);
      }
      v12 += 16;
      --v11;
    }
    while (v11);
    result = swift_bridgeObjectRelease_n();
    v16 = *(_QWORD *)(v22 + 16);
    if (!v16)
      goto LABEL_33;
LABEL_27:
    swift_bridgeObjectRetain_n();
    v17 = (_BYTE *)(v14 + 40);
    while (1)
    {
      if ((*v17 & 1) == 0)
      {
        v18 = *((_QWORD *)v17 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v18, 0);
        sub_1BA72C46C(v18, 0);
        if (v1)
          return swift_bridgeObjectRelease_n();
      }
      v17 += 16;
      if (!--v16)
      {
        result = swift_bridgeObjectRelease_n();
        goto LABEL_33;
      }
    }
  }
  v14 = v22;
  v13 = v23;
  v16 = *(_QWORD *)(v22 + 16);
  if (v16)
    goto LABEL_27;
LABEL_33:
  v19 = *(_QWORD *)(v13 + 16);
  if (!v19)
    return result;
  swift_bridgeObjectRetain_n();
  v20 = (_BYTE *)(v13 + 40);
  do
  {
    if ((*v20 & 1) == 0)
    {
      v21 = *((_QWORD *)v20 - 1);
      swift_retain_n();
      FormatFloat.bind(binder:context:)();
      sub_1BA72C46C(v21, 0);
      sub_1BA72C46C(v21, 0);
      if (v1)
        break;
    }
    v20 += 16;
    --v19;
  }
  while (v19);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BABC51C8()
{
  return FormatBezierPathArcComponent.bind(binder:context:)();
}

void FormatBezierPathComponent.bind(binder:context:)()
{
  __asm { BR              X14 }
}

uint64_t sub_1BABC5230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    v4 = (_BYTE *)(v2 + 40);
    while (1)
    {
      if ((*v4 & 1) == 0)
      {
        v5 = *((_QWORD *)v4 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v5, 0);
        sub_1BA72C46C(v5, 0);
        if (v0)
          break;
      }
      v4 += 16;
      if (!--v3)
      {
        result = swift_bridgeObjectRelease_n();
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    v7 = *(_QWORD *)(v1 + 16);
    if (!v7)
      return result;
    swift_bridgeObjectRetain_n();
    v8 = (_BYTE *)(v1 + 40);
    do
    {
      if ((*v8 & 1) == 0)
      {
        v9 = *((_QWORD *)v8 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v9, 0);
        sub_1BA72C46C(v9, 0);
        if (v0)
          break;
      }
      v8 += 16;
      --v7;
    }
    while (v7);
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t FormatBezierPathCurveComponent.bind(binder:context:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *v0;
  v2 = v0[1];
  v26 = v0[2];
  v27 = v0[3];
  v24 = v0[5];
  v25 = v0[4];
  v4 = *(_QWORD *)(*v0 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v5 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v1)
        {
          sub_1BA72C46C(v6, 0);
          sub_1BA72C46C(v6, 0);
          goto LABEL_39;
        }
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
    v7 = *(_QWORD *)(v2 + 16);
    if (!v7)
    {
LABEL_17:
      v10 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v26 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v12 = (_BYTE *)(v26 + 40);
        v14 = v24;
        v13 = v25;
        do
        {
          if ((*v12 & 1) == 0)
          {
            v9 = *((_QWORD *)v12 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            if (v1)
              goto LABEL_48;
            sub_1BA72C46C(v9, 0);
            sub_1BA72C46C(v9, 0);
          }
          v12 += 16;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease_n();
        v10 = v27;
        v15 = *(_QWORD *)(v27 + 16);
        if (!v15)
        {
LABEL_34:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v17 = *(_QWORD *)(v13 + 16);
          if (v17)
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            v18 = (_BYTE *)(v13 + 40);
            while (1)
            {
              if ((*v18 & 1) == 0)
              {
                v19 = *((_QWORD *)v18 - 1);
                swift_retain_n();
                FormatFloat.bind(binder:context:)();
                sub_1BA72C46C(v19, 0);
                sub_1BA72C46C(v19, 0);
                if (v1)
                  break;
              }
              v18 += 16;
              if (!--v17)
              {
                swift_bridgeObjectRelease_n();
                v20 = *(_QWORD *)(v14 + 16);
                if (!v20)
                  goto LABEL_47;
                goto LABEL_41;
              }
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v20 = *(_QWORD *)(v14 + 16);
            if (!v20)
            {
LABEL_47:
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
LABEL_41:
            swift_bridgeObjectRetain_n();
            v21 = (_BYTE *)(v14 + 40);
            do
            {
              if ((*v21 & 1) == 0)
              {
                v22 = *((_QWORD *)v21 - 1);
                swift_retain_n();
                FormatFloat.bind(binder:context:)();
                sub_1BA72C46C(v22, 0);
                sub_1BA72C46C(v22, 0);
                if (v1)
                  break;
              }
              v21 += 16;
              --v20;
            }
            while (v20);
          }
LABEL_39:
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14 = v24;
        v13 = v25;
        v15 = *(_QWORD *)(v27 + 16);
        if (!v15)
          goto LABEL_34;
      }
      swift_bridgeObjectRetain_n();
      v16 = (_BYTE *)(v10 + 40);
      do
      {
        if ((*v16 & 1) == 0)
        {
          v9 = *((_QWORD *)v16 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v1)
            goto LABEL_48;
          sub_1BA72C46C(v9, 0);
          sub_1BA72C46C(v9, 0);
        }
        v16 += 16;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = *(_QWORD *)(v2 + 16);
    if (!v7)
      goto LABEL_17;
  }
  swift_bridgeObjectRetain_n();
  v8 = (_BYTE *)(v2 + 40);
  while (1)
  {
    if ((*v8 & 1) != 0)
      goto LABEL_12;
    v9 = *((_QWORD *)v8 - 1);
    swift_retain_n();
    FormatFloat.bind(binder:context:)();
    if (v1)
      break;
    sub_1BA72C46C(v9, 0);
    sub_1BA72C46C(v9, 0);
LABEL_12:
    v8 += 16;
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
LABEL_48:
  sub_1BA72C46C(v9, 0);
  sub_1BA72C46C(v9, 0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

uint64_t FormatBezierPathQuadCurveComponent.bind(binder:context:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = *v0;
  v2 = v0[1];
  v18 = v0[2];
  v19 = v0[3];
  v4 = *(_QWORD *)(*v0 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v5 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v1)
        {
          sub_1BA72C46C(v6, 0);
          sub_1BA72C46C(v6, 0);
          goto LABEL_32;
        }
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
    v7 = *(_QWORD *)(v2 + 16);
    if (v7)
      goto LABEL_10;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = *(_QWORD *)(v2 + 16);
    if (v7)
    {
LABEL_10:
      swift_bridgeObjectRetain_n();
      v8 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v8 & 1) == 0)
        {
          v9 = *((_QWORD *)v8 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v1)
          {
            sub_1BA72C46C(v9, 0);
            sub_1BA72C46C(v9, 0);
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease_n();
          }
          sub_1BA72C46C(v9, 0);
          sub_1BA72C46C(v9, 0);
        }
        v8 += 16;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v10 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v18 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v12 = (_BYTE *)(v18 + 40);
    while (1)
    {
      if ((*v12 & 1) == 0)
      {
        v13 = *((_QWORD *)v12 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v13, 0);
        sub_1BA72C46C(v13, 0);
        if (v1)
          break;
      }
      v12 += 16;
      if (!--v11)
      {
        swift_bridgeObjectRelease_n();
        v10 = v19;
        v14 = *(_QWORD *)(v19 + 16);
        if (!v14)
          goto LABEL_30;
        goto LABEL_24;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = *(_QWORD *)(v19 + 16);
    if (!v14)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_24:
    swift_bridgeObjectRetain_n();
    v15 = (_BYTE *)(v10 + 40);
    do
    {
      if ((*v15 & 1) == 0)
      {
        v16 = *((_QWORD *)v15 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v16, 0);
        sub_1BA72C46C(v16, 0);
        if (v1)
          break;
      }
      v15 += 16;
      --v14;
    }
    while (v14);
  }
LABEL_32:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

void sub_1BABC5D28()
{
  FormatBezierPathComponent.bind(binder:context:)();
}

uint64_t sub_1BABC5D3C()
{
  return FormatBezierPathCurveComponent.bind(binder:context:)();
}

uint64_t sub_1BABC5D50()
{
  return FormatBezierPathQuadCurveComponent.bind(binder:context:)();
}

uint64_t FormatBindingBoolExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return FormatBoolBinding.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABC5D9C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  char v4;

  v3 = *(unsigned __int16 *)(v2 + 8);
  if (((1 << (v3 >> 13)) & 0xD7) == 0)
  {
    if (v3 >> 13 == 3)
    {
      if ((v3 & 0x80) == 0 || ((v3 >> 7) & 0x3E | (v3 >> 5) & 1) != 7)
        return result;
      v4 = v3 & 0x1F;
    }
    else
    {
      if ((v3 & 0x80) == 0)
        return result;
      v4 = v3 & 0x3F;
    }
    return sub_1BABB2FD8(result, a2, *(_QWORD *)v2, v4);
  }
  return result;
}

unint64_t FormatBindingDateTimeExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t result;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  v10 = *v2;
  v9 = v2[1];
  v11 = v2[2];
  v12 = *v2 >> 62;
  if ((v12 - 2) < 2)
    goto LABEL_15;
  if (!(_DWORD)v12)
  {
    if (!*(_BYTE *)(v10 + 40))
    {
      v26 = v2[2];
      v14 = *(_QWORD *)(v10 + 24);
      v13 = *(_QWORD *)(v10 + 32);
      v27 = *(_QWORD *)(v10 + 16);
      v15 = v27;
      v28 = v14;
      v29 = v13;
      v30 = 1;
      sub_1BA739250(v10);
      v25 = v14;
      sub_1BA690C00(v15, v14, v13, 0);
      v16 = sub_1BB6B84D4((uint64_t *)&v27, &v30);
      if (v3)
        return sub_1BA6F5D74(v10);
      sub_1BB3757A0(v15, v25, v16, 1, (uint64_t)v8);
      sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      sub_1BA6F5D74(v10);
      v11 = v26;
    }
    goto LABEL_15;
  }
  v18 = *(_QWORD *)(v10 + 16);
  v17 = *(_QWORD *)(v10 + 24);
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
  {
    sub_1BA739250(v10);
    swift_bridgeObjectRetain();
    sub_1BA739250(v17);
    v22 = v17;
LABEL_14:
    v27 = v22;
    sub_1BA739250(v22);
    FormatDateTime.bind(binder:context:)(a1, a2);
    sub_1BA6F5D74(v22);
    swift_bridgeObjectRelease();
    sub_1BA6F5D74(v22);
    result = sub_1BA6F5D74(v10);
    if (v3)
      return result;
LABEL_15:
    if ((v9 & 0xFE) != 0xC)
    {
      LOBYTE(v27) = v9;
      v28 = v11;
      sub_1BA75D96C(v9, v11);
      FormatBindingDateTimeExpressionLogicCompare.bind(binder:context:)(a1, a2);
    }
    return sub_1BA7DE08C(v9, v11);
  }
  v26 = v11;
  swift_bridgeObjectRetain();
  sub_1BA739250(v10);
  swift_bridgeObjectRetain();
  v25 = v17;
  sub_1BA739250(v17);
  swift_bridgeObjectRetain();
  v24 = v18;
  v20 = (_BYTE *)(v18 + 40);
  while ((*v20 & 1) != 0)
  {
LABEL_8:
    v20 += 16;
    if (!--v19)
    {
      swift_bridgeObjectRelease_n();
      v22 = v25;
      v11 = v26;
      goto LABEL_14;
    }
  }
  v27 = *((_QWORD *)v20 - 1);
  v21 = v27;
  swift_retain_n();
  FormatFloat.bind(binder:context:)();
  if (!v3)
  {
    sub_1BA72C46C(v21, 0);
    sub_1BA72C46C(v21, 0);
    goto LABEL_8;
  }
  sub_1BA72C46C(v21, 0);
  sub_1BA72C46C(v21, 0);
  swift_bridgeObjectRelease_n();
  sub_1BA6F5D74(v25);
  return sub_1BA6F5D74(v10);
}

void FormatDateTime.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  v9 = *v2;
  v10 = (unint64_t)*v2 >> 62;
  if ((v10 - 2) >= 2)
  {
    if ((_DWORD)v10)
    {
      v15 = *(_QWORD *)(v9 + 24);
      v17 = *(_QWORD *)(v9 + 16);
      v18 = v15;
      swift_bridgeObjectRetain();
      sub_1BA739250(v15);
      FormatDateTimeOffset.bind(binder:context:)(a1, a2);
      swift_bridgeObjectRelease();
      sub_1BA6F5D74(v15);
    }
    else if (!*(_BYTE *)(v9 + 40))
    {
      v12 = *(_QWORD *)(v9 + 24);
      v11 = *(_QWORD *)(v9 + 32);
      v13 = *(_QWORD *)(v9 + 16);
      v17 = v13;
      v18 = v12;
      v19 = v11;
      HIBYTE(v16) = 1;
      sub_1BA690C00(v13, v12, v11, 0);
      v14 = sub_1BB6B84D4(&v17, (char *)&v16 + 7);
      if (!v3)
      {
        sub_1BB3757A0(v13, v12, v14, 1, (uint64_t)v8);
        sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
      }
    }
  }
}

unint64_t FormatBindingDateTimeExpressionLogic.bind(binder:context:)(unint64_t result, uint64_t a2)
{
  unint64_t *v2;
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;

  v3 = *v2;
  if ((*(_DWORD *)v2 & 0xFE) != 0xC)
  {
    v5 = result;
    v6 = v2[1];
    sub_1BA739250(v6);
    FormatBindingDateTimeExpressionLogicCompare.bind(binder:context:)(v5, a2);
    return sub_1BA7DE08C(v3, v6);
  }
  return result;
}

unint64_t sub_1BABC6318(uint64_t a1, uint64_t a2)
{
  return FormatBindingDateTimeExpression.bind(binder:context:)(a1, a2);
}

void FormatBindingDateTimeExpressionLogicCompare.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21[3];
  char v22;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21[-1] - v7;
  v9 = *(_QWORD *)(v2 + 8);
  if ((v9 >> 62) - 2 >= 2)
  {
    if (v9 >> 62)
    {
      v15 = *(_QWORD *)(v9 + 16);
      v14 = *(_QWORD *)(v9 + 24);
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain();
        sub_1BA739250(v9);
        swift_bridgeObjectRetain();
        v20 = v14;
        sub_1BA739250(v14);
        swift_bridgeObjectRetain();
        v17 = (_BYTE *)(v15 + 40);
        while (1)
        {
          if ((*v17 & 1) == 0)
          {
            v21[0] = *((_QWORD *)v17 - 1);
            v18 = v21[0];
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            if (v3)
            {
              sub_1BA72C46C(v18, 0);
              sub_1BA72C46C(v18, 0);
              swift_bridgeObjectRelease_n();
              v19 = v20;
              goto LABEL_16;
            }
            sub_1BA72C46C(v18, 0);
            sub_1BA72C46C(v18, 0);
          }
          v17 += 16;
          if (!--v16)
          {
            swift_bridgeObjectRelease_n();
            v14 = v20;
            goto LABEL_14;
          }
        }
      }
      sub_1BA739250(*(_QWORD *)(v2 + 8));
      swift_bridgeObjectRetain();
      sub_1BA739250(v14);
LABEL_14:
      v21[0] = v14;
      sub_1BA739250(v14);
      FormatDateTime.bind(binder:context:)(a1, a2);
      sub_1BA6F5D74(v14);
      swift_bridgeObjectRelease();
      v19 = v14;
LABEL_16:
      sub_1BA6F5D74(v19);
    }
    else
    {
      if (*(_BYTE *)(v9 + 40))
        return;
      v10 = *(_QWORD *)(v9 + 24);
      v11 = *(_QWORD *)(v9 + 32);
      v21[0] = *(_QWORD *)(v9 + 16);
      v12 = v21[0];
      v21[1] = v10;
      v21[2] = v11;
      v22 = 1;
      sub_1BA739250(v9);
      sub_1BA690C00(v12, v10, v11, 0);
      v13 = sub_1BB6B84D4(v21, &v22);
      if (!v3)
      {
        sub_1BB3757A0(v12, v10, v13, 1, (uint64_t)v8);
        sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
      }
    }
    sub_1BA6F5D74(v9);
  }
}

unint64_t sub_1BABC65AC(unint64_t result, uint64_t a2)
{
  unint64_t *v2;
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;

  v3 = *v2;
  if ((*v2 & 0xFE) != 0xC)
  {
    v5 = result;
    v6 = v2[1];
    sub_1BA739250(v6);
    FormatDateTime.bind(binder:context:)(v5, a2);
    return sub_1BA7DE08C(v3, v6);
  }
  return result;
}

unint64_t sub_1BABC6630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v6;

  v6 = *(_QWORD *)(v2 + 8);
  sub_1BA739250(v6);
  FormatDateTime.bind(binder:context:)(a1, a2);
  return sub_1BA6F5D74(v6);
}

uint64_t FormatBindingImageExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unsigned int v6;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)v2;
  v6 = *(unsigned __int8 *)(v2 + 40);
  v8 = *(_QWORD *)(v2 + 8);
  v9 = *(_QWORD *)(v2 + 16);
  v10 = *(_QWORD *)(v2 + 24);
  v11 = *(_QWORD *)(v2 + 32);
  sub_1BA7147C0(*(_QWORD *)v2, v8, v9, v10, v11, v6);
  FormatImageNodeBinding.bind(binder:context:)(a1, a2);
  return sub_1BA6EF82C(v5, v8, v9, v10, v11, v6);
}

uint64_t FormatBindingTextExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  v3 = *(_QWORD *)v2;
  v5 = *(unsigned __int16 *)(v2 + 104);
  v6 = *(unsigned __int8 *)(v2 + 106);
  v9 = *(_QWORD *)(v2 + 8);
  v10 = *(_QWORD *)(v2 + 16);
  v11 = *(_QWORD *)(v2 + 24);
  v12 = *(_QWORD *)(v2 + 32);
  v13 = *(_QWORD *)(v2 + 40);
  v14 = *(_BYTE *)(v2 + 48);
  v15 = *(_BYTE *)(v2 + 49);
  sub_1BA713CDC(*(_QWORD *)v2, v9, v10, v11, v12, v13, v14, v15);
  FormatTextNodeBinding.bind(binder:context:)(a1, a2);
  result = sub_1BA6EF090(v3, v9, v10, v11, v12, v13, v14, v15);
  if (!v7)
    __asm { BR              X10 }
  return result;
}

void FormatBindingURLExpression.bind(binder:context:)()
{
  sub_1BAC67DB0();
}

uint64_t FormatBindingFloatExpression.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 != 12 && v1 != 13)
  {
    sub_1BAC6535C(v1);
    FormatFloat.bind(binder:context:)();
  }
  return sub_1BAC653C4(v1);
}

void sub_1BABC69F8()
{
  FormatBindingExpression.bind(binder:context:)();
}

uint64_t FormatBindingFloatExpressionLogic.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if ((*v0 & 0xFE) != 0xC)
  {
    swift_retain();
    FormatFloat.bind(binder:context:)();
    return sub_1BAC653C4(v1);
  }
  return result;
}

uint64_t sub_1BABC6A88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 != 12 && v1 != 13)
  {
    sub_1BAC6535C(v1);
    FormatFloat.bind(binder:context:)();
  }
  return sub_1BAC653C4(v1);
}

uint64_t FormatBindingFloatExpressionLogicCompare.bind(binder:context:)()
{
  swift_retain();
  FormatFloat.bind(binder:context:)();
  return swift_release();
}

uint64_t sub_1BABC6B78()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if ((*v0 & 0xFE) != 0xC)
  {
    swift_retain();
    FormatFloat.bind(binder:context:)();
    return sub_1BAC653C4(v1);
  }
  return result;
}

uint64_t sub_1BABC6BF4()
{
  swift_retain();
  FormatFloat.bind(binder:context:)();
  return swift_release();
}

uint64_t sub_1BABC6C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unsigned int v6;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)v2;
  v6 = *(unsigned __int8 *)(v2 + 40);
  v8 = *(_QWORD *)(v2 + 8);
  v9 = *(_QWORD *)(v2 + 16);
  v10 = *(_QWORD *)(v2 + 24);
  v11 = *(_QWORD *)(v2 + 32);
  sub_1BA7147C0(*(_QWORD *)v2, v8, v9, v10, v11, v6);
  FormatImageNodeBinding.bind(binder:context:)(a1, a2);
  return sub_1BA6EF82C(v5, v8, v9, v10, v11, v6);
}

uint64_t FormatBindingTextExpressionLogic.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v3 = *(unsigned __int8 *)(v2 + 50) >> 5;
  if (v3 >= 5 && v3 == 5)
  {
    v6 = result;
    v7 = *(_QWORD *)v2;
    v8 = *(unsigned __int16 *)(v2 + 48) | (*(unsigned __int8 *)(v2 + 50) << 16);
    v10 = *(_QWORD *)(v2 + 8);
    v11 = *(_OWORD *)(v2 + 16);
    v12 = *(_OWORD *)(v2 + 32);
    v13 = *(_QWORD *)(v2 + 24);
    v9 = *(_QWORD *)(v2 + 40);
    sub_1BA713CDC(*(_QWORD *)v2, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v8, SBYTE1(v8));
    FormatTextNodeBinding.bind(binder:context:)(v6, a2);
    return sub_1BA6EF404(v7, v10, v11, v13, v12, v9, v8);
  }
  return result;
}

uint64_t sub_1BABC6E0C(uint64_t a1, uint64_t a2)
{
  return FormatBindingTextExpression.bind(binder:context:)(a1, a2);
}

uint64_t FormatBindingTextExpressionLogic.Binding.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v3 = *(_QWORD *)v2;
  v7 = *(_QWORD *)(v2 + 8);
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 40);
  v12 = *(_BYTE *)(v2 + 48);
  v13 = *(_BYTE *)(v2 + 49);
  sub_1BA713CDC(*(_QWORD *)v2, v7, v8, v9, v10, v11, v12, v13);
  FormatTextNodeBinding.bind(binder:context:)(a1, a2);
  return sub_1BA6EF090(v3, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1BABC6EF0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v3 = *(unsigned __int8 *)(v2 + 50) >> 5;
  if (v3 >= 5 && v3 == 5)
  {
    v6 = result;
    v7 = *(_QWORD *)v2;
    v8 = *(unsigned __int16 *)(v2 + 48) | (*(unsigned __int8 *)(v2 + 50) << 16);
    v10 = *(_QWORD *)(v2 + 8);
    v11 = *(_OWORD *)(v2 + 16);
    v12 = *(_OWORD *)(v2 + 32);
    v13 = *(_QWORD *)(v2 + 24);
    v9 = *(_QWORD *)(v2 + 40);
    sub_1BA713CDC(*(_QWORD *)v2, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v8, SBYTE1(v8));
    FormatTextNodeBinding.bind(binder:context:)(v6, a2);
    return sub_1BA6EF404(v7, v10, v11, v13, v12, v9, v8);
  }
  return result;
}

uint64_t sub_1BABC6FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v3 = *(_QWORD *)v2;
  v7 = *(_QWORD *)(v2 + 8);
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 40);
  v12 = *(_BYTE *)(v2 + 48);
  v13 = *(_BYTE *)(v2 + 49);
  sub_1BA713CDC(*(_QWORD *)v2, v7, v8, v9, v10, v11, v12, v13);
  FormatTextNodeBinding.bind(binder:context:)(a1, a2);
  return sub_1BA6EF090(v3, v7, v8, v9, v10, v11, v12, v13);
}

void sub_1BABC70B8()
{
  sub_1BAC67DB0();
}

uint64_t FormatBlock.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v20 = a2;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = *(_QWORD *)(v2 + 32);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v17 = v2;
    v18 = v6;
    swift_bridgeObjectRetain_n();
    v19 = v9;
    v11 = (_QWORD *)(v9 + 64);
    while (1)
    {
      v12 = *v11;
      v21 = *((_OWORD *)v11 - 2);
      v22 = *((_OWORD *)v11 - 1);
      v23 = v12;
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(a1, v20);
      if (v3)
        break;
      v11 += 5;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v10)
      {
        swift_bridgeObjectRelease_n();
        v2 = v17;
        v6 = v18;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    result = *(_QWORD *)(v2 + 40);
    v14 = *(_QWORD *)(result + 16);
    if (v14)
    {
      v15 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v16 = *(_QWORD *)(v6 + 72);
      v19 = *(_QWORD *)(v2 + 40);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v24 = *((_QWORD *)v8 + 2);
        swift_retain();
        FormatOptionValue.bind(binder:context:)(a1, v20);
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v15 += v16;
        if (!--v14)
          return swift_bridgeObjectRelease_n();
      }
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BABC72FC(uint64_t a1, uint64_t a2)
{
  return FormatBlock.bind(binder:context:)(a1, a2);
}

uint64_t FormatBlockNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  v14 = a2;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = *(_QWORD *)(v2 + 56);
  v10 = *(_QWORD *)(result + 16);
  if (v10)
  {
    v11 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v12 = *(_QWORD *)(v6 + 72);
    v13[1] = *(_QWORD *)(v2 + 56);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BA4C2DD8(v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v15 = *((_QWORD *)v8 + 2);
      swift_retain();
      FormatOptionValue.bind(binder:context:)(a1, v14);
      if (v3)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v11 += v12;
      if (!--v10)
        return swift_bridgeObjectRelease_n();
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t FormatGroupBinding.Bool.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v3 = *(char *)(v2 + 8);
  if (v3 < 0 && ((2 * *(_BYTE *)(v2 + 9)) | ((v3 & 0x20) != 0)) == 7)
  {
    v5 = result;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if (swift_dynamicCast())
    {
      v6 = *((_QWORD *)&v9 + 1);
      v7 = v10;
      __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v5, a2, v6, v7);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
    }
    else
    {
      v10 = 0;
      v8 = 0u;
      v9 = 0u;
      return sub_1BA65DB80((uint64_t)&v8, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    }
  }
  return result;
}

uint64_t FormatSportsEventBinding.Bool.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABCD70C(a1, a2);
}

uint64_t FormatBorder.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t result;

  swift_retain();
  FormatColor.bind(binder:context:)();
  result = swift_release();
  if (!v0)
  {
    swift_retain();
    FormatFloat.bind(binder:context:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BABC7634()
{
  return FormatBorder.bind(binder:context:)();
}

uint64_t FormatBreakpointNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_retain();
  FormatSourceMapNode.bind(binder:context:)(a1, a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

void FormatBundleImageSize.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v3 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if (!*(_BYTE *)(v0 + 16))
  {
    v10 = *(_QWORD *)(v3 + 16);
    if (!v10)
      return;
    swift_bridgeObjectRetain();
    v11 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v11 & 1) == 0)
      {
        v12 = *((_QWORD *)v11 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v12, 0);
        sub_1BA72C46C(v12, 0);
        if (v1)
          break;
      }
      v11 += 16;
      --v10;
    }
    while (v10);
    v7 = v3;
    v8 = v2;
    v9 = 0;
    goto LABEL_15;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v4 = *(_QWORD *)(v3 + 16);
    if (!v4)
      return;
    swift_bridgeObjectRetain();
    v5 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
        if (v1)
          break;
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    v7 = v3;
    v8 = v2;
    v9 = 1;
LABEL_15:
    sub_1BA76F57C(v7, v8, v9);
    return;
  }
  FormatSizeEquation.bind(binder:context:)();
}

uint64_t sub_1BABC7864()
{
  uint64_t v0;
  int v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255)
  {
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    sub_1BA76F534(v3, v4, v1);
    FormatBundleImageSize.bind(binder:context:)();
    return sub_1BA76F520(v3, v4, v1);
  }
  return result;
}

uint64_t FormatSizeEquation.bind(binder:context:)()
{
  return sub_1BABD1F34();
}

void sub_1BABC7910()
{
  FormatBundleImageSize.bind(binder:context:)();
}

unint64_t sub_1BABC7924(uint64_t a1, uint64_t a2)
{
  return FormatButtonNode.bind(binder:context:)(a1, a2);
}

void FormatMenu.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;

  v6 = v2[1];
  if (!*v2 || (sub_1BAB98B78(a1, a2, *v2), !v3))
  {
    if (v6)
      sub_1BAB87CC8(a1, a2, v6);
  }
}

void FormatCommand.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  if (*(_BYTE *)(*(_QWORD *)v0 + 41))
    v2 = 4;
  else
    v2 = 0;
  __asm { BR              X10 }
}

uint64_t sub_1BABC7A40()
{
  unsigned int v0;

  return ((uint64_t (*)())((char *)sub_1BABC7A5C + 4 * byte_1BB8A5B52[(v0 >> 4) & 3]))();
}

uint64_t sub_1BABC7A5C()
{
  char v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  if ((_BYTE)v2)
  {
    if (v2 != 1)
      return sub_1BAC65170(v4, v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  }
  else if ((~v4 & 0xF000000000000007) != 0)
  {
    *(_QWORD *)(v5 - 112) = v4;
    sub_1BAC65170(v4, v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    sub_1BA5E7FF4(v4);
    v7 = *(_QWORD *)(v5 - 120);
    FormatTextContent.bind(binder:context:)();
    sub_1BA5E800C(v4);
    result = sub_1BAC65170(v4, v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    *(_QWORD *)(v5 - 120) = v7;
  }
  return result;
}

void FormatPurchaseAction.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  sub_1BAC658D8(a2);
}

void sub_1BABC7CC4()
{
  FormatButtonNodeAction.bind(binder:context:)();
}

void FormatCellSelection.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  if (!*(_BYTE *)(v0 + 56))
  {
    if ((v8 & 0xF000000000000007) == 0xD000000000000007)
      return;
    v27 = *(_QWORD *)(v0 + 32);
    v29 = *(_QWORD *)(v0 + 40);
    v26 = *(_QWORD *)(v0 + 24);
    if ((~v3 & 0xF000000000000007) != 0)
    {
      sub_1BA7756B8(v3, v2, v5, v4, v6, v7, v8, 0);
      sub_1BA5E7FF4(v3);
      FormatColor.bind(binder:context:)();
      sub_1BA5E800C(v3);
      if (v1)
      {
LABEL_16:
        v17 = v3;
        v18 = v2;
        v19 = v5;
        v20 = v26;
        v21 = v27;
        v22 = v29;
        v24 = v8;
        v25 = 0;
LABEL_17:
        sub_1BA763860(v17, v18, v19, v20, v21, v22, v24, v25);
        return;
      }
    }
    else
    {
      sub_1BA7638A4(v3, v2, v5, v4, v6, v7, v8, (void (*)(void))sub_1BA5E7FF4, sub_1BA6E6C68);
    }
    if ((v8 & 0xF000000000000007) != 0xF000000000000007)
    {
      swift_retain();
      FormatFloat.bind(binder:context:)();
      sub_1BA6E6CD8(v8);
    }
    goto LABEL_16;
  }
  v9 = v3 & 0xF000000000000007;
  if (*(_BYTE *)(v0 + 56) == 1 && v9 != 0xD000000000000007)
  {
    if (v9 == 0xF000000000000007)
    {
      v11 = *(_QWORD *)v0;
      v12 = *(_QWORD *)(v0 + 8);
      v13 = *(_QWORD *)(v0 + 16);
      v14 = *(_QWORD *)(v0 + 24);
      v15 = *(_QWORD *)(v0 + 32);
      v16 = *(_QWORD *)(v0 + 40);
      sub_1BA763860(v11, v12, v13, v4, v6, v7, v8, 1);
      v17 = v3;
      v18 = v2;
      v19 = v5;
      v20 = v14;
      v21 = v15;
      v22 = v16;
    }
    else
    {
      v28 = *(_QWORD *)(v0 + 32);
      v30 = *(_QWORD *)(v0 + 40);
      v23 = *(_QWORD *)(v0 + 24);
      sub_1BAC67F0C(v3);
      FormatFloat.bind(binder:context:)();
      v17 = v3;
      v18 = v2;
      v19 = v5;
      v20 = v23;
      v21 = v28;
      v22 = v30;
    }
    v24 = v8;
    v25 = 1;
    goto LABEL_17;
  }
}

uint64_t FormatCellSelection.Background.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *v0;
  v3 = v0[6];
  if ((~*v0 & 0xF000000000000007) == 0
    || (swift_retain(), FormatColor.bind(binder:context:)(), result = sub_1BA5E800C(v2), !v1))
  {
    if ((~v3 & 0xF000000000000007) != 0)
    {
      swift_retain();
      FormatFloat.bind(binder:context:)();
      return sub_1BA6E6CD8(v3);
    }
  }
  return result;
}

uint64_t FormatCellSelection.DimContent.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if ((~*v0 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatFloat.bind(binder:context:)();
    return sub_1BA6E6CD8(v1);
  }
  return result;
}

void sub_1BABC8010()
{
  FormatCellSelection.bind(binder:context:)();
}

uint64_t sub_1BABC8024()
{
  return FormatCellSelection.Background.bind(binder:context:)();
}

uint64_t sub_1BABC8038()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if ((~*v0 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatFloat.bind(binder:context:)();
    return sub_1BA6E6CD8(v1);
  }
  return result;
}

void FormatProcessedColor.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;

  v6 = *(_QWORD *)(v2 + 8);
  swift_retain();
  FormatColor.bind(binder:context:)();
  swift_release();
  if (!v3)
    sub_1BAB72CBC(a1, a2, v6);
}

uint64_t sub_1BABC812C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD v5[4];
  _BYTE v6[32];
  uint64_t v7;

  sub_1BAC696F4(v1, (uint64_t)v6);
  sub_1BAC696F4((uint64_t)v6, (uint64_t)v5);
  sub_1BAC69694((uint64_t)v6);
  FormatColorBinding.bind(binder:context:)(a1);
  result = sub_1BAC696C4((uint64_t)v6);
  if (!v2)
  {
    sub_1BAC68CF0((_QWORD *)(v1 + 32), &v7);
    sub_1BAC68CF0(&v7, v5);
    sub_1BA744388((uint64_t)&v7);
    FormatColor.bind(binder:context:)();
    return sub_1BA74435C((uint64_t)&v7);
  }
  return result;
}

uint64_t sub_1BABC81F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  swift_retain_n();
  swift_bridgeObjectRetain();
  FormatColor.bind(binder:context:)(a1, a2);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
    swift_release();
    sub_1BAB72CBC(a1, a2, a4);
    swift_bridgeObjectRelease();
    swift_release();
    swift_retain();
    FormatColor.bind(binder:context:)(a1, a2);
    return swift_release();
  }
}

uint64_t sub_1BABC82E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  swift_retain_n();
  swift_bridgeObjectRetain();
  FormatColor.bind(binder:context:)(a1, a2);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
    swift_release();
    v9 = *(_QWORD *)(a4 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      v10 = a4 + 48;
      do
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        FormatColor.bind(binder:context:)(a1, a2);
        swift_bridgeObjectRelease();
        swift_release_n();
        v10 += 24;
        --v9;
      }
      while (v9);
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_retain();
    FormatColor.bind(binder:context:)(a1, a2);
    return swift_release();
  }
}

void sub_1BABC847C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[32];
  _BYTE v3[104];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  sub_1BAC69510(v0, (uint64_t)v2);
  sub_1BAC69510((uint64_t)v2, (uint64_t)v3);
  __asm { BR              X10 }
}

uint64_t sub_1BABC851C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BAC69658(v3 - 168, v3 - 136);
  sub_1BAC69588((_QWORD *)(v2 + 32), (_QWORD *)(v3 - 208));
  sub_1BAC69588((_QWORD *)(v3 - 208), (_QWORD *)(v3 - 232));
  sub_1BAC695C4(v3 - 208);
  ((void (*)(uint64_t, uint64_t))FormatFont.bind(binder:context:))(v1, v0);
  return sub_1BAC695F0(v3 - 208);
}

uint64_t FormatUnboundValue.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, double);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v6 = a1;
  v7 = *(_QWORD *)(a3 + 24);
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v32 = v18;
  v17(v15, v18, v11, v13);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v27 = v7;
    v19 = v6;
    v20 = a2;
    v21 = *((_QWORD *)&v30 + 1);
    v22 = v31;
    __swift_project_boxed_opaque_existential_1(&v29, *((uint64_t *)&v30 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8))(v19, v20, v21, v22);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
    if (v3)
      return result;
    a2 = v20;
    v6 = v19;
    v7 = v27;
  }
  else
  {
    v31 = 0;
    v29 = 0u;
    v30 = 0u;
    sub_1BA65DB80((uint64_t)&v29, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v9, v32 + *(int *)(a3 + 52), v7);
  if (swift_dynamicCast())
  {
    v24 = a2;
    v25 = *((_QWORD *)&v30 + 1);
    v26 = v31;
    __swift_project_boxed_opaque_existential_1(&v29, *((uint64_t *)&v30 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8))(v6, v24, v25, v26);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  }
  else
  {
    v31 = 0;
    v29 = 0u;
    v30 = 0u;
    return sub_1BA65DB80((uint64_t)&v29, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

void sub_1BABC88AC()
{
  FormatColor.bind(binder:context:)();
}

uint64_t FormatColorAndExpression.bindChildren(binder:context:)()
{
  return sub_1BABC90A0();
}

void FormatColorBinding.bindChildren(binder:context:)()
{
  __asm { BR              X11 }
}

void sub_1BABC8934(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, __int128 a4, __int128 a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  if ((a1 & 0xC0) == 0x80 && ((a1 >> 7) & 0xFE | (a1 >> 5) & 1) > 4)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if (swift_dynamicCast())
    {
      v9 = *((_QWORD *)&a5 + 1);
      v10 = a6;
      __swift_project_boxed_opaque_existential_1(&a4, *((uint64_t *)&a5 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v6, v7, v9, v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&a4);
    }
    else
    {
      a6 = 0;
      a4 = 0u;
      a5 = 0u;
      sub_1BA65DB80((uint64_t)&a4, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    }
  }
  sub_1BABC8918();
}

uint64_t FormatGroupBinding.Color.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v3 = *(_BYTE *)(v2 + 8);
  if ((v3 & 0xC0) == 0x80 && ((2 * *(_BYTE *)(v2 + 9)) | ((v3 & 0x20) != 0)) >= 5u)
  {
    v6 = result;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if (swift_dynamicCast())
    {
      v7 = *((_QWORD *)&v10 + 1);
      v8 = v11;
      __swift_project_boxed_opaque_existential_1(&v9, *((uint64_t *)&v10 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(v6, a2, v7, v8);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
    }
    else
    {
      v11 = 0;
      v9 = 0u;
      v10 = 0u;
      return sub_1BA65DB80((uint64_t)&v9, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    }
  }
  return result;
}

uint64_t FormatSportsEventBinding.Color.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  if ((*(_BYTE *)(v2 + 8) & 0xC0) == 0x80)
  {
    v4 = result;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if (swift_dynamicCast())
    {
      v5 = *((_QWORD *)&v8 + 1);
      v6 = v9;
      __swift_project_boxed_opaque_existential_1(&v7, *((uint64_t *)&v8 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v4, a2, v5, v6);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    }
    else
    {
      v9 = 0;
      v7 = 0u;
      v8 = 0u;
      return sub_1BA65DB80((uint64_t)&v7, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    }
  }
  return result;
}

uint64_t FormatColorBlendProcessor.bind(binder:context:)()
{
  swift_retain();
  FormatColor.bind(binder:context:)();
  return swift_release();
}

uint64_t sub_1BABC8C8C()
{
  swift_retain();
  FormatColor.bind(binder:context:)();
  return swift_release();
}

uint64_t FormatColorColorExpression.bindChildren(binder:context:)()
{
  uint64_t v0;
  uint64_t result;

  swift_retain();
  FormatColor.bind(binder:context:)();
  result = swift_release();
  if (!v0)
  {
    swift_retain();
    FormatColorExpression.bindChildren(binder:context:)();
    return swift_release();
  }
  return result;
}

void FormatColorConditionalProcessor.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;

  v6 = *(_QWORD *)(v2 + 8);
  swift_retain();
  FormatColorExpression.bindChildren(binder:context:)();
  swift_release();
  if (!v3)
    sub_1BAB72CBC(a1, a2, v6);
}

void sub_1BABC8E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;

  v6 = *(_QWORD *)(v2 + 8);
  swift_retain();
  FormatColorExpression.bindChildren(binder:context:)();
  swift_release();
  if (!v3)
    sub_1BAB72CBC(a1, a2, v6);
}

void FormatColorExpression.bindChildren(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BABC8ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  swift_retain_n();
  ((void (*)(uint64_t, uint64_t))FormatColorExpression.bindChildren(binder:context:))(v2, v1);
  if (!v0)
  {
    swift_release();
    swift_retain();
    ((void (*)(uint64_t, uint64_t))FormatColorExpression.bindChildren(binder:context:))(v2, v1);
  }
  swift_release();
  return swift_release_n();
}

uint64_t FormatColorNotExpression.bindChildren(binder:context:)()
{
  swift_retain();
  FormatColorExpression.bindChildren(binder:context:)();
  return swift_release();
}

uint64_t FormatColorOrExpression.bindChildren(binder:context:)()
{
  return sub_1BABC90A0();
}

uint64_t sub_1BABC90A0()
{
  uint64_t v0;
  uint64_t result;

  swift_retain();
  FormatColorExpression.bindChildren(binder:context:)();
  result = swift_release();
  if (!v0)
  {
    swift_retain();
    FormatColorExpression.bindChildren(binder:context:)();
    return swift_release();
  }
  return result;
}

void FormatColorProcessor.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BABC9184()
{
  swift_retain();
  FormatColor.bind(binder:context:)();
  return swift_release();
}

void sub_1BABC9254()
{
  FormatColorProcessor.bind(binder:context:)();
}

uint64_t FormatColumnRowSpan.bind(binder:context:)()
{
  swift_bridgeObjectRetain();
  FormatRatio.bind(binder:context:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BABC92D0()
{
  swift_bridgeObjectRetain();
  FormatRatio.bind(binder:context:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BABC9338()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = *(unsigned __int8 *)(*(_QWORD *)v0 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v6 = *(_BYTE *)(*(_QWORD *)v0 + 41);
  sub_1BAC65170(v3, v4, v5, v1, v6, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  FormatCommandBinding.bind(binder:context:)();
  return sub_1BAC65170(v3, v4, v5, v1, v6, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
}

uint64_t sub_1BABC9414(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  sub_1BA49DEA8();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  v6 = a3;
  if (swift_dynamicCast())
  {
    v7 = *((_QWORD *)&v11 + 1);
    v8 = v12;
    __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, v7, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  }
  else
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    return sub_1BA65DB80((uint64_t)&v10, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

uint64_t sub_1BABC9514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  swift_bridgeObjectRetain();
  if (swift_dynamicCast())
  {
    v4 = *((_QWORD *)&v8 + 1);
    v5 = v9;
    __swift_project_boxed_opaque_existential_1(&v7, *((uint64_t *)&v8 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, a2, v4, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  }
  else
  {
    v9 = 0;
    v7 = 0u;
    v8 = 0u;
    return sub_1BA65DB80((uint64_t)&v7, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

uint64_t sub_1BABC9610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FormatCommandActionValue.bind(binder:context:)(a1, a2, a3, a4);
}

void sub_1BABC9630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __asm { BR              X10 }
}

uint64_t sub_1BABC967C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v13;
  char v14;

  v6 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v14 = *(_BYTE *)(v1 + 32);
  if ((v14 & 1) == 0)
  {
    swift_retain();
    sub_1BAB5EC7C(v6, v5, 0);
    sub_1BA92F754((void *)v7, v8);
    swift_retain();
    if ((v8 & 1) == 0)
    {
LABEL_9:
      sub_1BAB5EC9C(v6, v5, v14);
      v10 = (void *)v7;
      v11 = 0;
LABEL_10:
      sub_1BA92F770(v10, v11);
      swift_release();
      return swift_release();
    }
LABEL_5:
    v9 = *(_QWORD *)(v7 + 24);
    swift_retain();
    sub_1BAB79F78(v2, v3, v9);
    if (!v0)
      sub_1BABC9414(v2, v3, *(void **)(v7 + 32));
    sub_1BA92F770((void *)v7, 1);
    sub_1BAB5EC9C(v6, v5, v14);
    v10 = (void *)v7;
    v11 = 1;
    goto LABEL_10;
  }
  v13 = *(_QWORD *)(v6 + 24);
  swift_retain();
  sub_1BAB5EC7C(v6, v5, 1);
  sub_1BA92F754((void *)v7, v8);
  swift_retain();
  sub_1BAB5EC7C(v6, v5, 1);
  *(_QWORD *)(v4 - 72) = v3;
  sub_1BAB7A134(v2, v3, v13);
  if (!v0)
  {
    sub_1BABC9514(v2, *(_QWORD *)(v4 - 72));
    v0 = 0;
    sub_1BAB5EC9C(v6, v5, 1);
    v3 = *(_QWORD *)(v4 - 72);
    if ((v8 & 1) == 0)
      goto LABEL_9;
    goto LABEL_5;
  }
  sub_1BAB5EC9C(v6, v5, 1);
  sub_1BAB5EC9C(v6, v5, 1);
  sub_1BA92F770((void *)v7, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_1BABC99CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v7 = v6;
  if (a6 < 0)
  {
    v105 = result;
    v8 = *(_QWORD *)(a6 + 16);
    v9 = *(_QWORD *)(v8 + 24);
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_retain();
      v104 = v8;
      swift_retain();
      swift_bridgeObjectRetain();
      v11 = (_QWORD *)(v9 + 56);
      do
      {
        v12 = *(v11 - 3);
        v13 = *(v11 - 2);
        v14 = *((unsigned __int8 *)v11 - 8);
        v15 = *v11;
        sub_1BA73B1CC(v12, v13, *((_BYTE *)v11 - 8));
        swift_retain();
        sub_1BABC99CC(v105, a2, v12, v13, v14, v15);
        if (v6)
        {
          sub_1BA73B1B8(v12, v13, v14);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          return swift_release();
        }
        v11 += 4;
        sub_1BA73B1B8(v12, v13, v14);
        swift_release();
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v104 + 32);
      if ((v16 & 0x8000000000000000) == 0)
        goto LABEL_93;
    }
    else
    {
      swift_retain();
      swift_retain();
      v16 = *(_QWORD *)(v8 + 32);
      if ((v16 & 0x8000000000000000) == 0)
      {
LABEL_93:
        swift_release();
        return swift_release();
      }
    }
    v17 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v17 + 24);
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      swift_retain();
      v103 = v17;
      swift_retain();
      swift_bridgeObjectRetain();
      v20 = (_QWORD *)(v18 + 56);
      do
      {
        v21 = *(v20 - 3);
        v22 = *(v20 - 2);
        v23 = *((unsigned __int8 *)v20 - 8);
        v24 = *v20;
        sub_1BA73B1CC(v21, v22, *((_BYTE *)v20 - 8));
        swift_retain();
        sub_1BABC99CC(v105, a2, v21, v22, v23, v24);
        if (v6)
        {
          sub_1BA73B1B8(v21, v22, v23);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_113;
        }
        v20 += 4;
        sub_1BA73B1B8(v21, v22, v23);
        swift_release();
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)(v103 + 32);
      if ((v25 & 0x8000000000000000) == 0)
        goto LABEL_92;
    }
    else
    {
      swift_retain();
      swift_retain();
      v25 = *(_QWORD *)(v17 + 32);
      if ((v25 & 0x8000000000000000) == 0)
      {
LABEL_92:
        swift_release();
        swift_release();
        goto LABEL_93;
      }
    }
    v26 = *(_QWORD *)(v25 + 16);
    v27 = *(_QWORD *)(v26 + 24);
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v29 = (_QWORD *)(v27 + 56);
      while (1)
      {
        v30 = *(v29 - 3);
        v31 = *(v29 - 2);
        v32 = *((unsigned __int8 *)v29 - 8);
        v33 = *v29;
        sub_1BA73B1CC(v30, v31, *((_BYTE *)v29 - 8));
        swift_retain();
        sub_1BABC99CC(v105, a2, v30, v31, v32, v33);
        if (v6)
          break;
        v29 += 4;
        sub_1BA73B1B8(v30, v31, v32);
        swift_release();
        if (!--v28)
        {
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      sub_1BA73B1B8(v30, v31, v32);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_112:
      swift_release();
      swift_release();
LABEL_113:
      swift_release();
      swift_release();
      return swift_release();
    }
    swift_retain();
    swift_retain();
LABEL_24:
    v34 = *(_QWORD *)(v26 + 32);
    if ((v34 & 0x8000000000000000) == 0)
    {
LABEL_91:
      swift_release();
      swift_release();
      goto LABEL_92;
    }
    v35 = *(_QWORD *)(v34 + 16);
    v36 = *(_QWORD *)(v35 + 24);
    v37 = *(_QWORD *)(v36 + 16);
    if (v37)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v38 = (_QWORD *)(v36 + 56);
      while (1)
      {
        v39 = *(v38 - 3);
        v40 = *(v38 - 2);
        v41 = *((unsigned __int8 *)v38 - 8);
        v42 = *v38;
        sub_1BA73B1CC(v39, v40, *((_BYTE *)v38 - 8));
        swift_retain();
        sub_1BABC99CC(v105, a2, v39, v40, v41, v42);
        if (v7)
          break;
        v38 += 4;
        sub_1BA73B1B8(v39, v40, v41);
        swift_release();
        if (!--v37)
        {
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
      }
      sub_1BA73B1B8(v39, v40, v41);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_111;
    }
    swift_retain();
    swift_retain();
LABEL_32:
    v43 = *(_QWORD *)(v35 + 32);
    if ((v43 & 0x8000000000000000) == 0)
    {
      swift_release();
LABEL_90:
      swift_release();
      goto LABEL_91;
    }
    v44 = *(_QWORD *)(v43 + 16);
    v45 = *(_QWORD *)(*(_QWORD *)(v44 + 24) + 16);
    if (v45)
    {
      v46 = *(_QWORD *)(v44 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v47 = (_QWORD *)(v46 + 56);
      while (1)
      {
        v48 = *(v47 - 3);
        v49 = *(v47 - 2);
        v50 = *((unsigned __int8 *)v47 - 8);
        v51 = *v47;
        sub_1BA73B1CC(v48, v49, *((_BYTE *)v47 - 8));
        swift_retain();
        sub_1BABC99CC(v105, a2, v48, v49, v50, v51);
        if (v7)
          break;
        v47 += 4;
        sub_1BA73B1B8(v48, v49, v50);
        swift_release();
        if (!--v45)
        {
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
      }
      sub_1BA73B1B8(v48, v49, v50);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_110;
    }
    swift_retain();
    swift_retain();
LABEL_41:
    v52 = *(_QWORD *)(v44 + 32);
    if ((v52 & 0x8000000000000000) == 0)
    {
LABEL_89:
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_90;
    }
    v53 = *(_QWORD *)(v52 + 16);
    v54 = *(_QWORD *)(*(_QWORD *)(v53 + 24) + 16);
    if (v54)
    {
      v55 = *(_QWORD *)(v53 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v56 = (_QWORD *)(v55 + 56);
      while (1)
      {
        v57 = *(v56 - 3);
        v58 = *(v56 - 2);
        v59 = *((unsigned __int8 *)v56 - 8);
        v60 = *v56;
        sub_1BA73B1CC(v57, v58, *((_BYTE *)v56 - 8));
        swift_retain();
        sub_1BABC99CC(v105, a2, v57, v58, v59, v60);
        if (v7)
          break;
        v56 += 4;
        sub_1BA73B1B8(v57, v58, v59);
        swift_release();
        if (!--v54)
        {
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
      }
      sub_1BA73B1B8(v57, v58, v59);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_109;
    }
    swift_retain();
    swift_retain();
LABEL_50:
    v61 = *(_QWORD *)(v53 + 32);
    if ((v61 & 0x8000000000000000) == 0)
    {
      swift_release();
      swift_release();
      goto LABEL_89;
    }
    v62 = *(_QWORD *)(*(_QWORD *)(v61 + 16) + 24);
    v63 = *(_QWORD *)(v62 + 16);
    v102 = *(_QWORD *)(v61 + 16);
    if (v63)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v64 = (_QWORD *)(v62 + 56);
      while (1)
      {
        v65 = *(v64 - 3);
        v66 = *(v64 - 2);
        v67 = *((unsigned __int8 *)v64 - 8);
        v68 = *v64;
        sub_1BA73B1CC(v65, v66, *((_BYTE *)v64 - 8));
        swift_retain();
        sub_1BABC99CC(v105, a2, v65, v66, v67, v68);
        if (v7)
          break;
        v64 += 4;
        sub_1BA73B1B8(v65, v66, v67);
        swift_release();
        if (!--v63)
        {
          swift_bridgeObjectRelease();
          goto LABEL_59;
        }
      }
      sub_1BA73B1B8(v65, v66, v67);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_108;
    }
    swift_retain();
    swift_retain();
LABEL_59:
    v69 = *(_QWORD *)(v102 + 32);
    if ((v69 & 0x8000000000000000) == 0)
    {
LABEL_88:
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_89;
    }
    v101 = *(_QWORD *)(v69 + 16);
    v70 = *(_QWORD *)(v101 + 24);
    v71 = *(_QWORD *)(v70 + 16);
    if (v71)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v72 = (_QWORD *)(v70 + 56);
      while (1)
      {
        v73 = *(v72 - 3);
        v74 = *(v72 - 2);
        v75 = *((unsigned __int8 *)v72 - 8);
        v76 = *v72;
        sub_1BA73B1CC(v73, v74, *((_BYTE *)v72 - 8));
        swift_retain();
        sub_1BABC99CC(v105, a2, v73, v74, v75, v76);
        if (v7)
          break;
        v72 += 4;
        sub_1BA73B1B8(v73, v74, v75);
        swift_release();
        if (!--v71)
        {
          swift_bridgeObjectRelease();
          goto LABEL_67;
        }
      }
      sub_1BA73B1B8(v73, v74, v75);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_107;
    }
    swift_retain();
    swift_retain();
LABEL_67:
    v77 = *(_QWORD *)(v101 + 32);
    if ((v77 & 0x8000000000000000) == 0)
    {
LABEL_87:
      swift_release();
      swift_release();
      goto LABEL_88;
    }
    v100 = *(_QWORD *)(v77 + 16);
    v78 = *(_QWORD *)(*(_QWORD *)(v100 + 24) + 16);
    if (v78)
    {
      v79 = *(_QWORD *)(v100 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v80 = (_QWORD *)(v79 + 56);
      while (1)
      {
        v81 = *(v80 - 3);
        v82 = *(v80 - 2);
        v83 = *((unsigned __int8 *)v80 - 8);
        v84 = *v80;
        sub_1BA73B1CC(v81, v82, *((_BYTE *)v80 - 8));
        swift_retain();
        sub_1BABC99CC(v105, a2, v81, v82, v83, v84);
        if (v7)
          break;
        v80 += 4;
        sub_1BA73B1B8(v81, v82, v83);
        swift_release();
        if (!--v78)
        {
          swift_bridgeObjectRelease();
          goto LABEL_75;
        }
      }
      sub_1BA73B1B8(v81, v82, v83);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_106;
    }
    swift_retain();
    swift_retain();
LABEL_75:
    v85 = *(_QWORD *)(v100 + 32);
    if ((v85 & 0x8000000000000000) == 0)
    {
LABEL_86:
      swift_release();
      swift_release();
      goto LABEL_87;
    }
    v99 = *(_QWORD *)(v85 + 16);
    v86 = *(_QWORD *)(*(_QWORD *)(v99 + 24) + 16);
    if (v86)
    {
      swift_retain();
      swift_retain();
      v87 = (_QWORD *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        v88 = *(v87 - 3);
        v89 = *(v87 - 2);
        v90 = *((unsigned __int8 *)v87 - 8);
        v91 = *v87;
        sub_1BA73B1CC(v88, v89, *((_BYTE *)v87 - 8));
        swift_retain();
        sub_1BABC99CC(v105, a2, v88, v89, v90, v91);
        if (v7)
          break;
        v87 += 4;
        sub_1BA73B1B8(v88, v89, v90);
        swift_release();
        if (!--v86)
        {
          swift_bridgeObjectRelease();
          goto LABEL_84;
        }
      }
      sub_1BA73B1B8(v88, v89, v90);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      swift_retain();
      swift_retain();
LABEL_84:
      v92 = *(_QWORD *)(v99 + 32);
      if ((v92 & 0x8000000000000000) == 0)
      {
        swift_release();
        swift_release();
        goto LABEL_86;
      }
      v93 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v92 + 16) + 24) + 16);
      if (!v93)
      {
        swift_retain();
        swift_retain();
LABEL_101:
        swift_retain();
        sub_1BAB72910(v105, a2, &type metadata for FormatAccessibilityData, &protocol witness table for FormatAccessibilityData);
        if (!v7)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_86;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
LABEL_105:
        swift_release();
LABEL_106:
        swift_release();
        swift_release();
LABEL_107:
        swift_release();
        swift_release();
LABEL_108:
        swift_release();
        swift_release();
LABEL_109:
        swift_release();
        swift_release();
LABEL_110:
        swift_release();
        swift_release();
LABEL_111:
        swift_release();
        swift_release();
        goto LABEL_112;
      }
      swift_retain();
      swift_retain();
      v94 = (_QWORD *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        v95 = *(v94 - 3);
        v96 = *(v94 - 2);
        v97 = *((unsigned __int8 *)v94 - 8);
        v98 = *v94;
        sub_1BA73B1CC(v95, v96, *((_BYTE *)v94 - 8));
        swift_retain();
        sub_1BABC99CC(v105, a2, v95, v96, v97, v98);
        if (v7)
          break;
        v94 += 4;
        sub_1BA73B1B8(v95, v96, v97);
        swift_release();
        if (!--v93)
        {
          swift_bridgeObjectRelease();
          goto LABEL_101;
        }
      }
      sub_1BA73B1B8(v95, v96, v97);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    swift_bridgeObjectRelease();
    goto LABEL_105;
  }
  return result;
}

uint64_t sub_1BABCA7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3 + *(int *)(v9 + 28), v6, v7);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v11 = *((_QWORD *)&v15 + 1);
    v12 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, a2, v11, v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  }
  else
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    return sub_1BA65DB80((uint64_t)&v14, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

uint64_t sub_1BABCA914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BABCA7EC(a1, a2, a3);
}

uint64_t sub_1BABCA928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BABB09A8(a1, a2, a3);
}

void FormatGroupBinding.Command.bind(binder:context:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BABCA98C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if ((_BYTE)v1)
  {
    if (v1 == 1)
      return result;
  }
  else
  {
    if ((~v3 & 0xF000000000000007) == 0)
      return result;
    sub_1BA856ECC(v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA856DD0);
    sub_1BA5E7FF4(v3);
    FormatTextContent.bind(binder:context:)();
    sub_1BA5E800C(v3);
  }
  return sub_1BA856ECC(v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA7EDFFC);
}

uint64_t FormatTagBinding.Command.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t result;

  v1 = *(_QWORD *)v0;
  if (*(_BYTE *)(v0 + 16))
    v2 = 1;
  else
    v2 = (*(_QWORD *)v0 & 0xF000000000000007) == 0xF000000000000007;
  if (!v2)
  {
    v3 = *(_QWORD *)(v0 + 8);
    sub_1BA856DD0(v1, v3, 0);
    sub_1BA5E7FF4(v1);
    FormatTextContent.bind(binder:context:)();
    sub_1BA5E800C(v1);
    return sub_1BA7EDFFC(v1, v3, 0);
  }
  return result;
}

void FormatSportsEventBinding.Command.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned __int8 *)(v0 + 24);
  if (v4 >> 6 > 1)
  {
    if ((v4 & 0x3F) != 0)
    {
      if ((v4 & 0x3F) == 1)
        return;
      sub_1BA856F00(v2, v1, v3, v4, (uint64_t (*)(void))sub_1BA7EDFFC);
      v5 = v2;
      v6 = v1;
      v7 = v3;
      v8 = v4;
      goto LABEL_14;
    }
    if ((~v1 & 0xF000000000000007) == 0)
      return;
    sub_1BA856F00(v2, v1, v3, v4, (uint64_t (*)(void))sub_1BA856DD0);
    sub_1BA5E7FF4(v1);
    FormatTextContent.bind(binder:context:)();
    v9 = v1;
  }
  else
  {
    if (*(_QWORD *)(v0 + 16))
    {
      if (*(_QWORD *)(v0 + 16) == 1)
        return;
      goto LABEL_13;
    }
    if ((~v2 & 0xF000000000000007) == 0)
      return;
    sub_1BA856F00(v2, v1, v3, v4, (uint64_t (*)(void))sub_1BA856DD0);
    sub_1BA5E7FF4(v2);
    FormatTextContent.bind(binder:context:)();
    v9 = v2;
  }
  sub_1BA5E800C(v9);
LABEL_13:
  v5 = v2;
  v6 = v1;
  v7 = v3;
  v8 = v4;
LABEL_14:
  sub_1BA856F00(v5, v6, v7, v8, (uint64_t (*)(void))sub_1BA7EDFFC);
}

void FormatLiveActivityBinding.Command.bind(binder:context:)()
{
  sub_1BAC67464();
}

void sub_1BABCACEC()
{
  FormatCommandBinding.bind(binder:context:)();
}

uint64_t sub_1BABCAD00(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return FormatCommandValue.bind(binder:context:)(a1, a2, a3);
}

uint64_t sub_1BABCAD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3 + *(int *)(v9 + 44), v6, v7);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v11 = *((_QWORD *)&v15 + 1);
    v12 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, a2, v11, v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  }
  else
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    return sub_1BA65DB80((uint64_t)&v14, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

uint64_t sub_1BABCAE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BABCAD14(a1, a2, a3);
}

uint64_t sub_1BABCAE50()
{
  return FormatComputedInvalidation.bind(binder:context:)();
}

uint64_t FormatCustomItemDefinition.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v6 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *v2;
  v11 = *(_QWORD *)(*v2 + 16);
  if (v11)
  {
    v12 = result + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v13 = *(_QWORD *)(v7 + 72);
    v14[1] = *v2;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v12, (uint64_t)v9, type metadata accessor for FormatPropertyDefinition);
      FormatPropertyDefinition.bind(binder:context:)(a1, a2);
      sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatPropertyDefinition);
      if (v3)
        break;
      v12 += v13;
      --v11;
    }
    while (v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABCAF60(uint64_t a1, uint64_t a2)
{
  return FormatCustomItemDefinition.bind(binder:context:)(a1, a2);
}

uint64_t FormatCustomNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v4 = v2;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2[7];
  v35 = v11;
  sub_1BA71CA6C(v11);
  FormatSize.bind(binder:context:)();
  if (v3)
    return sub_1BA719718(v11);
  sub_1BA719718(v11);
  swift_beginAccess();
  v13 = v2[9];
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v36 = v8;
    v33 = v2;
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v14; ++i)
    {
      v16 = *(_QWORD *)(v13 + 8 * i + 32);
      v34 = v16;
      sub_1BA7196DC(v16);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v16);
    }
    swift_bridgeObjectRelease_n();
    v4 = v33;
    v8 = v36;
  }
  v17 = v4[10];
  if (v17)
  {
    v18 = *(_QWORD *)(v17 + 56);
    if (v18)
    {
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v32[0] = v4[10];
        v32[1] = v18;
        v33 = v4;
        v20 = v8;
        v21 = v18 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v36 = *(_QWORD *)(v20 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1BA4C2DD8(v21, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v34 = *((_QWORD *)v10 + 2);
          swift_retain();
          FormatOptionValue.bind(binder:context:)(a1, a2);
          swift_release();
          sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v21 += v36;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        v4 = v33;
        v17 = v32[0];
      }
    }
    swift_beginAccess();
    v22 = *(_QWORD *)(v17 + 64);
    swift_bridgeObjectRetain();
    sub_1BAB7F3A4(a1, a2, v22);
    swift_bridgeObjectRelease();
  }
  v23 = v4[11];
  if (v23)
  {
    swift_beginAccess();
    v24 = *(_QWORD *)(v23 + 72);
    if (v24)
    {
      swift_bridgeObjectRetain();
      sub_1BAB758D0(a1, a2, v24);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v25 = *(_QWORD *)(v23 + 88);
    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      swift_bridgeObjectRetain_n();
      v27 = (uint64_t *)(v25 + 72);
      do
      {
        v28 = *v27;
        if (*v27)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAB758D0(a1, a2, v28);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v27 += 7;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease_n();
    }
  }
  result = swift_beginAccess();
  v29 = v4[13];
  if (v29 >> 62 == 1)
  {
    v30 = *(_QWORD *)(v29 + 16);
    v31 = *(_QWORD *)(v29 + 24);
    sub_1BA67D3F4(v4[13]);
    sub_1BA67D3F4(v30);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(a1, a2, v30, v31);
    sub_1BA6EEDB4(v30);
    swift_bridgeObjectRelease();
    return sub_1BA6EEDB4(v29);
  }
  return result;
}

uint64_t FormatCustomNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a2;
  v5 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + 56);
  if (v9 && (v10 = *(_QWORD *)(v9 + 16)) != 0)
  {
    v16 = v2;
    v17 = v9;
    v11 = v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v12 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BA4C2DD8(v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v18 = *((_QWORD *)v8 + 2);
      swift_retain();
      FormatOptionValue.bind(binder:context:)(a1, v19);
      if (v3)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v11 += v12;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        v2 = v16;
        goto LABEL_7;
      }
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  }
  else
  {
LABEL_7:
    swift_beginAccess();
    v13 = *(_QWORD *)(v2 + 64);
    swift_bridgeObjectRetain();
    sub_1BAB7F3A4(a1, v19, v13);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BABCB4FC(uint64_t a1, uint64_t a2)
{
  return FormatCustomNode.bind(binder:context:)(a1, a2);
}

void sub_1BABCB51C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v2;
  v7 = *(_QWORD *)(v6 + 56);
  if (!v7 || (sub_1BAB75B74(a1, a2, v7), !v3))
  {
    swift_beginAccess();
    v8 = *(_QWORD *)(v6 + 64);
    swift_bridgeObjectRetain();
    sub_1BAB7F3A4(a1, a2, v8);
    swift_bridgeObjectRelease();
  }
}

uint64_t FormatCustomNodeStyle.Selector.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a2;
  v5 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)(v2 + 24);
  if (result)
  {
    v10 = *(_QWORD *)(result + 16);
    if (v10)
    {
      v11 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v12 = *(_QWORD *)(v6 + 72);
      v13 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BA4C2DD8(v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v15 = *((_QWORD *)v8 + 2);
        swift_retain();
        FormatOptionValue.bind(binder:context:)(a1, v14);
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v11 += v12;
        if (!--v10)
          return swift_bridgeObjectRelease();
      }
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1BABCB6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 24);
  if (v3)
    sub_1BAB75B74(a1, a2, v3);
}

void FormatDateTimeOffset.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - v7;
  v10 = *v2;
  v9 = v2[1];
  v11 = *(_QWORD *)(*v2 + 16);
  if (v11)
  {
    v19 = (char *)&v19 - v7;
    swift_bridgeObjectRetain_n();
    v12 = (_BYTE *)(v10 + 40);
    while (1)
    {
      if ((*v12 & 1) == 0)
      {
        v20 = *((_QWORD *)v12 - 1);
        v13 = v20;
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v3)
        {
          sub_1BA72C46C(v13, 0);
          sub_1BA72C46C(v13, 0);
          swift_bridgeObjectRelease_n();
          return;
        }
        sub_1BA72C46C(v13, 0);
        sub_1BA72C46C(v13, 0);
      }
      v12 += 16;
      if (!--v11)
      {
        swift_bridgeObjectRelease_n();
        v8 = v19;
        break;
      }
    }
  }
  if ((v9 >> 62) - 2 < 2)
    return;
  if (v9 >> 62)
  {
    v18 = *(_QWORD *)(v9 + 24);
    v20 = *(_QWORD *)(v9 + 16);
    v21 = v18;
    sub_1BA739250(v9);
    swift_bridgeObjectRetain();
    sub_1BA739250(v18);
    FormatDateTimeOffset.bind(binder:context:)(a1, a2);
    swift_bridgeObjectRelease();
    sub_1BA6F5D74(v18);
  }
  else
  {
    if (*(_BYTE *)(v9 + 40))
      return;
    v14 = *(_QWORD *)(v9 + 24);
    v15 = *(_QWORD *)(v9 + 32);
    v20 = *(_QWORD *)(v9 + 16);
    v16 = v20;
    v21 = v14;
    v22 = v15;
    v23 = 1;
    sub_1BA739250(v9);
    sub_1BA690C00(v16, v14, v15, 0);
    v17 = sub_1BB6B84D4(&v20, &v23);
    if (!v3)
    {
      sub_1BB3757A0(v16, v14, v17, 1, (uint64_t)v8);
      sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
  }
  sub_1BA6F5D74(v9);
}

void sub_1BABCB958(uint64_t a1, uint64_t a2)
{
  FormatDateTime.bind(binder:context:)(a1, a2);
}

void sub_1BABCB96C(uint64_t a1, uint64_t a2)
{
  FormatDateTimeOffset.bind(binder:context:)(a1, a2);
}

unint64_t FormatDimensionSizing.bind(binder:context:)()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t result;

  v3 = *v0;
  v2 = v0[1];
  sub_1BA705894(*v0);
  FormatDimensionSizingValue.bind(binder:context:)();
  result = sub_1BA7058C4(v3);
  if (!v1)
  {
    sub_1BA705894(v2);
    FormatDimensionSizingValue.bind(binder:context:)();
    return sub_1BA7058C4(v2);
  }
  return result;
}

unint64_t sub_1BABCBA20()
{
  return FormatDimensionSizing.bind(binder:context:)();
}

uint64_t FormatFontMetricSizing.bind(binder:context:)()
{
  return sub_1BABE111C();
}

void sub_1BABCBA48()
{
  FormatDimensionSizingValue.bind(binder:context:)();
}

_QWORD *FormatDirectionalGradient.bind(binder:context:)()
{
  __int128 *v0;
  uint64_t v1;
  int v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20[8];
  _BYTE v21[136];
  uint64_t v22;

  sub_1BA895FE8(v0, (uint64_t)v20);
  sub_1BA895FE8(v20, (uint64_t)v21);
  v2 = sub_1BA896024((uint64_t)v21);
  result = (_QWORD *)sub_1BA896030((uint64_t)v21);
  if (v2 == 1)
  {
    v4 = result[14];
    v5 = *(_QWORD *)(v4 + 16);
    if (!v5)
      return result;
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v22 = *(_QWORD *)(v4 + 8 * v6 + 32);
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v1)
        break;
      ++v6;
      swift_release();
      if (v5 == v6)
        return (_QWORD *)swift_bridgeObjectRelease();
    }
    goto LABEL_19;
  }
  v7 = *result;
  v9 = result[6];
  v8 = result[7];
  v10 = *(_QWORD *)(*result + 16);
  if (v10)
  {
    v19 = result[7];
    swift_bridgeObjectRetain();
    v11 = 0;
    while (1)
    {
      v22 = *(_QWORD *)(v7 + 8 * v11 + 32);
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v1)
        break;
      ++v11;
      swift_release();
      if (v10 == v11)
      {
        result = (_QWORD *)swift_bridgeObjectRelease();
        v8 = v19;
        goto LABEL_12;
      }
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_release();
  }
LABEL_12:
  if (v9)
  {
    v12 = *(_QWORD *)(v9 + 16);
    if (v12)
    {
      v13 = swift_bridgeObjectRetain();
      sub_1BA5DCC20(v13);
      swift_bridgeObjectRetain();
      v14 = (_BYTE *)(v9 + 40);
      do
      {
        if ((*v14 & 1) == 0)
        {
          v22 = *((_QWORD *)v14 - 1);
          v15 = v22;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v1)
          {
            sub_1BA72C46C(v15, 0);
            sub_1BA72C46C(v15, 0);
            goto LABEL_29;
          }
          sub_1BA72C46C(v15, 0);
          sub_1BA72C46C(v15, 0);
        }
        v14 += 16;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n();
      v16 = *(_QWORD *)(v8 + 16);
      if (v16)
        goto LABEL_23;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = *(_QWORD *)(v8 + 16);
      if (v16)
      {
LABEL_23:
        swift_bridgeObjectRetain_n();
        v17 = (_BYTE *)(v8 + 40);
        do
        {
          if ((*v17 & 1) == 0)
          {
            v22 = *((_QWORD *)v17 - 1);
            v18 = v22;
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            sub_1BA72C46C(v18, 0);
            sub_1BA72C46C(v18, 0);
            if (v1)
              break;
          }
          v17 += 16;
          --v16;
        }
        while (v16);
LABEL_29:
        swift_bridgeObjectRelease_n();
      }
    }
    return (_QWORD *)sub_1BA5DCC4C(v9);
  }
  return result;
}

uint64_t sub_1BABCBD40(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v3;
  int v6;
  uint64_t *v7;
  uint64_t result;
  uint64_t v9;
  __int128 v10[8];
  _BYTE v11[128];

  sub_1BA895FE8(v2, (uint64_t)v10);
  sub_1BA895FE8(v10, (uint64_t)v11);
  v6 = sub_1BA896024((uint64_t)v11);
  v7 = (uint64_t *)sub_1BA896030((uint64_t)v11);
  if (v6 == 1)
    return sub_1BAB75550(a1, a2, v7[14]);
  v9 = v7[6];
  result = sub_1BAB75550(a1, a2, *v7);
  if (!v3)
  {
    if (v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      FormatSizeEquation.bind(binder:context:)();
      return sub_1BA5DCC4C(v9);
    }
  }
  return result;
}

void sub_1BABCBE34()
{
  FormatEdgeInsetsEquation.bind(binder:context:)();
}

uint64_t sub_1BABCBE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FormatEquation.bind(binder:context:)(a1, a2, a3, a4);
}

uint64_t FormatEquationToken.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v16 + 16))(v15, v17, v13);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v15, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if (swift_dynamicCast())
    {
      v19 = *((_QWORD *)&v22 + 1);
      v20 = v23;
      __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8))(a1, a2, v19, v20);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
    }
    else
    {
      v23 = 0;
      v21 = 0u;
      v22 = 0u;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return sub_1BA65DB80((uint64_t)&v21, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    }
  }
  return result;
}

uint64_t sub_1BABCC03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatEquationToken.bind(binder:context:)(a1, a2, a3);
}

uint64_t FormatOptionExpression.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(unsigned __int16 *)(v2 + 32);
  if ((v3 & 0xFFFF8001) == 0)
  {
    v5 = result;
    v6 = *(_QWORD *)(v2 + 24);
    v8 = *(_QWORD *)v2;
    v7 = *(_QWORD *)(v2 + 8);
    v9 = *(_QWORD *)(v2 + 16);
    sub_1BA711500(*(_QWORD *)v2, v7, v9, v6, v3);
    sub_1BA7114EC(v9, v6, 0);
    FormatOptionValue.bind(binder:context:)(v5, a2);
    sub_1BA636D1C(v9, v6, 0);
    return sub_1BA636D30(v8, v7, v9, v6, v3);
  }
  return result;
}

uint64_t FormatNotExpression.bind(binder:context:)()
{
  swift_retain();
  FormatExpression.bind(binder:context:)();
  return swift_release();
}

uint64_t FormatOrExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABDFFE8(a1, a2, (void (*)(uint64_t, uint64_t))FormatExpression.bind(binder:context:));
}

uint64_t FormatFrameExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_BYTE *)(v2 + 40);
  sub_1BAA37668(v6, v7, v8, v9);
  FormatFrameExpressionLogic.bind(binder:context:)(a1, a2);
  return sub_1BAA376C0(v6, v7, v8, v9);
}

void sub_1BABCC238()
{
  FormatExpression.bind(binder:context:)();
}

void FormatFill.bind(binder:context:)()
{
  __int128 *v0;
  char *v1;
  __int128 v2[8];
  _BYTE v3[128];

  sub_1BA7439D4(v0, (uint64_t)v2);
  sub_1BA7439D4(v2, (uint64_t)v3);
  v1 = (char *)sub_1BABCC2B4 + 4 * byte_1BB8A5B84[sub_1BAB05900((uint64_t)v3)];
  __asm { BR              X10 }
}

_QWORD *sub_1BABCC2B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[44];

  sub_1BAB0593C(v1 - 208);
  sub_1BA6A0C50(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
  swift_retain();
  FormatColor.bind(binder:context:)();
  swift_release();
  if (!v0)
  {
    swift_retain();
    FormatColor.bind(binder:context:)();
    swift_release();
  }
  return sub_1BA6A0C50(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
}

uint64_t FormatSolidFill.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABDFFE8(a1, a2, (void (*)(uint64_t, uint64_t))FormatColor.bind(binder:context:));
}

void sub_1BABCC494()
{
  FormatFill.bind(binder:context:)();
}

void FormatFont.bind(binder:context:)()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X11 }
}

uint64_t sub_1BABCC5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = swift_projectBox();
  sub_1BA4C2DD8(v6, v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
  sub_1BA4C2DD8(v2 + *(int *)(v1 + 20), v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!*(_BYTE *)(v4 + 24))
    {
      v9 = *(_QWORD *)v4;
      v8 = *(_QWORD *)(v4 + 8);
      v10 = *(_QWORD *)(v4 + 16);
      *(_QWORD *)(v5 - 152) = *(_QWORD *)v4;
      *(_QWORD *)(v5 - 144) = v8;
      *(_QWORD *)(v5 - 136) = v10;
      *(_BYTE *)(v5 - 65) = 6;
      sub_1BA690C00(v9, v8, v10, 0);
      v11 = sub_1BB6B84D4((uint64_t *)(v5 - 152), (char *)(v5 - 65));
      if (!v0)
      {
        sub_1BB3757A0(v9, v8, v11, 1, v3);
        sub_1BA502AD0(v3, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
      }
      sub_1BA5A7EF8(v9, v8, v10, 0);
    }
  }
  else
  {
    sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  return sub_1BA4A2E80(v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
}

uint64_t FormatRemoteFont.bind(binder:context:)()
{
  return sub_1BAC65CFC();
}

void sub_1BABCC808()
{
  FormatFont.bind(binder:context:)();
}

_QWORD *FormatFontLineSizing.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *result;

  v5 = v2[1];
  if (!*v2 || (result = FormatTextNodeStyle.bind(binder:context:)(a1, a2), !v3))
  {
    swift_bridgeObjectRetain();
    sub_1BA75A6B4(a2, v5);
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1BABCC890(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *result;

  v5 = v2[1];
  if (!*v2 || (result = FormatTextNodeStyle.bind(binder:context:)(a1, a2), !v3))
  {
    swift_bridgeObjectRetain();
    sub_1BA75A6B4(a2, v5);
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABCC904(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BABB07FC(a1, a2, *v2);
}

uint64_t FormatFrameExpressionLogic.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = result;
  v7 = *(_QWORD *)v2;
  v6 = *(_QWORD *)(v2 + 8);
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(unsigned __int8 *)(v2 + 24);
  if (v9 >> 6)
  {
    if (v9 >> 6 != 1)
    {
      v19 = *(_QWORD *)(v2 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      FormatFrameExpressionLogicTextLines.bind(binder:context:)(v5, a2);
      v16 = v7;
      v17 = v19;
      v18 = v8;
      return sub_1BAA376C0(v16, v17, v18, v9);
    }
    v10 = *(_QWORD *)(v7 + 16);
    if (!v10)
      return result;
    v20 = *(_QWORD *)(v2 + 8);
    v21 = *(_QWORD *)(v2 + 16);
    sub_1BAA37668(*(_QWORD *)v2, v6, v8, v9);
    swift_bridgeObjectRetain();
    v11 = (_BYTE *)(v7 + 40);
    do
    {
      if ((*v11 & 1) == 0)
      {
        v12 = *((_QWORD *)v11 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v12, 0);
        sub_1BA72C46C(v12, 0);
        if (v3)
          break;
      }
      v11 += 16;
      --v10;
    }
    while (v10);
  }
  else
  {
    v13 = *(_QWORD *)(v7 + 16);
    if (!v13)
      return result;
    v20 = *(_QWORD *)(v2 + 8);
    v21 = *(_QWORD *)(v2 + 16);
    sub_1BAA37668(*(_QWORD *)v2, v6, v8, v9);
    swift_bridgeObjectRetain();
    v14 = (_BYTE *)(v7 + 40);
    do
    {
      if ((*v14 & 1) == 0)
      {
        v15 = *((_QWORD *)v14 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v15, 0);
        sub_1BA72C46C(v15, 0);
        if (v3)
          break;
      }
      v14 += 16;
      --v13;
    }
    while (v13);
  }
  sub_1BAA376C0(v7, v20, v21, v9);
  v16 = v7;
  v17 = v20;
  v18 = v21;
  return sub_1BAA376C0(v16, v17, v18, v9);
}

uint64_t sub_1BABCCB24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_BYTE *)(v2 + 40);
  sub_1BAA37668(v6, v7, v8, v9);
  FormatFrameExpressionLogic.bind(binder:context:)(a1, a2);
  return sub_1BAA376C0(v6, v7, v8, v9);
}

uint64_t FormatFrameExpressionLogicCompare.bind(binder:context:)()
{
  return sub_1BABE111C();
}

_QWORD *FormatFrameExpressionLogicTextLines.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain_n();
    v8 = (_BYTE *)(v6 + 40);
    do
    {
      if ((*v8 & 1) == 0)
      {
        v9 = *((_QWORD *)v8 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v9, 0);
        sub_1BA72C46C(v9, 0);
        if (v3)
          return (_QWORD *)swift_bridgeObjectRelease_n();
      }
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease_n();
  }
  return FormatTextNodeStyle.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABCCCD4(uint64_t a1, uint64_t a2)
{
  return FormatFrameExpressionLogic.bind(binder:context:)(a1, a2);
}

_QWORD *sub_1BABCCCE8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *result;

  result = (_QWORD *)sub_1BABB07FC(a1, a2, *v2);
  if (!v3)
    return FormatTextNodeStyle.bind(binder:context:)(a1, a2);
  return result;
}

uint64_t FormatFrameNode.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;

  v7 = *(_QWORD *)(v0 + 32);
  sub_1BA71CA6C(v7);
  FormatSize.bind(binder:context:)();
  result = sub_1BA719718(v7);
  if (!v1)
  {
    result = swift_beginAccess();
    v3 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v4; ++i)
      {
        v6 = *(_QWORD *)(v3 + 8 * i + 32);
        sub_1BA7196DC(v6);
        FormatAdjustment.bind(binder:context:)();
        sub_1BA719340(v6);
      }
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BABCCE38()
{
  return FormatFrameNode.bind(binder:context:)();
}

void FormatGeometryAdjustment.bindChildren(binder:context:)()
{
  sub_1BA756834();
}

uint64_t sub_1BABCCE6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = v2[6];
  result = sub_1BAB75550(a1, a2, *v2);
  if (!v3)
  {
    if (v4)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      FormatSizeEquation.bind(binder:context:)();
      return sub_1BA5DCC4C(v4);
    }
  }
  return result;
}

uint64_t FormatGroupColumnSystem.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v4 = v2[1];
  if (v4 >= 2)
  {
    v6 = result;
    v7 = *v2;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if (swift_dynamicCast())
    {
      v8 = *((_QWORD *)&v11 + 1);
      v9 = v12;
      __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(v6, a2, v8, v9);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
      if (v3)
        return result;
    }
    else
    {
      v12 = 0;
      v10 = 0u;
      v11 = 0u;
      sub_1BA65DB80((uint64_t)&v10, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    }
    swift_bridgeObjectRetain();
    sub_1BABB05F0(v6, a2, v4);
    return sub_1BA78DE14(v7, v4);
  }
  return result;
}

uint64_t sub_1BABCD034(uint64_t a1, uint64_t a2)
{
  return FormatGroup.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABCD048(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;

  v3 = *(char *)(v2 + 8);
  if (v3 < 0 && ((2 * *(_BYTE *)(v2 + 9)) | ((v3 & 0x20) != 0)) == 7)
    return sub_1BABB2FD8(result, a2, *(_QWORD *)v2, v3 & 0x1F);
  return result;
}

uint64_t sub_1BABCD08C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v3 = *(_BYTE *)(v2 + 8);
  if ((v3 & 0xC0) == 0x80 && ((2 * *(_BYTE *)(v2 + 9)) | ((v3 & 0x20) != 0)) >= 5u)
    return sub_1BABB2FD8(result, a2, *(_QWORD *)v2, v3 & 0x1F);
  return result;
}

void sub_1BABCD0D4()
{
  FormatGroupBinding.Command.bind(binder:context:)();
}

void FormatTagBinding.Image.bind(binder:context:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BABCD13C()
{
  unint64_t v0;
  uint64_t v1;

  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  FormatTagIconStyle.bind(binder:context:)();
  return sub_1BA967D84(v1, v0);
}

uint64_t FormatWeatherBinding.Image.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 8);
  v5 = *(_BYTE *)(v0 + 17);
  sub_1BA740408(*(_QWORD *)v0, v4, v2, v5);
  FormatSymbolConfig.bind(binder:context:)();
  return sub_1BA740434(v1, v4, v2, v5);
}

void FormatSportsEventBinding.Image.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned int v3;

  v1 = *(_QWORD *)(v0 + 8);
  if (*(_BYTE *)(v0 + 40))
    v2 = 2;
  else
    v2 = 0;
  v3 = v2 & 0xFFFFFFFE | (v1 >> 1) & 1;
  if (v3)
  {
    if (v3 == 1)
      __asm { BR              X10 }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_1BABCD36C()
{
  JUMPOUT(0x1BABCD484);
}

void sub_1BABCD388()
{
  JUMPOUT(0x1BABCD3A4);
}

void sub_1BABCD3B0()
{
  JUMPOUT(0x1BABCD488);
}

void sub_1BABCD3E4()
{
  JUMPOUT(0x1BABCD4C0);
}

void sub_1BABCD414()
{
  JUMPOUT(0x1BABCD420);
}

void sub_1BABCD438()
{
  JUMPOUT(0x1BABCD544);
}

void sub_1BABCD464()
{
  JUMPOUT(0x1BABCD470);
}

void sub_1BABCD4EC()
{
  JUMPOUT(0x1BABCD4C0);
}

void sub_1BABCD574()
{
  FormatGroupBinding.Image.bind(binder:context:)();
}

void FormatGroupBinding.Text.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v2 + 8);
  if (((1 << (*(_BYTE *)(v2 + 48) >> 4)) & 0x777) == 0)
  {
    if (*(unsigned __int8 *)(v2 + 48) >> 4 == 3)
    {
      v5 = *(_QWORD *)(v2 + 16);
      *(_QWORD *)&v9 = *(_QWORD *)v2;
      *((_QWORD *)&v9 + 1) = v3;
      LOWORD(v10) = v5;
      sub_1BAC64FF0();
    }
    else if ((v3 & 0x80) != 0)
    {
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if (swift_dynamicCast())
      {
        v7 = *((_QWORD *)&v10 + 1);
        v8 = v11;
        __swift_project_boxed_opaque_existential_1(&v9, *((uint64_t *)&v10 + 1));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, v7, v8);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
      }
      else
      {
        v11 = 0;
        v9 = 0u;
        v10 = 0u;
        sub_1BA65DB80((uint64_t)&v9, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
    }
  }
}

void FormatWeatherBinding.Text.bind(binder:context:)()
{
  sub_1BAC64FF0();
}

uint64_t FormatSportsEventBinding.Text.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABCD70C(a1, a2);
}

uint64_t sub_1BABCD70C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  if (*(char *)(v2 + 8) < 0)
  {
    v4 = result;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if (swift_dynamicCast())
    {
      v5 = *((_QWORD *)&v8 + 1);
      v6 = v9;
      __swift_project_boxed_opaque_existential_1(&v7, *((uint64_t *)&v8 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v4, a2, v5, v6);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    }
    else
    {
      v9 = 0;
      v7 = 0u;
      v8 = 0u;
      return sub_1BA65DB80((uint64_t)&v7, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    }
  }
  return result;
}

void sub_1BABCD800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 8);
  if (((1 << (*(_BYTE *)(v2 + 48) >> 4)) & 0x777) == 0)
  {
    if (*(unsigned __int8 *)(v2 + 48) >> 4 == 3)
    {
      sub_1BAC64FF0();
    }
    else if ((v3 & 0x80) != 0)
    {
      sub_1BABB2FD8(a1, a2, *(_QWORD *)v2, v3 & 0x3F);
    }
  }
}

uint64_t sub_1BABCD888(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(v2 + 8);
  if (v3 >= 2)
    return sub_1BABC2E38(result, a2, *(_BYTE *)v2 & 1, v3);
  return result;
}

uint64_t FormatGroupNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABD54C8(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA3568);
}

uint64_t FormatGroupNodeMask.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  unint64_t v17;
  unint64_t v18;

  v4 = v2;
  if (!*(_QWORD *)(v2 + 16) || (result = FormatGroupNodeMaskStyle.bind(binder:context:)(a1, a2), !v3))
  {
    v8 = *(_QWORD *)(v2 + 24);
    if (v8)
    {
      swift_beginAccess();
      v9 = *(_QWORD *)(v8 + 72);
      if (v9)
      {
        swift_bridgeObjectRetain();
        sub_1BAB758D0(a1, a2, v9);
        result = swift_bridgeObjectRelease();
        if (v3)
          return result;
      }
      swift_beginAccess();
      v10 = *(_QWORD *)(v8 + 88);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain_n();
        v12 = (uint64_t *)(v10 + 72);
        do
        {
          v13 = *v12;
          if (*v12)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BAB758D0(a1, a2, v13);
            if (v3)
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v12 += 7;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease_n();
      }
    }
    swift_beginAccess();
    v18 = *(_QWORD *)(v4 + 32);
    sub_1BA71CA6C(v18);
    FormatSize.bind(binder:context:)();
    result = sub_1BA719718(v18);
    if (!v3)
    {
      result = swift_beginAccess();
      v14 = *(_QWORD *)(v4 + 40);
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        swift_bridgeObjectRetain_n();
        for (i = 0; i != v15; ++i)
        {
          v17 = *(_QWORD *)(v14 + 8 * i + 32);
          sub_1BA7196DC(v17);
          FormatAdjustment.bind(binder:context:)();
          sub_1BA719340(v17);
        }
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1BABCDB18(uint64_t a1, uint64_t a2)
{
  return FormatGroupNodeMask.bind(binder:context:)(a1, a2);
}

void FormatGroupNodeMaskPath.bind(binder:context:)()
{
  __asm { BR              X10 }
}

#error "1BABCDDBC: call analysis failed (funcsize=73)"

void sub_1BABCDEA8()
{
  __asm { BR              X10 }
}

uint64_t sub_1BABCDEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return sub_1BAB757B0(v4, v3, a3);
}

uint64_t FormatShadow.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v6;
  uint64_t result;

  v6 = *(unsigned __int8 *)(v2 + 80);
  swift_retain();
  FormatColor.bind(binder:context:)();
  result = swift_release();
  if (!v3)
  {
    switch(v6)
    {
      case 1:
      case 4:
        goto LABEL_4;
      case 2:
      case 3:
      case 5:
        sub_1BABD5EE8(a1, a2);
LABEL_4:
        result = sub_1BABD5EE8(a1, a2);
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_1BABCE070(uint64_t a1, uint64_t a2)
{
  return FormatGroupNodeMaskStyle.bind(binder:context:)(a1, a2);
}

uint64_t FormatGroupNodeMaskStyle.Selector.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  int v46;
  unsigned __int8 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v4 = v3;
  v6 = *(_QWORD *)(v2 + 88);
  v7 = *(_QWORD *)(v2 + 112);
  v75 = *(_QWORD *)(v2 + 96);
  v76 = *(_QWORD *)(v2 + 104);
  v9 = *(_QWORD *)(v2 + 120);
  v8 = *(_QWORD *)(v2 + 128);
  v11 = *(_QWORD *)(v2 + 136);
  v10 = *(_QWORD *)(v2 + 144);
  v78 = *(_QWORD *)(v2 + 160);
  v74 = *(_QWORD *)(v2 + 168);
  v12 = *(unsigned __int8 *)(v2 + 176);
  v77 = *(_QWORD *)(v2 + 152);
  result = *(_QWORD *)(v2 + 16);
  v14 = *(_QWORD *)(v2 + 24);
  v15 = *(_QWORD *)(v2 + 32);
  v16 = *(_QWORD *)(v2 + 40);
  v17 = *(_QWORD *)(v2 + 48);
  v18 = *(_QWORD *)(v2 + 56);
  v19 = *(_QWORD *)(v2 + 64);
  v20 = *(_QWORD *)(v2 + 72);
  v79 = v19;
  v80 = result;
  switch(*(_BYTE *)(v2 + 80))
  {
    case 1:
      v21 = *(_QWORD *)(result + 16);
      if (!v21)
        goto LABEL_14;
      v73 = v6;
      v62 = v12;
      v81 = a2;
      v66 = v7;
      v68 = v9;
      v64 = v8;
      v70 = v11;
      v51 = v10;
      v52 = v14;
      v54 = v15;
      v56 = v16;
      v58 = v17;
      v60 = v18;
      v50 = v20;
      v22 = result;
      sub_1BA7AF9FC(result, v14, v15, v16, v17, v18, v19, v20, 1);
      swift_bridgeObjectRetain();
      v23 = v22 + 40;
      while (1)
      {
        v82 = v21;
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(_QWORD *)v23;
        v26 = *(_QWORD *)(v23 + 8);
        v27 = *(_QWORD *)(v23 + 16);
        v28 = *(_QWORD *)(v23 + 24);
        v29 = *(_QWORD *)(v23 + 32);
        v30 = *(_BYTE *)(v23 + 40);
        sub_1BAC6607C(v24, *(_QWORD *)v23, v26, v27, v28, v29, v30);
        FormatBezierPathComponent.bind(binder:context:)();
        if (v3)
          break;
        v23 += 56;
        sub_1BAC66130(v24, v25, v26, v27, v28, v29, v30);
        --v21;
        if (v82 == 1)
        {
          sub_1BA7AF9E4(v80, v52, v54, v56, v58, v60, v79, v50, 1u);
          result = sub_1BA7AF9E4(v80, v52, v54, v56, v58, v60, v79, v50, 1u);
          v4 = 0;
          v10 = v51;
          v9 = v68;
          v11 = v70;
          v8 = v64;
          v7 = v66;
          a2 = v81;
          goto LABEL_42;
        }
      }
      sub_1BAC66130(v24, v25, v26, v27, v28, v29, v30);
      sub_1BA7AF9E4(v80, v52, v54, v56, v58, v60, v79, v50, 1u);
      return sub_1BA7AF9E4(v80, v52, v54, v56, v58, v60, v79, v50, 1u);
    case 2:
      v65 = *(_QWORD *)(v2 + 128);
      v67 = *(_QWORD *)(v2 + 112);
      v31 = *(_QWORD *)(result + 16);
      v69 = *(_QWORD *)(v2 + 120);
      v61 = *(_QWORD *)(v2 + 56);
      v62 = *(unsigned __int8 *)(v2 + 176);
      v73 = *(_QWORD *)(v2 + 88);
      v57 = *(_QWORD *)(v2 + 40);
      v59 = *(_QWORD *)(v2 + 48);
      v53 = *(_QWORD *)(v2 + 24);
      v55 = *(_QWORD *)(v2 + 32);
      if (v31)
      {
        sub_1BA7AF9CC(result, v14, v15, v16, v17, v18, v19, v20, 2u);
        swift_bridgeObjectRetain();
        for (i = 0; i != v31; ++i)
        {
          swift_retain();
          FormatColor.bind(binder:context:)();
          if (v3)
          {
            swift_bridgeObjectRelease();
            swift_release();
            return sub_1BA7AF9E4(v80, v53, v55, v57, v59, v61, v79, v20, 2u);
          }
          swift_release();
        }
        swift_bridgeObjectRelease();
        v7 = v67;
        v33 = v79;
        if (!v79)
          goto LABEL_12;
      }
      else
      {
        v33 = *(_QWORD *)(v2 + 64);
        sub_1BA7AF9CC(result, v14, v15, v16, v17, v18, v19, v20, 2u);
        if (!v33)
        {
LABEL_12:
          result = sub_1BA7AF9E4(v80, v53, v55, v57, v59, v61, 0, v20, 2u);
          v8 = v65;
          goto LABEL_42;
        }
      }
      v39 = *(_QWORD *)(v33 + 16);
      if (v39)
      {
        swift_bridgeObjectRetain();
        sub_1BA5DCC20(v79);
        swift_bridgeObjectRetain();
        v40 = (_BYTE *)(v79 + 40);
        do
        {
          if ((*v40 & 1) == 0)
          {
            v41 = *((_QWORD *)v40 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            if (v3)
            {
              sub_1BA72C46C(v41, 0);
              sub_1BA72C46C(v41, 0);
              v42 = v79;
              swift_bridgeObjectRelease_n();
              goto LABEL_39;
            }
            sub_1BA72C46C(v41, 0);
            sub_1BA72C46C(v41, 0);
          }
          v40 += 16;
          --v39;
        }
        while (v39);
        swift_bridgeObjectRelease_n();
        v43 = *(_QWORD *)(v20 + 16);
        if (v43)
          goto LABEL_33;
LABEL_41:
        sub_1BA5DCC4C(v79);
        result = sub_1BA7AF9E4(v80, v53, v55, v57, v59, v61, v79, v20, 2u);
        v8 = v65;
        v7 = v67;
        v9 = v69;
        goto LABEL_42;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43 = *(_QWORD *)(v20 + 16);
      if (!v43)
        goto LABEL_41;
LABEL_33:
      swift_bridgeObjectRetain_n();
      v44 = (_BYTE *)(v20 + 40);
      while (1)
      {
        if ((*v44 & 1) != 0)
          goto LABEL_35;
        v45 = *((_QWORD *)v44 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v3)
          break;
        sub_1BA72C46C(v45, 0);
        sub_1BA72C46C(v45, 0);
LABEL_35:
        v44 += 16;
        if (!--v43)
        {
          swift_bridgeObjectRelease_n();
          sub_1BA5DCC4C(v79);
          result = sub_1BA7AF9E4(v80, v53, v55, v57, v59, v61, v79, v20, 2u);
          v8 = v65;
          v7 = v67;
          v9 = v69;
LABEL_42:
          v12 = v62;
          v6 = v73;
          if (v73)
            goto LABEL_15;
          goto LABEL_43;
        }
      }
      sub_1BA72C46C(v45, 0);
      sub_1BA72C46C(v45, 0);
      swift_bridgeObjectRelease_n();
      v42 = v79;
LABEL_39:
      sub_1BA5DCC4C(v42);
      return sub_1BA7AF9E4(v80, v53, v55, v57, v59, v61, v42, v20, 2u);
    case 3:
      v71 = *(_QWORD *)(v2 + 136);
      v34 = *(_QWORD *)(v2 + 144);
      v35 = *(_QWORD *)(v2 + 88);
      v36 = *(unsigned __int8 *)(v2 + 176);
      result = sub_1BA7AF9E4(result, v14, v15, v16, v17, v18, v19, v20, 3u);
      v6 = v35;
      v10 = v34;
      v11 = v71;
      v12 = v36;
      goto LABEL_14;
    default:
LABEL_14:
      if (!v6)
        goto LABEL_43;
LABEL_15:
      v37 = *(_QWORD *)(v6 + 16);
      if (!v37)
        goto LABEL_43;
      v63 = v12;
      v72 = v11;
      v38 = swift_bridgeObjectRetain() + 64;
      do
      {
        v83 = v37;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        FormatColor.bind(binder:context:)();
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return swift_release_n();
        }
        swift_release();
        swift_retain();
        FormatFloat.bind(binder:context:)();
        v4 = 0;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v38 += 40;
        --v37;
      }
      while (v83 != 1);
      result = swift_bridgeObjectRelease();
      v11 = v72;
      v12 = v63;
LABEL_43:
      if (v12 != 254)
      {
        v46 = v12;
        swift_retain();
        FormatColor.bind(binder:context:)();
        if (v4)
        {
          return sub_1BA6E8A78(v75, v76, v7, v9, v8, v11, v10, v77, v78, v74, v46);
        }
        else
        {
          switch(v46)
          {
            case 0:
              return sub_1BA6E8A78(v75, v76, v7, v9, v8, v11, v10, v77, v78, v74, 0);
            case 1:
              sub_1BABD5EE8(a1, a2);
              v47 = 1;
              return sub_1BA6E8A78(v75, v76, v7, v9, v8, v11, v10, v77, v78, v74, v47);
            case 2:
              sub_1BABD5EE8(a1, a2);
              v48 = v77;
              sub_1BABD5EE8(a1, a2);
              v49 = 2;
              goto LABEL_57;
            case 3:
              sub_1BABD5EE8(a1, a2);
              v48 = v77;
              sub_1BABD5EE8(a1, a2);
              v49 = 3;
              goto LABEL_57;
            case 4:
              sub_1BABD5EE8(a1, a2);
              v47 = 4;
              return sub_1BA6E8A78(v75, v76, v7, v9, v8, v11, v10, v77, v78, v74, v47);
            case 5:
              sub_1BABD5EE8(a1, a2);
              v48 = v77;
              sub_1BABD5EE8(a1, a2);
              v49 = 5;
LABEL_57:
              result = sub_1BA6E8A78(v75, v76, v7, v9, v8, v11, v10, v48, v78, v74, v49);
              break;
            default:
              result = sub_1BA6E8A78(v75, v76, v7, v9, v8, v11, v10, v77, v78, v74, 0xFFu);
              break;
          }
        }
      }
      return result;
  }
}

uint64_t sub_1BABCEA8C(uint64_t a1, uint64_t a2)
{
  return FormatGroupNodeMaskStyle.Selector.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABCEAA0(uint64_t a1, uint64_t a2)
{
  return FormatGroupNodeStyle.bind(binder:context:)(a1, a2);
}

uint64_t FormatGroupNodeStyle.Selector.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unsigned __int8 v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = v3;
  result = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 56);
  v36 = *(_QWORD *)(v2 + 48);
  v10 = *(_QWORD *)(v2 + 64);
  v9 = *(_QWORD *)(v2 + 72);
  v12 = *(_QWORD *)(v2 + 80);
  v11 = *(_QWORD *)(v2 + 88);
  v14 = *(_QWORD *)(v2 + 96);
  v13 = *(_QWORD *)(v2 + 104);
  v37 = *(_QWORD *)(v2 + 112);
  v35 = *(_QWORD *)(v2 + 120);
  v15 = *(unsigned __int8 *)(v2 + 128);
  v16 = *(_QWORD *)(v2 + 136);
  if (result && (v17 = *(_QWORD *)(result + 16)) != 0)
  {
    v25 = *(unsigned __int8 *)(v2 + 128);
    v27 = *(_QWORD *)(v2 + 56);
    v29 = *(_QWORD *)(v2 + 64);
    v31 = *(_QWORD *)(v2 + 72);
    v33 = *(_QWORD *)(v2 + 104);
    v26 = *(_QWORD *)(v2 + 96);
    v18 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      v38 = v17;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      FormatColor.bind(binder:context:)();
      if (v4)
        break;
      swift_release();
      swift_retain();
      FormatFloat.bind(binder:context:)();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v18 += 40;
      v17 = -1;
      if (v38 == 1)
      {
        result = swift_bridgeObjectRelease();
        v14 = v26;
        v9 = v31;
        v13 = v33;
        v8 = v27;
        v10 = v29;
        v15 = v25;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_7:
    if (v15 != 254)
    {
      v32 = v9;
      v34 = v13;
      v28 = v8;
      v30 = v10;
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v4)
        return sub_1BA6E8A78(v36, v28, v30, v32, v12, v11, v14, v34, v37, v35, v15);
      v22 = v15;
      switch(v15)
      {
        case 1:
          sub_1BABD5EE8(a1, a2);
          result = sub_1BA6E8A78(v36, v28, v30, v32, v12, v11, v14, v34, v37, v35, 1u);
          goto LABEL_8;
        case 2:
          sub_1BABD5EE8(a1, a2);
          v23 = v34;
          sub_1BABD5EE8(a1, a2);
          v4 = 0;
          v24 = 2;
          goto LABEL_27;
        case 3:
          sub_1BABD5EE8(a1, a2);
          v23 = v34;
          sub_1BABD5EE8(a1, a2);
          v4 = 0;
          v24 = 3;
LABEL_27:
          result = sub_1BA6E8A78(v36, v28, v30, v32, v12, v11, v14, v23, v37, v35, v24);
          goto LABEL_8;
        case 4:
          sub_1BABD5EE8(a1, a2);
          goto LABEL_25;
        case 5:
          sub_1BABD5EE8(a1, a2);
          sub_1BABD5EE8(a1, a2);
          v4 = 0;
LABEL_25:
          v22 = v15;
          break;
        default:
          break;
      }
      result = sub_1BA6E8A78(v36, v28, v30, v32, v12, v11, v14, v34, v37, v35, v22);
    }
LABEL_8:
    if (v16)
    {
      v19 = *(_QWORD *)(v16 + 16);
      if (v19)
      {
        swift_bridgeObjectRetain_n();
        v20 = (_BYTE *)(v16 + 40);
        do
        {
          if ((*v20 & 1) == 0)
          {
            v21 = *((_QWORD *)v20 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            sub_1BA72C46C(v21, 0);
            sub_1BA72C46C(v21, 0);
            if (v4)
              break;
          }
          v20 += 16;
          --v19;
        }
        while (v19);
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1BABCEF74(uint64_t a1, uint64_t a2)
{
  return FormatGroupNodeStyle.Selector.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABCEF88(uint64_t a1, uint64_t a2)
{
  return FormatHBoxNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABCEFA8(uint64_t a1, uint64_t a2)
{
  return FormatHOverlayNode.bind(binder:context:)(a1, a2);
}

void FormatImage.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BABCF014@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 24);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v6 = v4 + 56;
    while (1)
    {
      v7 = *(_QWORD *)(v6 - 24);
      v8 = *(_QWORD *)(v6 - 16);
      v9 = *(_BYTE *)(v6 - 8);
      sub_1BA73B1CC(v7, v8, v9);
      swift_retain_n();
      ((void (*)(uint64_t, uint64_t))FormatImage.bind(binder:context:))(v2, v3);
      if (v1)
        break;
      v6 += 32;
      swift_release();
      sub_1BA73B1B8(v7, v8, v9);
      swift_release();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_release();
    sub_1BA73B1B8(v7, v8, v9);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
LABEL_7:
    swift_retain();
    ((void (*)(uint64_t, uint64_t))FormatImage.bind(binder:context:))(v2, v3);
    swift_release();
  }
  return swift_release();
}

void sub_1BABCF24C()
{
  FormatImage.bind(binder:context:)();
}

_QWORD *FormatImageAdjustment.bind(binder:context:)()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  uint64_t v6;
  _BYTE v7[136];
  __int128 v8[8];
  _BYTE v9[136];
  _BYTE v10[136];

  sub_1BA895BCC(v0, (uint64_t)v9);
  sub_1BA895BCC((uint64_t)v9, (uint64_t)v10);
  v1 = sub_1BA895C08((uint64_t)v10);
  if (v1)
  {
    if (v1 == 1)
    {
      v2 = sub_1BA895E68((uint64_t)v10);
      sub_1BA53BAD8(v2, (uint64_t)v8);
      if (sub_1BA895ED8((uint64_t)v8) == 1)
      {
        sub_1BA895EE4((uint64_t)v8);
        sub_1BA895BCC((uint64_t)v9, (uint64_t)v7);
        v3 = sub_1BA895E68((uint64_t)v7);
        sub_1BAC68720(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
        FormatColor.bind(binder:context:)();
      }
      else
      {
        sub_1BA895EE4((uint64_t)v8);
        sub_1BA895BCC((uint64_t)v9, (uint64_t)v7);
        v6 = sub_1BA895E68((uint64_t)v7);
        sub_1BAC68720(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
        FormatImageAdjustmentBlend.GradientData.bind(binder:context:)();
      }
      return (_QWORD *)sub_1BAC68720((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BAC686C8);
    }
    else
    {
      return (_QWORD *)sub_1BA895E68((uint64_t)v10);
    }
  }
  else
  {
    v4 = (__int128 *)sub_1BA895E68((uint64_t)v10);
    sub_1BA896178(v4, (uint64_t)v8);
    sub_1BA895FE8(v8, (uint64_t)v7);
    return FormatDirectionalGradient.bind(binder:context:)();
  }
}

_QWORD *FormatImageAdjustmentMask.bind(binder:context:)()
{
  __int128 *v0;
  uint64_t v2;
  __int128 v3[8];
  __int128 v4[8];

  sub_1BA896178(v0, (uint64_t)v3);
  sub_1BA896178(v3, (uint64_t)v4);
  sub_1BA895FE8(v4, (uint64_t)&v2);
  return FormatDirectionalGradient.bind(binder:context:)();
}

_QWORD *FormatImageAdjustmentBlend.bind(binder:context:)()
{
  uint64_t v0;
  __int128 v2;
  _BYTE v3[136];
  _BYTE v4[136];
  uint64_t v5;

  sub_1BA53BAD8(v0, (uint64_t)v3);
  sub_1BA53BAD8((uint64_t)v3, (uint64_t)v4);
  if (sub_1BA895ED8((uint64_t)v4) == 1)
  {
    v5 = *(_QWORD *)sub_1BA895EE4((uint64_t)v4);
    sub_1BA53BAD8((uint64_t)v3, (uint64_t)&v2);
    sub_1BA895EE4((uint64_t)&v2);
    swift_retain();
    FormatColor.bind(binder:context:)();
    return (_QWORD *)sub_1BAC68720((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769654);
  }
  else
  {
    sub_1BA895EE4((uint64_t)v4);
    return FormatImageAdjustmentBlend.GradientData.bind(binder:context:)();
  }
}

_QWORD *sub_1BABCF590()
{
  return FormatImageAdjustment.bind(binder:context:)();
}

_QWORD *FormatImageAdjustmentBlend.GradientData.bind(binder:context:)()
{
  __int128 *v0;
  uint64_t v1;
  int v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD v20[16];
  __int128 v21[8];
  _BYTE v22[136];
  uint64_t v23;

  sub_1BA895FE8(v0, (uint64_t)v21);
  sub_1BA895FE8(v21, (uint64_t)v22);
  v2 = sub_1BA896024((uint64_t)v22);
  result = (_QWORD *)sub_1BA896030((uint64_t)v22);
  if (v2 == 1)
  {
    v4 = result[14];
    v5 = *(_QWORD *)(v4 + 16);
    if (!v5)
      return result;
    sub_1BA6A0C50(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA895C14);
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v20[0] = *(_QWORD *)(v4 + 8 * v6 + 32);
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v1)
        break;
      ++v6;
      swift_release();
      if (v5 == v6)
      {
        swift_bridgeObjectRelease();
        return sub_1BA6A0C50(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA895D94);
      }
    }
  }
  else
  {
    v7 = *result;
    v9 = result[6];
    v8 = result[7];
    v10 = *(_QWORD *)(*result + 16);
    if (!v10)
    {
      sub_1BA895FE8(v21, (uint64_t)v20);
      v12 = *(_QWORD *)(sub_1BA896030((uint64_t)v20) + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA5DCC20(v12);
      if (v9)
      {
LABEL_14:
        v13 = *(_QWORD *)(v9 + 16);
        if (v13)
        {
          v14 = swift_bridgeObjectRetain();
          sub_1BA5DCC20(v14);
          swift_bridgeObjectRetain();
          v15 = (_BYTE *)(v9 + 40);
          do
          {
            if ((*v15 & 1) == 0)
            {
              v20[0] = *((_QWORD *)v15 - 1);
              v16 = v20[0];
              swift_retain_n();
              FormatFloat.bind(binder:context:)();
              if (v1)
              {
                sub_1BA72C46C(v16, 0);
                sub_1BA72C46C(v16, 0);
                goto LABEL_31;
              }
              sub_1BA72C46C(v16, 0);
              sub_1BA72C46C(v16, 0);
            }
            v15 += 16;
            --v13;
          }
          while (v13);
          swift_bridgeObjectRelease_n();
          v17 = *(_QWORD *)(v8 + 16);
          if (v17)
            goto LABEL_25;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v17 = *(_QWORD *)(v8 + 16);
          if (v17)
          {
LABEL_25:
            swift_bridgeObjectRetain_n();
            v18 = (_BYTE *)(v8 + 40);
            do
            {
              if ((*v18 & 1) == 0)
              {
                v20[0] = *((_QWORD *)v18 - 1);
                v19 = v20[0];
                swift_retain_n();
                FormatFloat.bind(binder:context:)();
                sub_1BA72C46C(v19, 0);
                sub_1BA72C46C(v19, 0);
                if (v1)
                  break;
              }
              v18 += 16;
              --v17;
            }
            while (v17);
LABEL_31:
            swift_bridgeObjectRelease_n();
          }
        }
        sub_1BA5DCC4C(v9);
      }
      return sub_1BA6A0C50(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA895D94);
    }
    v23 = result[7];
    sub_1BA6A0C50(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA895C14);
    swift_bridgeObjectRetain();
    v11 = 0;
    while (1)
    {
      v20[0] = *(_QWORD *)(v7 + 8 * v11 + 32);
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v1)
        break;
      ++v11;
      swift_release();
      if (v10 == v11)
      {
        swift_bridgeObjectRelease();
        v8 = v23;
        if (v9)
          goto LABEL_14;
        return sub_1BA6A0C50(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA895D94);
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1BA6A0C50(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA895D94);
}

uint64_t FormatImageAdjustmentBlend.ColorData.bind(binder:context:)()
{
  swift_retain();
  FormatColor.bind(binder:context:)();
  return swift_release();
}

_QWORD *sub_1BABCF960()
{
  return FormatImageAdjustmentBlend.bind(binder:context:)();
}

_QWORD *sub_1BABCF974(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[128];
  __int128 v14[8];
  _BYTE v15[128];

  sub_1BA895FE8(v2, (uint64_t)v14);
  sub_1BA895FE8(v14, (uint64_t)v15);
  if (sub_1BA896024((uint64_t)v15) == 1)
  {
    v6 = *(_QWORD *)(sub_1BA896030((uint64_t)v15) + 112);
    sub_1BA895FE8(v14, (uint64_t)v13);
    v7 = sub_1BA896030((uint64_t)v13);
    sub_1BAB0590C(v7);
    sub_1BAB75550(a1, a2, v6);
  }
  else
  {
    v8 = (uint64_t *)sub_1BA896030((uint64_t)v15);
    v9 = *v8;
    v10 = v8[6];
    sub_1BA895FE8(v14, (uint64_t)v13);
    v11 = *(_QWORD *)(sub_1BA896030((uint64_t)v13) + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA5DCC20(v11);
    sub_1BAB75550(a1, a2, v9);
    if (!v3 && v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      FormatSizeEquation.bind(binder:context:)();
      sub_1BA5DCC4C(v10);
    }
  }
  return sub_1BA6A0C50(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA895D94);
}

uint64_t sub_1BABCFADC(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v3;
  int v6;
  uint64_t *v7;
  uint64_t result;
  uint64_t v9;
  __int128 v10[8];
  __int128 v11[8];
  _BYTE v12[128];

  sub_1BA896178(v2, (uint64_t)v10);
  sub_1BA896178(v10, (uint64_t)v11);
  sub_1BA895FE8(v11, (uint64_t)v12);
  v6 = sub_1BA896024((uint64_t)v12);
  v7 = (uint64_t *)sub_1BA896030((uint64_t)v12);
  if (v6 == 1)
    return sub_1BAB75550(a1, a2, v7[14]);
  v9 = v7[6];
  result = sub_1BAB75550(a1, a2, *v7);
  if (!v3)
  {
    if (v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      FormatSizeEquation.bind(binder:context:)();
      return sub_1BA5DCC4C(v9);
    }
  }
  return result;
}

uint64_t sub_1BABCFBDC(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;

  v6 = *(_QWORD *)(v2 + 8);
  swift_retain();
  FormatAsyncImageContent.bind(binder:context:)();
  result = swift_release();
  if (!v3)
  {
    if (v6)
      return FormatImageNodeStyle.bind(binder:context:)(a1, a2);
  }
  return result;
}

uint64_t sub_1BABCFC68(unint64_t a1, uint64_t a2)
{
  return FormatImageNode.bind(binder:context:)(a1, a2);
}

void FormatImageNodeBinding.bindChildren(binder:context:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BABCFCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  sub_1BAC65374(v8, v9, v7, v6, a5, v5 & 0xE1, (uint64_t (*)(void))sub_1BA967EC0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BA740408);
  FormatGroupBinding.Image.bind(binder:context:)();
  return sub_1BA6EF82C(v8, v9, v7, v6, a5, v5);
}

void sub_1BABCFE40()
{
  JUMPOUT(0x1BABCFE14);
}

uint64_t FormatImageNodeRequest.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t result;
  uint64_t v12;
  unsigned __int8 *i;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v3 = *v0;
  v2 = v0[1];
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain_n();
      v5 = (unsigned __int8 *)(v3 + 64);
      while (1)
      {
        v6 = *((_QWORD *)v5 - 4);
        v7 = *((_QWORD *)v5 - 3);
        v9 = *((_QWORD *)v5 - 2);
        v8 = *((_QWORD *)v5 - 1);
        v10 = *v5;
        sub_1BA527164(v6, v7, v9, v8, *v5);
        FormatImageNodeRequestAdjustment.bind(binder:context:)();
        if (v1)
          break;
        v5 += 40;
        sub_1BA5271D4(v6, v7, v9, v8, v10);
        if (!--v4)
        {
          result = swift_bridgeObjectRelease_n();
          goto LABEL_7;
        }
      }
      sub_1BA5271D4(v6, v7, v9, v8, v10);
      return swift_bridgeObjectRelease_n();
    }
  }
LABEL_7:
  if (v2)
  {
    v12 = *(_QWORD *)(v2 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain_n();
      for (i = (unsigned __int8 *)(v2 + 64); ; i += 40)
      {
        v14 = *((_QWORD *)i - 4);
        v15 = *((_QWORD *)i - 3);
        v16 = *((_QWORD *)i - 2);
        v17 = *((_QWORD *)i - 1);
        v18 = *i;
        sub_1BA527164(v14, v15, v16, v17, *i);
        FormatImageNodeRequestAdjustment.bind(binder:context:)();
        if (v1)
          break;
        sub_1BA5271D4(v14, v15, v16, v17, v18);
        if (!--v12)
          return swift_bridgeObjectRelease_n();
      }
      sub_1BA5271D4(v14, v15, v16, v17, v18);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t FormatImageNodeRequestSize.bind(binder:context:)()
{
  return sub_1BA527060();
}

uint64_t sub_1BABD005C()
{
  return FormatImageNodeRequest.bind(binder:context:)();
}

void sub_1BABD0070()
{
  FormatImageNodeRequestAdjustment.bind(binder:context:)();
}

uint64_t sub_1BABD0084(uint64_t a1, uint64_t a2)
{
  return sub_1BABD0098(a1, a2);
}

uint64_t sub_1BABD0098(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *v2;
  swift_bridgeObjectRetain();
  sub_1BAB75454(a1, a2, v5);
  return swift_bridgeObjectRelease();
}

unint64_t FormatImageRenderingMode.bind(binder:context:)(unint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *v2;
  if ((unint64_t)*v2 >= 3)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(_QWORD *)(v3 + 24);
    sub_1BA6E6E84(v6);
    sub_1BA6E6E84(v7);
    sub_1BA7852C4(v5, a2, v6, v7);
    sub_1BA6E7468(v6);
    return sub_1BA6E7468(v7);
  }
  return result;
}

uint64_t sub_1BABD0170(unint64_t a1, uint64_t a2)
{
  return FormatImageNodeStyle.bind(binder:context:)(a1, a2);
}

void FormatImageNodeStyle.Selector.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = v3;
  v8 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v24 = *(_QWORD *)(v2 + 56);
  v25 = *(_QWORD *)(v2 + 64);
  v26 = *(_QWORD *)(v2 + 72);
  v27 = *(_QWORD *)(v2 + 80);
  v35 = *(_QWORD *)(v2 + 88);
  v9 = *(_QWORD *)(v2 + 112);
  v28 = *(_QWORD *)(v2 + 104);
  v29 = *(_QWORD *)(v2 + 96);
  v10 = *(_QWORD *)(v2 + 120);
  v23 = *(_QWORD *)(v2 + 128);
  v11 = *(unsigned __int8 *)(v2 + 136);
  v30 = *(_QWORD *)(v2 + 144);
  v31 = *(_QWORD *)(v2 + 160);
  v34 = *(_QWORD *)(v2 + 168);
  v32 = *(_QWORD *)(v2 + 184);
  v33 = *(_QWORD *)(v2 + 176);
  if ((~v8 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatBackground.bind(binder:context:)();
    if (v3)
    {
      sub_1BA6E6CD8(v8);
      return;
    }
    sub_1BA6E6CD8(v8);
  }
  v12 = a2;
  if (!v7 || (sub_1BAB73D7C(a1, a2, v7), !v3))
  {
    if (v11 != 254)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v3)
      {
        sub_1BA6E8A78(v24, v25, v26, v27, v35, v29, v28, v9, v10, v23, v11);
        return;
      }
      v15 = v9;
      v16 = v28;
      v17 = v29;
      switch(v11)
      {
        case 0:
          break;
        case 1:
        case 4:
          sub_1BABD5EE8(a1, a2);
          break;
        case 2:
        case 3:
        case 5:
          sub_1BABD5EE8(a1, a2);
          sub_1BABD5EE8(a1, a2);
          v4 = 0;
          break;
        default:
          v16 = v28;
          v17 = v29;
          break;
      }
      sub_1BA6E8A78(v24, v25, v26, v27, v35, v17, v16, v15, v10, v23, v11);
    }
    v13 = v33;
    if ((~v30 & 0xF000000000000007) != 0)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      sub_1BA5E800C(v30);
      v14 = v32;
      if (v4)
        return;
    }
    else
    {
      v14 = v32;
    }
    if (v31 >= 3)
    {
      if (v31 != 3)
      {
        v18 = *(_QWORD *)(v31 + 16);
        v19 = *(_QWORD *)(v31 + 24);
        sub_1BA6E6C80(v31);
        sub_1BA6E6E84(v18);
        sub_1BA6E6E84(v19);
        sub_1BA7852C4(a1, a2, v18, v19);
        sub_1BA6E7468(v18);
        sub_1BA6E7468(v19);
        sub_1BA6E6CF0(v31);
        if (v4)
          return;
      }
    }
    else
    {
      sub_1BA6E6CF0(v31);
    }
    if (v34)
    {
      v20 = *(_QWORD *)(v34 + 16);
      if (v20)
      {
        swift_bridgeObjectRetain_n();
        v21 = (_BYTE *)(v34 + 40);
        do
        {
          if ((*v21 & 1) == 0)
          {
            v22 = *((_QWORD *)v21 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            sub_1BA72C46C(v22, 0);
            sub_1BA72C46C(v22, 0);
            if (v4)
            {
              swift_bridgeObjectRelease_n();
              return;
            }
          }
          v21 += 16;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease_n();
        v13 = v33;
      }
    }
    if (!v13 || (sub_1BAB7F560(a1, v12, v13), !v4))
    {
      if (v14 != 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        FormatImageNodeRequest.bind(binder:context:)();
        sub_1BA6E6D00(v14);
      }
    }
  }
}

void sub_1BABD0674(unint64_t a1, uint64_t a2)
{
  FormatImageNodeStyle.Selector.bind(binder:context:)(a1, a2);
}

unint64_t sub_1BABD0688(unint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *v2;
  if ((unint64_t)*v2 >= 3)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(_QWORD *)(v3 + 24);
    sub_1BA6E6E84(v6);
    sub_1BA6E6E84(v7);
    sub_1BA7852C4(v5, a2, v6, v7);
    sub_1BA6E7468(v6);
    return sub_1BA6E7468(v7);
  }
  return result;
}

uint64_t FormatIssueCoverContent.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABD2740(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2E14);
}

uint64_t sub_1BABD0728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BABD3050(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2E14);
}

uint64_t FormatIssueCoverNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v4 = v2;
  v24 = v2[4];
  sub_1BA71CA6C(v24);
  FormatSize.bind(binder:context:)();
  if (v3)
    return sub_1BA719718(v24);
  sub_1BA719718(v24);
  swift_beginAccess();
  v8 = v2[6];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v9; ++i)
    {
      v11 = *(_QWORD *)(v8 + 8 * i + 32);
      sub_1BA7196DC(v11);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  if (v2[7])
    FormatIssueCoverNodeStyle.bind(binder:context:)(a1, a2);
  v12 = v2[8];
  if (v12)
  {
    swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 72);
    if (v13)
    {
      swift_bridgeObjectRetain();
      sub_1BAB758D0(a1, a2, v13);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 88);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      v16 = (uint64_t *)(v14 + 72);
      do
      {
        v17 = *v16;
        if (*v16)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAB758D0(a1, a2, v17);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v16 += 7;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease_n();
    }
  }
  v18 = v4[9];
  if (v18 < 0)
  {
    v22 = *(_QWORD *)(v18 + 16);
    v23 = *(_QWORD *)(v18 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BABC2E14(a1, a2, v22, v23);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  result = swift_beginAccess();
  v19 = v4[11];
  if (v19 >> 62 == 1)
  {
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(_QWORD *)(v19 + 24);
    sub_1BA67D3F4(v19);
    sub_1BA67D3F4(v20);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(a1, a2, v20, v21);
    sub_1BA6EEDB4(v20);
    swift_bridgeObjectRelease();
    return sub_1BA6EEDB4(v19);
  }
  return result;
}

uint64_t FormatIssueCoverNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABD54C8(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABA1098);
}

uint64_t sub_1BABD0A8C(uint64_t a1, uint64_t a2)
{
  return FormatIssueCoverNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABD0AAC(uint64_t a1, uint64_t a2)
{
  return FormatIssueCoverNodeStyle.bind(binder:context:)(a1, a2);
}

uint64_t FormatIssueCoverNodeStyle.Selector.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = v3;
  v8 = *(_QWORD *)(v2 + 16);
  result = *(_QWORD *)(v2 + 24);
  v9 = *(_QWORD *)(v2 + 64);
  v34 = *(_QWORD *)(v2 + 56);
  v10 = *(_QWORD *)(v2 + 88);
  v11 = *(_QWORD *)(v2 + 96);
  v12 = *(_QWORD *)(v2 + 112);
  v33 = *(_QWORD *)(v2 + 120);
  v32 = *(_QWORD *)(v2 + 128);
  v13 = *(unsigned __int8 *)(v2 + 136);
  v36 = *(_QWORD *)(v2 + 80);
  v37 = *(_QWORD *)(v2 + 104);
  v39 = v11;
  v35 = *(_QWORD *)(v2 + 72);
  if (v8)
  {
    v14 = *(_QWORD *)(v2 + 112);
    v15 = *(_QWORD *)(v8 + 16);
    if (!v15)
    {
      v12 = *(_QWORD *)(v2 + 112);
      v11 = *(_QWORD *)(v2 + 96);
      if (!result)
        goto LABEL_19;
      goto LABEL_13;
    }
    v38 = *(_QWORD *)(v2 + 24);
    v27 = *(unsigned __int8 *)(v2 + 136);
    v29 = *(_QWORD *)(v2 + 64);
    v31 = *(_QWORD *)(v2 + 88);
    swift_bridgeObjectRetain_n();
    v16 = (_BYTE *)(v8 + 40);
    do
    {
      if ((*v16 & 1) == 0)
      {
        v17 = *((_QWORD *)v16 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v3)
        {
          sub_1BA72C46C(v17, 0);
          sub_1BA72C46C(v17, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v17, 0);
        sub_1BA72C46C(v17, 0);
      }
      v16 += 16;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease_n();
    v9 = v29;
    v10 = v31;
    v12 = v14;
    result = v38;
    v11 = v39;
    v13 = v27;
  }
  if (!result)
  {
LABEL_19:
    if (v13 != 254)
    {
      v20 = v13;
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v4)
      {
        v26 = v20;
        return sub_1BA6E8A78(v34, v9, v35, v36, v10, v11, v37, v12, v33, v32, v26);
      }
      else
      {
        switch(v20)
        {
          case 0:
            v26 = 0;
            return sub_1BA6E8A78(v34, v9, v35, v36, v10, v11, v37, v12, v33, v32, v26);
          case 1:
            v21 = v37;
            sub_1BABD5EE8(a1, a2);
            v22 = 1;
            goto LABEL_32;
          case 2:
            v23 = v37;
            sub_1BABD5EE8(a1, a2);
            v24 = v33;
            sub_1BABD5EE8(a1, a2);
            v25 = 2;
            goto LABEL_33;
          case 3:
            v23 = v37;
            sub_1BABD5EE8(a1, a2);
            v24 = v33;
            sub_1BABD5EE8(a1, a2);
            v25 = 3;
            goto LABEL_33;
          case 4:
            v21 = v37;
            sub_1BABD5EE8(a1, a2);
            v22 = 4;
LABEL_32:
            result = sub_1BA6E8A78(v34, v9, v35, v36, v10, v11, v21, v12, v33, v32, v22);
            break;
          case 5:
            v23 = v37;
            sub_1BABD5EE8(a1, a2);
            v24 = v33;
            sub_1BABD5EE8(a1, a2);
            v25 = 5;
LABEL_33:
            result = sub_1BA6E8A78(v34, v9, v35, v36, v10, v11, v23, v12, v24, v32, v25);
            break;
          default:
            v26 = -1;
            return sub_1BA6E8A78(v34, v9, v35, v36, v10, v11, v37, v12, v33, v32, v26);
        }
      }
    }
    return result;
  }
LABEL_13:
  v18 = *(_QWORD *)(result + 16);
  if (!v18)
  {
    v11 = v39;
    goto LABEL_19;
  }
  v28 = v13;
  v30 = v9;
  v19 = swift_bridgeObjectRetain() + 64;
  while (1)
  {
    v40 = v18;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    FormatColor.bind(binder:context:)();
    if (v4)
      break;
    swift_release();
    swift_retain();
    FormatFloat.bind(binder:context:)();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    v19 += 40;
    v18 = -1;
    if (v40 == 1)
    {
      result = swift_bridgeObjectRelease();
      v13 = v28;
      v11 = v39;
      v9 = v30;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1BABD0FA4(uint64_t a1, uint64_t a2)
{
  return FormatIssueCoverNodeStyle.Selector.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABD0FB8(uint64_t a1, uint64_t a2)
{
  return FormatItem.bind(binder:context:)(a1, a2);
}

uint64_t FormatItemBindingsNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[2];
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v35 = a1;
  v36 = a2;
  v4 = type metadata accessor for FormatOption();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = v2[7];
  v9 = *(_QWORD *)(v8 + 16);
  v32 = v2;
  if (v9)
  {
    v10 = v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v11 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BA4C2DD8(v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      *(_QWORD *)&v37 = *((_QWORD *)v7 + 2);
      swift_retain();
      FormatOptionValue.bind(binder:context:)(v35, v36);
      if (v3)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v10 += v11;
      if (!--v9)
      {
        swift_bridgeObjectRelease_n();
        v2 = v32;
        goto LABEL_6;
      }
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    v12 = v2[8];
    v13 = *(_QWORD *)(v12 + 16);
    v43 = v3;
    if (v13)
    {
      swift_bridgeObjectRetain_n();
      v31[1] = v12;
      v14 = (uint64_t *)(v12 + 48);
      while (1)
      {
        v33 = v13;
        v15 = *(v14 - 2);
        v16 = *(v14 - 1);
        v18 = *v14;
        v17 = v14[1];
        v20 = v14[2];
        v19 = v14[3];
        v22 = v14[4];
        v21 = v14[5];
        *(_QWORD *)&v37 = v15;
        *((_QWORD *)&v37 + 1) = v16;
        *(_QWORD *)&v38 = v18;
        *((_QWORD *)&v38 + 1) = v17;
        v39 = v20;
        v40 = v19;
        v41 = v22;
        v42 = v21;
        v34 = v21;
        sub_1BA76B724(v15, v16, v18, v17, v20, v19, v22);
        v23 = v43;
        FormatNodeStyle.bind(binder:context:)();
        v43 = v23;
        if (v23)
          break;
        v14 += 8;
        sub_1BA76B698(v15, v16, v18, v17, v20, v19, v22);
        v13 = v33 - 1;
        if (v33 == 1)
        {
          swift_bridgeObjectRelease_n();
          v2 = v32;
          goto LABEL_11;
        }
      }
      sub_1BA76B698(v15, v16, v18, v17, v20, v19, v22);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      result = swift_beginAccess();
      v25 = v2[9];
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        swift_bridgeObjectRetain_n();
        v27 = (uint64_t *)(v25 + 64);
        while (1)
        {
          v28 = *v27;
          v29 = *((_OWORD *)v27 - 1);
          v37 = *((_OWORD *)v27 - 2);
          v38 = v29;
          v39 = v28;
          swift_bridgeObjectRetain();
          swift_retain();
          v30 = v43;
          FormatSourceMapNode.bind(binder:context:)(v35, v36);
          v43 = v30;
          if (v30)
            break;
          v27 += 5;
          swift_bridgeObjectRelease();
          swift_release();
          if (!--v26)
            return swift_bridgeObjectRelease_n();
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t FormatItemNodeAction.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unsigned int v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;

  v3 = v2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v30 - v6;
  v8 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v30 - v12;
  v14 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v3, (uint64_t)v16, v17);
  result = swift_getEnumCaseMultiPayload();
  if ((result - 2) >= 6)
  {
    v30[0] = a2;
    if ((_DWORD)result)
    {
      sub_1BA5193C4((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
      sub_1BA4C2DD8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
          goto LABEL_6;
        v26 = *v10;
        v25 = v10[1];
        v27 = v10[2];
        v31 = *v10;
        v32 = v25;
        v33 = v27;
        v36 = 6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28 = v30[1];
        v29 = sub_1BB6B84D4(&v31, &v36);
        if (v28)
        {
LABEL_6:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1BB3757A0(v26, v25, v29, 1, (uint64_t)v7);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA502AD0((uint64_t)v7, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        }
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
      }
      return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
    }
    else
    {
      v20 = *((_QWORD *)v16 + 1);
      v21 = *((_QWORD *)v16 + 2);
      v22 = v16[25];
      v23 = v16[24];
      v31 = *(_QWORD *)v16;
      v19 = v31;
      v32 = v20;
      v33 = v21;
      v34 = v23;
      v35 = v22;
      FormatItemNodeActionBinding.bind(binder:context:)();
      return sub_1BAC65170(v19, v20, v21, v23, v22, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    }
  }
  return result;
}

void FormatItemNodeActionBinding.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  if (*(_BYTE *)(v0 + 25))
    v2 = 4;
  else
    v2 = 0;
  __asm { BR              X10 }
}

uint64_t sub_1BABD16A8()
{
  unsigned int v0;

  return ((uint64_t (*)())((char *)sub_1BABD16C4 + 4 * byte_1BB8A5C1E[(v0 >> 4) & 3]))();
}

uint64_t sub_1BABD16C4()
{
  char v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if ((_BYTE)v2)
  {
    if (v2 == 1)
      return result;
  }
  else
  {
    if ((~v4 & 0xF000000000000007) == 0)
      return result;
    *(_QWORD *)(v5 - 112) = v4;
    sub_1BAC65170(v4, v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    sub_1BA5E7FF4(v4);
    FormatTextContent.bind(binder:context:)();
    sub_1BA5E800C(v4);
  }
  return sub_1BAC65170(v4, v3, v2, v1, v0, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
}

uint64_t sub_1BABD18D4(uint64_t a1, uint64_t a2)
{
  return FormatItemNodeAction.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABD18E8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 8);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_BYTE *)(v0 + 25);
  sub_1BAC65170(*(_QWORD *)v0, v4, v5, v2, v6, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  FormatCommandBinding.bind(binder:context:)();
  return sub_1BAC65170(v1, v4, v5, v2, v6, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
}

uint64_t FormatPreviewParameters.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if ((~*v0 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatColor.bind(binder:context:)();
    return sub_1BA5E800C(v1);
  }
  return result;
}

uint64_t FormatItemNodeSwipeActionStyle.bind(binder:context:)()
{
  _QWORD *v0;
  uint64_t result;

  if (*v0 >= 3uLL)
    return FormatSizeEquation.bind(binder:context:)();
  return result;
}

uint64_t sub_1BABD1A70(uint64_t a1, uint64_t a2)
{
  return FormatItemNodeStyle.bind(binder:context:)(a1, a2);
}

uint64_t FormatItemNodeStyle.Selector.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned __int8 v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;

  v4 = v3;
  v5 = v2;
  sub_1BA4A3FB4(0, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v46 - v9;
  v11 = *(_QWORD *)(v5 + 16);
  v12 = *(_BYTE *)(v5 + 80);
  v13 = (v12 & 0xFE) == 0x7E || (v11 & 0xF000000000000007) == 0xF000000000000007;
  v51 = (char *)&v46 - v9;
  if (v13)
  {
    v52 = a1;
    v53 = a2;
  }
  else
  {
    v62 = v3;
    v14 = *(_QWORD *)(v5 + 24);
    v15 = *(_QWORD *)(v5 + 32);
    v16 = *(_QWORD *)(v5 + 40);
    v17 = *(_QWORD *)(v5 + 48);
    v18 = *(_QWORD *)(v5 + 56);
    v19 = *(_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v5 + 72);
    v54 = v11;
    v49 = v18;
    v50 = v16;
    v47 = v20;
    v48 = v19;
    sub_1BA7643E8(v11, v14, v15, v16, v17, v18, v19, v20, v12, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
    sub_1BA5E7FF4(v11);
    v21 = v62;
    FormatColor.bind(binder:context:)();
    if (v21)
    {
      sub_1BA5E800C(v11);
      return sub_1BA7643E8(v11, v14, v15, v50, v17, v49, v48, v47, v12, (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
    }
    v52 = a1;
    v53 = a2;
    sub_1BA5E800C(v11);
    sub_1BA7643E8(v11, v14, v15, v50, v17, v49, v48, v47, v12, (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
    v4 = 0;
    v10 = v51;
  }
  v23 = *(unsigned __int8 *)(v5 + 144);
  if (v23 == 255)
  {
    v33 = v52;
    v32 = v53;
  }
  else
  {
    v25 = *(_QWORD *)(v5 + 88);
    v24 = *(_QWORD *)(v5 + 96);
    v26 = *(_QWORD *)(v5 + 104);
    v27 = *(_QWORD *)(v5 + 112);
    v62 = v4;
    v29 = *(_QWORD *)(v5 + 120);
    v28 = *(_QWORD *)(v5 + 128);
    v30 = *(_QWORD *)(v5 + 136);
    v54 = v25;
    v55 = v24;
    v56 = v26;
    v57 = v27;
    v58 = v29;
    v59 = v28;
    v60 = v30;
    v61 = v23;
    v50 = v30;
    sub_1BA7756B8(v25, v24, v26, v27, v29, v28, v30, v23);
    v31 = v62;
    FormatCellSelection.bind(binder:context:)();
    if (v31)
      return sub_1BA7644AC(v25, v24, v26, v27, v29, v28, v50, v23);
    sub_1BA7644AC(v25, v24, v26, v27, v29, v28, v50, v23);
    v4 = 0;
    v33 = v52;
    v32 = v53;
    v10 = v51;
  }
  v34 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  sub_1BA57B488(v5 + *(int *)(v34 + 28), (uint64_t)v10, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  v35 = type metadata accessor for FormatItemNodeAction();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v10, 1, v35) == 1)
  {
    result = sub_1BA502AD0((uint64_t)v10, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  }
  else
  {
    FormatItemNodeAction.bind(binder:context:)(v33, v32);
    result = sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    if (v4)
      return result;
  }
  v36 = (unint64_t *)(v5 + *(int *)(v34 + 40));
  v38 = *v36;
  v37 = v36[1];
  if (*v36 < 3)
    return sub_1BA7644C0(v38);
  if (*v36 != 3)
  {
    v39 = *(_QWORD *)(v38 + 16);
    if (v39)
    {
      v40 = swift_bridgeObjectRetain();
      sub_1BA77567C(v40);
      swift_bridgeObjectRetain();
      v41 = (_BYTE *)(v38 + 40);
      while (1)
      {
        if ((*v41 & 1) == 0)
        {
          v54 = *((_QWORD *)v41 - 1);
          v42 = v54;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v42, 0);
          sub_1BA72C46C(v42, 0);
          if (v4)
            break;
        }
        v41 += 16;
        if (!--v39)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_30;
        }
      }
    }
    else
    {
      sub_1BAC68784(*v36);
LABEL_30:
      v43 = *(_QWORD *)(v37 + 16);
      if (!v43)
        return sub_1BA7644C0(v38);
      swift_bridgeObjectRetain_n();
      v44 = (_BYTE *)(v37 + 40);
      do
      {
        if ((*v44 & 1) == 0)
        {
          v54 = *((_QWORD *)v44 - 1);
          v45 = v54;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v45, 0);
          sub_1BA72C46C(v45, 0);
          if (v4)
            break;
        }
        v44 += 16;
        --v43;
      }
      while (v43);
    }
    swift_bridgeObjectRelease_n();
    return sub_1BA7644C0(v38);
  }
  return result;
}

uint64_t sub_1BABD1F0C(uint64_t a1, uint64_t a2)
{
  return FormatItemNodeStyle.Selector.bind(binder:context:)(a1, a2);
}

uint64_t FormatItemNodeSwipeActionStyleDimension.bind(binder:context:)()
{
  return sub_1BABD1F34();
}

uint64_t sub_1BABD1F34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = *v0;
  v2 = v0[1];
  v4 = *(_QWORD *)(*v0 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    v5 = (_BYTE *)(v3 + 40);
    while (1)
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
        if (v1)
          break;
      }
      v5 += 16;
      if (!--v4)
      {
        result = swift_bridgeObjectRelease_n();
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    v8 = *(_QWORD *)(v2 + 16);
    if (!v8)
      return result;
    swift_bridgeObjectRetain_n();
    v9 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v9 & 1) == 0)
      {
        v10 = *((_QWORD *)v9 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v10, 0);
        sub_1BA72C46C(v10, 0);
        if (v1)
          break;
      }
      v9 += 16;
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BABD2090()
{
  _QWORD *v0;
  uint64_t result;

  if (*v0 >= 3uLL)
    return FormatSizeEquation.bind(binder:context:)();
  return result;
}

uint64_t sub_1BABD20CC()
{
  return FormatSizeEquation.bind(binder:context:)();
}

uint64_t FormatLayeredMediaFilter.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  if ((~*v0 & 0xF000000000000007) != 0)
  {
    sub_1BA5E7FF4(v3);
    sub_1BA6E6C68(v2);
    sub_1BA6E6C68(v4);
    sub_1BA5E7FF4(v3);
    FormatColor.bind(binder:context:)();
    if (v1)
    {
      sub_1BA5E800C(v3);
      goto LABEL_10;
    }
    sub_1BA5E800C(v3);
  }
  else
  {
    sub_1BA5E7FF4(*v0);
    sub_1BA6E6C68(v2);
    sub_1BA6E6C68(v4);
  }
  if ((~v2 & 0xF000000000000007) == 0
    || (swift_retain(), FormatFloat.bind(binder:context:)(), sub_1BA6E6CD8(v2), !v1))
  {
    if ((~v4 & 0xF000000000000007) != 0)
    {
      swift_retain();
      FormatFloat.bind(binder:context:)();
      sub_1BA6E6CD8(v4);
    }
  }
LABEL_10:
  sub_1BA5E800C(v3);
  sub_1BA6E6CD8(v2);
  return sub_1BA6E6CD8(v4);
}

uint64_t FormatLayeredMediaFilter.Monochrome.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  if ((~*v0 & 0xF000000000000007) == 0
    || (swift_retain(), FormatColor.bind(binder:context:)(), result = sub_1BA5E800C(v3), !v1))
  {
    if ((~v2 & 0xF000000000000007) == 0
      || (swift_retain(), FormatFloat.bind(binder:context:)(), result = sub_1BA6E6CD8(v2), !v1))
    {
      if ((~v4 & 0xF000000000000007) != 0)
      {
        swift_retain();
        FormatFloat.bind(binder:context:)();
        return sub_1BA6E6CD8(v4);
      }
    }
  }
  return result;
}

uint64_t sub_1BABD232C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1BA5E7FF4(*v0);
  sub_1BA6E6C68(v2);
  sub_1BA6E6C68(v3);
  FormatLayeredMediaFilter.Monochrome.bind(binder:context:)();
  sub_1BA5E800C(v1);
  sub_1BA6E6CD8(v2);
  return sub_1BA6E6CD8(v3);
}

uint64_t sub_1BABD23CC()
{
  return FormatLayeredMediaFilter.Monochrome.bind(binder:context:)();
}

void FormatLayeredMediaNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v4 = v3;
  v5 = v2;
  v8 = v2[4];
  if (v8 < 0)
  {
    v9 = *(_QWORD *)(v8 + 16);
    v10 = *(_QWORD *)(v8 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BABC2AD4(a1, a2, v9, v10);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (!v2[5])
      goto LABEL_8;
    goto LABEL_3;
  }
  if (v2[5])
  {
LABEL_3:
    FormatLayeredMediaNodeStyle.bind(binder:context:)(a1, a2);
    if (v4)
      return;
  }
LABEL_8:
  v11 = v2[6];
  if (!v11)
    goto LABEL_19;
  swift_beginAccess();
  v12 = *(_QWORD *)(v11 + 72);
  if (v12)
  {
    swift_bridgeObjectRetain();
    sub_1BAB758D0(a1, a2, v12);
    if (v4)
      goto LABEL_27;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v13 = *(_QWORD *)(v11 + 88);
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_19:
    v24 = v5[7];
    sub_1BA71CA6C(v24);
    FormatSize.bind(binder:context:)();
    sub_1BA719718(v24);
    if (!v4)
    {
      swift_beginAccess();
      v17 = v5[9];
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
      {
        swift_bridgeObjectRetain_n();
        for (i = 0; i != v18; ++i)
        {
          v20 = *(_QWORD *)(v17 + 8 * i + 32);
          sub_1BA7196DC(v20);
          FormatAdjustment.bind(binder:context:)();
          sub_1BA719340(v20);
        }
        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      v21 = v5[11];
      if (v21 >> 62 == 1)
      {
        v22 = *(_QWORD *)(v21 + 16);
        v23 = *(_QWORD *)(v21 + 24);
        sub_1BA67D3F4(v21);
        sub_1BA67D3F4(v22);
        swift_bridgeObjectRetain();
        sub_1BABC2BF8(a1, a2, v22, v23);
        sub_1BA6EEDB4(v22);
        swift_bridgeObjectRelease();
        sub_1BA6EEDB4(v21);
      }
    }
    return;
  }
  swift_bridgeObjectRetain_n();
  v15 = (uint64_t *)(v13 + 72);
  while (1)
  {
    v16 = *v15;
    if (*v15)
      break;
LABEL_14:
    v15 += 7;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAB758D0(a1, a2, v16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_27:
  swift_bridgeObjectRelease();
}

uint64_t FormatLayeredMediaNodeContent.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABD2740(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2AD4);
}

uint64_t sub_1BABD2740(uint64_t result, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *v3;
  if (*v3 < 0)
  {
    v7 = result;
    v8 = *(_QWORD *)(v4 + 16);
    v9 = *(_QWORD *)(v4 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    a3(v7, a2, v8, v9);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void FormatLayeredMediaNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  char *v102;

  v4 = v3;
  v5 = v2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v64 - v12;
  swift_beginAccess();
  v14 = *(_QWORD *)(v5 + 48);
  v15 = *(_QWORD *)(v14 + 16);
  v102 = v13;
  if (v15)
  {
    swift_bridgeObjectRetain_n();
    v16 = *(_OWORD *)(v14 + 192);
    v98 = *(_OWORD *)(v14 + 176);
    v99 = v16;
    v17 = *(_OWORD *)(v14 + 224);
    v100 = *(_OWORD *)(v14 + 208);
    v101 = v17;
    v18 = *(_OWORD *)(v14 + 128);
    v94 = *(_OWORD *)(v14 + 112);
    v95 = v18;
    v19 = *(_OWORD *)(v14 + 160);
    v96 = *(_OWORD *)(v14 + 144);
    v97 = v19;
    v20 = *(_OWORD *)(v14 + 48);
    v21 = *(_OWORD *)(v14 + 80);
    v22 = *(_OWORD *)(v14 + 96);
    v91 = *(_OWORD *)(v14 + 64);
    v92 = v21;
    v93 = v22;
    v89 = *(_OWORD *)(v14 + 32);
    v90 = v20;
    v86 = v99;
    v87 = v100;
    v88 = v101;
    v82 = v95;
    v83 = v96;
    v84 = v19;
    v85 = v98;
    v78 = v91;
    v79 = v21;
    v80 = v22;
    v81 = v94;
    v76 = v89;
    v77 = v20;
    sub_1BAC687E4((uint64_t)&v89);
    FormatLayeredMediaNodeStyle.Selector.bind(binder:context:)(a1, a2);
    if (v3)
    {
      sub_1BAC6890C((uint64_t)&v89);
      goto LABEL_7;
    }
    v75 = v10;
    v23 = 240;
    while (1)
    {
      sub_1BAC6890C((uint64_t)&v89);
      if (!--v15)
        break;
      v24 = (_OWORD *)(v14 + v23);
      v25 = *(_OWORD *)(v14 + v23);
      v23 += 208;
      v89 = v25;
      v26 = v24[1];
      v27 = v24[2];
      v28 = v24[4];
      v92 = v24[3];
      v93 = v28;
      v90 = v26;
      v91 = v27;
      v29 = v24[5];
      v30 = v24[6];
      v31 = v24[8];
      v96 = v24[7];
      v97 = v31;
      v94 = v29;
      v95 = v30;
      v32 = v24[9];
      v33 = v24[10];
      v34 = v24[12];
      v100 = v24[11];
      v101 = v34;
      v98 = v32;
      v99 = v33;
      v86 = v33;
      v87 = v100;
      v88 = v34;
      v82 = v95;
      v83 = v96;
      v84 = v97;
      v85 = v32;
      v78 = v91;
      v79 = v92;
      v80 = v93;
      v81 = v94;
      v76 = v89;
      v77 = v90;
      sub_1BAC687E4((uint64_t)&v89);
      FormatLayeredMediaNodeStyle.Selector.bind(binder:context:)(a1, a2);
    }
    swift_bridgeObjectRelease_n();
    v10 = v75;
    v13 = v102;
  }
  v35 = *(_QWORD *)(v5 + 56);
  if (v35)
  {
    v75 = v10;
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
    {
      v74 = v5;
      swift_bridgeObjectRetain_n();
      v37 = (_BYTE *)(v35 + 40);
      while (1)
      {
        if ((*v37 & 1) == 0)
        {
          *(_QWORD *)&v89 = *((_QWORD *)v37 - 1);
          v38 = v89;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v3)
          {
            sub_1BA72C46C(v38, 0);
            sub_1BA72C46C(v38, 0);
LABEL_7:
            swift_bridgeObjectRelease_n();
            return;
          }
          sub_1BA72C46C(v38, 0);
          sub_1BA72C46C(v38, 0);
          v13 = v102;
        }
        v37 += 16;
        if (!--v36)
        {
          swift_bridgeObjectRelease_n();
          v5 = v74;
          break;
        }
      }
    }
    v10 = v75;
  }
  v39 = *(_QWORD *)(v5 + 64);
  if ((~v39 & 0xF000000000000007) != 0)
  {
    *(_QWORD *)&v89 = *(_QWORD *)(v5 + 64);
    swift_retain();
    FormatBackground.bind(binder:context:)();
    if (v3)
    {
      sub_1BA6E6CD8(v39);
      return;
    }
    sub_1BA6E6CD8(v39);
    v13 = v102;
  }
  v40 = *(_QWORD *)(v5 + 72);
  if (!v40 || (sub_1BAB73D7C(a1, a2, v40), !v3))
  {
    if (*(unsigned __int8 *)(v5 + 184) != 254)
    {
      v71 = *(unsigned __int8 *)(v5 + 184);
      v45 = *(_QWORD *)(v5 + 112);
      v67 = *(_QWORD *)(v5 + 104);
      v68 = v45;
      v46 = *(_QWORD *)(v5 + 128);
      v47 = *(_QWORD *)(v5 + 136);
      v69 = *(_QWORD *)(v5 + 120);
      v70 = v46;
      v48 = *(_QWORD *)(v5 + 144);
      v49 = *(_QWORD *)(v5 + 152);
      v72 = *(_QWORD *)(v5 + 160);
      v73 = v49;
      v50 = *(_QWORD *)(v5 + 176);
      v74 = *(_QWORD *)(v5 + 168);
      v75 = (char *)v48;
      *(_QWORD *)&v89 = v47;
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v3)
      {
        sub_1BA6E8A78(v67, v68, v69, v70, v47, (uint64_t)v75, v73, v72, v74, v50, v71);
        return;
      }
      v65 = v50;
      v66 = v47;
      v51 = v71;
      v13 = v102;
      v52 = v73;
      switch((int)v71)
      {
        case 0:
          goto LABEL_52;
        case 1:
          v53 = (uint64_t)v75;
          sub_1BABD5EE8(a1, a2);
          sub_1BA6E8A78(v67, v68, v69, v70, v66, v53, v52, v72, v74, v65, 1u);
          break;
        case 2:
          sub_1BABD5EE8(a1, a2);
          v62 = v72;
          sub_1BABD5EE8(a1, a2);
          v4 = 0;
          v63 = 2;
          goto LABEL_54;
        case 3:
          sub_1BABD5EE8(a1, a2);
          v62 = v72;
          sub_1BABD5EE8(a1, a2);
          v4 = 0;
          v63 = 3;
LABEL_54:
          sub_1BA6E8A78(v67, v68, v69, v70, v66, (uint64_t)v75, v52, v62, v74, v65, v63);
          break;
        case 4:
          sub_1BABD5EE8(a1, a2);
          goto LABEL_52;
        case 5:
          sub_1BABD5EE8(a1, a2);
          sub_1BABD5EE8(a1, a2);
          v4 = 0;
          goto LABEL_48;
        default:
          v13 = v102;
LABEL_48:
          v52 = v73;
LABEL_52:
          sub_1BA6E8A78(v67, v68, v69, v70, v66, (uint64_t)v75, v52, v72, v74, v65, v51);
          break;
      }
    }
    v41 = *(unsigned __int8 *)(v5 + 208);
    if (v41 == 255)
    {
      v44 = (uint64_t)v10;
    }
    else
    {
      v42 = *(_QWORD *)(v5 + 192);
      v43 = *(_QWORD *)(v5 + 200);
      if ((v41 & 1) != 0)
      {
        v75 = *(char **)(v5 + 192);
        v54 = v43;
        sub_1BA796C58(v42, v43, v41);
        v55 = sub_1BA862600((uint64_t)&unk_1E7254C88);
        v74 = v54;
        sub_1BB3757A0((uint64_t)v75, v54, v55, 1, (uint64_t)v13);
        if (v4)
        {
          swift_bridgeObjectRelease();
          sub_1BA796C70((uint64_t)v75, v74, v41);
          return;
        }
        v44 = (uint64_t)v10;
        sub_1BA502AD0((uint64_t)v102, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
        v43 = v74;
        v42 = (uint64_t)v75;
      }
      else
      {
        v44 = (uint64_t)v10;
      }
      sub_1BA796C70(v42, v43, v41);
    }
    v56 = *(unsigned __int8 *)(v5 + 232);
    if (v56 != 255)
    {
      v58 = *(_QWORD *)(v5 + 216);
      v57 = *(_QWORD *)(v5 + 224);
      if ((v56 & 1) != 0)
      {
        v59 = *(_QWORD *)(v5 + 224);
        sub_1BA796C58(*(_QWORD *)(v5 + 216), v57, *(_BYTE *)(v5 + 232));
        v60 = sub_1BA862600((uint64_t)&unk_1E7254CB0);
        v102 = (char *)v59;
        v75 = (char *)v60;
        sub_1BB3757A0(v58, v59, v60, 1, v44);
        if (v4)
        {
          swift_bridgeObjectRelease();
          sub_1BA796C70(v58, (uint64_t)v102, v56);
          return;
        }
        sub_1BA502AD0(v44, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
        v57 = (uint64_t)v102;
      }
      sub_1BA796C70(v58, v57, v56);
    }
    v61 = *(_QWORD *)(v5 + 240);
    if (v61)
      sub_1BAB73F0C(a1, a2, v61);
  }
}

void sub_1BABD3014(uint64_t a1, uint64_t a2)
{
  FormatLayeredMediaNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABD3034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BABD3050(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2AD4);
}

uint64_t sub_1BABD3050(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *v5;
  if (*v5 < 0)
  {
    v9 = result;
    v10 = *(_QWORD *)(v6 + 16);
    v11 = *(_QWORD *)(v6 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    a5(v9, a2, v10, v11);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1BABD30D0(uint64_t a1, uint64_t a2)
{
  FormatLayeredMediaNodeStyle.bind(binder:context:)(a1, a2);
}

void FormatLayeredMediaNodeStyle.Selector.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v4 = v3;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v57 - v11;
  v14 = *(_QWORD *)(v2 + 16);
  v13 = *(_QWORD *)(v2 + 24);
  v15 = *(_QWORD *)(v2 + 32);
  v16 = *(_QWORD *)(v2 + 72);
  v63 = *(_QWORD *)(v2 + 64);
  v64 = v16;
  v17 = *(_QWORD *)(v2 + 88);
  v65 = *(_QWORD *)(v2 + 80);
  v66 = v17;
  v18 = *(_QWORD *)(v2 + 96);
  v19 = *(_QWORD *)(v2 + 104);
  v68 = *(_QWORD *)(v2 + 112);
  v69 = *(_QWORD *)(v2 + 120);
  v67 = *(_QWORD *)(v2 + 128);
  v62 = *(_QWORD *)(v2 + 136);
  v74 = *(unsigned __int8 *)(v2 + 144);
  v75 = v18;
  v20 = *(_QWORD *)(v2 + 160);
  v76 = *(_QWORD *)(v2 + 152);
  v77 = v19;
  v72 = *(unsigned __int8 *)(v2 + 168);
  v60 = *(_QWORD *)(v2 + 176);
  v73 = *(_QWORD *)(v2 + 184);
  v21 = *(unsigned __int8 *)(v2 + 192);
  v22 = *(_QWORD *)(v2 + 200);
  if (v14)
  {
    v61 = *(unsigned __int8 *)(v2 + 192);
    v23 = *(_QWORD *)(v14 + 16);
    if (v23)
    {
      v70 = v15;
      v71 = v9;
      v58 = v20;
      v59 = (char *)&v57 - v11;
      v57 = v22;
      v24 = a2;
      v25 = a1;
      swift_bridgeObjectRetain_n();
      v26 = (_BYTE *)(v14 + 40);
      do
      {
        if ((*v26 & 1) == 0)
        {
          v78 = *((_QWORD *)v26 - 1);
          v27 = v78;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v3)
          {
            sub_1BA72C46C(v27, 0);
            sub_1BA72C46C(v27, 0);
            swift_bridgeObjectRelease_n();
            return;
          }
          sub_1BA72C46C(v27, 0);
          sub_1BA72C46C(v27, 0);
        }
        v26 += 16;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease_n();
      a1 = v25;
      a2 = v24;
      v22 = v57;
      v20 = v58;
      v15 = v70;
      v9 = v71;
      v21 = v61;
      v12 = v59;
      v18 = v75;
    }
    else
    {
      v21 = v61;
    }
  }
  if ((~v13 & 0xF000000000000007) != 0)
  {
    v70 = v15;
    v71 = v9;
    v30 = v21;
    v31 = v22;
    v32 = v12;
    v33 = v20;
    v78 = v13;
    swift_retain();
    FormatBackground.bind(binder:context:)();
    if (v3)
    {
      sub_1BA6E6CD8(v13);
      return;
    }
    sub_1BA6E6CD8(v13);
    v20 = v33;
    v29 = v76;
    v28 = v77;
    v12 = v32;
    v22 = v31;
    v21 = v30;
    v15 = v70;
    v9 = v71;
    v18 = v75;
    if (!v70)
      goto LABEL_19;
  }
  else
  {
    v29 = v76;
    v28 = v77;
    if (!v15)
      goto LABEL_19;
  }
  v34 = v9;
  v35 = a2;
  v36 = v21;
  v37 = a1;
  v38 = v22;
  v39 = v12;
  v40 = v20;
  sub_1BAB73D7C(v37, v35, v15);
  if (v3)
    return;
  v20 = v40;
  v12 = v39;
  v22 = v38;
  a1 = v37;
  v21 = v36;
  a2 = v35;
  v9 = v34;
  v28 = v77;
  v18 = v75;
LABEL_19:
  if ((_DWORD)v74 == 254)
  {
    v41 = v73;
  }
  else
  {
    v58 = v20;
    v59 = v12;
    v78 = v18;
    v43 = v18;
    swift_retain();
    FormatColor.bind(binder:context:)();
    if (v3)
    {
      sub_1BA6E8A78(v63, v64, v65, v66, v43, v28, v68, v69, v67, v62, v74);
      return;
    }
    v44 = v74;
    v41 = v73;
    v45 = v67;
    switch((int)v74)
    {
      case 0:
        break;
      case 1:
        v71 = v9;
        v46 = a2;
        v47 = v21;
        v48 = v68;
        sub_1BABD5EE8(a1, v46);
        v49 = v48;
        v21 = v47;
        a2 = v46;
        v9 = v71;
        sub_1BA6E8A78(v63, v64, v65, v66, v75, v28, v49, v69, v45, v62, 1u);
        v20 = v58;
        v12 = v59;
        v29 = v76;
        goto LABEL_21;
      case 2:
        v61 = v21;
        v55 = v68;
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        v4 = 0;
        v56 = 2;
        goto LABEL_47;
      case 3:
        v61 = v21;
        v55 = v68;
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        v4 = 0;
        v56 = 3;
LABEL_47:
        sub_1BA6E8A78(v63, v64, v65, v66, v75, v28, v55, v69, v45, v62, v56);
        v20 = v58;
        v12 = v59;
        v29 = v76;
        v21 = v61;
        goto LABEL_21;
      case 4:
        v71 = v9;
        sub_1BABD5EE8(a1, a2);
        v9 = v71;
        goto LABEL_48;
      case 5:
        v61 = v21;
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        v4 = 0;
        v21 = v61;
LABEL_48:
        v44 = v74;
        break;
      default:
        v41 = v73;
        v45 = v67;
        break;
    }
    sub_1BA6E8A78(v63, v64, v65, v66, v75, v28, v68, v69, v45, v62, v44);
    v20 = v58;
    v12 = v59;
    v29 = v76;
  }
LABEL_21:
  if (v72 != 255)
  {
    if ((v72 & 1) != 0)
    {
      v50 = (uint64_t)v12;
      v51 = v20;
      sub_1BA796C58(v29, v20, v72);
      v52 = sub_1BA862600((uint64_t)&unk_1E7254C38);
      v59 = (char *)v50;
      sub_1BB3757A0(v29, v51, v52, 1, v50);
      if (v4)
      {
        swift_bridgeObjectRelease();
        sub_1BA796C70(v76, v51, v72);
        return;
      }
      sub_1BA502AD0((uint64_t)v59, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      sub_1BA796C70(v76, v51, v72);
      v41 = v73;
      if (v21 != 255)
        goto LABEL_25;
      goto LABEL_39;
    }
    sub_1BA796C70(v29, v20, v72);
  }
  if (v21 != 255)
  {
LABEL_25:
    if ((v21 & 1) != 0)
    {
      v53 = v60;
      sub_1BA796C58(v60, v41, v21);
      v54 = sub_1BA862600((uint64_t)&unk_1E7254C60);
      sub_1BB3757A0(v53, v41, v54, 1, (uint64_t)v9);
      if (v4)
      {
        swift_bridgeObjectRelease();
        sub_1BA796C70(v53, v73, v21);
        return;
      }
      sub_1BA502AD0((uint64_t)v9, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      v41 = v73;
      v42 = v53;
    }
    else
    {
      v42 = v60;
    }
    sub_1BA796C70(v42, v41, v21);
  }
LABEL_39:
  if (v22)
    sub_1BAB73F0C(a1, a2, v22);
}

void sub_1BABD38C0(uint64_t a1, uint64_t a2)
{
  FormatLayeredMediaNodeStyle.Selector.bind(binder:context:)(a1, a2);
}

void sub_1BABD38D4()
{
  sub_1BAC67464();
}

void FormatMediaTimingFunction.bind(binder:context:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 32) == 1)
    FormatEdgeInsetsEquation.bind(binder:context:)();
}

uint64_t sub_1BABD3928()
{
  return FormatMediaTiming.bind(binder:context:)();
}

void FormatMediaTimingFunctionControlPoints.bind(binder:context:)()
{
  sub_1BA756834();
}

void sub_1BABD3950()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 32) == 1)
    FormatEdgeInsetsEquation.bind(binder:context:)();
}

void sub_1BABD398C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;

  v6 = v2[1];
  if (!*v2 || (sub_1BAB98B78(a1, a2, *v2), !v3))
  {
    if (v6)
      sub_1BAB87CC8(a1, a2, v6);
  }
}

void sub_1BABD39E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a2;
  v5 = a1;
  v6 = v2[1];
  v8 = v2[3];
  v7 = v2[4];
  v10 = v2[5];
  v9 = v2[6];
  v11 = v2[8];
  if ((~v6 & 0xF000000000000007) == 0 && (v2[3] & 7) == 7)
    goto LABEL_17;
  v23 = v2[5];
  v24 = v2[8];
  v15 = *v2;
  v16 = v2[2];
  v22 = v2[4];
  sub_1BA7CCBB4(*v2, v6, v16, v8);
  if ((v8 & 4) != 0)
  {
    FormatTextContent.bind(binder:context:)();
    v18 = v15;
    v4 = a2;
    v5 = a1;
  }
  else
  {
    v17 = a2;
    v5 = a1;
    sub_1BABBA838(a1, v17, v15, v6, v16, v8);
    v18 = v15;
    v4 = v17;
  }
  sub_1BAC68C70(v18, v6, v16, v8);
  v7 = v22;
  v10 = v23;
  v11 = v24;
  if (!v3)
  {
LABEL_17:
    if ((~(v7 & v9) & 0x3000000000000007) == 0)
      goto LABEL_14;
    if ((v9 & 0x2000000000000000) != 0)
    {
      v21 = v7;
      sub_1BA7CCCA0(v7, v10, v9);
      FormatSyncImageContent.bind(binder:context:)(v5, v4);
      v20 = v21;
    }
    else
    {
      v19 = v7;
      sub_1BA7CCCA0(v7, v10, v9);
      sub_1BAB6F1E4(v5, v4, v19, v10);
      v20 = v19;
    }
    sub_1BAC68C54(v20, v10, v9);
    if (!v3)
LABEL_14:
      sub_1BAB87CC8(v5, v4, v11);
  }
}

uint64_t FormatMenuTitle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  v8 = v2[3];
  swift_retain();
  if ((v8 & 4) != 0)
  {
    FormatTextContent.bind(binder:context:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BABBA838(a1, a2, v5, v6, v7, v8);
  }
  return sub_1BA7CCC14(v5, v6, v7, v8);
}

uint64_t FormatMenuImage.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  swift_retain();
  if ((v7 & 0x2000000000000000) != 0)
  {
    FormatSyncImageContent.bind(binder:context:)(a1, a2);
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAB6F1E4(a1, a2, v5, v6);
  }
  return sub_1BA7CCC64(v5, v6, v7);
}

void sub_1BABD3D30(uint64_t a1, uint64_t a2)
{
  sub_1BABD39E0(a1, a2);
}

void FormatMenuGroupData.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  v7 = *(unsigned __int8 *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 24);
  v9 = *(unsigned __int8 *)(v2 + 32);
  v10 = *(_QWORD *)(v2 + 56);
  if (v7 != 255 && (v7 & 1) != 0)
  {
    v17 = *(_QWORD *)(v2 + 56);
    v13 = *(_QWORD *)v2;
    v14 = *(_QWORD *)(v2 + 8);
    v15 = *(_QWORD *)(*(_QWORD *)v2 + 24);
    sub_1BAB5EC7C(v13, v14, 1);
    sub_1BAB7A134(a1, a2, v15);
    if (v3)
    {
      sub_1BAC68A50(v13, v14, v7);
      return;
    }
    sub_1BABC9514(a1, a2);
    v4 = 0;
    sub_1BAC68A50(v13, v14, v7);
    v10 = v17;
  }
  if (v9 == 255 || (v9 & 1) == 0)
  {
LABEL_11:
    sub_1BAB95734(a1, a2, v10);
    return;
  }
  v16 = *(_QWORD *)(v8 + 24);
  sub_1BA92F754((void *)v8, 1);
  sub_1BAB79F78(a1, a2, v16);
  if (!v4)
  {
    sub_1BABC9414(a1, a2, *(void **)(v8 + 32));
    sub_1BAC68A38((void *)v8, v9);
    goto LABEL_11;
  }
  sub_1BAC68A38((void *)v8, v9);
}

uint64_t FormatMenuTitleData.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v3;
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    v6 = result;
    v8 = *(_QWORD *)v2;
    v7 = *(_QWORD *)(v2 + 8);
    v9 = *(_QWORD *)(*(_QWORD *)v2 + 24);
    swift_retain();
    sub_1BAB7A134(v6, a2, v9);
    if (!v4)
      sub_1BABC9514(v6, a2);
    return sub_1BAB5EC9C(v8, v7, 1);
  }
  return result;
}

void FormatMenuImageData.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;

  v4 = v3;
  if (*((_BYTE *)v2 + 8) == 1)
  {
    v7 = *v2;
    v8 = *(_QWORD *)(v7 + 24);
    swift_retain();
    sub_1BAB79F78(a1, a2, v8);
    if (!v4)
      sub_1BABC9414(a1, a2, *(void **)(v7 + 32));
    sub_1BA92F770((void *)v7, 1);
  }
}

void sub_1BABD3FE0(uint64_t a1, uint64_t a2)
{
  FormatMenuGroupData.bind(binder:context:)(a1, a2);
}

void sub_1BABD3FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1BABD403C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a3[7];
  v7 = a3[8];
  v9 = a3[2];
  v10 = a3[3];
  v11 = a3[4];
  v12 = a3[5];
  v13 = a3[6];
  *(_QWORD *)(v5 - 72) = v13;
  sub_1BA7CCBB4(v9, v10, v11, v12);
  sub_1BA7CCCA0(v13, v6, v7);
  swift_retain();
  sub_1BABD4238(v4, v3);
  sub_1BA7CCC14(v9, v10, v11, v12);
  sub_1BA7CCC64(*(_QWORD *)(v5 - 72), v6, v7);
  return swift_release();
}

void sub_1BABD4238(unint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = *v2;
  v6 = v2[1];
  v9 = v2[2];
  v8 = v2[3];
  v10 = v2[4];
  v12 = v2[5];
  v13 = v2[6];
  v11 = v2[7];
  swift_retain();
  if ((v8 & 4) != 0)
  {
    FormatTextContent.bind(binder:context:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BABBA838(a1, a2, v7, v6, v9, v8);
  }
  sub_1BA7CCC14(v7, v6, v9, v8);
  if (!v3)
  {
    swift_retain();
    if ((v13 & 0x2000000000000000) != 0)
    {
      FormatSyncImageContent.bind(binder:context:)(a1, a2);
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BAB6F1E4(a1, a2, v10, v12);
    }
    sub_1BA7CCC64(v10, v12, v13);
    sub_1BABD48C8(a1, a2, v11);
  }
}

void sub_1BABD43BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1BABD3FF4(a1, a2, *v2);
}

void FormatMenuGroupableData.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BABD4420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char v13;
  char v15;

  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_BYTE *)(a1 + 48);
  if ((v6 & 1) != 0)
  {
    v15 = *(_BYTE *)(a1 + 32);
    v9 = v2;
    v10 = *(_QWORD *)(v5 + 24);
    sub_1BAB5EC7C(v5, v4, 1);
    sub_1BA92F754((void *)v7, v8);
    swift_retain();
    sub_1BAB5EC7C(v5, v4, 1);
    sub_1BAB7A134(v3, v9, v10);
    if (v1)
    {
      sub_1BAB5EC9C(v5, v4, 1);
      sub_1BAB5EC9C(v5, v4, 1);
      v12 = (void *)v7;
      v13 = v8;
      goto LABEL_12;
    }
    sub_1BABC9514(v3, v9);
    v1 = 0;
    sub_1BAB5EC9C(v5, v4, 1);
    v2 = v9;
    v6 = v15;
    if ((v8 & 1) == 0)
    {
LABEL_11:
      sub_1BAB5EC9C(v5, v4, v6);
      v12 = (void *)v7;
      v13 = 0;
      goto LABEL_12;
    }
  }
  else
  {
    sub_1BAB5EC7C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), 0);
    sub_1BA92F754((void *)v7, v8);
    swift_retain();
    if ((v8 & 1) == 0)
      goto LABEL_11;
  }
  v11 = *(_QWORD *)(v7 + 24);
  swift_retain();
  sub_1BAB79F78(v3, v2, v11);
  if (!v1)
    sub_1BABC9414(v3, v2, *(void **)(v7 + 32));
  sub_1BA92F770((void *)v7, 1);
  sub_1BAB5EC9C(v5, v4, v6);
  v12 = (void *)v7;
  v13 = 1;
LABEL_12:
  sub_1BA92F770(v12, v13);
  return swift_release();
}

void FormatMenuItemData.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = v3;
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(unsigned __int8 *)(v2 + 32);
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    v9 = *(_QWORD *)v2;
    v10 = *(_QWORD *)(v2 + 8);
    v11 = *(_QWORD *)(*(_QWORD *)v2 + 24);
    swift_retain();
    sub_1BAB7A134(a1, a2, v11);
    if (v4)
    {
      sub_1BAB5EC9C(v9, v10, 1);
      return;
    }
    sub_1BABC9514(a1, a2);
    v4 = 0;
    sub_1BAB5EC9C(v9, v10, 1);
  }
  if (v8)
  {
    v12 = *(_QWORD *)(v7 + 24);
    swift_retain();
    sub_1BAB79F78(a1, a2, v12);
    if (!v4)
      sub_1BABC9414(a1, a2, *(void **)(v7 + 32));
    sub_1BA92F770((void *)v7, 1);
  }
}

void sub_1BABD47A8()
{
  FormatMenuGroupableData.bind(binder:context:)();
}

uint64_t sub_1BABD47BC(unint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  swift_retain();
  if ((v7 & 0x2000000000000000) != 0)
  {
    FormatSyncImageContent.bind(binder:context:)(a1, a2);
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAB6F1E4(a1, a2, v5, v6);
  }
  return sub_1BA7CCC64(v5, v6, v7);
}

void sub_1BABD4868(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;

  if (*(_BYTE *)(v2 + 8) == 1)
  {
    v5 = *(void **)v2;
    swift_retain();
    sub_1BAB71934(a1, a2);
    sub_1BA92F770(v5, 1);
  }
}

void sub_1BABD48C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  __asm { BR              X10 }
}

uint64_t sub_1BABD49C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = swift_projectBox();
  sub_1BA4C2DD8(v5, v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  sub_1BA4C2DD8(v1, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      goto LABEL_3;
    v7 = *v3;
    v8 = v3[1];
    v9 = v3[2];
    *(_QWORD *)(v4 - 112) = v7;
    *(_QWORD *)(v4 - 104) = v8;
    *(_QWORD *)(v4 - 96) = v9;
    *(_BYTE *)(v4 - 65) = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_1BB6B84D4((uint64_t *)(v4 - 112), (char *)(v4 - 65));
    if (v0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BB3757A0(v7, v8, v10, 1, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA502AD0(v2, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  }
  return sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
}

void sub_1BABD4E44(unint64_t a1, uint64_t a2)
{
  sub_1BABD4238(a1, a2);
}

void sub_1BABD4E58(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1BABD48C8(a1, a2, *v2);
}

void sub_1BABD4E70(uint64_t a1, uint64_t a2)
{
  FormatMenuItemData.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABD4E84(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  v8 = v2[3];
  swift_retain();
  if ((v8 & 4) != 0)
  {
    FormatTextContent.bind(binder:context:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BABBA838(a1, a2, v5, v6, v7, v8);
  }
  return sub_1BA7CCC14(v5, v6, v7, v8);
}

uint64_t sub_1BABD4F40(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v3;
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    v6 = result;
    v8 = *(_QWORD *)v2;
    v7 = *(_QWORD *)(v2 + 8);
    v9 = *(_QWORD *)(*(_QWORD *)v2 + 24);
    swift_retain();
    sub_1BAB7A134(v6, a2, v9);
    if (!v4)
      sub_1BABC9514(v6, a2);
    return sub_1BAB5EC9C(v8, v7, 1);
  }
  return result;
}

uint64_t FormatMicaNodeContent.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  v10 = (unint64_t)*v2 >> 62;
  if (!(_DWORD)v10)
  {
    v12 = swift_projectBox();
    sub_1BA4C2DD8(v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
    sub_1BAC67580();
    return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
  }
  if ((_DWORD)v10 == 1)
  {
    v11 = *(_QWORD *)(v9 + 24);
    v16 = *(_QWORD *)(v9 + 16);
    swift_retain();
    swift_retain_n();
    FormatMicaNodeContent.bind(binder:context:)(a1, a2);
    if (!v3)
    {
      swift_release();
      v16 = v11;
      swift_retain();
      FormatMicaNodeContent.bind(binder:context:)(a1, a2);
    }
    swift_release();
    return swift_release_n();
  }
  v14 = *(_QWORD *)(v9 + 24);
  v16 = *(_QWORD *)(v9 + 16);
  swift_retain_n();
  swift_bridgeObjectRetain();
  FormatMicaNodeContent.bind(binder:context:)(a1, a2);
  if (v3)
  {
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  swift_release();
  swift_bridgeObjectRetain();
  sub_1BABA45FC(a1, a2, v14);
  swift_release();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BABD51B4(uint64_t a1, uint64_t a2)
{
  return FormatMicaBackground.bind(binder:context:)(a1, a2);
}

uint64_t FormatMicaNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t (*v10)(void);
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v14[144];
  _BYTE v15[144];
  __int128 v16;
  uint64_t v17;

  *(_QWORD *)&v16 = v2[4];
  sub_1BA71CA6C(v16);
  FormatSize.bind(binder:context:)();
  if (v3)
    return sub_1BA719718(v16);
  sub_1BA719718(v16);
  swift_beginAccess();
  v7 = v2[6];
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v8; ++i)
    {
      *(_QWORD *)&v16 = *(_QWORD *)(v7 + 8 * i + 32);
      sub_1BA7196DC(v16);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v16);
    }
    swift_bridgeObjectRelease_n();
  }
  if (v2[7])
    FormatMicaNodeStyle.bind(binder:context:)(a1, a2);
  v17 = v2[8];
  swift_retain();
  FormatMicaNodeContent.bind(binder:context:)(a1, a2);
  swift_release();
  v10 = MEMORY[0x1E0DEB940];
  sub_1BA760F3C((uint64_t)(v2 + 9), (uint64_t)v15, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  sub_1BA760F3C((uint64_t)v15, (uint64_t)&v16, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v10, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  if (sub_1BA896370((uint64_t *)&v16) != 1)
  {
    sub_1BA760F3C((uint64_t)v15, (uint64_t)v14, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA89652C((uint64_t)v14);
    FormatMediaTiming.bind(binder:context:)();
    sub_1BAC653DC((uint64_t)v15);
  }
  result = swift_beginAccess();
  v11 = v2[29];
  if (v11 >> 62 == 1)
  {
    v12 = *(_QWORD *)(v11 + 16);
    v13 = *(_QWORD *)(v11 + 24);
    sub_1BA67D3F4(v11);
    sub_1BA67D3F4(v12);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(a1, a2, v12, v13);
    sub_1BA6EEDB4(v12);
    swift_bridgeObjectRelease();
    return sub_1BA6EEDB4(v11);
  }
  return result;
}

uint64_t FormatMicaNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABD54C8(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BABAB6DC);
}

uint64_t sub_1BABD54C8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = v3;
  swift_beginAccess();
  v9 = *(_QWORD *)(v3 + 48);
  swift_bridgeObjectRetain();
  a3(a1, a2, v9);
  if (v4)
    return swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v6 + 56);
  if (v11)
  {
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain_n();
      v13 = (_BYTE *)(v11 + 40);
      do
      {
        if ((*v13 & 1) == 0)
        {
          v14 = *((_QWORD *)v13 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v14, 0);
          sub_1BA72C46C(v14, 0);
        }
        v13 += 16;
        --v12;
      }
      while (v12);
      result = swift_bridgeObjectRelease_n();
    }
  }
  v15 = *(_QWORD *)(v6 + 64);
  if (v15)
    result = sub_1BAB73D7C(a1, a2, v15);
  v16 = *(unsigned __int8 *)(v6 + 176);
  if (v16 != 254)
  {
    v26 = *(_QWORD *)(v6 + 96);
    v27 = *(_QWORD *)(v6 + 104);
    v17 = *(_QWORD *)(v6 + 128);
    v28 = *(_QWORD *)(v6 + 112);
    v29 = *(_QWORD *)(v6 + 136);
    v18 = *(_QWORD *)(v6 + 152);
    v30 = *(_QWORD *)(v6 + 144);
    v31 = *(_QWORD *)(v6 + 120);
    v20 = *(_QWORD *)(v6 + 160);
    v19 = *(_QWORD *)(v6 + 168);
    swift_retain();
    FormatColor.bind(binder:context:)();
    switch(v16)
    {
      case 0:
        v24 = 0;
        goto LABEL_17;
      case 1:
        v21 = v29;
        v25 = v18;
        v22 = v30;
        sub_1BABD5EE8(a1, a2);
        v23 = 1;
        goto LABEL_23;
      case 2:
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        return sub_1BA6E8A78(v26, v27, v28, v31, v17, v29, v30, v18, v20, v19, 2u);
      case 3:
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        return sub_1BA6E8A78(v26, v27, v28, v31, v17, v29, v30, v18, v20, v19, 3u);
      case 4:
        v21 = v29;
        v25 = v18;
        v22 = v30;
        sub_1BABD5EE8(a1, a2);
        v23 = 4;
LABEL_23:
        result = sub_1BA6E8A78(v26, v27, v28, v31, v17, v21, v22, v25, v20, v19, v23);
        break;
      case 5:
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        result = sub_1BA6E8A78(v26, v27, v28, v31, v17, v29, v30, v18, v20, v19, 5u);
        break;
      default:
        v24 = -1;
LABEL_17:
        result = sub_1BA6E8A78(v26, v27, v28, v31, v17, v29, v30, v18, v20, v19, v24);
        break;
    }
  }
  return result;
}

uint64_t sub_1BABD58DC(uint64_t a1, uint64_t a2)
{
  return FormatMicaNode.bind(binder:context:)(a1, a2);
}

uint64_t FormatMicaNodeArchive.bind(binder:context:)()
{
  return sub_1BAC67580();
}

uint64_t FormatURL.bind(binder:context:)()
{
  return sub_1BA54AC58();
}

uint64_t sub_1BABD592C()
{
  return sub_1BAC67580();
}

uint64_t sub_1BABD5944(uint64_t a1, uint64_t a2)
{
  return FormatMicaNodeContent.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABD5958(uint64_t a1, uint64_t a2)
{
  return FormatMicaNodeStyle.bind(binder:context:)(a1, a2);
}

uint64_t FormatMicaNodeStyle.Selector.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = v3;
  v8 = *(_QWORD *)(v2 + 16);
  result = *(_QWORD *)(v2 + 24);
  v9 = *(_QWORD *)(v2 + 64);
  v34 = *(_QWORD *)(v2 + 56);
  v10 = *(_QWORD *)(v2 + 88);
  v11 = *(_QWORD *)(v2 + 96);
  v12 = *(_QWORD *)(v2 + 112);
  v33 = *(_QWORD *)(v2 + 120);
  v32 = *(_QWORD *)(v2 + 128);
  v13 = *(unsigned __int8 *)(v2 + 136);
  v36 = *(_QWORD *)(v2 + 80);
  v37 = *(_QWORD *)(v2 + 104);
  v39 = v11;
  v35 = *(_QWORD *)(v2 + 72);
  if (v8)
  {
    v14 = *(_QWORD *)(v2 + 112);
    v15 = *(_QWORD *)(v8 + 16);
    if (!v15)
    {
      v12 = *(_QWORD *)(v2 + 112);
      v11 = *(_QWORD *)(v2 + 96);
      if (!result)
        goto LABEL_19;
      goto LABEL_13;
    }
    v38 = *(_QWORD *)(v2 + 24);
    v27 = *(unsigned __int8 *)(v2 + 136);
    v29 = *(_QWORD *)(v2 + 64);
    v31 = *(_QWORD *)(v2 + 88);
    swift_bridgeObjectRetain_n();
    v16 = (_BYTE *)(v8 + 40);
    do
    {
      if ((*v16 & 1) == 0)
      {
        v17 = *((_QWORD *)v16 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v3)
        {
          sub_1BA72C46C(v17, 0);
          sub_1BA72C46C(v17, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v17, 0);
        sub_1BA72C46C(v17, 0);
      }
      v16 += 16;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease_n();
    v9 = v29;
    v10 = v31;
    v12 = v14;
    result = v38;
    v11 = v39;
    v13 = v27;
  }
  if (!result)
  {
LABEL_19:
    if (v13 != 254)
    {
      v20 = v13;
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v4)
      {
        v26 = v20;
        return sub_1BA6E8A78(v34, v9, v35, v36, v10, v11, v37, v12, v33, v32, v26);
      }
      else
      {
        switch(v20)
        {
          case 0:
            v26 = 0;
            return sub_1BA6E8A78(v34, v9, v35, v36, v10, v11, v37, v12, v33, v32, v26);
          case 1:
            v21 = v37;
            sub_1BABD5EE8(a1, a2);
            v22 = 1;
            goto LABEL_32;
          case 2:
            v23 = v37;
            sub_1BABD5EE8(a1, a2);
            v24 = v33;
            sub_1BABD5EE8(a1, a2);
            v25 = 2;
            goto LABEL_33;
          case 3:
            v23 = v37;
            sub_1BABD5EE8(a1, a2);
            v24 = v33;
            sub_1BABD5EE8(a1, a2);
            v25 = 3;
            goto LABEL_33;
          case 4:
            v21 = v37;
            sub_1BABD5EE8(a1, a2);
            v22 = 4;
LABEL_32:
            result = sub_1BA6E8A78(v34, v9, v35, v36, v10, v11, v21, v12, v33, v32, v22);
            break;
          case 5:
            v23 = v37;
            sub_1BABD5EE8(a1, a2);
            v24 = v33;
            sub_1BABD5EE8(a1, a2);
            v25 = 5;
LABEL_33:
            result = sub_1BA6E8A78(v34, v9, v35, v36, v10, v11, v23, v12, v24, v32, v25);
            break;
          default:
            v26 = -1;
            return sub_1BA6E8A78(v34, v9, v35, v36, v10, v11, v37, v12, v33, v32, v26);
        }
      }
    }
    return result;
  }
LABEL_13:
  v18 = *(_QWORD *)(result + 16);
  if (!v18)
  {
    v11 = v39;
    goto LABEL_19;
  }
  v28 = v13;
  v30 = v9;
  v19 = swift_bridgeObjectRetain() + 64;
  while (1)
  {
    v40 = v18;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    FormatColor.bind(binder:context:)();
    if (v4)
      break;
    swift_release();
    swift_retain();
    FormatFloat.bind(binder:context:)();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    v19 += 40;
    v18 = -1;
    if (v40 == 1)
    {
      result = swift_bridgeObjectRelease();
      v13 = v28;
      v11 = v39;
      v9 = v30;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1BABD5E50(uint64_t a1, uint64_t a2)
{
  return FormatMicaNodeStyle.Selector.bind(binder:context:)(a1, a2);
}

void FormatMotion.bind(binder:context:)()
{
  __asm { BR              X12 }
}

uint64_t sub_1BABD5EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_1BABD5EE8(v2, v0);
  if (!v1)
    return sub_1BABD5EE8(v2, v0);
  return result;
}

uint64_t sub_1BABD5EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v5 = *((_QWORD *)&v11 + 1);
    v6 = v12;
    __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
    if (v2)
      return result;
  }
  else
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    sub_1BA65DB80((uint64_t)&v10, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
  if (swift_dynamicCast())
  {
    v8 = *((_QWORD *)&v11 + 1);
    v9 = v12;
    __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, v8, v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  }
  else
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    return sub_1BA65DB80((uint64_t)&v10, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

uint64_t FormatRange.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, double);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, double);
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v3;
  v7 = a1;
  v31 = a3;
  v8 = *(_QWORD *)(a3 + 16);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v14((char *)&v24 - v15, v3, v8, v12);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v25 = v14;
    v27 = v3;
    v16 = a2;
    v17 = *((_QWORD *)&v29 + 1);
    v18 = v30;
    __swift_project_boxed_opaque_existential_1(&v28, *((uint64_t *)&v29 + 1));
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8);
    v26 = v7;
    v19(v7, v16, v17, v18);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    if (v4)
      return result;
    a2 = v16;
    v7 = v26;
    v5 = v27;
    v14 = v25;
  }
  else
  {
    v30 = 0;
    v28 = 0u;
    v29 = 0u;
    sub_1BA65DB80((uint64_t)&v28, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
  ((void (*)(char *, uint64_t, uint64_t))v14)(v10, v5 + *(int *)(v31 + 52), v8);
  if (swift_dynamicCast())
  {
    v21 = a2;
    v22 = *((_QWORD *)&v29 + 1);
    v23 = v30;
    __swift_project_boxed_opaque_existential_1(&v28, *((uint64_t *)&v29 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(v7, v21, v22, v23);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  }
  else
  {
    v30 = 0;
    v28 = 0u;
    v29 = 0u;
    return sub_1BA65DB80((uint64_t)&v28, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

void FormatTranslate.bind(binder:context:)()
{
  type metadata accessor for FormatRange();
}

uint64_t sub_1BABD62E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = FormatRange.bind(binder:context:)(v2, v1, a1);
  if (!v3)
    return FormatRange.bind(binder:context:)(v2, v1, a1);
  return result;
}

uint64_t FormatMotion.TranslateWithScale.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BABD5EE8(a1, a2);
  if (!v2)
    return sub_1BABD5EE8(a1, a2);
  return result;
}

void sub_1BABD6380()
{
  __asm { BR              X12 }
}

uint64_t sub_1BABD63BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_1BABD5EE8(v2, v0);
  if (!v1)
    return sub_1BABD5EE8(v2, v0);
  return result;
}

uint64_t sub_1BABD6404(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BABD5EE8(a1, a2);
  if (!v2)
    return sub_1BABD5EE8(a1, a2);
  return result;
}

void FormatNode.bindChildren(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BABD64A4()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  FormatHOverlayNode.bind(binder:context:)(v1, v0);
  return swift_release();
}

uint64_t FormatSpaceNode.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;

  swift_beginAccess();
  v7 = *(_QWORD *)(v0 + 32);
  sub_1BA71CA6C(v7);
  FormatSize.bind(binder:context:)();
  result = sub_1BA719718(v7);
  if (!v1)
  {
    result = swift_beginAccess();
    v3 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v4; ++i)
      {
        v6 = *(_QWORD *)(v3 + 8 * i + 32);
        sub_1BA7196DC(v6);
        FormatAdjustment.bind(binder:context:)();
        sub_1BA719340(v6);
      }
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

unint64_t FormatWebEmbedNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;

  swift_retain();
  FormatWebEmbedNodeContent.bind(binder:context:)(a1, a2);
  result = swift_release();
  if (!v3)
  {
    v14 = v2[8];
    sub_1BA71CA6C(v14);
    FormatSize.bind(binder:context:)();
    sub_1BA719718(v14);
    swift_beginAccess();
    v7 = v2[10];
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v8; ++i)
      {
        v10 = *(_QWORD *)(v7 + 8 * i + 32);
        sub_1BA7196DC(v10);
        FormatAdjustment.bind(binder:context:)();
        sub_1BA719340(v10);
      }
      swift_bridgeObjectRelease_n();
    }
    result = swift_beginAccess();
    v11 = v2[13];
    if (v11 >> 62 == 1)
    {
      v12 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      sub_1BA67D3F4(v11);
      sub_1BA67D3F4(v12);
      swift_bridgeObjectRetain();
      sub_1BABC2BF8(a1, a2, v12, v13);
      sub_1BA6EEDB4(v12);
      swift_bridgeObjectRelease();
      return sub_1BA6EEDB4(v11);
    }
  }
  return result;
}

uint64_t FormatVideoNode.bind(binder:context:)(uint64_t a1, char *a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unsigned __int8 v41;

  v4 = v2;
  v40 = v2[4];
  sub_1BA71CA6C(v40);
  FormatSize.bind(binder:context:)();
  if (v3)
    return sub_1BA719718(v40);
  sub_1BA719718(v40);
  swift_beginAccess();
  v8 = v2[6];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v9; ++i)
    {
      v11 = *(_QWORD *)(v8 + 8 * i + 32);
      sub_1BA7196DC(v11);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  if (v2[7])
    FormatVideoNodeStyle.bind(binder:context:)(a1, (uint64_t)a2);
  v12 = v2[8];
  if (v12)
  {
    swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 72);
    if (v13)
    {
      swift_bridgeObjectRetain();
      sub_1BAB758D0(a1, (uint64_t)a2, v13);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 88);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      v16 = (uint64_t *)(v14 + 72);
      do
      {
        v17 = *v16;
        if (*v16)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAB758D0(a1, (uint64_t)a2, v17);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v16 += 7;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease_n();
    }
  }
  swift_retain();
  FormatVideoNodeContent.bind(binder:context:)();
  swift_release();
  result = swift_beginAccess();
  v18 = v4[11];
  if (v18 >> 62 == 1)
  {
    v19 = *(_QWORD *)(v18 + 16);
    v20 = *(_QWORD *)(v18 + 24);
    sub_1BA67D3F4(v4[11]);
    sub_1BA67D3F4(v19);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(a1, (uint64_t)a2, v19, v20);
    sub_1BA6EEDB4(v19);
    swift_bridgeObjectRelease();
    result = sub_1BA6EEDB4(v18);
  }
  v21 = v4[19];
  if (v21 != 254)
  {
    v22 = *((_BYTE *)v4 + 224);
    v23 = v4[26];
    v24 = v4[27];
    v25 = v4[24];
    v26 = v4[25];
    v28 = v4[22];
    v27 = v4[23];
    v30 = v4[20];
    v29 = v4[21];
    v32 = v4[17];
    v31 = v4[18];
    v33 = v4[16];
    v36 = v30;
    v37 = v29;
    v34 = v28;
    v35 = v27;
    v38 = v25;
    v39 = v23;
    v41 = v22;
    sub_1BAC68A98(v33, v32, v31, v21, v30, v29, v28, v27, v25, v26, v23, v24, v22, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA796C58);
    sub_1BAC67944(a2);
    return sub_1BAC68A98(v33, v32, v31, v21, v36, v37, v34, v35, v38, v26, v39, v24, v41, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA796C70);
  }
  return result;
}

unint64_t FormatShareAttributionNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t result;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v6 = v2[4];
  v7 = v2[6];
  v15 = v2[2];
  sub_1BA71CA6C(v15);
  FormatSize.bind(binder:context:)();
  result = sub_1BA719718(v15);
  if (!v3)
  {
    v9 = *(_QWORD *)(v6 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v9; ++i)
      {
        v11 = *(_QWORD *)(v6 + 8 * i + 32);
        sub_1BA7196DC(v11);
        FormatAdjustment.bind(binder:context:)();
        sub_1BA719340(v11);
      }
      result = swift_bridgeObjectRelease_n();
    }
    if (v7 >> 62)
    {
      if (v7 >> 62 == 1)
      {
        v12 = *(_QWORD *)(v7 + 16);
        v13 = *(_QWORD *)(v7 + 24);
        sub_1BA67D3F4(v7);
        sub_1BA67D3F4(v12);
        swift_bridgeObjectRetain();
        sub_1BABC2BF8(a1, a2, v12, v13);
        sub_1BA6EEDB4(v12);
        swift_bridgeObjectRelease();
        v14 = v7;
      }
      else if (v7 == 0x8000000000000000)
      {
        v14 = 0x8000000000000000;
      }
      else
      {
        v14 = 0x8000000000000008;
      }
      return sub_1BA6EEDB4(v14);
    }
  }
  return result;
}

unint64_t FormatVideoPlayerNode.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;

  v4 = v2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - v8;
  v10 = v2[4];
  v42 = v10;
  sub_1BA71CA6C(v10);
  FormatSize.bind(binder:context:)();
  if (v3)
    return sub_1BA719718(v10);
  sub_1BA719718(v10);
  swift_beginAccess();
  v12 = v2[6];
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v49 = v9;
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v13; ++i)
    {
      v15 = *(_QWORD *)(v12 + 8 * i + 32);
      v42 = v15;
      sub_1BA7196DC(v15);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v15);
    }
    swift_bridgeObjectRelease_n();
    v9 = v49;
  }
  if (v2[7])
    FormatVideoNodeStyle.bind(binder:context:)(a1, a2);
  v16 = v2[8];
  if (v16)
  {
    swift_beginAccess();
    v17 = *(_QWORD *)(v16 + 72);
    if (v17)
    {
      swift_bridgeObjectRetain();
      sub_1BAB758D0(a1, a2, v17);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v18 = *(char **)(v16 + 88);
    v19 = *((_QWORD *)v18 + 2);
    if (v19)
    {
      swift_bridgeObjectRetain_n();
      v49 = v18;
      v20 = (uint64_t *)(v18 + 72);
      do
      {
        v21 = *v20;
        if (*v20)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAB758D0(a1, a2, v21);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v20 += 7;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease_n();
    }
  }
  v42 = v4[9];
  swift_retain();
  FormatVideoPlayerContent.bind(binder:context:)(a1, a2);
  swift_release();
  v42 = v4[10];
  swift_retain();
  FormatAsyncImageContent.bind(binder:context:)();
  swift_release();
  if (v4[11])
    FormatImageNodeStyle.bind(binder:context:)(a1, a2);
  v22 = v4[14];
  if (v22 != 1)
  {
    v23 = v4[16];
    v24 = v4[17];
    v25 = v4[15];
    v26 = v4[12];
    v27 = v4[13];
    v40 = v27;
    v41 = v26;
    LODWORD(v49) = *((unsigned __int8 *)v4 + 144);
    v42 = v26;
    v43 = v27;
    v44 = v22;
    v45 = v25;
    v39 = v25;
    v46 = v23;
    v47 = v24;
    HIDWORD(v38) = v49 & 1;
    v48 = v49 & 1;
    swift_retain();
    sub_1BA738D44(v27);
    swift_retain();
    swift_retain();
    sub_1BA69C808(v23, v24, SBYTE4(v38));
    FormatVideoPlayerOverlayContent.bind(binder:context:)(a1, a2);
    sub_1BA49A42C(v41, v40, v22, v39, v23, v24, (char)v49);
  }
  v28 = v4[19];
  v29 = v4[20];
  v30 = v4[21];
  LODWORD(v49) = *((unsigned __int8 *)v4 + 176);
  v42 = v28;
  v43 = v29;
  v44 = v30;
  LOBYTE(v45) = (_BYTE)v49;
  sub_1BA82ABBC(v28, v29, v30, (char)v49);
  sub_1BAC677C8();
  sub_1BA82ABF8(v28, v29, v30, (char)v49);
  swift_beginAccess();
  v31 = v4[24];
  if (v31 >> 62 == 1)
  {
    v32 = *(_QWORD *)(v31 + 16);
    v33 = *(_QWORD *)(v31 + 24);
    sub_1BA67D3F4(v4[24]);
    sub_1BA67D3F4(v32);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(a1, a2, v32, v33);
    sub_1BA6EEDB4(v32);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v31);
  }
  result = swift_beginAccess();
  v34 = *((unsigned __int8 *)v4 + 264);
  if (v34 != 255)
  {
    v36 = v4[31];
    v35 = v4[32];
    if ((v34 & 1) != 0)
    {
      sub_1BA796C58(v36, v35, v34);
      v37 = sub_1BA862600((uint64_t)&unk_1E7254CD8);
      sub_1BB3757A0(v36, v35, v37, 1, (uint64_t)v9);
      sub_1BA502AD0((uint64_t)v9, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
    return sub_1BA796C70(v36, v35, v34);
  }
  return result;
}

uint64_t FormatProgressViewNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v4 = v2;
  swift_beginAccess();
  v32 = *(_QWORD *)(v2 + 32);
  sub_1BA71CA6C(v32);
  FormatSize.bind(binder:context:)();
  if (v3)
    return sub_1BA719718(v32);
  sub_1BA719718(v32);
  swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v9; ++i)
    {
      v11 = *(_QWORD *)(v8 + 8 * i + 32);
      sub_1BA7196DC(v11);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v11);
    }
    v31 = a1;
    v35 = a2;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v31 = a1;
    v35 = a2;
  }
  v12 = *(_QWORD *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  v14 = *(_QWORD *)(v2 + 88);
  v15 = *(_WORD *)(v2 + 96);
  v33 = *(_QWORD *)(v2 + 56);
  v34 = *(_BYTE *)(v2 + 64);
  sub_1BAC68B58(v33, v34);
  sub_1BA7AAE84(v12, v13, v14, v15);
  FormatProgressViewNodeContent.bind(binder:context:)();
  sub_1BAC68B64(v33, v34);
  sub_1BA7E0800(v12, v13, v14, v15);
  swift_beginAccess();
  if (*(_QWORD *)(v2 + 112))
  {
    swift_retain();
    FormatProgressViewNodeStyle.bind(binder:context:)(v31, v35);
    swift_release();
  }
  swift_beginAccess();
  v17 = *(_QWORD *)(v2 + 120);
  v16 = *(_QWORD *)(v2 + 128);
  v19 = *(_QWORD *)(v2 + 136);
  v18 = *(_QWORD *)(v2 + 144);
  v21 = *(_QWORD *)(v2 + 152);
  v20 = *(_QWORD *)(v2 + 160);
  v22 = *(_QWORD *)(v4 + 168);
  v23 = *(unsigned __int8 *)(v4 + 176);
  if (v23 >> 6)
  {
    if (v23 >> 6 == 1)
    {
      v24 = *(_QWORD *)(v4 + 144) & 1;
      v29 = v18;
      swift_bridgeObjectRetain();
      sub_1BA69C808(v16, v19, v24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      FormatProgressCircleOptions.bind(binder:context:)();
      sub_1BAC68B70(v17, v16, v19, v29, v21, v20, v22, v23);
    }
  }
  else
  {
    v25 = v18 & 1;
    v30 = v18;
    swift_bridgeObjectRetain();
    sub_1BA69C808(v16, v19, v25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FormatProgressPieOptions.bind(binder:context:)();
    sub_1BAC68B70(v17, v16, v19, v30, v21, v20, v22, v23);
  }
  result = swift_beginAccess();
  v26 = *(_QWORD *)(v4 + 184);
  if (v26 >> 62 == 1)
  {
    v27 = *(_QWORD *)(v26 + 16);
    v28 = *(_QWORD *)(v26 + 24);
    sub_1BA67D3F4(*(_QWORD *)(v4 + 184));
    sub_1BA67D3F4(v27);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(v31, v35, v27, v28);
    sub_1BA6EEDB4(v27);
    swift_bridgeObjectRelease();
    return sub_1BA6EEDB4(v26);
  }
  return result;
}

unint64_t FormatPuzzleEmbedNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  swift_beginAccess();
  v17 = v2[6];
  sub_1BA71CA6C(v17);
  FormatSize.bind(binder:context:)();
  result = sub_1BA719718(v17);
  if (!v3)
  {
    swift_beginAccess();
    v7 = v2[8];
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v8; ++i)
      {
        v10 = *(_QWORD *)(v7 + 8 * i + 32);
        sub_1BA7196DC(v10);
        FormatAdjustment.bind(binder:context:)();
        sub_1BA719340(v10);
      }
      swift_bridgeObjectRelease_n();
    }
    v11 = v2[9];
    if (v11 < 0)
    {
      v12 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BABC2AF8(a1, a2, v12, v13);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    result = swift_beginAccess();
    v14 = v2[20];
    if (v14 >> 62 == 1)
    {
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v14 + 24);
      sub_1BA67D3F4(v14);
      sub_1BA67D3F4(v15);
      swift_bridgeObjectRetain();
      sub_1BABC2BF8(a1, a2, v15, v16);
      sub_1BA6EEDB4(v15);
      swift_bridgeObjectRelease();
      return sub_1BA6EEDB4(v14);
    }
  }
  return result;
}

uint64_t FormatSponsoredBannerNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v4 = v2;
  v15 = v2[4];
  sub_1BA71CA6C(v15);
  FormatSize.bind(binder:context:)();
  result = sub_1BA719718(v15);
  if (!v3)
  {
    swift_beginAccess();
    v8 = v2[6];
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v9; ++i)
      {
        v11 = *(_QWORD *)(v8 + 8 * i + 32);
        sub_1BA7196DC(v11);
        FormatAdjustment.bind(binder:context:)();
        sub_1BA719340(v11);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v12 = v2[7];
    if (v12 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      sub_1BA67D3F4(v4[7]);
      sub_1BA67D3F4(v13);
      swift_bridgeObjectRetain();
      sub_1BABC2BF8(a1, a2, v13, v14);
      sub_1BA6EEDB4(v13);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v12);
    }
    result = swift_beginAccess();
    if (v4[12])
    {
      swift_retain();
      FormatSponsoredBannerNodeStyle.bind(binder:context:)(a1, a2);
      return swift_release();
    }
  }
  return result;
}

void FormatNodeStyle.bind(binder:context:)()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

uint64_t sub_1BABD8374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v12 - 152) = v5;
  *(_QWORD *)(v12 - 72) = a5;
  swift_retain();
  FormatVideoNodeStyle.bind(binder:context:)(v9, v8);
  return sub_1BA76B698(v6, v11, a3, a4, *(_QWORD *)(v12 - 72), v10, v7);
}

uint64_t FormatSupplementaryNodeStyle.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = swift_beginAccess();
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    v5 = v3 + 67;
    while (1)
    {
      v6 = *(_QWORD *)(v5 - 11);
      v7 = *(unsigned __int16 *)(v5 - 3) | (*(unsigned __int8 *)(v5 - 1) << 16);
      swift_bridgeObjectRetain();
      sub_1BA771834(v6, v7);
      FormatSupplementaryNodeStyle.Selector.bind(binder:context:)();
      if (v1)
        break;
      swift_bridgeObjectRelease();
      sub_1BA771864(v6, v7);
      v5 += 40;
      if (!--v4)
      {
        result = swift_bridgeObjectRelease_n();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    sub_1BA771864(v6, v7);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    if (*(unsigned __int8 *)(v0 + 74) != 255)
    {
      v8 = *(unsigned __int16 *)(v0 + 72) | (*(unsigned __int8 *)(v0 + 74) << 16);
      v9 = *(_QWORD *)(v0 + 64);
      sub_1BA77A170(v9, v8, SBYTE2(v8), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      FormatSupplementaryNodePinTrait.bind(binder:context:)();
      return sub_1BA771864(v9, v8);
    }
  }
  return result;
}

uint64_t FormatVideoNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABD8D40(a1, a2);
}

uint64_t FormatVideoPlayerNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABD8D40(a1, a2);
}

uint64_t sub_1BABD8D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v2;
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1BABA23B4(a1, a2, v7);
  if (v3)
    return swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v4 + 56);
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      v11 = (_BYTE *)(v9 + 40);
      do
      {
        if ((*v11 & 1) == 0)
        {
          v12 = *((_QWORD *)v11 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v12, 0);
          sub_1BA72C46C(v12, 0);
        }
        v11 += 16;
        --v10;
      }
      while (v10);
      result = swift_bridgeObjectRelease_n();
    }
  }
  v13 = *(_QWORD *)(v4 + 64);
  if ((~v13 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatBackground.bind(binder:context:)();
    result = sub_1BA6E6CD8(v13);
  }
  v14 = *(_QWORD *)(v4 + 72);
  if (v14)
    result = sub_1BAB73D7C(a1, a2, v14);
  v15 = *(unsigned __int8 *)(v4 + 184);
  if (v15 != 254)
  {
    v22 = *(_QWORD *)(v4 + 104);
    v23 = *(_QWORD *)(v4 + 112);
    v17 = *(_QWORD *)(v4 + 136);
    v24 = *(_QWORD *)(v4 + 120);
    v25 = *(_QWORD *)(v4 + 128);
    v28 = *(_QWORD *)(v4 + 152);
    v18 = *(_QWORD *)(v4 + 168);
    v26 = *(_QWORD *)(v4 + 144);
    v27 = *(_QWORD *)(v4 + 160);
    v19 = *(_QWORD *)(v4 + 176);
    swift_retain();
    FormatColor.bind(binder:context:)();
    switch(v15)
    {
      case 1:
        v20 = v26;
        sub_1BABD5EE8(a1, a2);
        v21 = 1;
        goto LABEL_25;
      case 2:
        v20 = v26;
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        v21 = 2;
        goto LABEL_25;
      case 3:
        v20 = v26;
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        v21 = 3;
        goto LABEL_25;
      case 4:
        v20 = v26;
        sub_1BABD5EE8(a1, a2);
        v21 = 4;
        goto LABEL_25;
      case 5:
        v20 = v26;
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        v21 = 5;
LABEL_25:
        result = sub_1BA6E8A78(v22, v23, v24, v25, v17, v20, v28, v27, v18, v19, v21);
        break;
      default:
        result = sub_1BA6E8A78(v22, v23, v24, v25, v17, v26, v28, v27, v18, v19, v15);
        break;
    }
  }
  v16 = *(_QWORD *)(v4 + 192);
  if ((~v16 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatColor.bind(binder:context:)();
    return sub_1BA5E800C(v16);
  }
  return result;
}

uint64_t FormatProgressViewNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v2;
  swift_beginAccess();
  v7 = v2[6];
  swift_bridgeObjectRetain();
  sub_1BABA0DFC(a1, a2, v7);
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    v9 = v4[7];
    if (v9)
    {
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        swift_bridgeObjectRetain_n();
        v11 = (_BYTE *)(v9 + 40);
        do
        {
          if ((*v11 & 1) == 0)
          {
            v12 = *((_QWORD *)v11 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            sub_1BA72C46C(v12, 0);
            sub_1BA72C46C(v12, 0);
          }
          v11 += 16;
          --v10;
        }
        while (v10);
        result = swift_bridgeObjectRelease_n();
      }
    }
    v13 = v4[8];
    if ((~v13 & 0xF000000000000007) != 0)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      result = sub_1BA5E800C(v13);
    }
    v14 = v4[9];
    if ((~v14 & 0xF000000000000007) != 0)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      return sub_1BA5E800C(v14);
    }
  }
  return result;
}

uint64_t FormatSponsoredBannerNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v4 = v2;
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1BABA0C6C(a1, a2, v7);
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    v9 = *(_QWORD *)(v4 + 56);
    if ((~v9 & 0xF000000000000007) != 0)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      result = sub_1BA5E800C(v9);
    }
    v10 = *(_QWORD *)(v4 + 64);
    if ((~v10 & 0xF000000000000007) != 0)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      return sub_1BA5E800C(v10);
    }
  }
  return result;
}

void sub_1BABD9450()
{
  FormatNodeStyle.bind(binder:context:)();
}

uint64_t sub_1BABD9464()
{
  swift_retain();
  FormatExpression.bind(binder:context:)();
  return swift_release();
}

void FormatNumber.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;

  v4 = *(_QWORD *)v2;
  if (*(_BYTE *)(v2 + 8))
  {
    if (*(_BYTE *)(v2 + 8) == 1)
      sub_1BA75A6B4(a2, *(_QWORD *)v2);
  }
  else
  {
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = (_BYTE *)(v4 + 40);
      do
      {
        if ((*v6 & 1) == 0)
        {
          v7 = *((_QWORD *)v6 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v7, 0);
          sub_1BA72C46C(v7, 0);
          if (v3)
            break;
        }
        v6 += 16;
        --v5;
      }
      while (v5);
      sub_1BA93DB08(v4, 0);
    }
  }
}

void sub_1BABD95BC(uint64_t a1, uint64_t a2)
{
  FormatNumber.bind(binder:context:)(a1, a2);
}

uint64_t FormatOption.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  swift_retain();
  FormatOptionValue.bind(binder:context:)(a1, a2);
  return swift_release();
}

uint64_t sub_1BABD9634(uint64_t a1, uint64_t a2)
{
  swift_retain();
  FormatOptionValue.bind(binder:context:)(a1, a2);
  return swift_release();
}

uint64_t FormatOptionCompareValue.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(v2 + 16) & 1) == 0)
  {
    v4 = result;
    v6 = *(_QWORD *)v2;
    v5 = *(_QWORD *)(v2 + 8);
    swift_retain();
    FormatOptionValue.bind(binder:context:)(v4, a2);
    return sub_1BA636D1C(v6, v5, 0);
  }
  return result;
}

uint64_t sub_1BABD9710(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(v2 + 16) & 1) == 0)
  {
    v4 = result;
    v6 = *(_QWORD *)v2;
    v5 = *(_QWORD *)(v2 + 8);
    swift_retain();
    FormatOptionValue.bind(binder:context:)(v4, a2);
    return sub_1BA636D1C(v6, v5, 0);
  }
  return result;
}

uint64_t FormatOptionEnum.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(_QWORD *)(v2 + 32);
  swift_bridgeObjectRetain();
  sub_1BA75607C(a1, a2, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BABD97DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BABDE480(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA75607C);
}

uint64_t FormatOptionExpression.Compare.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(v2 + 32) & 1) == 0)
  {
    v4 = result;
    v6 = *(_QWORD *)(v2 + 16);
    v5 = *(_QWORD *)(v2 + 24);
    swift_retain();
    FormatOptionValue.bind(binder:context:)(v4, a2);
    return sub_1BA636D1C(v6, v5, 0);
  }
  return result;
}

uint64_t sub_1BABD9870(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(unsigned __int16 *)(v2 + 32);
  if ((v3 & 0xFFFF8001) == 0)
  {
    v5 = result;
    v6 = *(_QWORD *)(v2 + 24);
    v8 = *(_QWORD *)v2;
    v7 = *(_QWORD *)(v2 + 8);
    v9 = *(_QWORD *)(v2 + 16);
    sub_1BA711500(*(_QWORD *)v2, v7, v9, v6, v3);
    sub_1BA7114EC(v9, v6, 0);
    FormatOptionValue.bind(binder:context:)(v5, a2);
    sub_1BA636D1C(v9, v6, 0);
    return sub_1BA636D30(v8, v7, v9, v6, v3);
  }
  return result;
}

uint64_t sub_1BABD9938(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(v2 + 32) & 1) == 0)
  {
    v4 = result;
    v6 = *(_QWORD *)(v2 + 16);
    v5 = *(_QWORD *)(v2 + 24);
    swift_retain();
    FormatOptionValue.bind(binder:context:)(v4, a2);
    return sub_1BA636D1C(v6, v5, 0);
  }
  return result;
}

void FormatVideoNodeContent.bind(binder:context:)()
{
  uint64_t v1;
  uint64_t v2;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1BABD9A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = swift_projectBox();
  sub_1BA4C2DD8(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
  sub_1BAC661E0(v0);
  return sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
}

void FormatVideoPlayerContent.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[3];
  char v18;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17[-1] - v7;
  v9 = *v2;
  if ((*v2 & 0x8000000000000000) == 0)
  {
    v10 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v9 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BABB326C(a1, a2, v10, v11);
    swift_release();
LABEL_3:
    swift_bridgeObjectRelease();
    return;
  }
  if (*(unsigned __int8 *)(v9 + 40) >= 2u)
  {
    v12 = *(_QWORD *)(v9 + 16);
    v14 = *(_QWORD *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    v13 = *(_QWORD *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    v17[0] = v12;
    v17[1] = v14;
    v17[2] = v13;
    v18 = 6;
    sub_1BA896AAC(v12, v14, v13, 2);
    v15 = sub_1BB6B84D4(v17, &v18);
    if (!v3)
    {
      sub_1BB3757A0(v12, v14, v15, 1, (uint64_t)v8);
      sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      goto LABEL_3;
    }
  }
}

void sub_1BABD9E28(uint64_t a1, uint64_t a2)
{
  FormatOptionValue.bind(binder:context:)(a1, a2);
}

uint64_t FormatOptionsNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  _QWORD v19[2];
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a2;
  v5 = type metadata accessor for FormatOptionsNodeStatement();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = *(_QWORD *)(v2 + 32);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v19[0] = v2;
    v19[1] = v9;
    v11 = v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v12 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BA4C2DD8(v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      FormatOptionsNodeStatementValue.bind(binder:context:)(a1, v23);
      if (v3)
        break;
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      v11 += v12;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        v2 = v19[0];
        goto LABEL_6;
      }
    }
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    result = swift_beginAccess();
    v14 = *(_QWORD *)(v2 + 40);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      v16 = (_QWORD *)(v14 + 64);
      while (1)
      {
        v17 = *v16;
        v18 = *((_OWORD *)v16 - 1);
        v20 = *((_OWORD *)v16 - 2);
        v21 = v18;
        v22 = v17;
        swift_bridgeObjectRetain();
        swift_retain();
        FormatSourceMapNode.bind(binder:context:)(a1, v23);
        if (v3)
          break;
        v16 += 5;
        swift_bridgeObjectRelease();
        swift_release();
        if (!--v15)
          return swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return result;
}

void FormatOptionsNodeStatement.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FormatOptionsNodeStatement();
  FormatOptionsNodeStatementValue.bind(binder:context:)(a1, a2);
}

void sub_1BABDA08C(uint64_t a1, uint64_t a2)
{
  FormatOptionsNodeStatementValue.bind(binder:context:)(a1, a2);
}

void sub_1BABDA0B0()
{
  FormatOptionsNodeStatementBinding.bind(binder:context:)();
}

void sub_1BABDA0C4(uint64_t a1, uint64_t a2)
{
  FormatOptionsNodeStatementValue.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABDA0D8(uint64_t a1, uint64_t a2)
{
  return FormatOrExpression.bind(binder:context:)(a1, a2);
}

uint64_t FormatOsloSheetPurchaseDataModel.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - v2;
  v4 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  sub_1BA57B488(v0 + *(int *)(v4 + 20), (uint64_t)v3, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  v5 = type metadata accessor for FormatPostPurchase();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
    return sub_1BA502AD0((uint64_t)v3, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  sub_1BAC6543C();
  return sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
}

uint64_t FormatPostPurchase.bind(binder:context:)()
{
  return sub_1BAC6543C();
}

uint64_t sub_1BABDA20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - v6;
  sub_1BA57B488(v3 + *(int *)(a3 + 20), (uint64_t)v10 - v6, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  v8 = type metadata accessor for FormatPostPurchase();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) == 1)
    return sub_1BA502AD0((uint64_t)v7, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  sub_1BAC6543C();
  return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
}

unint64_t FormatPercentFillSizing.bind(binder:context:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = *v0;
  v2 = v0[1];
  v4 = *(_QWORD *)(*v0 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    v5 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
        if (v1)
          return swift_bridgeObjectRelease_n();
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    result = swift_bridgeObjectRelease_n();
  }
  if (v2 >= 2)
  {
    v8 = *(_QWORD *)(v2 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      v9 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v9 & 1) == 0)
        {
          v10 = *((_QWORD *)v9 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v10, 0);
          sub_1BA72C46C(v10, 0);
          if (v1)
            break;
        }
        v9 += 16;
        --v8;
      }
      while (v8);
      sub_1BA5B18CC(v2);
      return sub_1BA5B18CC(v2);
    }
  }
  return result;
}

uint64_t FormatPercentFillSpacing.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABDE96C(a1, a2, (uint64_t (*)(uint64_t))sub_1BA5B18CC);
}

unint64_t sub_1BABDA4A4()
{
  return FormatPercentFillSizing.bind(binder:context:)();
}

uint64_t sub_1BABDA4B8(uint64_t a1, uint64_t a2)
{
  return sub_1BABDEA54(a1, a2);
}

uint64_t sub_1BABDA4CC()
{
  return FormatSizeEquation.bind(binder:context:)();
}

uint64_t sub_1BABDA4E0()
{
  return sub_1BAC6543C();
}

uint64_t sub_1BABDA4F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if ((~*v0 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatColor.bind(binder:context:)();
    return sub_1BA5E800C(v1);
  }
  return result;
}

uint64_t sub_1BABDA56C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  if (*(_BYTE *)(v2 + 65) == 2)
  {
    v8 = 0u;
    v9 = 0u;
    v10 = 0;
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = *((_QWORD *)&v9 + 1);
      if (*((_QWORD *)&v9 + 1))
      {
        v6 = v10;
        __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
      }
    }
    else
    {
      v10 = 0;
      v8 = 0u;
      v9 = 0u;
    }
  }
  return sub_1BA65DB80((uint64_t)&v8, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
}

uint64_t sub_1BABDA678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  if ((*(_BYTE *)(v2 + 80) & 1) != 0)
  {
    v8 = 0u;
    v9 = 0u;
    v10 = 0;
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = *((_QWORD *)&v9 + 1);
      if (*((_QWORD *)&v9 + 1))
      {
        v6 = v10;
        __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
      }
    }
    else
    {
      v10 = 0;
      v8 = 0u;
      v9 = 0u;
    }
  }
  return sub_1BA65DB80((uint64_t)&v8, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
}

uint64_t sub_1BABDA788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  if (*(_QWORD *)(v2 + 80))
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    swift_bridgeObjectRetain();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = *((_QWORD *)&v9 + 1);
      if (*((_QWORD *)&v9 + 1))
      {
        v6 = v10;
        __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
      }
    }
    else
    {
      v10 = 0;
      v8 = 0u;
      v9 = 0u;
    }
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
    v10 = 0;
  }
  return sub_1BA65DB80((uint64_t)&v8, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
}

uint64_t sub_1BABDA89C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(_QWORD, double))
{
  uint64_t v5;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  sub_1BA4A3FB4(0, a3, a4);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - v13;
  v15 = a5(0, v12);
  sub_1BA57B488(v5 + *(int *)(v15 + 52), (uint64_t)v14, a3, a4);
  v16 = ((uint64_t (*)(_QWORD))a4)(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16) == 1)
  {
    sub_1BA502AD0((uint64_t)v14, a3, a4);
LABEL_6:
    v22 = 0;
    v20 = 0u;
    v21 = 0u;
    return sub_1BA65DB80((uint64_t)&v20, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  v17 = *((_QWORD *)&v21 + 1);
  if (*((_QWORD *)&v21 + 1))
  {
    v18 = v22;
    __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8))(a1, a2, v17, v18);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  }
  return sub_1BA65DB80((uint64_t)&v20, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
}

uint64_t FormatPrimitivePropertyDefinition.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v7 = *(_QWORD *)(a3 + 16);
  v8 = sub_1BB873A2C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v16 - v11, v3 + *(int *)(a3 + 52), v8, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v12, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
LABEL_6:
    v18 = 0;
    v16 = 0u;
    v17 = 0u;
    return sub_1BA65DB80((uint64_t)&v16, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (!swift_dynamicCast())
    goto LABEL_6;
  v13 = *((_QWORD *)&v17 + 1);
  if (*((_QWORD *)&v17 + 1))
  {
    v14 = v18;
    __swift_project_boxed_opaque_existential_1(&v16, *((uint64_t *)&v17 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, a2, v13, v14);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  }
  return sub_1BA65DB80((uint64_t)&v16, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
}

uint64_t sub_1BABDABB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatPrimitivePropertyDefinition.bind(binder:context:)(a1, a2, a3);
}

void sub_1BABDABCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;

  v6 = *(_QWORD *)(v2 + 8);
  swift_retain();
  FormatColor.bind(binder:context:)();
  swift_release();
  if (!v3)
    sub_1BAB72CBC(a1, a2, v6);
}

uint64_t FormatProgressCircleOptions.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - v3;
  v6 = *v0;
  v5 = v0[1];
  v7 = v0[2];
  v8 = *((unsigned __int8 *)v0 + 24);
  v9 = v0[5];
  v10 = v0[6];
  v32 = v0[4];
  v33 = v9;
  v11 = *(_QWORD *)(v6 + 16);
  if (v11)
  {
    HIDWORD(v28) = v8;
    v29 = v5;
    v30 = v7;
    v31 = v10;
    swift_bridgeObjectRetain_n();
    v12 = (_BYTE *)(v6 + 40);
    do
    {
      if ((*v12 & 1) == 0)
      {
        v34 = *((_QWORD *)v12 - 1);
        v13 = v34;
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v1)
        {
          sub_1BA72C46C(v13, 0);
          sub_1BA72C46C(v13, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v13, 0);
        sub_1BA72C46C(v13, 0);
      }
      v12 += 16;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n();
    v7 = v30;
    v10 = v31;
    v5 = v29;
    v8 = HIDWORD(v28);
  }
  v14 = v33;
  if (!v8)
  {
    result = sub_1BA69C828(v5, v7, 0);
    v18 = v32;
    v19 = *(_QWORD *)(v32 + 16);
    if (!v19)
      goto LABEL_22;
LABEL_13:
    swift_bridgeObjectRetain_n();
    v20 = (_BYTE *)(v18 + 40);
    do
    {
      if ((*v20 & 1) == 0)
      {
        v34 = *((_QWORD *)v20 - 1);
        v21 = v34;
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v1)
        {
          sub_1BA72C46C(v21, 0);
          sub_1BA72C46C(v21, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v21, 0);
        sub_1BA72C46C(v21, 0);
      }
      v20 += 16;
      --v19;
    }
    while (v19);
    result = swift_bridgeObjectRelease_n();
    v22 = *(_QWORD *)(v14 + 16);
    if (v22)
      goto LABEL_23;
    goto LABEL_19;
  }
  v15 = v5;
  sub_1BA69C808(v5, v7, 1);
  v16 = sub_1BA862600((uint64_t)&unk_1E7254AF8);
  sub_1BB3757A0(v15, v7, v16, 1, (uint64_t)v4);
  if (v1)
  {
    swift_bridgeObjectRelease();
    return sub_1BA69C828(v15, v7, 1);
  }
  sub_1BA502AD0((uint64_t)v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  swift_bridgeObjectRelease();
  result = sub_1BA69C828(v15, v7, 1);
  v18 = v32;
  v14 = v33;
  v19 = *(_QWORD *)(v32 + 16);
  if (v19)
    goto LABEL_13;
LABEL_22:
  v22 = *(_QWORD *)(v14 + 16);
  if (v22)
  {
LABEL_23:
    swift_bridgeObjectRetain_n();
    v24 = (_BYTE *)(v14 + 40);
    while (1)
    {
      if ((*v24 & 1) == 0)
      {
        v34 = *((_QWORD *)v24 - 1);
        v25 = v34;
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v25, 0);
        sub_1BA72C46C(v25, 0);
        if (v1)
          return swift_bridgeObjectRelease_n();
      }
      v24 += 16;
      if (!--v22)
      {
        result = swift_bridgeObjectRelease_n();
        v23 = *(_QWORD *)(v10 + 16);
        if (!v23)
          return result;
        goto LABEL_29;
      }
    }
  }
LABEL_19:
  v23 = *(_QWORD *)(v10 + 16);
  if (v23)
  {
LABEL_29:
    swift_bridgeObjectRetain_n();
    v26 = (_BYTE *)(v10 + 40);
    do
    {
      if ((*v26 & 1) == 0)
      {
        v34 = *((_QWORD *)v26 - 1);
        v27 = v34;
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v27, 0);
        sub_1BA72C46C(v27, 0);
        if (v1)
          break;
      }
      v26 += 16;
      --v23;
    }
    while (v23);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1BABDB024()
{
  return FormatProgressCircleOptions.bind(binder:context:)();
}

uint64_t FormatProgressKind.bind(binder:context:)()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0 + 56);
  if (!(v1 >> 6))
    return FormatProgressPieOptions.bind(binder:context:)();
  if (v1 >> 6 == 1)
    return FormatProgressCircleOptions.bind(binder:context:)();
  return result;
}

uint64_t FormatProgressPieOptions.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - v3;
  v6 = *v0;
  v5 = v0[1];
  v7 = v0[2];
  v8 = *((unsigned __int8 *)v0 + 24);
  v9 = v0[5];
  v10 = v0[6];
  v32 = v0[4];
  v33 = v9;
  v11 = *(_QWORD *)(v6 + 16);
  if (v11)
  {
    HIDWORD(v28) = v8;
    v29 = v5;
    v30 = v7;
    v31 = v10;
    swift_bridgeObjectRetain_n();
    v12 = (_BYTE *)(v6 + 40);
    do
    {
      if ((*v12 & 1) == 0)
      {
        v34 = *((_QWORD *)v12 - 1);
        v13 = v34;
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        if (v1)
        {
          sub_1BA72C46C(v13, 0);
          sub_1BA72C46C(v13, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v13, 0);
        sub_1BA72C46C(v13, 0);
      }
      v12 += 16;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n();
    v7 = v30;
    v10 = v31;
    v5 = v29;
    v8 = HIDWORD(v28);
  }
  v14 = v33;
  if (!v8)
  {
    sub_1BA69C828(v5, v7, 0);
    result = v32;
    if (!v32)
      goto LABEL_22;
    goto LABEL_15;
  }
  v15 = v5;
  sub_1BA69C808(v5, v7, 1);
  v16 = sub_1BA862600((uint64_t)&unk_1E7254AD0);
  sub_1BB3757A0(v15, v7, v16, 1, (uint64_t)v4);
  if (v1)
  {
    swift_bridgeObjectRelease();
    return sub_1BA69C828(v15, v7, 1);
  }
  sub_1BA502AD0((uint64_t)v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  swift_bridgeObjectRelease();
  sub_1BA69C828(v15, v7, 1);
  v14 = v33;
  result = v32;
  if (v32)
  {
LABEL_15:
    v18 = *(_QWORD *)(result + 16);
    if (v18)
    {
      v19 = result;
      swift_bridgeObjectRetain_n();
      v20 = (_BYTE *)(v19 + 40);
      while (1)
      {
        if ((*v20 & 1) == 0)
        {
          v34 = *((_QWORD *)v20 - 1);
          v21 = v34;
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v1)
          {
            sub_1BA72C46C(v21, 0);
            sub_1BA72C46C(v21, 0);
            return swift_bridgeObjectRelease_n();
          }
          sub_1BA72C46C(v21, 0);
          sub_1BA72C46C(v21, 0);
        }
        v20 += 16;
        if (!--v18)
        {
          result = swift_bridgeObjectRelease_n();
          break;
        }
      }
    }
  }
LABEL_22:
  v22 = *(_QWORD *)(v14 + 16);
  if (v22)
  {
    swift_bridgeObjectRetain_n();
    v23 = (_BYTE *)(v14 + 40);
    while (1)
    {
      if ((*v23 & 1) == 0)
      {
        v34 = *((_QWORD *)v23 - 1);
        v24 = v34;
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v24, 0);
        sub_1BA72C46C(v24, 0);
        if (v1)
          break;
      }
      v23 += 16;
      if (!--v22)
      {
        result = swift_bridgeObjectRelease_n();
        goto LABEL_29;
      }
    }
  }
  else
  {
LABEL_29:
    v25 = *(_QWORD *)(v10 + 16);
    if (!v25)
      return result;
    swift_bridgeObjectRetain_n();
    v26 = (_BYTE *)(v10 + 40);
    do
    {
      if ((*v26 & 1) == 0)
      {
        v34 = *((_QWORD *)v26 - 1);
        v27 = v34;
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v27, 0);
        sub_1BA72C46C(v27, 0);
        if (v1)
          break;
      }
      v26 += 16;
      --v25;
    }
    while (v25);
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BABDB494()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0 + 56);
  if (!(v1 >> 6))
    return FormatProgressPieOptions.bind(binder:context:)();
  if (v1 >> 6 == 1)
    return FormatProgressCircleOptions.bind(binder:context:)();
  return result;
}

uint64_t sub_1BABDB524()
{
  return FormatProgressPieOptions.bind(binder:context:)();
}

uint64_t FormatProgressViewNodeContent.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  result = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v17 = *(_QWORD *)(v0 + 32);
  v5 = *(__int16 *)(v0 + 40);
  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
  {
    v16 = *(_QWORD *)(v0 + 16);
    v6 = *(_QWORD *)v0;
    v7 = *(_QWORD *)(*(_QWORD *)v0 + 16);
    if (v7)
    {
      v14 = *(_QWORD *)(v0 + 24);
      v18 = *(__int16 *)(v0 + 40);
      sub_1BAC68B58(v6, 0);
      swift_bridgeObjectRetain();
      v8 = (_BYTE *)(v6 + 40);
      do
      {
        if ((*v8 & 1) == 0)
        {
          v9 = *((_QWORD *)v8 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v1)
          {
            sub_1BA72C46C(v9, 0);
            sub_1BA72C46C(v9, 0);
            sub_1BAC68B64(v6, 0);
            return sub_1BAC68B64(v6, 0);
          }
          sub_1BA72C46C(v9, 0);
          sub_1BA72C46C(v9, 0);
        }
        v8 += 16;
        --v7;
      }
      while (v7);
      sub_1BAC68B64(v6, 0);
      sub_1BAC68B64(v6, 0);
      v5 = v18;
      v4 = v14;
    }
    result = v16;
  }
  if (v5 < 0)
    __asm { BR              X11 }
  v10 = *(_QWORD *)(result + 16);
  if (v10)
  {
    v11 = result;
    v15 = v4;
    sub_1BA7AAE84(result, v4, v17, v5);
    swift_bridgeObjectRetain();
    v12 = (_BYTE *)(v11 + 40);
    do
    {
      if ((*v12 & 1) == 0)
      {
        v13 = *((_QWORD *)v12 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v13, 0);
        sub_1BA72C46C(v13, 0);
        if (v1)
          break;
      }
      v12 += 16;
      --v10;
    }
    while (v10);
    sub_1BA7E0800(v11, v15, v17, v5);
    return sub_1BA7E0800(v11, v15, v17, v5);
  }
  return result;
}

void sub_1BABDB874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  if ((v3 & 1) != 0)
  {
    *(_QWORD *)(v5 - 112) = a1;
    *(_QWORD *)(v5 - 104) = a2;
    v6 = *(_QWORD *)(v5 - 120);
    *(_QWORD *)(v5 - 96) = v6;
    *(_BYTE *)(v5 - 65) = 5;
    sub_1BA7AAE84(a1, a2, v6, v3);
    sub_1BA7AAE84(a1, a2, v6, v3);
    v9 = sub_1BB6B84D4((uint64_t *)(v5 - 112), (char *)(v5 - 65));
    if (!v2)
    {
      sub_1BB3757A0(a1, a2, v9, 1, v4);
      sub_1BA502AD0(v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      JUMPOUT(0x1BABDB77CLL);
    }
    JUMPOUT(0x1BABDB848);
  }
  JUMPOUT(0x1BABDB850);
}

uint64_t sub_1BABDB99C(uint64_t a1, uint64_t a2)
{
  return FormatProgressViewNode.bind(binder:context:)(a1, a2);
}

uint64_t FormatProgressViewNodeDuration.bind(binder:context:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;

  if ((v0[8] & 1) == 0)
  {
    v2 = *(_QWORD *)v0;
    v3 = *(_QWORD *)(*(_QWORD *)v0 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain();
      v4 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v4 & 1) == 0)
        {
          v5 = *((_QWORD *)v4 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v5, 0);
          sub_1BA72C46C(v5, 0);
          if (v1)
            break;
        }
        v4 += 16;
        --v3;
      }
      while (v3);
      return sub_1BAC68B64(v2, 0);
    }
  }
  return result;
}

void FormatProgressViewNodeProgress.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(__int16 *)(v0 + 24);
  if ((v5 & 0x80000000) != 0)
  {
    sub_1BAC65170(v3, v2, v4, v5, BYTE1(v5) & 1, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    FormatCommandBinding.bind(binder:context:)();
    v9 = v3;
    v10 = v2;
    v11 = v4;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 8);
    v6 = *(_QWORD *)(v3 + 16);
    if (!v6)
      return;
    v12 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    v7 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v7 & 1) == 0)
      {
        v8 = *((_QWORD *)v7 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v8, 0);
        sub_1BA72C46C(v8, 0);
        if (v1)
          break;
      }
      v7 += 16;
      --v6;
    }
    while (v6);
    v9 = v3;
    v10 = v13;
    v11 = v12;
  }
  sub_1BA7E0800(v9, v10, v11, v5);
}

uint64_t sub_1BABDBBE0()
{
  return FormatProgressViewNodeContent.bind(binder:context:)();
}

uint64_t sub_1BABDBBF4(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if ((*(_BYTE *)(v2 + 8) & 1) == 0)
    return sub_1BABB07FC(result, a2, *(_QWORD *)v2);
  return result;
}

void sub_1BABDBC14()
{
  FormatProgressViewNodeProgress.bind(binder:context:)();
}

uint64_t sub_1BABDBC28(uint64_t a1, uint64_t a2)
{
  return FormatProgressViewNodeStyle.bind(binder:context:)(a1, a2);
}

uint64_t FormatProgressViewNodeStyle.Selector.bind(binder:context:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v3 = v0[2];
  v2 = v0[3];
  v4 = v0[4];
  if (v3)
  {
    v9 = v0[4];
    v5 = *(_QWORD *)(v3 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      v6 = (_BYTE *)(v3 + 40);
      do
      {
        if ((*v6 & 1) == 0)
        {
          v7 = *((_QWORD *)v6 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v7, 0);
          sub_1BA72C46C(v7, 0);
          if (v1)
            return swift_bridgeObjectRelease_n();
        }
        v6 += 16;
        --v5;
      }
      while (v5);
      result = swift_bridgeObjectRelease_n();
    }
    v4 = v9;
  }
  if ((~v2 & 0xF000000000000007) == 0
    || (swift_retain(), FormatColor.bind(binder:context:)(), result = sub_1BA5E800C(v2), !v1))
  {
    if ((~v4 & 0xF000000000000007) != 0)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      return sub_1BA5E800C(v4);
    }
  }
  return result;
}

uint64_t sub_1BABDBDB0()
{
  return FormatProgressViewNodeStyle.Selector.bind(binder:context:)();
}

void FormatPropertyDefinition.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  char *v20;
  _QWORD v21[8];

  v21[4] = a1;
  v21[5] = a2;
  sub_1BA74E17C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent);
  MEMORY[0x1E0C80A78](v2);
  v21[3] = (char *)v21 - v3;
  sub_1BA74E17C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont);
  MEMORY[0x1E0C80A78](v4);
  v21[2] = (char *)v21 - v5;
  sub_1BA74E17C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent);
  MEMORY[0x1E0C80A78](v6);
  v21[1] = (char *)v21 - v7;
  sub_1BA74E17C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent);
  MEMORY[0x1E0C80A78](v8);
  v21[0] = (char *)v21 - v9;
  sub_1BA74E21C(0);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA74E1D4(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String);
  MEMORY[0x1E0C80A78](v11);
  sub_1BA74E1D4(0, &qword_1ED3CE140, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int);
  MEMORY[0x1E0C80A78](v12);
  sub_1BA74E17C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040]);
  MEMORY[0x1E0C80A78](v13);
  sub_1BA74E2EC(0);
  MEMORY[0x1E0C80A78](v14);
  sub_1BA74E17C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor);
  MEMORY[0x1E0C80A78](v15);
  sub_1BA74E1D4(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool);
  MEMORY[0x1E0C80A78](v16);
  v17 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v17);
  sub_1BA4C2DD8(v21[7], (uint64_t)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v19);
  v20 = (char *)sub_1BABDC160 + 4 * byte_1BB8A5D36[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BABDC160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = MEMORY[0x1E0DEAFA0];
  sub_1BA760F3C(v1, v0, (uint64_t)&qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA74E1D4);
  sub_1BABDA56C(*(_QWORD *)(v2 - 112), *(_QWORD *)(v2 - 104));
  return sub_1BA604728(v0, (uint64_t)&qword_1ED3CE138, v3, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD))sub_1BA74E1D4);
}

void sub_1BABDC6A0(uint64_t a1, uint64_t a2)
{
  FormatPropertyDefinition.bind(binder:context:)(a1, a2);
}

unint64_t FormatPublisherLogoSize.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t result;

  v2 = *(_QWORD *)(v0 + 8);
  if (v2 >= 3)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      sub_1BA738D44(*(_QWORD *)(v0 + 8));
      swift_bridgeObjectRetain();
      v4 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v4 & 1) == 0)
        {
          v5 = *((_QWORD *)v4 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v5, 0);
          sub_1BA72C46C(v5, 0);
          if (v1)
            break;
        }
        v4 += 16;
        --v3;
      }
      while (v3);
      sub_1BA738D54(v2);
      return sub_1BA738D54(v2);
    }
  }
  return result;
}

unint64_t FormatPublisherLogoSizing.bind(binder:context:)()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t result;

  v2 = *v0;
  if (*v0 >= 3)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain();
      v4 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v4 & 1) == 0)
        {
          v5 = *((_QWORD *)v4 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v5, 0);
          sub_1BA72C46C(v5, 0);
          if (v1)
            break;
        }
        v4 += 16;
        --v3;
      }
      while (v3);
      return sub_1BA738D54(v2);
    }
  }
  return result;
}

unint64_t sub_1BABDC864()
{
  return FormatPublisherLogoSize.bind(binder:context:)();
}

uint64_t sub_1BABDC878(uint64_t result, uint64_t a2)
{
  uint64_t *v2;

  if ((unint64_t)*v2 >= 3)
    return sub_1BABB07FC(result, a2, *v2);
  return result;
}

uint64_t FormatPurchaseLandingPage.bind(binder:context:)()
{
  return sub_1BAC6569C();
}

void sub_1BABDC8B0(uint64_t a1, uint64_t a2)
{
  sub_1BAC658D8(a2);
}

uint64_t sub_1BABDC8C8()
{
  return sub_1BAC6569C();
}

uint64_t FormatPuzzleEmbedNodeContent.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABD2740(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2AF8);
}

unint64_t sub_1BABDC8FC(uint64_t a1, uint64_t a2)
{
  return FormatPuzzleEmbedNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABDC91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BABD3050(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BABC2AF8);
}

uint64_t sub_1BABDC938(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BAB75550(a1, a2, *(_QWORD *)(v2 + 112));
}

uint64_t sub_1BABDC950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatRange.bind(binder:context:)(a1, a2, a3);
}

uint64_t sub_1BABDC964()
{
  return FormatRatio.bind(binder:context:)();
}

uint64_t sub_1BABDC978()
{
  return sub_1BAC65CFC();
}

uint64_t sub_1BABDC990()
{
  return sub_1BA54A3B0();
}

uint64_t FormatRemoteVideo.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BAC661E0(a2);
}

uint64_t sub_1BABDC9C0(uint64_t a1, uint64_t a2)
{
  return sub_1BAC661E0(a2);
}

void FormatRepeatNodeIteration.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_BYTE *)(v2 + 8) == 1)
    sub_1BA75A6B4(a2, *(_QWORD *)v2);
}

void sub_1BABDCA04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_BYTE *)(v2 + 8) == 1)
    sub_1BA75A6B4(a2, *(_QWORD *)v2);
}

uint64_t FormatResetNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 48);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain_n();
    v9 = v7 + 64;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(a1, a2);
      if (v3)
        break;
      v9 += 40;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v8)
        return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BABDCB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatSelectorValue.bind(binder:context:)(a1, a2, a3);
}

uint64_t FormatSelectorValueSelector.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BABDCB74(a1, a2, a3);
}

uint64_t sub_1BABDCB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3 + *(int *)(v9 + 36), v6, v7);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
  if (swift_dynamicCast())
  {
    v11 = *((_QWORD *)&v15 + 1);
    v12 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, a2, v11, v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  }
  else
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    return sub_1BA65DB80((uint64_t)&v14, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
  }
}

uint64_t sub_1BABDCC9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatSelectorValueSelector.bind(binder:context:)(a1, a2, a3);
}

uint64_t sub_1BABDCCB0(uint64_t a1, uint64_t a2)
{
  return FormatShadow.bind(binder:context:)(a1, a2);
}

unint64_t sub_1BABDCCC4(uint64_t a1, uint64_t a2)
{
  return FormatShareAttributionNode.bind(binder:context:)(a1, a2);
}

void sub_1BABDCCD8()
{
  FormatShine.bind(binder:context:)();
}

uint64_t FormatSizeColumn.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BABB09A8(a1, a2, a3);
}

unint64_t FormatSponsoredBannerSizing.bind(binder:context:)()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t result;

  v3 = *v0;
  v2 = v0[1];
  sub_1BA71CA6C(*v0);
  FormatSize.bind(binder:context:)();
  result = sub_1BA719718(v3);
  if (!v1 && (~v2 & 0xF000000000000007) != 0)
  {
    sub_1BA71CA6C(v2);
    FormatSize.bind(binder:context:)();
    return sub_1BAC651F8(v2);
  }
  return result;
}

void sub_1BABDCDAC()
{
  FormatSize.bind(binder:context:)();
}

uint64_t sub_1BABDCDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatValue.bind(binder:context:)(a1, a2, a3);
}

uint64_t FormatSlotNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v20 = a2;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v17 = v2;
    v18 = v6;
    swift_bridgeObjectRetain_n();
    v19 = v9;
    v11 = (_QWORD *)(v9 + 64);
    while (1)
    {
      v12 = *v11;
      v21 = *((_OWORD *)v11 - 2);
      v22 = *((_OWORD *)v11 - 1);
      v23 = v12;
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(a1, v20);
      if (v3)
        break;
      v11 += 5;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v10)
      {
        swift_bridgeObjectRelease_n();
        v2 = v17;
        v6 = v18;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    result = *(_QWORD *)(v2 + 56);
    v14 = *(_QWORD *)(result + 16);
    if (v14)
    {
      v15 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v16 = *(_QWORD *)(v6 + 72);
      v19 = *(_QWORD *)(v2 + 56);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v24 = *((_QWORD *)v8 + 2);
        swift_retain();
        FormatOptionValue.bind(binder:context:)(a1, v20);
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v15 += v16;
        if (!--v14)
          return swift_bridgeObjectRelease_n();
      }
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t FormatSnippet.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a2;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = v2[8];
  v10 = *(_QWORD *)(v9 + 16);
  v21 = v2;
  if (v10)
  {
    v19 = v6;
    swift_bridgeObjectRetain_n();
    v20 = v9;
    v11 = (_QWORD *)(v9 + 64);
    while (1)
    {
      v12 = *v11;
      v23 = *((_OWORD *)v11 - 2);
      v24 = *((_OWORD *)v11 - 1);
      v25 = v12;
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(a1, v26);
      if (v3)
        break;
      v11 += 5;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v10)
      {
        swift_bridgeObjectRelease_n();
        v2 = v21;
        v6 = v19;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    v13 = v2[9];
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = v13 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v16 = *(_QWORD *)(v6 + 72);
      v20 = v2[9];
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v22 = *((_QWORD *)v8 + 2);
        swift_retain();
        FormatOptionValue.bind(binder:context:)(a1, v26);
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v15 += v16;
        if (!--v14)
        {
          swift_bridgeObjectRelease_n();
          v2 = v21;
          goto LABEL_11;
        }
      }
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      swift_beginAccess();
      v17 = v2[11];
      swift_bridgeObjectRetain();
      sub_1BA6FB29C(a1, v26, v17);
      return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BABDD284(uint64_t a1, uint64_t a2)
{
  return FormatSnippet.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABDD2A4(uint64_t a1, uint64_t a2)
{
  return FormatSolidFill.bind(binder:context:)(a1, a2);
}

uint64_t FormatSourceItem.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_BYTE *)(v2 + 24) == 1)
  {
    v4 = result;
    v7 = v2 + 8;
    v5 = *(_QWORD *)(v2 + 8);
    v6 = *(_QWORD *)(v7 + 8);
    sub_1BA896BB8(v5, v6, 1);
    sub_1BABC2CC8(v4, a2, v5, v6);
    return sub_1BA896BE0(v5, v6, 1);
  }
  return result;
}

uint64_t FormatSourceItemTip.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_BYTE *)(v2 + 24) == 1)
  {
    v4 = result;
    v7 = v2 + 8;
    v5 = *(_QWORD *)(v2 + 8);
    v6 = *(_QWORD *)(v7 + 8);
    sub_1BA896BB8(v5, v6, 1);
    sub_1BABC2CC8(v4, a2, v5, v6);
    return sub_1BA896BE0(v5, v6, 1);
  }
  return result;
}

uint64_t sub_1BABDD3C0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_BYTE *)(v2 + 24) == 1)
  {
    v4 = result;
    v7 = v2 + 8;
    v5 = *(_QWORD *)(v2 + 8);
    v6 = *(_QWORD *)(v7 + 8);
    sub_1BA896BB8(v5, v6, 1);
    sub_1BABC2CC8(v4, a2, v5, v6);
    return sub_1BA896BE0(v5, v6, 1);
  }
  return result;
}

uint64_t FormatSourceItemTipTraits.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (*(_BYTE *)(v2 + 16) == 1)
    return sub_1BABC2CC8(result, a2, *(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  return result;
}

uint64_t sub_1BABDD468(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (*(_BYTE *)(v2 + 16) == 1)
    return sub_1BABC2CC8(result, a2, *(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  return result;
}

uint64_t sub_1BABDD48C()
{
  return FormatSpaceNode.bind(binder:context:)();
}

void FormatSplitBackgroundSide.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)v0;
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  if (*(_BYTE *)(v0 + 64) != 1)
  {
    v19 = *(_QWORD *)(v0 + 56);
    v21 = *(_QWORD *)(v0 + 48);
    v11 = *(_QWORD *)(v0 + 8);
    v12 = *(_QWORD *)(v0 + 16);
    v13 = *(_QWORD *)(v0 + 24);
    v14 = *(_QWORD *)(v0 + 32);
    v18 = *(_QWORD *)(v0 + 40);
    swift_retain();
    FormatColor.bind(binder:context:)();
    sub_1BAA4E044(v2, v11, v12, v13, v14, v18, v21, v19, 0);
    return;
  }
  v5 = *(_QWORD *)(v2 + 16);
  if (!v5)
  {
LABEL_7:
    if (!v3)
      return;
    v7 = *(_QWORD *)(v3 + 16);
    if (v7)
    {
      v8 = swift_bridgeObjectRetain();
      sub_1BA5DCC20(v8);
      swift_bridgeObjectRetain();
      v9 = (_BYTE *)(v3 + 40);
      while (1)
      {
        if ((*v9 & 1) == 0)
        {
          v10 = *((_QWORD *)v9 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v10, 0);
          sub_1BA72C46C(v10, 0);
          if (v1)
            break;
        }
        v9 += 16;
        if (!--v7)
        {
          swift_bridgeObjectRelease_n();
          v15 = *(_QWORD *)(v4 + 16);
          if (v15)
            goto LABEL_19;
          goto LABEL_24;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = *(_QWORD *)(v4 + 16);
      if (!v15)
      {
LABEL_24:
        sub_1BA5DCC4C(v3);
        return;
      }
LABEL_19:
      swift_bridgeObjectRetain_n();
      v16 = (_BYTE *)(v4 + 40);
      do
      {
        if ((*v16 & 1) == 0)
        {
          v17 = *((_QWORD *)v16 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v17, 0);
          sub_1BA72C46C(v17, 0);
          if (v1)
            break;
        }
        v16 += 16;
        --v15;
      }
      while (v15);
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_24;
  }
  v20 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    swift_retain();
    FormatColor.bind(binder:context:)();
    if (v1)
      break;
    ++v6;
    swift_release();
    if (v5 == v6)
    {
      swift_bridgeObjectRelease();
      v3 = v20;
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_1BABDD738()
{
  return FormatSplitBackground.bind(binder:context:)();
}

void sub_1BABDD74C()
{
  FormatSplitBackgroundSide.bind(binder:context:)();
}

uint64_t sub_1BABDD760(uint64_t a1, uint64_t a2)
{
  return FormatSponsoredBannerNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABDD780(uint64_t a1, uint64_t a2)
{
  return FormatSponsoredBannerNodeStyle.bind(binder:context:)(a1, a2);
}

uint64_t FormatSponsoredBannerNodeStyle.Selector.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  if ((~v3 & 0xF000000000000007) == 0
    || (swift_retain(), FormatColor.bind(binder:context:)(), result = sub_1BA5E800C(v3), !v1))
  {
    if ((~v2 & 0xF000000000000007) != 0)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      return sub_1BA5E800C(v2);
    }
  }
  return result;
}

uint64_t sub_1BABDD854()
{
  return FormatSponsoredBannerNodeStyle.Selector.bind(binder:context:)();
}

unint64_t sub_1BABDD868()
{
  return FormatSponsoredBannerSizing.bind(binder:context:)();
}

uint64_t sub_1BABDD87C(uint64_t a1, uint64_t a2)
{
  return sub_1BABDD910(a1, a2);
}

uint64_t sub_1BABDD898(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v3 = *(_BYTE *)(v2 + 8);
  if ((v3 & 0xC0) == 0x80)
    return sub_1BABB2FD8(result, a2, *(_QWORD *)v2, v3 & 0x3F);
  return result;
}

void sub_1BABDD8CC()
{
  FormatSportsEventBinding.Command.bind(binder:context:)();
}

void sub_1BABDD8E0()
{
  FormatSportsEventBinding.Image.bind(binder:context:)();
}

uint64_t sub_1BABDD8F4(uint64_t a1, uint64_t a2)
{
  return sub_1BABDD910(a1, a2);
}

uint64_t sub_1BABDD910(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;

  v3 = *(char *)(v2 + 8);
  if (v3 < 0)
    return sub_1BABB2FD8(result, a2, *(_QWORD *)v2, v3 & 0x3F);
  return result;
}

uint64_t FormatStateMachineDefinition.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((*(_BYTE *)(v2 + 48) & 1) == 0)
  {
    v4 = *(_QWORD *)(v2 + 16);
    v6 = *(_QWORD *)(v4 + 16);
    v5 = *(_QWORD *)(v4 + 24);
    v7 = *(_QWORD *)(v4 + 32);
    v8 = result;
    v9 = *(unsigned __int8 *)(v4 + 40);
    v10 = *(_BYTE *)(v4 + 41);
    v14 = *(_QWORD *)(v2 + 32);
    v15 = *(_QWORD *)(v2 + 24);
    v16 = *(_QWORD *)(v2 + 40);
    sub_1BA7261E0(v4, v15, v14, v16, 0);
    swift_retain();
    sub_1BAC65170(v6, v5, v7, v9, v10, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    FormatCommandBinding.bind(binder:context:)();
    sub_1BAC65170(v6, v5, v7, v9, v10, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    swift_release();
    if (v3)
    {
      v11 = v4;
      v13 = v14;
      v12 = v15;
    }
    else
    {
      sub_1BAB72EEC(v8, a2, v15);
      sub_1BB5AC740(v8, a2);
      v11 = v4;
      v12 = v15;
      v13 = v14;
    }
    return sub_1BA6C1F54(v11, v12, v13, v16, 0);
  }
  return result;
}

uint64_t FormatStateMachineInput.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((v2[4] & 1) == 0)
  {
    v4 = *v2;
    v6 = *(_QWORD *)(*v2 + 16);
    v5 = *(_QWORD *)(*v2 + 24);
    v7 = *(_QWORD *)(*v2 + 32);
    v8 = result;
    v9 = *(unsigned __int8 *)(*v2 + 40);
    v10 = *(_BYTE *)(*v2 + 41);
    v14 = v2[2];
    v15 = v2[1];
    v16 = v2[3];
    sub_1BA7261E0(*v2, v15, v14, v16, 0);
    swift_retain();
    sub_1BAC65170(v6, v5, v7, v9, v10, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    FormatCommandBinding.bind(binder:context:)();
    sub_1BAC65170(v6, v5, v7, v9, v10, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    swift_release();
    if (v3)
    {
      v11 = v4;
      v13 = v14;
      v12 = v15;
    }
    else
    {
      sub_1BAB72EEC(v8, a2, v15);
      sub_1BB5AC740(v8, a2);
      v11 = v4;
      v12 = v15;
      v13 = v14;
    }
    return sub_1BA6C1F54(v11, v12, v13, v16, 0);
  }
  return result;
}

uint64_t sub_1BABDDCE4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((*(_BYTE *)(v2 + 48) & 1) == 0)
  {
    v4 = *(_QWORD *)(v2 + 16);
    v6 = *(_QWORD *)(v4 + 16);
    v5 = *(_QWORD *)(v4 + 24);
    v7 = *(_QWORD *)(v4 + 32);
    v8 = result;
    v9 = *(unsigned __int8 *)(v4 + 40);
    v10 = *(_BYTE *)(v4 + 41);
    v14 = *(_QWORD *)(v2 + 32);
    v15 = *(_QWORD *)(v2 + 24);
    v16 = *(_QWORD *)(v2 + 40);
    sub_1BA7261E0(v4, v15, v14, v16, 0);
    swift_retain();
    sub_1BAC65170(v6, v5, v7, v9, v10, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    FormatCommandBinding.bind(binder:context:)();
    sub_1BAC65170(v6, v5, v7, v9, v10, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    swift_release();
    if (v3)
    {
      v11 = v4;
      v13 = v14;
      v12 = v15;
    }
    else
    {
      sub_1BAB72EEC(v8, a2, v15);
      sub_1BB5AC740(v8, a2);
      v11 = v4;
      v12 = v15;
      v13 = v14;
    }
    return sub_1BA6C1F54(v11, v12, v13, v16, 0);
  }
  return result;
}

uint64_t sub_1BABDDEB8(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((v2[4] & 1) == 0)
  {
    v4 = *v2;
    v6 = *(_QWORD *)(*v2 + 16);
    v5 = *(_QWORD *)(*v2 + 24);
    v7 = *(_QWORD *)(*v2 + 32);
    v8 = result;
    v9 = *(unsigned __int8 *)(*v2 + 40);
    v10 = *(_BYTE *)(*v2 + 41);
    v14 = v2[2];
    v15 = v2[1];
    v16 = v2[3];
    sub_1BA7261E0(*v2, v15, v14, v16, 0);
    swift_retain();
    sub_1BAC65170(v6, v5, v7, v9, v10, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    FormatCommandBinding.bind(binder:context:)();
    sub_1BAC65170(v6, v5, v7, v9, v10, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    swift_release();
    if (v3)
    {
      v11 = v4;
      v13 = v14;
      v12 = v15;
    }
    else
    {
      sub_1BAB72EEC(v8, a2, v15);
      sub_1BB5AC740(v8, a2);
      v11 = v4;
      v12 = v15;
      v13 = v14;
    }
    return sub_1BA6C1F54(v11, v12, v13, v16, 0);
  }
  return result;
}

uint64_t FormatStateViewNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;

  v4 = v2;
  swift_beginAccess();
  v21 = v2[4];
  sub_1BA71CA6C(v21);
  FormatSize.bind(binder:context:)();
  if (v3)
    return sub_1BA719718(v21);
  sub_1BA719718(v21);
  swift_beginAccess();
  v8 = v2[6];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v9; ++i)
    {
      v11 = *(_QWORD *)(v8 + 8 * i + 32);
      sub_1BA7196DC(v11);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  sub_1BAB7F804(a1, a2, v2[9]);
  result = swift_beginAccess();
  v12 = v2[11];
  if (v12 >> 62 == 1)
  {
    v13 = *(_QWORD *)(v12 + 16);
    v14 = *(_QWORD *)(v12 + 24);
    sub_1BA67D3F4(v4[11]);
    sub_1BA67D3F4(v13);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(a1, a2, v13, v14);
    sub_1BA6EEDB4(v13);
    swift_bridgeObjectRelease();
    result = sub_1BA6EEDB4(v12);
  }
  v15 = v4[13];
  if (v15)
  {
    swift_beginAccess();
    v16 = *(_QWORD *)(v15 + 72);
    if (v16)
    {
      swift_bridgeObjectRetain();
      sub_1BAB758D0(a1, a2, v16);
      swift_bridgeObjectRelease();
    }
    result = swift_beginAccess();
    v17 = *(_QWORD *)(v15 + 88);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain_n();
      v19 = (uint64_t *)(v17 + 72);
      do
      {
        v20 = *v19;
        if (*v19)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAB758D0(a1, a2, v20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v19 += 7;
        --v18;
      }
      while (v18);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t FormatStateViewNodeState.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(v2 + 32);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v7 = result;
    swift_bridgeObjectRetain_n();
    v8 = v4 + 64;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(v7, a2);
      if (v3)
        break;
      v8 += 40;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v5)
        return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BABDE464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BABDE480(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAB72BC0);
}

uint64_t sub_1BABDE480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v9;

  v9 = *(_QWORD *)(v5 + 32);
  swift_bridgeObjectRetain();
  a5(a1, a2, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BABDE4DC(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  swift_retain();
  FormatAsyncImageContent.bind(binder:context:)();
  result = swift_release();
  if (!v2)
    return FormatImageNodeStyle.bind(binder:context:)(a1, a2);
  return result;
}

uint64_t sub_1BABDE564(uint64_t a1, uint64_t a2)
{
  return FormatSupplementary.bind(binder:context:)(a1, a2);
}

void FormatSupplementaryNodePinDistance.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  unsigned __int8 v5;
  char v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  v2 = *(_QWORD *)v0;
  v3 = *(unsigned __int8 *)(v0 + 8);
  if ((*(_BYTE *)(v0 + 9) & 1) != 0)
  {
    if (v3 == 255)
      return;
    sub_1BA7AD87C(v2, v3);
    FormatSupplementaryNodePinDistanceAdjustment.bind(binder:context:)();
    v4 = v2;
    v5 = v3;
    v6 = 1;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 16);
    if (!v7)
      return;
    swift_bridgeObjectRetain();
    v8 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v8 & 1) == 0)
      {
        v9 = *((_QWORD *)v8 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v9, 0);
        sub_1BA72C46C(v9, 0);
        if (v1)
          break;
      }
      v8 += 16;
      --v7;
    }
    while (v7);
    v4 = v2;
    v5 = v3;
    v6 = 0;
  }
  sub_1BA7AAE54(v4, v5, v6);
}

void FormatSupplementaryNodePinDistanceAdjustment.bind(binder:context:)()
{
  __asm { BR              X10 }
}

void sub_1BABDE6E8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;

  if (v1 >= 2)
  {
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      sub_1BA67035C(v1);
      v3 = (_BYTE *)(v1 + 40);
      do
      {
        if ((*v3 & 1) == 0)
        {
          v4 = *((_QWORD *)v3 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v4, 0);
          sub_1BA72C46C(v4, 0);
          if (v0)
            break;
        }
        v3 += 16;
        --v2;
      }
      while (v2);
      sub_1BA7AAE2C(v1, 0);
    }
  }
}

void sub_1BABDE93C()
{
  FormatSupplementaryNodePinDistance.bind(binder:context:)();
}

uint64_t FormatSupplementaryNodePinDistanceAdjustmentValue.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABDE96C(a1, a2, (uint64_t (*)(uint64_t))sub_1BA5B18CC);
}

uint64_t sub_1BABDE96C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;

  v5 = *v3;
  if ((unint64_t)*v3 >= 2)
  {
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      v8 = (_BYTE *)(v5 + 40);
      do
      {
        if ((*v8 & 1) == 0)
        {
          v9 = *((_QWORD *)v8 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v9, 0);
          sub_1BA72C46C(v9, 0);
          if (v4)
            break;
        }
        v8 += 16;
        --v6;
      }
      while (v6);
      return a3(v5);
    }
  }
  return result;
}

void sub_1BABDEA40()
{
  FormatSupplementaryNodePinDistanceAdjustment.bind(binder:context:)();
}

uint64_t sub_1BABDEA54(uint64_t result, uint64_t a2)
{
  uint64_t *v2;

  if ((unint64_t)*v2 >= 2)
    return sub_1BABB07FC(result, a2, *v2);
  return result;
}

void FormatSupplementaryNodePinTrait.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (*(_BYTE *)(v0 + 10))
  {
    v2 = *(_QWORD *)v0;
    v3 = *(unsigned __int16 *)(v0 + 8);
    if (*(_BYTE *)(v0 + 10) == 1)
    {
      if ((v3 & 0x100) != 0)
      {
        if ((_BYTE)v3 == 0xFF)
          return;
        sub_1BA7AD87C(v2, v3);
        FormatSupplementaryNodePinDistanceAdjustment.bind(binder:context:)();
      }
      else
      {
        v4 = *(_QWORD *)(v2 + 16);
        if (!v4)
          return;
        sub_1BA7AD890(*(_QWORD *)v0, *(_WORD *)(v0 + 8), 0);
        v5 = (_BYTE *)(v2 + 40);
        do
        {
          if ((*v5 & 1) == 0)
          {
            v6 = *((_QWORD *)v5 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            sub_1BA72C46C(v6, 0);
            sub_1BA72C46C(v6, 0);
            if (v1)
              break;
          }
          v5 += 16;
          --v4;
        }
        while (v4);
      }
      v10 = v2;
      v11 = v3;
      v12 = 1;
    }
    else
    {
      if (v3 >> 8 > 0xFE)
        return;
      if ((v3 & 0x100) != 0)
      {
        if ((_BYTE)v3 != 0xFF)
        {
          sub_1BA7AD89C(v2, v3);
          FormatSupplementaryNodePinDistanceAdjustment.bind(binder:context:)();
        }
        v10 = v2;
        v11 = v3;
        v12 = 2;
      }
      else
      {
        v7 = *(_QWORD *)(v2 + 16);
        if (!v7)
          return;
        sub_1BA77A170(*(_QWORD *)v0, *(unsigned __int16 *)(v0 + 8), 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        sub_1BA7AD89C(v2, v3);
        v8 = (_BYTE *)(v2 + 40);
        do
        {
          if ((*v8 & 1) == 0)
          {
            v9 = *((_QWORD *)v8 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            sub_1BA72C46C(v9, 0);
            sub_1BA72C46C(v9, 0);
            if (v1)
              break;
          }
          v8 += 16;
          --v7;
        }
        while (v7);
        sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
        v10 = v2;
        v11 = v3;
        v12 = 2;
      }
    }
    sub_1BA77A170(v10, v11, v12, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
  }
}

void sub_1BABDECF8()
{
  FormatSupplementaryNodePinTrait.bind(binder:context:)();
}

uint64_t sub_1BABDED0C()
{
  return FormatSupplementaryNodeStyle.bind(binder:context:)();
}

void FormatSupplementaryNodeStyle.Selector.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (*(unsigned __int8 *)(v0 + 34) != 255)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v3 = *(unsigned __int16 *)(v0 + 32) | (*(unsigned __int8 *)(v0 + 34) << 16);
    if (WORD1(v3))
    {
      if (WORD1(v3) == 1)
      {
        if ((*(_WORD *)(v0 + 32) & 0x100) == 0)
        {
          v4 = *(_QWORD *)(v2 + 16);
          if (!v4)
            return;
          sub_1BA771834(*(_QWORD *)(v0 + 24), v3);
          sub_1BA77A170(v2, v3, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          v5 = (_BYTE *)(v2 + 40);
          do
          {
            if ((*v5 & 1) == 0)
            {
              v6 = *((_QWORD *)v5 - 1);
              swift_retain_n();
              FormatFloat.bind(binder:context:)();
              sub_1BA72C46C(v6, 0);
              sub_1BA72C46C(v6, 0);
              if (v1)
                break;
            }
            v5 += 16;
            --v4;
          }
          while (v4);
          goto LABEL_24;
        }
        if (*(_WORD *)(v0 + 32) != 0xFF)
        {
          v10 = *(_QWORD *)(v0 + 24);
          v11 = *(unsigned __int16 *)(v0 + 32) | (*(unsigned __int8 *)(v0 + 34) << 16);
          v12 = 1;
LABEL_23:
          sub_1BA77A170(v10, v11, v12, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          FormatSupplementaryNodePinDistanceAdjustment.bind(binder:context:)();
        }
      }
      else if (HIBYTE(*(_WORD *)(v0 + 32)) != 255)
      {
        if ((*(_WORD *)(v0 + 32) & 0x100) == 0)
        {
          v7 = *(_QWORD *)(v2 + 16);
          if (!v7)
            return;
          sub_1BA771834(*(_QWORD *)(v0 + 24), v3);
          sub_1BA771834(v2, v3);
          sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          v8 = (_BYTE *)(v2 + 40);
          do
          {
            if ((*v8 & 1) == 0)
            {
              v9 = *((_QWORD *)v8 - 1);
              swift_retain_n();
              FormatFloat.bind(binder:context:)();
              sub_1BA72C46C(v9, 0);
              sub_1BA72C46C(v9, 0);
              if (v1)
                break;
            }
            v8 += 16;
            --v7;
          }
          while (v7);
          sub_1BA771864(v2, v3);
          goto LABEL_24;
        }
        if (*(_WORD *)(v0 + 32) == 0xFF)
        {
LABEL_24:
          sub_1BA771864(v2, v3);
          goto LABEL_25;
        }
        v10 = *(_QWORD *)(v0 + 24);
        v11 = *(unsigned __int16 *)(v0 + 32) | (*(unsigned __int8 *)(v0 + 34) << 16);
        v12 = 2;
        goto LABEL_23;
      }
    }
LABEL_25:
    sub_1BA771864(v2, v3);
  }
}

void sub_1BABDEFA8()
{
  FormatSupplementaryNodeStyle.Selector.bind(binder:context:)();
}

uint64_t FormatSwitchListValue.bindChildren(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;

  v7 = *v4;
  v8 = type metadata accessor for FormatSwitchListValue.CaseValue(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  return Array<A>.bind(binder:context:)(a1, a2, v7, v8, (uint64_t)&off_1E729D250);
}

uint64_t sub_1BABDF01C()
{
  return sub_1BABD9464();
}

uint64_t FormatSwitchNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v6 = *(_QWORD *)(v2 + 32);
  if (v6 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v7 = result;
    if (result)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      v16 = v2;
      v17 = v7;
      v9 = 0;
      v10 = v6 & 0xC000000000000001;
      v18 = v6 + 32;
      v19 = v6 & 0xFFFFFFFFFFFFFF8;
      v20 = v6;
      v21 = v6 & 0xC000000000000001;
      while (1)
      {
        if (v10)
        {
          v11 = MEMORY[0x1BCCE4630](v9, v6);
          v12 = __OFADD__(v9, 1);
          v2 = v9 + 1;
          if (v12)
            goto LABEL_19;
        }
        else
        {
          if (v9 >= *(_QWORD *)(v19 + 16))
          {
            __break(1u);
            return result;
          }
          v11 = *(_QWORD *)(v18 + 8 * v9);
          swift_retain();
          v12 = __OFADD__(v9, 1);
          v2 = v9 + 1;
          if (v12)
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v22 = v2;
        swift_retain();
        FormatExpression.bind(binder:context:)();
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_release();
        }
        swift_release();
        swift_beginAccess();
        v13 = *(_QWORD *)(v11 + 24);
        v14 = *(_QWORD *)(v13 + 16);
        if (v14)
        {
          swift_bridgeObjectRetain_n();
          v15 = v13 + 64;
          do
          {
            swift_bridgeObjectRetain();
            swift_retain();
            FormatSourceMapNode.bind(binder:context:)(a1, a2);
            v15 += 40;
            swift_bridgeObjectRelease();
            swift_release();
            --v14;
          }
          while (v14);
          swift_release();
          result = swift_bridgeObjectRelease_n();
          v6 = v20;
          v7 = v17;
        }
        else
        {
          result = swift_release();
        }
        v9 = v22;
        v10 = v21;
        if (v22 == v7)
        {
          result = swift_bridgeObjectRelease();
          v2 = v16;
          goto LABEL_22;
        }
      }
    }
  }
  result = swift_bridgeObjectRelease();
LABEL_22:
  if (*(_QWORD *)(v2 + 40))
    return FormatSwitchNodeDefault.bind(binder:context:)(a1, a2);
  return result;
}

uint64_t FormatSwitchNodeCase.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_retain();
  FormatExpression.bind(binder:context:)();
  result = swift_release();
  if (!v3)
  {
    result = swift_beginAccess();
    v7 = *(_QWORD *)(v2 + 24);
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      v9 = v7 + 64;
      do
      {
        swift_bridgeObjectRetain();
        swift_retain();
        FormatSourceMapNode.bind(binder:context:)(a1, a2);
        v9 += 40;
        swift_bridgeObjectRelease();
        swift_release();
        --v8;
      }
      while (v8);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BABDF424(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v6 = *v2;
  swift_retain();
  FormatExpression.bind(binder:context:)();
  result = swift_release();
  if (!v3)
  {
    swift_beginAccess();
    v8 = *(_QWORD *)(v6 + 24);
    swift_bridgeObjectRetain();
    sub_1BAB72BC0(a1, a2, v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABDF4D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  sub_1BAB72BC0(a1, a2, v6);
  return swift_bridgeObjectRelease();
}

uint64_t FormatSwitchValue.bindChildren(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v8 = *v4;
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(a3 + 24);
  v11 = type metadata accessor for FormatSwitchValue.CaseValue(0, v9, v10, a4);
  result = Array<A>.bind(binder:context:)(a1, a2, v8, v11, (uint64_t)&off_1E729D240);
  if (!v5)
  {
    v14 = type metadata accessor for FormatSwitchValue.DefaultValue(0, v9, v10, v13);
    return FormatValue.bind(binder:context:)(a1, a2, v14);
  }
  return result;
}

uint64_t FormatSwitchValue.DefaultValue.bind(binder:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BABB09A8(a1, a2, a3);
}

uint64_t sub_1BABDF61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v15 = *(_QWORD *)v3;
  swift_retain();
  FormatExpression.bind(binder:context:)();
  result = swift_release();
  if (!v4)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, &v3[*(int *)(a3 + 36)], v8);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
    if (swift_dynamicCast())
    {
      v13 = *((_QWORD *)&v16 + 1);
      v14 = v17;
      __swift_project_boxed_opaque_existential_1(&v15, *((uint64_t *)&v16 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, a2, v13, v14);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
    }
    else
    {
      v17 = 0;
      v15 = 0u;
      v16 = 0u;
      return sub_1BA65DB80((uint64_t)&v15, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
    }
  }
  return result;
}

uint64_t sub_1BABDF78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BABDF61C(a1, a2, a3);
}

void FormatSymbolConfig.bind(binder:context:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BABDF7F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  FormatSymbolConfig.Font.bind(binder:context:)();
  return sub_1BA740434(v2, v1, v0, 0);
}

void FormatSymbolConfig.Font.bind(binder:context:)()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X11 }
}

uint64_t sub_1BABDFAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;

  v3 = swift_projectBox();
  sub_1BA4C2DD8(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
  sub_1BA4C2DD8(v1 + *(int *)(v0 + 20), v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
      __asm { BR              X10 }
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA4A2E80(v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
  return swift_release();
}

void sub_1BABDFCD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 - 152) = v4;
  *(_QWORD *)(v5 - 144) = v3;
  *(_QWORD *)(v5 - 136) = v1;
  *(_BYTE *)(v5 - 65) = 6;
  swift_retain();
  sub_1BA690C00(v4, v3, v1, 0);
  v6 = sub_1BB6B84D4((uint64_t *)(v5 - 152), (char *)(v5 - 65));
  if (!v0)
  {
    sub_1BB3757A0(v4, v3, v6, 1, v2);
    sub_1BA502AD0(v2, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
  }
  sub_1BA5A7EF8(v4, v3, v1, 0);
  JUMPOUT(0x1BABDFC44);
}

uint64_t FormatSymbolConfig.TextStyle.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;

  v2 = *(_QWORD *)(v0 + 8);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain_n();
      v4 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v4 & 1) == 0)
        {
          v5 = *((_QWORD *)v4 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v5, 0);
          sub_1BA72C46C(v5, 0);
          if (v1)
            break;
        }
        v4 += 16;
        --v3;
      }
      while (v3);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t FormatSymbolConfig.Size.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;

  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    v4 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v4 & 1) == 0)
      {
        v5 = *((_QWORD *)v4 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v5, 0);
        sub_1BA72C46C(v5, 0);
        if (v1)
          break;
      }
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

void sub_1BABDFF38()
{
  FormatSymbolConfig.bind(binder:context:)();
}

uint64_t sub_1BABDFF4C()
{
  swift_retain();
  FormatFont.bind(binder:context:)();
  return swift_release();
}

uint64_t sub_1BABDFFB0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 8);
  if (v3)
    return sub_1BABB07FC(result, a2, v3);
  return result;
}

uint64_t FormatSymbolImageFill.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABDFFE8(a1, a2, (void (*)(uint64_t, uint64_t))FormatColor.bind(binder:context:));
}

uint64_t sub_1BABDFFE8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t result;

  swift_retain();
  a3(a1, a2);
  result = swift_release();
  if (!v3)
  {
    swift_retain();
    a3(a1, a2);
    return swift_release();
  }
  return result;
}

void FormatSymbolImageColor.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BABE00D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    while (1)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v1)
        break;
      ++v3;
      swift_release();
      if (v2 == v3)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_1BABE01E0(uint64_t a1, uint64_t a2)
{
  return FormatSymbolImage.bind(binder:context:)(a1, a2);
}

void sub_1BABE01F4()
{
  FormatSymbolImageColor.bind(binder:context:)();
}

unint64_t sub_1BABE0208(unint64_t a1, uint64_t a2)
{
  return FormatSyncImageContent.bind(binder:context:)(a1, a2);
}

uint64_t FormatTagMoreActions.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if ((~*v0 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatTextContent.bind(binder:context:)();
    return sub_1BA5E800C(v1);
  }
  return result;
}

uint64_t sub_1BABE0290()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t result;

  v1 = *(_QWORD *)v0;
  if (*(_BYTE *)(v0 + 16))
    v2 = 1;
  else
    v2 = (*(_QWORD *)v0 & 0xF000000000000007) == 0xF000000000000007;
  if (!v2)
  {
    v3 = *(_QWORD *)(v0 + 8);
    sub_1BA856DD0(v1, v3, 0);
    sub_1BA5E7FF4(v1);
    FormatTextContent.bind(binder:context:)();
    sub_1BA5E800C(v1);
    return sub_1BA7EDFFC(v1, v3, 0);
  }
  return result;
}

uint64_t FormatTagIconStyle.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  swift_retain();
  FormatFont.bind(binder:context:)();
  result = swift_release();
  if (!v1)
  {
    v5 = *(_QWORD *)(v2 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      v6 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v6 & 1) == 0)
        {
          v7 = *((_QWORD *)v6 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v7, 0);
          sub_1BA72C46C(v7, 0);
        }
        v6 += 16;
        --v5;
      }
      while (v5);
      result = swift_bridgeObjectRelease_n();
    }
    v8 = *(_QWORD *)(v3 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      v9 = (_BYTE *)(v3 + 40);
      do
      {
        if ((*v9 & 1) == 0)
        {
          v10 = *((_QWORD *)v9 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v10, 0);
          sub_1BA72C46C(v10, 0);
        }
        v9 += 16;
        --v8;
      }
      while (v8);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

void sub_1BABE04C8()
{
  FormatTagBinding.Image.bind(binder:context:)();
}

uint64_t sub_1BABE04DC()
{
  return FormatTagIconStyle.bind(binder:context:)();
}

uint64_t sub_1BABE04F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if ((~*v0 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatTextContent.bind(binder:context:)();
    return sub_1BA5E800C(v1);
  }
  return result;
}

void FormatTemperature.bind(binder:context:)()
{
  sub_1BAC64D70();
}

void FormatTemperatureFormat.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - v3;
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v5 = *(_QWORD *)v0;
    v6 = *(_QWORD *)(v0 + 8);
    swift_bridgeObjectRetain();
    v7 = sub_1BA862600((uint64_t)&unk_1E7254380);
    sub_1BB3757A0(v5, v6, v7, 1, (uint64_t)v4);
    if (!v1)
      sub_1BA502AD0((uint64_t)v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    sub_1BA69C828(v5, v6, 1);
  }
}

void sub_1BABE067C()
{
  sub_1BAC64D70();
}

void sub_1BABE0694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - v3;
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v5 = *(_QWORD *)v0;
    v6 = *(_QWORD *)(v0 + 8);
    swift_bridgeObjectRetain();
    v7 = sub_1BA862600((uint64_t)&unk_1E7254380);
    sub_1BB3757A0(v5, v6, v7, 1, (uint64_t)v4);
    if (!v1)
      sub_1BA502AD0((uint64_t)v4, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    sub_1BA69C828(v5, v6, 1);
  }
}

_QWORD *sub_1BABE0794(uint64_t a1, uint64_t a2)
{
  return FormatTextNodeStyle.bind(binder:context:)(a1, a2);
}

_QWORD *sub_1BABE07B4(uint64_t a1, uint64_t a2)
{
  return FormatTextNodeStyle.bind(binder:context:)(a1, a2);
}

_QWORD *sub_1BABE07D4(uint64_t a1, uint64_t a2)
{
  return FormatTextNodeStyle.bind(binder:context:)(a1, a2);
}

uint64_t FormatTextNodeFormat.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(v2 + 8);
  swift_retain();
  FormatTextContent.bind(binder:context:)();
  result = swift_release();
  if (!v3)
  {
    v8 = *(_QWORD *)(v6 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = v6 + 64;
      do
      {
        v10 = *(_QWORD *)(v9 - 8);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        FormatTextContent.bind(binder:context:)();
        swift_release();
        if (v10)
          FormatTextNodeStyle.bind(binder:context:)(a1, a2);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        v9 += 40;
        --v8;
      }
      while (v8);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t FormatTextNodeAttachment.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v17[2];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v17 - v7;
  v10 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v11 = *(unsigned __int8 *)(v2 + 32);
  v17[1] = *(_QWORD *)v2;
  swift_retain();
  FormatSyncImageContent.bind(binder:context:)(a1, a2);
  result = swift_release();
  if (!v3)
  {
    if (v11)
    {
      sub_1BA69C808(v10, v9, 1);
      v13 = sub_1BA862600((uint64_t)&unk_1E7254C10);
      sub_1BB3757A0(v10, v9, v13, 1, (uint64_t)v8);
      sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      v14 = v10;
      v15 = v9;
      v16 = 1;
    }
    else
    {
      v14 = v10;
      v15 = v9;
      v16 = 0;
    }
    return sub_1BA69C828(v14, v15, v16);
  }
  return result;
}

void FormatTextNodeNumber.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  v5 = *(_QWORD *)v2;
  if (*(_BYTE *)(v2 + 8))
  {
    if (*(_BYTE *)(v2 + 8) != 1)
      return;
    sub_1BA93DAE4(*(_QWORD *)v2, 1u);
    sub_1BA75A6B4(a2, v5);
    v6 = v5;
    v7 = 1;
  }
  else
  {
    v8 = *(_QWORD *)(v5 + 16);
    if (!v8)
      return;
    sub_1BA93DAE4(*(_QWORD *)v2, 0);
    swift_bridgeObjectRetain();
    v9 = (_BYTE *)(v5 + 40);
    do
    {
      if ((*v9 & 1) == 0)
      {
        v10 = *((_QWORD *)v9 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v10, 0);
        sub_1BA72C46C(v10, 0);
        if (v3)
          break;
      }
      v9 += 16;
      --v8;
    }
    while (v8);
    sub_1BA93DB08(v5, 0);
    v6 = v5;
    v7 = 0;
  }
  sub_1BA93DB08(v6, v7);
}

uint64_t FormatTextNodeLink.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19[3];
  char v20;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19[-1] - v7;
  v9 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *v2;
  swift_retain();
  FormatTextContent.bind(binder:context:)(a1, a2);
  result = swift_release();
  if (!v3)
  {
    v13 = type metadata accessor for FormatTextNodeLink();
    sub_1BA4C2DD8((uint64_t)v2 + *(int *)(v13 + 20), (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result)
    {
      if ((_DWORD)result == 1)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      else if (!v11[24])
      {
        v14 = *((_QWORD *)v11 + 1);
        v16 = *((_QWORD *)v11 + 2);
        v19[0] = *(_QWORD *)v11;
        v15 = v19[0];
        v19[1] = v14;
        v19[2] = v16;
        v20 = 6;
        sub_1BA690C00(v19[0], v14, v16, 0);
        v17 = sub_1BB6B84D4(v19, &v20);
        sub_1BB3757A0(v15, v14, v17, 1, (uint64_t)v8);
        sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
        return sub_1BA5A7EF8(v15, v14, v16, 0);
      }
    }
    else
    {
      return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
  }
  return result;
}

void FormatTextNodeDateTimeFormat.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  v9 = *v2;
  v10 = *v2 >> 62;
  if ((v10 - 2) >= 2)
  {
    if ((_DWORD)v10)
    {
      v15 = *(_QWORD *)(v9 + 24);
      v17 = *(_QWORD *)(v9 + 16);
      v18 = v15;
      sub_1BA739250(v9);
      swift_bridgeObjectRetain();
      sub_1BA739250(v15);
      FormatDateTimeOffset.bind(binder:context:)(a1, a2);
      swift_bridgeObjectRelease();
      sub_1BA6F5D74(v15);
    }
    else
    {
      if (*(_BYTE *)(v9 + 40))
        return;
      v11 = *(_QWORD *)(v9 + 24);
      v12 = *(_QWORD *)(v9 + 32);
      v17 = *(_QWORD *)(v9 + 16);
      v13 = v17;
      v18 = v11;
      v19 = v12;
      v20 = 1;
      sub_1BA739250(v9);
      sub_1BA690C00(v13, v11, v12, 0);
      v14 = sub_1BB6B84D4(&v17, &v20);
      if (!v3)
      {
        sub_1BB3757A0(v13, v11, v14, 1, (uint64_t)v8);
        sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
      }
    }
    sub_1BA6F5D74(v9);
  }
}

void sub_1BABE0FBC()
{
  FormatTextContent.bind(binder:context:)();
}

uint64_t sub_1BABE0FD0(uint64_t a1, uint64_t a2)
{
  return FormatTextNode.bind(binder:context:)(a1, a2);
}

uint64_t FormatTextNodeAlternative.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t result;

  swift_retain();
  FormatTextContent.bind(binder:context:)();
  result = swift_release();
  if (!v0)
  {
    swift_retain();
    FormatTextNodeAlternativeLogic.bind(binder:context:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BABE1090()
{
  return FormatTextNodeAlternative.bind(binder:context:)();
}

uint64_t FormatTextNodeAlternativeLogic.AlternativeLogic.bind(binder:context:)()
{
  swift_retain();
  FormatTextNodeAlternativeLogic.bind(binder:context:)();
  return swift_release();
}

uint64_t FormatTextNodeAlternativeLogic.TextLines.bind(binder:context:)()
{
  return sub_1BABE111C();
}

uint64_t sub_1BABE111C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;

  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    v4 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v4 & 1) == 0)
      {
        v5 = *((_QWORD *)v4 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v5, 0);
        sub_1BA72C46C(v5, 0);
        if (v1)
          break;
      }
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t FormatTextNodeAlternativeLogic.LogicalOperator.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t result;

  swift_retain();
  FormatTextNodeAlternativeLogic.bind(binder:context:)();
  result = swift_release();
  if (!v0)
  {
    swift_retain();
    FormatTextNodeAlternativeLogic.bind(binder:context:)();
    return swift_release();
  }
  return result;
}

void sub_1BABE128C()
{
  FormatTextNodeAlternativeLogic.bind(binder:context:)();
}

uint64_t sub_1BABE12A0()
{
  swift_retain();
  FormatTextNodeAlternativeLogic.bind(binder:context:)();
  return swift_release();
}

uint64_t sub_1BABE1304()
{
  return FormatTextNodeAlternativeLogic.LogicalOperator.bind(binder:context:)();
}

uint64_t sub_1BABE1318(unint64_t a1, uint64_t a2)
{
  return FormatTextNodeAttachment.bind(binder:context:)(a1, a2);
}

void sub_1BABE132C(uint64_t a1, uint64_t a2)
{
  FormatTextNodeDateTimeFormat.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABE1340(uint64_t a1, uint64_t a2)
{
  return FormatTextNodeFormat.bind(binder:context:)(a1, a2);
}

_QWORD *FormatTextNodeFormat.Token.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *result;

  v6 = *(_QWORD *)(v2 + 24);
  swift_retain();
  FormatTextContent.bind(binder:context:)();
  result = (_QWORD *)swift_release();
  if (!v3)
  {
    if (v6)
      return FormatTextNodeStyle.bind(binder:context:)(a1, a2);
  }
  return result;
}

_QWORD *sub_1BABE13E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *result;

  v6 = *(_QWORD *)(v2 + 24);
  swift_retain();
  FormatTextContent.bind(binder:context:)();
  result = (_QWORD *)swift_release();
  if (!v3)
  {
    if (v6)
      return FormatTextNodeStyle.bind(binder:context:)(a1, a2);
  }
  return result;
}

uint64_t sub_1BABE146C(uint64_t a1, uint64_t a2)
{
  return FormatTextNodeLink.bind(binder:context:)(a1, a2);
}

void sub_1BABE1480(uint64_t a1, uint64_t a2)
{
  FormatTextNodeNumber.bind(binder:context:)(a1, a2);
}

uint64_t FormatUnderline.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 8);
  if ((~v1 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatColor.bind(binder:context:)();
    return sub_1BA5E800C(v1);
  }
  return result;
}

_QWORD *FormatTextNodeStyle.Selector.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[128];
  _QWORD v41[16];
  __int128 v42[8];
  _QWORD v43[17];
  uint64_t v44;

  v4 = v3;
  v7 = *(_QWORD *)(v2 + 16);
  sub_1BA760F3C(v2 + 24, (uint64_t)v43, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  v8 = *(_QWORD *)(v2 + 152);
  v10 = *(_QWORD *)(v2 + 168);
  v9 = *(_QWORD *)(v2 + 176);
  v11 = *(_QWORD *)(v2 + 184);
  v12 = *(_QWORD *)(v2 + 192);
  v35 = *(_QWORD *)(v2 + 200);
  v13 = *(_QWORD *)(v2 + 216);
  v34 = *(_QWORD *)(v2 + 208);
  v14 = *(_QWORD *)(v2 + 224);
  v29 = *(_QWORD *)(v2 + 232);
  v30 = *(_QWORD *)(v2 + 160);
  v44 = *(unsigned __int8 *)(v2 + 240);
  v39 = *(_QWORD *)(v2 + 480);
  v28 = *(_QWORD *)(v2 + 488);
  v36 = *(_QWORD *)(v2 + 496);
  v37 = *(_QWORD *)(v2 + 472);
  v27 = *(_QWORD *)(v2 + 504);
  v38 = *(_QWORD *)(v2 + 520);
  v32 = v9;
  v33 = v11;
  v31 = v10;
  if ((~v7 & 0xF000000000000007) != 0)
  {
    *(_QWORD *)&v42[0] = v7;
    swift_retain();
    FormatFont.bind(binder:context:)();
    if (v3)
      return (_QWORD *)sub_1BA6E6CD8(v7);
    sub_1BA6E6CD8(v7);
  }
  sub_1BA760F3C((uint64_t)v43, (uint64_t)v42, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  result = (_QWORD *)sub_1BAB05F98((uint64_t)v42);
  if ((_DWORD)result != 1)
  {
    sub_1BA7439D4(v42, (uint64_t)v40);
    sub_1BA760F3C((uint64_t)v43, (uint64_t)v41, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA6A0C50(v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
    FormatFill.bind(binder:context:)();
    if (v3)
      return sub_1BA6A0C50(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
    result = sub_1BA6A0C50(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
  }
  if (v8)
  {
    result = (_QWORD *)sub_1BAB73D7C(a1, a2, v8);
    if (v3)
      return result;
  }
  v16 = v44;
  if ((_DWORD)v44 != 254)
  {
    v41[0] = v12;
    swift_retain();
    FormatColor.bind(binder:context:)();
    if (v3)
      return (_QWORD *)sub_1BA6E8A78(v30, v31, v32, v33, v12, v35, v34, v13, v14, v29, v16);
    v21 = v13;
    v22 = v34;
    v23 = v35;
    switch((int)v34)
    {
      case 0:
        break;
      case 1:
      case 4:
        sub_1BABD5EE8(a1, a2);
        break;
      case 2:
      case 3:
      case 5:
        sub_1BABD5EE8(a1, a2);
        sub_1BABD5EE8(a1, a2);
        v4 = 0;
        break;
      default:
        v22 = v34;
        v23 = v35;
        break;
    }
    result = (_QWORD *)sub_1BA6E8A78(v30, v31, v32, v33, v12, v23, v22, v21, v14, v29, v44);
    v17 = v37;
    if (!v37)
      goto LABEL_25;
    goto LABEL_13;
  }
  v17 = v37;
  if (v37)
  {
LABEL_13:
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain_n();
      v19 = (_BYTE *)(v17 + 40);
      do
      {
        if ((*v19 & 1) == 0)
        {
          v41[0] = *((_QWORD *)v19 - 1);
          v20 = v41[0];
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v4)
          {
            sub_1BA72C46C(v20, 0);
            sub_1BA72C46C(v20, 0);
            return (_QWORD *)swift_bridgeObjectRelease_n();
          }
          sub_1BA72C46C(v20, 0);
          sub_1BA72C46C(v20, 0);
        }
        v19 += 16;
        --v18;
      }
      while (v18);
      result = (_QWORD *)swift_bridgeObjectRelease_n();
    }
  }
LABEL_25:
  if (v39 != 9)
  {
    if ((~v28 & 0xF000000000000007) != 0)
    {
      v41[0] = v28;
      sub_1BA5E7FF4(v28);
      FormatColor.bind(binder:context:)();
      result = (_QWORD *)sub_1BA6E8A90(v39, v28);
      if (v4)
        return result;
    }
    else
    {
      result = (_QWORD *)sub_1BA6E8A90(v39, v28);
    }
  }
  if (v36 != 9)
  {
    if ((~v27 & 0xF000000000000007) != 0)
    {
      v41[0] = v27;
      sub_1BA5E7FF4(v27);
      FormatColor.bind(binder:context:)();
      result = (_QWORD *)sub_1BA6E8A90(v36, v27);
      if (v4)
        return result;
    }
    else
    {
      result = (_QWORD *)sub_1BA6E8A90(v36, v27);
    }
  }
  if (v38)
  {
    v24 = *(_QWORD *)(v38 + 16);
    if (v24)
    {
      swift_bridgeObjectRetain_n();
      v25 = (_BYTE *)(v38 + 40);
      do
      {
        if ((*v25 & 1) == 0)
        {
          v41[0] = *((_QWORD *)v25 - 1);
          v26 = v41[0];
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v26, 0);
          sub_1BA72C46C(v26, 0);
          if (v4)
            break;
        }
        v25 += 16;
        --v24;
      }
      while (v24);
      return (_QWORD *)swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

_QWORD *sub_1BABE1B0C(uint64_t a1, uint64_t a2)
{
  return FormatTextNodeStyle.Selector.bind(binder:context:)(a1, a2);
}

void sub_1BABE1B20()
{
  FormatTextSize.bind(binder:context:)();
}

void sub_1BABE1B34()
{
  FormatTranslate.bind(binder:context:)();
}

uint64_t FormatType.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v6 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v10 = *(_QWORD *)(v2 + 64);
  v11 = *(_QWORD *)(v2 + 72);
  v12 = *(_BYTE *)(v2 + 80);
  sub_1BA709DE8(v6, v7, v8, v9, v10, v11, v12);
  FormatTypeDefinition.bind(binder:context:)(a1, a2);
  return sub_1BA6C0C20(v6, v7, v8, v9, v10, v11, v12);
}

void FormatTypeDefinition.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;

  v6 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v2 + 48);
  if (v10 >> 6)
  {
    v11 = *(_QWORD *)v2;
    v12 = *(_QWORD *)(v2 + 8);
    v14 = *(_QWORD *)(v2 + 16);
    v13 = *(_QWORD *)(v2 + 24);
    v15 = *(_QWORD *)(v2 + 32);
    v16 = *(_QWORD *)(v2 + 40);
    if (v10 >> 6 == 1)
    {
      if ((v10 & 1) != 0)
        return;
      v17 = *(_QWORD *)(v14 + 16);
      v46 = *(_QWORD *)(v14 + 24);
      v58 = v16;
      v44 = *(_QWORD *)(v14 + 32);
      v18 = *(unsigned __int8 *)(v14 + 40);
      v45 = *(unsigned __int8 *)(v14 + 41);
      v53 = v17;
      v54 = v46;
      v55 = v44;
      v56 = v18;
      v57 = v45;
      v49 = v11;
      v50 = v12;
      v19 = v13;
      v20 = v15;
      sub_1BA709DE8(v11, v12, v14, v13, v15, v16, v10);
      v51 = v19;
      v52 = v20;
      v21 = v20;
      v22 = v44;
      sub_1BA7261E0(v14, v19, v21, v58, 0);
      swift_retain();
      v48 = v17;
      v23 = v17;
      v24 = v46;
      LODWORD(v47) = v18;
      v25 = v18;
      v26 = v45;
      sub_1BAC65170(v23, v46, v22, v25, v45, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
      FormatCommandBinding.bind(binder:context:)();
      if (v3)
      {
        sub_1BAC65170(v48, v24, v22, v47, v26, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
        swift_release();
        v27 = v51;
        v28 = v52;
        v29 = v58;
        sub_1BA6C1F54(v14, v51, v52, v58, 0);
        v30 = v49;
        v31 = v50;
        v32 = v14;
        v33 = v27;
        v34 = v28;
      }
      else
      {
        v40 = v26;
        v29 = v58;
        v41 = v52;
        sub_1BAC65170(v48, v24, v22, v47, v40, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
        swift_release();
        v42 = v51;
        sub_1BAB72EEC(a1, a2, v51);
        sub_1BB5AC740(a1, a2);
        sub_1BA6C1F54(v14, v42, v41, v29, 0);
        v30 = v49;
        v31 = v50;
        v32 = v14;
        v33 = v42;
        v34 = v41;
      }
      v38 = v29;
      v39 = v10;
    }
    else
    {
      v58 = *(_QWORD *)(v2 + 40);
      v35 = *(_QWORD *)(v11 + 16);
      if (!v35)
        return;
      v50 = v12;
      v51 = v13;
      v47 = v14;
      v52 = v15;
      LODWORD(v48) = v10;
      v36 = v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v37 = *(_QWORD *)(v7 + 72);
      v49 = v11;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BA4C2DD8(v36, (uint64_t)v9, type metadata accessor for FormatPropertyDefinition);
        FormatPropertyDefinition.bind(binder:context:)(a1, a2);
        if (v3)
          break;
        sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatPropertyDefinition);
        v36 += v37;
        if (!--v35)
          goto LABEL_12;
      }
      sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatPropertyDefinition);
LABEL_12:
      v30 = v49;
      v31 = v50;
      v32 = v47;
      v33 = v51;
      v34 = v52;
      v38 = v58;
      v39 = v48;
    }
    sub_1BA6C0C20(v30, v31, v32, v33, v34, v38, v39);
  }
}

uint64_t sub_1BABE1F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v6 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v10 = *(_QWORD *)(v2 + 64);
  v11 = *(_QWORD *)(v2 + 72);
  v12 = *(_BYTE *)(v2 + 80);
  sub_1BA709DE8(v6, v7, v8, v9, v10, v11, v12);
  FormatTypeDefinition.bind(binder:context:)(a1, a2);
  return sub_1BA6C0C20(v6, v7, v8, v9, v10, v11, v12);
}

void sub_1BABE2008(uint64_t a1, uint64_t a2)
{
  FormatTypeDefinition.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABE201C()
{
  return sub_1BA54AC58();
}

uint64_t sub_1BABE2034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatUnboundValue.bind(binder:context:)(a1, a2, a3);
}

uint64_t sub_1BABE2048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 8);
  if ((~v1 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatColor.bind(binder:context:)();
    return sub_1BA5E800C(v1);
  }
  return result;
}

uint64_t sub_1BABE20BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FormatUserInterfaceValue.bind(binder:context:)(a1, a2, a3);
}

uint64_t FormatVariableNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = a2;
  v5 = type metadata accessor for FormatOptionsNodeStatement();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = *(_QWORD *)(v2 + 32);
  v10 = *(_QWORD *)(result + 16);
  if (v10)
  {
    v11 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(_QWORD *)(v2 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      FormatOptionsNodeStatementValue.bind(binder:context:)(a1, v14);
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      if (v3)
        break;
      v11 += v12;
      --v10;
    }
    while (v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FormatVideoProperties.bind(binder:context:)(uint64_t a1, char *a2)
{
  return sub_1BAC67944(a2);
}

uint64_t sub_1BABE2204(uint64_t a1, char *a2)
{
  return FormatVideoNode.bind(binder:context:)(a1, a2);
}

void sub_1BABE2224()
{
  FormatVideoNodeContent.bind(binder:context:)();
}

uint64_t sub_1BABE2238(uint64_t a1, uint64_t a2)
{
  return FormatVideoNodeStyle.bind(binder:context:)(a1, a2);
}

uint64_t FormatVideoNodeStyle.Selector.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABE24A4(a1, a2);
}

uint64_t sub_1BABE226C(uint64_t a1, uint64_t a2)
{
  return FormatVideoNodeStyle.Selector.bind(binder:context:)(a1, a2);
}

void sub_1BABE2280(uint64_t a1, uint64_t a2)
{
  FormatVideoPlayerContent.bind(binder:context:)(a1, a2);
}

void FormatVideoPlayerLive.bind(binder:context:)()
{
  sub_1BAC677C8();
}

void sub_1BABE22AC()
{
  sub_1BAC677C8();
}

uint64_t FormatVideoPlayerOverlayContent.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - v7;
  v9 = *(_QWORD *)v2;
  v10 = *(_QWORD *)(v2 + 8);
  v11 = *(_QWORD *)(v2 + 16);
  v12 = *(_QWORD *)(v2 + 40);
  v18 = *(_QWORD *)(v2 + 32);
  v19 = v12;
  v13 = *(unsigned __int8 *)(v2 + 48);
  v20 = v9;
  swift_retain();
  FormatAsyncImageContent.bind(binder:context:)();
  result = swift_release();
  if (!v3)
  {
    v20 = v10;
    sub_1BA738D44(v10);
    FormatPublisherLogoSizing.bind(binder:context:)();
    result = sub_1BA738D54(v10);
    if (v11)
      result = FormatImageNodeStyle.bind(binder:context:)(a1, a2);
    if (v13)
    {
      v16 = v18;
      v15 = v19;
      sub_1BA69C808(v18, v19, 1);
      v17 = sub_1BA862600((uint64_t)&unk_1E7254BE8);
      sub_1BB3757A0(v16, v15, v17, 1, (uint64_t)v8);
      sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      return sub_1BA69C828(v16, v15, 1);
    }
  }
  return result;
}

unint64_t sub_1BABE2470(unint64_t a1, uint64_t a2)
{
  return FormatVideoPlayerNode.bind(binder:context:)(a1, a2);
}

uint64_t FormatVideoPlayerNodeStyle.Selector.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BABE24A4(a1, a2);
}

uint64_t sub_1BABE24A4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  v5 = result;
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v27 = *(_QWORD *)(v2 + 64);
  v28 = *(_QWORD *)(v2 + 72);
  v29 = *(_QWORD *)(v2 + 80);
  v30 = *(_QWORD *)(v2 + 88);
  v33 = *(_QWORD *)(v2 + 96);
  v9 = *(_QWORD *)(v2 + 112);
  v31 = *(_QWORD *)(v2 + 104);
  v10 = *(_QWORD *)(v2 + 120);
  v26 = *(_QWORD *)(v2 + 128);
  v32 = *(unsigned __int8 *)(v2 + 144);
  v11 = *(_QWORD *)(v2 + 152);
  v25 = *(_QWORD *)(v2 + 136);
  if (v6)
  {
    v24 = *(_QWORD *)(v2 + 112);
    v12 = *(_QWORD *)(v6 + 16);
    if (v12)
    {
      v21 = *(_QWORD *)(v2 + 32);
      v22 = *(_QWORD *)(v2 + 120);
      v23 = *(_QWORD *)(v2 + 152);
      swift_bridgeObjectRetain_n();
      v13 = (_BYTE *)(v6 + 40);
      do
      {
        if ((*v13 & 1) == 0)
        {
          v14 = *((_QWORD *)v13 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          if (v3)
          {
            sub_1BA72C46C(v14, 0);
            sub_1BA72C46C(v14, 0);
            return swift_bridgeObjectRelease_n();
          }
          sub_1BA72C46C(v14, 0);
          sub_1BA72C46C(v14, 0);
        }
        v13 += 16;
        --v12;
      }
      while (v12);
      result = swift_bridgeObjectRelease_n();
      v10 = v22;
      v11 = v23;
      v9 = v24;
      v8 = v21;
    }
    else
    {
      v9 = *(_QWORD *)(v2 + 112);
    }
  }
  if ((~v7 & 0xF000000000000007) != 0)
  {
    v15 = v8;
    swift_retain();
    FormatBackground.bind(binder:context:)();
    if (v3)
      return sub_1BA6E6CD8(v7);
    result = sub_1BA6E6CD8(v7);
    v8 = v15;
  }
  if (!v8 || (result = sub_1BAB73D7C(v5, a2, v8), !v3))
  {
    if (v32 != 254)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v3)
        return sub_1BA6E8A78(v27, v28, v29, v30, v33, v31, v9, v10, v26, v25, v32);
      switch(v32)
      {
        case 1:
          v16 = v31;
          sub_1BABD5EE8(v5, a2);
          v17 = 1;
          goto LABEL_29;
        case 2:
          v18 = v31;
          sub_1BABD5EE8(v5, a2);
          v19 = v26;
          sub_1BABD5EE8(v5, a2);
          v20 = 2;
          goto LABEL_31;
        case 3:
          v18 = v31;
          sub_1BABD5EE8(v5, a2);
          v19 = v26;
          sub_1BABD5EE8(v5, a2);
          v20 = 3;
          goto LABEL_31;
        case 4:
          v16 = v31;
          sub_1BABD5EE8(v5, a2);
          v17 = 4;
LABEL_29:
          result = sub_1BA6E8A78(v27, v28, v29, v30, v33, v16, v9, v10, v26, v25, v17);
          break;
        case 5:
          v18 = v31;
          sub_1BABD5EE8(v5, a2);
          v19 = v26;
          sub_1BABD5EE8(v5, a2);
          v20 = 5;
LABEL_31:
          result = sub_1BA6E8A78(v27, v28, v29, v30, v33, v18, v9, v10, v19, v25, v20);
          break;
        default:
          result = sub_1BA6E8A78(v27, v28, v29, v30, v33, v31, v9, v10, v26, v25, v32);
          break;
      }
    }
    if ((~v11 & 0xF000000000000007) != 0)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      return sub_1BA5E800C(v11);
    }
  }
  return result;
}

uint64_t sub_1BABE28FC(unint64_t a1, uint64_t a2)
{
  return FormatVideoPlayerOverlayContent.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABE2910(uint64_t a1, char *a2)
{
  return sub_1BAC67944(a2);
}

uint64_t sub_1BABE2928(uint64_t a1, uint64_t a2)
{
  return FormatViewNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABE2948(uint64_t a1, uint64_t a2)
{
  return FormatViewNodeStyle.bind(binder:context:)(a1, a2);
}

uint64_t FormatViewNodeStyle.Selector.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v6 = result;
  v8 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v24 = *(_QWORD *)(v2 + 56);
  v25 = *(_QWORD *)(v2 + 64);
  v26 = *(_QWORD *)(v2 + 72);
  v27 = *(_QWORD *)(v2 + 80);
  v9 = *(_QWORD *)(v2 + 112);
  v28 = *(_QWORD *)(v2 + 104);
  v29 = *(_QWORD *)(v2 + 96);
  v10 = *(_QWORD *)(v2 + 120);
  v23 = *(_QWORD *)(v2 + 128);
  v11 = *(unsigned __int8 *)(v2 + 136);
  v30 = *(_QWORD *)(v2 + 144);
  v31 = *(_QWORD *)(v2 + 88);
  if ((~v8 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatBackground.bind(binder:context:)();
    if (v3)
      return sub_1BA6E6CD8(v8);
    result = sub_1BA6E6CD8(v8);
  }
  if (!v7 || (result = sub_1BAB73D7C(v6, a2, v7), !v3))
  {
    if (v11 != 254)
    {
      swift_retain();
      FormatColor.bind(binder:context:)();
      if (v3)
        return sub_1BA6E8A78(v24, v25, v26, v27, v31, v29, v28, v9, v10, v23, v11);
      v15 = v9;
      v16 = v28;
      v17 = v29;
      v18 = a2;
      v19 = v6;
      v20 = v10;
      v21 = v18;
      switch(v11)
      {
        case 0:
          goto LABEL_25;
        case 1:
          sub_1BABD5EE8(v19, v18);
          v22 = 1;
          goto LABEL_26;
        case 2:
          sub_1BABD5EE8(v19, v18);
          sub_1BABD5EE8(v19, v21);
          v4 = 0;
          v22 = 2;
          goto LABEL_26;
        case 3:
          sub_1BABD5EE8(v19, v18);
          sub_1BABD5EE8(v19, v21);
          v4 = 0;
          v22 = 3;
LABEL_26:
          result = sub_1BA6E8A78(v24, v25, v26, v27, v31, v29, v28, v15, v20, v23, v22);
          break;
        case 4:
          sub_1BABD5EE8(v19, v18);
          goto LABEL_25;
        case 5:
          sub_1BABD5EE8(v19, v18);
          sub_1BABD5EE8(v19, v21);
          v4 = 0;
          goto LABEL_25;
        default:
          v16 = v28;
          v17 = v29;
          v20 = v18;
LABEL_25:
          result = sub_1BA6E8A78(v24, v25, v26, v27, v31, v17, v16, v15, v20, v23, v11);
          break;
      }
    }
    if (v30)
    {
      v12 = *(_QWORD *)(v30 + 16);
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        v13 = (_BYTE *)(v30 + 40);
        do
        {
          if ((*v13 & 1) == 0)
          {
            v14 = *((_QWORD *)v13 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)();
            sub_1BA72C46C(v14, 0);
            sub_1BA72C46C(v14, 0);
            if (v4)
              break;
          }
          v13 += 16;
          --v12;
        }
        while (v12);
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1BABE2D44(uint64_t a1, uint64_t a2)
{
  return FormatViewNodeStyle.Selector.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BABE2D58(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *v2;
  if ((unint64_t)*v2 >> 62 == 1)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(_QWORD *)(v3 + 24);
    sub_1BA67D3F4(v6);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(v5, a2, v6, v7);
    sub_1BA6EEDB4(v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABE2DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 8);
  v5 = *(_BYTE *)(v0 + 17);
  sub_1BA740408(*(_QWORD *)v0, v4, v2, v5);
  FormatSymbolConfig.bind(binder:context:)();
  return sub_1BA740434(v1, v4, v2, v5);
}

void sub_1BABE2E80()
{
  sub_1BAC64FF0();
}

void FormatWebEmbedNodeContent.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[3];
  char v19;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18[-1] - v7;
  v9 = *v2;
  v10 = (unint64_t)*v2 >> 62;
  if ((_DWORD)v10)
  {
    if ((_DWORD)v10 != 1)
    {
      v12 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BABC2F64(a1, a2, v12, v11);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else if ((*(_BYTE *)(v9 + 40) & 1) != 0)
  {
    v14 = *(_QWORD *)(v9 + 24);
    v13 = *(_QWORD *)(v9 + 32);
    v15 = *(_QWORD *)(v9 + 16);
    v18[0] = v15;
    v18[1] = v14;
    v18[2] = v13;
    v19 = 6;
    sub_1BAC68C24(v15, v14, v13, 1);
    v16 = sub_1BB6B84D4(v18, &v19);
    if (!v3)
    {
      sub_1BB3757A0(v15, v14, v16, 1, (uint64_t)v8);
      sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1BABE3010(uint64_t a1, uint64_t a2)
{
  return FormatWebEmbedNode.bind(binder:context:)(a1, a2);
}

void sub_1BABE3030(uint64_t a1, uint64_t a2)
{
  FormatWebEmbedNodeContent.bind(binder:context:)(a1, a2);
}

void sub_1BABE3044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BAC39E7C();
  if (!v4)
  {
    sub_1BABFCF90(a1, a3);
    swift_retain();
    sub_1BAC44B58(a1, a4);
    swift_release();
  }
}

void sub_1BABE30EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), void (*a6)(uint64_t))
{
  uint64_t v6;

  sub_1BAC39E7C();
  if (!v6)
  {
    a5(a1, a3);
    a6(a1);
  }
}

void sub_1BABE317C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BAC38BF0();
  if (!v3)
  {
    v6 = *(_QWORD *)(v2 + 8);
    v8 = a2[2];
    v7 = a2[3];
    v9 = a2[4];
    v10 = type metadata accessor for FormatCommandValue.CaseValue(0, v8, v7, v9);
    sub_1BB1972C8(a1, v6, v10, (uint64_t)&off_1E729D1B0);
    v11 = type metadata accessor for FormatCommandValue.DefaultValue(0, v8, v7, v9);
    sub_1BAC2FFE8(a1, v11);
  }
}

uint64_t sub_1BABE3250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = v4[3];
  v8 = *(_QWORD *)(*v4 + 80);
  v9 = type metadata accessor for FormatCommandActionValue.CaseValue(0, v8, a3, a4);
  result = sub_1BB1972C8(a1, v7, v9, (uint64_t)&off_1E729D1D0);
  if (!v5)
  {
    v13 = type metadata accessor for FormatCommandActionValue.DefaultValue(0, v8, v11, v12);
    return sub_1BAC2FFE8(a1, v13);
  }
  return result;
}

uint64_t sub_1BABE32EC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  v5 = v4;
  if ((*(_QWORD *)v3 & 0x8000000000000000) != 0)
  {
    v8 = result;
    v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 16) + 24);
    swift_retain();
    sub_1BABF3C34(v8, v9);
    if (!v5)
      sub_1BABE32EC(v8, a2, a3);
    return swift_release();
  }
  return result;
}

void sub_1BABE338C()
{
  uint64_t v0;
  int v1;

  swift_beginAccess();
  if (*(_BYTE *)(v0 + 40))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X11 }
}

void sub_1BABE3400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BB5E5FDC(v1);
  if (!v0)
  {
    swift_beginAccess();
    v4 = *(unsigned __int16 *)(v2 + 72);
    if (v4 >> 9 <= 0x7E)
    {
      v6 = *(_QWORD *)(v2 + 48);
      v5 = *(_QWORD *)(v2 + 56);
      v7 = *(_QWORD *)(v2 + 64);
      if ((v4 & 0x8000) != 0)
      {
        sub_1BAC39E7C();
      }
      else
      {
        v8 = *(_QWORD *)(v6 + 16);
        if (v8)
        {
          sub_1BA72FFC4(*(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_WORD *)(v2 + 72));
          *(_QWORD *)(v3 - 72) = v7;
          sub_1BA7AAE84(v6, v5, v7, v4);
          v9 = (_BYTE *)(v6 + 40);
          do
          {
            if ((*v9 & 1) == 0)
            {
              v10 = *((_QWORD *)v9 - 1);
              swift_retain_n();
              sub_1BA9F22C4();
              sub_1BA72C46C(v10, 0);
              sub_1BA72C46C(v10, 0);
            }
            v9 += 16;
            --v8;
          }
          while (v8);
          v11 = *(_QWORD *)(v3 - 72);
          sub_1BA72E4BC(v6, v5, v11, v4);
          sub_1BA72E4BC(v6, v5, v11, v4);
        }
      }
    }
  }
}

void sub_1BABE3560()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 8))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X11 }
}

uint64_t sub_1BABE35A0(uint64_t a1)
{
  return sub_1BB5E5FDC(a1);
}

void sub_1BABE35BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)v0;
  v3 = *(__int16 *)(v0 + 24);
  if (v3 < 0)
    __asm { BR              X10 }
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v8 = *(_QWORD *)(v0 + 16);
    v5 = *(_QWORD *)(v0 + 8);
    swift_bridgeObjectRetain();
    v6 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v6 & 1) == 0)
      {
        v7 = *((_QWORD *)v6 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v7, 0);
        sub_1BA72C46C(v7, 0);
        if (v1)
          break;
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    sub_1BA7E0800(v2, v5, v8, v3);
  }
}

void sub_1BABE383C()
{
  sub_1BABE338C();
}

void sub_1BABE385C()
{
  sub_1BABE3560();
}

void sub_1BABE3870(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v4 = *(_QWORD *)(v1 + 64);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v5; ++i)
      {
        v7 = *(_QWORD *)(v4 + 8 * i + 32);
        sub_1BA7196DC(v7);
        sub_1BAC2F274();
        sub_1BA719340(v7);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v8 = *(_QWORD *)(v1 + 80);
    if (v8 >> 62 == 1)
    {
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      sub_1BA67D3F4(v8);
      sub_1BA67D3F4(v9);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v9, v10);
      sub_1BA6EEDB4(v9);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v8);
    }
  }
}

void sub_1BABE39D4()
{
  __asm { BR              X11 }
}

uint64_t sub_1BABE3A20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v4 & 1) == 0)
      {
        v5 = *((_QWORD *)v4 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v5, 0);
        sub_1BA72C46C(v5, 0);
        if (v1)
          break;
      }
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BABE429C(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
}

uint64_t sub_1BABE8B64(uint64_t a1, uint64_t a2)
{
  return sub_1BABE8BAC(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAC350FC, (void (*)(uint64_t, uint64_t))sub_1BABE8B64);
}

uint64_t sub_1BABE8B88(uint64_t a1, uint64_t a2)
{
  return sub_1BABE8BAC(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAC35120, (void (*)(uint64_t, uint64_t))sub_1BABE8B88);
}

uint64_t sub_1BABE8BAC(uint64_t result, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[5];

  v5 = v4;
  v49 = *(_QWORD *)(a2 + 16);
  if (v49)
  {
    v6 = result;
    v7 = a2 + 32;
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = &unk_1ED3BE000;
    v48 = v7;
    while (1)
    {
      v50 = v8;
      v10 = (uint64_t *)(v7 + 24 * v8);
      v11 = *v10;
      v12 = v10[1];
      v13 = v10[2];
      v14 = v9[255];
      swift_bridgeObjectRetain_n();
      swift_retain();
      if (v14 != -1)
        swift_once();
      v51[0] = v11;
      v51[1] = v12;
      v51[4] = v12;
      v15 = sub_1BA6E583C(v51);
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        v17 = (uint64_t *)(v15 + 64);
        while (1)
        {
          v19 = *(v17 - 1);
          v18 = *v17;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BB043358(v6, v19, v18);
          if (v5)
            break;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v17 += 5;
          if (!--v16)
            goto LABEL_9;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13 < 0)
      {
        v21 = *(_QWORD *)((v13 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        v20 = *(_QWORD *)((v13 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
        if (v21 < 0)
        {
          v23 = *(_QWORD *)(v21 + 16);
          v22 = *(_QWORD *)(v21 + 24);
          if (v23 < 0)
          {
            v24 = *(_QWORD *)(v23 + 16);
            v25 = *(_QWORD *)(v23 + 24);
            if (v24 < 0)
            {
              v44 = *(_QWORD *)(v21 + 24);
              v45 = *(_QWORD *)(v23 + 24);
              v26 = *(_QWORD *)(v24 + 16);
              v27 = *(_QWORD *)(v24 + 24);
              if (v26 < 0)
              {
                v43 = *(_QWORD *)(v24 + 24);
                v29 = *(_QWORD *)(v26 + 16);
                v30 = *(_QWORD *)(v26 + 24);
                if (v29 < 0)
                {
                  v42 = *(_QWORD *)(v26 + 24);
                  v31 = *(_QWORD *)(v29 + 16);
                  v28 = *(_QWORD *)(v24 + 24);
                  if (v31 < 0)
                  {
                    v40 = *(_QWORD *)(v29 + 24);
                    v33 = *(_QWORD *)(v31 + 16);
                    v41 = *(_QWORD *)(v31 + 24);
                    if (v33 < 0)
                    {
                      v34 = *(_QWORD *)(v33 + 16);
                      v35 = *(_QWORD *)(v33 + 24);
                      v39 = v35;
                      if (v34 < 0)
                      {
                        v37 = *(_QWORD *)(v34 + 16);
                        v38 = *(_QWORD *)(v34 + 24);
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_retain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        v32 = v40;
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        a3(v6, v37, v38);
                        if (v5)
                        {
                          swift_release();
                          swift_bridgeObjectRelease();
                          swift_release_n();
                          swift_bridgeObjectRelease();
                          swift_release_n();
                          swift_bridgeObjectRelease();
                          goto LABEL_59;
                        }
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_release();
                        v36 = v39;
                      }
                      else
                      {
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_retain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        v36 = v35;
                        v32 = v40;
                        swift_bridgeObjectRetain();
                        swift_retain_n();
                        swift_bridgeObjectRetain();
                      }
                      swift_bridgeObjectRetain();
                      a4(v6, v36);
                      if (v5)
                      {
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_release_n();
                        swift_bridgeObjectRelease_n();
LABEL_59:
                        swift_release();
                        swift_release();
                        swift_bridgeObjectRelease();
                        goto LABEL_60;
                      }
                      swift_release();
                      swift_bridgeObjectRelease_n();
                      swift_release();
                    }
                    else
                    {
                      swift_retain();
                      swift_bridgeObjectRetain();
                      swift_retain();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                      swift_retain_n();
                      swift_bridgeObjectRetain();
                      swift_retain_n();
                      v32 = v40;
                      swift_bridgeObjectRetain();
                    }
                    swift_bridgeObjectRetain();
                    a4(v6, v41);
                    if (v5)
                    {
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_release_n();
                      swift_bridgeObjectRelease_n();
LABEL_60:
                      swift_release();
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_release();
                      goto LABEL_61;
                    }
                    swift_release();
                    swift_bridgeObjectRelease_n();
                    swift_release();
                  }
                  else
                  {
                    v32 = *(_QWORD *)(v29 + 24);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                  }
                  swift_bridgeObjectRetain();
                  a4(v6, v32);
                  if (v5)
                  {
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease_n();
                    swift_release();
LABEL_61:
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release();
                    goto LABEL_62;
                  }
                  swift_release();
                  swift_bridgeObjectRelease_n();
                  swift_release();
                  v30 = v42;
                }
                else
                {
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  v28 = v43;
                  swift_bridgeObjectRetain();
                }
                swift_bridgeObjectRetain();
                a4(v6, v30);
                if (v5)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease_n();
                  swift_release();
LABEL_62:
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_63;
                }
                swift_release();
                swift_bridgeObjectRelease_n();
                swift_release();
              }
              else
              {
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                v28 = v27;
              }
              swift_bridgeObjectRetain();
              a4(v6, v28);
              if (v5)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
                swift_release();
LABEL_63:
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_64;
              }
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_release();
              v22 = v44;
              v25 = v45;
            }
            else
            {
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRetain();
            a4(v6, v25);
            if (v5)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease_n();
LABEL_64:
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
LABEL_65:
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              return swift_bridgeObjectRelease();
            }
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
          }
          else
          {
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain_n();
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRetain();
          a4(v6, v22);
          if (v5)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_65;
          }
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
        }
        else
        {
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
        }
        swift_bridgeObjectRetain();
        a4(v6, v20);
        if (v5)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          return swift_release();
        }
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_release();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      v8 = v50 + 1;
      v7 = v48;
      v9 = (_QWORD *)&unk_1ED3BE000;
      if (v50 + 1 == v49)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BABE9768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t result;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (i = a2 + 64; ; i += 40)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BAC35E00();
      if (v3)
        break;
      swift_release();
      swift_retain();
      sub_1BA9F22C4();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v4)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

void sub_1BABE98E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return;
  swift_bridgeObjectRetain();
  v6 = (uint64_t *)(a2 + 48);
  while (1)
  {
    v8 = *(v6 - 2);
    v7 = *(v6 - 1);
    v9 = *v6;
    if ((~v8 & 0xF000000000000007) != 0)
    {
      sub_1BA5E7FF4(v8);
      sub_1BA6E6C68(v7);
      sub_1BA6E6C68(v9);
      sub_1BA5E7FF4(v8);
      sub_1BA6E6C68(v7);
      sub_1BA6E6C68(v9);
      sub_1BA5E7FF4(v8);
      sub_1BAC35E00();
      if (v3)
      {
        sub_1BA5E800C(v8);
        goto LABEL_17;
      }
      sub_1BA5E800C(v8);
      if ((~v7 & 0xF000000000000007) == 0)
      {
LABEL_7:
        if ((~v9 & 0xF000000000000007) == 0)
          goto LABEL_3;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1BA5E7FF4(*(v6 - 2));
      sub_1BA6E6C68(v7);
      sub_1BA6E6C68(v9);
      sub_1BA5E7FF4(v8);
      sub_1BA6E6C68(v7);
      sub_1BA6E6C68(v9);
      if ((~v7 & 0xF000000000000007) == 0)
        goto LABEL_7;
    }
    swift_retain();
    sub_1BA9F22C4();
    if (v3)
      break;
    sub_1BA6E6CD8(v7);
    if ((~v9 & 0xF000000000000007) == 0)
    {
LABEL_3:
      sub_1BA5E800C(v8);
      sub_1BA6E6CD8(v7);
      sub_1BA6E6CD8(v9);
      sub_1BA5E800C(v8);
      sub_1BA6E6CD8(v7);
      sub_1BA6E6CD8(v9);
      goto LABEL_4;
    }
LABEL_13:
    swift_retain();
    sub_1BA9F22C4();
    sub_1BA6E6CD8(v9);
    sub_1BA5E800C(v8);
    sub_1BA6E6CD8(v7);
    sub_1BA6E6CD8(v9);
    sub_1BA5E800C(v8);
    sub_1BA6E6CD8(v7);
    sub_1BA6E6CD8(v9);
    if (v3)
      goto LABEL_18;
LABEL_4:
    v6 += 3;
    if (!--v4)
      goto LABEL_18;
  }
  sub_1BA6E6CD8(v7);
LABEL_17:
  sub_1BA5E800C(v8);
  sub_1BA6E6CD8(v7);
  sub_1BA6E6CD8(v9);
  sub_1BA5E800C(v8);
  sub_1BA6E6CD8(v7);
  sub_1BA6E6CD8(v9);
LABEL_18:
  swift_bridgeObjectRelease();
}

uint64_t sub_1BABE9B20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = *(_QWORD *)(a2 + 8 * v5 + 32);
      sub_1BA7196DC(v6);
      sub_1BAC2F274();
      if (v2)
        break;
      ++v5;
      sub_1BA719340(v6);
      if (v3 == v5)
        return swift_bridgeObjectRelease();
    }
    sub_1BA719340(v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABE9BC8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57[5];

  v3 = v2;
  v55 = *(_QWORD *)(a2 + 16);
  if (!v55)
    return result;
  v4 = result;
  v5 = a2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = &unk_1ED3BE000;
  v54 = v5;
  while (1)
  {
    v8 = (uint64_t *)(v5 + 24 * v6);
    v9 = *v8;
    v10 = v8[1];
    v11 = v8[2];
    swift_bridgeObjectRetain();
    sub_1BA67D3F4(v11);
    v12 = v7[255];
    swift_bridgeObjectRetain();
    if (v12 != -1)
      swift_once();
    v56 = v11;
    v57[0] = v9;
    v57[4] = v10;
    v57[1] = v10;
    v13 = sub_1BA6E583C(v57);
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
      break;
LABEL_9:
    v18 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11 >> 62)
    {
      if (v11 >> 62 != 1)
      {
        v5 = v54;
        v7 = (_QWORD *)&unk_1ED3BE000;
        swift_bridgeObjectRelease();
        if (v56 != 0x8000000000000000)
          v18 = 0x8000000000000008;
        goto LABEL_89;
      }
      v20 = *(_QWORD *)(v11 + 16);
      v19 = *(_QWORD *)(v11 + 24);
      if (v20 >> 62)
      {
        if (v20 >> 62 == 1)
        {
          v22 = *(_QWORD *)(v20 + 16);
          v21 = *(_QWORD *)(v20 + 24);
          if (v22 >> 62)
          {
            if (v22 >> 62 == 1)
            {
              v23 = *(_QWORD *)(v22 + 24);
              v53 = *(_QWORD *)(v22 + 16);
              if (v53 >> 62)
              {
                if (v53 >> 62 == 1)
                {
                  v51 = *(_QWORD *)(v22 + 24);
                  v52 = *(_QWORD *)(v53 + 16);
                  v50 = *(_QWORD *)(v53 + 24);
                  if (!(v52 >> 62))
                  {
                    sub_1BA67D3F4(v56);
                    sub_1BA67D3F4(v20);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v20);
                    sub_1BA67D3F4(v22);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v22);
                    sub_1BA67D3F4(v53);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v53);
                    sub_1BA67D3F4(v52);
                    v30 = v50;
                    swift_bridgeObjectRetain();
                    goto LABEL_81;
                  }
                  v49 = *(_QWORD *)(v20 + 16);
                  if (v52 >> 62 != 1)
                  {
                    sub_1BA67D3F4(v56);
                    sub_1BA67D3F4(v20);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v20);
                    sub_1BA67D3F4(v22);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v22);
                    sub_1BA67D3F4(v53);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v53);
                    if (v52 == 0x8000000000000000)
                      v31 = 0x8000000000000000;
                    else
                      v31 = 0x8000000000000008;
                    sub_1BA67D3F4(v31);
                    v30 = v50;
                    swift_bridgeObjectRetain();
                    goto LABEL_81;
                  }
                  v47 = *(_QWORD *)(v52 + 24);
                  v48 = *(_QWORD *)(v52 + 16);
                  if (v48 >> 62)
                  {
                    if (v48 >> 62 == 1)
                    {
                      v45 = *(_QWORD *)(v48 + 24);
                      v46 = *(_QWORD *)(v48 + 16);
                      if (v46 >> 62)
                      {
                        if (v46 >> 62 == 1)
                        {
                          v43 = *(_QWORD *)(v46 + 24);
                          v44 = *(_QWORD *)(v46 + 16);
                          if (v44 >> 62)
                          {
                            if (v44 >> 62 == 1)
                            {
                              v24 = *(_QWORD *)(v44 + 16);
                              v41 = *(_QWORD *)(v44 + 24);
                              v42 = v24;
                              if (v24 >> 62)
                              {
                                if (v24 >> 62 == 1)
                                {
                                  v39 = *(_QWORD *)(v24 + 16);
                                  v40 = *(_QWORD *)(v24 + 24);
                                  sub_1BA67D3F4(v56);
                                  sub_1BA67D3F4(v20);
                                  swift_bridgeObjectRetain();
                                  sub_1BA67D3F4(v20);
                                  sub_1BA67D3F4(v22);
                                  swift_bridgeObjectRetain();
                                  sub_1BA67D3F4(v22);
                                  sub_1BA67D3F4(v53);
                                  swift_bridgeObjectRetain();
                                  sub_1BA67D3F4(v53);
                                  sub_1BA67D3F4(v52);
                                  swift_bridgeObjectRetain();
                                  sub_1BA67D3F4(v52);
                                  sub_1BA67D3F4(v48);
                                  v25 = v47;
                                  swift_bridgeObjectRetain();
                                  sub_1BA67D3F4(v48);
                                  sub_1BA67D3F4(v46);
                                  swift_bridgeObjectRetain();
                                  sub_1BA67D3F4(v46);
                                  sub_1BA67D3F4(v44);
                                  swift_bridgeObjectRetain();
                                  sub_1BA67D3F4(v44);
                                  sub_1BA67D3F4(v42);
                                  swift_bridgeObjectRetain();
                                  sub_1BA67D3F4(v42);
                                  sub_1BA67D3F4(v39);
                                  swift_bridgeObjectRetain();
                                  sub_1BAC3520C(v4, v39, v40);
                                  if (v3)
                                  {
                                    sub_1BA6EEDB4(v39);
                                    swift_bridgeObjectRelease();
                                    sub_1BA6EEDB4(v42);
                                    goto LABEL_104;
                                  }
                                  sub_1BA6EEDB4(v39);
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v42);
                                  v26 = v41;
LABEL_73:
                                  swift_bridgeObjectRetain();
                                  sub_1BABE9BC8(v4, v26);
                                  if (v3)
                                  {
                                    swift_bridgeObjectRelease();
LABEL_104:
                                    sub_1BA6EEDB4(v42);
                                    swift_bridgeObjectRelease();
                                    sub_1BA6EEDB4(v44);
                                    goto LABEL_105;
                                  }
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v42);
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v44);
                                  v37 = v43;
LABEL_75:
                                  swift_bridgeObjectRetain();
                                  sub_1BABE9BC8(v4, v37);
                                  if (v3)
                                  {
                                    swift_bridgeObjectRelease();
LABEL_105:
                                    sub_1BA6EEDB4(v44);
                                    swift_bridgeObjectRelease();
                                    sub_1BA6EEDB4(v46);
                                    v18 = v56;
                                    goto LABEL_106;
                                  }
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v44);
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v46);
                                  v35 = v45;
LABEL_77:
                                  swift_bridgeObjectRetain();
                                  sub_1BABE9BC8(v4, v35);
                                  if (v3)
                                  {
                                    swift_bridgeObjectRelease();
LABEL_106:
                                    sub_1BA6EEDB4(v46);
                                    swift_bridgeObjectRelease();
                                    v32 = v48;
                                    sub_1BA6EEDB4(v48);
                                    goto LABEL_107;
                                  }
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v46);
                                  swift_bridgeObjectRelease();
                                  v32 = v48;
                                  sub_1BA6EEDB4(v48);
LABEL_79:
                                  swift_bridgeObjectRetain();
                                  sub_1BABE9BC8(v4, v25);
                                  if (v3)
                                  {
                                    swift_bridgeObjectRelease();
LABEL_107:
                                    sub_1BA6EEDB4(v32);
                                    swift_bridgeObjectRelease();
                                    sub_1BA6EEDB4(v52);
                                    v22 = v49;
                                    goto LABEL_108;
                                  }
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v32);
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v52);
                                  v22 = v49;
                                  v30 = v50;
LABEL_81:
                                  swift_bridgeObjectRetain();
                                  sub_1BABE9BC8(v4, v30);
                                  if (v3)
                                  {
                                    swift_bridgeObjectRelease();
LABEL_108:
                                    sub_1BA6EEDB4(v52);
                                    swift_bridgeObjectRelease();
                                    sub_1BA6EEDB4(v53);
                                    goto LABEL_109;
                                  }
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v52);
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v53);
                                  v23 = v51;
LABEL_83:
                                  swift_bridgeObjectRetain();
                                  sub_1BABE9BC8(v4, v23);
                                  if (v3)
                                  {
                                    swift_bridgeObjectRelease();
LABEL_109:
                                    sub_1BA6EEDB4(v53);
                                    swift_bridgeObjectRelease();
                                    sub_1BA6EEDB4(v22);
                                    goto LABEL_110;
                                  }
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v53);
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v22);
LABEL_85:
                                  swift_bridgeObjectRetain();
                                  sub_1BABE9BC8(v4, v21);
                                  if (v3)
                                  {
                                    swift_bridgeObjectRelease();
LABEL_110:
                                    sub_1BA6EEDB4(v22);
                                    swift_bridgeObjectRelease();
                                    sub_1BA6EEDB4(v20);
                                    sub_1BA6EEDB4(v20);
                                    swift_bridgeObjectRelease();
                                    sub_1BA6EEDB4(v18);
                                    swift_bridgeObjectRelease();
                                    goto LABEL_92;
                                  }
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v22);
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v20);
LABEL_87:
                                  swift_bridgeObjectRetain();
                                  sub_1BABE9BC8(v4, v19);
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v20);
                                  swift_bridgeObjectRelease();
                                  sub_1BA6EEDB4(v56);
                                  if (v3)
                                  {
                                    swift_bridgeObjectRelease();
                                    goto LABEL_92;
                                  }
                                  goto LABEL_88;
                                }
                                sub_1BA67D3F4(v56);
                                sub_1BA67D3F4(v20);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v20);
                                sub_1BA67D3F4(v22);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v22);
                                sub_1BA67D3F4(v53);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v53);
                                sub_1BA67D3F4(v52);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v52);
                                sub_1BA67D3F4(v48);
                                v25 = v47;
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v48);
                                sub_1BA67D3F4(v46);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v46);
                                sub_1BA67D3F4(v44);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v44);
                                if (v42 == 0x8000000000000000)
                                  v38 = 0x8000000000000000;
                                else
                                  v38 = 0x8000000000000008;
                              }
                              else
                              {
                                sub_1BA67D3F4(v56);
                                sub_1BA67D3F4(v20);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v20);
                                sub_1BA67D3F4(v22);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v22);
                                sub_1BA67D3F4(v53);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v53);
                                sub_1BA67D3F4(v52);
                                swift_bridgeObjectRetain();
                                v25 = v47;
                                sub_1BA67D3F4(v52);
                                sub_1BA67D3F4(v48);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v48);
                                sub_1BA67D3F4(v46);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v46);
                                sub_1BA67D3F4(v44);
                                swift_bridgeObjectRetain();
                                sub_1BA67D3F4(v44);
                                v38 = v42;
                              }
                              sub_1BA67D3F4(v38);
                              v26 = v41;
                              swift_bridgeObjectRetain();
                              goto LABEL_73;
                            }
                            sub_1BA67D3F4(v56);
                            sub_1BA67D3F4(v20);
                            swift_bridgeObjectRetain();
                            sub_1BA67D3F4(v20);
                            sub_1BA67D3F4(v22);
                            swift_bridgeObjectRetain();
                            sub_1BA67D3F4(v22);
                            sub_1BA67D3F4(v53);
                            swift_bridgeObjectRetain();
                            sub_1BA67D3F4(v53);
                            sub_1BA67D3F4(v52);
                            swift_bridgeObjectRetain();
                            v25 = v47;
                            sub_1BA67D3F4(v52);
                            sub_1BA67D3F4(v48);
                            swift_bridgeObjectRetain();
                            sub_1BA67D3F4(v48);
                            sub_1BA67D3F4(v46);
                            swift_bridgeObjectRetain();
                            sub_1BA67D3F4(v46);
                            if (v44 == 0x8000000000000000)
                              v36 = 0x8000000000000000;
                            else
                              v36 = 0x8000000000000008;
                          }
                          else
                          {
                            sub_1BA67D3F4(v56);
                            sub_1BA67D3F4(v20);
                            swift_bridgeObjectRetain();
                            sub_1BA67D3F4(v20);
                            sub_1BA67D3F4(v22);
                            swift_bridgeObjectRetain();
                            sub_1BA67D3F4(v22);
                            sub_1BA67D3F4(v53);
                            swift_bridgeObjectRetain();
                            sub_1BA67D3F4(v53);
                            sub_1BA67D3F4(v52);
                            swift_bridgeObjectRetain();
                            v25 = v47;
                            sub_1BA67D3F4(v52);
                            sub_1BA67D3F4(v48);
                            swift_bridgeObjectRetain();
                            sub_1BA67D3F4(v48);
                            sub_1BA67D3F4(v46);
                            swift_bridgeObjectRetain();
                            sub_1BA67D3F4(v46);
                            v36 = v44;
                          }
                          sub_1BA67D3F4(v36);
                          v37 = v43;
                          swift_bridgeObjectRetain();
                          goto LABEL_75;
                        }
                        sub_1BA67D3F4(v56);
                        sub_1BA67D3F4(v20);
                        swift_bridgeObjectRetain();
                        sub_1BA67D3F4(v20);
                        sub_1BA67D3F4(v22);
                        swift_bridgeObjectRetain();
                        sub_1BA67D3F4(v22);
                        sub_1BA67D3F4(v53);
                        swift_bridgeObjectRetain();
                        sub_1BA67D3F4(v53);
                        sub_1BA67D3F4(v52);
                        swift_bridgeObjectRetain();
                        v25 = v47;
                        sub_1BA67D3F4(v52);
                        sub_1BA67D3F4(v48);
                        swift_bridgeObjectRetain();
                        sub_1BA67D3F4(v48);
                        if (v46 == 0x8000000000000000)
                          v34 = 0x8000000000000000;
                        else
                          v34 = 0x8000000000000008;
                      }
                      else
                      {
                        sub_1BA67D3F4(v56);
                        sub_1BA67D3F4(v20);
                        swift_bridgeObjectRetain();
                        sub_1BA67D3F4(v20);
                        sub_1BA67D3F4(v22);
                        swift_bridgeObjectRetain();
                        sub_1BA67D3F4(v22);
                        sub_1BA67D3F4(v53);
                        swift_bridgeObjectRetain();
                        sub_1BA67D3F4(v53);
                        sub_1BA67D3F4(v52);
                        swift_bridgeObjectRetain();
                        v25 = v47;
                        sub_1BA67D3F4(v52);
                        sub_1BA67D3F4(v48);
                        swift_bridgeObjectRetain();
                        sub_1BA67D3F4(v48);
                        v34 = v46;
                      }
                      sub_1BA67D3F4(v34);
                      v35 = v45;
                      swift_bridgeObjectRetain();
                      goto LABEL_77;
                    }
                    sub_1BA67D3F4(v56);
                    sub_1BA67D3F4(v20);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v20);
                    sub_1BA67D3F4(v22);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v22);
                    sub_1BA67D3F4(v53);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v53);
                    sub_1BA67D3F4(v52);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v52);
                    v32 = v48;
                    if (v48 == 0x8000000000000000)
                      v33 = 0x8000000000000000;
                    else
                      v33 = 0x8000000000000008;
                    sub_1BA67D3F4(v33);
                    v25 = v47;
                  }
                  else
                  {
                    sub_1BA67D3F4(v56);
                    sub_1BA67D3F4(v20);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v20);
                    sub_1BA67D3F4(v22);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v22);
                    sub_1BA67D3F4(v53);
                    swift_bridgeObjectRetain();
                    sub_1BA67D3F4(v53);
                    sub_1BA67D3F4(v52);
                    swift_bridgeObjectRetain();
                    v25 = v47;
                    sub_1BA67D3F4(v52);
                    v32 = v48;
                    sub_1BA67D3F4(v48);
                  }
                  swift_bridgeObjectRetain();
                  goto LABEL_79;
                }
                sub_1BA67D3F4(v56);
                sub_1BA67D3F4(v20);
                swift_bridgeObjectRetain();
                sub_1BA67D3F4(v20);
                sub_1BA67D3F4(v22);
                swift_bridgeObjectRetain();
                sub_1BA67D3F4(v22);
                if (v53 == 0x8000000000000000)
                  v29 = 0x8000000000000000;
                else
                  v29 = 0x8000000000000008;
              }
              else
              {
                sub_1BA67D3F4(v56);
                sub_1BA67D3F4(v20);
                swift_bridgeObjectRetain();
                sub_1BA67D3F4(v20);
                sub_1BA67D3F4(v22);
                swift_bridgeObjectRetain();
                sub_1BA67D3F4(v22);
                v29 = v53;
              }
              sub_1BA67D3F4(v29);
              swift_bridgeObjectRetain();
              goto LABEL_83;
            }
            sub_1BA67D3F4(v56);
            sub_1BA67D3F4(v20);
            swift_bridgeObjectRetain();
            sub_1BA67D3F4(v20);
            if (v22 == 0x8000000000000000)
              v28 = 0x8000000000000000;
            else
              v28 = 0x8000000000000008;
          }
          else
          {
            sub_1BA67D3F4(v56);
            sub_1BA67D3F4(v20);
            swift_bridgeObjectRetain();
            sub_1BA67D3F4(v20);
            v28 = v22;
          }
          sub_1BA67D3F4(v28);
          swift_bridgeObjectRetain();
          goto LABEL_85;
        }
        sub_1BA67D3F4(v56);
        if (v20 == 0x8000000000000000)
          v27 = 0x8000000000000000;
        else
          v27 = 0x8000000000000008;
      }
      else
      {
        sub_1BA67D3F4(v56);
        v27 = v20;
      }
      sub_1BA67D3F4(v27);
      swift_bridgeObjectRetain();
      goto LABEL_87;
    }
LABEL_88:
    v5 = v54;
    v7 = (_QWORD *)&unk_1ED3BE000;
    swift_bridgeObjectRelease();
LABEL_89:
    ++v6;
    sub_1BA6EEDB4(v18);
    if (v6 == v55)
      return swift_bridgeObjectRelease();
  }
  v15 = (uint64_t *)(v13 + 64);
  while (1)
  {
    v16 = *(v15 - 1);
    v17 = *v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB043358(v4, v16, v17);
    if (v3)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 += 5;
    if (!--v14)
      goto LABEL_9;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v11;
LABEL_92:
  sub_1BA6EEDB4(v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BABEAB98(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[2];
  int v23;

  v3 = v2;
  v18 = *(_QWORD *)(a2 + 16);
  if (v18)
  {
    v4 = result;
    v19 = a2 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = v19 + 40 * v5;
      v7 = *(_QWORD *)v6;
      v8 = *(_QWORD *)(v6 + 8);
      v10 = *(_QWORD *)(v6 + 16);
      v9 = *(_QWORD *)(v6 + 24);
      v11 = *(unsigned __int8 *)(v6 + 32);
      swift_bridgeObjectRetain();
      v20 = v10;
      v21 = v9;
      v23 = v11;
      sub_1BA6E6C54(v10, v9, v11);
      v12 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      if (v12 != -1)
        swift_once();
      v22[0] = v7;
      v22[1] = v8;
      v13 = sub_1BA6E583C(v22);
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
        break;
LABEL_3:
      ++v5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_1BA6E6CC4(v20, v21, v23);
      if (v5 == v18)
        return swift_bridgeObjectRelease();
    }
    v15 = (uint64_t *)(v13 + 64);
    while (1)
    {
      v16 = *(v15 - 1);
      v17 = *v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(v4, v16, v17);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 += 5;
      if (!--v14)
        goto LABEL_3;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E6CC4(v20, v21, v23);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABEAD6C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[4];

  v14 = *(_QWORD *)(a2 + 16);
  if (v14)
  {
    v3 = result;
    v15 = a2 + 32;
    swift_bridgeObjectRetain();
    v4 = 0;
    while (1)
    {
      v5 = (uint64_t *)(v15 + 32 * v4);
      v6 = *v5;
      v7 = v5[1];
      v8 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if (v8 != -1)
        swift_once();
      v16[0] = v6;
      v16[1] = v7;
      v16[3] = v7;
      v9 = sub_1BA6E583C(v16);
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
        break;
LABEL_3:
      ++v4;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v4 == v14)
        return swift_bridgeObjectRelease();
    }
    v11 = (uint64_t *)(v9 + 64);
    while (1)
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(v3, v12, v13);
      if (v2)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 += 5;
      if (!--v10)
        goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABEAF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t result;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (i = (unsigned __int8 *)(a2 + 64); ; i += 40)
    {
      v7 = *((_QWORD *)i - 4);
      v8 = *((_QWORD *)i - 3);
      v9 = *((_QWORD *)i - 2);
      v10 = *((_QWORD *)i - 1);
      v11 = *i;
      sub_1BA527164(v7, v8, v9, v10, *i);
      sub_1BAC411CC();
      if (v3)
        break;
      sub_1BA5271D4(v7, v8, v9, v10, v11);
      if (!--v4)
        return swift_bridgeObjectRelease();
    }
    sub_1BA5271D4(v7, v8, v9, v10, v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABEB020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    while (1)
    {
      swift_retain();
      sub_1BAC35E00();
      if (v2)
        break;
      ++v4;
      swift_release();
      if (v3 == v4)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BABEB0D4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v21 = *(_QWORD *)(a2 + 16);
  if (v21)
  {
    v4 = result;
    v5 = a2 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = &unk_1ED3BE000;
    v20 = v5;
    while (1)
    {
      v8 = (uint64_t *)(v5 + 24 * v6);
      v9 = *v8;
      v10 = v8[1];
      v11 = v8[2];
      v12 = v7[255];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if (v12 != -1)
        swift_once();
      *(_QWORD *)&v22 = v9;
      *((_QWORD *)&v22 + 1) = v10;
      v13 = sub_1BA6E583C((uint64_t *)&v22);
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
        break;
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = v11;
      sub_1BA4AD288(0, &qword_1EF2B0E50, (uint64_t)&type metadata for FormatSourceItemTipTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA4D9CE8(0, &qword_1EF2B0E30);
      swift_bridgeObjectRetain();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v18 = *((_QWORD *)&v23 + 1);
        v19 = v24;
        __swift_project_boxed_opaque_existential_1(&v22, *((uint64_t *)&v23 + 1));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(v4, v18, v19);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        v24 = 0;
        v22 = 0u;
        v23 = 0u;
        sub_1BA65DB80((uint64_t)&v22, &qword_1EF2B0E38, &qword_1EF2B0E30);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v6;
      v5 = v20;
      v7 = (_QWORD *)&unk_1ED3BE000;
      if (v6 == v21)
        return swift_bridgeObjectRelease();
    }
    v15 = (uint64_t *)(v13 + 64);
    while (1)
    {
      v16 = *(v15 - 1);
      v17 = *v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(v4, v16, v17);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 += 5;
      if (!--v14)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABEB390(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  uint64_t v15;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = (char *)(a2 + 80);
    while (1)
    {
      v15 = v4;
      v7 = *((_QWORD *)v6 - 6);
      v8 = *((_QWORD *)v6 - 5);
      v9 = *((_QWORD *)v6 - 4);
      v10 = *((_QWORD *)v6 - 3);
      v12 = *((_QWORD *)v6 - 2);
      v11 = *((_QWORD *)v6 - 1);
      v13 = *v6;
      sub_1BAC6607C(v7, v8, v9, v10, v12, v11, *v6);
      sub_1BAC369E4();
      if (v3)
        break;
      v6 += 56;
      sub_1BAC66130(v7, v8, v9, v10, v12, v11, v13);
      v4 = v15 - 1;
      if (v15 == 1)
        return swift_bridgeObjectRelease();
    }
    sub_1BAC66130(v7, v8, v9, v10, v12, v11, v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BABEB4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, unint64_t *, uint64_t, uint64_t (*)(_QWORD, uint64_t));
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, unint64_t *, uint64_t, uint64_t (*)(_QWORD, uint64_t));
  uint64_t (*v37)(void);
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _OWORD v59[2];
  _BYTE v60[144];
  _BYTE v61[144];
  _OWORD v62[7];
  _OWORD v63[2];
  uint64_t v64;

  v3 = v2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v40 - v7;
  v45 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v45);
  v42 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v41 = (uint64_t)&v40 - v10;
  MEMORY[0x1E0C80A78](v11);
  v51 = (uint64_t *)((char *)&v40 - v12);
  v64 = *(_QWORD *)(a2 + 16);
  if (v64)
  {
    v44 = v51 + 3;
    swift_bridgeObjectRetain();
    v13 = 0;
    v43 = 0x80000001BB96DF20;
    v14 = sub_1BA4AD288;
    v49 = a2;
    v50 = a1;
    while (1)
    {
      v15 = *(_QWORD *)(a2 + 8 * v13 + 32);
      if (!(v15 >> 62))
        break;
      if (v15 >> 62 == 1)
      {
        v16 = *(_QWORD *)(v15 + 16);
        v17 = qword_1ED3C6D58;
        v47 = v15 & 0x3FFFFFFFFFFFFFFFLL;
        swift_retain();
        v48 = v16;
        swift_retain();
        if (v17 != -1)
          swift_once();
        v18 = sub_1BB86EB84();
        v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C08);
        v20 = (uint64_t)v46;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v46, v19, v18);
        type metadata accessor for FormatVersionRequirement.Value(0);
        swift_storeEnumTagMultiPayload();
        v21 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 0, 1, v21);
        v22 = v51;
        *v51 = 0xD000000000000010;
        v22[1] = v43;
        v22[2] = 3;
        v23 = v44;
        v24 = v45;
        *v44 = 0;
        v23[1] = 0;
        *((_BYTE *)v23 + 16) = 0;
        v22[6] = MEMORY[0x1E0DEE9D8];
        sub_1BA5D5518(v20, (uint64_t)v22 + *(int *)(v24 + 28), (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
        v25 = swift_allocBox();
        v27 = v26;
        sub_1BA4C2DD8((uint64_t)v22, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
        v28 = *(_QWORD **)(a1 + 48);
        v29 = v28[2];
        if (v29 && v28[v29 + 3] >> 60 == 1)
        {
          v30 = swift_projectBox();
          v31 = v41;
          sub_1BA4C2DD8(v30, v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
          v32 = v42;
          sub_1BA4C2DD8(v27, v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
          swift_retain();
          swift_retain();
          v33 = sub_1BB188A5C(v31, v32);
          sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
          sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
          swift_release();
          swift_release();
          if (v33)
          {
            swift_release();
            v14 = sub_1BA4AD288;
LABEL_25:
            sub_1BA4A2E80((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
            sub_1BAC319A0();
            a2 = v49;
            if (v3)
            {
LABEL_28:
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              return;
            }
LABEL_15:
            swift_release();
            swift_release();
            goto LABEL_5;
          }
          v28 = *(_QWORD **)(a1 + 48);
          v14 = sub_1BA4AD288;
        }
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v28 = sub_1BB38ED0C(0, v28[2] + 1, 1, v28);
        v39 = v28[2];
        v38 = v28[3];
        if (v39 >= v38 >> 1)
          v28 = sub_1BB38ED0C((_QWORD *)(v38 > 1), v39 + 1, 1, v28);
        v28[2] = v39 + 1;
        v28[v39 + 4] = v25 | 0x1000000000000000;
        swift_release();
        a1 = v50;
        *(_QWORD *)(v50 + 48) = v28;
        goto LABEL_25;
      }
      v34 = *(_QWORD *)(v15 + 16);
      v35 = *(_QWORD *)(v34 + 16);
      swift_retain();
      swift_retain();
      sub_1BABEB4B0(a1, v35);
      if (v3)
        goto LABEL_28;
      v36 = v14;
      v37 = MEMORY[0x1E0DEB940];
      sub_1BA760F3C(v34 + 24, (uint64_t)v61, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v36);
      sub_1BA760F3C((uint64_t)v61, (uint64_t)v62, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v37, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v36);
      if (sub_1BA896370((uint64_t *)v62) == 1)
      {
        swift_release();
        swift_release();
        v14 = v36;
      }
      else
      {
        v58 = v62[6];
        v59[0] = v63[0];
        *(_OWORD *)((char *)v59 + 9) = *(_OWORD *)((char *)v63 + 9);
        v54 = v62[2];
        v55 = v62[3];
        v56 = v62[4];
        v57 = v62[5];
        v52 = v62[0];
        v53 = v62[1];
        sub_1BA760F3C((uint64_t)v61, (uint64_t)v60, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v37, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))v36);
        sub_1BA89652C((uint64_t)v60);
        sub_1BAC30C08();
        v14 = v36;
        sub_1BAC653DC((uint64_t)v61);
        swift_release();
        swift_release();
      }
      a2 = v49;
      a1 = v50;
LABEL_5:
      if (v64 == ++v13)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_retain();
    swift_retain();
    sub_1BAC30420();
    if (v3)
      goto LABEL_28;
    goto LABEL_15;
  }
}

uint64_t sub_1BABEBAE0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27[2];
  uint64_t v28;

  v3 = v2;
  v20 = *(_QWORD *)(a2 + 16);
  if (v20)
  {
    v4 = result;
    v21 = a2 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = v21 + (v5 << 6);
      v7 = *(_QWORD *)(v6 + 8);
      v28 = *(_QWORD *)v6;
      v8 = *(_QWORD *)(v6 + 16);
      v9 = *(_QWORD *)(v6 + 24);
      v10 = *(_BYTE *)(v6 + 32);
      v12 = *(_QWORD *)(v6 + 40);
      v11 = *(_QWORD *)(v6 + 48);
      v13 = *(_BYTE *)(v6 + 56);
      swift_bridgeObjectRetain();
      v22 = v8;
      v23 = v9;
      v24 = v10;
      sub_1BA6E6C54(v8, v9, v10);
      v25 = v12;
      v26 = v13;
      sub_1BA6E6C54(v12, v11, v13);
      v14 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      if (v14 != -1)
        swift_once();
      v27[0] = v28;
      v27[1] = v7;
      v15 = sub_1BA6E583C(v27);
      v16 = *(_QWORD *)(v15 + 16);
      v28 = v15;
      if (v16)
        break;
LABEL_3:
      ++v5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_1BA6E6CC4(v22, v23, v24);
      sub_1BA6E6CC4(v25, v11, v26);
      if (v5 == v20)
        return swift_bridgeObjectRelease();
    }
    v17 = (uint64_t *)(v15 + 64);
    while (1)
    {
      v18 = *(v17 - 1);
      v19 = *v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(v4, v18, v19);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 += 5;
      if (!--v16)
        goto LABEL_3;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E6CC4(v22, v23, v24);
    sub_1BA6E6CC4(v25, v11, v26);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BABEBCF0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v6 = result;
    swift_bridgeObjectRetain();
    v14 = v6;
    v7 = (_OWORD *)(a2 + 56);
    while (1)
    {
      v8 = *((_QWORD *)v7 - 1);
      if (v8)
      {
        v9 = *((_QWORD *)v7 - 2);
        v15 = *v7;
        v10 = *(_QWORD **)(v6 + 56);
        swift_retain();
        swift_bridgeObjectRetain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1BB38ED20(0, v10[2] + 1, 1, v10);
        v12 = v10[2];
        v11 = v10[3];
        if (v12 >= v11 >> 1)
          v10 = sub_1BB38ED20((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
        v10[2] = v12 + 1;
        v13 = &v10[4 * v12];
        v6 = v14;
        v13[4] = v9;
        v13[5] = v8;
        *((_OWORD *)v13 + 3) = v15;
        *(_QWORD *)(v14 + 56) = v10;
      }
      else
      {
        swift_retain();
      }
      swift_retain();
      sub_1BAC46704();
      if (v3)
        break;
      v7 = (_OWORD *)((char *)v7 + 40);
      swift_release_n();
      swift_bridgeObjectRelease();
      if (!--v4)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BABEBE94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_QWORD *)(a2 + 16))
  {
    v2 = a2 + 32;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
}

void sub_1BABEF514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v4;
  _QWORD *i;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  unint64_t *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  void *v21;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = &qword_1EF2B0E30;
    for (i = (_QWORD *)(a2 + 56); ; i += 4)
    {
      v6 = *(i - 3);
      v7 = *(i - 2);
      v8 = *((_BYTE *)i - 8);
      v21 = (void *)*i;
      v9 = v21;
      sub_1BA73B1CC(v6, v7, v8);
      sub_1BA49DEA8();
      sub_1BA4D9CE8(0, v4);
      v10 = v4;
      v11 = v9;
      if (swift_dynamicCast())
      {
        v16 = v8;
        v12 = v11;
        v13 = *((_QWORD *)&v19 + 1);
        v14 = v20;
        __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, v13, v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
        sub_1BA73B1B8(v6, v7, v16);
        if (v17)
        {
          swift_bridgeObjectRelease();

          return;
        }

      }
      else
      {
        v20 = 0;
        v18 = 0u;
        v19 = 0u;
        sub_1BA65DB80((uint64_t)&v18, &qword_1EF2B0E38, v4);
        sub_1BA73B1B8(v6, v7, v8);

      }
      v4 = v10;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1BABEF6C8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  void *v36;

  v30 = result;
  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return result;
  v3 = a2 + 32;
  swift_bridgeObjectRetain();
  v4 = 0;
  v24 = v3;
  v25 = v2;
  while (1)
  {
    v5 = v3 + 48 * v4;
    if (*(_BYTE *)(v5 + 32) != 1)
      goto LABEL_5;
    v7 = *(_QWORD *)v5;
    v6 = *(_QWORD *)(v5 + 8);
    v8 = *(_BYTE *)(v5 + 16);
    v9 = *(_QWORD **)(v5 + 24);
    v10 = *(_QWORD *)(v9[3] + 16);
    v28 = *(_QWORD *)v5;
    v29 = v6;
    if (v10)
    {
      v26 = v4;
      v11 = v9[3];
      sub_1BA92F754(v9, 1);
      sub_1BA92F754(v9, 1);
      sub_1BAB5EC7C(v7, v6, v8);
      v27 = v9;
      sub_1BA92F754(v9, 1);
      swift_retain();
      swift_bridgeObjectRetain();
      v12 = (_QWORD *)(v11 + 56);
      while (1)
      {
        v32 = v10;
        v14 = *(v12 - 3);
        v13 = *(v12 - 2);
        v15 = *((_BYTE *)v12 - 8);
        v36 = (void *)*v12;
        v16 = v36;
        sub_1BA73B1CC(v14, v13, v15);
        sub_1BA49DEA8();
        sub_1BA4D9CE8(0, &qword_1EF2B0E30);
        v17 = v16;
        if (swift_dynamicCast())
        {
          v19 = *((_QWORD *)&v34 + 1);
          v18 = v35;
          __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 8))(v30, v19, v18);
          if (v31)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
            sub_1BA73B1B8(v14, v13, v15);
            swift_bridgeObjectRelease();

            sub_1BA92F770(v27, 1);
            sub_1BA92F770(v27, 1);
            sub_1BAB5EC9C(v28, v6, v8);
            sub_1BA92F770(v27, 1);
            swift_bridgeObjectRelease();
            return swift_release();
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
          sub_1BA73B1B8(v14, v13, v15);

        }
        else
        {
          v35 = 0;
          v33 = 0u;
          v34 = 0u;
          sub_1BA65DB80((uint64_t)&v33, &qword_1EF2B0E38, &qword_1EF2B0E30);
          sub_1BA73B1B8(v14, v13, v15);

        }
        v12 += 4;
        v10 = v32 - 1;
        if (v32 == 1)
        {
          swift_bridgeObjectRelease();
          v3 = v24;
          v2 = v25;
          v4 = v26;
          v9 = v27;
          goto LABEL_16;
        }
      }
    }
    sub_1BA92F754(v9, 1);
    sub_1BA92F754(v9, 1);
    sub_1BAB5EC7C(v7, v6, v8);
    sub_1BA92F754(v9, 1);
    swift_retain();
LABEL_16:
    v36 = (void *)v9[4];
    v20 = v36;
    sub_1BA49DEA8();
    sub_1BA4D9CE8(0, &qword_1EF2B0E30);
    v21 = v20;
    if ((swift_dynamicCast() & 1) != 0)
      break;
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
    sub_1BA65DB80((uint64_t)&v33, &qword_1EF2B0E38, &qword_1EF2B0E30);
    sub_1BA92F770(v9, 1);
    sub_1BA92F770(v9, 1);
    sub_1BAB5EC9C(v28, v6, v8);
    sub_1BA92F770(v9, 1);
LABEL_4:
    swift_release();
LABEL_5:
    if (++v4 == v2)
      return swift_bridgeObjectRelease();
  }
  v22 = *((_QWORD *)&v34 + 1);
  v23 = v35;
  __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 8))(v30, v22, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  sub_1BA92F770(v9, 1);
  sub_1BA92F770(v9, 1);
  sub_1BAB5EC9C(v28, v29, v8);
  sub_1BA92F770(v9, 1);
  if (!v31)
    goto LABEL_4;
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BABEFB00(uint64_t a1, uint64_t a2)
{
  return sub_1BABE8BAC(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAC35404, (void (*)(uint64_t, uint64_t))sub_1BABEFB00);
}

uint64_t sub_1BABEFB24(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  unint64_t v30;
  BOOL v31;
  char isUniquelyReferenced_nonNull_native;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[4];
  int v44;
  char v45;

  if (*(_QWORD *)(a2 + 16))
  {
    v37 = (uint64_t *)(result + 48);
    v3 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    v4 = v3;
    for (i = (_QWORD *)(a2 + 56); ; i += 4)
    {
      v6 = *(i - 3);
      v7 = *(i - 2);
      LODWORD(v8) = *((unsigned __int8 *)i - 8);
      v9 = *i;
      v10 = *i >> 62;
      if ((_DWORD)v10)
      {
        v40 = i;
        v41 = v4;
        if ((_DWORD)v10 == 1)
        {
          v11 = *(_QWORD *)(v9 + 16);
          if (*(_BYTE *)(v11 + 41))
            v12 = 4;
          else
            v12 = 0;
          __asm { BR              X9 }
        }
        v22 = *(i - 3);
        v23 = *(_QWORD *)(v9 + 16);
        v24 = *(_QWORD *)(v9 + 24);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = v23;
        *(_QWORD *)(v25 + 24) = v24;
        v26 = (_QWORD *)*v37;
        v27 = *(_QWORD *)(*v37 + 16);
        if (v27
          && (v28 = v8,
              v8 = v27 - 1,
              sub_1BA8E9170(v27 - 1, 1, *v37),
              v29 = &v26[v8],
              LOBYTE(v8) = v28,
              v30 = v29[4],
              v30 >> 60 == 4)
          && (*(_QWORD *)(v30 + 16) == v23 ? (v31 = *(_QWORD *)(v30 + 24) == v24) : (v31 = 0),
              v31 || (sub_1BB874398() & 1) != 0))
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          sub_1BA73B1CC(v22, v7, v8);
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v37 = (uint64_t)v26;
          v33 = v8;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v26 = sub_1BB38ED0C(0, v26[2] + 1, 1, v26);
            *v37 = (uint64_t)v26;
          }
          v34 = v26[2];
          sub_1BA9815AC(v34);
          sub_1BA9816C0(v34, v25 | 0x4000000000000000);
          nullsub_1();
          swift_release();
          swift_release();
          sub_1BA73B1B8(v22, v7, v33);
        }
      }
      else
      {
        v39 = *(i - 2);
        v14 = *(_QWORD *)(v9 + 16);
        v13 = *(_QWORD *)(v9 + 24);
        v16 = *(_QWORD *)(v9 + 32);
        v15 = *(_QWORD *)(v9 + 40);
        v17 = *(unsigned __int8 *)(v9 + 64);
        v18 = *(_BYTE *)(v9 + 65);
        v19 = 1 << ((2 * (v18 & 0x7F)) | ((v17 & 8) != 0));
        if ((v19 & 0x3FE3) != 0)
          goto LABEL_5;
        v35 = *(_QWORD *)(v9 + 48);
        v38 = *(_QWORD *)(v9 + 56);
        v40 = i;
        v41 = v4;
        v36 = *(i - 3);
        if ((v19 & 0x18) == 0)
        {
          sub_1BA73B1CC(v6, v39, v8);
          swift_retain_n();
          __asm { BR              X8 }
        }
        v43[0] = *(_QWORD *)(v9 + 16);
        v43[1] = v13;
        v43[2] = v16;
        v45 = 5;
        v44 = v8;
        sub_1BA73B1CC(v6, v39, v8);
        swift_retain_n();
        sub_1BA713CDC(v14, v13, v16, v15, v35, v38, v17, v18);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = sub_1BB6B84D4(v43, &v45);
        if (v42)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA73B1B8(v36, v39, v44);
          swift_bridgeObjectRelease();
          return swift_release();
        }
        v21 = v20;
        swift_bridgeObjectRelease();
        sub_1BB3D7F90(v14, v13, v21, 0);
        v42 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1BA73B1B8(v36, v39, v44);
      }
      swift_release();
      i = v40;
      v4 = v41;
LABEL_5:
      if (!--v4)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BABF3C34(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v6 = result;
    swift_bridgeObjectRetain();
    v7 = (uint64_t *)(a2 + 56);
    while (1)
    {
      v8 = *(v7 - 3);
      v9 = *(v7 - 2);
      v10 = *((unsigned __int8 *)v7 - 8);
      v11 = *v7;
      sub_1BA73B1CC(v8, v9, *((_BYTE *)v7 - 8));
      swift_retain();
      sub_1BAC3A260(v6, v8, v9, v10, v11);
      if (v3)
        break;
      v7 += 4;
      sub_1BA73B1B8(v8, v9, v10);
      swift_release();
      if (!--v4)
        return swift_bridgeObjectRelease();
    }
    sub_1BA73B1B8(v8, v9, v10);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BABF3D30(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v6 = result;
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(a2 + 40); ; i += 2)
    {
      v8 = *i;
      v44 = *(i - 1);
      v9 = v8 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_retain_n();
      sub_1BAC30118(v6);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release_n();
      }
      swift_release();
      if ((v8 & 0x8000000000000000) == 0)
        break;
      if (*(_BYTE *)((v8 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) && *(_BYTE *)((v8 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) != 1)
      {
        v24 = *(_QWORD *)((v8 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
        v23 = *(_QWORD *)(v9 + 32);
        v44 = *(_QWORD *)(v9 + 16);
        v25 = v44;
        v45 = v24;
        v46 = v23;
        v47 = 6;
        swift_retain();
        sub_1BA896AAC(v25, v24, v23, 2);
        v26 = sub_1BB6B84D4(&v44, &v47);
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v25, v24, v26, 0);
        swift_release();
        swift_release_n();
        swift_bridgeObjectRelease();
LABEL_34:
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      swift_release();
      swift_release();
LABEL_4:
      if (!--v4)
        return swift_bridgeObjectRelease();
    }
    v10 = v6;
    v12 = *(_QWORD *)(v8 + 16);
    v11 = *(_QWORD *)(v8 + 24);
    v13 = v11 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v14 = v10;
    sub_1BABF3D30(v10, v12);
    if (v11 < 0)
    {
      if (*(_BYTE *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) && *(_BYTE *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) != 1)
      {
        v30 = *(_QWORD *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        v33 = v13 + 24;
        v32 = *(_QWORD *)(v13 + 24);
        v31 = *(_QWORD *)(v33 + 8);
        v44 = v30;
        v45 = v32;
        v46 = v31;
        v47 = 6;
        swift_retain();
        sub_1BA896AAC(v30, v32, v31, 2);
        v34 = sub_1BB6B84D4(&v44, &v47);
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v30, v32, v34, 0);
        swift_release();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
        swift_release_n();
        swift_release();
      }
      swift_bridgeObjectRelease();
      v6 = v14;
      goto LABEL_4;
    }
    v16 = *(_QWORD *)(v11 + 16);
    v15 = *(_QWORD *)(v11 + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BABF3D30(v14, v16);
    if (v15 < 0)
    {
      if (*(_BYTE *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) && *(_BYTE *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) != 1)
      {
        v28 = *(_QWORD *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
        v27 = *(_QWORD *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
        v44 = *(_QWORD *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        v29 = v44;
        v45 = v28;
        v46 = v27;
        v47 = 6;
        swift_retain();
        sub_1BA896AAC(v29, v28, v27, 2);
        v43 = sub_1BB6B84D4(&v44, &v47);
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v29, v28, v43, 0);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
LABEL_33:
        v6 = v14;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release_n();
        swift_release();
        goto LABEL_34;
      }
    }
    else
    {
      v18 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BABF3D30(v14, v18);
      if (v17 < 0)
      {
        if (*(_BYTE *)((v17 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) && *(_BYTE *)((v17 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) != 1)
        {
          v35 = *(_QWORD *)((v17 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
          v37 = *(_QWORD *)((v17 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
          v44 = *(_QWORD *)((v17 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
          v36 = v44;
          v45 = v37;
          v46 = v35;
          v47 = 6;
          swift_retain();
          sub_1BA896AAC(v36, v37, v35, 2);
          v42 = sub_1BB6B84D4(&v44, &v47);
          swift_bridgeObjectRetain();
          sub_1BB3D7F90(v36, v37, v42, 0);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        v20 = *(_QWORD *)(v17 + 16);
        v19 = *(_QWORD *)(v17 + 24);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BABF3D30(v14, v20);
        if (v19 < 0)
        {
          if (*(_BYTE *)((v19 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) && *(_BYTE *)((v19 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) != 1)
          {
            v39 = *(_QWORD *)((v19 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
            v38 = *(_QWORD *)((v19 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
            v44 = *(_QWORD *)((v19 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
            v40 = v44;
            v45 = v39;
            v46 = v38;
            v47 = 6;
            swift_retain();
            sub_1BA896AAC(v40, v39, v38, 2);
            v41 = sub_1BB6B84D4(&v44, &v47);
            swift_bridgeObjectRetain();
            sub_1BB3D7F90(v40, v39, v41, 0);
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_release();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          v22 = *(_QWORD *)(v19 + 16);
          v21 = *(_QWORD *)(v19 + 24);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1BABF3D30(v14, v22);
          v44 = v21;
          sub_1BAC4A684(v14);
          v3 = 0;
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_release();
          swift_bridgeObjectRelease();
        }
        swift_release();
      }
    }
    swift_release();
    swift_release();
    goto LABEL_33;
  }
  return result;
}

void sub_1BABF4888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  v4 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  if (v8)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v10 = *(_QWORD *)(v5 + 72);
    v11[1] = a2;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BA4C2DD8(v9, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v11[3] = *((_QWORD *)v7 + 2);
      swift_retain();
      sub_1BAC49F9C();
      if (v2)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v9 += v10;
      if (!--v8)
        goto LABEL_7;
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
LABEL_7:
    swift_bridgeObjectRelease();
  }
}

void sub_1BABF49B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[17];
  uint64_t v57;
  char *v58;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78[6];

  v3 = v2;
  sub_1BAC68E74(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v56 - v11;
  sub_1BA7125BC(0);
  v65 = v13;
  MEMORY[0x1E0C80A78](v13);
  v60 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v75 = (char *)v56 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v56 - v18;
  MEMORY[0x1E0C80A78](v20);
  v68 = (char *)v56 - v21;
  sub_1BAC68DFC(0);
  v63 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v62 = (char *)v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v69 = (char *)v56 - v25;
  sub_1BA712634(0);
  v64 = v26;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v58 = (char *)v56 - v30;
  MEMORY[0x1E0C80A78](v31);
  v61 = (char *)v56 - v32;
  MEMORY[0x1E0C80A78](v33);
  v67 = (char *)v56 - v34;
  v35 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v35);
  v38 = (char *)v56 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = *(_QWORD *)(a2 + 16);
  if (v73)
  {
    v57 = v36;
    v56[11] = v19;
    v56[13] = v7;
    v56[14] = v12;
    v56[12] = v9;
    v39 = a2 + 32;
    swift_bridgeObjectRetain();
    v40 = 0;
    v41 = &unk_1ED3BE000;
    v70 = a2;
    v76 = v28;
    v72 = v38;
    v66 = a2 + 32;
    while (1)
    {
      v74 = v40;
      v42 = (uint64_t *)(v39 + 32 * v40);
      v43 = *v42;
      v44 = v42[1];
      v45 = v42[3];
      v46 = v41[255];
      swift_bridgeObjectRetain_n();
      v77 = v45;
      swift_bridgeObjectRetain();
      if (v46 != -1)
        swift_once();
      v78[0] = v43;
      v78[1] = v44;
      v78[5] = v44;
      v47 = sub_1BA6E583C(v78);
      v48 = *(_QWORD *)(v47 + 16);
      if (v48)
        break;
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v77)
      {
        v52 = (uint64_t)v72;
        if (*(_QWORD *)(v77 + 16))
        {
          v53 = v57;
          v54 = v77 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
          swift_bridgeObjectRetain();
          v55 = *(_QWORD *)(v53 + 72);
          v56[16] = v54;
          v56[15] = v55;
          v71 = 1;
          sub_1BA4C2DD8(v54, v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          __asm { BR              X10 }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v74 + 1;
      v39 = v66;
      v41 = (_QWORD *)&unk_1ED3BE000;
      if (v74 + 1 == v73)
        goto LABEL_15;
    }
    v49 = (uint64_t *)(v47 + 64);
    while (1)
    {
      v50 = *(v49 - 1);
      v51 = *v49;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(a1, v50, v51);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 += 5;
      if (!--v48)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
  }
}

void sub_1BABF837C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[8];
  char v18;
  __int128 v19[8];
  _BYTE v20[136];
  _BYTE v21[136];
  _BYTE v22[144];

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return;
  v6 = a2 + 32;
  swift_bridgeObjectRetain();
  sub_1BA895BCC(v6, (uint64_t)v21);
  v7 = a2 + 168;
  for (i = v4 - 1; ; --i)
  {
    sub_1BA895BCC((uint64_t)v21, (uint64_t)v22);
    v9 = sub_1BA895C08((uint64_t)v22);
    if (!v9)
    {
      v13 = (__int128 *)sub_1BA895E68((uint64_t)v22);
      sub_1BA896178(v13, (uint64_t)v19);
      sub_1BA895FE8(v19, (uint64_t)v17);
      sub_1BA895BCC((uint64_t)v21, (uint64_t)v20);
      v14 = (_QWORD *)sub_1BA895E68((uint64_t)v20);
      sub_1BA6A0C50(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA895C14);
      v12 = v3;
      sub_1BAC3CE40();
LABEL_8:
      v3 = v12;
      sub_1BAC68720((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BAC686C8);
      if (v12)
        goto LABEL_17;
LABEL_11:
      if (!i)
        goto LABEL_17;
      goto LABEL_12;
    }
    if (v9 != 1)
    {
      sub_1BA895E68((uint64_t)v22);
      goto LABEL_11;
    }
    v10 = sub_1BA895E68((uint64_t)v22);
    sub_1BA53BAD8(v10, (uint64_t)v20);
    if (sub_1BA895ED8((uint64_t)v20) == 1)
    {
      *(_QWORD *)&v17[0] = *(_QWORD *)sub_1BA895EE4((uint64_t)v20);
      sub_1BA895BCC((uint64_t)v21, (uint64_t)v19);
      v11 = sub_1BA895E68((uint64_t)v19);
      sub_1BAC68720(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
      v12 = v3;
      sub_1BAC35E00();
      goto LABEL_8;
    }
    v15 = sub_1BA895EE4((uint64_t)v20);
    v17[5] = *(_OWORD *)(v15 + 80);
    v17[6] = *(_OWORD *)(v15 + 96);
    v17[7] = *(_OWORD *)(v15 + 112);
    v18 = *(_BYTE *)(v15 + 128);
    v17[1] = *(_OWORD *)(v15 + 16);
    v17[2] = *(_OWORD *)(v15 + 32);
    v17[3] = *(_OWORD *)(v15 + 48);
    v17[4] = *(_OWORD *)(v15 + 64);
    v17[0] = *(_OWORD *)v15;
    sub_1BA895BCC((uint64_t)v21, (uint64_t)v19);
    v16 = sub_1BA895E68((uint64_t)v19);
    sub_1BAC68720(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA769620);
    sub_1BAC3CE40();
    if (v3)
      break;
    sub_1BAC68720((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BAC686C8);
    if (!i)
      goto LABEL_17;
LABEL_12:
    sub_1BA895BCC(v7, (uint64_t)v21);
    v7 += 136;
  }
  sub_1BAC68720((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BAC686C8);
LABEL_17:
  swift_bridgeObjectRelease();
}

uint64_t sub_1BABF85C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(a2 + 48);
    while (1)
    {
      v15 = v4;
      v7 = *(v6 - 2);
      v8 = *(v6 - 1);
      v9 = *v6;
      v10 = v6[1];
      v12 = v6[2];
      v11 = v6[3];
      v13 = v6[4];
      sub_1BA76B724(v7, v8, *v6, v10, v12, v11, v13);
      sub_1BAC490F8();
      if (v3)
        break;
      v6 += 8;
      sub_1BA76B698(v7, v8, v9, v10, v12, v11, v13);
      v4 = v15 - 1;
      if (v15 == 1)
        return swift_bridgeObjectRelease();
    }
    sub_1BA76B698(v7, v8, v9, v10, v12, v11, v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BABF86EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD v44[9];
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unsigned int v65;

  v63 = a1;
  sub_1BA74E17C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent);
  MEMORY[0x1E0C80A78](v3);
  v60 = (char *)v44 - v4;
  sub_1BA74E17C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont);
  MEMORY[0x1E0C80A78](v5);
  v59 = (char *)v44 - v6;
  sub_1BA74E17C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent);
  MEMORY[0x1E0C80A78](v7);
  v58 = (char *)v44 - v8;
  sub_1BA74E17C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent);
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)v44 - v10;
  sub_1BA74E17C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor);
  MEMORY[0x1E0C80A78](v11);
  v56 = (char *)v44 - v12;
  v13 = type metadata accessor for FormatPropertyDefinition(0);
  v48 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v44 - v17;
  v19 = *(_QWORD *)(a2 + 16);
  if (v19)
  {
    v44[7] = a2;
    swift_bridgeObjectRetain();
    v20 = a2 + 32;
    v21 = 0;
    v64 = v15;
    v47 = v19;
    v46 = a2 + 32;
    v45 = v18;
    v44[8] = v13;
    do
    {
      v22 = v20 + 88 * v21;
      v23 = *(unsigned __int8 *)(v22 + 80);
      if (v23 >> 6)
      {
        v24 = *(_QWORD *)(v22 + 8);
        v25 = *(_QWORD *)(v22 + 24);
        v26 = *(_QWORD *)(v22 + 32);
        v27 = *(_QWORD *)(v22 + 40);
        v28 = *(_QWORD *)(v22 + 48);
        v29 = *(_QWORD *)(v22 + 56);
        v30 = *(_QWORD *)(v22 + 64);
        v31 = *(_QWORD *)(v22 + 72);
        v62 = v28;
        if (v23 >> 6 == 1)
        {
          if ((v23 & 1) == 0)
          {
            if (*(_BYTE *)(v28 + 41))
              v32 = 4;
            else
              v32 = 0;
            v33 = (char *)&loc_1BABF8944
                + 4 * word_1BB8A5F54[v32 & 0xFFFFFFFC | (*(unsigned __int8 *)(v28 + 40) >> 2) & 3];
            v65 = v23;
            v50 = v29;
            v51 = v31;
            v52 = v27;
            v53 = v30;
            v61 = v24;
            v55 = v25;
            v49 = v21;
            __asm { BR              X9 }
          }
        }
        else if (*(_QWORD *)(v26 + 16))
        {
          v49 = v21;
          v34 = v31;
          v35 = v26 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
          v61 = v24;
          v36 = v26;
          v37 = v27;
          v54 = v26;
          v55 = v25;
          v38 = v62;
          v39 = v23;
          sub_1BA709DE8(v36, v27, v62, v29, v30, v34, v23);
          sub_1BA709DE8(v54, v37, v38, v29, v30, v34, v39);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v52 = v37;
          v53 = v30;
          v50 = v29;
          v51 = v34;
          v40 = v34;
          v41 = (uint64_t)v64;
          v65 = v39;
          sub_1BA709DE8(v54, v37, v38, v29, v30, v40, v39);
          v42 = (uint64_t)v45;
          sub_1BA4C2DD8(v35, (uint64_t)v45, type metadata accessor for FormatPropertyDefinition);
          sub_1BA4C2DD8(v42, v41, type metadata accessor for FormatPropertyDefinition);
          v43 = (char *)&loc_1BABF8EC0 + 4 * byte_1BB8A5F48[swift_getEnumCaseMultiPayload()];
          __asm { BR              X9 }
        }
      }
      ++v21;
    }
    while (v21 != v19);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BABFC2C4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[2];
  uint64_t v52;

  v52 = result;
  v3 = v2;
  v49 = *(_QWORD *)(a2 + 16);
  if (!v49)
    return result;
  v4 = a2 + 32;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = &unk_1ED3BE000;
  v48 = v4;
  while (1)
  {
    v7 = v4 + 40 * v5;
    v8 = *(_QWORD *)v7;
    v9 = *(_QWORD *)(v7 + 8);
    v10 = *(_QWORD *)(v7 + 24);
    v11 = *(unsigned __int16 *)(v7 + 32) | (*(unsigned __int8 *)(v7 + 34) << 16);
    swift_bridgeObjectRetain();
    v50 = v10;
    sub_1BA771834(v10, v11);
    v12 = v6[255];
    swift_bridgeObjectRetain();
    if (v12 != -1)
      swift_once();
    v51[0] = v8;
    v51[1] = v9;
    v13 = sub_1BA6E583C(v51);
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (uint64_t *)(v13 + 64);
      do
      {
        v17 = *(v15 - 1);
        v16 = *v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BB043358(v52, v17, v16);
        if (v3)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v46 = v50;
          v47 = v11;
          goto LABEL_116;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 += 5;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v11;
    v19 = BYTE2(v11);
    if (BYTE2(v11) != 255)
      break;
    v20 = v50;
LABEL_113:
    ++v5;
    swift_bridgeObjectRelease();
    sub_1BA771864(v20, v18);
    v4 = v48;
    v6 = (_QWORD *)&unk_1ED3BE000;
    if (v5 == v49)
      return swift_bridgeObjectRelease();
  }
  v20 = v50;
  if (!v19)
    goto LABEL_111;
  if (v19 == 1)
  {
    if ((v18 & 0x100) != 0)
    {
      switch((char)v18)
      {
        case 0:
          if (!v50)
            goto LABEL_70;
          if (v50 == 1)
            goto LABEL_69;
          v27 = *(_QWORD *)(v50 + 16);
          if (!v27)
            goto LABEL_113;
          sub_1BA771834(v50, v18);
          sub_1BA771834(v50, v18);
          sub_1BA77A170(v50, v18, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          v28 = (_BYTE *)(v50 + 40);
          while (2)
          {
            if ((*v28 & 1) != 0)
              goto LABEL_40;
            v26 = *((_QWORD *)v28 - 1);
            v51[0] = v26;
            swift_retain_n();
            sub_1BA9F22C4();
            if (!v3)
            {
              sub_1BA72C46C(v26, 0);
              sub_1BA72C46C(v26, 0);
LABEL_40:
              v28 += 16;
              if (!--v27)
                goto LABEL_109;
              continue;
            }
            goto LABEL_119;
          }
        case 1:
          if (!v50)
            goto LABEL_70;
          if (v50 == 1)
            goto LABEL_69;
          v32 = *(_QWORD *)(v50 + 16);
          if (!v32)
            goto LABEL_113;
          sub_1BA771834(v50, v18);
          sub_1BA771834(v50, v18);
          sub_1BA77A170(v50, v18, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          v33 = (_BYTE *)(v50 + 40);
          while (2)
          {
            if ((*v33 & 1) != 0)
              goto LABEL_54;
            v26 = *((_QWORD *)v33 - 1);
            v51[0] = v26;
            swift_retain_n();
            sub_1BA9F22C4();
            if (!v3)
            {
              sub_1BA72C46C(v26, 0);
              sub_1BA72C46C(v26, 0);
LABEL_54:
              v33 += 16;
              if (!--v32)
                goto LABEL_109;
              continue;
            }
            goto LABEL_119;
          }
        case 2:
          if (!v50)
            goto LABEL_70;
          if (v50 == 1)
            goto LABEL_69;
          v34 = *(_QWORD *)(v50 + 16);
          if (!v34)
            goto LABEL_113;
          sub_1BA771834(v50, v18);
          sub_1BA771834(v50, v18);
          sub_1BA77A170(v50, v18, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          v35 = (_BYTE *)(v50 + 40);
          while (2)
          {
            if ((*v35 & 1) != 0)
              goto LABEL_63;
            v26 = *((_QWORD *)v35 - 1);
            v51[0] = v26;
            swift_retain_n();
            sub_1BA9F22C4();
            if (!v3)
            {
              sub_1BA72C46C(v26, 0);
              sub_1BA72C46C(v26, 0);
LABEL_63:
              v35 += 16;
              if (!--v34)
                goto LABEL_109;
              continue;
            }
            goto LABEL_119;
          }
        case 3:
          if (!v50)
          {
LABEL_70:
            sub_1BA771864(0, v18);
            v36 = 0;
            goto LABEL_112;
          }
          if (v50 == 1)
          {
LABEL_69:
            sub_1BA771864(1, v18);
            v36 = 1;
            goto LABEL_112;
          }
          v42 = *(_QWORD *)(v50 + 16);
          if (v42)
          {
            sub_1BA771834(v50, v18);
            sub_1BA771834(v50, v18);
            sub_1BA77A170(v50, v18, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
            v43 = (_BYTE *)(v50 + 40);
            while (1)
            {
              if ((*v43 & 1) == 0)
              {
                v26 = *((_QWORD *)v43 - 1);
                v51[0] = v26;
                swift_retain_n();
                sub_1BA9F22C4();
                if (v3)
                  goto LABEL_119;
                sub_1BA72C46C(v26, 0);
                sub_1BA72C46C(v26, 0);
              }
              v43 += 16;
              if (!--v42)
                goto LABEL_109;
            }
          }
          break;
        default:
          goto LABEL_111;
      }
    }
    else
    {
      v21 = *(_QWORD *)(v50 + 16);
      if (v21)
      {
        sub_1BA771834(v50, v18);
        sub_1BA77A170(v50, v18, 1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        v22 = (_BYTE *)(v50 + 40);
        while (1)
        {
          if ((*v22 & 1) == 0)
          {
            v51[0] = *((_QWORD *)v22 - 1);
            v23 = v51[0];
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v23, 0);
            sub_1BA72C46C(v23, 0);
            if (v3)
              goto LABEL_121;
          }
          v22 += 16;
          if (!--v21)
            goto LABEL_110;
        }
      }
    }
    goto LABEL_113;
  }
  if (BYTE1(v18) == 255)
    goto LABEL_111;
  if ((v18 & 0x100) == 0)
  {
    v24 = *(_QWORD *)(v50 + 16);
    if (v24)
    {
      sub_1BA771834(v50, v18);
      sub_1BA771834(v50, v18);
      sub_1BA77A170(v50, v18, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      v25 = (_BYTE *)(v50 + 40);
      while (1)
      {
        if ((*v25 & 1) == 0)
        {
          v26 = *((_QWORD *)v25 - 1);
          v51[0] = v26;
          swift_retain_n();
          sub_1BA9F22C4();
          if (v3)
          {
LABEL_119:
            sub_1BA72C46C(v26, 0);
            sub_1BA72C46C(v26, 0);
            goto LABEL_120;
          }
          sub_1BA72C46C(v26, 0);
          sub_1BA72C46C(v26, 0);
        }
        v25 += 16;
        if (!--v24)
          goto LABEL_109;
      }
    }
    goto LABEL_113;
  }
  switch((char)v18)
  {
    case 0:
      if (!v50)
        goto LABEL_92;
      if (v50 == 1)
        goto LABEL_91;
      v29 = *(_QWORD *)(v50 + 16);
      if (!v29)
        goto LABEL_113;
      sub_1BA771834(v50, v18);
      sub_1BA771834(v50, v18);
      sub_1BA771834(v50, v18);
      sub_1BA77A170(v50, v18, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      v30 = (_BYTE *)(v50 + 40);
      while (2)
      {
        if ((*v30 & 1) != 0)
          goto LABEL_45;
        v31 = *((_QWORD *)v30 - 1);
        v51[0] = v31;
        swift_retain_n();
        sub_1BA9F22C4();
        if (!v3)
        {
          sub_1BA72C46C(v31, 0);
          sub_1BA72C46C(v31, 0);
LABEL_45:
          v30 += 16;
          if (!--v29)
            goto LABEL_108;
          continue;
        }
        goto LABEL_122;
      }
    case 1:
      if (!v50)
        goto LABEL_92;
      if (v50 == 1)
        goto LABEL_91;
      v37 = *(_QWORD *)(v50 + 16);
      if (!v37)
        goto LABEL_113;
      sub_1BA771834(v50, v18);
      sub_1BA771834(v50, v18);
      sub_1BA771834(v50, v18);
      sub_1BA77A170(v50, v18, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      v38 = (_BYTE *)(v50 + 40);
      while (2)
      {
        if ((*v38 & 1) != 0)
          goto LABEL_76;
        v31 = *((_QWORD *)v38 - 1);
        v51[0] = v31;
        swift_retain_n();
        sub_1BA9F22C4();
        if (!v3)
        {
          sub_1BA72C46C(v31, 0);
          sub_1BA72C46C(v31, 0);
LABEL_76:
          v38 += 16;
          if (!--v37)
            goto LABEL_108;
          continue;
        }
        goto LABEL_122;
      }
    case 2:
      if (!v50)
        goto LABEL_92;
      if (v50 == 1)
        goto LABEL_91;
      v39 = *(_QWORD *)(v50 + 16);
      if (!v39)
        goto LABEL_113;
      sub_1BA771834(v50, v18);
      sub_1BA771834(v50, v18);
      sub_1BA771834(v50, v18);
      sub_1BA77A170(v50, v18, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      v40 = (_BYTE *)(v50 + 40);
      while (2)
      {
        if ((*v40 & 1) != 0)
          goto LABEL_85;
        v31 = *((_QWORD *)v40 - 1);
        v51[0] = v31;
        swift_retain_n();
        sub_1BA9F22C4();
        if (!v3)
        {
          sub_1BA72C46C(v31, 0);
          sub_1BA72C46C(v31, 0);
LABEL_85:
          v40 += 16;
          if (!--v39)
            goto LABEL_108;
          continue;
        }
        goto LABEL_122;
      }
    case 3:
      if (!v50)
      {
LABEL_92:
        sub_1BA771864(0, v18);
        sub_1BA771864(0, v18);
        v41 = 0;
        goto LABEL_93;
      }
      if (v50 == 1)
      {
LABEL_91:
        sub_1BA771864(1, v18);
        sub_1BA771864(1, v18);
        v41 = 1;
LABEL_93:
        sub_1BA77A170(v41, v18, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
        goto LABEL_113;
      }
      v44 = *(_QWORD *)(v50 + 16);
      if (!v44)
        goto LABEL_113;
      sub_1BA771834(v50, v18);
      sub_1BA771834(v50, v18);
      sub_1BA771834(v50, v18);
      sub_1BA77A170(v50, v18, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      v45 = (_BYTE *)(v50 + 40);
      while (2)
      {
        if ((*v45 & 1) != 0)
          goto LABEL_104;
        v31 = *((_QWORD *)v45 - 1);
        v51[0] = v31;
        swift_retain_n();
        sub_1BA9F22C4();
        if (!v3)
        {
          sub_1BA72C46C(v31, 0);
          sub_1BA72C46C(v31, 0);
LABEL_104:
          v45 += 16;
          if (!--v44)
          {
LABEL_108:
            sub_1BA771864(v50, v18);
LABEL_109:
            sub_1BA771864(v50, v18);
LABEL_110:
            sub_1BA771864(v50, v18);
LABEL_111:
            v36 = v50;
LABEL_112:
            sub_1BA771864(v36, v18);
            goto LABEL_113;
          }
          continue;
        }
        break;
      }
LABEL_122:
      sub_1BA72C46C(v31, 0);
      sub_1BA72C46C(v31, 0);
      sub_1BA771864(v50, v18);
LABEL_120:
      sub_1BA771864(v50, v18);
LABEL_121:
      sub_1BA771864(v50, v18);
      sub_1BA771864(v50, v18);
      swift_bridgeObjectRelease();
      v46 = v50;
      v47 = v18;
LABEL_116:
      sub_1BA771864(v46, v47);
      return swift_bridgeObjectRelease();
    default:
      goto LABEL_110;
  }
}

uint64_t sub_1BABFCD44(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v5 = result;
    v6 = a2 + 32;
    swift_bridgeObjectRetain();
    v7 = 0;
    v19 = v5;
    v16 = v6;
    v17 = v4;
    while (1)
    {
      v8 = *(_QWORD *)(v6 + 40 * v7 + 32);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
        break;
LABEL_3:
      if (++v7 == v4)
        return swift_bridgeObjectRelease();
    }
    v18 = v7;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = (_OWORD *)(v8 + 56);
    while (1)
    {
      v11 = *((_QWORD *)v10 - 1);
      if (v11)
      {
        v20 = *((_QWORD *)v10 - 2);
        v21 = *v10;
        v12 = *(_QWORD **)(v5 + 56);
        swift_retain();
        swift_bridgeObjectRetain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1BB38ED20(0, v12[2] + 1, 1, v12);
        v14 = v12[2];
        v13 = v12[3];
        if (v14 >= v13 >> 1)
          v12 = sub_1BB38ED20((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
        v12[2] = v14 + 1;
        v15 = &v12[4 * v14];
        v5 = v19;
        v15[4] = v20;
        v15[5] = v11;
        *((_OWORD *)v15 + 3) = v21;
        *(_QWORD *)(v19 + 56) = v12;
      }
      else
      {
        swift_retain();
      }
      swift_retain();
      sub_1BAC46704(v5);
      if (v3)
        break;
      v10 = (_OWORD *)((char *)v10 + 40);
      swift_release_n();
      swift_bridgeObjectRelease();
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v6 = v16;
        v4 = v17;
        v7 = v18;
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BABFCF90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[22];
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v12 = a1;
  v3 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  if (*(_QWORD *)(a2 + 16))
  {
    v8[10] = v7;
    v8[9] = v5;
    v8[11] = (char *)v8 - v6;
    v10 = (uint64_t *)(a2 + 32);
    v8[12] = a2;
    swift_bridgeObjectRetain();
    v11 = *v10;
    __asm { BR              X9 }
  }
}

void sub_1BAC04404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  unsigned __int8 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t *v193;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  __int128 v209;
  __int128 v210;
  __int16 v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char v216;
  unint64_t v217;

  v189 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v189);
  v191 = (char *)&v173 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v192 = (char *)&v173 - v6;
  if (*(_QWORD *)(a2 + 16))
  {
    v195 = a2 + 32;
    v193 = (uint64_t *)(a1 + 48);
    v188 = a2;
    swift_bridgeObjectRetain();
    v205 = a1;
    v7 = *(_QWORD **)v195;
    v8 = *(_QWORD *)(v195 + 8);
    v10 = *(_QWORD *)(v195 + 16);
    v9 = *(_QWORD *)(v195 + 24);
    v12 = *(_QWORD *)(v195 + 32);
    v11 = *(_QWORD *)(v195 + 40);
    v14 = *(_QWORD *)(v195 + 48);
    v13 = *(_QWORD *)(v195 + 56);
    v201 = *(_QWORD **)v195;
    v202 = v14;
    v199 = 0;
    v200 = v11;
    v203 = v13;
    v204 = v9;
    if ((v9 & 4) == 0)
    {
      v15 = v204;
      sub_1BA7CCBB4((uint64_t)v7, v8, v10, v204);
      sub_1BA7CCBB4((uint64_t)v7, v8, v10, v15);
      sub_1BA7CCBB4((uint64_t)v7, v8, v10, v15);
      sub_1BA7CCCA0(v12, v11, v14);
      v16 = v13 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain();
      v17 = v206;
      sub_1BAC1CF38(v205, v7);
      v206 = v17;
      if (!v17)
      {
        if (*(_BYTE *)(v8 + 41))
          v18 = 4;
        else
          v18 = 0;
        v19 = (char *)&loc_1BAC045FC + 4 * word_1BB8A5F78[v18 & 0xFFFFFFFC | (*(unsigned __int8 *)(v8 + 40) >> 2) & 3];
        v190 = v16;
        __asm { BR              X9 }
      }
      v152 = v204;
      sub_1BA7CCC14((uint64_t)v7, v8, v10, v204);
      sub_1BA7CCC14((uint64_t)v7, v8, v10, v152);
      sub_1BA7CCC14((uint64_t)v7, v8, v10, v152);
      sub_1BA7CCC64(v12, v11, v14);
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
    v207 = (unint64_t)v7;
    v20 = v204;
    sub_1BA7CCBB4((uint64_t)v7, v8, v10, v204);
    sub_1BA7CCBB4((uint64_t)v7, v8, v10, v20);
    sub_1BA7CCBB4((uint64_t)v7, v8, v10, v20);
    v21 = (uint64_t)v7;
    v22 = v14;
    sub_1BA7CCCA0(v12, v11, v14);
    swift_retain();
    v23 = v206;
    sub_1BB5635E8();
    v206 = v23;
    if (v23)
    {
      v153 = v204;
      sub_1BA7CCC14(v21, v8, v10, v204);
      sub_1BA7CCC14(v21, v8, v10, v153);
      sub_1BA7CCC14(v21, v8, v10, v153);
      sub_1BA7CCC64(v12, v11, v22);
      swift_bridgeObjectRelease();
LABEL_56:
      swift_release();
      return;
    }
    v24 = v204;
    sub_1BA7CCC14(v21, v8, v10, v204);
    sub_1BA7CCC14(v21, v8, v10, v24);
    v197 = v10;
    if ((v14 & 0x2000000000000000) == 0)
    {
      if (*(_BYTE *)(v12 + 41))
        v25 = 4;
      else
        v25 = 0;
      __asm { BR              X9 }
    }
    v196 = v8;
    if (!(v12 >> 62))
    {
      v49 = *(_QWORD *)(v12 + 24);
      v180 = *(_QWORD *)(v12 + 16);
      v184 = v49;
      v50 = v11;
      v185 = *(_QWORD *)(v12 + 32);
      LODWORD(v183) = *(unsigned __int8 *)(v12 + 40);
      v51 = *(_QWORD *)(v12 + 48);
      v187 = *(_QWORD *)(v12 + 56);
      LODWORD(v186) = *(unsigned __int16 *)(v12 + 64);
      v53 = *(_QWORD *)(v12 + 72);
      v52 = *(_QWORD *)(v12 + 80);
      v55 = *(_QWORD *)(v12 + 88);
      v54 = *(_QWORD *)(v12 + 96);
      v56 = *(unsigned __int8 *)(v12 + 104);
      v190 = *(_QWORD *)(v12 + 112);
      v207 = v180;
      v208 = v49;
      *(_QWORD *)&v209 = v185;
      BYTE8(v209) = v183;
      *(_QWORD *)&v210 = v51;
      *((_QWORD *)&v210 + 1) = v187;
      v211 = v186;
      v212 = v53;
      v213 = v52;
      v214 = v55;
      v215 = v54;
      v57 = v54;
      v216 = v56;
      v217 = v190;
      sub_1BA7CCCA0(v12, v50, v14);
      v58 = v50;
      LODWORD(v50) = v56;
      v59 = v57;
      sub_1BA7CCCA0(v12, v58, v14);
      v60 = v180;
      sub_1BA60DF54(v180, v184, v185, v183);
      sub_1BA740E74(v51, v187, v186);
      v181 = v53;
      sub_1BA60DEE4(v53);
      LODWORD(v182) = v50;
      sub_1BA69C808(v55, v59, v50);
      sub_1BA895BA4(v190);
      v61 = v206;
      sub_1BAC324DC(v205);
      v206 = v61;
      if (!v61)
      {
        sub_1BA60DFC4(v60, v184, v185, v183);
        sub_1BA740460(v51, v187, v186);
        sub_1BA60DF1C(v181);
        sub_1BA69C828(v55, v59, v182);
        sub_1BA895BB8(v190);
        v62 = v200;
        v63 = v202;
        sub_1BA7CCC64(v12, v200, v202);
        sub_1BA7CCC64(v12, v62, v63);
        v82 = v203;
        goto LABEL_55;
      }
      sub_1BA60DFC4(v60, v184, v185, v183);
      sub_1BA740460(v51, v187, v186);
      sub_1BA60DF1C(v181);
      sub_1BA69C828(v55, v59, v182);
      sub_1BA895BB8(v190);
      v154 = v200;
      v155 = v202;
      sub_1BA7CCC64(v12, v200, v202);
      sub_1BA7CCC64(v12, v154, v155);
      sub_1BA7CCC14((uint64_t)v201, v196, v197, v204);
      v168 = v12;
      v172 = v154;
      v156 = v155;
      goto LABEL_72;
    }
    v198 = v12;
    if (v12 >> 62 == 1)
    {
      v26 = v11;
      v28 = *(_QWORD *)(v12 + 16);
      v27 = *(_QWORD *)(v12 + 24);
      v29 = *(_QWORD *)(v12 + 32);
      v30 = *(_QWORD *)(v12 + 40);
      v187 = *(_QWORD *)(v12 + 48);
      v190 = *(_QWORD *)(v12 + 56);
      v31 = *(unsigned __int8 *)(v12 + 64);
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = v28;
      *(_QWORD *)(v32 + 24) = v27;
      v186 = v27;
      *(_QWORD *)(v32 + 32) = v29;
      *(_QWORD *)(v32 + 40) = v30;
      v33 = v32 | 0x9000000000000000;
      v34 = (_QWORD *)*v193;
      v35 = *(_QWORD *)(*v193 + 16);
      if (v35)
      {
        v36 = v31;
        v37 = v26;
        v38 = v34[v35 + 3];
        v39 = v26;
        v40 = v202;
        sub_1BA7CCCA0(v12, v39, v202);
        v41 = v37;
        v31 = v36;
        sub_1BA7CCCA0(v12, v41, v40);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42 = v38;
        v43 = v33;
        sub_1BAA736F8(v42);
        v45 = v44;
        swift_release();
        swift_release();
        v46 = v197;
        v47 = v190;
        v48 = v187;
        if ((v45 & 1) != 0)
        {
LABEL_30:
          swift_release();
          if (v31 != 255)
          {
            v207 = v48;
            v208 = v47;
            LOBYTE(v209) = v31;
            sub_1BA76F534(v48, v47, v31);
            v86 = v206;
            sub_1BAC3816C();
            v88 = (uint64_t)v201;
            v87 = v202;
            v89 = v48;
            v90 = v198;
            v206 = v86;
            v91 = v200;
            v82 = v203;
            v92 = v196;
            if (!v86)
            {
              sub_1BA76F520(v89, v47, v31);
              sub_1BA7CCC64(v90, v91, v87);
              sub_1BA7CCC64(v90, v91, v87);
              goto LABEL_55;
            }
            sub_1BA76F520(v89, v47, v31);
            sub_1BA7CCC64(v90, v91, v87);
            sub_1BA7CCC64(v90, v91, v87);
            sub_1BA7CCC14(v88, v92, v46, v204);
            v158 = v90;
            v159 = v91;
            goto LABEL_62;
          }
          v93 = v198;
          v94 = v200;
          v95 = v202;
          sub_1BA7CCC64(v198, v200, v202);
          sub_1BA7CCC64(v93, v94, v95);
          v82 = v203;
          goto LABEL_55;
        }
      }
      else
      {
        v43 = v32 | 0x9000000000000000;
        v83 = v202;
        sub_1BA7CCCA0(v12, v26, v202);
        sub_1BA7CCCA0(v12, v26, v83);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46 = v197;
        v47 = v190;
        v48 = v187;
      }
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v193 = (uint64_t)v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v34 = sub_1BB38ED0C(0, v34[2] + 1, 1, v34);
        *v193 = (uint64_t)v34;
      }
      v85 = v34[2];
      sub_1BA9815AC(v85);
      sub_1BA9816C0(v85, v43);
      nullsub_1();
      goto LABEL_30;
    }
    v64 = *(_QWORD *)(v12 + 16);
    v190 = *(_QWORD *)(v12 + 24);
    v187 = v64;
    v65 = v64 >> 62;
    if ((_DWORD)v65)
    {
      if ((_DWORD)v65 == 1)
      {
        v66 = v187 & 0x3FFFFFFFFFFFFFFFLL;
        v68 = *(_QWORD *)(v187 + 16);
        v67 = *(_QWORD *)(v187 + 24);
        v70 = *(_QWORD *)(v187 + 32);
        v69 = *(_QWORD *)(v187 + 40);
        v184 = *(_QWORD *)(v187 + 48);
        v185 = *(_QWORD *)(v187 + 56);
        LODWORD(v186) = *(unsigned __int8 *)(v187 + 64);
        v71 = swift_allocObject();
        *(_QWORD *)(v71 + 16) = v68;
        *(_QWORD *)(v71 + 24) = v67;
        *(_QWORD *)(v71 + 32) = v70;
        *(_QWORD *)(v71 + 40) = v69;
        v72 = v71 | 0x9000000000000000;
        v73 = *v193;
        v74 = *(_QWORD *)(*v193 + 16);
        v182 = v66;
        if (v74)
        {
          v75 = v74 - 1;
          sub_1BA8E9170(v74 - 1, 1, v73);
          v76 = *(_QWORD *)(v73 + 8 * v75 + 32);
          v183 = v67;
          v77 = v198;
          v78 = v200;
          v79 = v202;
          sub_1BA7CCCA0(v198, v200, v202);
          sub_1BA7CCCA0(v77, v78, v79);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAA736F8(v76);
          v81 = v80;
          swift_release();
          swift_release();
          if ((v81 & 1) != 0)
          {
LABEL_42:
            swift_release();
            v122 = v186;
            v10 = v197;
            v109 = v205;
            if ((_DWORD)v186 != 255)
            {
              v123 = v184;
              v124 = v185;
              v207 = v184;
              v208 = v185;
              LOBYTE(v209) = v186;
              sub_1BA76F534(v184, v185, v186);
              v125 = v206;
              sub_1BAC3816C();
              v206 = v125;
              v82 = v203;
              if (!v125)
              {
                sub_1BA76F520(v123, v124, v122);
                v10 = v197;
LABEL_53:
                v148 = v190;
                swift_bridgeObjectRetain();
                v149 = v206;
                sub_1BAC1A144(v109, v148);
                v87 = v202;
                v150 = v198;
                v206 = v149;
                if (v149)
                {
                  swift_bridgeObjectRelease_n();
                  swift_release();
                  v157 = v200;
                  sub_1BA7CCC64(v150, v200, v87);
                  sub_1BA7CCC64(v150, v157, v87);
                  sub_1BA7CCC14((uint64_t)v201, v196, v10, v204);
                  v158 = v150;
                  v159 = v157;
LABEL_62:
                  sub_1BA7CCC64(v158, v159, v87);
                  swift_bridgeObjectRelease();
                  goto LABEL_56;
                }
                swift_bridgeObjectRelease_n();
                swift_release();
                v151 = v200;
                sub_1BA7CCC64(v150, v200, v87);
                sub_1BA7CCC64(v150, v151, v87);
LABEL_55:
                __asm { BR              X9 }
              }
              sub_1BA76F520(v123, v124, v122);
              swift_bridgeObjectRelease();
              swift_release();
              v160 = v198;
              v161 = v200;
              v162 = v202;
              sub_1BA7CCC64(v198, v200, v202);
              sub_1BA7CCC64(v160, v161, v162);
              v163 = (uint64_t)v201;
              v164 = v196;
              v165 = v197;
LABEL_67:
              sub_1BA7CCC14(v163, v164, v165, v204);
              sub_1BA7CCC64(v160, v161, v162);
              swift_bridgeObjectRelease();
              goto LABEL_56;
            }
LABEL_45:
            v82 = v203;
            goto LABEL_53;
          }
        }
        else
        {
          v117 = v198;
          v118 = v200;
          v119 = v202;
          sub_1BA7CCCA0(v198, v200, v202);
          sub_1BA7CCCA0(v117, v118, v119);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_retain();
        v120 = v193;
        sub_1BA9814D4();
        v121 = *(_QWORD *)(*v120 + 16);
        sub_1BA9815AC(v121);
        sub_1BA9816C0(v121, v72);
        nullsub_1();
        goto LABEL_42;
      }
      v185 = v187 & 0x3FFFFFFFFFFFFFFFLL;
      v110 = *(_QWORD *)(v187 + 16);
      v186 = *(_QWORD *)(v187 + 24);
      if (v110 >> 62)
      {
        if (v110 >> 62 == 1)
        {
          v111 = *(_QWORD *)(v110 + 24);
          v112 = *(_BYTE *)(v110 + 64);
          v207 = *(_QWORD *)(v110 + 16);
          v208 = v111;
          v113 = *(_OWORD *)(v110 + 48);
          v209 = *(_OWORD *)(v110 + 32);
          v210 = v113;
          LOBYTE(v211) = v112;
          v114 = v198;
          v115 = v202;
          sub_1BA7CCCA0(v198, v11, v202);
          sub_1BA7CCCA0(v114, v11, v115);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          v116 = v206;
          sub_1BAB20414(v205);
          v206 = v116;
          if (v116)
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            v166 = v198;
            v167 = v202;
            sub_1BA7CCC64(v198, v11, v202);
            sub_1BA7CCC64(v166, v11, v167);
            sub_1BA7CCC14((uint64_t)v201, v8, v10, v204);
            v168 = v166;
            v172 = v11;
LABEL_71:
            v156 = v167;
LABEL_72:
            sub_1BA7CCC64(v168, v172, v156);
            swift_bridgeObjectRelease();
            goto LABEL_56;
          }
LABEL_51:
          v146 = v186;
          swift_bridgeObjectRetain();
          v147 = v206;
          sub_1BAC1A144(v205, v146);
          v206 = v147;
          v82 = v203;
          if (!v147)
          {
            swift_bridgeObjectRelease_n();
            swift_release();
            v109 = v205;
            goto LABEL_53;
          }
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
          v160 = v198;
          v161 = v200;
          v162 = v202;
          sub_1BA7CCC64(v198, v200, v202);
          sub_1BA7CCC64(v160, v161, v162);
          v163 = (uint64_t)v201;
          v164 = v196;
          v165 = v10;
          goto LABEL_67;
        }
        v141 = *(_QWORD *)(v110 + 16);
        v140 = *(_QWORD *)(v110 + 24);
        v142 = v11;
        v143 = v198;
        v144 = v202;
        sub_1BA7CCCA0(v198, v142, v202);
        sub_1BA7CCCA0(v143, v142, v144);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v145 = v206;
        sub_1BAC35428(v205, v141, v140);
        v206 = v145;
        if (v145)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          v171 = v198;
          v167 = v202;
          sub_1BA7CCC64(v198, v142, v202);
          sub_1BA7CCC64(v171, v142, v167);
          sub_1BA7CCC14((uint64_t)v201, v196, v197, v204);
          v168 = v171;
          v172 = v142;
          goto LABEL_71;
        }
        swift_bridgeObjectRelease();
        swift_release();
LABEL_50:
        v10 = v197;
        goto LABEL_51;
      }
      v126 = *(_QWORD *)(v110 + 16);
      v176 = *(_QWORD *)(v110 + 24);
      v127 = *(_QWORD *)(v110 + 32);
      LODWORD(v175) = *(unsigned __int8 *)(v110 + 40);
      v128 = *(_QWORD *)(v110 + 56);
      v177 = *(_QWORD *)(v110 + 48);
      v179 = v128;
      LODWORD(v178) = *(unsigned __int16 *)(v110 + 64);
      v129 = *(_QWORD *)(v110 + 72);
      v180 = *(_QWORD *)(v110 + 80);
      v130 = *(_QWORD *)(v110 + 96);
      v181 = *(_QWORD *)(v110 + 88);
      v182 = v130;
      LODWORD(v183) = *(unsigned __int8 *)(v110 + 104);
      v184 = *(_QWORD *)(v110 + 112);
      v207 = v126;
      v208 = v176;
      *(_QWORD *)&v209 = v127;
      BYTE8(v209) = v175;
      *(_QWORD *)&v210 = v177;
      *((_QWORD *)&v210 + 1) = v128;
      v211 = v178;
      v212 = v129;
      v213 = v180;
      v214 = v181;
      v215 = v130;
      v216 = v183;
      v217 = v184;
      v131 = v198;
      v132 = v202;
      sub_1BA7CCCA0(v198, v11, v202);
      sub_1BA7CCCA0(v131, v11, v132);
      v173 = v110 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain();
      v133 = v129;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v134 = v176;
      v135 = v175;
      sub_1BA60DF54(v126, v176, v127, v175);
      v136 = v177;
      v137 = v179;
      v138 = v178;
      sub_1BA740E74(v177, v179, v178);
      v174 = v133;
      sub_1BA60DEE4(v133);
      sub_1BA69C808(v181, v182, v183);
      sub_1BA895BA4(v184);
      v139 = v206;
      sub_1BAC324DC(v205);
      v206 = v139;
      if (!v139)
      {
        sub_1BA60DFC4(v126, v134, v127, v135);
        sub_1BA740460(v136, v137, v138);
        sub_1BA60DF1C(v174);
        sub_1BA69C828(v181, v182, v183);
        sub_1BA895BB8(v184);
        goto LABEL_50;
      }
      sub_1BA60DFC4(v126, v134, v127, v135);
      sub_1BA740460(v136, v137, v138);
      sub_1BA60DF1C(v174);
      sub_1BA69C828(v181, v182, v183);
      sub_1BA895BB8(v184);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      v96 = v187;
      v97 = *(_QWORD *)(v187 + 24);
      v176 = *(_QWORD *)(v187 + 16);
      v178 = v97;
      v179 = *(_QWORD *)(v187 + 32);
      LODWORD(v177) = *(unsigned __int8 *)(v187 + 40);
      v181 = *(_QWORD *)(v187 + 48);
      v180 = *(_QWORD *)(v187 + 56);
      LODWORD(v183) = *(unsigned __int16 *)(v187 + 64);
      v98 = *(_QWORD *)(v187 + 72);
      v99 = *(_QWORD *)(v187 + 80);
      v100 = *(_QWORD *)(v187 + 96);
      v185 = *(_QWORD *)(v187 + 88);
      v175 = v100;
      LODWORD(v184) = *(unsigned __int8 *)(v187 + 104);
      v186 = *(_QWORD *)(v187 + 112);
      v207 = v176;
      v208 = v97;
      *(_QWORD *)&v209 = v179;
      BYTE8(v209) = v177;
      *(_QWORD *)&v210 = v181;
      *((_QWORD *)&v210 + 1) = v180;
      v211 = v183;
      v212 = v98;
      v213 = v99;
      v214 = v185;
      v215 = v100;
      v216 = v184;
      v217 = v186;
      sub_1BA7CCCA0(v12, v11, v14);
      sub_1BA7CCCA0(v12, v11, v14);
      v174 = v96 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_bridgeObjectRetain();
      v101 = v176;
      v102 = v178;
      v103 = v179;
      v104 = v177;
      sub_1BA60DF54(v176, v178, v179, v177);
      v105 = v181;
      v106 = v180;
      sub_1BA740E74(v181, v180, v183);
      v182 = v98;
      sub_1BA60DEE4(v98);
      v107 = v175;
      sub_1BA69C808(v185, v175, v184);
      sub_1BA895BA4(v186);
      v108 = v206;
      sub_1BAC324DC(v205);
      v206 = v108;
      if (!v108)
      {
        sub_1BA60DFC4(v101, v102, v103, v104);
        sub_1BA740460(v105, v106, v183);
        sub_1BA60DF1C(v182);
        sub_1BA69C828(v185, v107, v184);
        sub_1BA895BB8(v186);
        v10 = v197;
        v109 = v205;
        goto LABEL_45;
      }
      sub_1BA60DFC4(v101, v102, v103, v104);
      sub_1BA740460(v105, v106, v183);
      sub_1BA60DF1C(v182);
      sub_1BA69C828(v185, v107, v184);
      sub_1BA895BB8(v186);
      swift_bridgeObjectRelease();
    }
    swift_release();
    v169 = v198;
    v170 = v200;
    v167 = v202;
    sub_1BA7CCC64(v198, v200, v202);
    sub_1BA7CCC64(v169, v170, v167);
    sub_1BA7CCC14((uint64_t)v201, v196, v197, v204);
    v168 = v169;
    v172 = v170;
    goto LABEL_71;
  }
}

void sub_1BAC0AD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[24];
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v4 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  if (*(_QWORD *)(a2 + 16))
  {
    v11[15] = v8;
    v11[12] = v6;
    v11[14] = (char *)v11 - v7;
    v13 = (_QWORD *)(a2 + 32);
    v11[13] = a1 + 48;
    v11[16] = a2;
    swift_bridgeObjectRetain();
    v14 = a1;
    v9 = v13[1];
    *(_QWORD *)&v16 = *v13;
    swift_retain();
    swift_retain_n();
    v10 = v15;
    sub_1BAC30118();
    v15 = v10;
    if (!v10)
    {
      swift_release();
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
  }
}

void sub_1BAC11EA0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[18];
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a1;
  v19 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v18[17] = (char *)v18 - v7;
  MEMORY[0x1E0C80A78](v8);
  v18[16] = (char *)v18 - v9;
  MEMORY[0x1E0C80A78](v10);
  v20 = (char *)v18 - v11;
  MEMORY[0x1E0C80A78](v12);
  v21 = (char *)v18 - v16;
  if (a2[2])
  {
    v18[11] = v13;
    v18[12] = v15;
    v18[9] = v14;
    swift_bridgeObjectRetain();
    v18[15] = a2;
    v17 = a2[5];
    v23 = a2[4];
    swift_retain();
    swift_retain_n();
    sub_1BAC30118();
    if (!v2)
    {
      swift_release();
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
  }
}

uint64_t sub_1BAC17364(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  int v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  _BYTE *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  uint64_t v172;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _BYTE *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _BYTE *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _BYTE *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _BYTE *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _BYTE *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unsigned __int8 v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _BYTE *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  _BYTE *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _BYTE *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _BYTE *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unsigned __int8 v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  _BYTE *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  _BYTE *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unsigned __int8 v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  _BYTE *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  unsigned __int8 v278;
  uint64_t v279;
  uint64_t v280;
  unsigned __int8 v281;
  uint64_t v282;
  uint64_t v283;
  unsigned __int8 v284;
  uint64_t v285;
  uint64_t v286;
  unsigned __int8 v287;
  uint64_t v288;
  uint64_t v289;
  unsigned __int8 v290;
  char v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  unsigned int v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  unint64_t v304;
  unsigned int v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  char v309;
  unint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char v314;
  uint64_t v315;
  unint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char v329;

  v3 = v2;
  v321 = *(_QWORD *)(a2 + 16);
  if (!v321)
    return result;
  v4 = result;
  v322 = a2 + 32;
  v324 = (uint64_t *)(result + 48);
  swift_bridgeObjectRetain();
  v5 = 0;
  v323 = v4;
  while (1)
  {
    v13 = v322 + 32 * v5;
    v14 = *(_QWORD *)v13;
    v15 = *(_QWORD *)(v13 + 8);
    v329 = *(_BYTE *)(v13 + 16);
    v16 = *(_QWORD *)(v13 + 24);
    v326 = v3;
    v327 = *(_QWORD *)v13;
    v328 = v15;
    v325 = v5;
    if (!(v16 >> 62))
    {
      v304 = *(_QWORD *)(v16 + 24);
      v6 = *(_QWORD *)(v16 + 32);
      LOBYTE(v303) = *(_BYTE *)(v16 + 40);
      v8 = *(_QWORD *)(v16 + 48);
      v7 = *(_QWORD *)(v16 + 56);
      v9 = *(_QWORD *)(v16 + 72);
      v10 = *(_QWORD *)(v16 + 88);
      v310 = *(_QWORD *)(v16 + 96);
      v11 = *(_BYTE *)(v16 + 104);
      v320 = *(_QWORD *)(v16 + 112);
      v305 = *(unsigned __int16 *)(v16 + 64);
      v12 = *(_QWORD *)(v16 + 16);
      sub_1BA73B1CC(v14, v15, v329);
      swift_retain_n();
      sub_1BA60DF54(v12, v304, v6, v303);
      sub_1BA740E74(v8, v7, v305);
      sub_1BA60DEE4(v9);
      sub_1BA69C808(v10, v310, v11);
      sub_1BA895BA4(v320);
      sub_1BAC324DC(v323);
      sub_1BA60DFC4(v12, v304, v6, v303);
      v3 = v326;
      sub_1BA740460(v8, v7, v305);
      sub_1BA60DF1C(v9);
      sub_1BA69C828(v10, v310, v11);
      sub_1BA895BB8(v320);
      swift_release();
      sub_1BA73B1B8(v327, v328, v329);
      if (v326)
        goto LABEL_328;
      goto LABEL_4;
    }
    if (v16 >> 62 == 1)
    {
      v18 = *(_QWORD *)(v16 + 16);
      v17 = *(_QWORD *)(v16 + 24);
      v19 = *(_QWORD *)(v16 + 32);
      v20 = *(_QWORD *)(v16 + 40);
      v318 = *(_QWORD *)(v16 + 48);
      v317 = *(_QWORD *)(v16 + 56);
      v21 = *(unsigned __int8 *)(v16 + 64);
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v18;
      *(_QWORD *)(v22 + 24) = v17;
      *(_QWORD *)(v22 + 32) = v19;
      *(_QWORD *)(v22 + 40) = v20;
      v23 = (_QWORD *)*v324;
      v24 = *(_QWORD *)(*v324 + 16);
      if (v24)
      {
        v25 = v24 - 1;
        sub_1BA8E9170(v24 - 1, 1, *v324);
        v26 = v23[v25 + 4];
        if (v26 >> 60 == 9)
        {
          v27 = *(_QWORD *)(v26 + 32);
          v28 = *(_QWORD *)(v26 + 40);
          v29 = *(_QWORD *)(v26 + 16) == v18 && *(_QWORD *)(v26 + 24) == v17;
          if (v29 || (sub_1BB874398() & 1) != 0)
          {
            if (v28)
            {
              if (v20)
              {
                v30 = v27 == v19 && v28 == v20;
                if (v30 || (sub_1BB874398() & 1) != 0)
                {
                  sub_1BA73B1CC(v327, v328, v329);
                  swift_retain_n();
                  swift_bridgeObjectRetain();
LABEL_124:
                  swift_bridgeObjectRetain();
                  v3 = v326;
                  v96 = v317;
                  goto LABEL_73;
                }
              }
            }
            else if (!v20)
            {
              sub_1BA73B1CC(v327, v328, v329);
              swift_retain_n();
              goto LABEL_124;
            }
          }
        }
      }
      sub_1BA73B1CC(v327, v328, v329);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v324 = (uint64_t)v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v23 = sub_1BB38ED0C(0, v23[2] + 1, 1, v23);
        *v324 = (uint64_t)v23;
      }
      v3 = v326;
      v96 = v317;
      v97 = v23[2];
      sub_1BA9815AC(v97);
      sub_1BA9816C0(v97, v22 | 0x9000000000000000);
      nullsub_1();
LABEL_73:
      swift_release();
      v98 = v323;
      if (v21 > 1)
      {
        if (v21 == 2)
        {
          v105 = v318;
          v106 = sub_1BA79B898(v318);
          if (v106)
          {
            v107 = v106;
            v108 = swift_bridgeObjectRetain();
            sub_1BA76F5C4(v108, v96, 2u);
            v101 = swift_bridgeObjectRetain();
            v109 = 0;
            v85 = (_BYTE *)(v318 + 40);
            while (1)
            {
              v110 = v109 + 1;
              if (__OFADD__(v109, 1))
                goto LABEL_335;
              if ((*v85 & 1) == 0)
              {
                v22 = *((_QWORD *)v85 - 1);
                sub_1BA7E8124(v22, 0);
                swift_retain();
                sub_1BA9F22C4();
                v111 = v22;
                if (v3)
                {
LABEL_312:
                  sub_1BA72C46C(v111, 0);
                  sub_1BA72C46C(v22, 0);
                  swift_bridgeObjectRelease_n();
                  v276 = v318;
                  v277 = v96;
                  v278 = 2;
LABEL_313:
                  sub_1BA76F520(v276, v277, v278);
                  goto LABEL_327;
                }
                sub_1BA72C46C(v22, 0);
                v101 = sub_1BA72C46C(v22, 0);
              }
              v85 += 16;
              ++v109;
              if (v110 == v107)
              {
                v105 = v318;
                swift_bridgeObjectRelease_n();
                goto LABEL_104;
              }
            }
          }
          sub_1BA76F534(v318, v96, 2u);
LABEL_104:
          v119 = sub_1BA79B898(v96);
          if (v119)
          {
            v120 = v119;
            v121 = swift_bridgeObjectRetain_n();
            v125 = 0;
            v126 = (_BYTE *)(v96 + 40);
            while (1)
            {
              v127 = v125 + 1;
              if (__OFADD__(v125, 1))
                break;
              if ((*v126 & 1) == 0)
              {
                v22 = *((_QWORD *)v126 - 1);
                sub_1BA7E8124(v22, 0);
                swift_retain();
                sub_1BA9F22C4();
                v111 = v22;
                if (v3)
                  goto LABEL_312;
                sub_1BA72C46C(v22, 0);
                v121 = sub_1BA72C46C(v22, 0);
              }
              v126 += 16;
              ++v125;
              if (v127 == v120)
              {
                swift_bridgeObjectRelease_n();
                v105 = v318;
                goto LABEL_112;
              }
            }
            __break(1u);
LABEL_339:
            sub_1BA60DFC4(v121, v122, v123, v124);
            sub_1BA740460(v120, v98, v125);
            sub_1BA60DF1C(v299);
            sub_1BA69C828(v301, v302, v303);
            sub_1BA895BB8(v304);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_327;
          }
LABEL_112:
          v116 = v105;
          v117 = v96;
          v118 = 2;
LABEL_113:
          sub_1BA76F520(v116, v117, v118);
        }
      }
      else if (v21)
      {
        v112 = sub_1BA79B898(v318);
        if (v112)
        {
          v113 = v112;
          sub_1BA76F5C4(v318, v96, 1u);
          v101 = sub_1BA76F534(v318, v96, 1u);
          v114 = 0;
          v85 = (_BYTE *)(v318 + 40);
          while (1)
          {
            v115 = v114 + 1;
            if (__OFADD__(v114, 1))
              break;
            if ((*v85 & 1) == 0)
            {
              v22 = *((_QWORD *)v85 - 1);
              sub_1BA7E8124(v22, 0);
              swift_retain();
              sub_1BA9F22C4();
              if (v3)
              {
                sub_1BA72C46C(v22, 0);
                sub_1BA72C46C(v22, 0);
                sub_1BA76F520(v318, v96, 1u);
                v276 = v318;
                v277 = v96;
                v278 = 1;
                goto LABEL_313;
              }
              sub_1BA72C46C(v22, 0);
              v101 = sub_1BA72C46C(v22, 0);
            }
            v85 += 16;
            ++v114;
            if (v115 == v113)
            {
              sub_1BA76F520(v318, v96, 1u);
              v116 = v318;
              v117 = v96;
              v118 = 1;
              goto LABEL_113;
            }
          }
LABEL_336:
          __break(1u);
LABEL_337:
          sub_1BA72C46C(v101, v102);
          sub_1BA72C46C(v22, 0);
          swift_bridgeObjectRelease_n();
          sub_1BA76F520((uint64_t)v85, v304, 2u);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1BA73B1B8(v327, v328, v329);
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        v99 = sub_1BA79B898(v318);
        if (v99)
        {
          v100 = v99;
          sub_1BA76F5C4(v318, v96, 0);
          v101 = sub_1BA76F534(v318, v96, 0);
          v103 = 0;
          v85 = (_BYTE *)(v318 + 40);
          while (1)
          {
            v104 = v103 + 1;
            if (__OFADD__(v103, 1))
              break;
            if ((*v85 & 1) == 0)
            {
              v22 = *((_QWORD *)v85 - 1);
              sub_1BA7E8124(v22, 0);
              swift_retain();
              sub_1BA9F22C4();
              if (v3)
              {
                sub_1BA72C46C(v22, 0);
                sub_1BA72C46C(v22, 0);
                sub_1BA76F520(v318, v96, 0);
                v276 = v318;
                v277 = v96;
                v278 = 0;
                goto LABEL_313;
              }
              sub_1BA72C46C(v22, 0);
              v101 = sub_1BA72C46C(v22, 0);
            }
            v85 += 16;
            ++v103;
            if (v104 == v100)
            {
              sub_1BA76F520(v318, v96, 0);
              v116 = v318;
              v117 = v96;
              v118 = 0;
              goto LABEL_113;
            }
          }
          __break(1u);
LABEL_335:
          __break(1u);
          goto LABEL_336;
        }
      }
      goto LABEL_311;
    }
    v31 = *(_QWORD *)(v16 + 16);
    v319 = *(_QWORD *)(v16 + 24);
    if (!(v31 >> 62))
    {
      v47 = *(_QWORD *)(v31 + 16);
      v48 = *(_QWORD *)(v31 + 24);
      v49 = *(_QWORD *)(v31 + 32);
      v50 = *(_BYTE *)(v31 + 40);
      v51 = *(_QWORD *)(v31 + 56);
      v302 = *(_QWORD *)(v31 + 48);
      LODWORD(v303) = *(unsigned __int16 *)(v31 + 64);
      v52 = *(_QWORD *)(v31 + 72);
      v311 = *(_QWORD *)(v31 + 88);
      v304 = *(_QWORD *)(v31 + 80);
      v306 = *(_QWORD *)(v31 + 96);
      v314 = *(_BYTE *)(v31 + 104);
      v316 = *(_QWORD *)(v31 + 112);
      v53 = *(_QWORD *)(v16 + 16);
      sub_1BA73B1CC(v14, v15, v329);
      v301 = v53 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA60DF54(v47, v48, v49, v50);
      sub_1BA740E74(v302, v51, v303);
      v310 = v52;
      sub_1BA60DEE4(v52);
      sub_1BA69C808(v311, v306, v314);
      sub_1BA895BA4(v316);
      sub_1BAC324DC(v323);
      if (!v326)
      {
        sub_1BA60DFC4(v47, v48, v49, v50);
        sub_1BA740460(v302, v51, v303);
        sub_1BA60DF1C(v52);
        sub_1BA69C828(v311, v306, v314);
        sub_1BA895BB8(v316);
        v3 = 0;
        v54 = v323;
LABEL_42:
        v46 = v319;
        goto LABEL_309;
      }
      sub_1BA60DFC4(v47, v48, v49, v50);
      sub_1BA740460(v302, v51, v303);
      sub_1BA60DF1C(v52);
      sub_1BA69C828(v311, v306, v314);
      sub_1BA895BB8(v316);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BA73B1B8(v327, v328, v329);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    if (v31 >> 62 != 1)
      break;
    v33 = *(_QWORD *)(v31 + 16);
    v32 = *(_QWORD *)(v31 + 24);
    v34 = *(_QWORD *)(v31 + 32);
    v35 = *(_QWORD *)(v31 + 40);
    v36 = *(_QWORD *)(v31 + 56);
    v315 = *(_QWORD *)(v31 + 48);
    v37 = *(unsigned __int8 *)(v31 + 64);
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = v33;
    *(_QWORD *)(v38 + 24) = v32;
    *(_QWORD *)(v38 + 32) = v34;
    *(_QWORD *)(v38 + 40) = v35;
    v39 = *v324;
    result = sub_1BA79B898(*v324);
    if (!result)
      goto LABEL_126;
    v40 = result - 1;
    if (__OFSUB__(result, 1))
      goto LABEL_355;
    sub_1BA8E9170(result - 1, 1, v39);
    v41 = *(_QWORD *)(v39 + 8 * v40 + 32);
    if (v41 >> 60 != 9)
      goto LABEL_126;
    v43 = *(_QWORD *)(v41 + 32);
    v42 = *(_QWORD *)(v41 + 40);
    v44 = *(_QWORD *)(v41 + 16) == v33 && *(_QWORD *)(v41 + 24) == v32;
    if (!v44 && (sub_1BB874398() & 1) == 0)
      goto LABEL_126;
    if (!v42)
    {
      if (!v35)
      {
        sub_1BA73B1CC(v327, v328, v329);
        swift_retain_n();
        swift_retain();
        v46 = v319;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_127;
      }
LABEL_126:
      sub_1BA73B1CC(v327, v328, v329);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain_n();
      swift_retain();
      v46 = v319;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA9814D4();
      v144 = *(_QWORD *)(*v324 + 16);
      sub_1BA9815AC(v144);
      sub_1BA9816C0(v144, v38 | 0x9000000000000000);
      nullsub_1();
      goto LABEL_127;
    }
    if (!v35)
      goto LABEL_126;
    v45 = v43 == v34 && v42 == v35;
    if (!v45 && (sub_1BB874398() & 1) == 0)
      goto LABEL_126;
    sub_1BA73B1CC(v327, v328, v329);
    swift_retain_n();
    swift_retain();
    v46 = v319;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_127:
    swift_release();
    v3 = v326;
    v54 = v323;
    if (v37 <= 1)
    {
      if (v37)
      {
        v161 = sub_1BA79B898(v315);
        if (v161)
        {
          v162 = v161;
          sub_1BA76F5C4(v315, v36, 1u);
          v147 = sub_1BA76F534(v315, v36, 1u);
          v149 = 0;
          v163 = (_BYTE *)(v315 + 40);
          while (1)
          {
            v164 = v149 + 1;
            if (__OFADD__(v149, 1))
              break;
            if ((*v163 & 1) == 0)
            {
              v165 = *((_QWORD *)v163 - 1);
              sub_1BA7E8124(v165, 0);
              swift_retain();
              sub_1BA9F22C4();
              if (v326)
              {
                sub_1BA72C46C(v165, 0);
                sub_1BA72C46C(v165, 0);
                sub_1BA76F520(v315, v36, 1u);
                v279 = v315;
                v280 = v36;
                v281 = 1;
                goto LABEL_319;
              }
              sub_1BA72C46C(v165, 0);
              v147 = sub_1BA72C46C(v165, 0);
            }
            v163 += 16;
            ++v149;
            if (v164 == v162)
            {
              sub_1BA76F520(v315, v36, 1u);
              sub_1BA76F520(v315, v36, 1u);
              goto LABEL_42;
            }
          }
LABEL_343:
          __break(1u);
LABEL_344:
          sub_1BA72C46C(v147, v148);
          sub_1BA72C46C(v149, 0);
          swift_bridgeObjectRelease_n();
          v288 = v302;
          v289 = v301;
          v290 = 2;
LABEL_345:
          sub_1BA76F520(v288, v289, v290);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
LABEL_346:
          swift_release();
          sub_1BA73B1B8(v327, v328, v329);
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        v145 = sub_1BA79B898(v315);
        if (v145)
        {
          v146 = v145;
          sub_1BA76F5C4(v315, v36, 0);
          v147 = sub_1BA76F534(v315, v36, 0);
          v149 = 0;
          v150 = (_BYTE *)(v315 + 40);
          while (1)
          {
            v151 = v149 + 1;
            if (__OFADD__(v149, 1))
              break;
            if ((*v150 & 1) == 0)
            {
              v152 = *((_QWORD *)v150 - 1);
              sub_1BA7E8124(v152, 0);
              swift_retain();
              sub_1BA9F22C4();
              if (v326)
              {
                sub_1BA72C46C(v152, 0);
                sub_1BA72C46C(v152, 0);
                sub_1BA76F520(v315, v36, 0);
                v279 = v315;
                v280 = v36;
                v281 = 0;
                goto LABEL_319;
              }
              sub_1BA72C46C(v152, 0);
              v147 = sub_1BA72C46C(v152, 0);
            }
            v150 += 16;
            ++v149;
            if (v151 == v146)
            {
              sub_1BA76F520(v315, v36, 0);
              sub_1BA76F520(v315, v36, 0);
              goto LABEL_42;
            }
          }
          __break(1u);
LABEL_342:
          __break(1u);
          goto LABEL_343;
        }
      }
      goto LABEL_42;
    }
    if (v37 == 2)
    {
      v153 = v315;
      v154 = sub_1BA79B898(v315);
      if (v154)
      {
        v155 = v154;
        v156 = swift_bridgeObjectRetain();
        sub_1BA76F5C4(v156, v36, 2u);
        v147 = swift_bridgeObjectRetain();
        v149 = 0;
        v157 = (_BYTE *)(v315 + 40);
        while (1)
        {
          v158 = v149 + 1;
          if (__OFADD__(v149, 1))
            goto LABEL_342;
          if ((*v157 & 1) == 0)
          {
            v159 = *((_QWORD *)v157 - 1);
            sub_1BA7E8124(v159, 0);
            swift_retain();
            sub_1BA9F22C4();
            v160 = v159;
            if (v326)
            {
LABEL_318:
              sub_1BA72C46C(v160, 0);
              sub_1BA72C46C(v159, 0);
              swift_bridgeObjectRelease_n();
              v279 = v315;
              v280 = v36;
              v281 = 2;
LABEL_319:
              sub_1BA76F520(v279, v280, v281);
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_327;
            }
            sub_1BA72C46C(v159, 0);
            v147 = sub_1BA72C46C(v159, 0);
          }
          v157 += 16;
          ++v149;
          if (v158 == v155)
          {
            v153 = v315;
            swift_bridgeObjectRelease_n();
            v46 = v319;
            goto LABEL_155;
          }
        }
      }
      sub_1BA76F534(v315, v36, 2u);
LABEL_155:
      v166 = sub_1BA79B898(v36);
      if (v166)
      {
        v167 = v166;
        v168 = swift_bridgeObjectRetain_n();
        v172 = 0;
        v173 = (_BYTE *)(v36 + 40);
        while (1)
        {
          v174 = v172 + 1;
          if (__OFADD__(v172, 1))
            break;
          if ((*v173 & 1) == 0)
          {
            v159 = *((_QWORD *)v173 - 1);
            sub_1BA7E8124(v159, 0);
            swift_retain();
            sub_1BA9F22C4();
            v160 = v159;
            if (v326)
              goto LABEL_318;
            sub_1BA72C46C(v159, 0);
            v168 = sub_1BA72C46C(v159, 0);
          }
          v173 += 16;
          ++v172;
          if (v174 == v167)
          {
            swift_bridgeObjectRelease_n();
            sub_1BA76F520(v315, v36, 2u);
            goto LABEL_42;
          }
        }
        __break(1u);
LABEL_349:
        sub_1BA60DFC4(v168, v169, v170, v171);
        sub_1BA740460(v174, v54, v297);
        sub_1BA60DF1C(v298);
        sub_1BA69C828(v300, v301, v302);
        sub_1BA895BB8(v310);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_327;
      }
      sub_1BA76F520(v153, v36, 2u);
    }
LABEL_309:
    swift_bridgeObjectRetain();
    sub_1BAC1A144(v54, v46);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      goto LABEL_327;
    }
    swift_release();
    swift_bridgeObjectRelease_n();
LABEL_311:
    swift_release();
    sub_1BA73B1B8(v327, v328, v329);
LABEL_4:
    swift_release();
    v5 = v325 + 1;
    if (v325 + 1 == v321)
      return swift_bridgeObjectRelease();
  }
  v55 = *(_QWORD *)(v31 + 16);
  v56 = *(_QWORD *)(v31 + 24);
  if (!(v55 >> 62))
  {
    v71 = *(_QWORD *)(v55 + 16);
    v72 = *(_QWORD *)(v55 + 24);
    v73 = *(_QWORD *)(v55 + 32);
    v74 = *(_BYTE *)(v55 + 40);
    v75 = *(_QWORD *)(v55 + 48);
    v76 = *(unsigned __int16 *)(v55 + 64);
    v303 = *(_QWORD *)(v55 + 72);
    v304 = *(_QWORD *)(v55 + 80);
    v308 = *(_QWORD *)(v55 + 88);
    v301 = *(_QWORD *)(v55 + 56);
    v302 = *(_QWORD *)(v55 + 96);
    v309 = *(_BYTE *)(v55 + 104);
    v310 = *(_QWORD *)(v55 + 112);
    v77 = *(_QWORD *)(v31 + 16);
    sub_1BA73B1CC(v14, v15, v329);
    v300 = v77 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain();
    v312 = v56;
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA60DF54(v71, v72, v73, v74);
    sub_1BA740E74(v75, v301, v76);
    sub_1BA60DEE4(v303);
    sub_1BA69C808(v308, v302, v309);
    sub_1BA895BA4(v310);
    sub_1BAC324DC(v323);
    if (!v326)
    {
      sub_1BA60DFC4(v71, v72, v73, v74);
      sub_1BA740460(v75, v301, v76);
      sub_1BA60DF1C(v303);
      sub_1BA69C828(v308, v302, v309);
      sub_1BA895BB8(v310);
      v3 = 0;
      v54 = v323;
      v46 = v319;
      v57 = v312;
      goto LABEL_307;
    }
    sub_1BA60DFC4(v71, v72, v73, v74);
    sub_1BA740460(v75, v301, v76);
    sub_1BA60DF1C(v303);
    sub_1BA69C828(v308, v302, v309);
    sub_1BA895BB8(v310);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA73B1B8(v327, v328, v329);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  if (v55 >> 62 == 1)
  {
    v57 = *(_QWORD *)(v31 + 24);
    v59 = *(_QWORD *)(v55 + 16);
    v58 = *(_QWORD *)(v55 + 24);
    v60 = *(_QWORD *)(v55 + 32);
    v61 = *(_QWORD *)(v55 + 40);
    v310 = *(_QWORD *)(v55 + 48);
    v307 = *(_QWORD *)(v55 + 56);
    v62 = *(unsigned __int8 *)(v55 + 64);
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = v59;
    *(_QWORD *)(v63 + 24) = v58;
    *(_QWORD *)(v63 + 32) = v60;
    *(_QWORD *)(v63 + 40) = v61;
    v64 = *v324;
    result = sub_1BA79B898(*v324);
    if (!result)
      goto LABEL_189;
    v65 = result - 1;
    if (__OFSUB__(result, 1))
      goto LABEL_360;
    sub_1BA8E9170(result - 1, 1, v64);
    v66 = *(_QWORD *)(v64 + 8 * v65 + 32);
    if (v66 >> 60 != 9)
      goto LABEL_189;
    v68 = *(_QWORD *)(v66 + 32);
    v67 = *(_QWORD *)(v66 + 40);
    v69 = *(_QWORD *)(v66 + 16) == v59 && *(_QWORD *)(v66 + 24) == v58;
    if (!v69 && (sub_1BB874398() & 1) == 0)
      goto LABEL_189;
    if (v67)
    {
      if (v61)
      {
        v70 = v68 == v60 && v67 == v61;
        if (v70 || (sub_1BB874398() & 1) != 0)
        {
          sub_1BA73B1CC(v327, v328, v329);
          swift_retain_n();
          swift_retain();
          v46 = v319;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_190;
        }
      }
LABEL_189:
      sub_1BA73B1CC(v327, v328, v329);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain_n();
      swift_retain();
      v46 = v319;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA9814D4();
      v201 = *(_QWORD *)(*v324 + 16);
      sub_1BA9815AC(v201);
      sub_1BA9816C0(v201, v63 | 0x9000000000000000);
      nullsub_1();
    }
    else
    {
      if (v61)
        goto LABEL_189;
      sub_1BA73B1CC(v327, v328, v329);
      swift_retain_n();
      swift_retain();
      v46 = v319;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
LABEL_190:
    swift_release();
    v3 = v326;
    v202 = v310;
    if (v62 > 1)
    {
      if (v62 != 2)
        goto LABEL_217;
      v209 = sub_1BA79B898(v310);
      v54 = v323;
      if (v209)
      {
        v210 = v209;
        v211 = swift_bridgeObjectRetain();
        sub_1BA76F5C4(v211, v307, 2u);
        result = swift_bridgeObjectRetain();
        v212 = 0;
        v213 = (_BYTE *)(v310 + 40);
        while (1)
        {
          v214 = v212 + 1;
          if (__OFADD__(v212, 1))
            break;
          if ((*v213 & 1) == 0)
          {
            v215 = *((_QWORD *)v213 - 1);
            sub_1BA7E8124(v215, 0);
            swift_retain();
            sub_1BA9F22C4();
            v216 = v215;
            if (v326)
            {
LABEL_322:
              sub_1BA72C46C(v216, 0);
              sub_1BA72C46C(v215, 0);
              swift_bridgeObjectRelease_n();
              v282 = v310;
              v283 = v307;
              v284 = 2;
LABEL_323:
              sub_1BA76F520(v282, v283, v284);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_327;
            }
            sub_1BA72C46C(v215, 0);
            result = sub_1BA72C46C(v215, 0);
          }
          v213 += 16;
          ++v212;
          if (v214 == v210)
          {
            v202 = v310;
            swift_bridgeObjectRelease_n();
            v46 = v319;
            v226 = v307;
            goto LABEL_222;
          }
        }
LABEL_352:
        __break(1u);
        goto LABEL_353;
      }
      v226 = v307;
      sub_1BA76F534(v310, v307, 2u);
LABEL_222:
      v227 = sub_1BA79B898(v226);
      if (!v227)
      {
        sub_1BA76F520(v202, v226, 2u);
        goto LABEL_307;
      }
      v228 = v227;
      result = swift_bridgeObjectRetain_n();
      v229 = 0;
      v230 = (_BYTE *)(v226 + 40);
      while (1)
      {
        v231 = v229 + 1;
        if (__OFADD__(v229, 1))
          break;
        if ((*v230 & 1) == 0)
        {
          v215 = *((_QWORD *)v230 - 1);
          sub_1BA7E8124(v215, 0);
          swift_retain();
          sub_1BA9F22C4();
          v216 = v215;
          if (v326)
            goto LABEL_322;
          sub_1BA72C46C(v215, 0);
          result = sub_1BA72C46C(v215, 0);
        }
        v230 += 16;
        ++v229;
        if (v231 == v228)
        {
          swift_bridgeObjectRelease_n();
          v223 = v310;
          v224 = v307;
          v225 = 2;
LABEL_238:
          sub_1BA76F520(v223, v224, v225);
          v46 = v319;
          goto LABEL_307;
        }
      }
    }
    else
    {
      if (!v62)
      {
        v203 = sub_1BA79B898(v310);
        if (v203)
        {
          v204 = v203;
          sub_1BA76F5C4(v310, v307, 0);
          result = sub_1BA76F534(v310, v307, 0);
          v205 = 0;
          v206 = (_BYTE *)(v310 + 40);
          v54 = v323;
          while (1)
          {
            v207 = v205 + 1;
            if (__OFADD__(v205, 1))
              break;
            if ((*v206 & 1) == 0)
            {
              v208 = *((_QWORD *)v206 - 1);
              sub_1BA7E8124(v208, 0);
              swift_retain();
              sub_1BA9F22C4();
              if (v326)
              {
                sub_1BA72C46C(v208, 0);
                sub_1BA72C46C(v208, 0);
                sub_1BA76F520(v310, v307, 0);
                v282 = v310;
                v283 = v307;
                v284 = 0;
                goto LABEL_323;
              }
              sub_1BA72C46C(v208, 0);
              result = sub_1BA72C46C(v208, 0);
            }
            v206 += 16;
            ++v205;
            if (v207 == v204)
            {
              sub_1BA76F520(v310, v307, 0);
              v223 = v310;
              v224 = v307;
              v225 = 0;
              goto LABEL_238;
            }
          }
          __break(1u);
          goto LABEL_352;
        }
LABEL_217:
        v54 = v323;
LABEL_307:
        swift_bridgeObjectRetain();
        sub_1BAC1A144(v54, v57);
        if (!v3)
        {
          swift_bridgeObjectRelease_n();
          swift_release();
          goto LABEL_309;
        }
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_327;
      }
      v217 = sub_1BA79B898(v310);
      if (!v217)
        goto LABEL_217;
      v218 = v217;
      sub_1BA76F5C4(v310, v307, 1u);
      result = sub_1BA76F534(v310, v307, 1u);
      v219 = 0;
      v220 = (_BYTE *)(v310 + 40);
      v54 = v323;
      while (1)
      {
        v221 = v219 + 1;
        if (__OFADD__(v219, 1))
          break;
        if ((*v220 & 1) == 0)
        {
          v222 = *((_QWORD *)v220 - 1);
          sub_1BA7E8124(v222, 0);
          swift_retain();
          sub_1BA9F22C4();
          if (v326)
          {
            sub_1BA72C46C(v222, 0);
            sub_1BA72C46C(v222, 0);
            sub_1BA76F520(v310, v307, 1u);
            v282 = v310;
            v283 = v307;
            v284 = 1;
            goto LABEL_323;
          }
          sub_1BA72C46C(v222, 0);
          result = sub_1BA72C46C(v222, 0);
        }
        v220 += 16;
        ++v219;
        if (v221 == v218)
        {
          sub_1BA76F520(v310, v307, 1u);
          v223 = v310;
          v224 = v307;
          v225 = 1;
          goto LABEL_238;
        }
      }
LABEL_353:
      __break(1u);
    }
    __break(1u);
LABEL_355:
    __break(1u);
LABEL_356:
    __break(1u);
LABEL_357:
    __break(1u);
LABEL_358:
    __break(1u);
LABEL_359:
    __break(1u);
LABEL_360:
    __break(1u);
LABEL_361:
    __break(1u);
LABEL_362:
    __break(1u);
LABEL_363:
    __break(1u);
    goto LABEL_364;
  }
  v78 = *(_QWORD *)(v55 + 16);
  v79 = *(_QWORD *)(v55 + 24);
  v313 = *(_QWORD *)(v31 + 24);
  if (!(v78 >> 62))
  {
    v292 = *(_QWORD *)(v78 + 32);
    v293 = *(_QWORD *)(v78 + 16);
    v291 = *(_BYTE *)(v78 + 40);
    v297 = *(_QWORD *)(v78 + 56);
    v298 = *(_QWORD *)(v78 + 48);
    v295 = *(unsigned __int16 *)(v78 + 64);
    v128 = *(_QWORD *)(v78 + 72);
    v300 = *(_QWORD *)(v78 + 80);
    v301 = *(_QWORD *)(v78 + 88);
    v302 = *(_QWORD *)(v78 + 96);
    LOBYTE(v303) = *(_BYTE *)(v78 + 104);
    v304 = *(_QWORD *)(v78 + 112);
    v129 = *(_QWORD *)(v78 + 24);
    sub_1BA73B1CC(v14, v15, v329);
    swift_retain();
    v310 = v79;
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA60DF54(v293, v129, v292, v291);
    v120 = v298;
    v98 = v297;
    v125 = v295;
    sub_1BA740E74(v298, v297, v295);
    v299 = v128;
    sub_1BA60DEE4(v128);
    sub_1BA69C808(v301, v302, v303);
    sub_1BA895BA4(v304);
    sub_1BAC324DC(v323);
    v121 = v293;
    v122 = v129;
    v123 = v292;
    v124 = v291;
    if (v3)
      goto LABEL_339;
    sub_1BA60DFC4(v293, v129, v292, v291);
    sub_1BA740460(v298, v297, v295);
    sub_1BA60DF1C(v128);
    sub_1BA69C828(v301, v302, v303);
    sub_1BA895BB8(v304);
    v54 = v323;
LABEL_284:
    v46 = v319;
    goto LABEL_285;
  }
  if (v78 >> 62 == 1)
  {
    v310 = *(_QWORD *)(v55 + 24);
    v80 = *(_QWORD *)(v55 + 16);
    v82 = *(_QWORD *)(v78 + 16);
    v81 = *(_QWORD *)(v78 + 24);
    v84 = *(_QWORD *)(v78 + 32);
    v83 = *(_QWORD *)(v78 + 40);
    v85 = *(_BYTE **)(v78 + 48);
    v304 = *(_QWORD *)(v78 + 56);
    v86 = *(unsigned __int8 *)(v78 + 64);
    v87 = swift_allocObject();
    *(_QWORD *)(v87 + 16) = v82;
    *(_QWORD *)(v87 + 24) = v81;
    *(_QWORD *)(v87 + 32) = v84;
    *(_QWORD *)(v87 + 40) = v83;
    v88 = v87 | 0x9000000000000000;
    v89 = *v324;
    result = sub_1BA79B898(*v324);
    LOBYTE(v303) = v80;
    if (result)
    {
      v90 = v3;
      v91 = result - 1;
      if (__OFSUB__(result, 1))
        goto LABEL_365;
      sub_1BA8E9170(result - 1, 1, v89);
      v92 = *(_QWORD *)(v89 + 8 * v91 + 32);
      sub_1BA73B1CC(v327, v328, v329);
      swift_retain();
      swift_retain();
      swift_retain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BAA736F8(v92);
      v94 = v93;
      swift_release();
      swift_release();
      v3 = v90;
      if ((v94 & 1) != 0)
        goto LABEL_166;
    }
    else
    {
      sub_1BA73B1CC(v327, v328, v329);
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_retain();
    sub_1BA9814D4();
    v175 = *(_QWORD *)(*v324 + 16);
    sub_1BA9815AC(v175);
    sub_1BA9816C0(v175, v88);
    nullsub_1();
LABEL_166:
    swift_release();
    if (v86 > 1)
    {
      v46 = v319;
      if (v86 == 2)
      {
        v183 = sub_1BA79B898((uint64_t)v85);
        v54 = v323;
        if (v183)
        {
          v184 = v183;
          v185 = v3;
          v186 = swift_bridgeObjectRetain();
          sub_1BA76F5C4(v186, v304, 2u);
          result = swift_bridgeObjectRetain();
          v187 = 0;
          v188 = v85 + 40;
          while (1)
          {
            v189 = v187 + 1;
            if (__OFADD__(v187, 1))
              goto LABEL_357;
            if ((*v188 & 1) == 0)
            {
              v22 = *((_QWORD *)v188 - 1);
              sub_1BA7E8124(v22, 0);
              swift_retain();
              sub_1BA9F22C4();
              v101 = v22;
              v102 = 0;
              if (v185)
                goto LABEL_337;
              sub_1BA72C46C(v22, 0);
              result = sub_1BA72C46C(v22, 0);
            }
            v188 += 16;
            ++v187;
            if (v189 == v184)
            {
              swift_bridgeObjectRelease_n();
              v3 = v185;
              v46 = v319;
              v255 = v304;
              goto LABEL_267;
            }
          }
        }
        v255 = v304;
        sub_1BA76F534((uint64_t)v85, v304, 2u);
LABEL_267:
        v256 = sub_1BA79B898(v255);
        if (v256)
        {
          v257 = v256;
          v176 = v3;
          result = swift_bridgeObjectRetain_n();
          v258 = 0;
          v259 = (_BYTE *)(v255 + 40);
          while (1)
          {
            v260 = v258 + 1;
            if (__OFADD__(v258, 1))
              goto LABEL_359;
            if ((*v259 & 1) == 0)
            {
              v22 = *((_QWORD *)v259 - 1);
              sub_1BA7E8124(v22, 0);
              swift_retain();
              sub_1BA9F22C4();
              v101 = v22;
              v102 = 0;
              if (v176)
                goto LABEL_337;
              sub_1BA72C46C(v22, 0);
              result = sub_1BA72C46C(v22, 0);
            }
            v259 += 16;
            ++v258;
            if (v260 == v257)
            {
              swift_bridgeObjectRelease_n();
              v252 = (uint64_t)v85;
              v253 = v304;
              v254 = 2;
LABEL_283:
              sub_1BA76F520(v252, v253, v254);
              v3 = v176;
              goto LABEL_284;
            }
          }
        }
        sub_1BA76F520((uint64_t)v85, v255, 2u);
      }
      else
      {
        v54 = v323;
      }
    }
    else
    {
      v176 = v3;
      v46 = v319;
      if (v86)
      {
        v232 = sub_1BA79B898((uint64_t)v85);
        if (v232)
        {
          v233 = v232;
          sub_1BA76F5C4((uint64_t)v85, v304, 1u);
          result = sub_1BA76F534((uint64_t)v85, v304, 1u);
          v234 = 0;
          v235 = v85 + 40;
          v54 = v323;
          while (1)
          {
            v236 = v234 + 1;
            if (__OFADD__(v234, 1))
              goto LABEL_358;
            if ((*v235 & 1) == 0)
            {
              v237 = *((_QWORD *)v235 - 1);
              sub_1BA7E8124(v237, 0);
              swift_retain();
              sub_1BA9F22C4();
              if (v176)
              {
                sub_1BA72C46C(v237, 0);
                sub_1BA72C46C(v237, 0);
                sub_1BA76F520((uint64_t)v85, v304, 1u);
                v285 = (uint64_t)v85;
                v286 = v304;
                v287 = 1;
LABEL_333:
                sub_1BA76F520(v285, v286, v287);
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                sub_1BA73B1B8(v327, v328, v329);
                swift_bridgeObjectRelease();
                return swift_release();
              }
              sub_1BA72C46C(v237, 0);
              result = sub_1BA72C46C(v237, 0);
            }
            v235 += 16;
            ++v234;
            if (v236 == v233)
            {
              sub_1BA76F520((uint64_t)v85, v304, 1u);
              v252 = (uint64_t)v85;
              v253 = v304;
              v254 = 1;
              goto LABEL_283;
            }
          }
        }
      }
      else
      {
        v177 = sub_1BA79B898((uint64_t)v85);
        if (v177)
        {
          v178 = v177;
          sub_1BA76F5C4((uint64_t)v85, v304, 0);
          result = sub_1BA76F534((uint64_t)v85, v304, 0);
          v179 = 0;
          v180 = v85 + 40;
          v54 = v323;
          while (1)
          {
            v181 = v179 + 1;
            if (__OFADD__(v179, 1))
              goto LABEL_356;
            if ((*v180 & 1) == 0)
            {
              v182 = *((_QWORD *)v180 - 1);
              sub_1BA7E8124(v182, 0);
              swift_retain();
              sub_1BA9F22C4();
              if (v176)
              {
                sub_1BA72C46C(v182, 0);
                sub_1BA72C46C(v182, 0);
                sub_1BA76F520((uint64_t)v85, v304, 0);
                v285 = (uint64_t)v85;
                v286 = v304;
                v287 = 0;
                goto LABEL_333;
              }
              sub_1BA72C46C(v182, 0);
              result = sub_1BA72C46C(v182, 0);
            }
            v180 += 16;
            ++v179;
            if (v181 == v178)
            {
              sub_1BA76F520((uint64_t)v85, v304, 0);
              v252 = (uint64_t)v85;
              v253 = v304;
              v254 = 0;
              goto LABEL_283;
            }
          }
        }
      }
      v54 = v323;
    }
LABEL_285:
    v79 = v310;
    v57 = v313;
LABEL_305:
    swift_bridgeObjectRetain();
    sub_1BAC1A144(v54, v79);
    if (!v3)
    {
      swift_bridgeObjectRelease_n();
      swift_release();
      goto LABEL_307;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
LABEL_327:
    swift_release();
    sub_1BA73B1B8(v327, v328, v329);
LABEL_328:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v130 = *(_QWORD *)(v78 + 16);
  LOBYTE(v303) = *(_QWORD *)(v55 + 16);
  v304 = *(_QWORD *)(v78 + 24);
  if (!(v130 >> 62))
  {
    v190 = *(_QWORD *)(v130 + 16);
    v191 = *(_QWORD *)(v130 + 24);
    v192 = *(_QWORD *)(v130 + 32);
    v193 = *(_BYTE *)(v130 + 40);
    v294 = *(_QWORD *)(v130 + 56);
    v296 = *(_QWORD *)(v130 + 48);
    LODWORD(v297) = *(unsigned __int16 *)(v130 + 64);
    v298 = *(_QWORD *)(v130 + 72);
    v299 = *(_QWORD *)(v130 + 80);
    v300 = *(_QWORD *)(v130 + 88);
    v301 = *(_QWORD *)(v130 + 96);
    LODWORD(v302) = *(unsigned __int8 *)(v130 + 104);
    v310 = *(_QWORD *)(v130 + 112);
    sub_1BA73B1CC(v14, v15, v329);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v194 = v190;
    v195 = v190;
    v196 = v192;
    v197 = v192;
    v198 = v193;
    sub_1BA60DF54(v195, v191, v197, v193);
    v174 = v296;
    v54 = v294;
    sub_1BA740E74(v296, v294, v297);
    sub_1BA60DEE4(v298);
    sub_1BA69C808(v300, v301, v302);
    sub_1BA895BA4(v310);
    sub_1BAC324DC(v323);
    v168 = v194;
    v169 = v191;
    v170 = v196;
    v171 = v198;
    if (v3)
      goto LABEL_349;
    sub_1BA60DFC4(v194, v191, v196, v198);
    sub_1BA740460(v296, v294, v297);
    sub_1BA60DF1C(v298);
    sub_1BA69C828(v300, v301, v302);
    sub_1BA895BB8(v310);
    v46 = v319;
    v57 = v313;
    v199 = v304;
    goto LABEL_303;
  }
  v310 = *(_QWORD *)(v55 + 24);
  if (v130 >> 62 != 1)
  {
    v200 = *(_QWORD *)(v130 + 24);
    sub_1BA73B1CC(v14, v15, v329);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain();
    v46 = v319;
    swift_bridgeObjectRetain();
    swift_retain();
    v57 = v313;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAC45158(v323);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_346;
    }
    swift_bridgeObjectRetain();
    sub_1BAC1A144(v323, v200);
    swift_release();
    swift_bridgeObjectRelease_n();
    v199 = v304;
    goto LABEL_303;
  }
  v132 = *(_QWORD *)(v130 + 16);
  v131 = *(_QWORD *)(v130 + 24);
  v134 = *(_QWORD *)(v130 + 32);
  v133 = *(_QWORD *)(v130 + 40);
  v301 = *(_QWORD *)(v130 + 56);
  v302 = *(_QWORD *)(v130 + 48);
  v135 = *(unsigned __int8 *)(v130 + 64);
  v136 = swift_allocObject();
  *(_QWORD *)(v136 + 16) = v132;
  *(_QWORD *)(v136 + 24) = v131;
  *(_QWORD *)(v136 + 32) = v134;
  *(_QWORD *)(v136 + 40) = v133;
  v137 = v136 | 0x9000000000000000;
  v138 = *v324;
  result = sub_1BA79B898(*v324);
  v300 = v130 & 0x3FFFFFFFFFFFFFFFLL;
  if (!result)
  {
    sub_1BA73B1CC(v327, v328, v329);
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_242:
    swift_retain();
    sub_1BA9814D4();
    v238 = *(_QWORD *)(*v324 + 16);
    sub_1BA9815AC(v238);
    sub_1BA9816C0(v238, v137);
    nullsub_1();
    goto LABEL_243;
  }
  v139 = v3;
  v140 = result - 1;
  if (__OFSUB__(result, 1))
    goto LABEL_366;
  sub_1BA8E9170(result - 1, 1, v138);
  v141 = *(_QWORD *)(v138 + 8 * v140 + 32);
  sub_1BA73B1CC(v327, v328, v329);
  swift_retain();
  swift_retain();
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAA736F8(v141);
  v143 = v142;
  swift_release();
  swift_release();
  v3 = v139;
  if ((v143 & 1) == 0)
    goto LABEL_242;
LABEL_243:
  swift_release();
  v239 = v302;
  if (v135 <= 1)
  {
    v199 = v304;
    if (v135)
    {
      v261 = sub_1BA79B898(v302);
      if (v261)
      {
        v262 = v261;
        sub_1BA76F5C4(v302, v301, 1u);
        result = sub_1BA76F534(v302, v301, 1u);
        v263 = 0;
        v264 = (_BYTE *)(v302 + 40);
        while (1)
        {
          v265 = v263 + 1;
          if (__OFADD__(v263, 1))
            goto LABEL_363;
          if ((*v264 & 1) == 0)
          {
            v266 = *((_QWORD *)v264 - 1);
            sub_1BA7E8124(v266, 0);
            swift_retain();
            sub_1BA9F22C4();
            if (v3)
            {
              sub_1BA72C46C(v266, 0);
              sub_1BA72C46C(v266, 0);
              sub_1BA76F520(v302, v301, 1u);
              v288 = v302;
              v289 = v301;
              v290 = 1;
              goto LABEL_345;
            }
            sub_1BA72C46C(v266, 0);
            result = sub_1BA72C46C(v266, 0);
          }
          v264 += 16;
          ++v263;
          if (v265 == v262)
          {
            sub_1BA76F520(v302, v301, 1u);
            v267 = v302;
            v268 = v301;
            v269 = 1;
            goto LABEL_301;
          }
        }
      }
    }
    else
    {
      v240 = sub_1BA79B898(v302);
      if (v240)
      {
        v241 = v240;
        sub_1BA76F5C4(v302, v301, 0);
        result = sub_1BA76F534(v302, v301, 0);
        v242 = 0;
        v243 = (_BYTE *)(v302 + 40);
        while (1)
        {
          v244 = v242 + 1;
          if (__OFADD__(v242, 1))
            goto LABEL_361;
          if ((*v243 & 1) == 0)
          {
            v245 = *((_QWORD *)v243 - 1);
            sub_1BA7E8124(v245, 0);
            swift_retain();
            sub_1BA9F22C4();
            if (v3)
            {
              sub_1BA72C46C(v245, 0);
              sub_1BA72C46C(v245, 0);
              sub_1BA76F520(v302, v301, 0);
              v288 = v302;
              v289 = v301;
              v290 = 0;
              goto LABEL_345;
            }
            sub_1BA72C46C(v245, 0);
            result = sub_1BA72C46C(v245, 0);
          }
          v243 += 16;
          ++v242;
          if (v244 == v241)
          {
            sub_1BA76F520(v302, v301, 0);
            v267 = v302;
            v268 = v301;
            v269 = 0;
            goto LABEL_301;
          }
        }
      }
    }
LABEL_302:
    v46 = v319;
    v79 = v310;
    v57 = v313;
LABEL_303:
    swift_bridgeObjectRetain();
    sub_1BAC1A144(v323, v199);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      goto LABEL_327;
    }
    swift_bridgeObjectRelease_n();
    swift_release();
    v54 = v323;
    goto LABEL_305;
  }
  v199 = v304;
  if (v135 != 2)
    goto LABEL_302;
  v246 = sub_1BA79B898(v302);
  if (v246)
  {
    v247 = v246;
    v248 = swift_bridgeObjectRetain();
    sub_1BA76F5C4(v248, v301, 2u);
    result = swift_bridgeObjectRetain();
    v249 = 0;
    v250 = (_BYTE *)(v302 + 40);
    while (1)
    {
      v251 = v249 + 1;
      if (__OFADD__(v249, 1))
        goto LABEL_362;
      if ((*v250 & 1) == 0)
      {
        v149 = *((_QWORD *)v250 - 1);
        sub_1BA7E8124(v149, 0);
        swift_retain();
        sub_1BA9F22C4();
        v147 = v149;
        v148 = 0;
        if (v3)
          goto LABEL_344;
        sub_1BA72C46C(v149, 0);
        result = sub_1BA72C46C(v149, 0);
      }
      v250 += 16;
      ++v249;
      if (v251 == v247)
      {
        v239 = v302;
        swift_bridgeObjectRelease_n();
        v270 = v301;
        goto LABEL_291;
      }
    }
  }
  v270 = v301;
  sub_1BA76F534(v302, v301, 2u);
LABEL_291:
  v271 = sub_1BA79B898(v270);
  if (!v271)
  {
    v267 = v239;
    v268 = v270;
LABEL_300:
    v269 = 2;
LABEL_301:
    sub_1BA76F520(v267, v268, v269);
    goto LABEL_302;
  }
  v272 = v271;
  result = swift_bridgeObjectRetain_n();
  v273 = 0;
  v274 = (_BYTE *)(v270 + 40);
  while (1)
  {
    v275 = v273 + 1;
    if (__OFADD__(v273, 1))
      break;
    if ((*v274 & 1) == 0)
    {
      v149 = *((_QWORD *)v274 - 1);
      sub_1BA7E8124(v149, 0);
      swift_retain();
      sub_1BA9F22C4();
      v147 = v149;
      v148 = 0;
      if (v3)
        goto LABEL_344;
      sub_1BA72C46C(v149, 0);
      result = sub_1BA72C46C(v149, 0);
    }
    v274 += 16;
    ++v273;
    if (v275 == v272)
    {
      swift_bridgeObjectRelease_n();
      v267 = v302;
      v268 = v301;
      goto LABEL_300;
    }
  }
LABEL_364:
  __break(1u);
LABEL_365:
  __break(1u);
LABEL_366:
  __break(1u);
  return result;
}

uint64_t sub_1BAC1A144(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  unsigned __int16 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  unsigned __int16 v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unsigned __int8 v127;
  uint64_t v128;
  _BYTE *v129;
  uint64_t v130;
  _BYTE *v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _BYTE *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  unsigned __int8 v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  uint64_t v167;
  _BYTE *v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _BYTE *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unsigned __int8 v190;
  uint64_t v191;
  uint64_t v192;
  _BYTE *v193;
  uint64_t v194;
  _BYTE *v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  _BYTE *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _BYTE *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unsigned __int8 v211;
  uint64_t v212;
  uint64_t v213;
  _BYTE *v214;
  uint64_t v215;
  _BYTE *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unsigned __int8 v220;
  uint64_t v221;
  uint64_t v222;
  _BYTE *v223;
  _QWORD *v224;
  uint64_t v225;
  uint64_t v226;
  unsigned __int8 v227;
  uint64_t v228;
  uint64_t v229;
  unsigned __int8 v230;
  uint64_t v231;
  uint64_t v232;
  unsigned __int8 v233;
  uint64_t v234;
  uint64_t v235;
  unsigned __int8 v236;
  uint64_t v237;
  uint64_t v238;
  unsigned __int8 v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char v253;
  unsigned int v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  int v259;
  uint64_t v260;
  unint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  uint64_t v269;
  unsigned int v270;
  int v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char v275;
  uint64_t v276;
  uint64_t v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  unint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char v297;
  uint64_t v298;
  uint64_t v299;
  __int16 v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char v305;
  unint64_t v306;
  uint64_t v307;

  v3 = v2;
  v292 = *(_QWORD *)(a2 + 16);
  if (!v292)
    return result;
  v4 = result;
  v5 = a2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = &unk_1ED3BE000;
  v307 = v4;
  v291 = v5;
  while (1)
  {
    v293 = v6;
    v8 = (uint64_t *)(v5 + 24 * v6);
    v9 = *v8;
    v10 = v8[1];
    v11 = v8[2];
    v12 = v7[255];
    swift_bridgeObjectRetain_n();
    swift_retain();
    if (v12 != -1)
      swift_once();
    v294 = v9;
    v295 = v10;
    v13 = sub_1BA6E583C(&v294);
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (uint64_t *)(v13 + 64);
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BB043358(v307, v16, v17);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 += 5;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!(v11 >> 62))
    {
      v31 = *(_QWORD *)(v11 + 24);
      v32 = *(_QWORD *)(v11 + 32);
      v33 = *(_BYTE *)(v11 + 40);
      v35 = *(_QWORD *)(v11 + 48);
      v34 = *(_QWORD *)(v11 + 56);
      v36 = *(_QWORD *)(v11 + 72);
      v37 = *(_QWORD *)(v11 + 80);
      v38 = *(_QWORD *)(v11 + 88);
      v273 = *(_QWORD *)(v11 + 96);
      v39 = *(_BYTE *)(v11 + 104);
      v287 = v3;
      v289 = *(_QWORD *)(v11 + 112);
      v40 = *(_WORD *)(v11 + 64);
      v270 = v40;
      v294 = *(_QWORD *)(v11 + 16);
      v295 = v31;
      v41 = v294;
      v279 = v294;
      v42 = v31;
      v296 = v32;
      v297 = v33;
      v298 = v35;
      v299 = v34;
      v300 = v40;
      v301 = v36;
      v302 = v37;
      v303 = v38;
      v304 = v273;
      v305 = v39;
      v306 = v289;
      swift_retain();
      sub_1BA60DF54(v41, v42, v32, v33);
      sub_1BA740E74(v35, v34, v270);
      sub_1BA60DEE4(v36);
      sub_1BA69C808(v38, v273, v39);
      sub_1BA895BA4(v289);
      sub_1BAC324DC(v307);
      v43 = v42;
      v3 = v287;
      sub_1BA60DFC4(v279, v43, v32, v33);
      sub_1BA740460(v35, v34, v270);
      sub_1BA60DF1C(v36);
      sub_1BA69C828(v38, v273, v39);
      sub_1BA895BB8(v289);
      if (v287)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      goto LABEL_88;
    }
    if (v11 >> 62 == 1)
      break;
    v44 = *(_QWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    v290 = *(_QWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    if (!(v44 >> 62))
    {
      v69 = *(_QWORD *)(v44 + 24);
      v70 = *(_QWORD *)(v44 + 32);
      v71 = *(_BYTE *)(v44 + 40);
      v72 = *(_QWORD *)(v44 + 56);
      v73 = *(_WORD *)(v44 + 64);
      v254 = v73;
      v74 = *(_QWORD *)(v44 + 72);
      v280 = *(_QWORD *)(v44 + 48);
      v282 = *(_QWORD *)(v44 + 88);
      v257 = *(_QWORD *)(v44 + 80);
      v262 = *(_QWORD *)(v44 + 96);
      v75 = *(_BYTE *)(v44 + 104);
      v284 = *(_QWORD *)(v44 + 112);
      v294 = *(_QWORD *)(v44 + 16);
      v68 = v294;
      v295 = v69;
      v296 = v70;
      v297 = v71;
      v298 = v280;
      v299 = v72;
      v300 = v73;
      v301 = v74;
      v302 = v257;
      v303 = v282;
      v304 = v262;
      v305 = v75;
      v306 = v284;
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BA60DF54(v68, v69, v70, v71);
      sub_1BA740E74(v280, v72, v254);
      sub_1BA60DEE4(v74);
      sub_1BA69C808(v282, v262, v75);
      sub_1BA895BA4(v284);
      sub_1BAC324DC(v307);
      if (v3)
      {
        sub_1BA60DFC4(v68, v69, v70, v71);
        sub_1BA740460(v280, v72, v254);
        sub_1BA60DF1C(v74);
        sub_1BA69C828(v282, v262, v75);
        sub_1BA895BB8(v284);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      sub_1BA60DFC4(v68, v69, v70, v71);
      sub_1BA740460(v280, v72, v254);
      sub_1BA60DF1C(v74);
      sub_1BA69C828(v282, v262, v75);
      sub_1BA895BB8(v284);
      swift_release();
      v76 = v290;
      v77 = v307;
      goto LABEL_271;
    }
    if (v44 >> 62 != 1)
    {
      v78 = *(_QWORD *)(v44 + 16);
      v285 = *(_QWORD *)(v44 + 24);
      if (!(v78 >> 62))
      {
        v104 = *(_QWORD *)(v78 + 24);
        v106 = *(_QWORD *)(v78 + 32);
        v107 = *(_BYTE *)(v78 + 40);
        v108 = *(_QWORD *)(v78 + 48);
        v109 = *(_QWORD *)(v78 + 56);
        v110 = *(unsigned __int16 *)(v78 + 64);
        v258 = *(_QWORD *)(v78 + 72);
        v263 = *(_QWORD *)(v78 + 80);
        v266 = *(_QWORD *)(v78 + 88);
        v272 = *(_QWORD *)(v78 + 96);
        v111 = *(_BYTE *)(v78 + 104);
        v275 = v111;
        v278 = *(_QWORD *)(v78 + 112);
        v294 = *(_QWORD *)(v78 + 16);
        v105 = v294;
        v295 = v104;
        v296 = v106;
        v297 = v107;
        v298 = v108;
        v299 = v109;
        v300 = v110;
        v301 = v258;
        v302 = v263;
        v303 = v266;
        v304 = v272;
        v305 = v111;
        v306 = v278;
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA60DF54(v105, v104, v106, v107);
        sub_1BA740E74(v108, v109, v110);
        sub_1BA60DEE4(v258);
        sub_1BA69C808(v266, v272, v275);
        sub_1BA895BA4(v278);
        sub_1BAC324DC(v307);
        if (v3)
        {
          sub_1BA60DFC4(v105, v104, v106, v107);
          sub_1BA740460(v108, v109, v110);
          sub_1BA60DF1C(v258);
          sub_1BA69C828(v266, v272, v275);
          sub_1BA895BB8(v278);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          return swift_release_n();
        }
        sub_1BA60DFC4(v105, v104, v106, v107);
        sub_1BA740460(v108, v109, v110);
        sub_1BA60DF1C(v258);
        sub_1BA69C828(v266, v272, v275);
        sub_1BA895BB8(v278);
        swift_release();
        v76 = v290;
        v77 = v307;
        goto LABEL_199;
      }
      if (v78 >> 62 == 1)
      {
        v80 = *(_QWORD *)(v78 + 16);
        v79 = *(_QWORD *)(v78 + 24);
        v82 = *(_QWORD *)(v78 + 32);
        v81 = *(_QWORD *)(v78 + 40);
        v274 = *(_QWORD *)(v78 + 56);
        v277 = *(_QWORD *)(v78 + 48);
        v271 = *(unsigned __int8 *)(v78 + 64);
        v83 = swift_allocObject();
        *(_QWORD *)(v83 + 16) = v80;
        *(_QWORD *)(v83 + 24) = v79;
        *(_QWORD *)(v83 + 32) = v82;
        *(_QWORD *)(v83 + 40) = v81;
        v84 = v83 | 0x9000000000000000;
        v85 = *(_QWORD **)(v307 + 48);
        v86 = v85[2];
        if (v86)
        {
          v87 = v85[v86 + 3];
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAA736F8(v87);
          v89 = v88;
          swift_release();
          swift_release();
          if ((v89 & 1) != 0)
          {
            swift_release();
            v77 = v307;
            v90 = v277;
            goto LABEL_111;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_retain();
        v90 = v277;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v85 = sub_1BB38ED0C(0, v85[2] + 1, 1, v85);
        v134 = v85[2];
        v133 = v85[3];
        if (v134 >= v133 >> 1)
          v85 = sub_1BB38ED0C((_QWORD *)(v133 > 1), v134 + 1, 1, v85);
        v85[2] = v134 + 1;
        v85[v134 + 4] = v84;
        swift_release();
        v77 = v307;
        *(_QWORD *)(v307 + 48) = v85;
LABEL_111:
        v76 = v290;
        if (v271 > 1)
        {
          if (v271 != 2)
            goto LABEL_198;
          v138 = *(_QWORD *)(v90 + 16);
          if (v138)
          {
            v139 = swift_bridgeObjectRetain();
            sub_1BA76F5C4(v139, v274, 2u);
            swift_bridgeObjectRetain();
            v140 = (_BYTE *)(v90 + 40);
            do
            {
              if ((*v140 & 1) == 0)
              {
                v141 = *((_QWORD *)v140 - 1);
                v294 = v141;
                sub_1BA7E8124(v141, 0);
                swift_retain();
                sub_1BA9F22C4();
                v142 = v141;
                if (v3)
                {
LABEL_298:
                  sub_1BA72C46C(v142, 0);
                  sub_1BA72C46C(v141, 0);
                  swift_bridgeObjectRelease_n();
                  sub_1BA76F520(v277, v274, 2u);
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_release();
                  swift_bridgeObjectRelease();
                  return swift_bridgeObjectRelease();
                }
                sub_1BA72C46C(v141, 0);
                sub_1BA72C46C(v141, 0);
              }
              v140 += 16;
              --v138;
            }
            while (v138);
            swift_bridgeObjectRelease_n();
            v191 = v274;
          }
          else
          {
            v191 = v274;
            sub_1BA76F534(v90, v274, 2u);
          }
          v192 = *(_QWORD *)(v191 + 16);
          if (!v192)
          {
            sub_1BA76F520(v277, v191, 2u);
            goto LABEL_198;
          }
          swift_bridgeObjectRetain_n();
          v193 = (_BYTE *)(v191 + 40);
          do
          {
            if ((*v193 & 1) == 0)
            {
              v141 = *((_QWORD *)v193 - 1);
              v294 = v141;
              sub_1BA7E8124(v141, 0);
              swift_retain();
              sub_1BA9F22C4();
              v142 = v141;
              if (v3)
                goto LABEL_298;
              sub_1BA72C46C(v141, 0);
              sub_1BA72C46C(v141, 0);
            }
            v193 += 16;
            --v192;
          }
          while (v192);
          swift_bridgeObjectRelease_n();
          v188 = v277;
          v189 = v274;
          v190 = 2;
        }
        else
        {
          if (!v271)
          {
            v135 = *(_QWORD *)(v90 + 16);
            if (v135)
            {
              sub_1BA76F5C4(v90, v274, 0);
              sub_1BA76F534(v90, v274, 0);
              v136 = (_BYTE *)(v90 + 40);
              do
              {
                if ((*v136 & 1) == 0)
                {
                  v137 = *((_QWORD *)v136 - 1);
                  v294 = v137;
                  sub_1BA7E8124(v137, 0);
                  swift_retain();
                  sub_1BA9F22C4();
                  if (v3)
                  {
                    sub_1BA72C46C(v137, 0);
                    sub_1BA72C46C(v137, 0);
                    sub_1BA76F520(v277, v274, 0);
                    v231 = v277;
                    v232 = v274;
                    v233 = 0;
                    goto LABEL_297;
                  }
                  sub_1BA72C46C(v137, 0);
                  sub_1BA72C46C(v137, 0);
                }
                v136 += 16;
                --v135;
              }
              while (v135);
              sub_1BA76F520(v277, v274, 0);
              v188 = v277;
              v189 = v274;
              v190 = 0;
              goto LABEL_196;
            }
LABEL_198:
            swift_release();
LABEL_199:
            v197 = v285;
LABEL_268:
            swift_bridgeObjectRetain();
            sub_1BAC1A144(v77, v197);
            if (v3)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease_n();
              return swift_release();
            }
            swift_release();
            swift_bridgeObjectRelease_n();
LABEL_270:
            swift_release();
            goto LABEL_271;
          }
          v167 = *(_QWORD *)(v90 + 16);
          if (!v167)
            goto LABEL_198;
          sub_1BA76F5C4(v90, v274, 1u);
          sub_1BA76F534(v90, v274, 1u);
          v168 = (_BYTE *)(v90 + 40);
          do
          {
            if ((*v168 & 1) == 0)
            {
              v169 = *((_QWORD *)v168 - 1);
              v294 = v169;
              sub_1BA7E8124(v169, 0);
              swift_retain();
              sub_1BA9F22C4();
              if (v3)
              {
                sub_1BA72C46C(v169, 0);
                sub_1BA72C46C(v169, 0);
                sub_1BA76F520(v277, v274, 1u);
                v231 = v277;
                v232 = v274;
                v233 = 1;
LABEL_297:
                sub_1BA76F520(v231, v232, v233);
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                return swift_bridgeObjectRelease();
              }
              sub_1BA72C46C(v169, 0);
              sub_1BA72C46C(v169, 0);
            }
            v168 += 16;
            --v167;
          }
          while (v167);
          sub_1BA76F520(v277, v274, 1u);
          v188 = v277;
          v189 = v274;
          v190 = 1;
        }
LABEL_196:
        sub_1BA76F520(v188, v189, v190);
        goto LABEL_198;
      }
      v112 = *(_QWORD *)(v78 + 16);
      v276 = *(_QWORD *)(v78 + 24);
      if (!(v112 >> 62))
      {
        v144 = *(_QWORD *)(v112 + 24);
        v145 = *(_QWORD *)(v112 + 32);
        v146 = *(_BYTE *)(v112 + 40);
        v147 = *(_QWORD *)(v112 + 56);
        v148 = *(unsigned __int16 *)(v112 + 64);
        v245 = *(_QWORD *)(v112 + 48);
        v248 = *(_QWORD *)(v112 + 72);
        v251 = *(_QWORD *)(v112 + 80);
        v255 = *(_QWORD *)(v112 + 88);
        v260 = *(_QWORD *)(v112 + 96);
        v149 = *(_BYTE *)(v112 + 104);
        v265 = v149;
        v268 = *(_QWORD *)(v112 + 112);
        v294 = *(_QWORD *)(v112 + 16);
        v143 = v294;
        v295 = v144;
        v296 = v145;
        v297 = v146;
        v298 = v245;
        v299 = v147;
        v300 = v148;
        v301 = v248;
        v302 = v251;
        v303 = v255;
        v304 = v260;
        v305 = v149;
        v306 = v268;
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA60DF54(v143, v144, v145, v146);
        sub_1BA740E74(v245, v147, v148);
        sub_1BA60DEE4(v248);
        sub_1BA69C808(v255, v260, v265);
        sub_1BA895BA4(v268);
        sub_1BAC324DC(v307);
        if (v3)
        {
          sub_1BA60DFC4(v143, v144, v145, v146);
          sub_1BA740460(v245, v147, v148);
          sub_1BA60DF1C(v248);
          sub_1BA69C828(v255, v260, v265);
          sub_1BA895BB8(v268);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_314;
        }
        sub_1BA60DFC4(v143, v144, v145, v146);
        sub_1BA740460(v245, v147, v148);
        sub_1BA60DF1C(v248);
        sub_1BA69C828(v255, v260, v265);
        sub_1BA895BB8(v268);
        swift_release();
        v76 = v290;
        v77 = v307;
        goto LABEL_246;
      }
      if (v112 >> 62 == 1)
      {
        v114 = *(_QWORD *)(v112 + 16);
        v113 = *(_QWORD *)(v112 + 24);
        v116 = *(_QWORD *)(v112 + 32);
        v115 = *(_QWORD *)(v112 + 40);
        v264 = *(_QWORD *)(v112 + 56);
        v267 = *(_QWORD *)(v112 + 48);
        v259 = *(unsigned __int8 *)(v112 + 64);
        v117 = swift_allocObject();
        *(_QWORD *)(v117 + 16) = v114;
        *(_QWORD *)(v117 + 24) = v113;
        *(_QWORD *)(v117 + 32) = v116;
        *(_QWORD *)(v117 + 40) = v115;
        v118 = v117 | 0x9000000000000000;
        v119 = *(_QWORD **)(v307 + 48);
        v120 = v119[2];
        if (v120)
        {
          v121 = v119[v120 + 3];
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAA736F8(v121);
          v123 = v122;
          swift_release();
          swift_release();
          if ((v123 & 1) != 0)
          {
            swift_release();
            v77 = v307;
            v124 = v267;
            goto LABEL_159;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_retain();
        v124 = v267;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v119 = sub_1BB38ED0C(0, v119[2] + 1, 1, v119);
        v171 = v119[2];
        v170 = v119[3];
        if (v171 >= v170 >> 1)
          v119 = sub_1BB38ED0C((_QWORD *)(v170 > 1), v171 + 1, 1, v119);
        v119[2] = v171 + 1;
        v119[v171 + 4] = v118;
        swift_release();
        v77 = v307;
        *(_QWORD *)(v307 + 48) = v119;
LABEL_159:
        if (v259 > 1)
        {
          if (v259 != 2)
            goto LABEL_194;
          v175 = *(_QWORD *)(v124 + 16);
          if (v175)
          {
            v176 = swift_bridgeObjectRetain();
            sub_1BA76F5C4(v176, v264, 2u);
            swift_bridgeObjectRetain();
            v177 = (_BYTE *)(v124 + 40);
            v76 = v290;
            do
            {
              if ((*v177 & 1) == 0)
              {
                v178 = *((_QWORD *)v177 - 1);
                v294 = v178;
                sub_1BA7E8124(v178, 0);
                swift_retain();
                sub_1BA9F22C4();
                v179 = v178;
                if (v3)
                {
LABEL_305:
                  sub_1BA72C46C(v179, 0);
                  sub_1BA72C46C(v178, 0);
                  swift_bridgeObjectRelease_n();
                  sub_1BA76F520(v267, v264, 2u);
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_313;
                }
                sub_1BA72C46C(v178, 0);
                sub_1BA72C46C(v178, 0);
              }
              v177 += 16;
              --v175;
            }
            while (v175);
            swift_bridgeObjectRelease_n();
            v212 = v264;
          }
          else
          {
            v212 = v264;
            sub_1BA76F534(v124, v264, 2u);
            v76 = v290;
          }
          v213 = *(_QWORD *)(v212 + 16);
          if (v213)
          {
            swift_bridgeObjectRetain_n();
            v214 = (_BYTE *)(v212 + 40);
            do
            {
              if ((*v214 & 1) == 0)
              {
                v178 = *((_QWORD *)v214 - 1);
                v294 = v178;
                sub_1BA7E8124(v178, 0);
                swift_retain();
                sub_1BA9F22C4();
                v179 = v178;
                if (v3)
                  goto LABEL_305;
                sub_1BA72C46C(v178, 0);
                sub_1BA72C46C(v178, 0);
              }
              v214 += 16;
              --v213;
            }
            while (v213);
            swift_bridgeObjectRelease_n();
            v209 = v267;
            v210 = v264;
            v211 = 2;
            goto LABEL_243;
          }
          sub_1BA76F520(v267, v212, 2u);
        }
        else
        {
          if (!v259)
          {
            v172 = *(_QWORD *)(v124 + 16);
            if (v172)
            {
              sub_1BA76F5C4(v124, v264, 0);
              sub_1BA76F534(v124, v264, 0);
              v173 = (_BYTE *)(v124 + 40);
              v76 = v290;
              do
              {
                if ((*v173 & 1) == 0)
                {
                  v174 = *((_QWORD *)v173 - 1);
                  v294 = v174;
                  sub_1BA7E8124(v174, 0);
                  swift_retain();
                  sub_1BA9F22C4();
                  if (v3)
                  {
                    sub_1BA72C46C(v174, 0);
                    sub_1BA72C46C(v174, 0);
                    sub_1BA76F520(v267, v264, 0);
                    v234 = v267;
                    v235 = v264;
                    v236 = 0;
                    goto LABEL_304;
                  }
                  sub_1BA72C46C(v174, 0);
                  sub_1BA72C46C(v174, 0);
                }
                v173 += 16;
                --v172;
              }
              while (v172);
              sub_1BA76F520(v267, v264, 0);
              v209 = v267;
              v210 = v264;
              v211 = 0;
              goto LABEL_243;
            }
LABEL_194:
            swift_release();
            v76 = v290;
LABEL_246:
            v197 = v285;
            v158 = v276;
LABEL_266:
            swift_bridgeObjectRetain();
            sub_1BAC1A144(v77, v158);
            if (v3)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease_n();
              swift_release();
              goto LABEL_314;
            }
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
            goto LABEL_268;
          }
          v194 = *(_QWORD *)(v124 + 16);
          if (!v194)
            goto LABEL_194;
          sub_1BA76F5C4(v124, v264, 1u);
          sub_1BA76F534(v124, v264, 1u);
          v195 = (_BYTE *)(v124 + 40);
          v76 = v290;
          do
          {
            if ((*v195 & 1) == 0)
            {
              v196 = *((_QWORD *)v195 - 1);
              v294 = v196;
              sub_1BA7E8124(v196, 0);
              swift_retain();
              sub_1BA9F22C4();
              if (v3)
              {
                sub_1BA72C46C(v196, 0);
                sub_1BA72C46C(v196, 0);
                sub_1BA76F520(v267, v264, 1u);
                v234 = v267;
                v235 = v264;
                v236 = 1;
LABEL_304:
                sub_1BA76F520(v234, v235, v236);
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
LABEL_313:
                swift_release();
LABEL_314:
                swift_bridgeObjectRelease();
                swift_release();
                return swift_bridgeObjectRelease();
              }
              sub_1BA72C46C(v196, 0);
              sub_1BA72C46C(v196, 0);
            }
            v195 += 16;
            --v194;
          }
          while (v194);
          sub_1BA76F520(v267, v264, 1u);
          v209 = v267;
          v210 = v264;
          v211 = 1;
LABEL_243:
          sub_1BA76F520(v209, v210, v211);
        }
        swift_release();
        goto LABEL_246;
      }
      v269 = *(_QWORD *)(v112 + 24);
      v261 = *(_QWORD *)(v112 + 16);
      if (!(v261 >> 62))
      {
        v181 = *(_QWORD *)(v261 + 24);
        v182 = *(_QWORD *)(v261 + 32);
        v183 = *(_BYTE *)(v261 + 40);
        v240 = *(_QWORD *)(v261 + 56);
        v241 = *(_QWORD *)(v261 + 48);
        v184 = *(unsigned __int16 *)(v261 + 64);
        v242 = *(_QWORD *)(v261 + 72);
        v244 = *(_QWORD *)(v261 + 80);
        v247 = *(_QWORD *)(v261 + 88);
        v250 = *(_QWORD *)(v261 + 96);
        v185 = *(_BYTE *)(v261 + 104);
        v253 = v185;
        v256 = *(_QWORD *)(v261 + 112);
        v294 = *(_QWORD *)(v261 + 16);
        v180 = v294;
        v295 = v181;
        v296 = v182;
        v297 = v183;
        v298 = v241;
        v299 = v240;
        v300 = v184;
        v301 = v242;
        v302 = v244;
        v303 = v247;
        v304 = v250;
        v305 = v185;
        v306 = v256;
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA60DF54(v180, v181, v182, v183);
        sub_1BA740E74(v241, v240, v184);
        sub_1BA60DEE4(v242);
        sub_1BA69C808(v247, v250, v253);
        sub_1BA895BA4(v256);
        sub_1BAC324DC(v307);
        if (v3)
        {
          sub_1BA60DFC4(v180, v181, v182, v183);
          sub_1BA740460(v241, v240, v184);
          sub_1BA60DF1C(v242);
          sub_1BA69C828(v247, v250, v253);
          sub_1BA895BB8(v256);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_312;
        }
        sub_1BA60DFC4(v180, v181, v182, v183);
        sub_1BA740460(v241, v240, v184);
        sub_1BA60DF1C(v242);
        sub_1BA69C828(v247, v250, v253);
        sub_1BA895BB8(v256);
        swift_release();
        v76 = v290;
        goto LABEL_262;
      }
      if (v261 >> 62 == 1)
      {
        v150 = *(_QWORD *)(v261 + 16);
        v151 = *(_QWORD *)(v261 + 24);
        v153 = *(_QWORD *)(v261 + 32);
        v152 = *(_QWORD *)(v261 + 40);
        v249 = *(_QWORD *)(v261 + 56);
        v252 = *(_QWORD *)(v261 + 48);
        v246 = *(unsigned __int8 *)(v261 + 64);
        v154 = swift_allocObject();
        *(_QWORD *)(v154 + 16) = v150;
        *(_QWORD *)(v154 + 24) = v151;
        *(_QWORD *)(v154 + 32) = v153;
        *(_QWORD *)(v154 + 40) = v152;
        v155 = *(_QWORD **)(v307 + 48);
        v156 = v155[2];
        v243 = v154 | 0x9000000000000000;
        if (v156)
        {
          v157 = v155[v156 + 3];
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          v158 = v276;
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAA736F8(v157);
          v160 = v159;
          swift_release();
          swift_release();
          if ((v160 & 1) != 0)
          {
            swift_release();
            v76 = v290;
            goto LABEL_206;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v155 = sub_1BB38ED0C(0, v155[2] + 1, 1, v155);
        v76 = v290;
        v198 = v243;
        v200 = v155[2];
        v199 = v155[3];
        if (v200 >= v199 >> 1)
        {
          v224 = sub_1BB38ED0C((_QWORD *)(v199 > 1), v200 + 1, 1, v155);
          v198 = v243;
          v155 = v224;
        }
        v155[2] = v200 + 1;
        v155[v200 + 4] = v198;
        swift_release();
        *(_QWORD *)(v307 + 48) = v155;
        v158 = v276;
LABEL_206:
        if (v246 <= 1)
        {
          if (!v246)
          {
            v201 = *(_QWORD *)(v252 + 16);
            if (v201)
            {
              sub_1BA76F5C4(v252, v249, 0);
              sub_1BA76F534(v252, v249, 0);
              v202 = (_BYTE *)(v252 + 40);
              do
              {
                if ((*v202 & 1) == 0)
                {
                  v203 = *((_QWORD *)v202 - 1);
                  v294 = v203;
                  sub_1BA7E8124(v203, 0);
                  swift_retain();
                  sub_1BA9F22C4();
                  if (v3)
                  {
                    sub_1BA72C46C(v203, 0);
                    sub_1BA72C46C(v203, 0);
                    sub_1BA76F520(v252, v249, 0);
                    v237 = v252;
                    v238 = v249;
                    v239 = 0;
                    goto LABEL_308;
                  }
                  sub_1BA72C46C(v203, 0);
                  sub_1BA72C46C(v203, 0);
                }
                v202 += 16;
                --v201;
              }
              while (v201);
              sub_1BA76F520(v252, v249, 0);
              v218 = v252;
              v219 = v249;
              v220 = 0;
              goto LABEL_260;
            }
LABEL_261:
            swift_release();
LABEL_262:
            v77 = v307;
LABEL_263:
            v158 = v276;
LABEL_264:
            swift_bridgeObjectRetain();
            sub_1BAC1A144(v77, v269);
            v197 = v285;
            if (v3)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease_n();
              swift_release();
              goto LABEL_312;
            }
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_release();
            goto LABEL_266;
          }
          v215 = *(_QWORD *)(v252 + 16);
          if (!v215)
            goto LABEL_261;
          sub_1BA76F5C4(v252, v249, 1u);
          sub_1BA76F534(v252, v249, 1u);
          v216 = (_BYTE *)(v252 + 40);
          do
          {
            if ((*v216 & 1) == 0)
            {
              v217 = *((_QWORD *)v216 - 1);
              v294 = v217;
              sub_1BA7E8124(v217, 0);
              swift_retain();
              sub_1BA9F22C4();
              if (v3)
              {
                sub_1BA72C46C(v217, 0);
                sub_1BA72C46C(v217, 0);
                sub_1BA76F520(v252, v249, 1u);
                v237 = v252;
                v238 = v249;
                v239 = 1;
LABEL_308:
                sub_1BA76F520(v237, v238, v239);
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
LABEL_309:
                swift_release();
LABEL_312:
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_313;
              }
              sub_1BA72C46C(v217, 0);
              sub_1BA72C46C(v217, 0);
            }
            v216 += 16;
            --v215;
          }
          while (v215);
          sub_1BA76F520(v252, v249, 1u);
          v218 = v252;
          v219 = v249;
          v220 = 1;
LABEL_260:
          sub_1BA76F520(v218, v219, v220);
          goto LABEL_261;
        }
        if (v246 == 2)
        {
          v204 = *(_QWORD *)(v252 + 16);
          if (v204)
          {
            v205 = swift_bridgeObjectRetain();
            sub_1BA76F5C4(v205, v249, 2u);
            swift_bridgeObjectRetain();
            v206 = (_BYTE *)(v252 + 40);
            do
            {
              if ((*v206 & 1) == 0)
              {
                v207 = *((_QWORD *)v206 - 1);
                v294 = v207;
                sub_1BA7E8124(v207, 0);
                swift_retain();
                sub_1BA9F22C4();
                v208 = v207;
                if (v3)
                {
LABEL_222:
                  sub_1BA72C46C(v208, 0);
                  sub_1BA72C46C(v207, 0);
                  swift_bridgeObjectRelease_n();
                  sub_1BA76F520(v252, v249, 2u);
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_309;
                }
                sub_1BA72C46C(v207, 0);
                sub_1BA72C46C(v207, 0);
              }
              v206 += 16;
              --v204;
            }
            while (v204);
            swift_bridgeObjectRelease_n();
            v77 = v307;
            v221 = v249;
          }
          else
          {
            v221 = v249;
            sub_1BA76F534(v252, v249, 2u);
            v77 = v307;
          }
          v222 = *(_QWORD *)(v221 + 16);
          if (!v222)
          {
            sub_1BA76F520(v252, v221, 2u);
            swift_release();
            goto LABEL_263;
          }
          swift_bridgeObjectRetain_n();
          v223 = (_BYTE *)(v221 + 40);
          do
          {
            if ((*v223 & 1) == 0)
            {
              v207 = *((_QWORD *)v223 - 1);
              v294 = v207;
              sub_1BA7E8124(v207, 0);
              swift_retain();
              sub_1BA9F22C4();
              v208 = v207;
              if (v3)
                goto LABEL_222;
              sub_1BA72C46C(v207, 0);
              sub_1BA72C46C(v207, 0);
            }
            v223 += 16;
            --v222;
          }
          while (v222);
          swift_bridgeObjectRelease_n();
          v218 = v252;
          v219 = v249;
          v220 = 2;
          goto LABEL_260;
        }
        swift_release();
      }
      else
      {
        v186 = *(_QWORD *)(v261 + 24);
        v294 = *(_QWORD *)(v261 + 16);
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        v158 = v276;
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        v187 = v307;
        sub_1BAC45158(v307);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_release();
          goto LABEL_312;
        }
        swift_release();
        swift_bridgeObjectRetain();
        sub_1BAC1A144(v187, v186);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        v76 = v290;
      }
      v77 = v307;
      goto LABEL_264;
    }
    v46 = *(_QWORD *)(v44 + 16);
    v45 = *(_QWORD *)(v44 + 24);
    v48 = *(_QWORD *)(v44 + 32);
    v47 = *(_QWORD *)(v44 + 40);
    v281 = *(_QWORD *)(v44 + 56);
    v283 = *(_QWORD *)(v44 + 48);
    v49 = *(unsigned __int8 *)(v44 + 64);
    v50 = swift_allocObject();
    *(_QWORD *)(v50 + 16) = v46;
    *(_QWORD *)(v50 + 24) = v45;
    *(_QWORD *)(v50 + 32) = v48;
    *(_QWORD *)(v50 + 40) = v47;
    v51 = v50 | 0x9000000000000000;
    v52 = *(_QWORD **)(v307 + 48);
    v53 = v52[2];
    if (v53)
    {
      v54 = v52[v53 + 3];
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BAA736F8(v54);
      v56 = v55;
      swift_release();
      swift_release();
      if ((v56 & 1) != 0)
      {
        swift_release();
        goto LABEL_61;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v52 = sub_1BB38ED0C(0, v52[2] + 1, 1, v52);
    v95 = v52[2];
    v94 = v52[3];
    if (v95 >= v94 >> 1)
      v52 = sub_1BB38ED0C((_QWORD *)(v94 > 1), v95 + 1, 1, v52);
    v52[2] = v95 + 1;
    v52[v95 + 4] = v51;
    swift_release();
    *(_QWORD *)(v307 + 48) = v52;
LABEL_61:
    v76 = v290;
    if (v49 > 1)
    {
      v77 = v307;
      if (v49 != 2)
        goto LABEL_270;
      v99 = *(_QWORD *)(v283 + 16);
      if (v99)
      {
        v100 = swift_bridgeObjectRetain();
        sub_1BA76F5C4(v100, v281, 2u);
        swift_bridgeObjectRetain();
        v101 = (_BYTE *)(v283 + 40);
        do
        {
          if ((*v101 & 1) == 0)
          {
            v102 = *((_QWORD *)v101 - 1);
            v294 = v102;
            sub_1BA7E8124(v102, 0);
            swift_retain();
            sub_1BA9F22C4();
            v103 = v102;
            if (v3)
            {
LABEL_288:
              sub_1BA72C46C(v103, 0);
              sub_1BA72C46C(v102, 0);
              swift_bridgeObjectRelease_n();
              v228 = v283;
              v229 = v281;
              v230 = 2;
              goto LABEL_289;
            }
            sub_1BA72C46C(v102, 0);
            sub_1BA72C46C(v102, 0);
          }
          v101 += 16;
          --v99;
        }
        while (v99);
        swift_bridgeObjectRelease_n();
        v164 = v281;
      }
      else
      {
        v164 = v281;
        sub_1BA76F534(v283, v281, 2u);
      }
      v165 = *(_QWORD *)(v164 + 16);
      if (!v165)
      {
        sub_1BA76F520(v283, v164, 2u);
        swift_release();
        goto LABEL_271;
      }
      swift_bridgeObjectRetain_n();
      v166 = (_BYTE *)(v164 + 40);
      do
      {
        if ((*v166 & 1) == 0)
        {
          v102 = *((_QWORD *)v166 - 1);
          v294 = v102;
          sub_1BA7E8124(v102, 0);
          swift_retain();
          sub_1BA9F22C4();
          v103 = v102;
          if (v3)
            goto LABEL_288;
          sub_1BA72C46C(v102, 0);
          sub_1BA72C46C(v102, 0);
        }
        v166 += 16;
        --v165;
      }
      while (v165);
      swift_bridgeObjectRelease_n();
      v161 = v283;
      v162 = v281;
      v163 = 2;
    }
    else
    {
      v77 = v307;
      if (v49)
      {
        v130 = *(_QWORD *)(v283 + 16);
        if (!v130)
          goto LABEL_270;
        sub_1BA76F5C4(v283, v281, 1u);
        sub_1BA76F534(v283, v281, 1u);
        v131 = (_BYTE *)(v283 + 40);
        do
        {
          if ((*v131 & 1) == 0)
          {
            v132 = *((_QWORD *)v131 - 1);
            v294 = v132;
            sub_1BA7E8124(v132, 0);
            swift_retain();
            sub_1BA9F22C4();
            if (v3)
            {
              sub_1BA72C46C(v132, 0);
              sub_1BA72C46C(v132, 0);
              sub_1BA76F520(v283, v281, 1u);
              v228 = v283;
              v229 = v281;
              v230 = 1;
              goto LABEL_289;
            }
            sub_1BA72C46C(v132, 0);
            sub_1BA72C46C(v132, 0);
          }
          v131 += 16;
          --v130;
        }
        while (v130);
        sub_1BA76F520(v283, v281, 1u);
        v161 = v283;
        v162 = v281;
        v163 = 1;
      }
      else
      {
        v96 = *(_QWORD *)(v283 + 16);
        if (!v96)
          goto LABEL_270;
        sub_1BA76F5C4(v283, v281, 0);
        sub_1BA76F534(v283, v281, 0);
        v97 = (_BYTE *)(v283 + 40);
        do
        {
          if ((*v97 & 1) == 0)
          {
            v98 = *((_QWORD *)v97 - 1);
            v294 = v98;
            sub_1BA7E8124(v98, 0);
            swift_retain();
            sub_1BA9F22C4();
            if (v3)
            {
              sub_1BA72C46C(v98, 0);
              sub_1BA72C46C(v98, 0);
              sub_1BA76F520(v283, v281, 0);
              v228 = v283;
              v229 = v281;
              v230 = 0;
LABEL_289:
              sub_1BA76F520(v228, v229, v230);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              return swift_release_n();
            }
            sub_1BA72C46C(v98, 0);
            sub_1BA72C46C(v98, 0);
          }
          v97 += 16;
          --v96;
        }
        while (v96);
        sub_1BA76F520(v283, v281, 0);
        v161 = v283;
        v162 = v281;
        v163 = 0;
      }
    }
    sub_1BA76F520(v161, v162, v163);
    swift_release();
LABEL_271:
    swift_bridgeObjectRetain();
    sub_1BAC1A144(v77, v76);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
LABEL_273:
    v6 = v293 + 1;
    v5 = v291;
    v7 = (_QWORD *)&unk_1ED3BE000;
    if (v293 + 1 == v292)
      return swift_bridgeObjectRelease();
  }
  v18 = *(_QWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  v19 = *(_QWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  v20 = *(_QWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  v21 = *(_QWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
  v286 = *(_QWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
  v288 = *(_QWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
  v22 = *(unsigned __int8 *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x40);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v18;
  *(_QWORD *)(v23 + 24) = v19;
  *(_QWORD *)(v23 + 32) = v20;
  *(_QWORD *)(v23 + 40) = v21;
  v24 = v23 | 0x9000000000000000;
  v25 = *(_QWORD **)(v307 + 48);
  v26 = v25[2];
  if (v26)
  {
    v27 = v25[v26 + 3];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAA736F8(v27);
    v29 = v28;
    swift_release();
    swift_release();
    if ((v29 & 1) != 0)
    {
      swift_release();
      v30 = v286;
      goto LABEL_27;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_1BB38ED0C(0, v25[2] + 1, 1, v25);
  v30 = v286;
  v58 = v25[2];
  v57 = v25[3];
  if (v58 >= v57 >> 1)
    v25 = sub_1BB38ED0C((_QWORD *)(v57 > 1), v58 + 1, 1, v25);
  v25[2] = v58 + 1;
  v25[v58 + 4] = v24;
  swift_release();
  *(_QWORD *)(v307 + 48) = v25;
LABEL_27:
  v59 = v288;
  if (v22 > 1)
  {
    if (v22 != 2)
      goto LABEL_88;
    v63 = *(_QWORD *)(v288 + 16);
    if (v63)
    {
      v64 = swift_bridgeObjectRetain();
      sub_1BA76F5C4(v64, v30, 2u);
      swift_bridgeObjectRetain();
      v65 = (_BYTE *)(v288 + 40);
      do
      {
        if ((*v65 & 1) == 0)
        {
          v66 = *((_QWORD *)v65 - 1);
          v294 = v66;
          sub_1BA7E8124(v66, 0);
          swift_retain();
          sub_1BA9F22C4();
          v67 = v66;
          if (v3)
          {
LABEL_95:
            sub_1BA72C46C(v67, 0);
            sub_1BA72C46C(v66, 0);
            swift_bridgeObjectRelease_n();
            v225 = v288;
            v226 = v30;
            v227 = 2;
            goto LABEL_282;
          }
          sub_1BA72C46C(v66, 0);
          sub_1BA72C46C(v66, 0);
        }
        v65 += 16;
        --v63;
      }
      while (v63);
      v59 = v288;
      swift_bridgeObjectRelease_n();
      v128 = *(_QWORD *)(v30 + 16);
      if (!v128)
        goto LABEL_104;
    }
    else
    {
      sub_1BA76F534(v288, v30, 2u);
      v128 = *(_QWORD *)(v30 + 16);
      if (!v128)
      {
LABEL_104:
        sub_1BA76F520(v59, v30, 2u);
        swift_release_n();
        swift_bridgeObjectRelease();
        goto LABEL_273;
      }
    }
    swift_bridgeObjectRetain_n();
    v129 = (_BYTE *)(v30 + 40);
    do
    {
      if ((*v129 & 1) == 0)
      {
        v66 = *((_QWORD *)v129 - 1);
        v294 = v66;
        sub_1BA7E8124(v66, 0);
        swift_retain();
        sub_1BA9F22C4();
        v67 = v66;
        if (v3)
          goto LABEL_95;
        sub_1BA72C46C(v66, 0);
        sub_1BA72C46C(v66, 0);
      }
      v129 += 16;
      --v128;
    }
    while (v128);
    swift_bridgeObjectRelease_n();
    v59 = v288;
    goto LABEL_104;
  }
  if (!v22)
  {
    v60 = *(_QWORD *)(v288 + 16);
    if (v60)
    {
      sub_1BA76F534(v288, v30, 0);
      sub_1BA76F534(v288, v30, 0);
      v61 = (_BYTE *)(v288 + 40);
      while (1)
      {
        if ((*v61 & 1) == 0)
        {
          v62 = *((_QWORD *)v61 - 1);
          v294 = v62;
          sub_1BA7E8124(v62, 0);
          swift_retain();
          sub_1BA9F22C4();
          if (v3)
          {
            sub_1BA72C46C(v62, 0);
            sub_1BA72C46C(v62, 0);
            sub_1BA76F520(v288, v30, 0);
            v225 = v288;
            v226 = v30;
            v227 = 0;
            goto LABEL_282;
          }
          sub_1BA72C46C(v62, 0);
          sub_1BA72C46C(v62, 0);
        }
        v61 += 16;
        if (!--v60)
        {
          sub_1BA76F520(v288, v30, 0);
          v125 = v288;
          v126 = v30;
          v127 = 0;
          goto LABEL_87;
        }
      }
    }
    goto LABEL_88;
  }
  v91 = *(_QWORD *)(v288 + 16);
  if (!v91)
  {
LABEL_88:
    swift_bridgeObjectRelease();
    swift_release_n();
    goto LABEL_273;
  }
  sub_1BA76F534(v288, v30, 1u);
  sub_1BA76F534(v288, v30, 1u);
  v92 = (_BYTE *)(v288 + 40);
  while ((*v92 & 1) != 0)
  {
LABEL_51:
    v92 += 16;
    if (!--v91)
    {
      sub_1BA76F520(v288, v30, 1u);
      v125 = v288;
      v126 = v30;
      v127 = 1;
LABEL_87:
      sub_1BA76F520(v125, v126, v127);
      goto LABEL_88;
    }
  }
  v93 = *((_QWORD *)v92 - 1);
  v294 = v93;
  sub_1BA7E8124(v93, 0);
  swift_retain();
  sub_1BA9F22C4();
  if (!v3)
  {
    sub_1BA72C46C(v93, 0);
    sub_1BA72C46C(v93, 0);
    goto LABEL_51;
  }
  sub_1BA72C46C(v93, 0);
  sub_1BA72C46C(v93, 0);
  sub_1BA76F520(v288, v30, 1u);
  v225 = v288;
  v226 = v30;
  v227 = 1;
LABEL_282:
  sub_1BA76F520(v225, v226, v227);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

void sub_1BAC1CF38(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD v14[20];
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v3 = v2;
  v15 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v6);
  if (a2[2])
  {
    v14[12] = (char *)v14 - v7;
    v14[15] = v8;
    v20 = a1 + 48;
    v14[18] = a2;
    swift_bridgeObjectRetain();
    v24 = a1;
    v14[17] = a2 + 4;
    v9 = a2[6];
    v10 = a2[7];
    v11 = a2[5];
    *(_QWORD *)&v23 = a2[4];
    v12 = v23 & 0xFFFFFFFFFFFFFFFLL;
    v21 = v10 & 0xFFFFFFFFFFFFFFFLL;
    swift_retain();
    swift_retain_n();
    swift_retain();
    v22 = v9;
    swift_bridgeObjectRetain();
    sub_1BAC30118();
    if (!v3)
    {
      v17 = v10;
      v18 = 1;
      v19 = v12;
      swift_release();
      if (*(_BYTE *)(v11 + 41))
        v13 = 4;
      else
        v13 = 0;
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
  }
}

uint64_t sub_1BAC21588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = a2 + 56;
    while (1)
    {
      v7 = *(_QWORD *)(v6 - 24);
      v8 = *(_QWORD *)(v6 - 16);
      v9 = *(_BYTE *)(v6 - 8);
      sub_1BA73B1CC(v7, v8, v9);
      swift_retain_n();
      sub_1BB5635E8();
      if (v3)
        break;
      v6 += 32;
      swift_release();
      sub_1BA73B1B8(v7, v8, v9);
      swift_release();
      if (!--v4)
        return swift_bridgeObjectRelease();
    }
    swift_release();
    sub_1BA73B1B8(v7, v8, v9);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAC21698(uint64_t a1, uint64_t a2)
{
  return sub_1BAC2EAEC(a1, a2, (void (*)(uint64_t))sub_1BB5635E8);
}

uint64_t sub_1BAC216B4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v5 = result;
    swift_bridgeObjectRetain();
    v6 = a2 + 40;
    while (1)
    {
      swift_retain();
      swift_retain_n();
      sub_1BAC30118(v5);
      if (v2)
        break;
      swift_release();
      swift_retain();
      sub_1BB5635E8(v5);
      v6 += 16;
      swift_release();
      swift_release_n();
      if (!--v3)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1BAC217D8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v6 = result;
    swift_bridgeObjectRetain();
    v7 = a2 + 64;
    do
    {
      v8 = *(_QWORD *)(v7 - 8);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BB5635E8();
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      swift_release();
      if (v8)
        sub_1BAC3DC58(v6);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v7 += 40;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC21940(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;

  v3 = v2;
  v77 = *(_QWORD *)(a2 + 16);
  if (!v77)
    return result;
  v4 = result;
  v5 = a2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = &unk_1ED3BE000;
  v76 = v5;
  while (1)
  {
    v78 = v6;
    v8 = (uint64_t *)(v5 + 24 * v6);
    v9 = *v8;
    v10 = v8[1];
    v11 = v8[2];
    v12 = v7[255];
    swift_bridgeObjectRetain_n();
    swift_retain();
    if (v12 != -1)
      swift_once();
    v79 = v9;
    v80 = v10;
    v13 = sub_1BA6E583C(&v79);
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (uint64_t *)(v13 + 64);
      while (1)
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BB043358(v4, v16, v17);
        if (v3)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 += 5;
        if (!--v14)
          goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!(v11 >> 62))
    {
      if ((*(_BYTE *)(v11 + 40) & 1) != 0)
      {
        v29 = *(_QWORD *)(v11 + 24);
        v28 = *(_QWORD *)(v11 + 32);
        v79 = *(_QWORD *)(v11 + 16);
        v30 = v79;
        v80 = v29;
        v81 = v28;
        v82 = 6;
        swift_retain();
        sub_1BAC68C24(v30, v29, v28, 1);
        v31 = sub_1BB6B84D4(&v79, &v82);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_release_n();
        }
        v32 = v31;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v30, v29, v32, 0);
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_25:
        swift_release();
      }
      swift_bridgeObjectRelease();
      goto LABEL_71;
    }
    if (v11 >> 62 == 1)
      goto LABEL_25;
    v19 = *(_QWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    v18 = *(_QWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    if (!(v19 >> 62))
    {
      if ((*(_BYTE *)(v19 + 40) & 1) != 0)
      {
        v34 = *(_QWORD *)(v19 + 24);
        v33 = *(_QWORD *)(v19 + 32);
        v79 = *(_QWORD *)(v19 + 16);
        v35 = v79;
        v80 = v34;
        v81 = v33;
        v82 = 6;
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1BAC68C24(v35, v34, v33, 1);
        v36 = sub_1BB6B84D4(&v79, &v82);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          return swift_release_n();
        }
        v37 = v36;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v35, v34, v37, 0);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_69;
      }
      goto LABEL_30;
    }
    if (v19 >> 62 != 1)
      break;
LABEL_30:
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
LABEL_69:
    swift_bridgeObjectRetain();
    sub_1BAC21940(v4, v18);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
LABEL_71:
    v5 = v76;
    v6 = v78 + 1;
    v7 = (_QWORD *)&unk_1ED3BE000;
    if (v78 + 1 == v77)
      return swift_bridgeObjectRelease();
  }
  v21 = *(_QWORD *)(v19 + 16);
  v20 = *(_QWORD *)(v19 + 24);
  if (v21 >> 62)
  {
    if (v21 >> 62 != 1)
    {
      v22 = *(_QWORD *)(v21 + 16);
      v23 = *(_QWORD *)(v21 + 24);
      if (v22 >> 62)
      {
        if (v22 >> 62 != 1)
        {
          v24 = *(_QWORD *)(v22 + 16);
          v25 = *(_QWORD *)(v22 + 24);
          v75 = v23;
          if (v24 >> 62)
          {
            if (v24 >> 62 != 1)
            {
              v71 = *(_QWORD *)(v22 + 24);
              v26 = *(_QWORD *)(v24 + 16);
              v27 = *(_QWORD *)(v24 + 24);
              if (v26 >> 62)
              {
                if (v26 >> 62 == 1)
                {
LABEL_50:
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  goto LABEL_59;
                }
                v58 = *(_QWORD *)(v26 + 16);
                v67 = *(_QWORD *)(v26 + 24);
                v69 = *(_QWORD *)(v24 + 24);
                if (v58 >> 62)
                {
                  if (v58 >> 62 != 1)
                  {
                    v59 = *(_QWORD *)(v58 + 24);
                    v64 = *(_QWORD *)(v58 + 16);
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    sub_1BAC35500(v4, v64, v59);
                    if (v3)
                    {
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_release_n();
                      swift_bridgeObjectRelease();
                      swift_release_n();
                      swift_bridgeObjectRelease();
                      swift_release();
LABEL_91:
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_release();
                      goto LABEL_92;
                    }
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release();
                    goto LABEL_54;
                  }
LABEL_55:
                  swift_retain();
                  v63 = v67;
                  swift_bridgeObjectRetain();
                  swift_retain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  if ((*(_BYTE *)(v58 + 40) & 1) == 0)
                    goto LABEL_55;
                  v65 = *(_QWORD *)(v58 + 24);
                  v66 = *(_QWORD *)(v58 + 32);
                  v79 = *(_QWORD *)(v58 + 16);
                  v60 = v79;
                  v80 = v65;
                  v81 = v66;
                  v82 = 6;
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  v74 = v20;
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  sub_1BAC68C24(v60, v65, v66, 1);
                  v61 = sub_1BB6B84D4(&v79, &v82);
                  if (v3)
                  {
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    goto LABEL_91;
                  }
                  v62 = v61;
                  swift_bridgeObjectRetain();
                  sub_1BB3D7F90(v60, v65, v62, 0);
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v20 = v74;
LABEL_54:
                  v63 = v67;
                }
                swift_bridgeObjectRetain();
                sub_1BAC21940(v4, v63);
                if (v3)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease_n();
                  swift_release();
LABEL_92:
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_93;
                }
                swift_release();
                swift_bridgeObjectRelease_n();
                swift_release();
              }
              else
              {
                v69 = *(_QWORD *)(v24 + 24);
                if ((*(_BYTE *)(v26 + 40) & 1) == 0)
                  goto LABEL_50;
                v54 = *(_QWORD *)(v26 + 24);
                v68 = *(_QWORD *)(v26 + 32);
                v79 = *(_QWORD *)(v26 + 16);
                v55 = v79;
                v80 = v54;
                v81 = v68;
                v82 = 6;
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                v73 = v20;
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                sub_1BAC68C24(v55, v54, v68, 1);
                v56 = sub_1BB6B84D4(&v79, &v82);
                if (v3)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  goto LABEL_93;
                }
                v57 = v56;
                swift_bridgeObjectRetain();
                sub_1BB3D7F90(v55, v54, v57, 0);
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v20 = v73;
              }
              v27 = v69;
LABEL_59:
              swift_bridgeObjectRetain();
              sub_1BAC21940(v4, v27);
              if (v3)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
                swift_release();
LABEL_93:
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_94;
              }
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_release();
LABEL_61:
              v25 = v71;
LABEL_62:
              swift_bridgeObjectRetain();
              sub_1BAC21940(v4, v25);
              if (v3)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
                swift_release();
LABEL_94:
                swift_release();
                swift_bridgeObjectRelease();
LABEL_95:
                swift_release();
LABEL_96:
                swift_bridgeObjectRelease();
                swift_release();
                return swift_bridgeObjectRelease();
              }
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_release();
LABEL_64:
              v23 = v75;
LABEL_65:
              swift_bridgeObjectRetain();
              sub_1BAC21940(v4, v23);
              if (v3)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
                goto LABEL_95;
              }
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_release();
LABEL_67:
              swift_bridgeObjectRetain();
              sub_1BAC21940(v4, v20);
              if (v3)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
                return swift_release();
              }
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_release();
              goto LABEL_69;
            }
          }
          else if ((*(_BYTE *)(v24 + 40) & 1) != 0)
          {
            v49 = *(_QWORD *)(v22 + 24);
            v50 = *(_QWORD *)(v24 + 24);
            v70 = *(_QWORD *)(v24 + 32);
            v79 = *(_QWORD *)(v24 + 16);
            v51 = v79;
            v80 = v50;
            v81 = v70;
            v82 = 6;
            swift_retain_n();
            v71 = v49;
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BAC68C24(v51, v50, v70, 1);
            v52 = sub_1BB6B84D4(&v79, &v82);
            if (v3)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease();
              swift_release_n();
              goto LABEL_94;
            }
            v53 = v52;
            swift_bridgeObjectRetain();
            sub_1BB3D7F90(v51, v50, v53, 0);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_61;
          }
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          goto LABEL_62;
        }
      }
      else if ((*(_BYTE *)(v22 + 40) & 1) != 0)
      {
        v45 = *(_QWORD *)(v22 + 24);
        v44 = *(_QWORD *)(v22 + 32);
        v79 = *(_QWORD *)(v22 + 16);
        v46 = v79;
        v80 = v45;
        v81 = v44;
        v82 = 6;
        swift_retain_n();
        v75 = v23;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BAC68C24(v46, v45, v44, 1);
        v47 = sub_1BB6B84D4(&v79, &v82);
        if (v3)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_96;
        }
        v48 = v47;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v46, v45, v48, 0);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    }
LABEL_34:
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    goto LABEL_67;
  }
  if ((*(_BYTE *)(v21 + 40) & 1) == 0)
    goto LABEL_34;
  v38 = *(_QWORD *)(v21 + 16);
  v41 = v21 + 24;
  v40 = *(_QWORD *)(v21 + 24);
  v39 = *(_QWORD *)(v41 + 8);
  v79 = v38;
  v80 = v40;
  v81 = v39;
  v82 = 6;
  swift_retain_n();
  v72 = v20;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1BAC68C24(v38, v40, v39, 1);
  v42 = sub_1BB6B84D4(&v79, &v82);
  if (!v3)
  {
    v43 = v42;
    swift_bridgeObjectRetain();
    sub_1BB3D7F90(v38, v40, v43, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v72;
    goto LABEL_67;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

void sub_1BAC22D78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[9];
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v5 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v8);
  v17 = (char *)v15 - v10;
  v11 = *(_QWORD *)(a2 + 16);
  if (v11)
  {
    v15[7] = v9;
    v15[8] = v7;
    v19 = (uint64_t *)(a2 + 32);
    swift_bridgeObjectRetain();
    v18 = v11;
    v12 = *v19;
    v13 = v19[1];
    v14 = *v19 & 0xFFFFFFFFFFFFFFFLL;
    v21 = v13 & 0xFFFFFFFFFFFFFFFLL;
    v22 = v12;
    swift_retain();
    v20 = v14;
    swift_retain();
    sub_1BAC30118();
    if (!v3)
      __asm { BR              X9 }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1BAC24BA4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(void);
  unint64_t *v7;
  _BYTE *i;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v15 = result;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return result;
  swift_bridgeObjectRetain();
  v6 = MEMORY[0x1E0DEAEC8];
  v7 = &qword_1EF2B0E30;
  for (i = (_BYTE *)(a2 + 56); *i != 1; i += 32)
  {
LABEL_5:
    if (!--v4)
      return swift_bridgeObjectRelease();
  }
  v10 = *((_QWORD *)i - 2);
  v9 = *((_QWORD *)i - 1);
  v19 = v10;
  sub_1BA896BB8(v10, v9, 1);
  sub_1BA896BB8(v10, v9, 1);
  sub_1BA4AD288(0, &qword_1EF2B0E50, (uint64_t)&type metadata for FormatSourceItemTipTrait, (uint64_t (*)(_QWORD, uint64_t))v6);
  sub_1BA4D9CE8(0, v7);
  swift_bridgeObjectRetain();
  if ((swift_dynamicCast() & 1) == 0)
  {
    v18 = 0;
    v16 = 0u;
    v17 = 0u;
    sub_1BA65DB80((uint64_t)&v16, &qword_1EF2B0E38, v7);
    goto LABEL_4;
  }
  v11 = v7;
  v12 = v3;
  v14 = *((_QWORD *)&v17 + 1);
  v13 = v18;
  __swift_project_boxed_opaque_existential_1(&v16, *((uint64_t *)&v17 + 1));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v15, v14, v13);
  v3 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  if (!v12)
  {
    v6 = MEMORY[0x1E0DEAEC8];
    v7 = v11;
LABEL_4:
    swift_bridgeObjectRetain();
    sub_1BABEB0D4(v15, v9);
    swift_bridgeObjectRelease();
    sub_1BA896BE0(v10, v9, 1);
    sub_1BA896BE0(v10, v9, 1);
    if (v3)
      return swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_1BA896BE0(v10, v9, 1);
  sub_1BA896BE0(v10, v9, 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC24DB0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[4];

  v3 = v2;
  v18 = *(_QWORD *)(a2 + 16);
  if (v18)
  {
    v4 = result;
    v5 = a2 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = &unk_1ED3BE000;
    v17 = v5;
    while (1)
    {
      v8 = (uint64_t *)(v5 + 24 * v6);
      v9 = *v8;
      v10 = v8[1];
      v19 = v8[2];
      v11 = v7[255];
      swift_bridgeObjectRetain_n();
      v20[3] = v19 & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      if (v11 != -1)
        swift_once();
      v20[0] = v9;
      v20[1] = v10;
      v12 = sub_1BA6E583C(v20);
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        v14 = (uint64_t *)(v12 + 64);
        while (1)
        {
          v15 = *(v14 - 1);
          v16 = *v14;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BB043358(v4, v15, v16);
          if (v3)
            break;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v14 += 5;
          if (!--v13)
            goto LABEL_9;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20[0] = v19;
      swift_retain();
      sub_1BAC4A348(v4);
      if (v3)
        break;
      ++v6;
      swift_bridgeObjectRelease();
      swift_release_n();
      v5 = v17;
      v7 = (_QWORD *)&unk_1ED3BE000;
      if (v6 == v18)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1BAC24FD0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[2];
  uint64_t v25;

  v3 = v2;
  v22 = *(_QWORD *)(a2 + 16);
  if (v22)
  {
    v4 = result;
    v5 = a2 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = &unk_1ED3BE000;
    v21 = v5;
    while (1)
    {
      v23 = v6;
      v8 = (uint64_t *)(v5 + 40 * v6);
      v9 = *v8;
      v10 = v8[1];
      v12 = v8[2];
      v11 = v8[3];
      swift_bridgeObjectRetain();
      sub_1BA5E7FF4(v12);
      v25 = v11;
      sub_1BA5E7FF4(v11);
      v13 = v7[255];
      swift_bridgeObjectRetain();
      if (v13 != -1)
        swift_once();
      v24[0] = v9;
      v24[1] = v10;
      v14 = sub_1BA6E583C(v24);
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
        break;
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~v12 & 0xF000000000000007) != 0)
      {
        v24[0] = v12;
        swift_retain();
        sub_1BAC35E00();
        sub_1BA5E800C(v12);
        v19 = v25;
        if (v3)
        {
          swift_bridgeObjectRelease();
          sub_1BA5E800C(v12);
          v20 = v19;
          goto LABEL_18;
        }
      }
      else
      {
        v19 = v25;
      }
      v7 = (_QWORD *)&unk_1ED3BE000;
      if ((~v19 & 0xF000000000000007) != 0)
      {
        v24[0] = v19;
        swift_retain();
        sub_1BAC35E00();
        sub_1BA5E800C(v19);
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v12);
        sub_1BA5E800C(v19);
        if (v3)
          return swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v12);
        sub_1BA5E800C(v19);
      }
      v5 = v21;
      v6 = v23 + 1;
      if (v23 + 1 == v22)
        return swift_bridgeObjectRelease();
    }
    v16 = (uint64_t *)(v14 + 64);
    while (1)
    {
      v18 = *(v16 - 1);
      v17 = *v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(v4, v18, v17);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 += 5;
      if (!--v15)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5E800C(v12);
    v20 = v25;
LABEL_18:
    sub_1BA5E800C(v20);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC25264(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[4];

  v3 = v2;
  v26 = *(_QWORD *)(a2 + 16);
  if (v26)
  {
    v4 = result;
    v5 = a2 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = &unk_1ED3BE000;
    v25 = v5;
    do
    {
      v27 = v6;
      v8 = (uint64_t *)(v5 + 48 * v6);
      v9 = *v8;
      v10 = v8[1];
      v12 = v8[2];
      v11 = v8[3];
      v13 = v8[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA5E7FF4(v11);
      sub_1BA5E7FF4(v13);
      if (v7[255] != -1)
        swift_once();
      v28 = v11;
      v29[0] = v9;
      v29[1] = v10;
      v29[3] = v10;
      v14 = sub_1BA6E583C(v29);
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        v16 = (uint64_t *)(v14 + 64);
        do
        {
          v17 = *(v16 - 1);
          v18 = *v16;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BB043358(v4, v17, v18);
          if (v3)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v16 += 5;
          --v15;
        }
        while (v15);
      }
      swift_bridgeObjectRelease();
      if (v12)
      {
        v19 = *(_QWORD *)(v12 + 16);
        if (v19)
        {
          swift_bridgeObjectRetain_n();
          v20 = (_BYTE *)(v12 + 40);
          while (1)
          {
            if ((*v20 & 1) == 0)
            {
              v29[0] = *((_QWORD *)v20 - 1);
              v21 = v29[0];
              swift_retain_n();
              sub_1BA9F22C4();
              if (v3)
              {
                sub_1BA72C46C(v21, 0);
                sub_1BA72C46C(v21, 0);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
LABEL_27:
                sub_1BA5E800C(v28);
                v24 = v13;
LABEL_28:
                sub_1BA5E800C(v24);
                return swift_bridgeObjectRelease();
              }
              sub_1BA72C46C(v21, 0);
              sub_1BA72C46C(v21, 0);
            }
            v20 += 16;
            if (!--v19)
            {
              swift_bridgeObjectRelease_n();
              v23 = v28;
              v22 = v13;
              v7 = (_QWORD *)&unk_1ED3BE000;
              goto LABEL_18;
            }
          }
        }
      }
      v23 = v28;
      v22 = v13;
      v7 = (_QWORD *)&unk_1ED3BE000;
LABEL_18:
      if ((~v23 & 0xF000000000000007) != 0)
      {
        v29[0] = v23;
        sub_1BAC35E00();
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA5E800C(v23);
          v24 = v22;
          goto LABEL_28;
        }
      }
      if ((~v22 & 0xF000000000000007) != 0)
      {
        v29[0] = v22;
        sub_1BAC35E00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v23);
        sub_1BA5E800C(v22);
        if (v3)
          return swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v23);
        sub_1BA5E800C(v22);
      }
      v6 = v27 + 1;
      v5 = v25;
    }
    while (v27 + 1 != v26);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC255A8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v3 = v2;
  v36 = *(_QWORD *)(a2 + 16);
  if (!v36)
    return result;
  v38 = result;
  v4 = a2 + 32;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = &unk_1ED3BE000;
  v35 = v4;
  while (1)
  {
    v37 = v5;
    v7 = (__int128 *)(v4 + 152 * v5);
    v8 = v7[7];
    v46 = v7[6];
    v47 = v8;
    v48 = v7[8];
    v49 = *((_QWORD *)v7 + 18);
    v9 = v7[3];
    v42 = v7[2];
    v43 = v9;
    v10 = v7[5];
    v44 = v7[4];
    v45 = v10;
    v11 = v7[1];
    v40 = *v7;
    v41 = v11;
    v12 = v40;
    sub_1BAADEEC0((uint64_t)&v40);
    if (v6[255] != -1)
      swift_once();
    v39 = v12;
    v13 = sub_1BA6E583C((uint64_t *)&v39);
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (uint64_t *)(v13 + 64);
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BB043358(v38, v16, v17);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 += 5;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
    v18 = v41;
    if ((_QWORD)v41)
    {
      v19 = *(_QWORD *)(v41 + 16);
      if (v19)
        break;
    }
LABEL_17:
    v6 = (_QWORD *)&unk_1ED3BE000;
    if (*((_QWORD *)&v41 + 1))
    {
      v22 = *(_QWORD *)(*((_QWORD *)&v41 + 1) + 16);
      if (v22)
      {
        v23 = swift_bridgeObjectRetain() + 64;
        while (1)
        {
          v24 = *(_QWORD *)(v23 - 16);
          v25 = *(_QWORD *)(v23 - 32);
          *(_QWORD *)&v39 = *(_QWORD *)(v23 - 24);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          v50 = v25;
          swift_bridgeObjectRetain();
          sub_1BAC35E00();
          if (v3)
            break;
          swift_release();
          *(_QWORD *)&v39 = v24;
          swift_retain();
          sub_1BA9F22C4();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v23 += 40;
          if (!--v22)
          {
            swift_bridgeObjectRelease();
            v6 = (_QWORD *)&unk_1ED3BE000;
            goto LABEL_23;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        sub_1BAADED48((uint64_t)&v40);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_23:
    v26 = BYTE8(v48);
    if (BYTE8(v48) == 254)
    {
      sub_1BAADED48((uint64_t)&v40);
    }
    else
    {
      v32 = *((_QWORD *)&v47 + 1);
      v33 = v48;
      v50 = v47;
      v27 = *((_QWORD *)&v45 + 1);
      v34 = v46;
      v29 = *((_QWORD *)&v44 + 1);
      v28 = v45;
      v31 = *((_QWORD *)&v43 + 1);
      v30 = v44;
      *(_QWORD *)&v39 = *((_QWORD *)&v45 + 1);
      swift_retain();
      sub_1BAC35E00();
      sub_1BA6E8A78(v31, v30, v29, v28, v27, v34, *((uint64_t *)&v34 + 1), v50, v32, v33, v26);
      sub_1BAADED48((uint64_t)&v40);
      if (v3)
        return swift_bridgeObjectRelease();
      v6 = (_QWORD *)&unk_1ED3BE000;
    }
    v5 = v37 + 1;
    v4 = v35;
    if (v37 + 1 == v36)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  v20 = (_BYTE *)(v18 + 40);
  while ((*v20 & 1) != 0)
  {
LABEL_12:
    v20 += 16;
    if (!--v19)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_17;
    }
  }
  *(_QWORD *)&v39 = *((_QWORD *)v20 - 1);
  v21 = v39;
  swift_retain_n();
  sub_1BA9F22C4();
  if (!v3)
  {
    sub_1BA72C46C(v21, 0);
    sub_1BA72C46C(v21, 0);
    goto LABEL_12;
  }
  sub_1BA72C46C(v21, 0);
  sub_1BA72C46C(v21, 0);
  swift_bridgeObjectRelease_n();
LABEL_31:
  sub_1BAADED48((uint64_t)&v40);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC25A00(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;
  uint64_t v49;

  v3 = v2;
  v34 = *(_QWORD *)(a2 + 16);
  if (v34)
  {
    v36 = result;
    v4 = a2 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = &unk_1ED3BE000;
    v33 = v4;
    while (1)
    {
      v35 = v5;
      v7 = (__int128 *)(v4 + 168 * v5);
      v8 = v7[9];
      v46 = v7[8];
      v47 = v8;
      v48 = *((_BYTE *)v7 + 160);
      v9 = v7[5];
      v42 = v7[4];
      v43 = v9;
      v10 = v7[7];
      v44 = v7[6];
      v45 = v10;
      v11 = v7[1];
      v38 = *v7;
      v39 = v11;
      v12 = v7[3];
      v40 = v7[2];
      v41 = v12;
      v13 = v38;
      sub_1BAC6926C((uint64_t)&v38);
      if (v6[255] != -1)
        swift_once();
      v37 = v13;
      v14 = sub_1BA6E583C((uint64_t *)&v37);
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        v16 = (uint64_t *)(v14 + 64);
        do
        {
          v17 = *(v16 - 1);
          v18 = *v16;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BB043358(v36, v17, v18);
          if (v3)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_35;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v16 += 5;
          --v15;
        }
        while (v15);
      }
      swift_bridgeObjectRelease();
      v19 = v39;
      if ((_QWORD)v39)
      {
        v20 = *(_QWORD *)(v39 + 16);
        if (v20)
        {
          swift_bridgeObjectRetain_n();
          v21 = (_BYTE *)(v19 + 40);
          while (1)
          {
            if ((*v21 & 1) == 0)
            {
              *(_QWORD *)&v37 = *((_QWORD *)v21 - 1);
              v22 = v37;
              swift_retain_n();
              sub_1BA9F22C4();
              if (v3)
              {
                sub_1BA72C46C(v22, 0);
                sub_1BA72C46C(v22, 0);
                swift_bridgeObjectRelease_n();
                goto LABEL_35;
              }
              sub_1BA72C46C(v22, 0);
              sub_1BA72C46C(v22, 0);
            }
            v21 += 16;
            if (!--v20)
            {
              swift_bridgeObjectRelease_n();
              break;
            }
          }
        }
      }
      v6 = (_QWORD *)&unk_1ED3BE000;
      if ((~*((_QWORD *)&v39 + 1) & 0xF000000000000007) != 0)
      {
        *(_QWORD *)&v37 = *((_QWORD *)&v39 + 1);
        sub_1BAC359AC();
        if (v3)
        {
LABEL_35:
          sub_1BAC69354((uint64_t)&v38);
          return swift_bridgeObjectRelease();
        }
      }
      if ((_QWORD)v40)
      {
        v23 = *(_QWORD *)(v40 + 16);
        if (v23)
          break;
      }
LABEL_25:
      v27 = v47;
      if (v47 != 254)
      {
        v31 = v46;
        v49 = *((_QWORD *)&v45 + 1);
        v28 = v44;
        v32 = v45;
        v29 = v43;
        v30 = v42;
        *(_QWORD *)&v37 = v44;
        swift_retain();
        sub_1BAC35E00();
        sub_1BA6E8A78(v30, *((uint64_t *)&v30 + 1), v29, *((uint64_t *)&v29 + 1), v28, *((uint64_t *)&v28 + 1), v32, v49, v31, *((uint64_t *)&v31 + 1), v27);
        if (v3)
          goto LABEL_35;
        v6 = (_QWORD *)&unk_1ED3BE000;
      }
      if ((~*((_QWORD *)&v47 + 1) & 0xF000000000000007) != 0)
      {
        *(_QWORD *)&v37 = *((_QWORD *)&v47 + 1);
        sub_1BAC35E00();
        sub_1BAC69354((uint64_t)&v38);
        if (v3)
          return swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BAC69354((uint64_t)&v38);
      }
      v5 = v35 + 1;
      v4 = v33;
      if (v35 + 1 == v34)
        return swift_bridgeObjectRelease();
    }
    v24 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      v25 = *(_QWORD *)(v24 - 16);
      v26 = *(_QWORD *)(v24 - 32);
      *(_QWORD *)&v37 = *(_QWORD *)(v24 - 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      v49 = v26;
      swift_bridgeObjectRetain();
      sub_1BAC35E00();
      if (v3)
        break;
      swift_release();
      *(_QWORD *)&v37 = v25;
      swift_retain();
      sub_1BA9F22C4();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v24 += 40;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        v6 = (_QWORD *)&unk_1ED3BE000;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_1BAC69354((uint64_t)&v38);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC25EB4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t i;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int16 v46;
  uint64_t v47;

  v3 = v2;
  v33 = *(_QWORD *)(a2 + 16);
  if (v33)
  {
    v4 = result;
    v5 = a2 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = &unk_1ED3BE000;
    for (i = v5; ; v5 = i)
    {
      v8 = (__int128 *)(v5 + 152 * v6);
      v9 = v8[7];
      v43 = v8[6];
      v44 = v9;
      v45 = v8[8];
      v46 = *((_WORD *)v8 + 72);
      v10 = v8[3];
      v39 = v8[2];
      v40 = v10;
      v11 = v8[5];
      v41 = v8[4];
      v42 = v11;
      v12 = v8[1];
      v37 = *v8;
      v38 = v12;
      v13 = v37;
      sub_1BA9F06B0((uint64_t)&v37);
      if (v7[255] != -1)
        swift_once();
      v34 = v6;
      v36 = v13;
      v14 = sub_1BA6E583C((uint64_t *)&v36);
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
        break;
LABEL_9:
      swift_bridgeObjectRelease();
      if ((_QWORD)v38)
      {
        v19 = *(_QWORD *)(v38 + 16);
        if (v19)
        {
          v20 = swift_bridgeObjectRetain() + 64;
          while (1)
          {
            v21 = *(_QWORD *)(v20 - 16);
            v22 = *(_QWORD *)(v20 - 32);
            *(_QWORD *)&v36 = *(_QWORD *)(v20 - 24);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            v47 = v22;
            swift_bridgeObjectRetain();
            sub_1BAC35E00();
            if (v3)
              break;
            swift_release();
            *(_QWORD *)&v36 = v21;
            swift_retain();
            sub_1BA9F22C4();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release_n();
            v20 += 40;
            if (!--v19)
            {
              swift_bridgeObjectRelease();
              goto LABEL_15;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_29;
        }
      }
LABEL_15:
      v23 = v45;
      if (v45 != 254)
      {
        v31 = v44;
        v47 = *((_QWORD *)&v43 + 1);
        v24 = v42;
        v25 = v41;
        v26 = v40;
        v35 = v43;
        *(_QWORD *)&v36 = v42;
        swift_retain();
        sub_1BAC35E00();
        sub_1BA6E8A78(v26, *((uint64_t *)&v26 + 1), v25, *((uint64_t *)&v25 + 1), v24, *((uint64_t *)&v24 + 1), v35, v47, v31, *((uint64_t *)&v31 + 1), v23);
        if (v3)
          goto LABEL_29;
      }
      v27 = *((_QWORD *)&v45 + 1);
      if (*((_QWORD *)&v45 + 1))
      {
        v28 = *(_QWORD *)(*((_QWORD *)&v45 + 1) + 16);
        if (v28)
        {
          swift_bridgeObjectRetain_n();
          v29 = (_BYTE *)(v27 + 40);
          do
          {
            if ((*v29 & 1) == 0)
            {
              *(_QWORD *)&v36 = *((_QWORD *)v29 - 1);
              v30 = v36;
              swift_retain_n();
              sub_1BA9F22C4();
              sub_1BA72C46C(v30, 0);
              sub_1BA72C46C(v30, 0);
              if (v3)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_29;
              }
            }
            v29 += 16;
            --v28;
          }
          while (v28);
          swift_bridgeObjectRelease_n();
        }
      }
      ++v6;
      sub_1BA9F0544((uint64_t)&v37);
      v7 = (_QWORD *)&unk_1ED3BE000;
      if (v34 + 1 == v33)
        return swift_bridgeObjectRelease();
    }
    v16 = (uint64_t *)(v14 + 64);
    while (1)
    {
      v17 = *(v16 - 1);
      v18 = *v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(v4, v17, v18);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 += 5;
      if (!--v15)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_29:
    sub_1BA9F0544((uint64_t)&v37);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC262D8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t i;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _BYTE v49[25];
  uint64_t v50;

  v3 = v2;
  v37 = *(_QWORD *)(a2 + 16);
  if (v37)
  {
    v4 = result;
    v5 = a2 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = &unk_1ED3BE000;
    for (i = v5; ; v5 = i)
    {
      v8 = (__int128 *)(v5 + 160 * v6);
      v9 = v8[7];
      v47 = v8[6];
      v48 = v9;
      *(_OWORD *)v49 = v8[8];
      *(_OWORD *)&v49[9] = *(__int128 *)((char *)v8 + 137);
      v10 = v8[3];
      v43 = v8[2];
      v44 = v10;
      v11 = v8[5];
      v45 = v8[4];
      v46 = v11;
      v12 = v8[1];
      v41 = *v8;
      v42 = v12;
      v13 = v41;
      sub_1BAC68F14((uint64_t)&v41);
      if (v7[255] != -1)
        swift_once();
      v38 = v6;
      v40 = v13;
      v14 = sub_1BA6E583C((uint64_t *)&v40);
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
        break;
LABEL_9:
      swift_bridgeObjectRelease();
      if ((~(_QWORD)v42 & 0xF000000000000007) != 0)
      {
        *(_QWORD *)&v40 = v42;
        sub_1BAC359AC();
        if (v3)
          goto LABEL_31;
      }
      if (*((_QWORD *)&v42 + 1))
      {
        v19 = *(_QWORD *)(*((_QWORD *)&v42 + 1) + 16);
        if (v19)
        {
          v20 = swift_bridgeObjectRetain() + 64;
          while (1)
          {
            v21 = *(_QWORD *)(v20 - 16);
            v22 = *(_QWORD *)(v20 - 32);
            *(_QWORD *)&v40 = *(_QWORD *)(v20 - 24);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            v50 = v22;
            swift_bridgeObjectRetain();
            sub_1BAC35E00();
            if (v3)
              break;
            swift_release();
            *(_QWORD *)&v40 = v21;
            swift_retain();
            sub_1BA9F22C4();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release_n();
            v20 += 40;
            if (!--v19)
            {
              swift_bridgeObjectRelease();
              goto LABEL_17;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_31;
        }
      }
LABEL_17:
      v23 = v49[8];
      if (v49[8] != 254)
      {
        v33 = *((_QWORD *)&v48 + 1);
        v34 = *(_QWORD *)v49;
        v50 = v48;
        v24 = *((_QWORD *)&v46 + 1);
        v35 = v47;
        v25 = *((_QWORD *)&v45 + 1);
        v26 = v46;
        v28 = *((_QWORD *)&v44 + 1);
        v27 = v45;
        v39 = *((_QWORD *)&v47 + 1);
        *(_QWORD *)&v40 = *((_QWORD *)&v46 + 1);
        swift_retain();
        sub_1BAC35E00();
        sub_1BA6E8A78(v28, v27, v25, v26, v24, v35, v39, v50, v33, v34, v23);
        if (v3)
          goto LABEL_31;
      }
      v29 = *(_QWORD *)&v49[16];
      if (*(_QWORD *)&v49[16])
      {
        v30 = *(_QWORD *)(*(_QWORD *)&v49[16] + 16);
        if (v30)
        {
          swift_bridgeObjectRetain_n();
          v31 = (_BYTE *)(v29 + 40);
          do
          {
            if ((*v31 & 1) == 0)
            {
              *(_QWORD *)&v40 = *((_QWORD *)v31 - 1);
              v32 = v40;
              swift_retain_n();
              sub_1BA9F22C4();
              sub_1BA72C46C(v32, 0);
              sub_1BA72C46C(v32, 0);
              if (v3)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_31;
              }
            }
            v31 += 16;
            --v30;
          }
          while (v30);
          swift_bridgeObjectRelease_n();
        }
      }
      ++v6;
      sub_1BAC68FF0((uint64_t)&v41);
      v7 = (_QWORD *)&unk_1ED3BE000;
      if (v38 + 1 == v37)
        return swift_bridgeObjectRelease();
    }
    v16 = (uint64_t *)(v14 + 64);
    while (1)
    {
      v17 = *(v16 - 1);
      v18 = *v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(v4, v17, v18);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 += 5;
      if (!--v15)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_31:
    sub_1BAC68FF0((uint64_t)&v41);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC26724(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[4];

  v3 = v2;
  v19 = *(_QWORD *)(a2 + 16);
  if (v19)
  {
    v4 = result;
    v5 = a2 + 32;
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = &unk_1ED3BE000;
    v18 = v5;
    while (1)
    {
      v8 = (uint64_t *)(v5 + 56 * v6);
      v9 = *v8;
      v10 = v8[1];
      v11 = v8[5];
      v12 = v7[255];
      swift_bridgeObjectRetain_n();
      v20 = v11;
      swift_bridgeObjectRetain();
      if (v12 != -1)
        swift_once();
      v21[0] = v9;
      v21[1] = v10;
      v21[3] = v10;
      v13 = sub_1BA6E583C(v21);
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
        break;
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20)
      {
        sub_1BABEB4B0(v4, v20);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      ++v6;
      swift_bridgeObjectRelease();
      v5 = v18;
      v7 = (_QWORD *)&unk_1ED3BE000;
      if (v6 == v19)
        return swift_bridgeObjectRelease();
    }
    v15 = (uint64_t *)(v13 + 64);
    while (1)
    {
      v16 = *(v15 - 1);
      v17 = *v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(v4, v16, v17);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 += 5;
      if (!--v14)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC26924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  char *v13;
  _QWORD v14[18];
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  v16 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v16);
  v17 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v14[16] = (char *)v14 - v7;
  v15 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v14[17] = (char *)v14 - v10;
  result = sub_1BA79B898(a2);
  v20 = result;
  if (result)
  {
    v21 = (_QWORD *)(a2 + 32);
    v19 = a1 + 48;
    swift_bridgeObjectRetain();
    v22 = a2;
    v25 = a1;
    sub_1BA8E9170(0, 1, a2);
    v27 = 1;
    v12 = v21[1];
    *(_QWORD *)&v26 = *v21;
    v23 = v26 & 0xFFFFFFFFFFFFFFFLL;
    swift_retain();
    sub_1BA705894(v12);
    sub_1BAC30118();
    if (!v2)
    {
      v13 = (char *)&loc_1BAC26AE0 + dword_1BAC2B15C[v12 >> 61];
      v24 = v27;
      __asm { BR              X9 }
    }
    swift_release();
    sub_1BA7058C4(v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAC2B258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46[2];

  v37 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v37);
  v41 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v40 = (uint64_t)&v35 - v7;
  v8 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1E0C80A78](v8);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v39 = (uint64_t)&v35 - v11;
  v42 = *(_QWORD *)(a2 + 16);
  if (!v42)
    return;
  v12 = a2 + 32;
  v35 = a2;
  swift_bridgeObjectRetain();
  v13 = 0;
  v14 = &unk_1ED3BE000;
  v38 = v12;
  while (1)
  {
    v43 = v13;
    v15 = (uint64_t *)(v12 + 24 * v13);
    v16 = *v15;
    v17 = v15[1];
    v18 = v15[2];
    v19 = v14[255];
    swift_bridgeObjectRetain_n();
    v45 = v18 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain();
    if (v19 != -1)
      swift_once();
    v44 = v18;
    v46[0] = v16;
    v46[1] = v17;
    v20 = sub_1BA6E583C(v46);
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (uint64_t *)(v20 + 64);
      while (1)
      {
        v23 = *(v22 - 1);
        v24 = *v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BB043358(a1, v23, v24);
        if (v2)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v22 += 5;
        if (!--v21)
          goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!(v44 >> 62))
    {
      v26 = swift_projectBox();
      v27 = v39;
      sub_1BA4C2DD8(v26, v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
      v28 = v27;
      v29 = v36;
      sub_1BA4C2DD8(v28, v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
      v30 = v29;
      v31 = v40;
      sub_1BA5193C4(v30, v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      sub_1BA4C2DD8(v31, v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
          __asm { BR              X9 }
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
        sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v12 = v38;
      v34 = v43;
      sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
      swift_bridgeObjectRelease();
      swift_release_n();
      goto LABEL_22;
    }
    if (v44 >> 62 == 1)
    {
      v25 = *(_QWORD *)(v45 + 24);
      v46[0] = *(_QWORD *)(v45 + 16);
      swift_retain();
      swift_retain_n();
      swift_retain();
      sub_1BAC458B4(a1);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release();
        goto LABEL_29;
      }
      swift_release();
      v46[0] = v25;
      swift_retain();
      sub_1BAC458B4(a1);
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      swift_release_n();
      goto LABEL_18;
    }
    v33 = *(_QWORD *)(v45 + 24);
    v46[0] = *(_QWORD *)(v45 + 16);
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BAC458B4(a1);
    if (v2)
      break;
    swift_release();
    swift_bridgeObjectRetain();
    sub_1BAC2B258(a1, v33);
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease_n();
LABEL_18:
    v12 = v38;
    v34 = v43;
LABEL_22:
    v14 = (_QWORD *)&unk_1ED3BE000;
    v13 = v34 + 1;
    if (v13 == v42)
      goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
LABEL_29:
  swift_release_n();
}

uint64_t sub_1BAC2B91C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[26];
  uint64_t v48;

  v3 = v2;
  v36 = *(_QWORD *)(a2 + 16);
  if (!v36)
    return result;
  v38 = result;
  v4 = a2 + 32;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = &unk_1ED3BE000;
  v35 = v4;
  while (1)
  {
    v37 = v5;
    v7 = (__int128 *)(v4 + 144 * v5);
    v8 = v7[7];
    v46 = v7[6];
    *(_OWORD *)v47 = v8;
    *(_OWORD *)&v47[10] = *(__int128 *)((char *)v7 + 122);
    v9 = v7[3];
    v42 = v7[2];
    v43 = v9;
    v10 = v7[5];
    v44 = v7[4];
    v45 = v10;
    v11 = v7[1];
    v40 = *v7;
    v41 = v11;
    v12 = v40;
    sub_1BAC690CC((uint64_t)&v40);
    if (v6[255] != -1)
      swift_once();
    v39 = v12;
    v13 = sub_1BA6E583C((uint64_t *)&v39);
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (uint64_t *)(v13 + 64);
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BB043358(v38, v16, v17);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 += 5;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
    v18 = v41;
    if ((_QWORD)v41)
    {
      v19 = *(_QWORD *)(v41 + 16);
      if (v19)
        break;
    }
LABEL_17:
    v6 = (_QWORD *)&unk_1ED3BE000;
    if (*((_QWORD *)&v41 + 1))
    {
      v22 = *(_QWORD *)(*((_QWORD *)&v41 + 1) + 16);
      if (v22)
      {
        v23 = swift_bridgeObjectRetain() + 64;
        while (1)
        {
          v24 = *(_QWORD *)(v23 - 16);
          v25 = *(_QWORD *)(v23 - 32);
          *(_QWORD *)&v39 = *(_QWORD *)(v23 - 24);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          v48 = v25;
          swift_bridgeObjectRetain();
          sub_1BAC35E00();
          if (v3)
            break;
          swift_release();
          *(_QWORD *)&v39 = v24;
          swift_retain();
          sub_1BA9F22C4();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v23 += 40;
          if (!--v22)
          {
            swift_bridgeObjectRelease();
            v6 = (_QWORD *)&unk_1ED3BE000;
            goto LABEL_23;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        sub_1BAC6919C((uint64_t)&v40);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_23:
    v26 = v47[24];
    if (v47[24] == 254)
    {
      sub_1BAC6919C((uint64_t)&v40);
    }
    else
    {
      v32 = *(_QWORD *)&v47[8];
      v33 = *(_QWORD *)&v47[16];
      v48 = *(_QWORD *)v47;
      v27 = *((_QWORD *)&v45 + 1);
      v34 = v46;
      v29 = *((_QWORD *)&v44 + 1);
      v28 = v45;
      v31 = *((_QWORD *)&v43 + 1);
      v30 = v44;
      *(_QWORD *)&v39 = *((_QWORD *)&v45 + 1);
      swift_retain();
      sub_1BAC35E00();
      sub_1BA6E8A78(v31, v30, v29, v28, v27, v34, *((uint64_t *)&v34 + 1), v48, v32, v33, v26);
      sub_1BAC6919C((uint64_t)&v40);
      if (v3)
        return swift_bridgeObjectRelease();
      v6 = (_QWORD *)&unk_1ED3BE000;
    }
    v5 = v37 + 1;
    v4 = v35;
    if (v37 + 1 == v36)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  v20 = (_BYTE *)(v18 + 40);
  while ((*v20 & 1) != 0)
  {
LABEL_12:
    v20 += 16;
    if (!--v19)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_17;
    }
  }
  *(_QWORD *)&v39 = *((_QWORD *)v20 - 1);
  v21 = v39;
  swift_retain_n();
  sub_1BA9F22C4();
  if (!v3)
  {
    sub_1BA72C46C(v21, 0);
    sub_1BA72C46C(v21, 0);
    goto LABEL_12;
  }
  sub_1BA72C46C(v21, 0);
  sub_1BA72C46C(v21, 0);
  swift_bridgeObjectRelease_n();
LABEL_31:
  sub_1BAC6919C((uint64_t)&v40);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC2BD6C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20[2];
  uint64_t v21;

  v3 = v2;
  result = sub_1BA79B898((uint64_t)a2);
  if (result)
  {
    swift_bridgeObjectRetain();
    v21 = a1;
    sub_1BA8E9170(0, 1, (uint64_t)a2);
    v7 = a2[4];
    v8 = a2[5];
    v9 = a2[6];
    swift_bridgeObjectRetain();
    sub_1BA739250(v9);
    v10 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v10 != -1)
      swift_once();
    v20[0] = v7;
    v20[1] = v8;
    v11 = sub_1BA6E583C(v20);
    v12 = sub_1BA79B898(v11);
    v19 = v9;
    if (!v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_11:
      __asm { BR              X9 }
    }
    v13 = v12;
    v14 = 0;
    v15 = (uint64_t *)(v11 + 64);
    while (1)
    {
      v16 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        JUMPOUT(0x1BAC2E1A8);
      }
      v17 = *(v15 - 1);
      v18 = *v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(v21, v17, v18);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 += 5;
      ++v14;
      if (v16 == v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = v19;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6F5D74(v19);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC2EAEC(uint64_t result, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22[4];

  v4 = v3;
  v19 = *(_QWORD *)(a2 + 16);
  if (v19)
  {
    v5 = result;
    v6 = a2 + 32;
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = &unk_1ED3BE000;
    v18 = v6;
    while (1)
    {
      v9 = (uint64_t *)(v6 + 24 * v7);
      v10 = *v9;
      v11 = v9[1];
      v21 = v9[2];
      v12 = v8[255];
      swift_bridgeObjectRetain_n();
      v22[3] = v21 & 0xFFFFFFFFFFFFFFFLL;
      swift_retain();
      if (v12 != -1)
        swift_once();
      v22[0] = v10;
      v22[1] = v11;
      v13 = sub_1BA6E583C(v22);
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v15 = (uint64_t *)(v13 + 64);
        while (1)
        {
          v17 = *(v15 - 1);
          v16 = *v15;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BB043358(v5, v17, v16);
          if (v4)
            break;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 += 5;
          if (!--v14)
            goto LABEL_9;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22[0] = v21;
      swift_retain();
      a3(v5);
      if (v4)
        break;
      ++v7;
      swift_bridgeObjectRelease();
      swift_release_n();
      v6 = v18;
      v8 = (_QWORD *)&unk_1ED3BE000;
      if (v7 == v19)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1BAC2ED10(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[4];

  v14 = *(_QWORD *)(a2 + 16);
  if (v14)
  {
    v3 = result;
    v15 = a2 + 32;
    swift_bridgeObjectRetain();
    v4 = 0;
    while (1)
    {
      v5 = (uint64_t *)(v15 + 24 * v4);
      v6 = *v5;
      v7 = v5[1];
      v8 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain_n();
      if (v8 != -1)
        swift_once();
      v16[0] = v6;
      v16[1] = v7;
      v16[3] = v7;
      v9 = sub_1BA6E583C(v16);
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
        break;
LABEL_3:
      ++v4;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v4 == v14)
        return swift_bridgeObjectRelease();
    }
    v11 = (uint64_t *)(v9 + 64);
    while (1)
    {
      v13 = *(v11 - 1);
      v12 = *v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(v3, v13, v12);
      if (v2)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 += 5;
      if (!--v10)
        goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAC2EEB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[4];

  v4 = a3;
  v5 = v3;
  v8 = a3(0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v22 - v10);
  v23 = *(_QWORD *)(a2 + 16);
  if (v23)
  {
    v12 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v26 = *(_QWORD *)(v9 + 72);
    v27 = v12;
    v22 = a2;
    swift_bridgeObjectRetain();
    v13 = 0;
    v24 = v11;
    v25 = v4;
    while (1)
    {
      sub_1BA4C2DD8(v27 + v26 * v13, (uint64_t)v11, v4);
      v14 = *v11;
      v15 = v11[1];
      v16 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      if (v16 != -1)
        swift_once();
      v28[0] = v14;
      v28[1] = v15;
      v17 = sub_1BA6E583C(v28);
      v18 = *(_QWORD *)(v17 + 16);
      v28[3] = v17;
      if (v18)
        break;
LABEL_3:
      ++v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = v24;
      v4 = v25;
      sub_1BA4A2E80((uint64_t)v24, v25);
      if (v13 == v23)
        goto LABEL_12;
    }
    v19 = (uint64_t *)(v17 + 64);
    while (1)
    {
      v21 = *(v19 - 1);
      v20 = *v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB043358(a1, v21, v20);
      if (v5)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 += 5;
      if (!--v18)
        goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v24, v25);
LABEL_12:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAC2F0AC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[2];
  uint64_t v21;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return result;
  v5 = result;
  v6 = a2 + 32;
  swift_bridgeObjectRetain();
  v7 = 0;
  v17 = v6;
  v18 = v4;
  while (1)
  {
    v8 = v6 + 24 * v7;
    if (*(unsigned __int8 *)(v8 + 16) < 0xCu)
      goto LABEL_4;
    v10 = *(_QWORD *)v8;
    v9 = *(_QWORD *)(v8 + 8);
    v11 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v11 != -1)
      swift_once();
    v19 = v10;
    v20[0] = v10;
    v21 = v9;
    v20[1] = v9;
    v12 = sub_1BA6E583C(v20);
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
      break;
LABEL_3:
    swift_bridgeObjectRelease();
    sub_1BAC68EEC(v19, v21, 0xCu);
    v6 = v17;
    v4 = v18;
LABEL_4:
    if (++v7 == v4)
      return swift_bridgeObjectRelease();
  }
  v14 = (uint64_t *)(v12 + 64);
  while (1)
  {
    v15 = *(v14 - 1);
    v16 = *v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB043358(v5, v15, v16);
    if (v3)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 += 5;
    if (!--v13)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BAC68EEC(v19, v21, 0xCu);
  return swift_bridgeObjectRelease();
}

void sub_1BAC2F254(uint64_t a1)
{
  sub_1BABE3870(a1);
}

void sub_1BAC2F274()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC2F2C0()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BAC3DC58(v0);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC2F9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v5 = (_BYTE *)(a2 + 40);
    do
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
        if (v2)
          break;
      }
      v5 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC2FA7C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v4 = result;
    swift_bridgeObjectRetain();
    v5 = (_BYTE *)(a2 + 49);
    v20 = v4;
    while (1)
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *(_QWORD *)(v5 - 17);
        v7 = *(_QWORD *)(v5 - 9);
        v8 = *(v5 - 1);
        if ((v8 & 1) != 0)
        {
          sub_1BA8569BC(*(_QWORD *)(v5 - 17), *(_QWORD *)(v5 - 9), *(v5 - 1), 0);
          sub_1BA8569BC(v6, v7, v8, 0);
          sub_1BA8569BC(v6, v7, v8, 0);
          v9 = sub_1BA862600((uint64_t)&unk_1E724D930);
          v10 = swift_allocObject();
          *(_QWORD *)(v10 + 16) = v6;
          *(_QWORD *)(v10 + 24) = v7;
          v21 = v9;
          *(_QWORD *)(v10 + 32) = v9;
          *(_QWORD *)(v10 + 40) = 0;
          v11 = *(_QWORD **)(v4 + 48);
          v12 = v11[2];
          if (!v12
            || (v13 = v11[v12 + 3], v13 >> 60 != 3)
            || ((v18 = *(_QWORD *)(v13 + 40), v19 = *(_QWORD *)(v13 + 32), *(_QWORD *)(v13 + 16) == v6)
              ? (v14 = v7 == *(_QWORD *)(v13 + 24))
              : (v14 = 0),
                !v14 && (sub_1BB874398() & 1) == 0))
          {
            sub_1BA8569BC(v6, v7, v8, 0);
            swift_bridgeObjectRetain();
LABEL_19:
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v11 = sub_1BB38ED0C(0, v11[2] + 1, 1, v11);
            v17 = v11[2];
            v16 = v11[3];
            if (v17 >= v16 >> 1)
              v11 = sub_1BB38ED0C((_QWORD *)(v16 > 1), v17 + 1, 1, v11);
            v11[2] = v17 + 1;
            v11[v17 + 4] = v10 | 0x3000000000000000;
            swift_release();
            sub_1BA728F8C(v6, v7, v8, 0);
            swift_bridgeObjectRelease();
            sub_1BA728F8C(v6, v7, v8, 0);
            sub_1BA728F8C(v6, v7, v8, 0);
            v4 = v20;
            *(_QWORD *)(v20 + 48) = v11;
            goto LABEL_5;
          }
          sub_1BA8569BC(v6, v7, v8, 0);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          v15 = sub_1BA857260(v19, v21);
          swift_release();
          swift_release();
          if ((v15 & 1) == 0 || v18)
            goto LABEL_19;
          swift_release();
          sub_1BA728F8C(v6, v7, v8, 0);
          swift_bridgeObjectRelease();
          sub_1BA728F8C(v6, v7, v8, 0);
        }
        sub_1BA728F8C(v6, v7, v8, 0);
      }
LABEL_5:
      v5 += 24;
      if (!--v2)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BAC2FD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;

  v6 = *v4;
  v7 = type metadata accessor for FormatEquationToken(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB1972C8(a1, v6, v7, (uint64_t)&off_1E729AF10);
}

uint64_t sub_1BAC2FDCC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t result;

  v2 = *v0;
  if (*((_BYTE *)v0 + 8))
  {
    if (*((_BYTE *)v0 + 8) == 1)
    {
      v3 = *(_QWORD *)(v2 + 16);
      if (!v3)
        return result;
      swift_bridgeObjectRetain();
      v4 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v4 & 1) == 0)
        {
          v5 = *((_QWORD *)v4 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v5, 0);
          sub_1BA72C46C(v5, 0);
          if (v1)
            break;
        }
        v4 += 16;
        --v3;
      }
      while (v3);
    }
    else
    {
      v9 = *(_QWORD *)(v2 + 16);
      if (!v9)
        return result;
      swift_bridgeObjectRetain();
      v10 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v10 & 1) == 0)
        {
          v11 = *((_QWORD *)v10 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v11, 0);
          sub_1BA72C46C(v11, 0);
          if (v1)
            break;
        }
        v10 += 16;
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 16);
    if (!v6)
      return result;
    swift_bridgeObjectRetain();
    v7 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v7 & 1) == 0)
      {
        v8 = *((_QWORD *)v7 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v8, 0);
        sub_1BA72C46C(v8, 0);
        if (v1)
          break;
      }
      v7 += 16;
      --v6;
    }
    while (v6);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC2FF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;

  v6 = *v4;
  v7 = type metadata accessor for FormatSwitchListValue.CaseValue(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return sub_1BB1972C8(a1, v6, v7, (uint64_t)&off_1E729D150);
}

void sub_1BAC2FFD4()
{
  sub_1BAC2F274();
}

uint64_t sub_1BAC2FFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v3, v4);
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  if (swift_dynamicCast())
  {
    v8 = *((_QWORD *)&v12 + 1);
    v9 = v13;
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, v8, v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    return sub_1BA65DB80((uint64_t)&v11, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
}

uint64_t sub_1BAC30104(uint64_t a1, uint64_t a2)
{
  return sub_1BAC2FFE8(a1, a2);
}

void sub_1BAC30118()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC30158()
{
  uint64_t v0;

  return sub_1BB5D2C38(v0);
}

uint64_t sub_1BAC302A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC53944(a1, a2, a3, (uint64_t (*)(void))sub_1BAC30118, (uint64_t (*)(uint64_t))sub_1BAC30118);
}

uint64_t sub_1BAC302C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  _BYTE v9[144];
  __int128 v10;

  v4 = *(_QWORD *)v1 >> 62;
  if ((_DWORD)v4)
  {
    if ((_DWORD)v4 == 1)
    {
      swift_retain();
      sub_1BB124B6C();
    }
    else
    {
      v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
      v6 = *(_QWORD *)(v5 + 16);
      swift_retain();
      sub_1BABEB4B0(a1, v6);
      if (!v2)
      {
        v7 = MEMORY[0x1E0DEB940];
        sub_1BA760F3C(v5 + 24, (uint64_t)v9, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
        sub_1BA760F3C((uint64_t)v9, (uint64_t)&v10, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v7, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
        if (sub_1BA896370((uint64_t *)&v10) != 1)
          sub_1BAC30C08();
      }
    }
  }
  else
  {
    swift_retain();
    sub_1BAC30420();
  }
  return swift_release();
}

void sub_1BAC30420()
{
  __asm { BR              X9 }
}

void sub_1BAC30474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  _BYTE v20[144];
  uint64_t v21[37];

  v9 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAC312D8(v2, v1, v8, v7);
  sub_1BA51A9E0(v1, v8, v7, v6, v9, v5, 0);
  if (!v4)
  {
    v10 = *(unsigned __int8 *)(v3 + 88);
    if (v10 != 255)
    {
      v11 = *(_QWORD *)(v3 + 72);
      v12 = *(_QWORD *)(v3 + 80);
      if ((v10 & 1) != 0)
      {
        sub_1BA796C58(*(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_BYTE *)(v3 + 88));
        v13 = sub_1BA862600((uint64_t)&unk_1E724DBA0);
        sub_1BB3D7F90(v11, v12, v13, 0);
        swift_bridgeObjectRelease();
        sub_1BA796C70(v11, v12, v10);
      }
      else
      {
        sub_1BA796C70(*(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_BYTE *)(v3 + 88));
      }
    }
    v14 = *(unsigned __int8 *)(v3 + 112);
    if (v14 != 255)
    {
      v15 = *(_QWORD *)(v3 + 96);
      v16 = *(_QWORD *)(v3 + 104);
      if ((v14 & 1) != 0)
      {
        sub_1BA796C58(*(_QWORD *)(v3 + 96), *(_QWORD *)(v3 + 104), *(_BYTE *)(v3 + 112));
        v17 = sub_1BA862600((uint64_t)&unk_1E724DBC8);
        sub_1BB3D7F90(v15, v16, v17, 0);
        swift_bridgeObjectRelease();
        sub_1BA796C70(v15, v16, v14);
      }
      else
      {
        sub_1BA796C70(*(_QWORD *)(v3 + 96), *(_QWORD *)(v3 + 104), *(_BYTE *)(v3 + 112));
      }
    }
    v18 = v3 + 120;
    v19 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C(v18, (uint64_t)v20, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v20, (uint64_t)v21, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v19, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    if (sub_1BA896370(v21) != 1)
      sub_1BAC30C08();
  }
}

uint64_t sub_1BAC30B40(uint64_t a1)
{
  return sub_1BAC302C4(a1);
}

void sub_1BAC30B54()
{
  __asm { BR              X10 }
}

void sub_1BAC30B8C(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BAC312D8(v4, a3, a4, *(uint64_t *)&a1);
}

void sub_1BAC30BA8(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  double v5;
  double v6;

  v6 = a2;
  if (a4)
  {
    v5 = a1;
    sub_1BAC4375C();
    if (v4)
      goto LABEL_9;
    a1 = v5;
    a2 = v6;
  }
  if (a1 != 0.0)
  {
    sub_1BAC4375C();
    if (v4)
      goto LABEL_9;
    a2 = v6;
  }
  if (a2 != 0.0)
    sub_1BAC4375C();
LABEL_9:
  JUMPOUT(0x1BAC30B98);
}

void sub_1BAC30C08()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  int v17;
  int v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v40 = v0[3];
  v41 = v0[5];
  v42 = v0[6];
  v36 = v0[7];
  v37 = v0[8];
  v32 = v0[10];
  v33 = v0[11];
  v34 = v0[12];
  v35 = v0[13];
  v38 = *((unsigned __int8 *)v0 + 72);
  v39 = *((unsigned __int8 *)v0 + 112);
  v30 = v0[15];
  v31 = v0[16];
  v5 = *((unsigned __int8 *)v0 + 136);
  if (*v0)
  {
    v6 = *(_QWORD *)(v3 + 16);
    if (v6)
    {
      v29 = *((unsigned __int8 *)v0 + 136);
      swift_bridgeObjectRetain_n();
      v7 = (_BYTE *)(v3 + 40);
      do
      {
        if ((*v7 & 1) == 0)
        {
          v8 = *((_QWORD *)v7 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          v9 = v8;
          if (v1)
          {
LABEL_26:
            sub_1BA72C46C(v9, 0);
            sub_1BA72C46C(v8, 0);
            goto LABEL_66;
          }
          sub_1BA72C46C(v8, 0);
          sub_1BA72C46C(v8, 0);
        }
        v7 += 16;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease_n();
      v5 = v29;
    }
  }
  if (v2)
  {
    v10 = *(_QWORD *)(v2 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      v11 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v11 & 1) == 0)
        {
          v8 = *((_QWORD *)v11 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          v9 = v8;
          if (v1)
            goto LABEL_26;
          sub_1BA72C46C(v8, 0);
          sub_1BA72C46C(v8, 0);
        }
        v11 += 16;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease_n();
    }
  }
  v12 = v42;
  v14 = v40;
  v13 = v41;
  if (!v4 || (v15 = *(_QWORD *)(v4 + 16)) == 0)
  {
    v18 = v38;
    v17 = v39;
    if (!v40)
      goto LABEL_37;
    goto LABEL_30;
  }
  swift_bridgeObjectRetain_n();
  v16 = (_BYTE *)(v4 + 40);
  do
  {
    if ((*v16 & 1) == 0)
    {
      v8 = *((_QWORD *)v16 - 1);
      swift_retain_n();
      sub_1BA9F22C4();
      v9 = v8;
      if (v1)
        goto LABEL_26;
      sub_1BA72C46C(v8, 0);
      sub_1BA72C46C(v8, 0);
    }
    v16 += 16;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease_n();
  v18 = v38;
  v17 = v39;
  v12 = v42;
  v14 = v40;
  v13 = v41;
  if (v40)
  {
LABEL_30:
    v19 = *(_QWORD *)(v14 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain_n();
      v20 = (_BYTE *)(v14 + 40);
      while (1)
      {
        if ((*v20 & 1) == 0)
        {
          v21 = *((_QWORD *)v20 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          if (v1)
          {
LABEL_65:
            sub_1BA72C46C(v21, 0);
            sub_1BA72C46C(v21, 0);
            goto LABEL_66;
          }
          sub_1BA72C46C(v21, 0);
          sub_1BA72C46C(v21, 0);
        }
        v20 += 16;
        if (!--v19)
        {
          swift_bridgeObjectRelease_n();
          v12 = v42;
          v13 = v41;
          break;
        }
      }
    }
  }
LABEL_37:
  if (v13)
  {
    v22 = *(_QWORD *)(v13 + 16);
    if (v22)
    {
      swift_bridgeObjectRetain_n();
      v23 = (_BYTE *)(v13 + 40);
      do
      {
        if ((*v23 & 1) == 0)
        {
          v21 = *((_QWORD *)v23 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          if (v1)
            goto LABEL_65;
          sub_1BA72C46C(v21, 0);
          sub_1BA72C46C(v21, 0);
        }
        v23 += 16;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease_n();
      v12 = v42;
    }
  }
  if (v12 && (v24 = *(_QWORD *)(v12 + 16)) != 0)
  {
    swift_bridgeObjectRetain_n();
    v25 = (_BYTE *)(v12 + 40);
    while (1)
    {
      if ((*v25 & 1) == 0)
      {
        v26 = *((_QWORD *)v25 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v26, 0);
        sub_1BA72C46C(v26, 0);
        if (v1)
          break;
      }
      v25 += 16;
      if (!--v24)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_54;
      }
    }
LABEL_66:
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_54:
    if (v18 != 255)
    {
      if ((v18 & 1) != 0)
      {
        sub_1BA796C58(v36, v37, v18);
        v27 = sub_1BA862600((uint64_t)&unk_1E724DB28);
        sub_1BB3D7F90(v36, v37, v27, 0);
        swift_bridgeObjectRelease();
        sub_1BA796C70(v36, v37, v18);
        if (v1)
          return;
      }
      else
      {
        sub_1BA796C70(v36, v37, v18);
      }
    }
    if (v17 != 255)
    {
      if ((v17 & 1) != 0)
      {
        sub_1BAC444B8();
        if (v1)
          return;
      }
      else
      {
        sub_1BA825F5C(v32, v33, v34, v35, v17);
      }
    }
    if (v5 != 255)
    {
      if ((v5 & 1) != 0)
      {
        sub_1BA796C58(v30, v31, v5);
        v28 = sub_1BA862600((uint64_t)&unk_1E724DB50);
        sub_1BB3D7F90(v30, v31, v28, 0);
        swift_bridgeObjectRelease();
      }
      sub_1BA796C70(v30, v31, v5);
    }
  }
}

void sub_1BAC311C0()
{
  sub_1BAC30420();
}

void sub_1BAC311E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  _BYTE v5[144];
  __int128 v6;

  v3 = *v1;
  sub_1BABEB4B0(a1, *(_QWORD *)(v3 + 16));
  if (!v2)
  {
    v4 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C(v3 + 24, (uint64_t)v5, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v5, (uint64_t)&v6, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v4, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    if (sub_1BA896370((uint64_t *)&v6) != 1)
      sub_1BAC30C08();
  }
}

void sub_1BAC312D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;

  if (a2)
  {
    v8 = *(_QWORD *)(a2 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      v9 = (_BYTE *)(a2 + 40);
      do
      {
        if ((*v9 & 1) == 0)
        {
          v10 = *((_QWORD *)v9 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          if (v4)
          {
            sub_1BA72C46C(v10, 0);
            sub_1BA72C46C(v10, 0);
            goto LABEL_24;
          }
          sub_1BA72C46C(v10, 0);
          sub_1BA72C46C(v10, 0);
        }
        v9 += 16;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease_n();
    }
  }
  if (a3)
  {
    v11 = *(_QWORD *)(a3 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      v12 = (_BYTE *)(a3 + 40);
      while (1)
      {
        if ((*v12 & 1) == 0)
        {
          v13 = *((_QWORD *)v12 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v13, 0);
          sub_1BA72C46C(v13, 0);
          if (v4)
            goto LABEL_24;
        }
        v12 += 16;
        if (!--v11)
        {
          swift_bridgeObjectRelease_n();
          break;
        }
      }
    }
  }
  if (a4)
  {
    v14 = *(_QWORD *)(a4 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain_n();
      v15 = (_BYTE *)(a4 + 40);
      do
      {
        if ((*v15 & 1) == 0)
        {
          v16 = *((_QWORD *)v15 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v16, 0);
          sub_1BA72C46C(v16, 0);
          if (v4)
            break;
        }
        v15 += 16;
        --v14;
      }
      while (v14);
LABEL_24:
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1BAC314D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (result = sub_1BAC4375C(), !v1))
  {
    if (!v0[2] || (result = sub_1BAC4375C(), !v1))
    {
      if (v0[4])
        return sub_1BAC4375C();
    }
  }
  return result;
}

uint64_t sub_1BAC31560(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, double);
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v36 = a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = sub_1BB873A2C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - v11;
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v29 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16);
  v31 = v3;
  v17((char *)&v29 - v15, v3, v6, v14);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  v19 = v18(v16, 1, v5);
  v30 = a1;
  if (v19 == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
LABEL_7:
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
    v21 = v31;
    goto LABEL_8;
  }
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  if (!swift_dynamicCast())
    goto LABEL_7;
  v20 = *((_QWORD *)&v34 + 1);
  v21 = v31;
  if (!*((_QWORD *)&v34 + 1))
  {
LABEL_8:
    sub_1BA65DB80((uint64_t)&v33, &qword_1EF2B0E38, &qword_1EF2B0E30);
    goto LABEL_9;
  }
  v29 = v35;
  __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
  v22 = v32;
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v20);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  v32 = v22;
  if (v22)
    return result;
  v21 = v31;
LABEL_9:
  ((void (*)(char *, uint64_t, uint64_t))v17)(v12, v21 + *(int *)(v36 + 36), v6);
  if (v18(v12, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_15:
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
    goto LABEL_16;
  }
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  if (!swift_dynamicCast())
    goto LABEL_15;
  v24 = *((_QWORD *)&v34 + 1);
  if (!*((_QWORD *)&v34 + 1))
  {
LABEL_16:
    sub_1BA65DB80((uint64_t)&v33, &qword_1EF2B0E38, &qword_1EF2B0E30);
    goto LABEL_17;
  }
  v25 = v35;
  __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
  v26 = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 8))(v30, v24, v25);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  v32 = v26;
  if (!v26)
  {
    v21 = v31;
LABEL_17:
    ((void (*)(char *, uint64_t, uint64_t))v17)(v9, v21 + *(int *)(v36 + 40), v6);
    if (v18(v9, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      sub_1BA4D9CE8(0, &qword_1EF2B0E30);
      if (swift_dynamicCast())
      {
        v27 = *((_QWORD *)&v34 + 1);
        if (*((_QWORD *)&v34 + 1))
        {
          v28 = v35;
          __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 8))(v30, v27, v28);
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
        }
        return sub_1BA65DB80((uint64_t)&v33, &qword_1EF2B0E38, &qword_1EF2B0E30);
      }
    }
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
    return sub_1BA65DB80((uint64_t)&v33, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
  return result;
}

void sub_1BAC31920()
{
  __asm { BR              X10 }
}

void sub_1BAC31954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BAC312D8(a1, a2, a3, a4);
}

void sub_1BAC31968()
{
  sub_1BAC314D4();
  JUMPOUT(0x1BAC31958);
}

uint64_t sub_1BAC3198C(uint64_t a1, uint64_t a2)
{
  return sub_1BAC31560(a1, a2);
}

void sub_1BAC319A0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  __int128 v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t (*v24)(void);
  _BYTE v25[144];
  _OWORD v26[3];
  __int128 v27;

  v2 = *(_BYTE *)(v0 + 64);
  v3 = *(_OWORD *)(v0 + 32);
  v26[0] = *(_OWORD *)(v0 + 16);
  v26[1] = v3;
  v26[2] = *(_OWORD *)(v0 + 48);
  LOBYTE(v27) = v2;
  sub_1BAC30B54();
  if (!v1)
  {
    v4 = *(unsigned __int8 *)(v0 + 88);
    if (v4 != 255)
    {
      v5 = *(_QWORD *)(v0 + 72);
      v6 = *(_QWORD *)(v0 + 80);
      if ((v4 & 1) != 0)
      {
        sub_1BA796C58(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
        v7 = sub_1BA862600((uint64_t)&unk_1E724DBF0);
        sub_1BB3D7F90(v5, v6, v7, 0);
        swift_bridgeObjectRelease();
      }
      sub_1BA796C70(v5, v6, v4);
    }
    v8 = *(unsigned __int8 *)(v0 + 112);
    if (v8 != 255)
    {
      v9 = *(_QWORD *)(v0 + 96);
      v10 = *(_QWORD *)(v0 + 104);
      if ((v8 & 1) != 0)
      {
        sub_1BA796C58(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 112));
        v11 = sub_1BA862600((uint64_t)&unk_1E724DC18);
        sub_1BB3D7F90(v9, v10, v11, 0);
        swift_bridgeObjectRelease();
      }
      sub_1BA796C70(v9, v10, v8);
    }
    v12 = *(_QWORD *)(v0 + 120);
    if (v12)
    {
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        swift_bridgeObjectRetain_n();
        v14 = (_BYTE *)(v12 + 40);
        do
        {
          if ((*v14 & 1) == 0)
          {
            *(_QWORD *)&v26[0] = *((_QWORD *)v14 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(*(uint64_t *)&v26[0], 0);
            sub_1BA72C46C(*(uint64_t *)&v26[0], 0);
          }
          v14 += 16;
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease_n();
      }
    }
    v15 = *(_QWORD *)(v0 + 128);
    if (v15)
    {
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain_n();
        v17 = (_BYTE *)(v15 + 40);
        do
        {
          if ((*v17 & 1) == 0)
          {
            *(_QWORD *)&v26[0] = *((_QWORD *)v17 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(*(uint64_t *)&v26[0], 0);
            sub_1BA72C46C(*(uint64_t *)&v26[0], 0);
          }
          v17 += 16;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease_n();
      }
    }
    v18 = *(_QWORD *)(v0 + 136);
    if (v18)
    {
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        swift_bridgeObjectRetain_n();
        v20 = (_BYTE *)(v18 + 40);
        do
        {
          if ((*v20 & 1) == 0)
          {
            *(_QWORD *)&v26[0] = *((_QWORD *)v20 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(*(uint64_t *)&v26[0], 0);
            sub_1BA72C46C(*(uint64_t *)&v26[0], 0);
          }
          v20 += 16;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease_n();
      }
    }
    v21 = *(_QWORD *)(v0 + 144);
    if (v21)
    {
      v22 = *(_QWORD *)(v21 + 16);
      if (v22)
      {
        swift_bridgeObjectRetain_n();
        v23 = (_BYTE *)(v21 + 40);
        do
        {
          if ((*v23 & 1) == 0)
          {
            *(_QWORD *)&v26[0] = *((_QWORD *)v23 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(*(uint64_t *)&v26[0], 0);
            sub_1BA72C46C(*(uint64_t *)&v26[0], 0);
          }
          v23 += 16;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease_n();
      }
    }
    v24 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C(v0 + 152, (uint64_t)v25, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v25, (uint64_t)v26, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v24, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    if (sub_1BA896370((uint64_t *)v26) != 1)
      sub_1BAC30C08();
  }
}

uint64_t sub_1BAC31E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 72);
  if (!v4 || (swift_bridgeObjectRetain(), sub_1BABEB4B0(a1, v4), result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    v6 = *(_QWORD *)(v1 + 88);
    swift_bridgeObjectRetain();
    sub_1BAC26724(a1, v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC31EC0(uint64_t a1)
{
  return sub_1BAC31E0C(a1);
}

void sub_1BAC31EE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 40);
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    if (v4)
      sub_1BABEB4B0(a1, v4);
  }
}

uint64_t sub_1BAC31F34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2 + *(int *)(v7 + 36), v4, v5);
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  if (swift_dynamicCast())
  {
    v9 = *((_QWORD *)&v13 + 1);
    v10 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, v9, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  else
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    return sub_1BA65DB80((uint64_t)&v12, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
}

uint64_t sub_1BAC32054(uint64_t a1, uint64_t a2)
{
  return sub_1BAC31F34(a1, a2);
}

void sub_1BAC32068()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

void sub_1BAC320E4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 56);
  v4 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 - 192) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 - 176) = v4;
  *(_QWORD *)(v1 - 160) = v2;
  *(_BYTE *)(v1 - 152) = v3;
  sub_1BB311078();
}

void sub_1BAC32428(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v3 - 192) = *(_QWORD *)(a1 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BAC32068();
  if (v1)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x1BAC32400);
  }
  swift_bridgeObjectRetain();
  sub_1BAC2EAEC(v2, v4, (void (*)(uint64_t))sub_1BAC32068);
  swift_release();
  swift_bridgeObjectRelease_n();
  JUMPOUT(0x1BAC32404);
}

void sub_1BAC324DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  unsigned int v33;
  char v34;

  v3 = v2;
  v5 = *(_QWORD *)v1;
  v6 = *(_QWORD *)(v1 + 8);
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(unsigned __int8 *)(v1 + 24);
  v29 = *(_OWORD *)(v1 + 32);
  v33 = *(unsigned __int16 *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 64);
  v30 = *(_QWORD *)(v1 + 56);
  v26 = *(_QWORD *)(v1 + 72);
  v27 = *(_QWORD *)(v1 + 80);
  v28 = *(unsigned __int8 *)(v1 + 88);
  v10 = *(_QWORD *)(v1 + 96);
  if (v8 != 1)
  {
    v23 = *(_QWORD *)(v1 + 64);
    v24 = *(_QWORD *)(v1 + 96);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v5;
    *(_QWORD *)(v12 + 24) = v6;
    v13 = v12 | 0x8000000000000000;
    v25 = a1;
    v14 = *(_QWORD **)(a1 + 48);
    v15 = v14[2];
    if (v15)
    {
      v16 = v14[v15 + 3];
      sub_1BA60DF54(v5, v6, v7, 0);
      sub_1BA60DF54(v5, v6, v7, 0);
      swift_retain();
      swift_retain();
      sub_1BAA736F8(v16);
      LOBYTE(v16) = v17;
      swift_release();
      swift_release();
      if ((v16 & 1) != 0)
      {
        swift_release();
        sub_1BA60DFC4(v5, v6, v7, 0);
LABEL_14:
        v9 = v23;
        v10 = v24;
        goto LABEL_15;
      }
    }
    else
    {
      swift_bridgeObjectRetain_n();
    }
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_1BB38ED0C(0, v14[2] + 1, 1, v14);
    v20 = v14[2];
    v19 = v14[3];
    if (v20 >= v19 >> 1)
      v14 = sub_1BB38ED0C((_QWORD *)(v19 > 1), v20 + 1, 1, v14);
    v14[2] = v20 + 1;
    v14[v20 + 4] = v13;
    swift_release();
    sub_1BA60DFC4(v5, v6, v7, 0);
    *(_QWORD *)(v25 + 48) = v14;
    goto LABEL_14;
  }
  *(_QWORD *)&v31 = v5;
  *((_QWORD *)&v31 + 1) = v6;
  v32 = v7;
  v34 = 5;
  sub_1BA60DF54(v5, v6, v7, 1);
  sub_1BA60DF54(v5, v6, v7, 1);
  v11 = sub_1BB6B84D4((uint64_t *)&v31, &v34);
  if (v2)
  {
    sub_1BA60DFC4(v5, v6, v7, 1);
    return;
  }
  v18 = v11;
  swift_bridgeObjectRetain();
  sub_1BB3D7F90(v5, v6, v18, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA60DFC4(v5, v6, v7, 1);
LABEL_15:
  if (v33 >> 8 <= 0xFE)
  {
    v31 = v29;
    LOWORD(v32) = v33;
    sub_1BAC527C0();
    v21 = v30;
    if (v2)
      return;
  }
  else
  {
    v21 = v30;
  }
  if ((~v21 & 0xF000000000000007) != 0)
  {
    *(_QWORD *)&v31 = v21;
    swift_retain();
    swift_retain();
    sub_1BAC35E00();
    if (v2)
    {
      sub_1BA60DF1C(v21);
      return;
    }
    *(_QWORD *)&v31 = v9;
    sub_1BAC35E00();
    v3 = 0;
    sub_1BA60DF1C(v21);
  }
  if (v28)
  {
    sub_1BA69C808(v26, v27, 1);
    v22 = sub_1BA862600((uint64_t)&unk_1E724DB00);
    sub_1BB3D7F90(v26, v27, v22, 0);
    swift_bridgeObjectRelease();
    sub_1BA69C828(v26, v27, 1);
    if (v3)
      return;
  }
  else
  {
    sub_1BA69C828(v26, v27, 0);
  }
  if ((~v10 & 0xF000000000000007) != 0)
  {
    *(_QWORD *)&v31 = v10;
    sub_1BAC52A4C();
  }
}

uint64_t sub_1BAC328E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  int EnumCaseMultiPayload;
  uint64_t v64;
  int *v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(char *, uint64_t, uint64_t);
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  int v90;
  uint64_t *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  int v127;
  uint64_t *v128;
  uint64_t v129;
  int v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char v242;

  v2 = v1;
  v225 = a1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v211 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v221 = (char *)&v211 - v7;
  MEMORY[0x1E0C80A78](v8);
  v233 = (char *)&v211 - v9;
  MEMORY[0x1E0C80A78](v10);
  v227 = (uint64_t)&v211 - v11;
  MEMORY[0x1E0C80A78](v12);
  v230 = (uint64_t)&v211 - v13;
  MEMORY[0x1E0C80A78](v14);
  v231 = (uint64_t)&v211 - v15;
  MEMORY[0x1E0C80A78](v16);
  v236 = (char *)&v211 - v17;
  MEMORY[0x1E0C80A78](v18);
  v232 = (uint64_t)&v211 - v19;
  MEMORY[0x1E0C80A78](v20);
  v229 = (char *)&v211 - v21;
  MEMORY[0x1E0C80A78](v22);
  v235 = (char *)&v211 - v23;
  MEMORY[0x1E0C80A78](v24);
  v234 = (uint64_t)&v211 - v25;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v211 - v27;
  v29 = type metadata accessor for FormatURL();
  v228 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v213 = (uint64_t)&v211 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v218 = (uint64_t)&v211 - v32;
  MEMORY[0x1E0C80A78](v33);
  v220 = (char *)&v211 - v34;
  MEMORY[0x1E0C80A78](v35);
  v214 = (uint64_t)&v211 - v36;
  MEMORY[0x1E0C80A78](v37);
  v215 = (uint64_t)&v211 - v38;
  MEMORY[0x1E0C80A78](v39);
  v216 = (uint64_t)&v211 - v40;
  MEMORY[0x1E0C80A78](v41);
  v222 = (char *)&v211 - v42;
  MEMORY[0x1E0C80A78](v43);
  v223 = (char *)&v211 - v44;
  MEMORY[0x1E0C80A78](v45);
  v224 = (uint64_t)&v211 - v46;
  MEMORY[0x1E0C80A78](v47);
  v226 = (char *)&v211 - v48;
  MEMORY[0x1E0C80A78](v49);
  v217 = (uint64_t)&v211 - v50;
  MEMORY[0x1E0C80A78](v51);
  v53 = (char *)&v211 - v52;
  MEMORY[0x1E0C80A78](v54);
  v56 = (char *)&v211 - v55;
  MEMORY[0x1E0C80A78](v57);
  v59 = (char *)&v211 - v58;
  MEMORY[0x1E0C80A78](v60);
  v62 = (char *)&v211 - v61;
  v237 = v2;
  sub_1BA4C2DD8(v2, (uint64_t)&v211 - v61, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v219 = v5;
  if (!EnumCaseMultiPayload)
  {
    sub_1BA4A2E80((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_5:
    v64 = (uint64_t)v235;
    goto LABEL_7;
  }
  v64 = (uint64_t)v235;
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (!v62[24])
  {
    v76 = *((_QWORD *)v62 + 1);
    v77 = *((_QWORD *)v62 + 2);
    v239 = *(_QWORD *)v62;
    v75 = v239;
    v240 = v76;
    v241 = v77;
    v242 = 6;
    sub_1BA690C00(v239, v76, v77, 0);
    v78 = v238;
    v212 = (int *)sub_1BB6B84D4(&v239, &v242);
    if (v78)
    {
      v79 = v75;
      v80 = v76;
      v81 = v77;
      return sub_1BA5A7EF8(v79, v80, v81, 0);
    }
    v211 = v77;
    swift_bridgeObjectRetain();
    sub_1BB3D7F90(v75, v76, (uint64_t)v212, 0);
    v238 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5A7EF8(v75, v76, v211, 0);
    goto LABEL_5;
  }
LABEL_7:
  v65 = (int *)type metadata accessor for FormatRemoteImage();
  sub_1BA4C2DD8(v237 + v65[5], (uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v66 = swift_getEnumCaseMultiPayload();
  if (!v66)
  {
    sub_1BA4A2E80((uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    goto LABEL_12;
  }
  if (v66 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    v67 = v237;
    goto LABEL_13;
  }
  if (v59[24])
    goto LABEL_12;
  v212 = v65;
  v93 = *(_QWORD *)v59;
  v94 = *((_QWORD *)v59 + 1);
  v95 = *((_QWORD *)v59 + 2);
  v239 = v93;
  v240 = v94;
  v241 = v95;
  v242 = 6;
  sub_1BA690C00(v93, v94, v95, 0);
  v96 = v238;
  v97 = sub_1BB6B84D4(&v239, &v242);
  if (v96)
  {
    v79 = v93;
    v80 = v94;
    v81 = v95;
    return sub_1BA5A7EF8(v79, v80, v81, 0);
  }
  v98 = v97;
  swift_bridgeObjectRetain();
  v211 = v98;
  sub_1BB3D7F90(v93, v94, v98, 0);
  v238 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5A7EF8(v93, v94, v95, 0);
  v67 = v237;
  v65 = v212;
LABEL_13:
  sub_1BA4C2DD8(v67 + v65[6], (uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v68 = swift_getEnumCaseMultiPayload();
  if (!v68)
  {
    sub_1BA4A2E80((uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v69 = v238;
    goto LABEL_18;
  }
  if (v68 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v69 = v238;
LABEL_18:
    v70 = (uint64_t)v233;
    goto LABEL_19;
  }
  v69 = v238;
  if (v56[24])
    goto LABEL_18;
  v212 = v65;
  v107 = *(_QWORD *)v56;
  v106 = *((_QWORD *)v56 + 1);
  v108 = *((_QWORD *)v56 + 2);
  v239 = v107;
  v240 = v106;
  v241 = v108;
  v242 = 6;
  sub_1BA690C00(v107, v106, v108, 0);
  v109 = sub_1BB6B84D4(&v239, &v242);
  if (v69)
  {
    v79 = v107;
    v80 = v106;
    v81 = v108;
    return sub_1BA5A7EF8(v79, v80, v81, 0);
  }
  v110 = v109;
  swift_bridgeObjectRetain();
  sub_1BB3D7F90(v107, v106, v110, 0);
  v69 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5A7EF8(v107, v106, v108, 0);
  v67 = v237;
  v70 = (uint64_t)v233;
  v65 = v212;
LABEL_19:
  sub_1BA57B488(v67 + v65[7], (uint64_t)v28, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v228 + 48);
  v72 = v71(v28, 1, v29);
  v238 = v69;
  if (v72 == 1)
  {
    sub_1BA502AD0((uint64_t)v28, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v73 = (uint64_t)v229;
    goto LABEL_30;
  }
  sub_1BA4C2DD8((uint64_t)v28, (uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v74 = swift_getEnumCaseMultiPayload();
  if (v74)
  {
    if (v74 == 1)
    {
      swift_bridgeObjectRelease();
      v70 = (uint64_t)v233;
      swift_bridgeObjectRelease();
    }
    else if (!v53[24])
    {
      v212 = v65;
      v139 = *((_QWORD *)v53 + 1);
      v141 = *((_QWORD *)v53 + 2);
      v239 = *(_QWORD *)v53;
      v140 = v239;
      v240 = v139;
      v241 = v141;
      v242 = 6;
      sub_1BA690C00(v239, v139, v141, 0);
      v142 = sub_1BB6B84D4(&v239, &v242);
      if (v69)
      {
        sub_1BA5A7EF8(v140, v139, v141, 0);
        v138 = (uint64_t)v28;
        return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v199 = v142;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v140, v139, v199, 0);
      v238 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v140, v139, v141, 0);
      v67 = v237;
      v70 = (uint64_t)v233;
      v65 = v212;
      v73 = (uint64_t)v229;
      v64 = (uint64_t)v235;
      goto LABEL_29;
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v73 = (uint64_t)v229;
LABEL_29:
  sub_1BA4A2E80((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_30:
  v82 = v234;
  sub_1BA57B488(v67 + v65[8], v234, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  v83 = v71((char *)v82, 1, v29);
  v84 = (uint64_t)v236;
  if (v83 == 1)
  {
    sub_1BA502AD0(v82, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v85 = (uint64_t)v226;
    goto LABEL_40;
  }
  v86 = v82;
  v87 = v217;
  sub_1BA4C2DD8(v86, v217, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v88 = swift_getEnumCaseMultiPayload();
  if (v88)
  {
    if (v88 != 1)
    {
      v90 = *(unsigned __int8 *)(v87 + 24);
      v91 = (uint64_t *)v87;
      v85 = (uint64_t)v226;
      if (!v90)
      {
        v212 = v65;
        v143 = v91[1];
        v145 = v91[2];
        v239 = *v91;
        v144 = v239;
        v240 = v143;
        v241 = v145;
        v242 = 6;
        sub_1BA690C00(v239, v143, v145, 0);
        v146 = v238;
        v147 = sub_1BB6B84D4(&v239, &v242);
        if (v146)
        {
          v238 = v146;
          sub_1BA5A7EF8(v144, v143, v145, 0);
          v138 = v234;
          return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        v200 = v147;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v144, v143, v200, 0);
        v238 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v144, v143, v145, 0);
        v84 = (uint64_t)v236;
        v67 = v237;
        v70 = (uint64_t)v233;
        v65 = v212;
        v73 = (uint64_t)v229;
      }
      v89 = v234;
      goto LABEL_39;
    }
    swift_bridgeObjectRelease();
    v84 = (uint64_t)v236;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80(v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v89 = v234;
  v85 = (uint64_t)v226;
LABEL_39:
  sub_1BA4A2E80(v89, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_40:
  sub_1BA57B488(v67 + v65[9], v64, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v71((char *)v64, 1, v29) == 1)
  {
    sub_1BA502AD0(v64, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1BA4C2DD8(v64, v85, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v92 = swift_getEnumCaseMultiPayload();
    if (v92)
    {
      if (v92 == 1)
      {
        swift_bridgeObjectRelease();
        v84 = (uint64_t)v236;
        swift_bridgeObjectRelease();
      }
      else if (!*(_BYTE *)(v85 + 24))
      {
        v212 = v65;
        v148 = *(_QWORD *)(v85 + 8);
        v150 = *(_QWORD *)(v85 + 16);
        v239 = *(_QWORD *)v85;
        v149 = v239;
        v240 = v148;
        v241 = v150;
        v242 = 6;
        sub_1BA690C00(v239, v148, v150, 0);
        v151 = v238;
        v152 = sub_1BB6B84D4(&v239, &v242);
        if (v151)
        {
          sub_1BA5A7EF8(v149, v148, v150, 0);
          v138 = (uint64_t)v235;
          return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        v201 = v152;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v149, v148, v201, 0);
        v238 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v149, v148, v150, 0);
        v84 = (uint64_t)v236;
        v67 = v237;
        v70 = (uint64_t)v233;
        v65 = v212;
        v73 = (uint64_t)v229;
        v64 = (uint64_t)v235;
      }
    }
    else
    {
      sub_1BA4A2E80(v85, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  sub_1BA57B488(v67 + v65[10], v73, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  v99 = v71((char *)v73, 1, v29);
  v100 = v224;
  if (v99 == 1)
  {
    sub_1BA502AD0(v73, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1BA4C2DD8(v73, v224, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v101 = swift_getEnumCaseMultiPayload();
    if (v101)
    {
      if (v101 == 1)
      {
        swift_bridgeObjectRelease();
        v84 = (uint64_t)v236;
        swift_bridgeObjectRelease();
      }
      else if (!*(_BYTE *)(v100 + 24))
      {
        v212 = v65;
        v153 = *(_QWORD *)(v100 + 8);
        v155 = *(_QWORD *)(v100 + 16);
        v239 = *(_QWORD *)v100;
        v154 = v239;
        v240 = v153;
        v241 = v155;
        v242 = 6;
        sub_1BA690C00(v239, v153, v155, 0);
        v156 = v238;
        v157 = sub_1BB6B84D4(&v239, &v242);
        if (v156)
        {
          sub_1BA5A7EF8(v154, v153, v155, 0);
          v138 = (uint64_t)v229;
          return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        v202 = v157;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v154, v153, v202, 0);
        v238 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v154, v153, v155, 0);
        v84 = (uint64_t)v236;
        v67 = v237;
        v70 = (uint64_t)v233;
        v65 = v212;
        v73 = (uint64_t)v229;
      }
    }
    else
    {
      sub_1BA4A2E80(v100, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA4A2E80(v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v102 = (uint64_t)v223;
  v103 = v232;
  sub_1BA57B488(v67 + v65[11], v232, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v71((char *)v103, 1, v29) == 1)
  {
    sub_1BA502AD0(v103, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v104 = (uint64_t)v222;
    goto LABEL_71;
  }
  sub_1BA4C2DD8(v103, v102, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v105 = swift_getEnumCaseMultiPayload();
  if (v105)
  {
    v104 = (uint64_t)v222;
    if (v105 == 1)
    {
      swift_bridgeObjectRelease();
      v84 = (uint64_t)v236;
      swift_bridgeObjectRelease();
    }
    else if (!*(_BYTE *)(v102 + 24))
    {
      v212 = v65;
      v158 = *(_QWORD *)(v102 + 8);
      v160 = *(_QWORD *)(v102 + 16);
      v239 = *(_QWORD *)v102;
      v159 = v239;
      v240 = v158;
      v241 = v160;
      v242 = 6;
      sub_1BA690C00(v239, v158, v160, 0);
      v161 = v238;
      v162 = sub_1BB6B84D4(&v239, &v242);
      if (v161)
      {
        v238 = v161;
        sub_1BA5A7EF8(v159, v158, v160, 0);
        v138 = v232;
        return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v203 = v162;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v159, v158, v203, 0);
      v238 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v159, v158, v160, 0);
      v84 = (uint64_t)v236;
      v67 = v237;
      v111 = v232;
      v70 = (uint64_t)v233;
      v65 = v212;
      goto LABEL_70;
    }
    v111 = v232;
  }
  else
  {
    sub_1BA4A2E80(v102, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v111 = v232;
    v104 = (uint64_t)v222;
  }
LABEL_70:
  sub_1BA4A2E80(v111, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_71:
  sub_1BA57B488(v67 + v65[12], v84, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v71((char *)v84, 1, v29) == 1)
  {
    sub_1BA502AD0(v84, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1BA4C2DD8(v84, v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v112 = swift_getEnumCaseMultiPayload();
    if (v112)
    {
      if (v112 == 1)
      {
        swift_bridgeObjectRelease();
        v84 = (uint64_t)v236;
        swift_bridgeObjectRelease();
      }
      else if (!*(_BYTE *)(v104 + 24))
      {
        v212 = v65;
        v163 = *(_QWORD *)(v104 + 8);
        v165 = *(_QWORD *)(v104 + 16);
        v239 = *(_QWORD *)v104;
        v164 = v239;
        v240 = v163;
        v241 = v165;
        v242 = 6;
        sub_1BA690C00(v239, v163, v165, 0);
        v166 = v238;
        v167 = sub_1BB6B84D4(&v239, &v242);
        if (v166)
        {
          sub_1BA5A7EF8(v164, v163, v165, 0);
          v138 = (uint64_t)v236;
          return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        v204 = v167;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v164, v163, v204, 0);
        v238 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v164, v163, v165, 0);
        v84 = (uint64_t)v236;
        v67 = v237;
        v70 = (uint64_t)v233;
        v65 = v212;
      }
    }
    else
    {
      sub_1BA4A2E80(v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA4A2E80(v84, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v113 = v231;
  sub_1BA57B488(v67 + v65[13], v231, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v71((char *)v113, 1, v29) == 1)
  {
    sub_1BA502AD0(v113, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    v114 = v113;
    v115 = v216;
    sub_1BA4C2DD8(v114, v216, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v116 = swift_getEnumCaseMultiPayload();
    if (v116)
    {
      if (v116 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(_BYTE *)(v115 + 24))
      {
        v212 = v65;
        v169 = *(_QWORD *)v115;
        v168 = *(_QWORD *)(v115 + 8);
        v170 = *(_QWORD *)(v115 + 16);
        v239 = v169;
        v240 = v168;
        v241 = v170;
        v242 = 6;
        sub_1BA690C00(v169, v168, v170, 0);
        v171 = v238;
        v172 = sub_1BB6B84D4(&v239, &v242);
        if (v171)
        {
          sub_1BA5A7EF8(v169, v168, v170, 0);
          v138 = v231;
          return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        v205 = v172;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v169, v168, v205, 0);
        v238 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v169, v168, v170, 0);
        v67 = v237;
        v70 = (uint64_t)v233;
        v65 = v212;
      }
    }
    else
    {
      sub_1BA4A2E80(v115, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA4A2E80(v231, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v117 = v230;
  sub_1BA57B488(v67 + v65[14], v230, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v71((char *)v117, 1, v29) == 1)
  {
    sub_1BA502AD0(v117, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    v118 = v117;
    v119 = v215;
    sub_1BA4C2DD8(v118, v215, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v120 = swift_getEnumCaseMultiPayload();
    if (v120)
    {
      if (v120 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(_BYTE *)(v119 + 24))
      {
        v212 = v65;
        v174 = *(_QWORD *)v119;
        v173 = *(_QWORD *)(v119 + 8);
        v175 = *(_QWORD *)(v119 + 16);
        v239 = v174;
        v240 = v173;
        v241 = v175;
        v242 = 6;
        sub_1BA690C00(v174, v173, v175, 0);
        v176 = v238;
        v177 = sub_1BB6B84D4(&v239, &v242);
        if (v176)
        {
          v238 = v176;
          sub_1BA5A7EF8(v174, v173, v175, 0);
          v138 = v230;
          return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        v206 = v177;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v174, v173, v206, 0);
        v238 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v174, v173, v175, 0);
        v67 = v237;
        v70 = (uint64_t)v233;
        v65 = v212;
      }
    }
    else
    {
      sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA4A2E80(v230, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v121 = v227;
  sub_1BA57B488(v67 + v65[15], v227, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v71((char *)v121, 1, v29) == 1)
  {
    sub_1BA502AD0(v121, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v122 = (uint64_t)v220;
    goto LABEL_105;
  }
  v123 = v121;
  v124 = v214;
  sub_1BA4C2DD8(v123, v214, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v125 = swift_getEnumCaseMultiPayload();
  if (v125)
  {
    if (v125 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v127 = *(unsigned __int8 *)(v124 + 24);
      v128 = (uint64_t *)v124;
      v122 = (uint64_t)v220;
      if (v127)
      {
        v126 = v227;
        goto LABEL_104;
      }
      v212 = v65;
      v178 = v128[1];
      v180 = v128[2];
      v239 = *v128;
      v179 = v239;
      v240 = v178;
      v241 = v180;
      v242 = 6;
      sub_1BA690C00(v239, v178, v180, 0);
      v181 = v238;
      v182 = sub_1BB6B84D4(&v239, &v242);
      if (v181)
      {
        sub_1BA5A7EF8(v179, v178, v180, 0);
        v138 = v227;
        return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v207 = v182;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v179, v178, v207, 0);
      v238 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v179, v178, v180, 0);
      v67 = v237;
      v70 = (uint64_t)v233;
      v65 = v212;
    }
  }
  else
  {
    sub_1BA4A2E80(v124, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v126 = v227;
  v122 = (uint64_t)v220;
LABEL_104:
  sub_1BA4A2E80(v126, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_105:
  sub_1BA57B488(v67 + v65[16], v70, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v71((char *)v70, 1, v29) == 1)
  {
    sub_1BA502AD0(v70, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v129 = (uint64_t)v221;
  }
  else
  {
    sub_1BA4C2DD8(v70, v122, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v130 = swift_getEnumCaseMultiPayload();
    if (v130)
    {
      if (v130 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(_BYTE *)(v122 + 24))
      {
        v212 = v65;
        v184 = *(_QWORD *)v122;
        v183 = *(_QWORD *)(v122 + 8);
        v185 = *(_QWORD *)(v122 + 16);
        v239 = v184;
        v240 = v183;
        v241 = v185;
        v242 = 6;
        sub_1BA690C00(v184, v183, v185, 0);
        v186 = v238;
        v187 = sub_1BB6B84D4(&v239, &v242);
        if (v186)
        {
          sub_1BA5A7EF8(v184, v183, v185, 0);
          v138 = (uint64_t)v233;
          return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        v208 = v187;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v184, v183, v208, 0);
        v238 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v184, v183, v185, 0);
        v67 = v237;
        v70 = (uint64_t)v233;
        v65 = v212;
      }
    }
    else
    {
      sub_1BA4A2E80(v122, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v129 = (uint64_t)v221;
    sub_1BA4A2E80(v70, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  sub_1BA57B488(v67 + v65[17], v129, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  v131 = v71((char *)v129, 1, v29);
  v132 = v218;
  if (v131 != 1)
  {
    sub_1BA4C2DD8(v129, v218, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v134 = swift_getEnumCaseMultiPayload();
    if (v134)
    {
      if (v134 == 1)
      {
        swift_bridgeObjectRelease();
        v129 = (uint64_t)v221;
        swift_bridgeObjectRelease();
      }
      else if (!*(_BYTE *)(v132 + 24))
      {
        v212 = v65;
        v188 = v132;
        v190 = *(_QWORD *)v132;
        v189 = *(_QWORD *)(v132 + 8);
        v191 = *(_QWORD *)(v188 + 16);
        v239 = v190;
        v240 = v189;
        v241 = v191;
        v242 = 6;
        sub_1BA690C00(v190, v189, v191, 0);
        v192 = v238;
        v193 = sub_1BB6B84D4(&v239, &v242);
        if (v192)
        {
          v238 = v192;
          sub_1BA5A7EF8(v190, v189, v191, 0);
          v138 = (uint64_t)v221;
          return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        v209 = v193;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v190, v189, v209, 0);
        v238 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v190, v189, v191, 0);
        v133 = (uint64_t)v219;
        v67 = v237;
        v65 = v212;
        v129 = (uint64_t)v221;
        goto LABEL_121;
      }
    }
    else
    {
      sub_1BA4A2E80(v132, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v133 = (uint64_t)v219;
LABEL_121:
    sub_1BA4A2E80(v129, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    goto LABEL_122;
  }
  sub_1BA502AD0(v129, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  v133 = (uint64_t)v219;
LABEL_122:
  sub_1BA57B488(v67 + v65[18], v133, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v71((char *)v133, 1, v29) == 1)
    return sub_1BA502AD0(v133, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  v136 = v213;
  sub_1BA4C2DD8(v133, v213, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v137 = swift_getEnumCaseMultiPayload();
  if (v137)
  {
    if (v137 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!*(_BYTE *)(v136 + 24))
    {
      v194 = *(_QWORD *)(v136 + 8);
      v196 = *(_QWORD *)(v136 + 16);
      v239 = *(_QWORD *)v136;
      v195 = v239;
      v240 = v194;
      v241 = v196;
      v242 = 6;
      sub_1BA690C00(v239, v194, v196, 0);
      v197 = v238;
      v198 = sub_1BB6B84D4(&v239, &v242);
      if (v197)
      {
        sub_1BA5A7EF8(v195, v194, v196, 0);
        v138 = (uint64_t)v219;
        return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v210 = v198;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v195, v194, v210, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v195, v194, v196, 0);
      v133 = (uint64_t)v219;
    }
  }
  else
  {
    sub_1BA4A2E80(v136, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v138 = v133;
  return sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
}

void sub_1BAC34670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1BAC0AD48(a1, a2);
  if (!v3)
  {
    swift_retain();
    sub_1BAC44B58(a1, a3);
    swift_release();
  }
}

void sub_1BAC346D0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  sub_1BAC1CF38(a1, a2);
  if (!v4)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAC39E7C();
    v6 = *(_QWORD *)(a4 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      v7 = a4 + 56;
      do
      {
        v9 = *(_QWORD *)(v7 - 24);
        v8 = *(_QWORD *)(v7 - 16);
        v10 = *(_BYTE *)(v7 - 8);
        sub_1BA73B1CC(v9, v8, v10);
        swift_retain_n();
        sub_1BB5635E8();
        v7 += 32;
        swift_release();
        sub_1BA73B1B8(v9, v8, v10);
        swift_release();
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
    }
    sub_1BB5635E8();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

void sub_1BAC34898(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1BAC11EA0(a1, a2);
  if (!v3)
    __asm { BR              X10 }
}

void sub_1BAC34974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = swift_projectBox();
  sub_1BA4C2DD8(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  sub_1BA4C2DD8(v1, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_retain();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = *v2;
      v6 = v2[1];
      v8 = v2[2];
      *(_QWORD *)(v3 - 112) = v7;
      *(_QWORD *)(v3 - 104) = v6;
      *(_QWORD *)(v3 - 96) = v8;
      *(_BYTE *)(v3 - 65) = 6;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9 = sub_1BB6B84D4((uint64_t *)(v3 - 112), (char *)(v3 - 65));
      if (!v0)
      {
        v10 = v9;
        swift_bridgeObjectRelease();
        sub_1BB3D7F90(v7, v6, v10, 0);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA4A2E80((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  }
  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  swift_release();
  JUMPOUT(0x1BAC34934);
}

uint64_t sub_1BAC34B44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;

  v3 = v2;
  v5 = *(_QWORD *)(a2 + 16);
  if (!v5)
    return sub_1BAC32068(a1);
  swift_bridgeObjectRetain();
  v7 = a2 + 40;
  while (1)
  {
    swift_retain();
    swift_retain();
    sub_1BAC30118(a1);
    if (v3)
      break;
    sub_1BAC32068(a1);
    v3 = 0;
    v7 += 16;
    swift_release();
    swift_release();
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return sub_1BAC32068(a1);
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1BAC34C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t *i;
  unint64_t v8;

  v3 = v2;
  v5 = *(_QWORD *)(a2 + 16);
  if (!v5)
    return sub_1BABE39D4(a1);
  swift_bridgeObjectRetain();
  for (i = (unint64_t *)(a2 + 40); ; i += 2)
  {
    v8 = *i;
    swift_retain();
    sub_1BA71CA6C(v8);
    sub_1BAC30118();
    if (v3)
      break;
    sub_1BABE39D4(a1);
    v3 = 0;
    swift_release();
    sub_1BA719718(v8);
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return sub_1BABE39D4(a1);
    }
  }
  swift_release();
  sub_1BA719718(v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC34D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v7 = *v4;
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = type metadata accessor for FormatSwitchValue.CaseValue(0, v9, v8, a4);
  result = sub_1BB1972C8(a1, v7, v10, (uint64_t)&off_1E729D140);
  if (!v5)
  {
    v13 = type metadata accessor for FormatSwitchValue.DefaultValue(0, v9, v8, v12);
    return sub_1BAC2FFE8(a1, v13);
  }
  return result;
}

unint64_t sub_1BAC34E0C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v5 = result;
  if (a2 < 3)
    goto LABEL_3;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  sub_1BA6E6E84(a2);
  sub_1BA6E6E84(v7);
  sub_1BA6E6E84(v8);
  sub_1BAC34E0C(v5, v7, v8);
  sub_1BA6E7468(v7);
  sub_1BA6E7468(v8);
  result = sub_1BA6E7468(a2);
  if (!v3)
  {
LABEL_3:
    if (a3 >= 3)
    {
      v9 = *(_QWORD *)(a3 + 16);
      v10 = *(_QWORD *)(a3 + 24);
      sub_1BA6E6E84(a3);
      sub_1BA6E6E84(v9);
      sub_1BA6E6E84(v10);
      sub_1BAC34E0C(v5, v9, v10);
      sub_1BA6E7468(v9);
      sub_1BA6E7468(v10);
      return sub_1BA6E7468(a3);
    }
  }
  return result;
}

uint64_t sub_1BAC34EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, double);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v2;
  v5 = a2;
  v6 = a1;
  v7 = *(_QWORD *)(a2 + 16);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v13((char *)&v21 - v14, v2, v7, v11);
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  if (swift_dynamicCast())
  {
    v22 = v5;
    v26 = v2;
    v15 = v6;
    v17 = *((_QWORD *)&v24 + 1);
    v16 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 8))(v15, v17, v16);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
    if (v3)
      return result;
    v6 = v15;
    v4 = v26;
    v5 = v22;
  }
  else
  {
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    sub_1BA65DB80((uint64_t)&v23, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
  ((void (*)(char *, uint64_t, uint64_t))v13)(v9, v4 + *(int *)(v5 + 36), v7);
  if (swift_dynamicCast())
  {
    v19 = *((_QWORD *)&v24 + 1);
    v20 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 8))(v6, v19, v20);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  }
  else
  {
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    return sub_1BA65DB80((uint64_t)&v23, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
}

uint64_t sub_1BAC350FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC35144(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAC350FC, (void (*)(uint64_t, uint64_t))sub_1BABE8B64);
}

uint64_t sub_1BAC35120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC35144(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAC35120, (void (*)(uint64_t, uint64_t))sub_1BABE8B88);
}

uint64_t sub_1BAC35144(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v7 = v5;
  if ((a2 & 0x8000000000000000) == 0)
    goto LABEL_3;
  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  a4(a1, v11, v12);
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v7)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    a5(a1, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BAC3520C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v7;
  uint64_t v8;
  unint64_t result;

  if (a2 >> 62 != 1)
    goto LABEL_3;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  sub_1BA67D3F4(a2);
  sub_1BA67D3F4(v7);
  swift_bridgeObjectRetain();
  sub_1BAC3520C(a1, v7, v8);
  sub_1BA6EEDB4(v7);
  swift_bridgeObjectRelease();
  result = sub_1BA6EEDB4(a2);
  if (!v3)
  {
LABEL_3:
    swift_bridgeObjectRetain();
    sub_1BABE9BC8(a1, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC352C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  sub_1BA4AD288(0, &qword_1EF2B0E50, (uint64_t)&type metadata for FormatSourceItemTipTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  swift_bridgeObjectRetain();
  if (swift_dynamicCast())
  {
    v6 = *((_QWORD *)&v10 + 1);
    v7 = v11;
    __swift_project_boxed_opaque_existential_1(&v9, *((uint64_t *)&v10 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(a1, v6, v7);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
    if (v3)
      return result;
  }
  else
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
    sub_1BA65DB80((uint64_t)&v9, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
  swift_bridgeObjectRetain();
  sub_1BABEB0D4(a1, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC35404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC35144(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAC35404, (void (*)(uint64_t, uint64_t))sub_1BABEFB00);
}

void sub_1BAC35428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1BAC45158(a1);
  if (!v3)
  {
    swift_bridgeObjectRetain();
    sub_1BAC1A144(a1, a3);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAC3548C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;

  result = a4();
  if (!v4)
  {
    swift_bridgeObjectRetain();
    sub_1BAC2EAEC(a1, a3, (void (*)(uint64_t))a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC35500(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[3];
  char v16;

  v4 = v3;
  if (!(a2 >> 62))
  {
    if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    {
      v11 = *(_QWORD *)(a2 + 24);
      v10 = *(_QWORD *)(a2 + 32);
      v15[0] = *(_QWORD *)(a2 + 16);
      v12 = v15[0];
      v15[1] = v11;
      v15[2] = v10;
      v16 = 6;
      swift_retain();
      sub_1BAC68C24(v15[0], v11, v10, 1);
      v13 = sub_1BB6B84D4(v15, &v16);
      if (v4)
        return swift_release();
      v14 = v13;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v12, v11, v14, 0);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_9;
  }
  if (a2 >> 62 == 1)
    goto LABEL_9;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BAC35500(a1, v7, v8);
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRetain();
    sub_1BAC21940(a1, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAC35680(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

unint64_t sub_1BAC356C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 16);
  if (v4)
  {
    sub_1BA739250(v3);
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      swift_retain();
      sub_1BAC35E00();
      if (v0)
        break;
      ++v5;
      swift_release();
      if (v4 == v5)
      {
        swift_bridgeObjectRelease();
        sub_1BA6F5D74(v3);
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1BA6F5D74(v3);
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRetain();
    sub_1BAC2BD6C(v2, v1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAC35814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v6, v7);
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  if (swift_dynamicCast())
  {
    v10 = *((_QWORD *)&v17 + 1);
    v11 = v18;
    __swift_project_boxed_opaque_existential_1(&v16, *((uint64_t *)&v17 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, v10, v11);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
    if (v3)
      return result;
  }
  else
  {
    v18 = 0;
    v16 = 0u;
    v17 = 0u;
    sub_1BA65DB80((uint64_t)&v16, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
  v13 = sub_1BA647A38(a2);
  v15 = type metadata accessor for FormatSelectorValueSelector(0, v6, *(_QWORD *)(a2 + 24), v14);
  swift_bridgeObjectRetain();
  sub_1BB1972C8(a1, v13, v15, (uint64_t)&off_1E729B720);
  return swift_bridgeObjectRelease();
}

void sub_1BAC35998()
{
  sub_1BAC32068();
}

void sub_1BAC359AC()
{
  __asm { BR              X11 }
}

void sub_1BAC359FC()
{
  sub_1BAC35E00();
}

void sub_1BAC35E00()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC35E48()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  swift_retain();
  ((void (*)(uint64_t))sub_1BAC35E00)(v1);
  if (!v0)
    ((void (*)(uint64_t))sub_1BAC35E00)(v1);
  swift_release();
  return swift_release();
}

uint64_t sub_1BAC36380()
{
  unsigned __int8 v0;

  return ((uint64_t (*)(void))((char *)&loc_1BAC36214 + 4 * byte_1BB8A6181[v0 >> 6]))();
}

void sub_1BAC363C0()
{
  __asm { BR              X11 }
}

void sub_1BAC363EC()
{
  sub_1BAC35E00();
}

void sub_1BAC36408()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  v3 = *v0;
  v2 = v0[1];
  v4 = *(_QWORD *)(*v0 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    v5 = (_BYTE *)(v3 + 40);
    while (1)
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
        if (v1)
          goto LABEL_13;
      }
      v5 += 16;
      if (!--v4)
      {
        swift_bridgeObjectRelease_n();
        break;
      }
    }
  }
  v7 = *(_QWORD *)(v2 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain_n();
    v8 = (_BYTE *)(v2 + 40);
    while (1)
    {
      if ((*v8 & 1) == 0)
      {
        v9 = *((_QWORD *)v8 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v9, 0);
        sub_1BA72C46C(v9, 0);
        if (v1)
          break;
      }
      v8 += 16;
      if (!--v7)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_15;
      }
    }
LABEL_13:
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_15:
  sub_1BAC50FD8();
  if (!v1)
    sub_1BAC50FD8();
}

void sub_1BAC36614()
{
  sub_1BAC359AC();
}

uint64_t sub_1BAC36628(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BABEB390(a1, *v1);
}

uint64_t sub_1BAC36640()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v23 = v0[3];
  v22 = v0[4];
  v5 = *(_QWORD *)(*v0 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v6 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v6 & 1) == 0)
      {
        v7 = *((_QWORD *)v6 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        v8 = v7;
        if (v1)
        {
LABEL_39:
          sub_1BA72C46C(v8, 0);
          sub_1BA72C46C(v7, 0);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v7, 0);
        sub_1BA72C46C(v7, 0);
      }
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    v9 = *(_QWORD *)(v2 + 16);
    if (v9)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = *(_QWORD *)(v2 + 16);
    if (v9)
    {
LABEL_11:
      swift_bridgeObjectRetain_n();
      v10 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v10 & 1) == 0)
        {
          v7 = *((_QWORD *)v10 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          v8 = v7;
          if (v1)
            goto LABEL_39;
          sub_1BA72C46C(v7, 0);
          sub_1BA72C46C(v7, 0);
        }
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v4 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain_n();
    v13 = (_BYTE *)(v4 + 40);
    v14 = v22;
    do
    {
      if ((*v13 & 1) == 0)
      {
        v15 = *((_QWORD *)v13 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        if (v1)
        {
          sub_1BA72C46C(v15, 0);
          sub_1BA72C46C(v15, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v15, 0);
        sub_1BA72C46C(v15, 0);
      }
      v13 += 16;
      --v12;
    }
    while (v12);
    result = swift_bridgeObjectRelease_n();
  }
  else
  {
    v14 = v22;
  }
  v16 = *(_QWORD *)(v23 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain_n();
    v17 = (_BYTE *)(v23 + 40);
    while (1)
    {
      if ((*v17 & 1) == 0)
      {
        v18 = *((_QWORD *)v17 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v18, 0);
        sub_1BA72C46C(v18, 0);
        if (v1)
          break;
      }
      v17 += 16;
      if (!--v16)
      {
        result = swift_bridgeObjectRelease_n();
        goto LABEL_33;
      }
    }
  }
  else
  {
LABEL_33:
    v19 = *(_QWORD *)(v14 + 16);
    if (!v19)
      return result;
    swift_bridgeObjectRetain_n();
    v20 = (_BYTE *)(v14 + 40);
    do
    {
      if ((*v20 & 1) == 0)
      {
        v21 = *((_QWORD *)v20 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v21, 0);
        sub_1BA72C46C(v21, 0);
        if (v1)
          break;
      }
      v20 += 16;
      --v19;
    }
    while (v19);
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BAC369D0()
{
  return sub_1BAC36640();
}

void sub_1BAC369E4()
{
  __asm { BR              X14 }
}

uint64_t sub_1BAC36A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    v4 = (_BYTE *)(v2 + 40);
    while (1)
    {
      if ((*v4 & 1) == 0)
      {
        v5 = *((_QWORD *)v4 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v5, 0);
        sub_1BA72C46C(v5, 0);
        if (v0)
          break;
      }
      v4 += 16;
      if (!--v3)
      {
        result = swift_bridgeObjectRelease_n();
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    v7 = *(_QWORD *)(v1 + 16);
    if (!v7)
      return result;
    swift_bridgeObjectRetain_n();
    v8 = (_BYTE *)(v1 + 40);
    do
    {
      if ((*v8 & 1) == 0)
      {
        v9 = *((_QWORD *)v8 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v9, 0);
        sub_1BA72C46C(v9, 0);
        if (v0)
          break;
      }
      v8 += 16;
      --v7;
    }
    while (v7);
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BAC36CE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v25 = v0[4];
  v26 = v0[3];
  v27 = v0[5];
  v5 = *(_QWORD *)(*v0 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v6 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v6 & 1) == 0)
      {
        v7 = *((_QWORD *)v6 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        v8 = v7;
        if (v1)
        {
LABEL_31:
          sub_1BA72C46C(v8, 0);
          sub_1BA72C46C(v7, 0);
          goto LABEL_48;
        }
        sub_1BA72C46C(v7, 0);
        sub_1BA72C46C(v7, 0);
      }
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    v9 = *(_QWORD *)(v2 + 16);
    if (v9)
      goto LABEL_10;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = *(_QWORD *)(v2 + 16);
    if (v9)
    {
LABEL_10:
      swift_bridgeObjectRetain_n();
      v10 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v10 & 1) == 0)
        {
          v7 = *((_QWORD *)v10 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          v8 = v7;
          if (v1)
            goto LABEL_31;
          sub_1BA72C46C(v7, 0);
          sub_1BA72C46C(v7, 0);
        }
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v4 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain_n();
    v12 = v26;
    swift_bridgeObjectRetain();
    v13 = (_BYTE *)(v4 + 40);
    v14 = v27;
    do
    {
      if ((*v13 & 1) == 0)
      {
        v15 = *((_QWORD *)v13 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        if (v1)
        {
          sub_1BA72C46C(v15, 0);
          sub_1BA72C46C(v15, 0);
          goto LABEL_48;
        }
        sub_1BA72C46C(v15, 0);
        sub_1BA72C46C(v15, 0);
      }
      v13 += 16;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n();
    v16 = *(_QWORD *)(v26 + 16);
    if (v16)
      goto LABEL_26;
  }
  else
  {
    swift_bridgeObjectRetain();
    v12 = v26;
    swift_bridgeObjectRetain();
    v14 = v27;
    v16 = *(_QWORD *)(v26 + 16);
    if (v16)
    {
LABEL_26:
      swift_bridgeObjectRetain_n();
      v17 = (_BYTE *)(v12 + 40);
      do
      {
        if ((*v17 & 1) == 0)
        {
          v7 = *((_QWORD *)v17 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          v8 = v7;
          if (v1)
            goto LABEL_31;
          sub_1BA72C46C(v7, 0);
          sub_1BA72C46C(v7, 0);
        }
        v17 += 16;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v25 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v19 = (_BYTE *)(v25 + 40);
    while (1)
    {
      if ((*v19 & 1) == 0)
      {
        v20 = *((_QWORD *)v19 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v20, 0);
        sub_1BA72C46C(v20, 0);
        if (v1)
          break;
      }
      v19 += 16;
      if (!--v18)
      {
        swift_bridgeObjectRelease_n();
        v21 = *(_QWORD *)(v14 + 16);
        if (!v21)
          goto LABEL_46;
        goto LABEL_40;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = *(_QWORD *)(v14 + 16);
    if (!v21)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_40:
    swift_bridgeObjectRetain_n();
    v22 = (_BYTE *)(v14 + 40);
    do
    {
      if ((*v22 & 1) == 0)
      {
        v23 = *((_QWORD *)v22 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v23, 0);
        sub_1BA72C46C(v23, 0);
        if (v1)
          break;
      }
      v22 += 16;
      --v21;
    }
    while (v21);
  }
LABEL_48:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BAC37194()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v18;

  v3 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v18 = v0[3];
  v5 = *(_QWORD *)(*v0 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v6 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v6 & 1) == 0)
      {
        v7 = *((_QWORD *)v6 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        v8 = v7;
        if (v1)
        {
LABEL_31:
          sub_1BA72C46C(v8, 0);
          sub_1BA72C46C(v7, 0);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v7, 0);
        sub_1BA72C46C(v7, 0);
      }
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    v9 = *(_QWORD *)(v2 + 16);
    if (v9)
      goto LABEL_10;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = *(_QWORD *)(v2 + 16);
    if (v9)
    {
LABEL_10:
      swift_bridgeObjectRetain_n();
      v10 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v10 & 1) == 0)
        {
          v7 = *((_QWORD *)v10 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          v8 = v7;
          if (v1)
            goto LABEL_31;
          sub_1BA72C46C(v7, 0);
          sub_1BA72C46C(v7, 0);
        }
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v4 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v12 = (_BYTE *)(v4 + 40);
    while (1)
    {
      if ((*v12 & 1) == 0)
      {
        v13 = *((_QWORD *)v12 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v13, 0);
        sub_1BA72C46C(v13, 0);
        if (v1)
          break;
      }
      v12 += 16;
      if (!--v11)
      {
        swift_bridgeObjectRelease_n();
        v14 = *(_QWORD *)(v18 + 16);
        if (!v14)
          goto LABEL_30;
        goto LABEL_24;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = *(_QWORD *)(v18 + 16);
    if (!v14)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_24:
    swift_bridgeObjectRetain_n();
    v15 = (_BYTE *)(v18 + 40);
    do
    {
      if ((*v15 & 1) == 0)
      {
        v16 = *((_QWORD *)v15 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v16, 0);
        sub_1BA72C46C(v16, 0);
        if (v1)
          break;
      }
      v15 += 16;
      --v14;
    }
    while (v14);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

void sub_1BAC374B8()
{
  sub_1BAC369E4();
}

uint64_t sub_1BAC374CC()
{
  return sub_1BAC36CE8();
}

uint64_t sub_1BAC374E0()
{
  return sub_1BAC37194();
}

uint64_t sub_1BAC374F4(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v3 = result;
  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (unint64_t)*v1 >> 62;
  if ((v7 - 2) >= 2)
  {
    if ((_DWORD)v7)
    {
      v12 = *(_QWORD *)(v4 + 16);
      v13 = *(_QWORD *)(v4 + 24);
      v14 = *(_QWORD *)(v12 + 16);
      if (v14)
      {
        v17 = v1[2];
        swift_bridgeObjectRetain_n();
        v15 = (_BYTE *)(v12 + 40);
        while (1)
        {
          if ((*v15 & 1) == 0)
          {
            v18 = *((_QWORD *)v15 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            if (v2)
            {
              sub_1BA72C46C(v18, 0);
              sub_1BA72C46C(v18, 0);
              return swift_bridgeObjectRelease_n();
            }
            sub_1BA72C46C(v18, 0);
            sub_1BA72C46C(v18, 0);
          }
          v15 += 16;
          if (!--v14)
          {
            result = swift_bridgeObjectRelease_n();
            v6 = v17;
            break;
          }
        }
      }
      if ((v13 >> 62) - 2 >= 2)
      {
        if (v13 >> 62)
        {
          v16 = *(_QWORD *)(v13 + 24);
          v18 = *(_QWORD *)(v13 + 16);
          v19 = v16;
          result = sub_1BAC3C10C(v3);
          if (v2)
            return result;
          goto LABEL_20;
        }
        if (!*(_BYTE *)(v13 + 40))
        {
          v9 = *(_QWORD *)(v13 + 24);
          v8 = *(_QWORD *)(v13 + 32);
          v10 = *(_QWORD *)(v13 + 16);
          goto LABEL_5;
        }
      }
    }
    else if (!*(_BYTE *)(v4 + 40))
    {
      v9 = *(_QWORD *)(v4 + 24);
      v8 = *(_QWORD *)(v4 + 32);
      v10 = *(_QWORD *)(v4 + 16);
LABEL_5:
      v18 = v10;
      v19 = v9;
      v20 = v8;
      v21 = 1;
      sub_1BA690C00(v10, v9, v8, 0);
      result = sub_1BB6B84D4(&v18, &v21);
      if (v2)
        return result;
      v11 = result;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v10, v9, v11, 0);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
  }
LABEL_20:
  if ((v5 & 0xFE) != 0xC)
  {
    LOBYTE(v18) = v5;
    v19 = v6;
    return sub_1BAC37818(v3);
  }
  return result;
}

uint64_t sub_1BAC3770C(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9[3];
  char v10;

  v3 = *v1;
  v4 = (unint64_t)*v1 >> 62;
  if ((v4 - 2) >= 2)
  {
    if ((_DWORD)v4)
    {
      return sub_1BAC3C10C(result);
    }
    else if (!*(_BYTE *)(v3 + 40))
    {
      v6 = *(_QWORD *)(v3 + 24);
      v5 = *(_QWORD *)(v3 + 32);
      v9[0] = *(_QWORD *)(v3 + 16);
      v7 = v9[0];
      v9[1] = v6;
      v9[2] = v5;
      v10 = 1;
      sub_1BA690C00(v9[0], v6, v5, 0);
      result = sub_1BB6B84D4(v9, &v10);
      if (!v2)
      {
        v8 = result;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v7, v6, v8, 0);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1BAC37804(uint64_t a1)
{
  return sub_1BAC374F4(a1);
}

uint64_t sub_1BAC37818(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  uint64_t v14[3];

  v3 = *(_QWORD *)(v1 + 8);
  if ((v3 >> 62) - 2 >= 2)
  {
    v4 = result;
    if (v3 >> 62)
    {
      v9 = *(_QWORD *)(v3 + 16);
      v10 = *(_QWORD *)(v3 + 24);
      v11 = *(_QWORD *)(v9 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain_n();
        v12 = (_BYTE *)(v9 + 40);
        while (1)
        {
          if ((*v12 & 1) == 0)
          {
            v14[0] = *((_QWORD *)v12 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            if (v2)
            {
              sub_1BA72C46C(v14[0], 0);
              sub_1BA72C46C(v14[0], 0);
              return swift_bridgeObjectRelease_n();
            }
            sub_1BA72C46C(v14[0], 0);
            sub_1BA72C46C(v14[0], 0);
          }
          v12 += 16;
          if (!--v11)
          {
            result = swift_bridgeObjectRelease_n();
            break;
          }
        }
      }
      if ((v10 >> 62) - 2 < 2)
        return result;
      if (v10 >> 62)
        return sub_1BAC3C10C(v4);
      if (*(_BYTE *)(v10 + 40))
        return result;
      v6 = *(_QWORD *)(v10 + 24);
      v5 = *(_QWORD *)(v10 + 32);
      v7 = *(_QWORD *)(v10 + 16);
    }
    else
    {
      if (*(_BYTE *)(v3 + 40))
        return result;
      v6 = *(_QWORD *)(v3 + 24);
      v5 = *(_QWORD *)(v3 + 32);
      v7 = *(_QWORD *)(v3 + 16);
    }
    v14[0] = v7;
    v14[1] = v6;
    v14[2] = v5;
    v13 = 1;
    sub_1BA690C00(v7, v6, v5, 0);
    result = sub_1BB6B84D4(v14, &v13);
    if (!v2)
    {
      v8 = result;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v7, v6, v8, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BAC379E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC37E50(a1, a2, a3, (uint64_t (*)(void))sub_1BAC3770C);
}

uint64_t sub_1BAC37A04(uint64_t a1)
{
  return sub_1BAC3770C(a1);
}

void sub_1BAC37A2C()
{
  __asm { BR              X10 }
}

void sub_1BAC37A9C()
{
  sub_1BB311078();
}

uint64_t sub_1BAC37CF4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8[3];
  char v9;

  if (!*(_BYTE *)(v1 + 24))
  {
    v4 = *(_QWORD *)v1;
    v3 = *(_QWORD *)(v1 + 8);
    v5 = *(_QWORD *)(v1 + 16);
    v8[0] = v4;
    v8[1] = v3;
    v8[2] = v5;
    v9 = 6;
    sub_1BA690C00(v4, v3, v5, 0);
    sub_1BA690C00(v4, v3, v5, 0);
    v6 = sub_1BB6B84D4(v8, &v9);
    if (!v2)
    {
      v7 = v6;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v4, v3, v7, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return sub_1BA5A7EF8(v4, v3, v5, 0);
  }
  return result;
}

void sub_1BAC37DE8()
{
  sub_1BAC37A2C();
}

void sub_1BAC37DFC()
{
  uint64_t v0;

  if ((*(_QWORD *)(v0 + 8) & 0xFELL) != 0xC)
    sub_1BA9F22C4();
}

uint64_t sub_1BAC37E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC37E50(a1, a2, a3, (uint64_t (*)(void))sub_1BA9F22C4);
}

uint64_t sub_1BAC37E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  _QWORD *v4;
  uint64_t result;

  if ((*v4 & 0xFELL) != 0xC)
    return a4();
  return result;
}

void sub_1BAC37E88()
{
  sub_1BA9F22C4();
}

void sub_1BAC37EB0()
{
  sub_1BB311078();
}

uint64_t sub_1BAC37EF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  uint64_t result;
  unsigned int v7;

  v4 = *(unsigned __int8 *)(v1 + 106);
  v5 = *(unsigned __int16 *)(v1 + 104);
  result = sub_1BA9C813C(a1);
  if (!v2)
  {
    v7 = (v5 | (v4 << 16)) >> 21;
    if (v7 >= 5 && v7 == 5)
      return sub_1BA9C813C(a1);
  }
  return result;
}

uint64_t sub_1BAC37FAC(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;

  v2 = *(unsigned __int8 *)(v1 + 50) >> 5;
  if (v2 >= 5 && v2 == 5)
    return sub_1BA9C813C(result);
  return result;
}

uint64_t sub_1BAC38014(uint64_t a1)
{
  return sub_1BA9C813C(a1);
}

uint64_t sub_1BAC38054(uint64_t a1)
{
  return sub_1BAC37CF4(a1);
}

uint64_t sub_1BAC38068(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v4 = *v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain();
  sub_1BABEBCF0(a1, v5);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_beginAccess();
    v7 = *(_QWORD *)(v4 + 40);
    swift_bridgeObjectRetain();
    sub_1BABF4888(a1, v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAC38124()
{
  uint64_t v0;

  sub_1BAC35E00();
  if (!v0)
    sub_1BA9F22C4();
}

void sub_1BAC3816C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v3 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if (!*(_BYTE *)(v0 + 16))
  {
    v10 = *(_QWORD *)(v3 + 16);
    if (!v10)
      return;
    swift_bridgeObjectRetain();
    v11 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v11 & 1) == 0)
      {
        v12 = *((_QWORD *)v11 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v12, 0);
        sub_1BA72C46C(v12, 0);
        if (v1)
          break;
      }
      v11 += 16;
      --v10;
    }
    while (v10);
    v7 = v3;
    v8 = v2;
    v9 = 0;
    goto LABEL_15;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v4 = *(_QWORD *)(v3 + 16);
    if (!v4)
      return;
    swift_bridgeObjectRetain();
    v5 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
        if (v1)
          break;
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    v7 = v3;
    v8 = v2;
    v9 = 1;
LABEL_15:
    sub_1BA76F57C(v7, v8, v9);
    return;
  }
  sub_1BAC4375C();
}

void sub_1BAC382E0()
{
  sub_1BAC3816C();
}

void sub_1BAC382F4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v1;
  swift_beginAccess();
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v5 = v1[6];
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v6; ++i)
      {
        v8 = *(_QWORD *)(v5 + 8 * i + 32);
        sub_1BA7196DC(v8);
        sub_1BAC2F274();
        sub_1BA719340(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v9 = v1[8];
    if (v9 >> 62 == 1)
    {
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      sub_1BA67D3F4(v3[8]);
      sub_1BA67D3F4(v10);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v10, v11);
      sub_1BA6EEDB4(v10);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v9);
    }
    swift_beginAccess();
    v12 = v3[10];
    swift_bridgeObjectRetain();
    sub_1BABEBCF0(a1, v12);
    swift_bridgeObjectRelease();
    sub_1BAC38628();
    if ((~v3[13] & 0xF000000000000007) != 0)
      sub_1BB5635E8();
    if ((~v3[14] & 0xF000000000000007) != 0)
      sub_1BAC38628();
    if ((~v3[15] & 0xF000000000000007) != 0)
      sub_1BB5635E8();
    v13 = v3[18];
    if (v13)
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v13 + 72);
      if (v14)
      {
        swift_bridgeObjectRetain();
        sub_1BABEB4B0(a1, v14);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v15 = *(_QWORD *)(v13 + 88);
      swift_bridgeObjectRetain();
      sub_1BAC26724(a1, v15);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v16 = v3[23];
    swift_bridgeObjectRetain();
    sub_1BAC24BA4(a1, v16);
    swift_bridgeObjectRelease();
  }
}

void sub_1BAC38628()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X11 }
}

void sub_1BAC386F4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  if (v4 && (v5 = *(_QWORD *)(v4 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v7 = *(_QWORD *)(v4 + 8 * v6 + 32);
      swift_retain();
      sub_1BAC44B58(v2, v7);
      if (v1)
        break;
      ++v6;
      swift_release();
      if (v5 == v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_7:
    if (v3)
      sub_1BAC04404(v2, v3);
  }
}

void sub_1BAC38B04(uint64_t a1)
{
  sub_1BAC382F4(a1);
}

void sub_1BAC38B24(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v2;
  v6 = *v1;
  v5 = v1[1];
  if (*v1 && (v7 = *(_QWORD *)(v6 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    v8 = 0;
    while (1)
    {
      v9 = *(_QWORD *)(v6 + 8 * v8 + 32);
      swift_retain();
      sub_1BAC44B58(a1, v9);
      if (v3)
        break;
      ++v8;
      swift_release();
      if (v7 == v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_7:
    if (v5)
      sub_1BAC04404(a1, v5);
  }
}

void sub_1BAC38BF0()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(*(_QWORD *)v0 + 41))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X10 }
}

uint64_t sub_1BAC38C50()
{
  unsigned int v0;

  return ((uint64_t (*)(void))((char *)sub_1BAC38C6C + 4 * byte_1BB8A61B6[(v0 >> 4) & 3]))();
}

void sub_1BAC38C6C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;

  if (v4 >> 6 < 2)
  {
    if ((_BYTE)v3)
      v5 = 1;
    else
      v5 = (v0 & 0xF000000000000007) == 0xF000000000000007;
    if (!v5)
LABEL_9:
      sub_1BB5635E8();
  }
  else
  {
    if ((v4 & 0xF) == 0)
    {
      if ((~v1 & 0xF000000000000007) == 0)
        return;
      goto LABEL_9;
    }
    if ((v4 & 0xF) != 1)
    {
      sub_1BAC65170(v0, v1, v3, v4, v2, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
      sub_1BAC65170(v0, v1, v3, v4, v2, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    }
  }
}

void sub_1BAC38E00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  char *v16;
  _QWORD v17[8];

  v17[6] = a1;
  v1 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA4A3FB4(0, &qword_1ED3BB1E0, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
  MEMORY[0x1E0C80A78](v2);
  v17[5] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FormatURL();
  v17[3] = *(_QWORD *)(v5 - 8);
  v17[4] = v5;
  MEMORY[0x1E0C80A78](v5);
  v17[1] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v17[2] = (char *)v17 - v8;
  v9 = type metadata accessor for FormatPostPurchase();
  MEMORY[0x1E0C80A78](v9);
  sub_1BA4A3FB4(0, &qword_1ED3BE290, v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v13);
  sub_1BA4C2DD8(v17[7], (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  v16 = (char *)sub_1BAC39034 + 4 * byte_1BB8A61BA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAC39034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1BA5D5518(v3, v5, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  sub_1BA57B488(v5, v6, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 48))(v6, 1, v1) == 1)
  {
    sub_1BA502AD0(v5, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    return sub_1BA502AD0(v6, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  }
  else
  {
    sub_1BA4C2DD8(v6, v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 - 152) + 48))(v2, 2, *(_QWORD *)(v7 - 144)))
    {
      v9 = *(_QWORD *)(v7 - 160);
      sub_1BA5193C4(v2, v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v10 = *(_QWORD *)(v7 - 168);
      sub_1BA4C2DD8(v9, v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else if (!*(_BYTE *)(v10 + 24))
        {
          v13 = *(_QWORD *)v10;
          v12 = *(_QWORD *)(v10 + 8);
          v14 = *(_QWORD *)(v10 + 16);
          *(_QWORD *)(v7 - 104) = *(_QWORD *)v10;
          *(_QWORD *)(v7 - 96) = v12;
          *(_QWORD *)(v7 - 88) = v14;
          *(_BYTE *)(v7 - 65) = 6;
          sub_1BA690C00(v13, v12, v14, 0);
          v15 = sub_1BB6B84D4((uint64_t *)(v7 - 104), (char *)(v7 - 65));
          if (!v4)
          {
            v16 = v15;
            swift_bridgeObjectRetain();
            sub_1BB3D7F90(v13, v12, v16, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1BA5A7EF8(v13, v12, v14, 0);
        }
      }
      else
      {
        sub_1BA4A2E80(v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA502AD0(v5, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    return sub_1BA4A2E80(v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
  }
}

void sub_1BAC39330()
{
  sub_1BAC38628();
}

void sub_1BAC39344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)v0;
  v3 = *(_QWORD *)(v0 + 8);
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  if (!*(_BYTE *)(v0 + 56))
  {
    v25 = v8 & 0xF000000000000007;
    if ((v8 & 0xF000000000000007) == 0xD000000000000007)
      return;
    v26 = v6;
    if ((~v2 & 0xF000000000000007) != 0)
    {
      sub_1BA7638A4(v2, v3, v5, v4, v7, v6, v8, (void (*)(void))sub_1BA5E7FF4, sub_1BA6E6C68);
      sub_1BAC35E00();
      if (v1)
      {
LABEL_16:
        v17 = v2;
        v18 = v3;
        v19 = v5;
        v20 = v4;
        v21 = v7;
        v22 = v26;
        v23 = v8;
        v24 = 0;
LABEL_17:
        sub_1BA763860(v17, v18, v19, v20, v21, v22, v23, v24);
        return;
      }
      v25 = v8 & 0xF000000000000007;
    }
    else
    {
      sub_1BA7638A4(v2, v3, v5, v4, v7, v6, v8, (void (*)(void))sub_1BA5E7FF4, sub_1BA6E6C68);
    }
    if (v25 != 0xF000000000000007)
      sub_1BA9F22C4();
    goto LABEL_16;
  }
  v9 = v2 & 0xF000000000000007;
  if (*(_BYTE *)(v0 + 56) == 1 && v9 != 0xD000000000000007)
  {
    if (v9 != 0xF000000000000007)
    {
      sub_1BA9F22C4();
      return;
    }
    v11 = *(_QWORD *)v0;
    v12 = *(_QWORD *)(v0 + 8);
    v13 = *(_QWORD *)(v0 + 16);
    v14 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 32);
    v16 = *(_QWORD *)(v0 + 40);
    sub_1BA763860(v11, v12, v13, v14, v15, v6, v8, 1);
    v17 = v2;
    v18 = v3;
    v19 = v5;
    v20 = v4;
    v21 = v7;
    v22 = v16;
    v23 = v8;
    v24 = 1;
    goto LABEL_17;
  }
}

void sub_1BAC39524()
{
  sub_1BAC39344();
}

void sub_1BAC39538()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[6];
  if ((~*v0 & 0xF000000000000007) == 0 || (sub_1BAC35E00(), !v1))
  {
    if ((~v2 & 0xF000000000000007) != 0)
      sub_1BA9F22C4();
  }
}

void sub_1BAC395A4()
{
  _QWORD *v0;

  if ((~*v0 & 0xF000000000000007) != 0)
    sub_1BA9F22C4();
}

void sub_1BAC395D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 8);
  sub_1BAC35E00();
  if (!v2)
    sub_1BABE429C(a1, v4);
}

void sub_1BAC3961C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8[3];
  uint64_t v9;

  if (*(_BYTE *)(v0 + 24) == 3)
  {
    v3 = *(_QWORD *)v0;
    v2 = *(_QWORD *)(v0 + 8);
    v4 = *(_QWORD *)(v0 + 16);
    v8[0] = v3;
    v8[1] = v2;
    v8[2] = v4;
    v7 = 7;
    sub_1BA745F88(v3, v2, v4, 3);
    sub_1BA745F88(v3, v2, v4, 3);
    v5 = sub_1BB6B84D4(v8, &v7);
    if (v1)
    {
      sub_1BA6F3F50(v3, v2, v4, 3);
      return;
    }
    v6 = v5;
    swift_bridgeObjectRetain();
    sub_1BB3D7F90(v3, v2, v6, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6F3F50(v3, v2, v4, 3);
  }
  sub_1BAC68CF0((_QWORD *)(v0 + 32), &v9);
  sub_1BAC68CF0(&v9, v8);
  sub_1BAC35E00();
}

void sub_1BAC39760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BAC35E00();
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    sub_1BABE429C(a1, a3);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BAC35E00();
  }
}

uint64_t sub_1BAC39820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;

  swift_retain();
  swift_bridgeObjectRetain();
  a5(a1);
  if (v5)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BAC2EAEC(a1, a3, a5);
    swift_release();
    swift_bridgeObjectRelease_n();
    return ((uint64_t (*)(uint64_t))a5)(a1);
  }
}

uint64_t sub_1BAC398F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;

  result = a4();
  if (!v4)
    return ((uint64_t (*)(uint64_t))a4)(a1);
  return result;
}

uint64_t sub_1BAC39948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v2;
  v6 = a1;
  v7 = *(_QWORD *)(a2 + 24);
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v13 = MEMORY[0x1E0C80A78](v12);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v11, v13);
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  if (swift_dynamicCast())
  {
    v24 = v4;
    v16 = v6;
    v18 = *((_QWORD *)&v26 + 1);
    v17 = v27;
    __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 8))(v16, v18, v17);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
    if (v3)
      return result;
    v6 = v16;
    v4 = v24;
  }
  else
  {
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    sub_1BA65DB80((uint64_t)&v25, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v9, v4 + *(int *)(a2 + 52), v7);
  if (swift_dynamicCast())
  {
    v20 = v6;
    v21 = *((_QWORD *)&v26 + 1);
    v22 = v27;
    __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 8))(v20, v21, v22);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    return sub_1BA65DB80((uint64_t)&v25, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
}

void sub_1BAC39B6C()
{
  sub_1BAC35E00();
}

void sub_1BAC39B80()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC39BC0()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  swift_retain();
  ((void (*)(uint64_t))sub_1BAC39B80)(v1);
  if (!v0)
    ((void (*)(uint64_t))sub_1BAC39B80)(v1);
  swift_release();
  return swift_release();
}

uint64_t sub_1BAC39C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC53944(a1, a2, a3, (uint64_t (*)(void))sub_1BAC39B80, (uint64_t (*)(uint64_t))sub_1BAC39B80);
}

void sub_1BAC39CB8()
{
  sub_1BAC35E00();
}

uint64_t sub_1BAC39CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC53944(a1, a2, a3, (uint64_t (*)(void))sub_1BAC35E00, (uint64_t (*)(uint64_t))sub_1BAC39B80);
}

uint64_t sub_1BAC39D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC539E4(a1, a2, a3, (uint64_t (*)(void))sub_1BAC39B80, (uint64_t (*)(uint64_t, uint64_t))sub_1BABE429C);
}

void sub_1BAC39D28()
{
  sub_1BAC39B80();
}

void sub_1BAC39D3C()
{
  sub_1BAC39B80();
}

void sub_1BAC39D64()
{
  __asm { BR              X11 }
}

void sub_1BAC39DA0()
{
  sub_1BAC35E00();
}

void sub_1BAC39E30()
{
  sub_1BAC39D64();
}

uint64_t sub_1BAC39E44()
{
  return sub_1BAC2FDCC();
}

void sub_1BAC39E7C()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 25))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X10 }
}

void sub_1BAC39EDC()
{
  sub_1BAC3B1B8();
}

void sub_1BAC3A0FC()
{
  sub_1BAC39E7C();
}

uint64_t sub_1BAC3A148(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  void *v11;

  v11 = a2;
  sub_1BA49DEA8();
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  v4 = a2;
  if (swift_dynamicCast())
  {
    v5 = *((_QWORD *)&v9 + 1);
    v6 = v10;
    __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, v5, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  }
  else
  {
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
    return sub_1BA65DB80((uint64_t)&v8, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
}

uint64_t sub_1BAC3A240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BABE3250(a1, a2, a3, a4);
}

uint64_t sub_1BAC3A260(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v6 = v5;
  if (a5 < 0)
  {
    v105 = result;
    v7 = *(_QWORD *)(a5 + 16);
    v8 = *(_QWORD *)(v7 + 24);
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_retain();
      v104 = v7;
      swift_retain();
      swift_bridgeObjectRetain();
      v10 = (_QWORD *)(v8 + 56);
      do
      {
        v11 = *(v10 - 3);
        v12 = *(v10 - 2);
        v13 = *((unsigned __int8 *)v10 - 8);
        v14 = *v10;
        sub_1BA73B1CC(v11, v12, *((_BYTE *)v10 - 8));
        swift_retain();
        sub_1BAC3A260(v105, v11, v12, v13, v14);
        if (v5)
        {
          sub_1BA73B1B8(v11, v12, v13);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          return swift_release();
        }
        v10 += 4;
        sub_1BA73B1B8(v11, v12, v13);
        swift_release();
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v104 + 32);
      if ((v15 & 0x8000000000000000) == 0)
        goto LABEL_93;
    }
    else
    {
      swift_retain();
      swift_retain();
      v15 = *(_QWORD *)(v7 + 32);
      if ((v15 & 0x8000000000000000) == 0)
      {
LABEL_93:
        swift_release();
        return swift_release();
      }
    }
    v16 = *(_QWORD *)(v15 + 16);
    v17 = *(_QWORD *)(v16 + 24);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      swift_retain();
      v103 = v16;
      swift_retain();
      swift_bridgeObjectRetain();
      v19 = (_QWORD *)(v17 + 56);
      do
      {
        v21 = *(v19 - 3);
        v20 = *(v19 - 2);
        v22 = *((unsigned __int8 *)v19 - 8);
        v23 = *v19;
        sub_1BA73B1CC(v21, v20, *((_BYTE *)v19 - 8));
        swift_retain();
        sub_1BAC3A260(v105, v21, v20, v22, v23);
        if (v5)
        {
          sub_1BA73B1B8(v21, v20, v22);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_113;
        }
        v19 += 4;
        sub_1BA73B1B8(v21, v20, v22);
        swift_release();
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v103 + 32);
      if ((v24 & 0x8000000000000000) == 0)
        goto LABEL_92;
    }
    else
    {
      swift_retain();
      swift_retain();
      v24 = *(_QWORD *)(v16 + 32);
      if ((v24 & 0x8000000000000000) == 0)
      {
LABEL_92:
        swift_release();
        swift_release();
        goto LABEL_93;
      }
    }
    v25 = *(_QWORD *)(v24 + 16);
    v26 = *(_QWORD *)(v25 + 24);
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      swift_retain();
      v102 = v25;
      swift_retain();
      swift_bridgeObjectRetain();
      v28 = (_QWORD *)(v26 + 56);
      while (1)
      {
        v29 = *(v28 - 3);
        v30 = *(v28 - 2);
        v31 = *((unsigned __int8 *)v28 - 8);
        v32 = *v28;
        sub_1BA73B1CC(v29, v30, *((_BYTE *)v28 - 8));
        swift_retain();
        sub_1BAC3A260(v105, v29, v30, v31, v32);
        if (v5)
          break;
        v28 += 4;
        sub_1BA73B1B8(v29, v30, v31);
        swift_release();
        if (!--v27)
        {
          swift_bridgeObjectRelease();
          v25 = v102;
          goto LABEL_24;
        }
      }
      sub_1BA73B1B8(v29, v30, v31);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_112:
      swift_release();
      swift_release();
LABEL_113:
      swift_release();
      swift_release();
      return swift_release();
    }
    swift_retain();
    swift_retain();
LABEL_24:
    v33 = *(_QWORD *)(v25 + 32);
    if ((v33 & 0x8000000000000000) == 0)
    {
LABEL_91:
      swift_release();
      swift_release();
      goto LABEL_92;
    }
    v34 = *(_QWORD *)(v33 + 16);
    v35 = *(_QWORD *)(v34 + 24);
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v37 = (_QWORD *)(v35 + 56);
      while (1)
      {
        v38 = *(v37 - 3);
        v39 = *(v37 - 2);
        v40 = *((unsigned __int8 *)v37 - 8);
        v41 = *v37;
        sub_1BA73B1CC(v38, v39, *((_BYTE *)v37 - 8));
        swift_retain();
        sub_1BAC3A260(v105, v38, v39, v40, v41);
        if (v6)
          break;
        v37 += 4;
        sub_1BA73B1B8(v38, v39, v40);
        swift_release();
        if (!--v36)
        {
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
      }
      sub_1BA73B1B8(v38, v39, v40);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_111;
    }
    swift_retain();
    swift_retain();
LABEL_32:
    v42 = *(_QWORD *)(v34 + 32);
    if ((v42 & 0x8000000000000000) == 0)
    {
      swift_release();
LABEL_90:
      swift_release();
      goto LABEL_91;
    }
    v43 = *(_QWORD *)(v42 + 16);
    v44 = *(_QWORD *)(*(_QWORD *)(v43 + 24) + 16);
    if (v44)
    {
      v45 = *(_QWORD *)(v43 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v46 = (_QWORD *)(v45 + 56);
      while (1)
      {
        v47 = *(v46 - 3);
        v48 = *(v46 - 2);
        v49 = *((unsigned __int8 *)v46 - 8);
        v50 = *v46;
        sub_1BA73B1CC(v47, v48, *((_BYTE *)v46 - 8));
        swift_retain();
        sub_1BAC3A260(v105, v47, v48, v49, v50);
        if (v6)
          break;
        v46 += 4;
        sub_1BA73B1B8(v47, v48, v49);
        swift_release();
        if (!--v44)
        {
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
      }
      sub_1BA73B1B8(v47, v48, v49);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_110;
    }
    swift_retain();
    swift_retain();
LABEL_41:
    v51 = *(_QWORD *)(v43 + 32);
    if ((v51 & 0x8000000000000000) == 0)
    {
LABEL_89:
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_90;
    }
    v52 = *(_QWORD *)(v51 + 16);
    v53 = *(_QWORD *)(*(_QWORD *)(v52 + 24) + 16);
    if (v53)
    {
      v54 = *(_QWORD *)(v52 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v55 = (_QWORD *)(v54 + 56);
      while (1)
      {
        v56 = *(v55 - 3);
        v57 = *(v55 - 2);
        v58 = *((unsigned __int8 *)v55 - 8);
        v59 = *v55;
        sub_1BA73B1CC(v56, v57, *((_BYTE *)v55 - 8));
        swift_retain();
        sub_1BAC3A260(v105, v56, v57, v58, v59);
        if (v6)
          break;
        v55 += 4;
        sub_1BA73B1B8(v56, v57, v58);
        swift_release();
        if (!--v53)
        {
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
      }
      sub_1BA73B1B8(v56, v57, v58);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_109;
    }
    swift_retain();
    swift_retain();
LABEL_50:
    v60 = *(_QWORD *)(v52 + 32);
    if ((v60 & 0x8000000000000000) == 0)
    {
      swift_release();
      swift_release();
      goto LABEL_89;
    }
    v61 = *(_QWORD *)(*(_QWORD *)(v60 + 16) + 24);
    v62 = *(_QWORD *)(v61 + 16);
    v101 = *(_QWORD *)(v60 + 16);
    if (v62)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v63 = (_QWORD *)(v61 + 56);
      while (1)
      {
        v64 = *(v63 - 3);
        v65 = *(v63 - 2);
        v66 = *((unsigned __int8 *)v63 - 8);
        v67 = *v63;
        sub_1BA73B1CC(v64, v65, *((_BYTE *)v63 - 8));
        swift_retain();
        sub_1BAC3A260(v105, v64, v65, v66, v67);
        if (v6)
          break;
        v63 += 4;
        sub_1BA73B1B8(v64, v65, v66);
        swift_release();
        if (!--v62)
        {
          swift_bridgeObjectRelease();
          goto LABEL_59;
        }
      }
      sub_1BA73B1B8(v64, v65, v66);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_108;
    }
    swift_retain();
    swift_retain();
LABEL_59:
    v68 = *(_QWORD *)(v101 + 32);
    if ((v68 & 0x8000000000000000) == 0)
    {
LABEL_88:
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_89;
    }
    v100 = *(_QWORD *)(v68 + 16);
    v69 = *(_QWORD *)(v100 + 24);
    v70 = *(_QWORD *)(v69 + 16);
    if (v70)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v71 = (_QWORD *)(v69 + 56);
      while (1)
      {
        v72 = *(v71 - 3);
        v73 = *(v71 - 2);
        v74 = *((unsigned __int8 *)v71 - 8);
        v75 = *v71;
        sub_1BA73B1CC(v72, v73, *((_BYTE *)v71 - 8));
        swift_retain();
        sub_1BAC3A260(v105, v72, v73, v74, v75);
        if (v6)
          break;
        v71 += 4;
        sub_1BA73B1B8(v72, v73, v74);
        swift_release();
        if (!--v70)
        {
          swift_bridgeObjectRelease();
          goto LABEL_67;
        }
      }
      sub_1BA73B1B8(v72, v73, v74);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_107;
    }
    swift_retain();
    swift_retain();
LABEL_67:
    v76 = *(_QWORD *)(v100 + 32);
    if ((v76 & 0x8000000000000000) == 0)
    {
LABEL_87:
      swift_release();
      swift_release();
      goto LABEL_88;
    }
    v99 = *(_QWORD *)(v76 + 16);
    v77 = *(_QWORD *)(*(_QWORD *)(v99 + 24) + 16);
    if (v77)
    {
      v78 = *(_QWORD *)(v99 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v79 = (_QWORD *)(v78 + 56);
      while (1)
      {
        v80 = *(v79 - 3);
        v81 = *(v79 - 2);
        v82 = *((unsigned __int8 *)v79 - 8);
        v83 = *v79;
        sub_1BA73B1CC(v80, v81, *((_BYTE *)v79 - 8));
        swift_retain();
        sub_1BAC3A260(v105, v80, v81, v82, v83);
        if (v6)
          break;
        v79 += 4;
        sub_1BA73B1B8(v80, v81, v82);
        swift_release();
        if (!--v77)
        {
          swift_bridgeObjectRelease();
          goto LABEL_75;
        }
      }
      sub_1BA73B1B8(v80, v81, v82);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_106;
    }
    swift_retain();
    swift_retain();
LABEL_75:
    v84 = *(_QWORD *)(v99 + 32);
    if ((v84 & 0x8000000000000000) == 0)
    {
LABEL_86:
      swift_release();
      swift_release();
      goto LABEL_87;
    }
    v98 = *(_QWORD *)(v84 + 16);
    v85 = *(_QWORD *)(*(_QWORD *)(v98 + 24) + 16);
    if (v85)
    {
      swift_retain();
      swift_retain();
      v86 = (_QWORD *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        v87 = *(v86 - 3);
        v88 = *(v86 - 2);
        v89 = *((unsigned __int8 *)v86 - 8);
        v90 = *v86;
        sub_1BA73B1CC(v87, v88, *((_BYTE *)v86 - 8));
        swift_retain();
        sub_1BAC3A260(v105, v87, v88, v89, v90);
        if (v6)
          break;
        v86 += 4;
        sub_1BA73B1B8(v87, v88, v89);
        swift_release();
        if (!--v85)
        {
          swift_bridgeObjectRelease();
          goto LABEL_84;
        }
      }
      sub_1BA73B1B8(v87, v88, v89);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      swift_retain();
      swift_retain();
LABEL_84:
      v91 = *(_QWORD *)(v98 + 32);
      if ((v91 & 0x8000000000000000) == 0)
      {
        swift_release();
        swift_release();
        goto LABEL_86;
      }
      v92 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v91 + 16) + 24) + 16);
      if (!v92)
      {
        swift_retain();
        swift_retain();
LABEL_101:
        sub_1BABE32EC(v105, &type metadata for FormatAccessibilityData, &off_1E729AA90);
        if (!v6)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_86;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
LABEL_105:
        swift_release();
LABEL_106:
        swift_release();
        swift_release();
LABEL_107:
        swift_release();
        swift_release();
LABEL_108:
        swift_release();
        swift_release();
LABEL_109:
        swift_release();
        swift_release();
LABEL_110:
        swift_release();
        swift_release();
LABEL_111:
        swift_release();
        swift_release();
        goto LABEL_112;
      }
      swift_retain();
      swift_retain();
      v93 = (_QWORD *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        v94 = *(v93 - 3);
        v95 = *(v93 - 2);
        v96 = *((unsigned __int8 *)v93 - 8);
        v97 = *v93;
        sub_1BA73B1CC(v94, v95, *((_BYTE *)v93 - 8));
        swift_retain();
        sub_1BAC3A260(v105, v94, v95, v96, v97);
        if (v6)
          break;
        v93 += 4;
        sub_1BA73B1B8(v94, v95, v96);
        swift_release();
        if (!--v92)
        {
          swift_bridgeObjectRelease();
          goto LABEL_101;
        }
      }
      sub_1BA73B1B8(v94, v95, v96);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    swift_bridgeObjectRelease();
    goto LABEL_105;
  }
  return result;
}

uint64_t sub_1BAC3B084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2 + *(int *)(v7 + 28), v4, v5);
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  if (swift_dynamicCast())
  {
    v9 = *((_QWORD *)&v13 + 1);
    v10 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, v9, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  else
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    return sub_1BA65DB80((uint64_t)&v12, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
}

uint64_t sub_1BAC3B1A4(uint64_t a1, uint64_t a2)
{
  return sub_1BAC3B084(a1, a2);
}

void sub_1BAC3B1B8()
{
  __asm { BR              X10 }
}

void sub_1BAC3B1FC()
{
  char v0;
  uint64_t v1;
  BOOL v2;

  if (v0)
    v2 = 1;
  else
    v2 = (v1 & 0xF000000000000007) == 0xF000000000000007;
  if (!v2)
    sub_1BB5635E8();
}

void sub_1BAC3B244()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  if (v2 >> 6 > 1)
  {
    if ((v2 & 0xF) != 0)
    {
      if ((v2 & 0xF) != 1)
      {
        sub_1BA856ECC(v3, v1, v0, v2, (uint64_t (*)(void))sub_1BA7EDFFC);
        sub_1BA856ECC(v3, v1, v0, v2, (uint64_t (*)(void))sub_1BA7EDFFC);
        sub_1BA856F00(v3, v1, v0, v2 & 0xCF, (uint64_t (*)(void))sub_1BA7EDFFC);
      }
    }
    else if ((~v1 & 0xF000000000000007) != 0)
    {
      JUMPOUT(0x1BAC3B218);
    }
  }
  else if ((_BYTE)v0)
  {
    if (v0 != 1)
      sub_1BA856ECC(v3, v1, v0, v2, (uint64_t (*)(void))sub_1BA7EDFFC);
  }
  else if ((~v3 & 0xF000000000000007) != 0)
  {
    JUMPOUT(0x1BAC3B214);
  }
  JUMPOUT(0x1BAC3B228);
}

void sub_1BAC3B330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  BOOL v4;
  uint64_t v5;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(unsigned __int8 *)(v0 + 24);
  if (v3 >> 6 > 1)
  {
    v5 = *(_QWORD *)(v0 + 8);
    if ((v3 & 0x3F) != 0)
    {
      if ((v3 & 0x3F) != 1)
      {
        sub_1BA856F00(v1, v5, v2, v3, (uint64_t (*)(void))sub_1BA7EDFFC);
        sub_1BA856F00(v1, v5, v2, v3, (uint64_t (*)(void))sub_1BA7EDFFC);
      }
    }
    else if ((~v5 & 0xF000000000000007) != 0)
    {
LABEL_6:
      sub_1BB5635E8();
    }
  }
  else
  {
    if (*(_QWORD *)(v0 + 16))
      v4 = 1;
    else
      v4 = (v1 & 0xF000000000000007) == 0xF000000000000007;
    if (!v4)
      goto LABEL_6;
  }
}

uint64_t sub_1BAC3B428(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8[3];

  if (*(_BYTE *)(v1 + 24) == 1)
  {
    v4 = *(_QWORD *)(v1 + 8);
    v3 = *(_QWORD *)(v1 + 16);
    v5 = *(_QWORD *)v1;
    v8[0] = v5;
    v8[1] = v4;
    v8[2] = v3;
    v7 = 5;
    sub_1BA60DF54(v5, v4, v3, 1);
    result = sub_1BB6B84D4(v8, &v7);
    if (!v2)
    {
      v6 = result;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1BAC3B4EC()
{
  sub_1BAC39E7C();
}

void sub_1BAC3B500(uint64_t a1, _QWORD *a2)
{
  sub_1BABE317C(a1, a2);
}

uint64_t sub_1BAC3B514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2 + *(int *)(v7 + 44), v4, v5);
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  if (swift_dynamicCast())
  {
    v9 = *((_QWORD *)&v13 + 1);
    v10 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, v9, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  else
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    return sub_1BA65DB80((uint64_t)&v12, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
}

uint64_t sub_1BAC3B634(uint64_t a1, uint64_t a2)
{
  return sub_1BAC3B514(a1, a2);
}

void sub_1BAC3B648()
{
  sub_1BABE35BC();
}

uint64_t sub_1BAC3B65C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  _QWORD v22[8];

  v22[7] = a1;
  sub_1BA74E17C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent);
  MEMORY[0x1E0C80A78](v2);
  v22[6] = (char *)v22 - v3;
  sub_1BA74E17C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont);
  MEMORY[0x1E0C80A78](v4);
  v22[5] = (char *)v22 - v5;
  sub_1BA74E17C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent);
  MEMORY[0x1E0C80A78](v6);
  v22[4] = (char *)v22 - v7;
  sub_1BA74E17C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent);
  MEMORY[0x1E0C80A78](v8);
  v22[3] = (char *)v22 - v9;
  sub_1BA74E17C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor);
  MEMORY[0x1E0C80A78](v10);
  v22[2] = (char *)v22 - v11;
  v12 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v22 - v17;
  result = *v1;
  if (*(_QWORD *)(*v1 + 16))
  {
    v20 = result + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v22[1] = *v1;
    swift_bridgeObjectRetain();
    sub_1BA4C2DD8(v20, (uint64_t)v18, type metadata accessor for FormatPropertyDefinition);
    sub_1BA4C2DD8((uint64_t)v18, (uint64_t)v14, type metadata accessor for FormatPropertyDefinition);
    v21 = (char *)&loc_1BAC3B918 + 4 * byte_1BB8A61D6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1BAC3BCA8(uint64_t a1)
{
  return sub_1BAC3B65C(a1);
}

void sub_1BAC3BCBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v3 = v1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v1[7];
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v9 = v1[9];
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v30 = v1;
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v10; ++i)
      {
        v12 = *(_QWORD *)(v9 + 8 * i + 32);
        v28 = v12;
        sub_1BA7196DC(v12);
        sub_1BAC2F274();
        sub_1BA719340(v12);
      }
      swift_bridgeObjectRelease_n();
      v3 = v30;
    }
    v13 = v3[10];
    if (v13)
    {
      v14 = *(_QWORD *)(v13 + 56);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 16);
        if (v15)
        {
          v26 = v3[10];
          v27 = v14;
          v30 = v3;
          v16 = v14 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v17 = *(_QWORD *)(v6 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1BA4C2DD8(v16, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v28 = *((_QWORD *)v8 + 2);
            swift_retain();
            sub_1BAC49F9C();
            swift_release();
            sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v16 += v17;
            --v15;
          }
          while (v15);
          swift_bridgeObjectRelease();
          v3 = v30;
          v13 = v26;
        }
      }
      swift_beginAccess();
      v18 = *(_QWORD *)(v13 + 64);
      swift_bridgeObjectRetain();
      sub_1BABF49B8(a1, v18);
      swift_bridgeObjectRelease();
    }
    v19 = v3[11];
    if (v19)
    {
      swift_beginAccess();
      v20 = *(_QWORD *)(v19 + 72);
      if (v20)
      {
        swift_bridgeObjectRetain();
        sub_1BABEB4B0(a1, v20);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v21 = *(_QWORD *)(v19 + 88);
      swift_bridgeObjectRetain();
      sub_1BAC26724(a1, v21);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v22 = v3[13];
    if (v22 >> 62 == 1)
    {
      v23 = *(_QWORD *)(v22 + 16);
      v24 = *(_QWORD *)(v22 + 24);
      sub_1BA67D3F4(v3[13]);
      sub_1BA67D3F4(v23);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v23, v24);
      sub_1BA6EEDB4(v23);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v22);
    }
  }
}

void sub_1BAC3C008(uint64_t a1)
{
  sub_1BAC3BCBC(a1);
}

void sub_1BAC3C028(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v1;
  v5 = *(_QWORD *)(v4 + 56);
  if (!v5 || (sub_1BABF4888(a1, v5), !v2))
  {
    swift_beginAccess();
    v6 = *(_QWORD *)(v4 + 64);
    swift_bridgeObjectRetain();
    sub_1BABF49B8(a1, v6);
    swift_bridgeObjectRelease();
  }
}

void sub_1BAC3C0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 24);
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    if (v4)
      sub_1BABF4888(a1, v4);
  }
}

uint64_t sub_1BAC3C10C(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13[3];

  v3 = result;
  v4 = *v1;
  v5 = v1[1];
  v6 = *(_QWORD *)(*v1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    v7 = (_BYTE *)(v4 + 40);
    do
    {
      if ((*v7 & 1) == 0)
      {
        v13[0] = *((_QWORD *)v7 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v13[0], 0);
        sub_1BA72C46C(v13[0], 0);
        if (v2)
          return swift_bridgeObjectRelease_n();
      }
      v7 += 16;
      --v6;
    }
    while (v6);
    result = swift_bridgeObjectRelease_n();
  }
  if ((v5 >> 62) - 2 >= 2)
  {
    if (v5 >> 62)
    {
      return sub_1BAC3C10C(v3);
    }
    else if (!*(_BYTE *)(v5 + 40))
    {
      v9 = *(_QWORD *)(v5 + 24);
      v8 = *(_QWORD *)(v5 + 32);
      v10 = *(_QWORD *)(v5 + 16);
      v13[0] = v10;
      v13[1] = v9;
      v13[2] = v8;
      v12 = 1;
      sub_1BA690C00(v10, v9, v8, 0);
      result = sub_1BB6B84D4(v13, &v12);
      if (!v2)
      {
        v11 = result;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v10, v9, v11, 0);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1BAC3C29C(uint64_t a1)
{
  return sub_1BAC3770C(a1);
}

uint64_t sub_1BAC3C2B0(uint64_t a1)
{
  return sub_1BAC3C10C(a1);
}

void sub_1BAC3C2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;
  __int16 v15;
  char v16;
  int v17;
  int v18;

  v2 = type metadata accessor for FormatOption();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(unsigned __int8 *)(v0 + 106);
  v9 = *(unsigned __int16 *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 48);
  sub_1BAC3C478();
  if (!v1)
  {
    v18 = v9;
    v10 = *(_QWORD *)(v6 + 16);
    if (v10)
    {
      v17 = v8;
      v13[0] = v7;
      v13[1] = v6;
      v11 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      v12 = *(_QWORD *)(v3 + 72);
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1BA4C2DD8(v11, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v14 = *((_QWORD *)v5 + 2);
        swift_retain();
        sub_1BAC49F9C();
        swift_release();
        sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v11 += v12;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease_n();
      v7 = v13[0];
      v8 = v17;
    }
    if ((v18 | (v8 << 16)) >> 16 <= 0xFE)
    {
      v14 = v7;
      v15 = v18;
      v16 = (v18 | (v8 << 16)) >> 16;
      sub_1BAC3C914();
    }
  }
}

void sub_1BAC3C478()
{
  __asm { BR              X11 }
}

void sub_1BAC3C4C4(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 240) = *(_QWORD *)(a1 + 16);
  sub_1BAC35E00();
}

void sub_1BAC3C914()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  if (!*(_BYTE *)(v0 + 10))
    return;
  v2 = *(_QWORD *)v0;
  v3 = *(unsigned __int16 *)(v0 + 8);
  if (*(_BYTE *)(v0 + 10) != 1)
  {
    if (v3 >> 8 > 0xFE)
      return;
    if ((v3 & 0x100) == 0)
    {
      v10 = *(_QWORD *)(v2 + 16);
      if (!v10)
        return;
      sub_1BA77A170(*(_QWORD *)v0, *(unsigned __int16 *)(v0 + 8), 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      sub_1BA7AD89C(v2, v3);
      v11 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v11 & 1) == 0)
        {
          v12 = *((_QWORD *)v11 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v12, 0);
          sub_1BA72C46C(v12, 0);
          if (v1)
            break;
        }
        v11 += 16;
        --v10;
      }
      while (v10);
      sub_1BA77A170(v2, v3, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
      v7 = v2;
      v8 = v3;
      v9 = 2;
      goto LABEL_23;
    }
    if ((_BYTE)v3 == 0xFF)
    {
      v7 = *(_QWORD *)v0;
      v8 = *(unsigned __int16 *)(v0 + 8);
      v9 = 2;
LABEL_23:
      sub_1BA77A170(v7, v8, v9, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
      return;
    }
LABEL_21:
    sub_1BAC52014();
    return;
  }
  if ((v3 & 0x100) == 0)
  {
    v4 = *(_QWORD *)(v2 + 16);
    if (!v4)
      return;
    sub_1BA7AD890(*(_QWORD *)v0, *(_WORD *)(v0 + 8), 0);
    v5 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
        if (v1)
          break;
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    v7 = v2;
    v8 = v3;
    v9 = 1;
    goto LABEL_23;
  }
  if ((_BYTE)v3 != 0xFF)
    goto LABEL_21;
}

void sub_1BAC3CB4C()
{
  sub_1BAC3C2C4();
}

void sub_1BAC3CB60()
{
  sub_1BAC3C478();
}

void sub_1BAC3CB74()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC3CBB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v4 & 1) == 0)
      {
        v5 = *((_QWORD *)v4 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v5, 0);
        sub_1BA72C46C(v5, 0);
        if (v1)
          break;
      }
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC3CE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC53944(a1, a2, a3, (uint64_t (*)(void))sub_1BAC3CB74, (uint64_t (*)(uint64_t))sub_1BAC3CB74);
}

void sub_1BAC3CE2C()
{
  sub_1BAC3CB74();
}

_QWORD *sub_1BAC3CE40()
{
  __int128 *v0;
  uint64_t v1;
  int v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  __int128 v19[8];
  _BYTE v20[136];
  uint64_t v21;

  sub_1BA895FE8(v0, (uint64_t)v19);
  sub_1BA895FE8(v19, (uint64_t)v20);
  v2 = sub_1BA896024((uint64_t)v20);
  result = (_QWORD *)sub_1BA896030((uint64_t)v20);
  if (v2 == 1)
  {
    v4 = result[14];
    v5 = *(_QWORD *)(v4 + 16);
    if (!v5)
      return result;
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v21 = *(_QWORD *)(v4 + 8 * v6 + 32);
      swift_retain();
      sub_1BAC35E00();
      if (v1)
        break;
      ++v6;
      swift_release();
      if (v5 == v6)
        return (_QWORD *)swift_bridgeObjectRelease();
    }
    goto LABEL_19;
  }
  v7 = *result;
  v9 = result[6];
  v8 = result[7];
  v10 = *(_QWORD *)(*result + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    v11 = 0;
    while (1)
    {
      v21 = *(_QWORD *)(v7 + 8 * v11 + 32);
      swift_retain();
      sub_1BAC35E00();
      if (v1)
        break;
      ++v11;
      swift_release();
      if (v10 == v11)
      {
        result = (_QWORD *)swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_release();
  }
LABEL_12:
  if (v9)
  {
    v12 = *(_QWORD *)(v9 + 16);
    if (v12)
    {
      v13 = swift_bridgeObjectRetain();
      sub_1BA5DCC20(v13);
      swift_bridgeObjectRetain();
      v14 = (_BYTE *)(v9 + 40);
      do
      {
        if ((*v14 & 1) == 0)
        {
          v21 = *((_QWORD *)v14 - 1);
          v15 = v21;
          swift_retain_n();
          sub_1BA9F22C4();
          if (v1)
          {
            sub_1BA72C46C(v15, 0);
            sub_1BA72C46C(v15, 0);
            goto LABEL_29;
          }
          sub_1BA72C46C(v15, 0);
          sub_1BA72C46C(v15, 0);
        }
        v14 += 16;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n();
      v16 = *(_QWORD *)(v8 + 16);
      if (v16)
        goto LABEL_23;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = *(_QWORD *)(v8 + 16);
      if (v16)
      {
LABEL_23:
        swift_bridgeObjectRetain_n();
        v17 = (_BYTE *)(v8 + 40);
        do
        {
          if ((*v17 & 1) == 0)
          {
            v21 = *((_QWORD *)v17 - 1);
            v18 = v21;
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v18, 0);
            sub_1BA72C46C(v18, 0);
            if (v1)
              break;
          }
          v17 += 16;
          --v16;
        }
        while (v16);
LABEL_29:
        swift_bridgeObjectRelease_n();
      }
    }
    return (_QWORD *)sub_1BA5DCC4C(v9);
  }
  return result;
}

uint64_t sub_1BAC3D108(uint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  int v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  __int128 v8[8];
  _BYTE v9[128];

  sub_1BA895FE8(v1, (uint64_t)v8);
  sub_1BA895FE8(v8, (uint64_t)v9);
  v4 = sub_1BA896024((uint64_t)v9);
  v5 = (uint64_t *)sub_1BA896030((uint64_t)v9);
  if (v4 == 1)
    return sub_1BABEB020(a1, v5[14]);
  v7 = v5[6];
  result = sub_1BABEB020(a1, *v5);
  if (!v2)
  {
    if (v7)
      return sub_1BAC4375C();
  }
  return result;
}

void sub_1BAC3D1B4()
{
  sub_1BAC444B8();
}

uint64_t sub_1BAC3D1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC2FD74(a1, a2, a3, a4);
}

uint64_t sub_1BAC3D1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - v9;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v14, v16, a2, v12);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v14, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    sub_1BA4D9CE8(0, &qword_1EF2B0E30);
    if (swift_dynamicCast())
    {
      v18 = *((_QWORD *)&v21 + 1);
      v19 = v22;
      __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(a1, v18, v19);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
    }
    else
    {
      v22 = 0;
      v20 = 0u;
      v21 = 0u;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return sub_1BA65DB80((uint64_t)&v20, &qword_1EF2B0E38, &qword_1EF2B0E30);
    }
  }
  return result;
}

uint64_t sub_1BAC3D3B0(uint64_t a1, uint64_t a2)
{
  return sub_1BAC3D1DC(a1, a2);
}

void sub_1BAC3D3C4()
{
  sub_1BAC30118();
}

void sub_1BAC3D3D8()
{
  __int128 *v0;
  char *v1;
  __int128 v2[8];
  _BYTE v3[128];

  sub_1BA7439D4(v0, (uint64_t)v2);
  sub_1BA7439D4(v2, (uint64_t)v3);
  v1 = (char *)sub_1BAC3D438 + 4 * byte_1BB8A61F2[sub_1BAB05900((uint64_t)v3)];
  __asm { BR              X10 }
}

_QWORD *sub_1BAC3D438()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[128];
  __int128 v4[21];

  sub_1BAB0593C(v1 - 192);
  sub_1BA7439D4(v4, (uint64_t)v3);
  sub_1BAB0593C((uint64_t)v3);
  swift_retain();
  swift_retain();
  sub_1BAC35E00();
  if (!v0)
    sub_1BAC35E00();
  return sub_1BA6A0C50(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
}

void sub_1BAC3D618()
{
  sub_1BAC3D3D8();
}

void sub_1BAC3D62C()
{
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X11 }
}

uint64_t sub_1BAC3D6E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_WORD *)(a1 + 48);
  *(_QWORD *)(v2 - 120) = v3;
  *(_QWORD *)(v2 - 112) = v4;
  *(_QWORD *)(v2 - 104) = v5;
  *(_QWORD *)(v2 - 96) = v6;
  *(_WORD *)(v2 - 88) = v7;
  return sub_1BAA9E668(v1);
}

void sub_1BAC3D990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v1;
  *(_BYTE *)(v5 - 65) = 10;
  sub_1BA745F88(v3, v2, v1, 3);
  sub_1BA745F88(v3, v2, v1, 3);
  sub_1BA745F88(v3, v2, v1, 3);
  swift_retain();
  v6 = sub_1BB6B84D4((uint64_t *)(v5 - 120), (char *)(v5 - 65));
  if (v0)
  {
    sub_1BA6F3F50(v3, v2, v1, 3);
    sub_1BA6F3F50(v3, v2, v1, 3);
    JUMPOUT(0x1BAC3D968);
  }
  v7 = v6;
  *(_QWORD *)(v5 - 128) = v4 & 0x1FFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  sub_1BB3D7F90(v3, v2, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6F3F50(v3, v2, v1, 3);
  JUMPOUT(0x1BAC3D938);
}

uint64_t sub_1BAC3DAC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[3];
  char v14;

  v2 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatRemoteFont();
  sub_1BA4C2DD8(v0 + *(int *)(v5 + 20), (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
    return sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!v4[24])
  {
    v8 = *(_QWORD *)v4;
    v7 = *((_QWORD *)v4 + 1);
    v9 = *((_QWORD *)v4 + 2);
    v13[0] = v8;
    v13[1] = v7;
    v13[2] = v9;
    v14 = 6;
    sub_1BA690C00(v8, v7, v9, 0);
    v10 = sub_1BB6B84D4(v13, &v14);
    if (!v1)
    {
      v11 = v10;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v8, v7, v11, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return sub_1BA5A7EF8(v8, v7, v9, 0);
  }
  return result;
}

void sub_1BAC3DC44()
{
  sub_1BAC3D62C();
}

void sub_1BAC3DC58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20[16];
  _BYTE v21[528];
  __int128 __dst[33];

  v3 = v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    memcpy(__dst, (const void *)(v5 + 32), sizeof(__dst));
    memcpy(v21, __dst, sizeof(v21));
    sub_1BAC67FA0((uint64_t)__dst);
    sub_1BAC53AA4(a1);
    if (v2)
    {
      sub_1BAC68120((uint64_t)__dst);
      goto LABEL_7;
    }
    for (i = 560; ; i += 528)
    {
      sub_1BAC68120((uint64_t)__dst);
      if (!--v6)
        break;
      memcpy(__dst, (const void *)(v5 + i), sizeof(__dst));
      memcpy(v21, __dst, sizeof(v21));
      sub_1BAC67FA0((uint64_t)__dst);
      sub_1BAC53AA4(a1);
    }
    swift_bridgeObjectRelease_n();
  }
  if ((~*(_QWORD *)(v3 + 56) & 0xF000000000000007) == 0
    || (*(_QWORD *)&__dst[0] = *(_QWORD *)(v3 + 56), sub_1BAC3D62C(), !v2))
  {
    v8 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C(v3 + 64, (uint64_t)v21, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v21, (uint64_t)__dst, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)v8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    if (sub_1BAB05F98((uint64_t)__dst) == 1 || (sub_1BA7439D4(__dst, (uint64_t)v20), sub_1BAC3D3D8(), !v2))
    {
      v9 = *(_QWORD *)(v3 + 192);
      if (!v9 || (sub_1BABE9768(a1, v9), !v2))
      {
        if (*(unsigned __int8 *)(v3 + 280) == 254 || (v20[0] = *(_QWORD *)(v3 + 232), sub_1BAC35E00(), !v2))
        {
          v10 = *(_QWORD *)(v3 + 512);
          if (v10)
          {
            v11 = *(_QWORD *)(v10 + 16);
            if (v11)
            {
              swift_bridgeObjectRetain_n();
              v12 = (_BYTE *)(v10 + 40);
              while (1)
              {
                if ((*v12 & 1) == 0)
                {
                  v20[0] = *((_QWORD *)v12 - 1);
                  v13 = v20[0];
                  swift_retain_n();
                  sub_1BA9F22C4();
                  if (v2)
                  {
                    sub_1BA72C46C(v13, 0);
                    sub_1BA72C46C(v13, 0);
                    goto LABEL_7;
                  }
                  sub_1BA72C46C(v13, 0);
                  sub_1BA72C46C(v13, 0);
                }
                v12 += 16;
                if (!--v11)
                {
                  swift_bridgeObjectRelease_n();
                  break;
                }
              }
            }
          }
          if (*(_QWORD *)(v3 + 520) != 9)
          {
            v14 = *(_QWORD *)(v3 + 528);
            if ((~v14 & 0xF000000000000007) != 0)
            {
              v20[0] = *(_QWORD *)(v3 + 528);
              sub_1BAC35E00();
              if (v2)
                return;
            }
            else
            {
              sub_1BA6E8A90(*(_QWORD *)(v3 + 520), v14);
            }
          }
          if (*(_QWORD *)(v3 + 536) != 9)
          {
            v15 = *(_QWORD *)(v3 + 544);
            if ((~v15 & 0xF000000000000007) != 0)
            {
              v20[0] = *(_QWORD *)(v3 + 544);
              sub_1BAC35E00();
              if (v2)
                return;
            }
            else
            {
              sub_1BA6E8A90(*(_QWORD *)(v3 + 536), v15);
            }
          }
          v16 = *(_QWORD *)(v3 + 560);
          if (v16)
          {
            v17 = *(_QWORD *)(v16 + 16);
            if (v17)
            {
              swift_bridgeObjectRetain_n();
              v18 = (_BYTE *)(v16 + 40);
              do
              {
                if ((*v18 & 1) == 0)
                {
                  v20[0] = *((_QWORD *)v18 - 1);
                  v19 = v20[0];
                  swift_retain_n();
                  sub_1BA9F22C4();
                  sub_1BA72C46C(v19, 0);
                  sub_1BA72C46C(v19, 0);
                  if (v2)
                    break;
                }
                v18 += 16;
                --v17;
              }
              while (v17);
LABEL_7:
              swift_bridgeObjectRelease_n();
            }
          }
        }
      }
    }
  }
}

void sub_1BAC3E044(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = v1[1];
  if (!*v1 || (sub_1BAC3DC58(a1), !v2))
    sub_1BAC2FA7C(a1, v4);
}

uint64_t sub_1BAC3E090(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BAC2F9C4(a1, *v1);
}

void sub_1BAC3E0A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(unsigned __int8 *)(v1 + 24);
  if (!(v6 >> 6))
  {
    v10 = *(_QWORD *)(v4 + 16);
    if (!v10)
      return;
    v13 = *(_QWORD *)(v1 + 16);
    sub_1BAA37668(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), v5, v6);
    swift_bridgeObjectRetain();
    v11 = (_BYTE *)(v4 + 40);
    do
    {
      if ((*v11 & 1) == 0)
      {
        v12 = *((_QWORD *)v11 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v12, 0);
        sub_1BA72C46C(v12, 0);
        if (v2)
          break;
      }
      v11 += 16;
      --v10;
    }
    while (v10);
    goto LABEL_14;
  }
  if (v6 >> 6 == 1)
  {
    v7 = *(_QWORD *)(v4 + 16);
    if (!v7)
      return;
    v13 = *(_QWORD *)(v1 + 16);
    sub_1BAA37668(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), v5, v6);
    swift_bridgeObjectRetain();
    v8 = (_BYTE *)(v4 + 40);
    do
    {
      if ((*v8 & 1) == 0)
      {
        v9 = *((_QWORD *)v8 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v9, 0);
        sub_1BA72C46C(v9, 0);
        if (v2)
          break;
      }
      v8 += 16;
      --v7;
    }
    while (v7);
LABEL_14:
    sub_1BAA376C0(v4, v3, v13, v6);
    sub_1BAA376C0(v4, v3, v13, v6);
    return;
  }
  sub_1BAC3E2B4(a1);
}

void sub_1BAC3E274(uint64_t a1)
{
  sub_1BAC3E0A8(a1);
}

void sub_1BAC3E2B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;

  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    v6 = (_BYTE *)(v4 + 40);
    do
    {
      if ((*v6 & 1) == 0)
      {
        v7 = *((_QWORD *)v6 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v7, 0);
        sub_1BA72C46C(v7, 0);
        if (v2)
        {
          swift_bridgeObjectRelease_n();
          return;
        }
      }
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
  }
  sub_1BAC3DC58(a1);
}

void sub_1BAC3E3A4(uint64_t a1)
{
  sub_1BAC3E0A8(a1);
}

void sub_1BAC3E3B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_1BAC2F9C4(a1, *v1);
  if (!v2)
    sub_1BAC3DC58(a1);
}

void sub_1BAC3E3EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v1;
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v5 = *(_QWORD *)(v4 + 40);
    swift_bridgeObjectRetain();
    sub_1BABE9B20(a1, v5);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAC3E474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;

  result = swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    v14 = a1;
    v7 = (_OWORD *)(v5 + 56);
    while (1)
    {
      v8 = *((_QWORD *)v7 - 1);
      if (v8)
      {
        v9 = *((_QWORD *)v7 - 2);
        v15 = *v7;
        v10 = *(_QWORD **)(a1 + 56);
        swift_retain();
        swift_bridgeObjectRetain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1BB38ED20(0, v10[2] + 1, 1, v10);
        v12 = v10[2];
        v11 = v10[3];
        if (v12 >= v11 >> 1)
          v10 = sub_1BB38ED20((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
        v10[2] = v12 + 1;
        v13 = &v10[4 * v12];
        a1 = v14;
        v13[4] = v9;
        v13[5] = v8;
        *((_OWORD *)v13 + 3) = v15;
        *(_QWORD *)(v14 + 56) = v10;
      }
      else
      {
        swift_retain();
      }
      swift_retain();
      sub_1BAC46704(a1);
      if (v2)
        break;
      v7 = (_OWORD *)((char *)v7 + 40);
      swift_release_n();
      swift_bridgeObjectRelease();
      if (!--v6)
        return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease_n();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC3E63C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v3 = v1[6];
  result = sub_1BABEB020(a1, *v1);
  if (!v2)
  {
    if (v3)
      return sub_1BAC4375C();
  }
  return result;
}

uint64_t sub_1BAC3E68C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v37 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[8];
  v9 = v1[9];
  v10 = v1[10];
  v36 = v1[11];
  v12 = v1[14];
  v11 = v1[15];
  v13 = v1[17];
  if (v9 >= 2)
  {
    if (v9 != 2)
    {
      sub_1BA8C89D0(v8, v9);
      sub_1BAC2ED10(a1, v9);
      result = sub_1BA79DDC8(v8, v9);
      v14 = (uint64_t)v37;
      if (v2)
        return result;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BA79DDC8(v8, v9);
  }
  v14 = (uint64_t)v37;
LABEL_6:
  swift_bridgeObjectRetain();
  sub_1BABEBCF0(a1, v10);
  if (v2)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v36;
  v16 = *(_QWORD *)(v36 + 16);
  v33 = v11;
  v34 = v13;
  v35 = v12;
  if (v16)
  {
    v32 = v6;
    v38 = a1;
    v49 = 0;
    swift_bridgeObjectRetain_n();
    v17 = (uint64_t *)(v15 + 48);
    while (1)
    {
      v39 = v16;
      v19 = *(v17 - 2);
      v18 = *(v17 - 1);
      v20 = *v17;
      v21 = v17[1];
      v23 = v17[2];
      v22 = v17[3];
      v25 = v17[4];
      v24 = v17[5];
      v41 = v19;
      v42 = v18;
      v43 = v20;
      v44 = v21;
      v45 = v23;
      v46 = v22;
      v47 = v25;
      v48 = v24;
      v40 = v24;
      sub_1BA76B724(v19, v18, v20, v21, v23, v22, v25);
      v26 = v49;
      sub_1BAC490F8();
      v49 = v26;
      if (v26)
        break;
      v17 += 8;
      sub_1BA76B698(v19, v18, v20, v21, v23, v22, v25);
      v16 = v39 - 1;
      if (v39 == 1)
      {
        swift_bridgeObjectRelease_n();
        v3 = v49;
        v14 = (uint64_t)v37;
        a1 = v38;
        v11 = v33;
        v13 = v34;
        v12 = v35;
        v6 = v32;
        goto LABEL_13;
      }
    }
    sub_1BA76B698(v19, v18, v20, v21, v23, v22, v25);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_13:
    v27 = *(_QWORD *)(v12 + 16);
    if (v27)
    {
      v28 = v12 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v29 = *(_QWORD *)(v6 + 72);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v28, v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v41 = *(_QWORD *)(v14 + 16);
        swift_retain();
        sub_1BAC49F9C();
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80(v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v28 += v29;
        if (!--v27)
        {
          swift_bridgeObjectRelease_n();
          v11 = v33;
          v13 = v34;
          goto LABEL_18;
        }
      }
      swift_release();
      sub_1BA4A2E80(v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_18:
      swift_bridgeObjectRetain();
      sub_1BABF86EC(a1, v11);
      result = swift_bridgeObjectRelease();
      if (!v3)
      {
        swift_bridgeObjectRetain();
        sub_1BAC2F0AC(a1, v13);
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1BAC3E9DC(uint64_t a1)
{
  return sub_1BAC3E68C(a1);
}

void sub_1BAC3E9F0()
{
  sub_1BAC3B1B8();
}

void sub_1BAC3EA04()
{
  __asm { BR              X15 }
}

uint64_t sub_1BAC3EA3C()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_1BAC3EAA0 + 4 * byte_1BB8A6209[(v0 >> 59) & 2 | (v0 >> 2) & 1]))();
}

void sub_1BAC3EA60()
{
  sub_1BAC527C0();
  JUMPOUT(0x1BAC3EAF4);
}

uint64_t sub_1BAC3EA7C()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_1BAC3EAA0 + 4 * byte_1BB8A6205[(v0 >> 59) & 2 | (v0 >> 2) & 1]))();
}

void sub_1BAC3EAA0()
{
  sub_1BAC52BF4();
}

void sub_1BAC3EB04()
{
  __asm { BR              X14 }
}

void sub_1BAC3EB40()
{
  sub_1BAC52BF4();
}

void sub_1BAC3EB80()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned int v3;

  v1 = *(_QWORD *)(v0 + 8);
  if (*(_BYTE *)(v0 + 40))
    v2 = 2;
  else
    v2 = 0;
  v3 = v2 & 0xFFFFFFFE | (v1 >> 1) & 1;
  if (v3)
  {
    if (v3 == 1)
      __asm { BR              X15 }
    __asm { BR              X14 }
  }
  __asm { BR              X14 }
}

void sub_1BAC3EC54()
{
  JUMPOUT(0x1BAC3ECA0);
}

void sub_1BAC3EC6C()
{
  JUMPOUT(0x1BAC3EC88);
}

void sub_1BAC3EC7C()
{
  JUMPOUT(0x1BAC3EC84);
}

void sub_1BAC3EC90()
{
  JUMPOUT(0x1BAC3EC98);
}

void sub_1BAC3ECB8()
{
  sub_1BAC3EA04();
}

void sub_1BAC3ECCC()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 48) & 0xF0) == 0x30)
    __asm { BR              X13 }
}

void sub_1BAC3ED3C()
{
  __asm { BR              X13 }
}

void sub_1BAC3ED70(unsigned int a1@<W8>)
{
  if (a1 <= 0xFD)
    sub_1BAC52DB4();
}

void sub_1BAC3ED98()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 48) & 0xF0) == 0x30)
    sub_1BAC3ED3C();
}

uint64_t sub_1BAC3EDE8(uint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  if (v2 >= 2)
  {
    v3 = result;
    v4 = *v1;
    swift_bridgeObjectRetain();
    sub_1BAC2ED10(v3, v2);
    return sub_1BA78DE14(v4, v2);
  }
  return result;
}

void sub_1BAC3EE44(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t j;
  unint64_t v23;

  v3 = v1;
  swift_beginAccess();
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v5 = v1[6];
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v6; ++i)
      {
        v8 = *(_QWORD *)(v5 + 8 * i + 32);
        sub_1BA7196DC(v8);
        sub_1BAC2F274();
        sub_1BA719340(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v9 = v1[8];
    if (v9 >> 62 == 1)
    {
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      sub_1BA67D3F4(v3[8]);
      sub_1BA67D3F4(v10);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v10, v11);
      sub_1BA6EEDB4(v10);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v9);
    }
    if (v3[10])
      sub_1BAC45F4C(a1, (void (*)(uint64_t, uint64_t))sub_1BAC25EB4);
    swift_beginAccess();
    v12 = v3[11];
    swift_bridgeObjectRetain();
    sub_1BABEBCF0(a1, v12);
    swift_bridgeObjectRelease();
    v13 = v3[15];
    if (v13)
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v13 + 72);
      if (v14)
      {
        swift_bridgeObjectRetain();
        sub_1BABEB4B0(a1, v14);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v15 = *(_QWORD *)(v13 + 88);
      swift_bridgeObjectRetain();
      sub_1BAC26724(a1, v15);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v16 = (_QWORD *)v3[16];
    if (v16)
    {
      if (v16[2])
      {
        swift_retain();
        sub_1BAF4D5E4(a1);
      }
      else
      {
        swift_retain();
      }
      v17 = v16[3];
      if (v17)
      {
        swift_beginAccess();
        v18 = *(_QWORD *)(v17 + 72);
        if (v18)
        {
          swift_bridgeObjectRetain();
          sub_1BABEB4B0(a1, v18);
          swift_bridgeObjectRelease();
        }
        swift_beginAccess();
        v19 = *(_QWORD *)(v17 + 88);
        swift_bridgeObjectRetain();
        sub_1BAC26724(a1, v19);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      sub_1BABE39D4();
      swift_beginAccess();
      v20 = v16[5];
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        swift_bridgeObjectRetain_n();
        for (j = 0; j != v21; ++j)
        {
          v23 = *(_QWORD *)(v20 + 8 * j + 32);
          sub_1BA7196DC(v23);
          sub_1BAC2F274();
          sub_1BA719340(v23);
        }
        swift_release();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_release();
      }
    }
  }
}

void sub_1BAC3F278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;

  v3 = v1;
  if (!*(_QWORD *)(v1 + 16) || (sub_1BAF4D5E4(a1), !v2))
  {
    v5 = *(_QWORD *)(v1 + 24);
    if (!v5)
      goto LABEL_7;
    swift_beginAccess();
    v6 = *(_QWORD *)(v5 + 72);
    if (!v6 || (swift_bridgeObjectRetain(), sub_1BABEB4B0(a1, v6), swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      v7 = *(_QWORD *)(v5 + 88);
      swift_bridgeObjectRetain();
      sub_1BAC26724(a1, v7);
      swift_bridgeObjectRelease();
      if (!v2)
      {
LABEL_7:
        swift_beginAccess();
        sub_1BABE39D4();
        if (!v2)
        {
          swift_beginAccess();
          v8 = *(_QWORD *)(v3 + 40);
          v9 = *(_QWORD *)(v8 + 16);
          if (v9)
          {
            swift_bridgeObjectRetain_n();
            for (i = 0; i != v9; ++i)
            {
              v11 = *(_QWORD *)(v8 + 8 * i + 32);
              sub_1BA7196DC(v11);
              sub_1BAC2F274();
              sub_1BA719340(v11);
            }
            swift_bridgeObjectRelease_n();
          }
        }
      }
    }
  }
}

void sub_1BAC3F424(uint64_t a1)
{
  sub_1BAC3F278(a1);
}

void sub_1BAC3F444()
{
  __asm { BR              X10 }
}

#error "1BAC3F6BC: call analysis failed (funcsize=73)"

void sub_1BAC3F7A4()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAC3F7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BABEB390(v2, a2);
}

void sub_1BAC3F824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t i;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;

  v3 = v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    v7 = *(_OWORD *)(v5 + 176);
    v34 = *(_OWORD *)(v5 + 160);
    v35 = v7;
    v36 = *(_OWORD *)(v5 + 192);
    v37 = *(_BYTE *)(v5 + 208);
    v8 = *(_OWORD *)(v5 + 112);
    v30 = *(_OWORD *)(v5 + 96);
    v31 = v8;
    v9 = *(_OWORD *)(v5 + 144);
    v32 = *(_OWORD *)(v5 + 128);
    v33 = v9;
    v10 = *(_OWORD *)(v5 + 48);
    v26 = *(_OWORD *)(v5 + 32);
    v27 = v10;
    v11 = *(_OWORD *)(v5 + 80);
    v28 = *(_OWORD *)(v5 + 64);
    v29 = v11;
    sub_1BAC68298((uint64_t)&v26);
    sub_1BAC3FA80(a1);
    if (v2)
    {
      sub_1BAC68394((uint64_t)&v26);
      swift_bridgeObjectRelease_n();
      return;
    }
    for (i = 216; ; i += 184)
    {
      sub_1BAC68394((uint64_t)&v26);
      if (!--v6)
        break;
      v13 = *(_OWORD *)(v5 + i);
      v14 = *(_OWORD *)(v5 + i + 16);
      v15 = *(_OWORD *)(v5 + i + 48);
      v28 = *(_OWORD *)(v5 + i + 32);
      v29 = v15;
      v26 = v13;
      v27 = v14;
      v16 = *(_OWORD *)(v5 + i + 64);
      v17 = *(_OWORD *)(v5 + i + 80);
      v18 = *(_OWORD *)(v5 + i + 112);
      v32 = *(_OWORD *)(v5 + i + 96);
      v33 = v18;
      v30 = v16;
      v31 = v17;
      v19 = *(_OWORD *)(v5 + i + 128);
      v20 = *(_OWORD *)(v5 + i + 144);
      v21 = *(_OWORD *)(v5 + i + 160);
      v37 = *(_BYTE *)(v5 + i + 176);
      v35 = v20;
      v36 = v21;
      v34 = v19;
      sub_1BAC68298((uint64_t)&v26);
      sub_1BAC3FA80(a1);
    }
    swift_bridgeObjectRelease_n();
  }
  v22 = *(unsigned __int8 *)(v3 + 120);
  if (v22 == 255)
    goto LABEL_10;
  v23 = *(_OWORD *)(v3 + 72);
  v26 = *(_OWORD *)(v3 + 56);
  v27 = v23;
  v24 = *(_OWORD *)(v3 + 104);
  v28 = *(_OWORD *)(v3 + 88);
  v29 = v24;
  LOBYTE(v30) = v22;
  sub_1BAC3F444();
  if (!v2)
  {
LABEL_10:
    v25 = *(_QWORD *)(v3 + 128);
    if (!v25 || (sub_1BABE9768(a1, v25), !v2))
    {
      if (*(unsigned __int8 *)(v3 + 216) != 254)
      {
        *(_QWORD *)&v26 = *(_QWORD *)(v3 + 168);
        sub_1BAC35E00();
      }
    }
  }
}

void sub_1BAC3FA80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;

  v50 = *(_QWORD *)(v1 + 16);
  v51 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 48);
  v52 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v54 = *(_QWORD *)(v1 + 32);
  v55 = *(unsigned __int8 *)(v1 + 80);
  v8 = *(_QWORD *)(v1 + 88);
  v9 = *(unsigned __int8 *)(v1 + 176);
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    v10 = v54;
    v46 = v4;
    v47 = v6;
    v44 = v8;
    v45 = v5;
    v48 = v7;
    v49 = v9;
    v56 = a1;
    v11 = v9;
    switch(v55)
    {
      case 0:
        goto LABEL_10;
      case 1:
        v12 = *(_QWORD *)(v50 + 16);
        if (!v12)
          goto LABEL_10;
        sub_1BA7AF9FC(v50, v51, v54, v52, v4, v5, v6, v7, 1);
        swift_bridgeObjectRetain();
        v13 = v50 + 40;
        do
        {
          v53 = v12;
          v15 = *(_QWORD *)(v13 - 8);
          v14 = *(_QWORD *)v13;
          v16 = *(_QWORD *)(v13 + 8);
          v17 = *(_QWORD *)(v13 + 16);
          v19 = *(_QWORD *)(v13 + 24);
          v18 = *(_QWORD *)(v13 + 32);
          v20 = *(_BYTE *)(v13 + 40);
          sub_1BAC6607C(v15, *(_QWORD *)v13, v16, v17, v19, v18, v20);
          sub_1BAC369E4();
          v13 += 56;
          sub_1BAC66130(v15, v14, v16, v17, v19, v18, v20);
          v12 = v53 - 1;
        }
        while (v53 != 1);
        sub_1BA7AF9E4(v50, v51, v54, v52, v46, v45, v47, v48, 1u);
        sub_1BA7AF9E4(v50, v51, v54, v52, v46, v45, v47, v48, 1u);
        v11 = v49;
        v21 = v44;
        if (!v44)
          goto LABEL_37;
        goto LABEL_11;
      case 2:
        v22 = *(_QWORD *)(v50 + 16);
        if (v22)
        {
          sub_1BA7AF9CC(v50, v51, v54, v52, v46, v5, v6, v7, 2u);
          swift_bridgeObjectRetain();
          for (i = 0; i != v22; ++i)
          {
            swift_retain();
            sub_1BAC35E00();
            swift_release();
          }
          swift_bridgeObjectRelease();
          v10 = v54;
          v24 = v6;
          v25 = v7;
          v26 = v5;
          v27 = v46;
        }
        else
        {
          v26 = v5;
          v27 = v46;
          v24 = v6;
          v25 = v7;
          sub_1BA7AF9CC(v50, v51, v54, v52, v46, v5, v6, v7, 2u);
        }
        if (v24)
        {
          v28 = *(_QWORD *)(v24 + 16);
          if (v28)
          {
            v29 = swift_bridgeObjectRetain();
            sub_1BA5DCC20(v29);
            swift_bridgeObjectRetain();
            v30 = (_BYTE *)(v24 + 40);
            do
            {
              if ((*v30 & 1) == 0)
              {
                v31 = *((_QWORD *)v30 - 1);
                swift_retain_n();
                sub_1BA9F22C4();
                sub_1BA72C46C(v31, 0);
                sub_1BA72C46C(v31, 0);
              }
              v30 += 16;
              --v28;
            }
            while (v28);
            v24 = v6;
            swift_bridgeObjectRelease_n();
            v39 = v52;
            v10 = v54;
            v25 = v7;
            v27 = v46;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v39 = v52;
          }
          v40 = *(_QWORD *)(v25 + 16);
          if (v40)
          {
            swift_bridgeObjectRetain_n();
            v41 = (_BYTE *)(v25 + 40);
            do
            {
              if ((*v41 & 1) == 0)
              {
                v42 = *((_QWORD *)v41 - 1);
                swift_retain_n();
                sub_1BA9F22C4();
                sub_1BA72C46C(v42, 0);
                sub_1BA72C46C(v42, 0);
              }
              v41 += 16;
              --v40;
            }
            while (v40);
            swift_bridgeObjectRelease_n();
            sub_1BA5DCC4C(v6);
            sub_1BA7AF9E4(v50, v51, v54, v52, v46, v5, v6, v7, 2u);
LABEL_36:
            v21 = v44;
            if (v44)
            {
LABEL_11:
              sub_1BABE9768(v56, v21);
              if (v11 == 254)
                return;
            }
            else
            {
LABEL_37:
              if (v11 == 254)
                return;
            }
            sub_1BAC35E00();
            return;
          }
          v43 = v39;
          sub_1BA5DCC4C(v24);
          v32 = v50;
          v33 = v51;
          v35 = v10;
          v34 = v43;
          v36 = v27;
          v37 = v5;
          v38 = v24;
        }
        else
        {
          v32 = v50;
          v33 = v51;
          v34 = v52;
          v35 = v10;
          v36 = v27;
          v37 = v26;
          v38 = 0;
        }
        sub_1BA7AF9E4(v32, v33, v35, v34, v36, v37, v38, v25, 2u);
        goto LABEL_36;
      case 3:
        sub_1BA7AF9E4(v50, v51, v54, v52, v4, v5, v6, v7, 3u);
        goto LABEL_36;
      default:
        v11 = v9;
LABEL_10:
        v21 = v8;
        if (v8)
          goto LABEL_11;
        goto LABEL_37;
    }
  }
}

void sub_1BAC40120(uint64_t a1)
{
  sub_1BAC3FA80(a1);
}

void sub_1BAC40134(uint64_t a1)
{
  sub_1BAC45F4C(a1, (void (*)(uint64_t, uint64_t))sub_1BAC25EB4);
}

void sub_1BAC4015C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(unsigned __int8 *)(v1 + 128);
  v6 = *(_QWORD *)(v1 + 136);
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    if (v4)
      sub_1BABE9768(a1, v4);
    if (v5 != 254)
      sub_1BAC35E00();
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
      {
        swift_bridgeObjectRetain_n();
        v8 = (_BYTE *)(v6 + 40);
        do
        {
          if ((*v8 & 1) == 0)
          {
            v9 = *((_QWORD *)v8 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v9, 0);
            sub_1BA72C46C(v9, 0);
          }
          v8 += 16;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void sub_1BAC4028C(uint64_t a1)
{
  sub_1BAC4015C(a1);
}

uint64_t sub_1BAC402A0(uint64_t result)
{
  uint64_t v1;

  if (*(unsigned __int8 *)(v1 + 16) >= 0xCu)
    return sub_1BB5D2C38(result);
  return result;
}

void sub_1BAC402DC(uint64_t a1)
{
  sub_1BAC4744C(a1);
}

void sub_1BAC402FC(uint64_t a1)
{
  sub_1BAC47598(a1);
}

void sub_1BAC4031C()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC40364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 24);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v5 = v3 + 56;
    while (1)
    {
      v6 = *(_QWORD *)(v5 - 24);
      v7 = *(_QWORD *)(v5 - 16);
      v8 = *(_BYTE *)(v5 - 8);
      sub_1BA73B1CC(v6, v7, v8);
      swift_retain();
      ((void (*)(uint64_t))sub_1BAC4031C)(v2);
      if (v1)
        break;
      v5 += 32;
      sub_1BA73B1B8(v6, v7, v8);
      swift_release();
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    sub_1BA73B1B8(v6, v7, v8);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
LABEL_7:
    ((void (*)(uint64_t))sub_1BAC4031C)(v2);
  }
  return swift_release();
}

void sub_1BAC4055C(unint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  v3 = v1;
  swift_beginAccess();
  v5 = v1[6];
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    v7 = *(_OWORD *)(v5 + 192);
    v43 = *(_OWORD *)(v5 + 176);
    v44 = v7;
    v45 = *(_OWORD *)(v5 + 208);
    v46 = *(_QWORD *)(v5 + 224);
    v8 = *(_OWORD *)(v5 + 128);
    v39 = *(_OWORD *)(v5 + 112);
    v40 = v8;
    v9 = *(_OWORD *)(v5 + 160);
    v41 = *(_OWORD *)(v5 + 144);
    v42 = v9;
    v10 = *(_OWORD *)(v5 + 48);
    v11 = *(_OWORD *)(v5 + 80);
    v12 = *(_OWORD *)(v5 + 96);
    v36 = *(_OWORD *)(v5 + 64);
    v37 = v11;
    v38 = v12;
    v34 = *(_OWORD *)(v5 + 32);
    v35 = v10;
    sub_1BAC68490((uint64_t)&v34);
    sub_1BAC4198C(a1);
    if (v2)
    {
      sub_1BAC685AC((uint64_t)&v34);
      goto LABEL_7;
    }
    v13 = 232;
    while (1)
    {
      sub_1BAC685AC((uint64_t)&v34);
      if (!--v6)
        break;
      v14 = v5 + v13;
      v15 = *(_OWORD *)(v5 + v13);
      v13 += 200;
      v34 = v15;
      v16 = *(_OWORD *)(v14 + 16);
      v17 = *(_OWORD *)(v14 + 32);
      v18 = *(_OWORD *)(v14 + 64);
      v37 = *(_OWORD *)(v14 + 48);
      v38 = v18;
      v35 = v16;
      v36 = v17;
      v19 = *(_OWORD *)(v14 + 80);
      v20 = *(_OWORD *)(v14 + 96);
      v21 = *(_OWORD *)(v14 + 128);
      v41 = *(_OWORD *)(v14 + 112);
      v42 = v21;
      v39 = v19;
      v40 = v20;
      v22 = *(_OWORD *)(v14 + 144);
      v23 = *(_OWORD *)(v14 + 160);
      v24 = *(_OWORD *)(v14 + 176);
      v46 = *(_QWORD *)(v14 + 192);
      v44 = v23;
      v45 = v24;
      v43 = v22;
      sub_1BAC68490((uint64_t)&v34);
      sub_1BAC4198C(a1);
    }
    swift_bridgeObjectRelease_n();
  }
  v25 = v1[7];
  if (v25)
  {
    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      swift_bridgeObjectRetain_n();
      v27 = (_BYTE *)(v25 + 40);
      while (1)
      {
        if ((*v27 & 1) == 0)
        {
          *(_QWORD *)&v34 = *((_QWORD *)v27 - 1);
          v28 = v34;
          swift_retain_n();
          sub_1BA9F22C4();
          if (v2)
          {
            sub_1BA72C46C(v28, 0);
            sub_1BA72C46C(v28, 0);
LABEL_7:
            swift_bridgeObjectRelease_n();
            return;
          }
          sub_1BA72C46C(v28, 0);
          sub_1BA72C46C(v28, 0);
        }
        v27 += 16;
        if (!--v26)
        {
          swift_bridgeObjectRelease_n();
          break;
        }
      }
    }
  }
  swift_beginAccess();
  v29 = v1[8];
  if (!v29 || (swift_bridgeObjectRetain(), sub_1BABF837C(a1, v29), swift_bridgeObjectRelease(), !v2))
  {
    if ((~v3[9] & 0xF000000000000007) == 0 || (sub_1BAC359AC(), !v2))
    {
      v30 = v3[10];
      if (!v30 || (sub_1BABE9768(a1, v30), !v2))
      {
        v31 = v3[15];
        if (v31 >= 3)
        {
          if (v31 != 3)
          {
            v32 = *(_QWORD *)(v31 + 16);
            v33 = *(_QWORD *)(v31 + 24);
            sub_1BA6E6C80(v3[15]);
            sub_1BA6E6E84(v32);
            sub_1BA6E6E84(v33);
            sub_1BAC34E0C(a1, v32, v33);
            sub_1BA6E7468(v32);
            sub_1BA6E7468(v33);
            sub_1BA6E6CF0(v31);
            if (v2)
              return;
          }
        }
        else
        {
          sub_1BA6E6CF0(v3[15]);
        }
        if (*((unsigned __int8 *)v3 + 216) == 254 || (sub_1BAC35E00(), !v2))
        {
          if ((~v3[28] & 0xF000000000000007) == 0 || (sub_1BAC35E00(), !v2))
          {
            if (v3[30] != 1)
              sub_1BAC40FF8();
          }
        }
      }
    }
  }
}

void sub_1BAC4095C()
{
  sub_1BAC4031C();
}

void sub_1BAC40970()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;
  __int128 *v5;
  __int128 v6;
  __int128 v7[8];
  _BYTE v8[136];
  _BYTE v9[136];

  sub_1BA895BCC(v0, (uint64_t)v8);
  sub_1BA895BCC((uint64_t)v8, (uint64_t)v9);
  v1 = sub_1BA895C08((uint64_t)v9);
  if (v1)
  {
    if (v1 == 1)
    {
      v2 = sub_1BA895E68((uint64_t)v9);
      sub_1BA53BAD8(v2, (uint64_t)v7);
      v3 = sub_1BA895ED8((uint64_t)v7);
      v4 = (_QWORD *)sub_1BA895EE4((uint64_t)v7);
      if (v3 == 1)
      {
        *(_QWORD *)&v6 = *v4;
        sub_1BAC35E00();
      }
      else
      {
        sub_1BAC3CE40();
      }
    }
    else
    {
      sub_1BA895E68((uint64_t)v9);
    }
  }
  else
  {
    v5 = (__int128 *)sub_1BA895E68((uint64_t)v9);
    sub_1BA896178(v5, (uint64_t)v7);
    sub_1BA895FE8(v7, (uint64_t)&v6);
    sub_1BAC3CE40();
  }
}

void sub_1BAC40AB0()
{
  sub_1BAC40970();
}

void sub_1BAC40AC4()
{
  uint64_t v0;
  int v1;
  _BYTE v2[136];
  _BYTE v3[136];

  sub_1BA53BAD8(v0, (uint64_t)v2);
  sub_1BA53BAD8((uint64_t)v2, (uint64_t)v3);
  v1 = sub_1BA895ED8((uint64_t)v3);
  sub_1BA895EE4((uint64_t)v3);
  if (v1 == 1)
    sub_1BAC35E00();
  else
    sub_1BAC3CE40();
}

_QWORD *sub_1BAC40B7C(uint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[128];
  __int128 v12[8];
  _BYTE v13[128];

  sub_1BA895FE8(v1, (uint64_t)v12);
  sub_1BA895FE8(v12, (uint64_t)v13);
  if (sub_1BA896024((uint64_t)v13) == 1)
  {
    v4 = *(_QWORD *)(sub_1BA896030((uint64_t)v13) + 112);
    sub_1BA895FE8(v12, (uint64_t)v11);
    v5 = sub_1BA896030((uint64_t)v11);
    sub_1BAB0590C(v5);
    sub_1BABEB020(a1, v4);
  }
  else
  {
    v6 = (uint64_t *)sub_1BA896030((uint64_t)v13);
    v7 = *v6;
    v8 = v6[6];
    sub_1BA895FE8(v12, (uint64_t)v11);
    v9 = *(_QWORD *)(sub_1BA896030((uint64_t)v11) + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA5DCC20(v9);
    sub_1BABEB020(a1, v7);
    if (!v2 && v8)
      sub_1BAC4375C();
  }
  return sub_1BA6A0C50(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA895D94);
}

uint64_t sub_1BAC40CAC(uint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  int v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  __int128 v8[8];
  __int128 v9[8];
  _BYTE v10[128];

  sub_1BA896178(v1, (uint64_t)v8);
  sub_1BA896178(v8, (uint64_t)v9);
  sub_1BA895FE8(v9, (uint64_t)v10);
  v4 = sub_1BA896024((uint64_t)v10);
  v5 = (uint64_t *)sub_1BA896030((uint64_t)v10);
  if (v4 == 1)
    return sub_1BABEB020(a1, v5[14]);
  v7 = v5[6];
  result = sub_1BABEB020(a1, *v5);
  if (!v2)
  {
    if (v7)
      return sub_1BAC4375C();
  }
  return result;
}

void sub_1BAC40D64(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 8);
  sub_1BAC32068();
  if (!v2)
  {
    if (v4)
      sub_1BAC4055C(a1);
  }
}

void sub_1BAC40DAC(unint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = v1;
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v5 = v1[6];
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v6; ++i)
      {
        v8 = *(_QWORD *)(v5 + 8 * i + 32);
        sub_1BA7196DC(v8);
        sub_1BAC2F274();
        sub_1BA719340(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7])
      sub_1BAC4055C(a1);
    v9 = v1[8];
    if (v9)
    {
      swift_beginAccess();
      v10 = *(_QWORD *)(v9 + 72);
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_1BABEB4B0(a1, v10);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v11 = *(_QWORD *)(v9 + 88);
      swift_bridgeObjectRetain();
      sub_1BAC26724(a1, v11);
      swift_bridgeObjectRelease();
    }
    sub_1BAC32068();
    swift_beginAccess();
    v12 = v3[11];
    if (v12 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      sub_1BA67D3F4(v12);
      sub_1BA67D3F4(v13);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v13, v14);
      sub_1BA6EEDB4(v13);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v12);
    }
  }
}

void sub_1BAC40FD8(unint64_t a1)
{
  sub_1BAC40DAC(a1);
}

uint64_t sub_1BAC40FF8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t result;
  uint64_t v12;
  unsigned __int8 *i;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v3 = *v0;
  v2 = v0[1];
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain_n();
      v5 = (unsigned __int8 *)(v3 + 64);
      while (1)
      {
        v6 = *((_QWORD *)v5 - 4);
        v7 = *((_QWORD *)v5 - 3);
        v8 = *((_QWORD *)v5 - 2);
        v9 = *((_QWORD *)v5 - 1);
        v10 = *v5;
        sub_1BA527164(v6, v7, v8, v9, *v5);
        sub_1BAC411CC();
        if (v1)
          break;
        v5 += 40;
        sub_1BA5271D4(v6, v7, v8, v9, v10);
        if (!--v4)
        {
          result = swift_bridgeObjectRelease_n();
          goto LABEL_7;
        }
      }
      sub_1BA5271D4(v6, v7, v8, v9, v10);
      return swift_bridgeObjectRelease_n();
    }
  }
LABEL_7:
  if (v2)
  {
    v12 = *(_QWORD *)(v2 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain_n();
      for (i = (unsigned __int8 *)(v2 + 64); ; i += 40)
      {
        v14 = *((_QWORD *)i - 4);
        v15 = *((_QWORD *)i - 3);
        v16 = *((_QWORD *)i - 2);
        v17 = *((_QWORD *)i - 1);
        v18 = *i;
        sub_1BA527164(v14, v15, v16, v17, *i);
        sub_1BAC411CC();
        if (v1)
          break;
        sub_1BA5271D4(v14, v15, v16, v17, v18);
        if (!--v12)
          return swift_bridgeObjectRelease_n();
      }
      sub_1BA5271D4(v14, v15, v16, v17, v18);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BAC411B8()
{
  return sub_1BAC40FF8();
}

void sub_1BAC411CC()
{
  __asm { BR              X10 }
}

void sub_1BAC41218()
{
  sub_1BAC444B8();
}

void sub_1BAC41900()
{
  sub_1BAC411CC();
}

uint64_t sub_1BAC41914(uint64_t a1)
{
  return sub_1BAC41928(a1);
}

uint64_t sub_1BAC41928(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1BABEAF2C(a1, v3);
  return swift_bridgeObjectRelease();
}

void sub_1BAC4196C(unint64_t a1)
{
  sub_1BAC4055C(a1);
}

void sub_1BAC4198C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *(_QWORD *)(v1 + 16);
  v17 = *(_QWORD *)(v1 + 24);
  v4 = *(unsigned __int8 *)(v1 + 136);
  v5 = *(_QWORD *)(v1 + 144);
  v7 = *(_QWORD *)(v1 + 160);
  v6 = *(_QWORD *)(v1 + 168);
  v9 = *(_QWORD *)(v1 + 176);
  v8 = *(_QWORD *)(v1 + 184);
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    v16 = v7;
    v15 = v8;
    if ((~v18 & 0xF000000000000007) != 0)
      sub_1BAC359AC();
    if (v17)
      sub_1BABE9768(a1, v17);
    if (v4 != 254)
      sub_1BAC35E00();
    if ((~v5 & 0xF000000000000007) != 0)
      sub_1BAC35E00();
    if (v7 >= 3)
    {
      if (v7 != 3)
      {
        v10 = *(_QWORD *)(v7 + 16);
        v11 = *(_QWORD *)(v7 + 24);
        sub_1BA6E6C80(v16);
        sub_1BA6E6E84(v10);
        sub_1BA6E6E84(v11);
        sub_1BAC34E0C(a1, v10, v11);
        sub_1BA6E7468(v10);
        sub_1BA6E7468(v11);
        sub_1BA6E6CF0(v16);
      }
    }
    else
    {
      sub_1BA6E6CF0(v7);
    }
    if (v6)
    {
      v12 = *(_QWORD *)(v6 + 16);
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        v13 = (_BYTE *)(v6 + 40);
        do
        {
          if ((*v13 & 1) == 0)
          {
            v14 = *((_QWORD *)v13 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v14, 0);
            sub_1BA72C46C(v14, 0);
          }
          v13 += 16;
          --v12;
        }
        while (v12);
        swift_bridgeObjectRelease_n();
      }
    }
    if (v9)
      sub_1BABF837C(a1, v9);
    if (v15 != 1)
      sub_1BAC40FF8();
  }
}

void sub_1BAC41BFC(unint64_t a1)
{
  sub_1BAC4198C(a1);
}

unint64_t sub_1BAC41C10(unint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = *v1;
  if ((unint64_t)*v1 >= 3)
  {
    v3 = result;
    v4 = *(_QWORD *)(v2 + 16);
    v5 = *(_QWORD *)(v2 + 24);
    sub_1BA6E6E84(v4);
    sub_1BA6E6E84(v5);
    sub_1BAC34E0C(v3, v4, v5);
    sub_1BA6E7468(v4);
    return sub_1BA6E7468(v5);
  }
  return result;
}

uint64_t sub_1BAC41C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC440BC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAC35404);
}

void sub_1BAC41CA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v1;
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v5 = v1[6];
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v6; ++i)
      {
        v8 = *(_QWORD *)(v5 + 8 * i + 32);
        sub_1BA7196DC(v8);
        sub_1BAC2F274();
        sub_1BA719340(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7])
      sub_1BAC45F4C(a1, (void (*)(uint64_t, uint64_t))sub_1BAC255A8);
    v9 = v1[8];
    if (v9)
    {
      swift_beginAccess();
      v10 = *(_QWORD *)(v9 + 72);
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_1BABEB4B0(a1, v10);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v11 = *(_QWORD *)(v9 + 88);
      swift_bridgeObjectRetain();
      sub_1BAC26724(a1, v11);
      swift_bridgeObjectRelease();
    }
    v12 = v3[9];
    if (v12 < 0)
    {
      v16 = *(_QWORD *)(v12 + 16);
      v17 = *(_QWORD *)(v12 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BAC35404(a1, v16, v17);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v13 = v3[11];
    if (v13 >> 62 == 1)
    {
      v14 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v13 + 24);
      sub_1BA67D3F4(v13);
      sub_1BA67D3F4(v14);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v14, v15);
      sub_1BA6EEDB4(v14);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v13);
    }
  }
}

void sub_1BAC41F18(uint64_t a1)
{
  sub_1BAC41CA0(a1);
}

void sub_1BAC41F38(uint64_t a1)
{
  sub_1BAC45F4C(a1, (void (*)(uint64_t, uint64_t))sub_1BAC255A8);
}

void sub_1BAC41F60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = *(unsigned __int8 *)(v1 + 136);
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    if (v5)
    {
      v7 = *(_QWORD *)(v5 + 16);
      if (v7)
      {
        swift_bridgeObjectRetain_n();
        v8 = (_BYTE *)(v5 + 40);
        do
        {
          if ((*v8 & 1) == 0)
          {
            v9 = *((_QWORD *)v8 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v9, 0);
            sub_1BA72C46C(v9, 0);
          }
          v8 += 16;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease_n();
      }
    }
    if (v4)
      sub_1BABE9768(a1, v4);
    if (v6 != 254)
      sub_1BAC35E00();
  }
}

void sub_1BAC420A8(uint64_t a1)
{
  sub_1BAC41F60(a1);
}

void sub_1BAC420BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1[9];
  v8 = v1[10];
  v33 = v3[11];
  v11 = v3[13];
  v10 = v3[14];
  swift_bridgeObjectRetain();
  sub_1BABEBCF0(a1, v9);
  v12 = v2;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    if (v8)
      sub_1BAC423AC(a1);
    v13 = v33;
    v14 = *(_QWORD *)(v33 + 16);
    v30 = v10;
    v31 = v11;
    if (v14)
    {
      v29 = v6;
      v34 = a1;
      v45 = 0;
      swift_bridgeObjectRetain_n();
      v15 = (uint64_t *)(v13 + 48);
      do
      {
        v35 = v14;
        v16 = *(v15 - 2);
        v17 = *(v15 - 1);
        v18 = *v15;
        v19 = v15[1];
        v21 = v15[2];
        v20 = v15[3];
        v23 = v15[4];
        v22 = v15[5];
        v37 = v16;
        v38 = v17;
        v39 = v18;
        v40 = v19;
        v41 = v21;
        v42 = v20;
        v43 = v23;
        v44 = v22;
        v36 = v22;
        sub_1BA76B724(v16, v17, v18, v19, v21, v20, v23);
        v24 = v45;
        sub_1BAC490F8();
        v45 = v24;
        if (v24)
        {
          sub_1BA76B698(v16, v17, v18, v19, v21, v20, v23);
          swift_bridgeObjectRelease_n();
          return;
        }
        v15 += 8;
        sub_1BA76B698(v16, v17, v18, v19, v21, v20, v23);
        v14 = v35 - 1;
      }
      while (v35 != 1);
      swift_bridgeObjectRelease_n();
      v12 = v45;
      a1 = v34;
      v10 = v30;
      v11 = v31;
      v25 = (uint64_t)v32;
      v6 = v29;
      v26 = *(_QWORD *)(v31 + 16);
      if (v26)
        goto LABEL_11;
      goto LABEL_15;
    }
    v25 = (uint64_t)v32;
    v26 = *(_QWORD *)(v11 + 16);
    if (!v26)
    {
LABEL_15:
      swift_bridgeObjectRetain();
      sub_1BABF86EC(a1, v10);
      swift_bridgeObjectRelease();
      return;
    }
LABEL_11:
    v27 = v11 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v28 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BA4C2DD8(v27, v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v37 = *(_QWORD *)(v25 + 16);
      swift_retain();
      sub_1BAC49F9C();
      if (v12)
        break;
      swift_release();
      sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v27 += v28;
      if (!--v26)
      {
        swift_bridgeObjectRelease_n();
        v10 = v30;
        goto LABEL_15;
      }
    }
    swift_release();
    sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease_n();
  }
}

void sub_1BAC423AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  __int128 v19;
  int EnumCaseMultiPayload;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  char v49;

  v3 = v1;
  v5 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v5);
  v42 = (uint64_t *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v43 = (uint64_t)&v42 - v8;
  v9 = type metadata accessor for FormatItemNodeAction();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3C8F38, v13);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v42 - v15;
  if ((*(_BYTE *)(v1 + 112) & 0xFE) != 0x7E && (*(_QWORD *)(v1 + 48) & 0xF000000000000007) != 0xF000000000000007)
  {
    *(_QWORD *)&v44 = *(_QWORD *)(v1 + 48);
    sub_1BAC35E00();
    if (v2)
      return;
  }
  v17 = *(unsigned __int8 *)(v1 + 176);
  if (v17 != 255)
  {
    v18 = *(_QWORD *)(v1 + 168);
    v19 = *(_OWORD *)(v1 + 136);
    v44 = *(_OWORD *)(v1 + 120);
    v45 = v19;
    v46 = *(_OWORD *)(v1 + 152);
    v47 = v18;
    v48 = v17;
    sub_1BAC39344();
    if (v2)
      return;
  }
  sub_1BA57B488(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t)v16, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9) != 1)
  {
    sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 2) < 6)
    {
LABEL_9:
      sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      v29 = *(_QWORD *)v12;
      v30 = *((_QWORD *)v12 + 1);
      v31 = *((_QWORD *)v12 + 2);
      LODWORD(v43) = v12[25];
      v32 = v12[24];
      *(_QWORD *)&v44 = v29;
      *((_QWORD *)&v44 + 1) = v30;
      *(_QWORD *)&v45 = v31;
      BYTE8(v45) = v32;
      BYTE9(v45) = v43;
      sub_1BAC42EFC();
      sub_1BAC65170(v29, v30, v31, v32, v43, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
      if (!v2)
        goto LABEL_9;
LABEL_31:
      sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      return;
    }
    v33 = (uint64_t)v12;
    v34 = v43;
    sub_1BA5193C4(v33, v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
    v35 = v42;
    sub_1BA4C2DD8(v34, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
    v36 = swift_getEnumCaseMultiPayload();
    if (v36)
    {
      if (v36 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v37 = *v35;
        v38 = v35[1];
        v39 = v35[2];
        *(_QWORD *)&v44 = v37;
        *((_QWORD *)&v44 + 1) = v38;
        *(_QWORD *)&v45 = v39;
        v49 = 6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40 = sub_1BB6B84D4((uint64_t *)&v44, &v49);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
          goto LABEL_31;
        }
        v41 = v40;
        swift_bridgeObjectRelease();
        sub_1BB3D7F90(v37, v38, v41, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
    }
    sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
    goto LABEL_9;
  }
  sub_1BA502AD0((uint64_t)v16, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
LABEL_10:
  v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  v22 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
  if (v21 >= 3)
  {
    if (v21 != 3)
    {
      *(_QWORD *)&v44 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
      *((_QWORD *)&v44 + 1) = v22;
      sub_1BAC4375C();
      if (v2)
        return;
    }
  }
  else
  {
    sub_1BA7644C0(v21);
  }
  v23 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  v24 = *v23;
  v25 = *(_QWORD *)(*v23 + 16);
  if (v25)
  {
    v26 = *(_QWORD *)(type metadata accessor for FormatItemNodeStyle.Selector(0) - 8);
    v27 = v24 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    v28 = *(_QWORD *)(v26 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BAC431A0(a1);
      if (v2)
        break;
      v27 += v28;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
  }
}

void sub_1BAC42858(uint64_t a1)
{
  sub_1BAC420BC(a1);
}

void sub_1BAC4286C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v3 = v1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v1[6];
  sub_1BABE39D4();
  v9 = v2;
  if (!v2)
  {
    v37 = v8;
    swift_beginAccess();
    v10 = v1[8];
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v11; ++i)
      {
        v13 = *(_QWORD *)(v10 + 8 * i + 32);
        v42 = v13;
        sub_1BA7196DC(v13);
        sub_1BAC2F274();
        sub_1BA719340(v13);
      }
      swift_bridgeObjectRelease_n();
    }
    v14 = (uint64_t)v37;
    swift_beginAccess();
    v15 = v1[9];
    v16 = *(_QWORD *)(v15 + 16);
    v36 = v3;
    if (v16)
    {
      v35[0] = v6;
      v38 = a1;
      v50 = 0;
      swift_bridgeObjectRetain_n();
      v35[1] = v15;
      v17 = (uint64_t *)(v15 + 48);
      while (1)
      {
        v39 = v16;
        v18 = *(v17 - 2);
        v19 = *(v17 - 1);
        v21 = *v17;
        v20 = v17[1];
        v22 = v17[2];
        v23 = v17[3];
        v25 = v17[4];
        v24 = v17[5];
        v42 = v18;
        v43 = v19;
        v44 = v21;
        v45 = v20;
        v46 = v22;
        v47 = v23;
        v48 = v25;
        v49 = v24;
        v40 = v24;
        sub_1BA76B724(v18, v19, v21, v20, v22, v23, v25);
        v26 = v50;
        sub_1BAC490F8();
        v50 = v26;
        if (v26)
          break;
        v17 += 8;
        sub_1BA76B698(v18, v19, v21, v20, v22, v23, v25);
        v16 = v39 - 1;
        if (v39 == 1)
        {
          swift_bridgeObjectRelease_n();
          v9 = v50;
          a1 = v38;
          v3 = v36;
          v14 = (uint64_t)v37;
          v6 = v35[0];
          goto LABEL_11;
        }
      }
      sub_1BA76B698(v18, v19, v21, v20, v22, v23, v25);
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      swift_beginAccess();
      v27 = v3[11];
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        v29 = v27 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        v30 = *(_QWORD *)(v6 + 72);
        v50 = v27;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BA4C2DD8(v29, v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v41 = *(_QWORD *)(v14 + 16);
          swift_retain();
          sub_1BAC49F9C();
          if (v9)
            break;
          swift_release();
          sub_1BA4A2E80(v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v29 += v30;
          if (!--v28)
          {
            swift_bridgeObjectRelease_n();
            v3 = v36;
            goto LABEL_16;
          }
        }
        swift_release();
        sub_1BA4A2E80(v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_16:
        swift_beginAccess();
        v31 = v3[14];
        if (v31 >> 62 != 1)
          goto LABEL_18;
        v32 = *(_QWORD *)(v31 + 16);
        v33 = *(_QWORD *)(v31 + 24);
        sub_1BA67D3F4(v3[14]);
        sub_1BA67D3F4(v32);
        swift_bridgeObjectRetain();
        sub_1BAC3520C(a1, v32, v33);
        sub_1BA6EEDB4(v32);
        swift_bridgeObjectRelease();
        sub_1BA6EEDB4(v31);
        if (!v9)
        {
LABEL_18:
          swift_beginAccess();
          v34 = v3[15];
          swift_bridgeObjectRetain();
          sub_1BAC24BA4(a1, v34);
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_1BAC42C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unsigned int v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;

  v2 = v0;
  v3 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  v9 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v2, (uint64_t)v11, v12);
  result = swift_getEnumCaseMultiPayload();
  if ((result - 2) >= 6)
  {
    if ((_DWORD)result)
    {
      sub_1BA5193C4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
      sub_1BA4C2DD8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
        {
          v21 = *v5;
          v20 = v5[1];
          v22 = v5[2];
          v25 = v21;
          v26 = v20;
          v27 = v22;
          v30 = 6;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v23 = sub_1BB6B84D4(&v25, &v30);
          if (!v1)
          {
            v24 = v23;
            swift_bridgeObjectRelease();
            sub_1BB3D7F90(v21, v20, v24, 0);
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
      }
      return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
    }
    else
    {
      v14 = *(_QWORD *)v11;
      v15 = *((_QWORD *)v11 + 1);
      v16 = *((_QWORD *)v11 + 2);
      v17 = v11[25];
      v18 = v11[24];
      v25 = v14;
      v26 = v15;
      v27 = v16;
      v28 = v18;
      v29 = v17;
      sub_1BAC42EFC();
      return sub_1BAC65170(v14, v15, v16, v18, v17, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    }
  }
  return result;
}

void sub_1BAC42EFC()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 25))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X10 }
}

uint64_t sub_1BAC42F58()
{
  unsigned int v0;

  return ((uint64_t (*)(void))((char *)sub_1BAC42F74 + 4 * byte_1BB8A625C[(v0 >> 4) & 3]))();
}

void sub_1BAC42F74()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  if (v3 >> 6 < 2)
  {
    if (!(_BYTE)v2 && (v4 & 0xF000000000000007) != 0xF000000000000007)
LABEL_7:
      sub_1BB5635E8();
  }
  else
  {
    if ((v3 & 0xF) == 0)
    {
      if ((~v0 & 0xF000000000000007) == 0)
        return;
      goto LABEL_7;
    }
    if ((v3 & 0xF) != 1)
    {
      sub_1BAC65170(v4, v0, v2, v3, v1, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
      sub_1BAC65170(v4, v0, v2, v3, v1, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    }
  }
}

uint64_t sub_1BAC43124()
{
  return sub_1BAC42C9C();
}

void sub_1BAC43138()
{
  sub_1BAC39E7C();
}

void sub_1BAC43180(uint64_t a1)
{
  sub_1BAC423AC(a1);
}

void sub_1BAC431A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  int EnumCaseMultiPayload;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  char v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  char v62;
  char v63;

  v2 = v1;
  v56 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v56);
  v55 = (uint64_t *)((char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v52 - v6;
  v8 = type metadata accessor for FormatItemNodeAction();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, &qword_1ED3C8F38, v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v52 - v14;
  v16 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)&v58 = *(_QWORD *)v1;
  *((_QWORD *)&v58 + 1) = v16;
  v17 = (uint64_t)v57;
  sub_1BB5D2C38(a1);
  if (!v17)
  {
    v53 = v7;
    v54 = v11;
    v57 = v15;
    if ((*(_BYTE *)(v1 + 80) & 0xFE) == 0x7E)
    {
      v19 = v8;
      v18 = v9;
    }
    else
    {
      v18 = v9;
      if ((*(_QWORD *)(v1 + 16) & 0xF000000000000007) != 0xF000000000000007)
      {
        *(_QWORD *)&v58 = *(_QWORD *)(v1 + 16);
        sub_1BAC35E00();
      }
      v19 = v8;
    }
    v20 = *(unsigned __int8 *)(v1 + 144);
    if (v20 != 255)
    {
      v21 = *(_QWORD *)(v1 + 136);
      v22 = *(_OWORD *)(v1 + 104);
      v58 = *(_OWORD *)(v1 + 88);
      v59 = v22;
      v60 = *(_OWORD *)(v1 + 120);
      v61 = v21;
      v62 = v20;
      sub_1BAC39344();
    }
    v23 = type metadata accessor for FormatItemNodeStyle.Selector(0);
    v24 = (uint64_t)v57;
    sub_1BA57B488(v2 + *(int *)(v23 + 28), (uint64_t)v57, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v24, 1, v19) == 1)
    {
      sub_1BA502AD0(v24, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
    }
    else
    {
      v25 = v54;
      sub_1BA4C2DD8(v24, (uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 2) >= 6)
      {
        v34 = v2;
        if (EnumCaseMultiPayload)
        {
          v44 = (uint64_t)v25;
          v45 = (uint64_t)v53;
          sub_1BA5193C4(v44, (uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
          v46 = v55;
          sub_1BA4C2DD8(v45, (uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
          v47 = swift_getEnumCaseMultiPayload();
          if (v47)
          {
            if (v47 != 1)
            {
              v48 = *v46;
              v49 = v46[1];
              v50 = v46[2];
              *(_QWORD *)&v58 = v48;
              *((_QWORD *)&v58 + 1) = v49;
              *(_QWORD *)&v59 = v50;
              v63 = 6;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v51 = sub_1BB6B84D4((uint64_t *)&v58, &v63);
              swift_bridgeObjectRelease();
              sub_1BB3D7F90(v48, v49, v51, 0);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1BA4A2E80((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
          }
          v24 = (uint64_t)v57;
          v2 = v34;
          sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
        }
        else
        {
          v56 = v23;
          v35 = v25;
          v36 = *v25;
          v37 = v25[1];
          v38 = v35[2];
          v39 = *((unsigned __int8 *)v35 + 24);
          v40 = *((_BYTE *)v35 + 25);
          *(_QWORD *)&v58 = v36;
          *((_QWORD *)&v58 + 1) = v37;
          *(_QWORD *)&v59 = v38;
          BYTE8(v59) = v39;
          BYTE9(v59) = v40;
          sub_1BAC42EFC();
          sub_1BAC65170(v36, v37, v38, v39, v40, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
          v23 = v56;
          v24 = (uint64_t)v57;
          v2 = v34;
        }
      }
      sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    }
    v27 = (unint64_t *)(v2 + *(int *)(v23 + 40));
    v29 = *v27;
    v28 = v27[1];
    if (*v27 < 3)
      goto LABEL_14;
    if (*v27 != 3)
    {
      v30 = *(_QWORD *)(v29 + 16);
      if (v30)
      {
        v31 = swift_bridgeObjectRetain();
        sub_1BA77567C(v31);
        swift_bridgeObjectRetain();
        v32 = (_BYTE *)(v29 + 40);
        do
        {
          if ((*v32 & 1) == 0)
          {
            *(_QWORD *)&v58 = *((_QWORD *)v32 - 1);
            v33 = v58;
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v33, 0);
            sub_1BA72C46C(v33, 0);
          }
          v32 += 16;
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_1BAC68784(*v27);
      }
      v41 = *(_QWORD *)(v28 + 16);
      if (v41)
      {
        swift_bridgeObjectRetain_n();
        v42 = (_BYTE *)(v28 + 40);
        do
        {
          if ((*v42 & 1) == 0)
          {
            *(_QWORD *)&v58 = *((_QWORD *)v42 - 1);
            v43 = v58;
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v43, 0);
            sub_1BA72C46C(v43, 0);
          }
          v42 += 16;
          --v41;
        }
        while (v41);
        swift_bridgeObjectRelease_n();
      }
LABEL_14:
      sub_1BA7644C0(v29);
    }
  }
}

void sub_1BAC43748(uint64_t a1)
{
  sub_1BAC431A0(a1);
}

uint64_t sub_1BAC4375C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = *v0;
  v2 = v0[1];
  v4 = *(_QWORD *)(*v0 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    v5 = (_BYTE *)(v3 + 40);
    while (1)
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
        if (v1)
          break;
      }
      v5 += 16;
      if (!--v4)
      {
        result = swift_bridgeObjectRelease_n();
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    v8 = *(_QWORD *)(v2 + 16);
    if (!v8)
      return result;
    swift_bridgeObjectRetain_n();
    v9 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v9 & 1) == 0)
      {
        v10 = *((_QWORD *)v9 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v10, 0);
        sub_1BA72C46C(v10, 0);
        if (v1)
          break;
      }
      v9 += 16;
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BAC438AC()
{
  _QWORD *v0;
  uint64_t result;

  if (*v0 >= 3uLL)
    return sub_1BAC4375C();
  return result;
}

uint64_t sub_1BAC438E8()
{
  return sub_1BAC4375C();
}

void sub_1BAC438FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[1];
  v3 = v0[2];
  if ((~*v0 & 0xF000000000000007) == 0 || (sub_1BAC35E00(), !v1))
  {
    if ((~v2 & 0xF000000000000007) == 0 || (sub_1BA9F22C4(), !v1))
    {
      if ((~v3 & 0xF000000000000007) != 0)
        sub_1BA9F22C4();
    }
  }
}

void sub_1BAC43988()
{
  sub_1BAC438FC();
}

void sub_1BAC439C0()
{
  sub_1BAC438FC();
}

void sub_1BAC439D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v3 = v2;
  v4 = v1;
  v6 = v1[4];
  if (v6 < 0)
  {
    v7 = *(_QWORD *)(v6 + 16);
    v8 = *(_QWORD *)(v6 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BAC350FC(a1, v7, v8);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (v1[5])
    {
LABEL_3:
      sub_1BAC43C70(a1);
      if (v3)
        return;
    }
  }
  else if (v1[5])
  {
    goto LABEL_3;
  }
  v9 = v1[6];
  if (!v9)
    goto LABEL_22;
  swift_beginAccess();
  v10 = *(_QWORD *)(v9 + 72);
  if (!v10 || (swift_bridgeObjectRetain(), sub_1BABEB4B0(a1, v10), swift_bridgeObjectRelease(), !v3))
  {
    swift_beginAccess();
    v11 = *(_QWORD *)(v9 + 88);
    swift_bridgeObjectRetain();
    sub_1BAC26724(a1, v11);
    swift_bridgeObjectRelease();
    if (!v3)
    {
LABEL_22:
      sub_1BABE39D4();
      if (!v3)
      {
        swift_beginAccess();
        v12 = v4[9];
        v13 = *(_QWORD *)(v12 + 16);
        if (v13)
        {
          swift_bridgeObjectRetain_n();
          for (i = 0; i != v13; ++i)
          {
            v15 = *(_QWORD *)(v12 + 8 * i + 32);
            sub_1BA7196DC(v15);
            sub_1BAC2F274();
            sub_1BA719340(v15);
          }
          swift_bridgeObjectRelease_n();
        }
        swift_beginAccess();
        v16 = v4[11];
        if (v16 >> 62 == 1)
        {
          v17 = *(_QWORD *)(v16 + 16);
          v18 = *(_QWORD *)(v16 + 24);
          sub_1BA67D3F4(v16);
          sub_1BA67D3F4(v17);
          swift_bridgeObjectRetain();
          sub_1BAC3520C(a1, v17, v18);
          sub_1BA6EEDB4(v17);
          swift_bridgeObjectRelease();
          sub_1BA6EEDB4(v16);
        }
      }
    }
  }
}

void sub_1BAC43C70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    v6 = *(_OWORD *)(v4 + 192);
    v48 = *(_OWORD *)(v4 + 176);
    v49 = v6;
    v7 = *(_OWORD *)(v4 + 224);
    v50 = *(_OWORD *)(v4 + 208);
    v51 = v7;
    v8 = *(_OWORD *)(v4 + 128);
    v44 = *(_OWORD *)(v4 + 112);
    v45 = v8;
    v9 = *(_OWORD *)(v4 + 160);
    v46 = *(_OWORD *)(v4 + 144);
    v47 = v9;
    v10 = *(_OWORD *)(v4 + 48);
    v11 = *(_OWORD *)(v4 + 80);
    v12 = *(_OWORD *)(v4 + 96);
    v41 = *(_OWORD *)(v4 + 64);
    v42 = v11;
    v43 = v12;
    v39 = *(_OWORD *)(v4 + 32);
    v40 = v10;
    sub_1BAC687E4((uint64_t)&v39);
    sub_1BAC44154(a1);
    if (v2)
    {
      sub_1BAC6890C((uint64_t)&v39);
      goto LABEL_7;
    }
    v13 = 240;
    while (1)
    {
      sub_1BAC6890C((uint64_t)&v39);
      if (!--v5)
        break;
      v14 = (_OWORD *)(v4 + v13);
      v15 = *(_OWORD *)(v4 + v13);
      v13 += 208;
      v39 = v15;
      v16 = v14[1];
      v17 = v14[2];
      v18 = v14[4];
      v42 = v14[3];
      v43 = v18;
      v40 = v16;
      v41 = v17;
      v19 = v14[5];
      v20 = v14[6];
      v21 = v14[8];
      v46 = v14[7];
      v47 = v21;
      v44 = v19;
      v45 = v20;
      v22 = v14[9];
      v23 = v14[10];
      v24 = v14[12];
      v50 = v14[11];
      v51 = v24;
      v48 = v22;
      v49 = v23;
      sub_1BAC687E4((uint64_t)&v39);
      sub_1BAC44154(a1);
    }
    swift_bridgeObjectRelease_n();
  }
  v25 = *(_QWORD *)(v1 + 56);
  if (v25)
  {
    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      swift_bridgeObjectRetain_n();
      v27 = (_BYTE *)(v25 + 40);
      while (1)
      {
        if ((*v27 & 1) == 0)
        {
          *(_QWORD *)&v39 = *((_QWORD *)v27 - 1);
          v28 = v39;
          swift_retain_n();
          sub_1BA9F22C4();
          if (v2)
          {
            sub_1BA72C46C(v28, 0);
            sub_1BA72C46C(v28, 0);
LABEL_7:
            swift_bridgeObjectRelease_n();
            return;
          }
          sub_1BA72C46C(v28, 0);
          sub_1BA72C46C(v28, 0);
        }
        v27 += 16;
        if (!--v26)
        {
          swift_bridgeObjectRelease_n();
          break;
        }
      }
    }
  }
  if ((~*(_QWORD *)(v1 + 64) & 0xF000000000000007) == 0
    || (*(_QWORD *)&v39 = *(_QWORD *)(v1 + 64), sub_1BAC359AC(), !v2))
  {
    v29 = *(_QWORD *)(v1 + 72);
    if (!v29 || (sub_1BABE9768(a1, v29), !v2))
    {
      if (*(unsigned __int8 *)(v1 + 184) == 254 || (*(_QWORD *)&v39 = *(_QWORD *)(v1 + 136), sub_1BAC35E00(), !v2))
      {
        v30 = *(unsigned __int8 *)(v1 + 208);
        if (v30 != 255)
        {
          v31 = *(_QWORD *)(v1 + 192);
          v32 = *(_QWORD *)(v1 + 200);
          if ((v30 & 1) != 0)
          {
            sub_1BA796C58(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200), *(_BYTE *)(v1 + 208));
            v33 = sub_1BA862600((uint64_t)&unk_1E724DCB8);
            sub_1BB3D7F90(v31, v32, v33, 0);
            swift_bridgeObjectRelease();
            sub_1BA796C70(v31, v32, v30);
            if (v2)
              return;
          }
          else
          {
            sub_1BA796C70(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200), *(_BYTE *)(v1 + 208));
          }
        }
        v34 = *(unsigned __int8 *)(v1 + 232);
        if (v34 != 255)
        {
          v35 = *(_QWORD *)(v1 + 216);
          v36 = *(_QWORD *)(v1 + 224);
          if ((v34 & 1) != 0)
          {
            sub_1BA796C58(*(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 224), *(_BYTE *)(v1 + 232));
            v37 = sub_1BA862600((uint64_t)&unk_1E724DCE0);
            sub_1BB3D7F90(v35, v36, v37, 0);
            swift_bridgeObjectRelease();
            sub_1BA796C70(v35, v36, v34);
            if (v2)
              return;
          }
          else
          {
            sub_1BA796C70(*(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 224), *(_BYTE *)(v1 + 232));
          }
        }
        v38 = *(_QWORD *)(v1 + 240);
        if (v38)
          sub_1BABE98E4(a1, v38);
      }
    }
  }
}

void sub_1BAC44080(uint64_t a1)
{
  sub_1BAC439D4(a1);
}

uint64_t sub_1BAC440A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC440BC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAC350FC);
}

uint64_t sub_1BAC440BC(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v4;
  if (*v4 < 0)
  {
    v7 = result;
    v8 = *(_QWORD *)(v5 + 16);
    v9 = *(_QWORD *)(v5 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    a4(v7, v8, v9);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1BAC44134(uint64_t a1)
{
  sub_1BAC43C70(a1);
}

void sub_1BAC44154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *(_QWORD *)(v1 + 16);
  v25 = *(_QWORD *)(v1 + 32);
  v24 = *(_QWORD *)(v1 + 24);
  v26 = *(unsigned __int8 *)(v1 + 144);
  v4 = *(_QWORD *)(v1 + 160);
  v27 = *(_QWORD *)(v1 + 152);
  v5 = *(unsigned __int8 *)(v1 + 168);
  v6 = *(_QWORD *)(v1 + 176);
  v7 = *(_QWORD *)(v1 + 184);
  v8 = *(unsigned __int8 *)(v1 + 192);
  v9 = *(_QWORD *)(v1 + 200);
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    v10 = a1;
    v20 = v9;
    v22 = v7;
    v21 = v5;
    v23 = v6;
    if (v28)
    {
      v11 = *(_QWORD *)(v28 + 16);
      v12 = a1;
      if (v11)
      {
        swift_bridgeObjectRetain_n();
        v13 = (_BYTE *)(v28 + 40);
        do
        {
          if ((*v13 & 1) == 0)
          {
            v14 = *((_QWORD *)v13 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v14, 0);
            sub_1BA72C46C(v14, 0);
          }
          v13 += 16;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease_n();
      }
      v17 = v8;
      v16 = v4;
      v15 = v22;
    }
    else
    {
      v16 = v4;
      v15 = v7;
      v12 = v10;
      v17 = v8;
    }
    if ((~v24 & 0xF000000000000007) != 0)
      sub_1BAC359AC();
    if (v25)
      sub_1BABE9768(v12, v25);
    if (v26 != 254)
      sub_1BAC35E00();
    if (v21 != 255)
    {
      if ((v21 & 1) != 0)
      {
        sub_1BA796C58(v27, v16, v21);
        v18 = sub_1BA862600((uint64_t)&unk_1E724DC68);
        sub_1BB3D7F90(v27, v16, v18, 0);
        swift_bridgeObjectRelease();
      }
      sub_1BA796C70(v27, v16, v21);
    }
    if (v17 != 255)
    {
      if ((v17 & 1) != 0)
      {
        sub_1BA796C58(v23, v15, v17);
        v19 = sub_1BA862600((uint64_t)&unk_1E724DC90);
        sub_1BB3D7F90(v23, v15, v19, 0);
        swift_bridgeObjectRelease();
      }
      sub_1BA796C70(v23, v15, v17);
    }
    if (v20)
      sub_1BABE98E4(v12, v20);
  }
}

void sub_1BAC4447C(uint64_t a1)
{
  sub_1BAC44154(a1);
}

uint64_t sub_1BAC44490(uint64_t a1)
{
  return sub_1BAC3B428(a1);
}

void sub_1BAC444A4()
{
  sub_1BAC30C08();
}

void sub_1BAC444B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v17 = v0[3];
  v5 = *(_QWORD *)(*v0 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    v6 = (_BYTE *)(v3 + 40);
    while (1)
    {
      if ((*v6 & 1) == 0)
      {
        v7 = *((_QWORD *)v6 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        if (v1)
        {
          sub_1BA72C46C(v7, 0);
          sub_1BA72C46C(v7, 0);
          goto LABEL_30;
        }
        sub_1BA72C46C(v7, 0);
        sub_1BA72C46C(v7, 0);
      }
      v6 += 16;
      if (!--v5)
      {
        swift_bridgeObjectRelease_n();
        break;
      }
    }
  }
  v8 = *(_QWORD *)(v2 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain_n();
    v9 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v9 & 1) == 0)
      {
        v10 = *((_QWORD *)v9 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        if (v1)
        {
          sub_1BA72C46C(v10, 0);
          sub_1BA72C46C(v10, 0);
          goto LABEL_30;
        }
        sub_1BA72C46C(v10, 0);
        sub_1BA72C46C(v10, 0);
      }
      v9 += 16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
  }
  v11 = *(_QWORD *)(v4 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain_n();
    v12 = (_BYTE *)(v4 + 40);
    while (1)
    {
      if ((*v12 & 1) == 0)
      {
        v13 = *((_QWORD *)v12 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v13, 0);
        sub_1BA72C46C(v13, 0);
        if (v1)
          break;
      }
      v12 += 16;
      if (!--v11)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
    }
  }
  else
  {
LABEL_23:
    v14 = *(_QWORD *)(v17 + 16);
    if (!v14)
      return;
    swift_bridgeObjectRetain_n();
    v15 = (_BYTE *)(v17 + 40);
    do
    {
      if ((*v15 & 1) == 0)
      {
        v16 = *((_QWORD *)v15 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v16, 0);
        sub_1BA72C46C(v16, 0);
        if (v1)
          break;
      }
      v15 += 16;
      --v14;
    }
    while (v14);
  }
LABEL_30:
  swift_bridgeObjectRelease_n();
}

void sub_1BAC44748()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 32) == 1)
    sub_1BAC444B8();
}

void sub_1BAC44784(uint64_t a1)
{
  sub_1BAC38B24(a1);
}

void sub_1BAC44798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_OWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 64);
  if ((~v4 & 0xF000000000000007) != 0 || (*(_QWORD *)(v1 + 24) & 7) != 7)
  {
    v12 = *(_OWORD *)(v1 + 32);
    v10 = *(_QWORD **)v1;
    if ((v5 & 4) != 0)
    {
      sub_1BB5635E8();
      *(_QWORD *)&v6 = v12;
      if (v2)
        return;
    }
    else
    {
      v11 = *(_QWORD *)(v1 + 16);
      sub_1BA7CCBB4((uint64_t)v10, v4, v11, v5);
      sub_1BAC346D0(a1, v10, v4, v11);
      sub_1BAC68C70((uint64_t)v10, v4, v11, v5);
      *(_QWORD *)&v6 = v12;
      if (v2)
        return;
    }
  }
  if ((~((unint64_t)v6 & v7) & 0x3000000000000007) == 0 || (sub_1BAC44980(a1), !v2))
    sub_1BAC04404(a1, v8);
}

void sub_1BAC448D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(v1 + 24);
  if ((v4 & 4) != 0)
  {
    sub_1BB5635E8();
  }
  else
  {
    v7 = v1 + 8;
    v5 = *(_QWORD *)(v1 + 8);
    v6 = *(_QWORD *)(v7 + 8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAC346D0(a1, v3, v5, v6);
    sub_1BA7CCC14((uint64_t)v3, v5, v6, v4);
  }
}

void sub_1BAC44980(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v1;
  v5 = v1[2];
  if ((v5 & 0x2000000000000000) != 0)
  {
    sub_1BAC45158(a1);
  }
  else
  {
    v6 = v1[1];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAC39E7C();
    if (!v2)
    {
      sub_1BAC17364(a1, v6);
      sub_1BAC45158(a1);
    }
    sub_1BA7CCC64(v4, v6, v5);
  }
}

void sub_1BAC44A6C(uint64_t a1)
{
  sub_1BAC44798(a1);
}

void sub_1BAC44A80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v4 = *(unsigned __int8 *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 56);
  if (v4 == 255 || (v4 & 1) == 0)
    goto LABEL_6;
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v7 + 24);
  sub_1BA92F754((void *)v7, 1);
  sub_1BABEF514(a1, v8);
  if (!v2)
  {
    sub_1BAC3A148(a1, *(void **)(v7 + 32));
    sub_1BAC68A38((void *)v7, v4);
LABEL_6:
    sub_1BABEF6C8(a1, v5);
    return;
  }
  sub_1BAC68A38((void *)v7, v4);
}

void sub_1BAC44B44(uint64_t a1)
{
  sub_1BAC44A80(a1);
}

void sub_1BAC44B58(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_1BAC44B98(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (_QWORD *)a2[2];
  v5 = a2[5];
  v6 = a2[9];
  if ((v5 & 4) != 0)
  {
    sub_1BB5635E8();
    if (v2)
      return;
  }
  else
  {
    v8 = a2[3];
    v7 = a2[4];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAC346D0(v3, v4, v8, v7);
    sub_1BA7CCC14((uint64_t)v4, v8, v7, v5);
    if (v2)
      return;
  }
  sub_1BAC44980(v3);
  sub_1BAC45494(v3, v6);
}

void sub_1BAC44E00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 56);
  if ((v5 & 4) != 0)
  {
    sub_1BB5635E8();
    v10 = v2;
    if (v2)
      return;
  }
  else
  {
    v9 = v1 + 8;
    v7 = *(_QWORD *)(v1 + 8);
    v8 = *(_QWORD *)(v9 + 8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAC346D0(a1, v4, v7, v8);
    v10 = v2;
    sub_1BA7CCC14((uint64_t)v4, v7, v8, v5);
    if (v2)
      return;
  }
  sub_1BAC44980(a1);
  if (!v10)
    sub_1BAC45494(a1, v6);
}

void sub_1BAC44F04(uint64_t a1)
{
  uint64_t *v1;

  sub_1BAC44B58(a1, *v1);
}

void sub_1BAC44F1C()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC44F60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v3 = *(_QWORD *)(a1 + 16);
    v4 = *(_QWORD *)(a1 + 24);
    v5 = *(_BYTE *)(a1 + 32);
    v6 = *(_QWORD *)(a1 + 40);
    v7 = *(_QWORD *)(v6 + 24);
    sub_1BAB5EC7C(v3, v4, v5);
    sub_1BA92F754((void *)v6, 1);
    swift_retain();
    sub_1BA92F754((void *)v6, 1);
    sub_1BABEF514(v2, v7);
    if (!v1)
      sub_1BAC3A148(v2, *(void **)(v6 + 32));
    sub_1BA92F770((void *)v6, 1);
    sub_1BAB5EC9C(v3, v4, v5);
    sub_1BA92F770((void *)v6, 1);
    return swift_release();
  }
  return result;
}

void sub_1BAC450C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = v2;
  if (*(_BYTE *)(v1 + 32) == 1)
  {
    v5 = *(_QWORD *)(v1 + 24);
    v6 = *(_QWORD *)(v5 + 24);
    swift_retain();
    sub_1BABEF514(a1, v6);
    if (!v3)
      sub_1BAC3A148(a1, *(void **)(v5 + 32));
    sub_1BA92F770((void *)v5, 1);
  }
}

void sub_1BAC45144()
{
  sub_1BAC44F1C();
}

void sub_1BAC45158(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v4 = *v1;
  v5 = (unint64_t)*v1 >> 62;
  if (!(_DWORD)v5)
  {
    sub_1BAC324DC(a1);
    return;
  }
  if ((_DWORD)v5 == 1)
  {
    v6 = *(_QWORD *)(v4 + 16);
    v7 = *(_QWORD *)(v4 + 24);
    v8 = *(_QWORD *)(v4 + 32);
    v9 = *(_QWORD *)(v4 + 40);
    v10 = *(unsigned __int8 *)(v4 + 64);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v6;
    *(_QWORD *)(v11 + 24) = v7;
    *(_QWORD *)(v11 + 32) = v8;
    *(_QWORD *)(v11 + 40) = v9;
    v12 = v11 | 0x9000000000000000;
    v13 = *(_QWORD **)(a1 + 48);
    v14 = v13[2];
    if (v14)
    {
      v15 = v13[v14 + 3];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BAA736F8(v15);
      v17 = v16;
      swift_release();
      swift_release();
      if ((v17 & 1) != 0)
      {
        swift_release();
        if (v10 == 255)
          return;
LABEL_16:
        sub_1BAC3816C();
        return;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1BB38ED0C(0, v13[2] + 1, 1, v13);
    v20 = v13[2];
    v19 = v13[3];
    if (v20 >= v19 >> 1)
      v13 = sub_1BB38ED0C((_QWORD *)(v19 > 1), v20 + 1, 1, v13);
    v13[2] = v20 + 1;
    v13[v20 + 4] = v12;
    swift_release();
    *(_QWORD *)(a1 + 48) = v13;
    if (v10 != 255)
      goto LABEL_16;
  }
  else
  {
    v18 = *(_QWORD *)(v4 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAC45158(a1);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BAC1A144(a1, v18);
      swift_release();
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1BAC45400(uint64_t a1)
{
  sub_1BAC44980(a1);
}

void sub_1BAC45414(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = v2;
  if (*((_BYTE *)v1 + 8) == 1)
  {
    v5 = *v1;
    v6 = *(_QWORD *)(v5 + 24);
    swift_retain();
    sub_1BABEF514(a1, v6);
    if (!v3)
      sub_1BAC3A148(a1, *(void **)(v5 + 32));
    sub_1BA92F770((void *)v5, 1);
  }
}

void sub_1BAC45494(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1BAC4552C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = swift_projectBox();
  sub_1BA4C2DD8(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  sub_1BA4C2DD8(v2, (uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v7 = *v1;
      v6 = v1[1];
      v8 = v1[2];
      *(_QWORD *)(v3 - 88) = v7;
      *(_QWORD *)(v3 - 80) = v6;
      *(_QWORD *)(v3 - 72) = v8;
      *(_BYTE *)(v3 - 89) = 6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9 = sub_1BB6B84D4((uint64_t *)(v3 - 88), (char *)(v3 - 89));
      if (!v0)
      {
        v10 = v9;
        swift_bridgeObjectRelease();
        sub_1BB3D7F90(v7, v6, v10, 0);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
  }
  return sub_1BA4A2E80(v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatCommandOpenURL);
}

void sub_1BAC45874(uint64_t a1)
{
  sub_1BAC44E00(a1);
}

void sub_1BAC45888(uint64_t a1)
{
  uint64_t *v1;

  sub_1BAC45494(a1, *v1);
}

void sub_1BAC458A0(uint64_t a1)
{
  sub_1BAC450C4(a1);
}

uint64_t sub_1BAC458B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29[3];
  char v30;

  v4 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29[-1] - v8;
  v10 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29[-1] - v14;
  v16 = *v1;
  v17 = (unint64_t)*v1 >> 62;
  if ((_DWORD)v17)
  {
    if ((_DWORD)v17 == 1)
    {
      v18 = *(_QWORD *)(v16 + 24);
      v29[0] = *(_QWORD *)(v16 + 16);
      swift_retain();
      swift_retain();
      sub_1BAC458B4(a1);
      if (!v2)
      {
        v29[0] = v18;
        sub_1BAC458B4(a1);
      }
      swift_release();
      return swift_release();
    }
    else
    {
      v22 = *(_QWORD *)(v16 + 24);
      v29[0] = *(_QWORD *)(v16 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BAC458B4(a1);
      if (v2)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BAC2B258(a1, v22);
        swift_release();
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    v20 = swift_projectBox();
    sub_1BA4C2DD8(v20, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
    sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
    sub_1BA5193C4((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!v6[24])
      {
        v23 = *((_QWORD *)v6 + 1);
        v25 = *((_QWORD *)v6 + 2);
        v29[0] = *(_QWORD *)v6;
        v24 = v29[0];
        v29[1] = v23;
        v29[2] = v25;
        v30 = 6;
        sub_1BA690C00(v29[0], v23, v25, 0);
        v26 = sub_1BB6B84D4(v29, &v30);
        if (!v2)
        {
          v27 = v26;
          swift_bridgeObjectRetain();
          sub_1BB3D7F90(v24, v23, v27, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1BA5A7EF8(v24, v23, v25, 0);
      }
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    return sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
  }
}

void sub_1BAC45BE0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5[19];
  _BYTE v6[144];

  v4 = *v1;
  sub_1BA760F3C((uint64_t)(v1 + 1), (uint64_t)v6, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  v5[18] = v4;
  sub_1BAC458B4(a1);
  if (!v2)
  {
    sub_1BA760F3C((uint64_t)v6, (uint64_t)v5, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    if (sub_1BA896370(v5) != 1)
      sub_1BAC30C08();
  }
}

void sub_1BAC45CE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t (*v7)(void);
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE v11[144];
  __int128 v12;
  uint64_t v13;

  *(_QWORD *)&v12 = v1[4];
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v4 = v1[6];
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v5; ++i)
      {
        *(_QWORD *)&v12 = *(_QWORD *)(v4 + 8 * i + 32);
        sub_1BA7196DC(v12);
        sub_1BAC2F274();
        sub_1BA719340(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7])
      sub_1BAC45F4C(a1, (void (*)(uint64_t, uint64_t))sub_1BAC2B91C);
    v13 = v1[8];
    sub_1BAC458B4(a1);
    v7 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C((uint64_t)(v1 + 9), (uint64_t)v11, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v11, (uint64_t)&v12, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v7, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    if (sub_1BA896370((uint64_t *)&v12) != 1)
      sub_1BAC30C08();
    swift_beginAccess();
    v8 = v1[29];
    if (v8 >> 62 == 1)
    {
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      sub_1BA67D3F4(v8);
      sub_1BA67D3F4(v9);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v9, v10);
      sub_1BA6EEDB4(v9);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v8);
    }
  }
}

void sub_1BAC45F4C(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v2;
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  a2(a1, v7);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v8 = *(_QWORD *)(v5 + 56);
    if (v8)
    {
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        swift_bridgeObjectRetain_n();
        v10 = (_BYTE *)(v8 + 40);
        do
        {
          if ((*v10 & 1) == 0)
          {
            v11 = *((_QWORD *)v10 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v11, 0);
            sub_1BA72C46C(v11, 0);
          }
          v10 += 16;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease_n();
      }
    }
    v12 = *(_QWORD *)(v5 + 64);
    if (v12)
      sub_1BABE9768(a1, v12);
    if (*(unsigned __int8 *)(v5 + 176) != 254)
      sub_1BAC35E00();
  }
}

void sub_1BAC460B8(uint64_t a1)
{
  sub_1BAC45CE4(a1);
}

uint64_t sub_1BAC460D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t (*v11)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[7];
  char v20;
  uint64_t v21[3];

  v2 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v19[-v6];
  v8 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4C2DD8(v0, (uint64_t)v10, v11);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!v4[24])
    {
      v14 = *(_QWORD *)v4;
      v13 = *((_QWORD *)v4 + 1);
      v15 = *((_QWORD *)v4 + 2);
      v21[0] = v14;
      v21[1] = v13;
      v21[2] = v15;
      v20 = 6;
      sub_1BA690C00(v14, v13, v15, 0);
      v16 = sub_1BB6B84D4(v21, &v20);
      if (!v1)
      {
        v17 = v16;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v14, v13, v17, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1BA5A7EF8(v14, v13, v15, 0);
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
}

uint64_t sub_1BAC462CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[3];

  v2 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v0, (uint64_t)v4, v5);
  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
    return sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!v4[24])
  {
    v8 = *(_QWORD *)v4;
    v7 = *((_QWORD *)v4 + 1);
    v9 = *((_QWORD *)v4 + 2);
    v13[0] = v8;
    v13[1] = v7;
    v13[2] = v9;
    HIBYTE(v12) = 6;
    sub_1BA690C00(v8, v7, v9, 0);
    v10 = sub_1BB6B84D4(v13, (char *)&v12 + 7);
    if (!v1)
    {
      v11 = v10;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v8, v7, v11, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return sub_1BA5A7EF8(v8, v7, v9, 0);
  }
  return result;
}

uint64_t sub_1BAC46430()
{
  return sub_1BAC460D8();
}

uint64_t sub_1BAC46444(uint64_t a1)
{
  return sub_1BAC458B4(a1);
}

void sub_1BAC46458(uint64_t a1)
{
  sub_1BAC45F4C(a1, (void (*)(uint64_t, uint64_t))sub_1BAC2B91C);
}

uint64_t sub_1BAC46480(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, double);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v2;
  v5 = a2;
  v6 = a1;
  v7 = *(_QWORD *)(a2 + 16);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v13((char *)&v21 - v14, v2, v7, v11);
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  if (swift_dynamicCast())
  {
    v22 = v5;
    v26 = v2;
    v15 = v6;
    v17 = *((_QWORD *)&v24 + 1);
    v16 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 8))(v15, v17, v16);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
    if (v3)
      return result;
    v6 = v15;
    v4 = v26;
    v5 = v22;
  }
  else
  {
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    sub_1BA65DB80((uint64_t)&v23, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
  ((void (*)(char *, uint64_t, uint64_t))v13)(v9, v4 + *(int *)(v5 + 52), v7);
  if (swift_dynamicCast())
  {
    v19 = *((_QWORD *)&v24 + 1);
    v20 = v25;
    __swift_project_boxed_opaque_existential_1(&v23, *((uint64_t *)&v24 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 8))(v6, v19, v20);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  }
  else
  {
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    return sub_1BA65DB80((uint64_t)&v23, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
}

void sub_1BAC46688()
{
  type metadata accessor for FormatRange();
}

uint64_t sub_1BAC466C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_1BAC46480(v1, a1);
  if (!v2)
    return sub_1BAC46480(v1, a1);
  return result;
}

void sub_1BAC46704()
{
  __asm { BR              X12 }
}

uint64_t sub_1BAC4675C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  unint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  swift_retain();
  sub_1BABE39D4();
  if (v1)
    return swift_release();
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 88);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v5; ++i)
    {
      v7 = *(_QWORD *)(v4 + 8 * i + 32);
      sub_1BA7196DC(v7);
      sub_1BAC2F274();
      sub_1BA719340(v7);
    }
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v8 = *(_QWORD *)(v3 + 96);
  swift_bridgeObjectRetain();
  sub_1BABEBCF0(v2, v8);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1BAC4744C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  unint64_t v7;
  uint64_t v8;

  swift_beginAccess();
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v4 = *(_QWORD *)(v1 + 88);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v5; ++i)
      {
        v7 = *(_QWORD *)(v4 + 8 * i + 32);
        sub_1BA7196DC(v7);
        sub_1BAC2F274();
        sub_1BA719340(v7);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v8 = *(_QWORD *)(v1 + 96);
    swift_bridgeObjectRetain();
    sub_1BABEBCF0(a1, v8);
    swift_bridgeObjectRelease();
  }
}

void sub_1BAC47598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  unint64_t v7;
  uint64_t v8;

  swift_beginAccess();
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v4 = *(_QWORD *)(v1 + 96);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v5; ++i)
      {
        v7 = *(_QWORD *)(v4 + 8 * i + 32);
        sub_1BA7196DC(v7);
        sub_1BAC2F274();
        sub_1BA719340(v7);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v8 = *(_QWORD *)(v1 + 104);
    swift_bridgeObjectRetain();
    sub_1BABEBCF0(a1, v8);
    swift_bridgeObjectRelease();
  }
}

void sub_1BAC476E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = v1;
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v5 = v1[6];
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v6; ++i)
      {
        v8 = *(_QWORD *)(v5 + 8 * i + 32);
        sub_1BA7196DC(v8);
        sub_1BAC2F274();
        sub_1BA719340(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7])
      sub_1BAC49818(a1);
    v9 = v1[8];
    if (v9)
    {
      swift_beginAccess();
      v10 = *(_QWORD *)(v9 + 72);
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_1BABEB4B0(a1, v10);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v11 = *(_QWORD *)(v9 + 88);
      swift_bridgeObjectRetain();
      sub_1BAC26724(a1, v11);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v12 = v3[10];
    if (v12 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      sub_1BA67D3F4(v12);
      sub_1BA67D3F4(v13);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v13, v14);
      sub_1BA6EEDB4(v13);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v12);
    }
  }
}

void sub_1BAC478F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = v1;
  sub_1BAC5345C();
  if (!v2)
  {
    swift_beginAccess();
    v5 = v1[6];
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v6; ++i)
      {
        v8 = *(_QWORD *)(v5 + 8 * i + 32);
        sub_1BA7196DC(v8);
        sub_1BAC2F274();
        sub_1BA719340(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7])
      sub_1BAC3DC58(a1);
    v9 = v1[8];
    if (v9)
    {
      swift_beginAccess();
      v10 = *(_QWORD *)(v9 + 72);
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_1BABEB4B0(a1, v10);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v11 = *(_QWORD *)(v9 + 88);
      swift_bridgeObjectRetain();
      sub_1BAC26724(a1, v11);
      swift_bridgeObjectRelease();
    }
    sub_1BB5635E8();
    if (*((unsigned __int16 *)v3 + 52) >> 9 <= 0x7Eu)
      sub_1BABE35BC();
    swift_beginAccess();
    v12 = v3[15];
    if (v12 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      sub_1BA67D3F4(v12);
      sub_1BA67D3F4(v13);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v13, v14);
      sub_1BA6EEDB4(v13);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v12);
    }
  }
}

void sub_1BAC47B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;

  swift_beginAccess();
  sub_1BABE39D4();
  if (!v1)
  {
    swift_beginAccess();
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v3; ++i)
      {
        v5 = *(_QWORD *)(v2 + 8 * i + 32);
        sub_1BA7196DC(v5);
        sub_1BAC2F274();
        sub_1BA719340(v5);
      }
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1BAC47C5C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23[3];
  uint64_t v24[3];

  v3 = v2;
  v4 = v1;
  v6 = v1[4];
  if (v6 >> 62)
  {
    if (v6 >> 62 != 1)
    {
      v7 = *(_QWORD *)(v6 + 16);
      v8 = *(_QWORD *)(v6 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BAC35500(a1, v7, v8);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else if ((*(_BYTE *)(v6 + 40) & 1) != 0)
  {
    v10 = *(_QWORD *)(v6 + 24);
    v9 = *(_QWORD *)(v6 + 32);
    v24[0] = *(_QWORD *)(v6 + 16);
    v11 = v24[0];
    v24[1] = v10;
    v24[2] = v9;
    LOBYTE(v23[0]) = 6;
    swift_retain();
    sub_1BAC68C24(v24[0], v10, v9, 1);
    v12 = sub_1BB6B84D4(v24, (char *)v23);
    if (v3)
    {
      swift_release();
      return;
    }
    v22 = v12;
    swift_bridgeObjectRetain();
    sub_1BB3D7F90(v11, v10, v22, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v24[0] = v4[8];
  sub_1BABE39D4();
  if (!v3)
  {
    swift_beginAccess();
    v13 = v4[10];
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v14; ++i)
      {
        v16 = *(_QWORD *)(v13 + 8 * i + 32);
        v23[0] = v16;
        sub_1BA7196DC(v16);
        sub_1BAC2F274();
        sub_1BA719340(v16);
      }
      swift_bridgeObjectRelease_n();
    }
    v17 = v4[11];
    if (v17)
    {
      swift_beginAccess();
      v18 = *(_QWORD *)(v17 + 96);
      swift_bridgeObjectRetain();
      sub_1BABEBAE0(a1, v18);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v19 = v4[13];
    if (v19 >> 62 == 1)
    {
      v20 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      sub_1BA67D3F4(v19);
      sub_1BA67D3F4(v20);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v20, v21);
      sub_1BA6EEDB4(v20);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v19);
    }
  }
}

void sub_1BAC47F48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = v1;
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v5 = v1[6];
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v6; ++i)
      {
        v8 = *(_QWORD *)(v5 + 8 * i + 32);
        sub_1BA7196DC(v8);
        sub_1BAC2F274();
        sub_1BA719340(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v1[7])
      sub_1BAC49A60(a1);
    v9 = v1[8];
    if (v9)
    {
      swift_beginAccess();
      v10 = *(_QWORD *)(v9 + 72);
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_1BABEB4B0(a1, v10);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v11 = *(_QWORD *)(v9 + 88);
      swift_bridgeObjectRetain();
      sub_1BAC26724(a1, v11);
      swift_bridgeObjectRelease();
    }
    sub_1BAC4A348();
    swift_beginAccess();
    v12 = v3[11];
    if (v12 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      sub_1BA67D3F4(v3[11]);
      sub_1BA67D3F4(v13);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v13, v14);
      sub_1BA6EEDB4(v13);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v12);
    }
    if (v3[19] != 254)
      sub_1BAC54648(a1);
  }
}

void sub_1BAC48200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 48);
  sub_1BABE39D4();
  if (!v2)
  {
    v6 = *(_QWORD *)(v4 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v6; ++i)
      {
        v8 = *(_QWORD *)(v4 + 8 * i + 32);
        sub_1BA7196DC(v8);
        sub_1BAC2F274();
        sub_1BA719340(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v5 >> 62)
    {
      if (v5 >> 62 == 1)
      {
        v9 = *(_QWORD *)(v5 + 16);
        v10 = *(_QWORD *)(v5 + 24);
        sub_1BA67D3F4(v5);
        sub_1BA67D3F4(v9);
        swift_bridgeObjectRetain();
        sub_1BAC3520C(a1, v9, v10);
        sub_1BA6EEDB4(v9);
        swift_bridgeObjectRelease();
        v11 = v5;
      }
      else if (v5 == 0x8000000000000000)
      {
        v11 = 0x8000000000000000;
      }
      else
      {
        v11 = 0x8000000000000008;
      }
      sub_1BA6EEDB4(v11);
    }
  }
}

void sub_1BAC48358(unint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41[24];
  uint64_t v42[6];
  unint64_t v43;

  v3 = v1;
  v42[3] = v1[4];
  sub_1BABE39D4();
  if (v2)
    return;
  swift_beginAccess();
  v5 = v1[6];
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v6; ++i)
    {
      v42[0] = *(_QWORD *)(v5 + 8 * i + 32);
      sub_1BA7196DC(v42[0]);
      sub_1BAC2F274();
      sub_1BA719340(v42[0]);
    }
    swift_bridgeObjectRelease_n();
  }
  if (v1[7])
    sub_1BAC49A60(a1);
  v8 = v1[8];
  if (v8)
  {
    swift_beginAccess();
    v9 = *(_QWORD *)(v8 + 72);
    if (v9)
    {
      swift_bridgeObjectRetain();
      sub_1BABEB4B0(a1, v9);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v10 = *(_QWORD *)(v8 + 88);
    swift_bridgeObjectRetain();
    sub_1BAC26724(a1, v10);
    swift_bridgeObjectRelease();
  }
  v42[0] = v3[9];
  sub_1BAC4A684(a1);
  v42[0] = v3[10];
  sub_1BAC32068();
  if (v3[11])
    sub_1BAC4055C(a1);
  v11 = v3[14];
  if (v11 != 1)
  {
    v16 = v3[12];
    v15 = v3[13];
    v18 = v3[15];
    v17 = v3[16];
    v19 = v3[17];
    v20 = *((_BYTE *)v3 + 144);
    swift_retain();
    v43 = v15;
    sub_1BA738D44(v15);
    swift_retain();
    swift_retain();
    sub_1BA69C808(v17, v19, v20 & 1);
    sub_1BAC32068();
    v40 = v20;
    v42[0] = v15;
    sub_1BAC4D078();
    v34 = v19;
    v35 = v11;
    if (v11)
    {
      sub_1BAC4055C(a1);
      v36 = v17;
      v37 = v40;
      v35 = v11;
    }
    else
    {
      v37 = v40;
      v36 = v17;
    }
    if ((v37 & 1) != 0)
    {
      sub_1BA69C808(v36, v34, 1);
      v38 = sub_1BA862600((uint64_t)&unk_1E724DE98);
      sub_1BB3D7F90(v36, v34, v38, 0);
      swift_bridgeObjectRelease();
      sub_1BA69C828(v36, v34, 1);
      v37 = v40;
      v35 = v11;
      v39 = v18;
    }
    else
    {
      v39 = v18;
    }
    sub_1BA49A42C(v16, v43, v35, v39, v36, v34, v37);
  }
  v13 = v3[19];
  v12 = v3[20];
  v14 = v3[21];
  if ((v3[22] & 1) == 0)
  {
    v42[0] = v3[19];
    v42[1] = v12;
    v42[2] = v14;
    v41[0] = 0;
    sub_1BA82ABBC(v13, v12, v14, 0);
    sub_1BA82ABBC(v13, v12, v14, 0);
    v22 = sub_1BB6B84D4(v42, v41);
    swift_bridgeObjectRetain();
    sub_1BB3D7F90(v13, v12, v22, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v13;
    v24 = v12;
    v25 = v14;
    v26 = 0;
LABEL_22:
    sub_1BA82ABF8(v23, v24, v25, v26);
    goto LABEL_23;
  }
  if ((v14 & 1) != 0)
  {
    sub_1BA82ABBC(v3[19], v3[20], v3[21], 1);
    v21 = sub_1BA862600((uint64_t)&unk_1E724DEC0);
    sub_1BB3D7F90(v13, v12, v21, 0);
    swift_bridgeObjectRelease();
    v23 = v13;
    v24 = v12;
    v25 = v14;
    v26 = 1;
    goto LABEL_22;
  }
  sub_1BA82ABF8(v3[19], v3[20], v3[21], 1);
LABEL_23:
  swift_beginAccess();
  v27 = v3[24];
  if (v27 >> 62 == 1)
  {
    v28 = *(_QWORD *)(v27 + 16);
    v29 = *(_QWORD *)(v27 + 24);
    sub_1BA67D3F4(v3[24]);
    sub_1BA67D3F4(v28);
    swift_bridgeObjectRetain();
    sub_1BAC3520C(a1, v28, v29);
    sub_1BA6EEDB4(v28);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v27);
  }
  swift_beginAccess();
  v30 = *((unsigned __int8 *)v3 + 264);
  if (v30 != 255)
  {
    v32 = v3[31];
    v31 = v3[32];
    if ((v30 & 1) != 0)
    {
      sub_1BA796C58(v32, v31, v30);
      v33 = sub_1BA862600((uint64_t)&unk_1E724DEE8);
      sub_1BB3D7F90(v32, v31, v33, 0);
      swift_bridgeObjectRelease();
    }
    sub_1BA796C70(v32, v31, v30);
  }
}

void sub_1BAC48984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  swift_beginAccess();
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v4 = *(_QWORD *)(v1 + 48);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v5; ++i)
      {
        v7 = *(_QWORD *)(v4 + 8 * i + 32);
        sub_1BA7196DC(v7);
        sub_1BAC2F274();
        sub_1BA719340(v7);
      }
      swift_bridgeObjectRelease_n();
    }
    sub_1BAC4C43C();
    swift_beginAccess();
    if (*(_QWORD *)(v1 + 112))
    {
      swift_retain();
      sub_1BAC49C20(a1);
      swift_release();
    }
    swift_beginAccess();
    v8 = *(unsigned __int8 *)(v1 + 176) >> 6;
    if (v8)
    {
      if (v8 == 1)
        sub_1BAC4BD18();
    }
    else
    {
      sub_1BAC4C05C();
    }
    swift_beginAccess();
    v9 = *(_QWORD *)(v1 + 184);
    if (v9 >> 62 == 1)
    {
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      sub_1BA67D3F4(v9);
      sub_1BA67D3F4(v10);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v10, v11);
      sub_1BA6EEDB4(v10);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v9);
    }
  }
}

void sub_1BAC48C20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v1;
  swift_beginAccess();
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v5 = v1[8];
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v6; ++i)
      {
        v8 = *(_QWORD *)(v5 + 8 * i + 32);
        sub_1BA7196DC(v8);
        sub_1BAC2F274();
        sub_1BA719340(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    v9 = v1[9];
    if (v9 < 0)
    {
      v19 = *(_QWORD *)(v9 + 16);
      v20 = *(_QWORD *)(v9 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BAC35120(a1, v19, v20);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v10 = v1[13];
    if (v10)
    {
      v11 = v3[19];
      v22 = v3[18];
      v12 = v3[16];
      v21 = v3[17];
      v13 = v3[14];
      v14 = v3[15];
      v15 = v3[12];
      sub_1BAC69440(v15, v10, v13, v14, v12, v21, v22);
      swift_bridgeObjectRetain();
      sub_1BABEAB98(a1, v11);
      swift_bridgeObjectRelease();
      sub_1BAC694A8(v15, v10, v13, v14, v12, v21, v22);
    }
    swift_beginAccess();
    v16 = v3[20];
    if (v16 >> 62 == 1)
    {
      v17 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      sub_1BA67D3F4(v16);
      sub_1BA67D3F4(v17);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v17, v18);
      sub_1BA6EEDB4(v17);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v16);
    }
  }
}

void sub_1BAC48EAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v3 = v1;
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v5 = *(_QWORD *)(v1 + 48);
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v6; ++i)
      {
        v8 = *(_QWORD *)(v5 + 8 * i + 32);
        sub_1BA7196DC(v8);
        sub_1BAC2F274();
        sub_1BA719340(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v9 = *(_QWORD *)(v1 + 56);
    if (v9 >> 62 == 1)
    {
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      sub_1BA67D3F4(*(_QWORD *)(v3 + 56));
      sub_1BA67D3F4(v10);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v10, v11);
      sub_1BA6EEDB4(v10);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v9);
    }
    swift_beginAccess();
    v12 = *(_QWORD **)(v3 + 96);
    if (v12)
    {
      swift_beginAccess();
      v13 = v12[6];
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BAC24FD0(a1, v13);
      swift_bridgeObjectRelease();
      if ((~v12[7] & 0xF000000000000007) != 0)
        sub_1BAC35E00();
      if ((~v12[8] & 0xF000000000000007) != 0)
        sub_1BAC35E00();
      swift_release();
    }
  }
}

void sub_1BAC490E4()
{
  sub_1BAC46704();
}

void sub_1BAC490F8()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

uint64_t sub_1BAC49188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_retain();
  sub_1BAC49A60(v4);
  return sub_1BA76B698(v2, a2, v6, *(_QWORD *)(v7 - 136), *(_QWORD *)(v7 - 144), v3, v5);
}

void sub_1BAC49818(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_1BAC262D8(a1, v5);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v6 = *(_QWORD *)(v3 + 56);
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
      {
        swift_bridgeObjectRetain_n();
        v8 = (_BYTE *)(v6 + 40);
        do
        {
          if ((*v8 & 1) == 0)
          {
            v9 = *((_QWORD *)v8 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v9, 0);
            sub_1BA72C46C(v9, 0);
          }
          v8 += 16;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease_n();
      }
    }
    if ((~*(_QWORD *)(v3 + 64) & 0xF000000000000007) != 0)
      sub_1BAC359AC();
    v10 = *(_QWORD *)(v3 + 72);
    if (v10)
      sub_1BABE9768(a1, v10);
    if (*(unsigned __int8 *)(v3 + 184) != 254)
      sub_1BAC35E00();
  }
}

void sub_1BAC499AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 56);
  swift_bridgeObjectRetain();
  sub_1BABFC2C4(a1, v4);
  swift_bridgeObjectRelease();
  if (!v2 && *(unsigned __int8 *)(v1 + 74) != 255)
    sub_1BAC3C914();
}

void sub_1BAC49A60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_1BAC25A00(a1, v5);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v6 = *(_QWORD *)(v3 + 56);
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
      {
        swift_bridgeObjectRetain_n();
        v8 = (_BYTE *)(v6 + 40);
        do
        {
          if ((*v8 & 1) == 0)
          {
            v9 = *((_QWORD *)v8 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v9, 0);
            sub_1BA72C46C(v9, 0);
          }
          v8 += 16;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease_n();
      }
    }
    if ((~*(_QWORD *)(v3 + 64) & 0xF000000000000007) != 0)
      sub_1BAC359AC();
    v10 = *(_QWORD *)(v3 + 72);
    if (v10)
      sub_1BABE9768(a1, v10);
    if (*(unsigned __int8 *)(v3 + 184) != 254)
      sub_1BAC35E00();
    if ((~*(_QWORD *)(v3 + 192) & 0xF000000000000007) != 0)
      sub_1BAC35E00();
  }
}

void sub_1BAC49C20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  v3 = v1;
  swift_beginAccess();
  v5 = v1[6];
  swift_bridgeObjectRetain();
  sub_1BAC25264(a1, v5);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v6 = v3[7];
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
      {
        swift_bridgeObjectRetain_n();
        v8 = (_BYTE *)(v6 + 40);
        do
        {
          if ((*v8 & 1) == 0)
          {
            v9 = *((_QWORD *)v8 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v9, 0);
            sub_1BA72C46C(v9, 0);
          }
          v8 += 16;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease_n();
      }
    }
    if ((~v3[8] & 0xF000000000000007) != 0)
      sub_1BAC35E00();
    if ((~v3[9] & 0xF000000000000007) != 0)
      sub_1BAC35E00();
  }
}

void sub_1BAC49D94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_1BAC24FD0(a1, v5);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    if ((~*(_QWORD *)(v3 + 56) & 0xF000000000000007) != 0)
      sub_1BAC35E00();
    if ((~*(_QWORD *)(v3 + 64) & 0xF000000000000007) != 0)
      sub_1BAC35E00();
  }
}

void sub_1BAC49E68()
{
  sub_1BAC490F8();
}

void sub_1BAC49E7C()
{
  sub_1BAC30118();
}

uint64_t sub_1BAC49EA4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;

  v3 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 8))
  {
    if (*(_BYTE *)(v1 + 8) == 1)
      return sub_1BAC2FA7C(result, *(_QWORD *)v1);
  }
  else
  {
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      v5 = (_BYTE *)(v3 + 40);
      do
      {
        if ((*v5 & 1) == 0)
        {
          v6 = *((_QWORD *)v5 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v6, 0);
          sub_1BA72C46C(v6, 0);
          if (v2)
            break;
        }
        v5 += 16;
        --v4;
      }
      while (v4);
      return sub_1BA93DB08(v3, 0);
    }
  }
  return result;
}

uint64_t sub_1BAC49F88(uint64_t a1)
{
  return sub_1BAC49EA4(a1);
}

void sub_1BAC49F9C()
{
  uint64_t v1;
  uint64_t v2;

  sub_1BA7125BC(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA712634(0);
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X11 }
}

uint64_t sub_1BAC4A04C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_1BAC2ED10(v1, v2);
  return swift_bridgeObjectRelease();
}

void sub_1BAC4A2A4()
{
  sub_1BAC49F9C();
}

void sub_1BAC4A2CC()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
    sub_1BAC49F9C();
}

uint64_t sub_1BAC4A2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC51724(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1BABEAD6C);
}

void sub_1BAC4A318()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
    sub_1BAC49F9C();
}

void sub_1BAC4A348()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

uint64_t sub_1BAC4A3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = swift_projectBox();
  sub_1BA4C2DD8(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
  sub_1BAC4D6C8(v0);
  return sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteVideo);
}

uint64_t sub_1BAC4A684(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[3];
  char v12;

  v3 = result;
  v4 = *v1;
  if ((*v1 & 0x8000000000000000) == 0)
  {
    v6 = *(_QWORD *)(v4 + 16);
    v5 = *(_QWORD *)(v4 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BABF3D30(v3, v6);
    if (!v2)
    {
      v11[0] = v5;
      sub_1BAC4A684(v3);
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  if (*(unsigned __int8 *)(v4 + 40) >= 2u)
  {
    v9 = *(_QWORD *)((v4 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    v8 = *(_QWORD *)((v4 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    v11[0] = *(_QWORD *)(v4 + 16);
    v7 = v11[0];
    v11[1] = v9;
    v11[2] = v8;
    v12 = 6;
    sub_1BA896AAC(v11[0], v9, v8, 2);
    result = sub_1BB6B84D4(v11, &v12);
    if (!v2)
    {
      v10 = result;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v7, v9, v10, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1BAC4A7AC()
{
  sub_1BAC49F9C();
}

void sub_1BAC4A7C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  _QWORD v10[8];

  v10[7] = a1;
  sub_1BA75BC00(0);
  v10[6] = v2;
  MEMORY[0x1E0C80A78](v2);
  sub_1BA75BCB4(0);
  v10[5] = v3;
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA4C2DD8(v1, (uint64_t)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v9 = (char *)sub_1BAC4A924 + 4 * byte_1BB8A6301[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAC4A924()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(v1 - 144);
  sub_1BAC2FA7C(*(_QWORD *)(v1 - 152), *v0);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 144) = v2;
  return result;
}

void sub_1BAC4B144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v1 + 24;
  v6 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v5 + 8);
  *(_QWORD *)(v3 - 136) = v0;
  *(_QWORD *)(v3 - 128) = v6;
  *(_QWORD *)(v3 - 120) = v4;
  *(_BYTE *)(v3 - 65) = 1;
  sub_1BA690C00(v0, v6, v4, 0);
  sub_1BB6B84D4((uint64_t *)(v3 - 136), (char *)(v3 - 65));
  if (!v2)
  {
    swift_bridgeObjectRetain();
    JUMPOUT(0x1BAC4B100);
  }
  JUMPOUT(0x1BAC4ABA4);
}

void sub_1BAC4B1B8(uint64_t a1)
{
  sub_1BAC4A7C0(a1);
}

void sub_1BAC4B1DC()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAC4B228()
{
  uint64_t v0;

  return sub_1BA9C813C(v0);
}

void sub_1BAC4B318()
{
  sub_1BAC4B1DC();
}

void sub_1BAC4B32C(uint64_t a1)
{
  sub_1BAC4A7C0(a1);
}

uint64_t sub_1BAC4B340(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];
  char v30;

  v25[1] = a1;
  v2 = type metadata accessor for FormatURL();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v26 = (uint64_t)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v27 = (uint64_t)v25 - v6;
  v7 = type metadata accessor for FormatPostPurchase();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v25 - v12;
  v14 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  sub_1BA57B488(v1 + *(int *)(v14 + 20), (uint64_t)v13, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
    return sub_1BA502AD0((uint64_t)v13, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  sub_1BA4C2DD8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 2, v2))
  {
    v16 = v27;
    sub_1BA5193C4((uint64_t)v10, v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v17 = v26;
    sub_1BA4C2DD8(v16, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!*(_BYTE *)(v17 + 24))
      {
        v19 = *(_QWORD *)(v17 + 8);
        v21 = *(_QWORD *)(v17 + 16);
        v29[0] = *(_QWORD *)v17;
        v20 = v29[0];
        v29[1] = v19;
        v29[2] = v21;
        v30 = 6;
        sub_1BA690C00(v29[0], v19, v21, 0);
        v22 = v28;
        v23 = sub_1BB6B84D4(v29, &v30);
        if (!v22)
        {
          v24 = v23;
          swift_bridgeObjectRetain();
          sub_1BB3D7F90(v20, v19, v24, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1BA5A7EF8(v20, v19, v21, 0);
      }
    }
    else
    {
      sub_1BA4A2E80(v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA4A2E80(v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
}

uint64_t sub_1BAC4B62C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[7];
  char v21;
  uint64_t v22[3];

  v2 = type metadata accessor for FormatURL();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v20[-v7];
  v9 = type metadata accessor for FormatPostPurchase();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4C2DD8(v0, (uint64_t)v11, v12);
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 48))(v11, 2, v2);
  if (!(_DWORD)result)
  {
    sub_1BA5193C4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    sub_1BA4C2DD8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!v5[24])
      {
        v16 = *(_QWORD *)v5;
        v15 = *((_QWORD *)v5 + 1);
        v17 = *((_QWORD *)v5 + 2);
        v22[0] = v16;
        v22[1] = v15;
        v22[2] = v17;
        v21 = 6;
        sub_1BA690C00(v16, v15, v17, 0);
        v18 = sub_1BB6B84D4(v22, &v21);
        if (!v1)
        {
          v19 = v18;
          swift_bridgeObjectRetain();
          sub_1BB3D7F90(v16, v15, v19, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1BA5A7EF8(v16, v15, v17, 0);
      }
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  return result;
}

uint64_t sub_1BAC4B838(uint64_t a1)
{
  return sub_1BAC4B340(a1);
}

uint64_t sub_1BAC4B84C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  if (*v1 < 0)
  {
    v10 = *(_QWORD *)(v7 + 24);
    v12 = *(_QWORD *)(v7 + 16);
    swift_retain();
    swift_retain();
    sub_1BAC4B84C(a1);
    if (!v2)
    {
      v12 = v10;
      sub_1BAC4B84C(a1);
    }
    swift_release();
    return swift_release();
  }
  else
  {
    v8 = swift_projectBox();
    sub_1BA4C2DD8(v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    sub_1BAC328E8(a1);
    return sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
  }
}

uint64_t sub_1BAC4B95C(uint64_t a1)
{
  return sub_1BAC4B84C(a1);
}

uint64_t sub_1BAC4B984(uint64_t a1)
{
  return sub_1BAC4B84C(a1);
}

unint64_t sub_1BAC4B998()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  v3 = *v0;
  v2 = v0[1];
  v4 = *(_QWORD *)(*v0 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    v5 = (_BYTE *)(v3 + 40);
    do
    {
      if ((*v5 & 1) == 0)
      {
        v6 = *((_QWORD *)v5 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v6, 0);
        sub_1BA72C46C(v6, 0);
        if (v1)
          return swift_bridgeObjectRelease_n();
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    result = swift_bridgeObjectRelease_n();
  }
  if (v2 >= 2)
  {
    v8 = *(_QWORD *)(v2 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v9 & 1) == 0)
        {
          v10 = *((_QWORD *)v9 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v10, 0);
          sub_1BA72C46C(v10, 0);
          if (v1)
            break;
        }
        v9 += 16;
        --v8;
      }
      while (v8);
      return sub_1BA5B18CC(v2);
    }
  }
  return result;
}

unint64_t sub_1BAC4BAF0()
{
  return sub_1BAC4B998();
}

uint64_t sub_1BAC4BB04(uint64_t result)
{
  uint64_t *v1;

  if ((unint64_t)*v1 >= 2)
    return sub_1BAC2F9C4(result, *v1);
  return result;
}

uint64_t sub_1BAC4BB24()
{
  return sub_1BAC4B62C();
}

void sub_1BAC4BB38()
{
  _QWORD *v0;

  if ((~*v0 & 0xF000000000000007) != 0)
    sub_1BAC35E00();
}

uint64_t sub_1BAC4BB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = sub_1BB873A2C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v14 - v9, v2 + *(int *)(a2 + 52), v6, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v10, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    return sub_1BA65DB80((uint64_t)&v14, &qword_1EF2B0E38, &qword_1EF2B0E30);
  }
  sub_1BA4D9CE8(0, &qword_1EF2B0E30);
  if (!swift_dynamicCast())
    goto LABEL_6;
  v11 = *((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v12 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, v11, v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  }
  return sub_1BA65DB80((uint64_t)&v14, &qword_1EF2B0E38, &qword_1EF2B0E30);
}

uint64_t sub_1BAC4BCE0(uint64_t a1, uint64_t a2)
{
  return sub_1BAC4BB6C(a1, a2);
}

uint64_t sub_1BAC4BCF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC539E4(a1, a2, a3, (uint64_t (*)(void))sub_1BAC35E00, (uint64_t (*)(uint64_t, uint64_t))sub_1BABE429C);
}

uint64_t sub_1BAC4BD18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v5 = *((unsigned __int8 *)v0 + 24);
  v22 = v0[5];
  v23 = v0[6];
  v24 = v0[4];
  v6 = *(_QWORD *)(*v0 + 16);
  if (v6)
  {
    v21 = *((unsigned __int8 *)v0 + 24);
    swift_bridgeObjectRetain_n();
    v7 = (_BYTE *)(v3 + 40);
    while (1)
    {
      if ((*v7 & 1) == 0)
      {
        v8 = *((_QWORD *)v7 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        if (v1)
        {
LABEL_16:
          sub_1BA72C46C(v8, 0);
          sub_1BA72C46C(v8, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v8, 0);
        sub_1BA72C46C(v8, 0);
      }
      v7 += 16;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n();
        v5 = v21;
        break;
      }
    }
  }
  if (v5)
  {
    sub_1BA69C808(v2, v4, 1);
    v9 = sub_1BA862600((uint64_t)&unk_1E724DE48);
    sub_1BB3D7F90(v2, v4, v9, 0);
    swift_bridgeObjectRelease();
    result = sub_1BA69C828(v2, v4, 1);
    if (v1)
      return result;
    v11 = *(_QWORD *)(v24 + 16);
    if (v11)
    {
LABEL_11:
      swift_bridgeObjectRetain_n();
      v12 = (_BYTE *)(v24 + 40);
      v14 = v22;
      v13 = v23;
      do
      {
        if ((*v12 & 1) == 0)
        {
          v8 = *((_QWORD *)v12 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          if (v1)
            goto LABEL_16;
          sub_1BA72C46C(v8, 0);
          sub_1BA72C46C(v8, 0);
        }
        v12 += 16;
        --v11;
      }
      while (v11);
      result = swift_bridgeObjectRelease_n();
      v15 = *(_QWORD *)(v22 + 16);
      if (v15)
        goto LABEL_21;
      goto LABEL_27;
    }
  }
  else
  {
    result = sub_1BA69C828(v2, v4, 0);
    v11 = *(_QWORD *)(v24 + 16);
    if (v11)
      goto LABEL_11;
  }
  v14 = v22;
  v13 = v23;
  v15 = *(_QWORD *)(v22 + 16);
  if (v15)
  {
LABEL_21:
    swift_bridgeObjectRetain_n();
    v16 = (_BYTE *)(v14 + 40);
    while (1)
    {
      if ((*v16 & 1) == 0)
      {
        v17 = *((_QWORD *)v16 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v17, 0);
        sub_1BA72C46C(v17, 0);
        if (v1)
          return swift_bridgeObjectRelease_n();
      }
      v16 += 16;
      if (!--v15)
      {
        result = swift_bridgeObjectRelease_n();
        break;
      }
    }
  }
LABEL_27:
  v18 = *(_QWORD *)(v13 + 16);
  if (!v18)
    return result;
  swift_bridgeObjectRetain_n();
  v19 = (_BYTE *)(v13 + 40);
  do
  {
    if ((*v19 & 1) == 0)
    {
      v20 = *((_QWORD *)v19 - 1);
      swift_retain_n();
      sub_1BA9F22C4();
      sub_1BA72C46C(v20, 0);
      sub_1BA72C46C(v20, 0);
      if (v1)
        break;
    }
    v19 += 16;
    --v18;
  }
  while (v18);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BAC4C048()
{
  return sub_1BAC4BD18();
}

uint64_t sub_1BAC4C05C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v5 = *((unsigned __int8 *)v0 + 24);
  v22 = v0[5];
  v23 = v0[6];
  v24 = v0[4];
  v6 = *(_QWORD *)(*v0 + 16);
  if (v6)
  {
    v21 = *((unsigned __int8 *)v0 + 24);
    swift_bridgeObjectRetain_n();
    v7 = (_BYTE *)(v3 + 40);
    while (1)
    {
      if ((*v7 & 1) == 0)
      {
        v8 = *((_QWORD *)v7 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        if (v1)
        {
LABEL_22:
          sub_1BA72C46C(v8, 0);
          sub_1BA72C46C(v8, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BA72C46C(v8, 0);
        sub_1BA72C46C(v8, 0);
      }
      v7 += 16;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n();
        v5 = v21;
        break;
      }
    }
  }
  if (!v5)
  {
    result = sub_1BA69C828(v2, v4, 0);
    if (v24)
      goto LABEL_11;
LABEL_18:
    v13 = v22;
    v12 = v23;
    goto LABEL_19;
  }
  sub_1BA69C808(v2, v4, 1);
  v9 = sub_1BA862600((uint64_t)&unk_1E724DE20);
  sub_1BB3D7F90(v2, v4, v9, 0);
  swift_bridgeObjectRelease();
  result = sub_1BA69C828(v2, v4, 1);
  if (v1)
    return result;
  if (!v24)
    goto LABEL_18;
LABEL_11:
  v11 = *(_QWORD *)(v24 + 16);
  v13 = v22;
  v12 = v23;
  if (v11)
  {
    swift_bridgeObjectRetain_n();
    v14 = (_BYTE *)(v24 + 40);
    do
    {
      if ((*v14 & 1) == 0)
      {
        v8 = *((_QWORD *)v14 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        if (v1)
          goto LABEL_22;
        sub_1BA72C46C(v8, 0);
        sub_1BA72C46C(v8, 0);
      }
      v14 += 16;
      --v11;
    }
    while (v11);
    result = swift_bridgeObjectRelease_n();
    v15 = *(_QWORD *)(v22 + 16);
    if (v15)
      goto LABEL_24;
    goto LABEL_20;
  }
LABEL_19:
  v15 = *(_QWORD *)(v13 + 16);
  if (v15)
  {
LABEL_24:
    swift_bridgeObjectRetain_n();
    v17 = (_BYTE *)(v13 + 40);
    while (1)
    {
      if ((*v17 & 1) == 0)
      {
        v18 = *((_QWORD *)v17 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v18, 0);
        sub_1BA72C46C(v18, 0);
        if (v1)
          return swift_bridgeObjectRelease_n();
      }
      v17 += 16;
      if (!--v15)
      {
        result = swift_bridgeObjectRelease_n();
        v16 = *(_QWORD *)(v12 + 16);
        if (!v16)
          return result;
        goto LABEL_30;
      }
    }
  }
LABEL_20:
  v16 = *(_QWORD *)(v12 + 16);
  if (v16)
  {
LABEL_30:
    swift_bridgeObjectRetain_n();
    v19 = (_BYTE *)(v12 + 40);
    do
    {
      if ((*v19 & 1) == 0)
      {
        v20 = *((_QWORD *)v19 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v20, 0);
        sub_1BA72C46C(v20, 0);
        if (v1)
          break;
      }
      v19 += 16;
      --v16;
    }
    while (v16);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1BAC4C398()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0 + 56);
  if (!(v1 >> 6))
    return sub_1BAC4C05C();
  if (v1 >> 6 == 1)
    return sub_1BAC4BD18();
  return result;
}

uint64_t sub_1BAC4C428()
{
  return sub_1BAC4C05C();
}

void sub_1BAC4C43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(__int16 *)(v0 + 40);
  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
  {
    v6 = *(_QWORD *)v0;
    v7 = *(_QWORD *)(*(_QWORD *)v0 + 16);
    if (v7)
    {
      v16 = *(_QWORD *)(v0 + 24);
      v17 = *(_QWORD *)(v0 + 32);
      sub_1BAC68B58(v6, 0);
      swift_bridgeObjectRetain();
      v8 = (_BYTE *)(v6 + 40);
      do
      {
        if ((*v8 & 1) == 0)
        {
          v9 = *((_QWORD *)v8 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          if (v1)
          {
            sub_1BA72C46C(v9, 0);
            sub_1BA72C46C(v9, 0);
            sub_1BAC68B64(v6, 0);
            sub_1BAC68B64(v6, 0);
            return;
          }
          sub_1BA72C46C(v9, 0);
          sub_1BA72C46C(v9, 0);
        }
        v8 += 16;
        --v7;
      }
      while (v7);
      sub_1BAC68B64(v6, 0);
      sub_1BAC68B64(v6, 0);
      v2 = v16;
      v4 = v17;
    }
  }
  if (v5 < 0)
    __asm { BR              X10 }
  v10 = *(_QWORD *)(v3 + 16);
  if (v10)
  {
    v11 = v3;
    v12 = v3;
    v13 = v2;
    v18 = v4;
    sub_1BA7AAE84(v11, v2, v4, v5);
    swift_bridgeObjectRetain();
    v14 = (_BYTE *)(v12 + 40);
    do
    {
      if ((*v14 & 1) == 0)
      {
        v15 = *((_QWORD *)v14 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v15, 0);
        sub_1BA72C46C(v15, 0);
        if (v1)
          break;
      }
      v14 += 16;
      --v10;
    }
    while (v10);
    sub_1BA7E0800(v12, v13, v18, v5);
    sub_1BA7E0800(v12, v13, v18, v5);
  }
}

uint64_t sub_1BAC4C658()
{
  unsigned int v0;

  return ((uint64_t (*)(void))((char *)&loc_1BAC4C624 + 4 * byte_1BB8A634F[(v0 >> 4) & 3]))();
}

void sub_1BAC4C7F8(uint64_t a1)
{
  sub_1BAC48984(a1);
}

void sub_1BAC4C818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v4 = *(__int16 *)(v0 + 24);
  if (v4 < 0)
  {
    sub_1BAC39E7C();
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 16);
    if (v5)
    {
      v8 = *(_QWORD *)(v0 + 16);
      swift_bridgeObjectRetain();
      v6 = (_BYTE *)(v3 + 40);
      do
      {
        if ((*v6 & 1) == 0)
        {
          v7 = *((_QWORD *)v6 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v7, 0);
          sub_1BA72C46C(v7, 0);
          if (v1)
            break;
        }
        v6 += 16;
        --v5;
      }
      while (v5);
      sub_1BA7E0800(v3, v2, v8, v4);
    }
  }
}

void sub_1BAC4C928()
{
  sub_1BAC4C43C();
}

uint64_t sub_1BAC4C93C(uint64_t result)
{
  uint64_t v1;

  if ((*(_BYTE *)(v1 + 8) & 1) == 0)
    return sub_1BAC2F9C4(result, *(_QWORD *)v1);
  return result;
}

void sub_1BAC4C95C()
{
  sub_1BAC4C818();
}

void sub_1BAC4C970(uint64_t a1)
{
  sub_1BAC49C20(a1);
}

void sub_1BAC4C990(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    if (v3)
    {
      v6 = *(_QWORD *)(v3 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain_n();
        v7 = (_BYTE *)(v3 + 40);
        do
        {
          if ((*v7 & 1) == 0)
          {
            v8 = *((_QWORD *)v7 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v8, 0);
            sub_1BA72C46C(v8, 0);
          }
          v7 += 16;
          --v6;
        }
        while (v6);
        swift_bridgeObjectRelease_n();
      }
    }
    if ((~v4 & 0xF000000000000007) != 0)
      sub_1BAC35E00();
    if ((~v5 & 0xF000000000000007) != 0)
      sub_1BAC35E00();
  }
}

void sub_1BAC4CAD8(uint64_t a1)
{
  sub_1BAC4C990(a1);
}

void sub_1BAC4CAEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  _QWORD v11[2];

  v11[1] = a1;
  sub_1BA74E17C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent);
  MEMORY[0x1E0C80A78](v2);
  sub_1BA74E17C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont);
  MEMORY[0x1E0C80A78](v3);
  sub_1BA74E17C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA74E17C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent);
  MEMORY[0x1E0C80A78](v5);
  sub_1BA74E17C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor);
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v7);
  sub_1BA4C2DD8(v1, (uint64_t)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v10 = (char *)sub_1BAC4CCF0 + 4 * byte_1BB8A6353[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAC4CCF0()
{
  uint64_t v0;

  return sub_1BA4A2E80(v0, type metadata accessor for FormatPropertyDefinition);
}

void sub_1BAC4CF94(uint64_t a1)
{
  sub_1BAC4CAEC(a1);
}

unint64_t sub_1BAC4CFA8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t result;

  v2 = *(_QWORD *)(v0 + 8);
  if (v2 >= 3)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      sub_1BA738D44(*(_QWORD *)(v0 + 8));
      swift_bridgeObjectRetain();
      v4 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v4 & 1) == 0)
        {
          v5 = *((_QWORD *)v4 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v5, 0);
          sub_1BA72C46C(v5, 0);
          if (v1)
            break;
        }
        v4 += 16;
        --v3;
      }
      while (v3);
      sub_1BA738D54(v2);
      return sub_1BA738D54(v2);
    }
  }
  return result;
}

unint64_t sub_1BAC4D078()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t result;

  v2 = *v0;
  if (*v0 >= 3)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain();
      v4 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v4 & 1) == 0)
        {
          v5 = *((_QWORD *)v4 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v5, 0);
          sub_1BA72C46C(v5, 0);
          if (v1)
            break;
        }
        v4 += 16;
        --v3;
      }
      while (v3);
      return sub_1BA738D54(v2);
    }
  }
  return result;
}

unint64_t sub_1BAC4D138()
{
  return sub_1BAC4CFA8();
}

uint64_t sub_1BAC4D14C(uint64_t result)
{
  uint64_t *v1;

  if ((unint64_t)*v1 >= 3)
    return sub_1BAC2F9C4(result, *v1);
  return result;
}

uint64_t sub_1BAC4D16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v2 = type metadata accessor for FormatURL();
  v37 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - v6;
  v8 = type metadata accessor for FormatPostPurchase();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v36 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3BE290, v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - v13;
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v32 = v2;
    v33 = v4;
    v34 = (char *)&v31 - v13;
    v35 = v7;
    v15 = *(_QWORD *)(v0 + 8);
    v17 = *(_QWORD *)(v0 + 16);
    v38 = *(_QWORD *)v0;
    v16 = v38;
    v39 = v15;
    v40 = v17;
    v41 = 5;
    sub_1BA60DF54(v38, v15, v17, 1);
    sub_1BA60DF54(v16, v15, v17, 1);
    v18 = sub_1BB6B84D4(&v38, &v41);
    if (v1)
      return sub_1BA60DFC4(v16, v15, v17, 1);
    v20 = v18;
    swift_bridgeObjectRetain();
    sub_1BB3D7F90(v16, v15, v20, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA60DFC4(v16, v15, v17, 1);
    v14 = v34;
    v7 = v35;
    v2 = v32;
    v4 = v33;
  }
  v21 = type metadata accessor for FormatPurchaseLandingPage();
  sub_1BA57B488(v0 + *(int *)(v21 + 20), (uint64_t)v14, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
    return sub_1BA502AD0((uint64_t)v14, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  v22 = v36;
  sub_1BA4C2DD8((uint64_t)v14, v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v22, 2, v2))
    return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
  sub_1BA5193C4(v22, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
  }
  if (v4[24])
    goto LABEL_13;
  v24 = (uint64_t)v14;
  v25 = v4;
  v26 = *(_QWORD *)v4;
  v28 = *((_QWORD *)v25 + 1);
  v27 = *((_QWORD *)v25 + 2);
  v38 = v26;
  v39 = v28;
  v40 = v27;
  v41 = 6;
  sub_1BA690C00(v26, v28, v27, 0);
  v29 = sub_1BB6B84D4(&v38, &v41);
  if (!v1)
  {
    v30 = v29;
    swift_bridgeObjectRetain();
    sub_1BB3D7F90(v26, v28, v30, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5A7EF8(v26, v28, v27, 0);
    v14 = (char *)v24;
    goto LABEL_13;
  }
  sub_1BA5A7EF8(v26, v28, v27, 0);
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  return sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
}

void sub_1BAC4D588(uint64_t a1)
{
  sub_1BAC38E00(a1);
}

uint64_t sub_1BAC4D59C()
{
  return sub_1BAC4D16C();
}

void sub_1BAC4D5B0(uint64_t a1)
{
  sub_1BAC48C20(a1);
}

uint64_t sub_1BAC4D5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC440BC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAC35120);
}

uint64_t sub_1BAC4D5EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 56);
  swift_bridgeObjectRetain();
  sub_1BABEAB98(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC4D630(uint64_t a1)
{
  return sub_1BB5D2C38(a1);
}

uint64_t sub_1BAC4D660(uint64_t a1)
{
  uint64_t v1;

  return sub_1BABEB020(a1, *(_QWORD *)(v1 + 112));
}

uint64_t sub_1BAC4D678(uint64_t a1, uint64_t a2)
{
  return sub_1BAC46480(a1, a2);
}

uint64_t sub_1BAC4D68C()
{
  return sub_1BAC2FDCC();
}

uint64_t sub_1BAC4D6A0()
{
  return sub_1BAC3DAC8();
}

uint64_t sub_1BAC4D6B4(uint64_t a1)
{
  return sub_1BAC328E8(a1);
}

uint64_t sub_1BAC4D6C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  int EnumCaseMultiPayload;
  uint64_t v111;
  int v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  unsigned int (*v117)(char *, uint64_t, uint64_t);
  unsigned int (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  int *v123;
  unsigned int (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int (*v132)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v133)(_QWORD, _QWORD, _QWORD);
  int *v134;
  int v135;
  uint64_t v136;
  unsigned int (*v137)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v138)(uint64_t, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unsigned int (*v146)(uint64_t, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  unsigned int (*v152)(_QWORD, _QWORD, _QWORD);
  uint64_t v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int (*v158)(uint64_t, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v161;
  unsigned int (*v162)(_QWORD, _QWORD, _QWORD);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  int v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  unsigned int (*v176)(_QWORD, _QWORD, _QWORD);
  uint64_t v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  int v185;
  uint64_t *v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int v192;
  uint64_t v193;
  char *v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t v209;
  uint64_t v210;
  int v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  int v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  int *v220;
  uint64_t v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  char *v348;
  uint64_t v349;
  char *v350;
  char *v351;
  uint64_t v352;
  char *v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  char *v357;
  char *v358;
  char *v359;
  uint64_t v360;
  char *v361;
  uint64_t v362;
  char *v363;
  char *v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  char *v368;
  char *v369;
  uint64_t v370;
  uint64_t v371;
  char *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  unsigned int (*v376)(uint64_t, uint64_t, uint64_t);
  uint64_t v377;
  int *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  char v382;
  char v383;
  uint64_t v384;
  uint64_t v385;

  v2 = v1;
  v366 = a1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v329 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v332 = (char *)&v329 - v7;
  MEMORY[0x1E0C80A78](v8);
  v346 = (char *)&v329 - v9;
  MEMORY[0x1E0C80A78](v10);
  v331 = (uint64_t)&v329 - v11;
  MEMORY[0x1E0C80A78](v12);
  v333 = (uint64_t)&v329 - v13;
  MEMORY[0x1E0C80A78](v14);
  v342 = (char *)&v329 - v15;
  MEMORY[0x1E0C80A78](v16);
  v337 = (char *)&v329 - v17;
  MEMORY[0x1E0C80A78](v18);
  v350 = (char *)&v329 - v19;
  MEMORY[0x1E0C80A78](v20);
  v349 = (uint64_t)&v329 - v21;
  MEMORY[0x1E0C80A78](v22);
  v352 = (uint64_t)&v329 - v23;
  MEMORY[0x1E0C80A78](v24);
  v353 = (char *)&v329 - v25;
  MEMORY[0x1E0C80A78](v26);
  v354 = (uint64_t)&v329 - v27;
  MEMORY[0x1E0C80A78](v28);
  v356 = (uint64_t)&v329 - v29;
  MEMORY[0x1E0C80A78](v30);
  v360 = (uint64_t)&v329 - v31;
  MEMORY[0x1E0C80A78](v32);
  v357 = (char *)&v329 - v33;
  MEMORY[0x1E0C80A78](v34);
  v362 = (uint64_t)&v329 - v35;
  MEMORY[0x1E0C80A78](v36);
  v363 = (char *)&v329 - v37;
  MEMORY[0x1E0C80A78](v38);
  v365 = (uint64_t)&v329 - v39;
  MEMORY[0x1E0C80A78](v40);
  v359 = (char *)&v329 - v41;
  MEMORY[0x1E0C80A78](v42);
  v369 = (char *)&v329 - v43;
  MEMORY[0x1E0C80A78](v44);
  v372 = (char *)&v329 - v45;
  MEMORY[0x1E0C80A78](v46);
  v370 = (uint64_t)&v329 - v47;
  MEMORY[0x1E0C80A78](v48);
  v371 = (uint64_t)&v329 - v49;
  MEMORY[0x1E0C80A78](v50);
  v368 = (char *)&v329 - v51;
  MEMORY[0x1E0C80A78](v52);
  v373 = (uint64_t)&v329 - v53;
  MEMORY[0x1E0C80A78](v54);
  v374 = (uint64_t)&v329 - v55;
  MEMORY[0x1E0C80A78](v56);
  v58 = (char *)&v329 - v57;
  v59 = type metadata accessor for FormatURL();
  v367 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v334 = (uint64_t)&v329 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v61);
  v335 = (uint64_t)&v329 - v62;
  MEMORY[0x1E0C80A78](v63);
  v343 = (char *)&v329 - v64;
  MEMORY[0x1E0C80A78](v65);
  v340 = (uint64_t)&v329 - v66;
  MEMORY[0x1E0C80A78](v67);
  v336 = (uint64_t)&v329 - v68;
  MEMORY[0x1E0C80A78](v69);
  v338 = (uint64_t)&v329 - v70;
  MEMORY[0x1E0C80A78](v71);
  v348 = (char *)&v329 - v72;
  MEMORY[0x1E0C80A78](v73);
  v345 = (uint64_t)&v329 - v74;
  MEMORY[0x1E0C80A78](v75);
  v351 = (char *)&v329 - v76;
  MEMORY[0x1E0C80A78](v77);
  v339 = (uint64_t)&v329 - v78;
  MEMORY[0x1E0C80A78](v79);
  v347 = (uint64_t)&v329 - v80;
  MEMORY[0x1E0C80A78](v81);
  v355 = (char *)&v329 - v82;
  MEMORY[0x1E0C80A78](v83);
  v358 = (char *)&v329 - v84;
  MEMORY[0x1E0C80A78](v85);
  v341 = (uint64_t)&v329 - v86;
  MEMORY[0x1E0C80A78](v87);
  v361 = (char *)&v329 - v88;
  MEMORY[0x1E0C80A78](v89);
  v364 = (char *)&v329 - v90;
  MEMORY[0x1E0C80A78](v91);
  v344 = (uint64_t)&v329 - v92;
  MEMORY[0x1E0C80A78](v93);
  v95 = (char *)&v329 - v94;
  MEMORY[0x1E0C80A78](v96);
  v98 = (char *)&v329 - v97;
  MEMORY[0x1E0C80A78](v99);
  v101 = (char *)&v329 - v100;
  MEMORY[0x1E0C80A78](v102);
  v104 = (char *)&v329 - v103;
  MEMORY[0x1E0C80A78](v105);
  v107 = (char *)&v329 - v106;
  v375 = v2;
  v109 = v108;
  sub_1BA4C2DD8(v2, (uint64_t)&v329 - v106, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v377 = v109;
  v330 = v5;
  if (!EnumCaseMultiPayload)
  {
    sub_1BA4A2E80((uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    v109 = v377;
    swift_bridgeObjectRelease();
LABEL_6:
    v111 = v375;
    goto LABEL_7;
  }
  if (v107[24])
    goto LABEL_6;
  v121 = *(_QWORD *)v107;
  v122 = *((_QWORD *)v107 + 1);
  v123 = (int *)*((_QWORD *)v107 + 2);
  v379 = v121;
  v380 = v122;
  v381 = (uint64_t)v123;
  v383 = 6;
  sub_1BA690C00(v121, v122, (uint64_t)v123, 0);
  v124 = v376;
  v125 = sub_1BB6B84D4(&v379, &v383);
  if (v124)
  {
    v126 = v121;
    v127 = v122;
    v128 = (uint64_t)v123;
    return sub_1BA5A7EF8(v126, v127, v128, 0);
  }
  v378 = v123;
  v216 = v125;
  swift_bridgeObjectRetain();
  v329 = v216;
  sub_1BB3D7F90(v121, v122, v216, 0);
  v376 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5A7EF8(v121, v122, (uint64_t)v378, 0);
  v111 = v375;
  v109 = v377;
LABEL_7:
  v378 = (int *)type metadata accessor for FormatRemoteVideo();
  sub_1BA4C2DD8(v111 + v378[5], (uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v112 = swift_getEnumCaseMultiPayload();
  if (v112)
  {
    if (v112 == 1)
    {
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
    }
    else if (!v104[24])
    {
      v143 = *(_QWORD *)v104;
      v144 = *((_QWORD *)v104 + 1);
      v145 = *((_QWORD *)v104 + 2);
      v379 = v143;
      v380 = v144;
      v381 = v145;
      v383 = 6;
      sub_1BA690C00(v143, v144, v145, 0);
      v146 = v376;
      v147 = sub_1BB6B84D4(&v379, &v383);
      if (v146)
      {
        v126 = v143;
        v127 = v144;
        v128 = v145;
        return sub_1BA5A7EF8(v126, v127, v128, 0);
      }
      v235 = v147;
      swift_bridgeObjectRetain();
      v329 = v235;
      sub_1BB3D7F90(v143, v144, v235, 0);
      v376 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v143, v144, v145, 0);
      v111 = v375;
      v109 = v377;
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v113 = (uint64_t)v372;
  sub_1BA4C2DD8(v111 + v378[6], (uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v114 = swift_getEnumCaseMultiPayload();
  if (!v114)
  {
    sub_1BA4A2E80((uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    goto LABEL_17;
  }
  if (v114 == 1)
  {
    swift_bridgeObjectRelease();
    v109 = v377;
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (!v101[24])
  {
    v155 = *((_QWORD *)v101 + 1);
    v157 = *((_QWORD *)v101 + 2);
    v379 = *(_QWORD *)v101;
    v156 = v379;
    v380 = v155;
    v381 = v157;
    v383 = 6;
    sub_1BA690C00(v379, v155, v157, 0);
    v158 = v376;
    v159 = sub_1BB6B84D4(&v379, &v383);
    if (!v158)
    {
      v246 = v159;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v156, v155, v246, 0);
      v376 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v156, v155, v157, 0);
      v111 = v375;
      v109 = v377;
      v113 = (uint64_t)v372;
      goto LABEL_17;
    }
    v126 = v156;
    v127 = v155;
    v128 = v157;
    return sub_1BA5A7EF8(v126, v127, v128, 0);
  }
LABEL_17:
  v115 = v374;
  v116 = v367;
  sub_1BA57B488(v111 + v378[7], (uint64_t)v58, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  v117 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48);
  if (v117(v58, 1, v109) == 1)
  {
    sub_1BA502AD0((uint64_t)v58, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v118 = v376;
    v119 = (uint64_t)v368;
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v58, (uint64_t)v98, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v120 = swift_getEnumCaseMultiPayload();
    v118 = v376;
    if (v120)
    {
      if (v120 == 1)
      {
        swift_bridgeObjectRelease();
        v109 = v377;
        swift_bridgeObjectRelease();
      }
      else if (!v98[24])
      {
        v223 = *((_QWORD *)v98 + 1);
        v225 = *((_QWORD *)v98 + 2);
        v379 = *(_QWORD *)v98;
        v224 = v379;
        v380 = v223;
        v381 = v225;
        v383 = 6;
        sub_1BA690C00(v379, v223, v225, 0);
        v226 = sub_1BB6B84D4(&v379, &v383);
        if (v118)
        {
          sub_1BA5A7EF8(v224, v223, v225, 0);
          goto LABEL_210;
        }
        v227 = v226;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v224, v223, v227, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v224, v223, v225, 0);
        v115 = v374;
        v111 = v375;
        v109 = v377;
        v113 = (uint64_t)v372;
      }
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v98, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v119 = (uint64_t)v368;
    sub_1BA4A2E80((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  sub_1BA57B488(v111 + v378[8], v115, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  v129 = v117((char *)v115, 1, v109);
  v130 = (uint64_t)v369;
  if (v129 == 1)
  {
    v131 = v115;
    v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v117;
    v133 = v118;
    sub_1BA502AD0(v131, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v134 = v378;
    goto LABEL_37;
  }
  sub_1BA4C2DD8(v115, (uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v135 = swift_getEnumCaseMultiPayload();
  if (v135)
  {
    if (v135 == 1)
    {
      v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v117;
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
    }
    else
    {
      if (!v95[24])
      {
        v230 = *((_QWORD *)v95 + 1);
        v232 = *((_QWORD *)v95 + 2);
        v379 = *(_QWORD *)v95;
        v231 = v379;
        v380 = v230;
        v381 = v232;
        v383 = 6;
        sub_1BA690C00(v379, v230, v232, 0);
        v233 = sub_1BB6B84D4(&v379, &v383);
        if (v118)
          goto LABEL_275;
        v234 = v233;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v231, v230, v234, 0);
        v134 = v378;
        v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v117;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v231, v230, v232, 0);
        v111 = v375;
        v109 = v377;
        v119 = (uint64_t)v368;
        v130 = (uint64_t)v369;
        v113 = (uint64_t)v372;
        goto LABEL_36;
      }
      v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v117;
    }
  }
  else
  {
    v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v117;
    sub_1BA4A2E80((uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v134 = v378;
LABEL_36:
  v133 = v118;
  sub_1BA4A2E80(v374, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_37:
  v136 = v373;
  sub_1BA57B488(v111 + v134[9], v373, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v132(v136, 1, v109) == 1)
  {
    sub_1BA502AD0(v136, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v137 = v133;
    v138 = v132;
    v139 = (uint64_t)v364;
    goto LABEL_48;
  }
  v140 = v136;
  v141 = v344;
  sub_1BA4C2DD8(v140, v344, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v142 = swift_getEnumCaseMultiPayload();
  if (v142)
  {
    if (v142 == 1)
    {
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
    }
    else if (!*(_BYTE *)(v141 + 24))
    {
      v236 = *(_QWORD *)(v141 + 8);
      v238 = *(_QWORD *)(v141 + 16);
      v379 = *(_QWORD *)v141;
      v237 = v379;
      v380 = v236;
      v381 = v238;
      v383 = 6;
      sub_1BA690C00(v379, v236, v238, 0);
      v239 = sub_1BB6B84D4(&v379, &v383);
      v137 = v133;
      if (v133)
      {
        sub_1BA5A7EF8(v237, v236, v238, 0);
        v229 = v373;
        return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v240 = v239;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v237, v236, v240, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v237, v236, v238, 0);
      v111 = v375;
      v109 = v377;
      v119 = (uint64_t)v368;
      v130 = (uint64_t)v369;
      v113 = (uint64_t)v372;
      v148 = v373;
      goto LABEL_47;
    }
  }
  else
  {
    sub_1BA4A2E80(v141, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v148 = v373;
  v137 = v133;
LABEL_47:
  v138 = v132;
  v139 = (uint64_t)v364;
  sub_1BA4A2E80(v148, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_48:
  sub_1BA57B488(v111 + v134[10], v119, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v119, 1, v109) == 1)
  {
    sub_1BA502AD0(v119, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v149 = (uint64_t)v361;
    v115 = v371;
    goto LABEL_57;
  }
  sub_1BA4C2DD8(v119, v139, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v150 = swift_getEnumCaseMultiPayload();
  if (v150)
  {
    if (v150 == 1)
    {
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
    }
    else if (!*(_BYTE *)(v139 + 24))
    {
      v241 = *(_QWORD *)(v139 + 8);
      v243 = *(_QWORD *)(v139 + 16);
      v379 = *(_QWORD *)v139;
      v242 = v379;
      v380 = v241;
      v381 = v243;
      v383 = 6;
      sub_1BA690C00(v379, v241, v243, 0);
      v244 = sub_1BB6B84D4(&v379, &v383);
      if (v137)
      {
        sub_1BA5A7EF8(v242, v241, v243, 0);
        v229 = (uint64_t)v368;
        return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v245 = v244;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v242, v241, v245, 0);
      v115 = v371;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v242, v241, v243, 0);
      v111 = v375;
      v109 = v377;
      v119 = (uint64_t)v368;
      v130 = (uint64_t)v369;
      v113 = (uint64_t)v372;
      goto LABEL_56;
    }
  }
  else
  {
    sub_1BA4A2E80(v139, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v115 = v371;
LABEL_56:
  sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v149 = (uint64_t)v361;
LABEL_57:
  sub_1BA57B488(v111 + v134[11], v115, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v115, 1, v109) == 1)
  {
    v151 = v115;
    v152 = v137;
    sub_1BA502AD0(v151, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v153 = (uint64_t)v363;
    goto LABEL_70;
  }
  sub_1BA4C2DD8(v115, v149, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v154 = swift_getEnumCaseMultiPayload();
  if (v154)
  {
    if (v154 == 1)
    {
      v152 = v137;
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
    }
    else
    {
      if (!*(_BYTE *)(v149 + 24))
      {
        v247 = v149;
        v231 = *(_QWORD *)v149;
        v230 = *(_QWORD *)(v247 + 8);
        v232 = *(_QWORD *)(v247 + 16);
        v379 = v231;
        v380 = v230;
        v381 = v232;
        v383 = 6;
        sub_1BA690C00(v231, v230, v232, 0);
        v248 = sub_1BB6B84D4(&v379, &v383);
        if (v137)
          goto LABEL_275;
        v249 = v248;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v231, v230, v249, 0);
        v152 = 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v231, v230, v232, 0);
        v111 = v375;
        v109 = v377;
        v153 = (uint64_t)v363;
        v130 = (uint64_t)v369;
        v113 = (uint64_t)v372;
        goto LABEL_69;
      }
      v152 = v137;
    }
  }
  else
  {
    v152 = v137;
    sub_1BA4A2E80(v149, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v153 = (uint64_t)v363;
LABEL_69:
  sub_1BA4A2E80(v371, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_70:
  v161 = v370;
  sub_1BA57B488(v111 + v134[12], v370, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v161, 1, v109) == 1)
  {
    sub_1BA502AD0(v161, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v162 = v152;
    v163 = (uint64_t)v358;
    goto LABEL_79;
  }
  v164 = v161;
  v165 = v341;
  sub_1BA4C2DD8(v164, v341, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v166 = swift_getEnumCaseMultiPayload();
  if (v166)
  {
    if (v166 == 1)
    {
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
    }
    else if (!*(_BYTE *)(v165 + 24))
    {
      v250 = *(_QWORD *)(v165 + 8);
      v252 = *(_QWORD *)(v165 + 16);
      v379 = *(_QWORD *)v165;
      v251 = v379;
      v380 = v250;
      v381 = v252;
      v383 = 6;
      sub_1BA690C00(v379, v250, v252, 0);
      v253 = sub_1BB6B84D4(&v379, &v383);
      v162 = v152;
      if (v152)
      {
        sub_1BA5A7EF8(v251, v250, v252, 0);
        v229 = v370;
        return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v254 = v253;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v251, v250, v254, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v251, v250, v252, 0);
      v111 = v375;
      v109 = v377;
      v153 = (uint64_t)v363;
      v130 = (uint64_t)v369;
      v167 = v370;
      v113 = (uint64_t)v372;
      goto LABEL_78;
    }
  }
  else
  {
    sub_1BA4A2E80(v165, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v167 = v370;
  v162 = v152;
LABEL_78:
  v163 = (uint64_t)v358;
  sub_1BA4A2E80(v167, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_79:
  sub_1BA57B488(v111 + v134[13], v113, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v113, 1, v109) == 1)
  {
    sub_1BA502AD0(v113, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v168 = (uint64_t)v355;
    v169 = (uint64_t)v359;
    goto LABEL_88;
  }
  sub_1BA4C2DD8(v113, v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v170 = swift_getEnumCaseMultiPayload();
  if (v170)
  {
    if (v170 == 1)
    {
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
    }
    else if (!*(_BYTE *)(v163 + 24))
    {
      v256 = *(_QWORD *)(v163 + 8);
      v258 = *(_QWORD *)(v163 + 16);
      v379 = *(_QWORD *)v163;
      v257 = v379;
      v380 = v256;
      v381 = v258;
      v383 = 6;
      sub_1BA690C00(v379, v256, v258, 0);
      v259 = sub_1BB6B84D4(&v379, &v383);
      if (v162)
      {
        sub_1BA5A7EF8(v257, v256, v258, 0);
        v229 = (uint64_t)v372;
        return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v260 = v259;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v257, v256, v260, 0);
      v169 = (uint64_t)v359;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v257, v256, v258, 0);
      v111 = v375;
      v109 = v377;
      v153 = (uint64_t)v363;
      v130 = (uint64_t)v369;
      v113 = (uint64_t)v372;
      goto LABEL_87;
    }
  }
  else
  {
    sub_1BA4A2E80(v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v169 = (uint64_t)v359;
LABEL_87:
  sub_1BA4A2E80(v113, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v168 = (uint64_t)v355;
LABEL_88:
  sub_1BA57B488(v111 + v134[14], v130, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v130, 1, v109) == 1)
  {
    sub_1BA502AD0(v130, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v171 = (uint64_t)v357;
    goto LABEL_97;
  }
  sub_1BA4C2DD8(v130, v168, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v172 = swift_getEnumCaseMultiPayload();
  if (v172)
  {
    if (v172 == 1)
    {
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
    }
    else if (!*(_BYTE *)(v168 + 24))
    {
      v261 = v168;
      v263 = *(_QWORD *)v168;
      v262 = *(_QWORD *)(v168 + 8);
      v264 = *(_QWORD *)(v261 + 16);
      v379 = v263;
      v380 = v262;
      v381 = v264;
      v383 = 6;
      sub_1BA690C00(v263, v262, v264, 0);
      v265 = sub_1BB6B84D4(&v379, &v383);
      if (v162)
      {
        sub_1BA5A7EF8(v263, v262, v264, 0);
        v229 = (uint64_t)v369;
        return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v266 = v265;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v263, v262, v266, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v263, v262, v264, 0);
      v111 = v375;
      v109 = v377;
      v171 = (uint64_t)v357;
      v153 = (uint64_t)v363;
      v130 = (uint64_t)v369;
      goto LABEL_96;
    }
  }
  else
  {
    sub_1BA4A2E80(v168, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v171 = (uint64_t)v357;
LABEL_96:
  sub_1BA4A2E80(v130, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_97:
  sub_1BA57B488(v111 + v134[15], v169, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v169, 1, v109) == 1)
  {
    v173 = v353;
    sub_1BA502AD0(v169, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    goto LABEL_108;
  }
  v376 = v138;
  v174 = v153;
  v175 = v171;
  v176 = v162;
  v177 = v347;
  sub_1BA4C2DD8(v169, v347, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v178 = swift_getEnumCaseMultiPayload();
  if (!v178)
  {
    v173 = v353;
    sub_1BA4A2E80(v177, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    goto LABEL_103;
  }
  if (v178 == 1)
  {
    v173 = v353;
    swift_bridgeObjectRelease();
    v109 = v377;
    swift_bridgeObjectRelease();
LABEL_103:
    v162 = v176;
    goto LABEL_106;
  }
  v162 = v176;
  if (!*(_BYTE *)(v347 + 24))
  {
    v267 = *(_QWORD *)(v347 + 8);
    v269 = *(_QWORD *)(v347 + 16);
    v379 = *(_QWORD *)v347;
    v268 = v379;
    v380 = v267;
    v381 = v269;
    v383 = 6;
    sub_1BA690C00(v379, v267, v269, 0);
    v270 = sub_1BB6B84D4(&v379, &v383);
    if (v162)
    {
      sub_1BA5A7EF8(v268, v267, v269, 0);
      v272 = &v385;
      goto LABEL_282;
    }
    v271 = v270;
    swift_bridgeObjectRetain();
    sub_1BB3D7F90(v268, v267, v271, 0);
    v173 = v353;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5A7EF8(v268, v267, v269, 0);
    v111 = v375;
    v109 = v377;
    v171 = (uint64_t)v357;
    v153 = (uint64_t)v363;
    v169 = (uint64_t)v359;
    goto LABEL_107;
  }
  v173 = v353;
LABEL_106:
  v171 = v175;
  v153 = v174;
LABEL_107:
  v138 = v376;
  sub_1BA4A2E80(v169, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_108:
  v179 = v365;
  sub_1BA57B488(v111 + v134[16], v365, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v179, 1, v109) == 1)
  {
    sub_1BA502AD0(v179, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v115 = (uint64_t)v173;
    v180 = (uint64_t)v351;
    goto LABEL_118;
  }
  v181 = v179;
  v182 = v339;
  sub_1BA4C2DD8(v181, v339, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v183 = swift_getEnumCaseMultiPayload();
  if (v183)
  {
    if (v183 != 1)
    {
      v185 = *(unsigned __int8 *)(v182 + 24);
      v186 = (uint64_t *)v182;
      v115 = (uint64_t)v173;
      if (!v185)
      {
        v273 = v186[1];
        v275 = v186[2];
        v379 = *v186;
        v274 = v379;
        v380 = v273;
        v381 = v275;
        v383 = 6;
        sub_1BA690C00(v379, v273, v275, 0);
        v276 = sub_1BB6B84D4(&v379, &v383);
        if (v162)
        {
          sub_1BA5A7EF8(v274, v273, v275, 0);
          v229 = v365;
          return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        v277 = v276;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v274, v273, v277, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v274, v273, v275, 0);
        v111 = v375;
        v109 = v377;
        v171 = (uint64_t)v357;
        v153 = (uint64_t)v363;
      }
      v184 = v365;
      goto LABEL_117;
    }
    swift_bridgeObjectRelease();
    v109 = v377;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80(v182, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v184 = v365;
  v115 = (uint64_t)v173;
LABEL_117:
  v180 = (uint64_t)v351;
  sub_1BA4A2E80(v184, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_118:
  sub_1BA57B488(v111 + v134[17], v153, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v153, 1, v109) == 1)
  {
    sub_1BA502AD0(v153, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v58 = v350;
    goto LABEL_127;
  }
  sub_1BA4C2DD8(v153, v180, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v187 = swift_getEnumCaseMultiPayload();
  if (v187)
  {
    if (v187 == 1)
    {
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
    }
    else if (!*(_BYTE *)(v180 + 24))
    {
      v278 = *(_QWORD *)(v180 + 8);
      v280 = *(_QWORD *)(v180 + 16);
      v379 = *(_QWORD *)v180;
      v279 = v379;
      v380 = v278;
      v381 = v280;
      v383 = 6;
      sub_1BA690C00(v379, v278, v280, 0);
      v281 = sub_1BB6B84D4(&v379, &v383);
      if (v162)
      {
        sub_1BA5A7EF8(v279, v278, v280, 0);
        v229 = (uint64_t)v363;
        return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v282 = v281;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v279, v278, v282, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v279, v278, v280, 0);
      v111 = v375;
      v109 = v377;
      v58 = v350;
      v171 = (uint64_t)v357;
      v153 = (uint64_t)v363;
      goto LABEL_126;
    }
  }
  else
  {
    sub_1BA4A2E80(v180, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v58 = v350;
LABEL_126:
  sub_1BA4A2E80(v153, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_127:
  v188 = v362;
  sub_1BA57B488(v111 + v134[18], v362, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v188, 1, v109) == 1)
  {
    sub_1BA502AD0(v188, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v189 = (uint64_t)v348;
    goto LABEL_137;
  }
  v190 = v188;
  v191 = v345;
  sub_1BA4C2DD8(v190, v345, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v192 = swift_getEnumCaseMultiPayload();
  if (v192)
  {
    v189 = (uint64_t)v348;
    if (v192 == 1)
    {
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
LABEL_135:
      v193 = v362;
      goto LABEL_136;
    }
    if (*(_BYTE *)(v345 + 24))
      goto LABEL_135;
    v283 = *(_QWORD *)(v345 + 8);
    v285 = *(_QWORD *)(v345 + 16);
    v379 = *(_QWORD *)v345;
    v284 = v379;
    v380 = v283;
    v381 = v285;
    v383 = 6;
    sub_1BA690C00(v379, v283, v285, 0);
    v286 = sub_1BB6B84D4(&v379, &v383);
    if (v162)
    {
      sub_1BA5A7EF8(v284, v283, v285, 0);
      v229 = v362;
      return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v287 = v286;
    swift_bridgeObjectRetain();
    sub_1BB3D7F90(v284, v283, v287, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5A7EF8(v284, v283, v285, 0);
    v111 = v375;
    v109 = v377;
    v58 = v350;
    v171 = (uint64_t)v357;
  }
  else
  {
    sub_1BA4A2E80(v191, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v193 = v362;
  v189 = (uint64_t)v348;
LABEL_136:
  sub_1BA4A2E80(v193, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_137:
  sub_1BA57B488(v111 + v134[19], v171, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v171, 1, v109) == 1)
  {
    sub_1BA502AD0(v171, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v194 = v346;
    goto LABEL_146;
  }
  sub_1BA4C2DD8(v171, v189, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v195 = swift_getEnumCaseMultiPayload();
  if (v195)
  {
    if (v195 == 1)
    {
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
    }
    else if (!*(_BYTE *)(v189 + 24))
    {
      v288 = v189;
      v289 = *(_QWORD *)v189;
      v291 = *(_QWORD *)(v288 + 8);
      v290 = *(_QWORD *)(v288 + 16);
      v379 = v289;
      v380 = v291;
      v381 = v290;
      v383 = 6;
      sub_1BA690C00(v289, v291, v290, 0);
      v292 = sub_1BB6B84D4(&v379, &v383);
      if (v162)
      {
        sub_1BA5A7EF8(v289, v291, v290, 0);
        v229 = (uint64_t)v357;
        return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v293 = v292;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v289, v291, v293, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v289, v291, v290, 0);
      v111 = v375;
      v194 = v346;
      v109 = v377;
      v58 = v350;
      v171 = (uint64_t)v357;
      goto LABEL_145;
    }
  }
  else
  {
    sub_1BA4A2E80(v189, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v194 = v346;
LABEL_145:
  sub_1BA4A2E80(v171, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_146:
  v196 = v360;
  sub_1BA57B488(v111 + v134[20], v360, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v196, 1, v109) == 1)
  {
    sub_1BA502AD0(v196, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    v197 = v196;
    v198 = v338;
    sub_1BA4C2DD8(v197, v338, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v199 = swift_getEnumCaseMultiPayload();
    if (v199)
    {
      if (v199 == 1)
      {
        swift_bridgeObjectRelease();
        v109 = v377;
        swift_bridgeObjectRelease();
      }
      else if (!*(_BYTE *)(v198 + 24))
      {
        v297 = v198;
        v299 = *(_QWORD *)v198;
        v298 = *(_QWORD *)(v198 + 8);
        v300 = *(_QWORD *)(v297 + 16);
        v379 = v299;
        v380 = v298;
        v381 = v300;
        v383 = 6;
        sub_1BA690C00(v299, v298, v300, 0);
        v301 = sub_1BB6B84D4(&v379, &v383);
        if (v162)
        {
          sub_1BA5A7EF8(v299, v298, v300, 0);
          v229 = v360;
          return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        }
        v302 = v301;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v299, v298, v302, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v299, v298, v300, 0);
        v111 = v375;
        v194 = v346;
        v109 = v377;
        v58 = v350;
      }
    }
    else
    {
      sub_1BA4A2E80(v198, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA4A2E80(v360, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v200 = v356;
  sub_1BA57B488(v111 + v134[21], v356, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v200, 1, v109) == 1)
  {
    sub_1BA502AD0(v200, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    v201 = v200;
    v202 = v336;
    sub_1BA4C2DD8(v201, v336, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v203 = swift_getEnumCaseMultiPayload();
    if (v203)
    {
      if (v203 == 1)
      {
        swift_bridgeObjectRelease();
        v109 = v377;
        swift_bridgeObjectRelease();
      }
      else if (!*(_BYTE *)(v202 + 24))
      {
        v303 = v202;
        v305 = *(_QWORD *)v202;
        v304 = *(_QWORD *)(v202 + 8);
        v306 = *(_QWORD *)(v303 + 16);
        v379 = v305;
        v380 = v304;
        v381 = v306;
        v383 = 6;
        sub_1BA690C00(v305, v304, v306, 0);
        v307 = sub_1BB6B84D4(&v379, &v383);
        if (v162)
        {
          sub_1BA5A7EF8(v305, v304, v306, 0);
          v272 = &v384;
          goto LABEL_282;
        }
        v308 = v307;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v305, v304, v308, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v305, v304, v306, 0);
        v111 = v375;
        v194 = v346;
        v109 = v377;
        v58 = v350;
      }
    }
    else
    {
      sub_1BA4A2E80(v202, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    sub_1BA4A2E80(v356, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v204 = v354;
  sub_1BA57B488(v111 + v134[22], v354, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v204, 1, v109) == 1)
  {
    sub_1BA502AD0(v204, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v205 = (uint64_t)v343;
    goto LABEL_172;
  }
  v206 = v204;
  v207 = v340;
  sub_1BA4C2DD8(v206, v340, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v208 = swift_getEnumCaseMultiPayload();
  if (v208)
  {
    v205 = (uint64_t)v343;
    if (v208 == 1)
    {
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
LABEL_170:
      v209 = v354;
      goto LABEL_171;
    }
    if (*(_BYTE *)(v340 + 24))
      goto LABEL_170;
    v309 = *(_QWORD *)(v340 + 8);
    v311 = *(_QWORD *)(v340 + 16);
    v379 = *(_QWORD *)v340;
    v310 = v379;
    v380 = v309;
    v381 = v311;
    v383 = 6;
    sub_1BA690C00(v379, v309, v311, 0);
    v312 = sub_1BB6B84D4(&v379, &v383);
    if (v162)
    {
      sub_1BA5A7EF8(v310, v309, v311, 0);
      v229 = v354;
      return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    v313 = v312;
    swift_bridgeObjectRetain();
    sub_1BB3D7F90(v310, v309, v313, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5A7EF8(v310, v309, v311, 0);
    v111 = v375;
    v194 = v346;
    v109 = v377;
    v58 = v350;
  }
  else
  {
    sub_1BA4A2E80(v207, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v209 = v354;
  v205 = (uint64_t)v343;
LABEL_171:
  sub_1BA4A2E80(v209, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_172:
  sub_1BA57B488(v111 + v134[23], v115, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v115, 1, v109) == 1)
  {
    sub_1BA502AD0(v115, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v210 = (uint64_t)v342;
    goto LABEL_181;
  }
  sub_1BA4C2DD8(v115, v205, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v211 = swift_getEnumCaseMultiPayload();
  if (!v211)
  {
    sub_1BA4A2E80(v205, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    goto LABEL_179;
  }
  if (v211 != 1)
  {
    if (*(_BYTE *)(v205 + 24))
      goto LABEL_179;
    v314 = v205;
    v231 = *(_QWORD *)v205;
    v230 = *(_QWORD *)(v205 + 8);
    v232 = *(_QWORD *)(v314 + 16);
    v379 = v231;
    v380 = v230;
    v381 = v232;
    v383 = 6;
    sub_1BA690C00(v231, v230, v232, 0);
    v315 = sub_1BB6B84D4(&v379, &v383);
    if (!v162)
    {
      v328 = v315;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v231, v230, v328, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v231, v230, v232, 0);
      v111 = v375;
      v194 = v346;
      v109 = v377;
      v210 = (uint64_t)v342;
      v58 = v350;
      goto LABEL_180;
    }
LABEL_275:
    sub_1BA5A7EF8(v231, v230, v232, 0);
    v229 = v115;
    return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  swift_bridgeObjectRelease();
  v109 = v377;
  swift_bridgeObjectRelease();
LABEL_179:
  v210 = (uint64_t)v342;
LABEL_180:
  sub_1BA4A2E80(v115, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_181:
  v212 = v352;
  sub_1BA57B488(v111 + v134[24], v352, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v212, 1, v109) == 1)
  {
    sub_1BA502AD0(v212, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    goto LABEL_191;
  }
  v213 = v212;
  v214 = v335;
  sub_1BA4C2DD8(v213, v335, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v215 = swift_getEnumCaseMultiPayload();
  if (v215)
  {
    if (v215 == 1)
    {
      swift_bridgeObjectRelease();
      v109 = v377;
      swift_bridgeObjectRelease();
    }
    else if (!*(_BYTE *)(v214 + 24))
    {
      v316 = *(_QWORD *)(v214 + 8);
      v318 = *(_QWORD *)(v214 + 16);
      v379 = *(_QWORD *)v214;
      v317 = v379;
      v380 = v316;
      v381 = v318;
      v383 = 6;
      sub_1BA690C00(v379, v316, v318, 0);
      v319 = sub_1BB6B84D4(&v379, &v383);
      if (v162)
      {
        sub_1BA5A7EF8(v317, v316, v318, 0);
        v272 = (uint64_t *)&v382;
        goto LABEL_282;
      }
      v320 = v319;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v317, v316, v320, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v317, v316, v318, 0);
      v111 = v375;
      v194 = v346;
      v109 = v377;
      v210 = (uint64_t)v342;
      v58 = v350;
      v217 = v352;
      goto LABEL_190;
    }
  }
  else
  {
    sub_1BA4A2E80(v214, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  v217 = v352;
LABEL_190:
  sub_1BA4A2E80(v217, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_191:
  v218 = v111 + v134[25];
  v219 = v349;
  sub_1BA57B488(v218, v349, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v219, 1, v109) == 1)
  {
    sub_1BA502AD0(v219, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v220 = v378;
    goto LABEL_203;
  }
  v221 = v334;
  sub_1BA4C2DD8(v219, v334, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v222 = swift_getEnumCaseMultiPayload();
  if (!v222)
  {
    sub_1BA4A2E80(v221, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    goto LABEL_201;
  }
  if (v222 != 1)
  {
    if (*(_BYTE *)(v221 + 24))
      goto LABEL_201;
    v321 = *(_QWORD *)(v221 + 8);
    v323 = *(_QWORD *)(v221 + 16);
    v379 = *(_QWORD *)v221;
    v322 = v379;
    v380 = v321;
    v381 = v323;
    v383 = 6;
    sub_1BA690C00(v379, v321, v323, 0);
    v324 = sub_1BB6B84D4(&v379, &v383);
    if (!v162)
    {
      v325 = v324;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v322, v321, v325, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5A7EF8(v322, v321, v323, 0);
      v111 = v375;
      v194 = v346;
      v109 = v377;
      v220 = v378;
      v210 = (uint64_t)v342;
      v58 = v350;
      v228 = v349;
      goto LABEL_202;
    }
    sub_1BA5A7EF8(v322, v321, v323, 0);
    v272 = &v381;
LABEL_282:
    v229 = *(v272 - 32);
    return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  swift_bridgeObjectRelease();
  v109 = v377;
  swift_bridgeObjectRelease();
LABEL_201:
  v228 = v349;
  v220 = v378;
LABEL_202:
  sub_1BA4A2E80(v228, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_203:
  sub_1BA57B488(v111 + v220[26], (uint64_t)v58, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138((uint64_t)v58, 1, v109) == 1)
  {
    sub_1BA502AD0((uint64_t)v58, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1BAC462CC();
    if (v162)
      goto LABEL_210;
    sub_1BA4A2E80((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v111 = v375;
  }
  v58 = v337;
  sub_1BA57B488(v111 + v220[27], (uint64_t)v337, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138((uint64_t)v58, 1, v109) == 1)
  {
    sub_1BA502AD0((uint64_t)v58, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    goto LABEL_227;
  }
  sub_1BAC462CC();
  if (v162)
  {
LABEL_210:
    v229 = (uint64_t)v58;
    return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  sub_1BA4A2E80((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v111 = v375;
LABEL_227:
  sub_1BA57B488(v111 + v220[28], v210, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v210, 1, v109) == 1)
  {
    v255 = (uint64_t)v194;
    sub_1BA502AD0(v210, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1BAC462CC();
    if (v162)
      goto LABEL_230;
    v255 = (uint64_t)v194;
    sub_1BA4A2E80(v210, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v111 = v375;
  }
  v294 = v333;
  sub_1BA57B488(v111 + v220[29], v333, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v294, 1, v109) == 1)
  {
    sub_1BA502AD0(v294, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1BAC462CC();
    if (v162)
      goto LABEL_273;
    sub_1BA4A2E80(v294, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v111 = v375;
  }
  v295 = v331;
  v210 = (uint64_t)v332;
  v294 = v255;
  sub_1BA57B488(v111 + v220[30], v331, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v295, 1, v377) == 1)
  {
    sub_1BA502AD0(v295, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    sub_1BAC462CC();
    v229 = v295;
    if (v162)
      return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    sub_1BA4A2E80(v295, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v111 = v375;
  }
  sub_1BA57B488(v111 + v220[31], v255, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  v296 = v377;
  if (v138(v255, 1, v377) == 1)
  {
    sub_1BA502AD0(v255, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    goto LABEL_284;
  }
  sub_1BAC462CC();
  if (v162)
  {
LABEL_273:
    v229 = v294;
    return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  v111 = v375;
LABEL_284:
  sub_1BA57B488(v111 + v220[32], v210, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v210, 1, v296) != 1)
  {
    sub_1BAC462CC();
    if (!v162)
    {
      sub_1BA4A2E80(v210, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v111 = v375;
      goto LABEL_288;
    }
LABEL_230:
    v229 = v210;
    return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  }
  sub_1BA502AD0(v210, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
LABEL_288:
  v326 = v111 + v220[33];
  v327 = (uint64_t)v330;
  sub_1BA57B488(v326, (uint64_t)v330, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  if (v138(v327, 1, v296) == 1)
    return sub_1BA502AD0(v327, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  sub_1BAC462CC();
  v229 = v327;
  return sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
}

uint64_t sub_1BAC507E8(uint64_t a1)
{
  return sub_1BAC4D6C8(a1);
}

uint64_t sub_1BAC507FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_BYTE *)(v1 + 40) != 1
    || (v4 = *(_QWORD *)(v1 + 32), swift_bridgeObjectRetain(), sub_1BAC2FA7C(a1, v4), result = sub_1BA800BCC(v4, 1), !v2))
  {
    v6 = *(_QWORD *)(v1 + 48);
    if (!v6 || (swift_bridgeObjectRetain(), sub_1BAC2FA7C(a1, v6), result = swift_bridgeObjectRelease(), !v2))
    {
      v7 = *(_QWORD *)(v1 + 56);
      if (!v7 || (swift_bridgeObjectRetain(), sub_1BAC2FA7C(a1, v7), result = swift_bridgeObjectRelease(), !v2))
      {
        v8 = *(_QWORD *)(v1 + 64);
        if (!v8 || (swift_bridgeObjectRetain(), sub_1BAC2FA7C(a1, v8), result = swift_bridgeObjectRelease(), !v2))
        {
          swift_beginAccess();
          v9 = *(_QWORD *)(v1 + 88);
          swift_bridgeObjectRetain();
          sub_1BABEBCF0(a1, v9);
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BAC50938(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 8) == 1)
    return sub_1BAC2FA7C(result, *(_QWORD *)v1);
  return result;
}

uint64_t sub_1BAC5095C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;

  result = swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    v14 = a1;
    v7 = (_OWORD *)(v5 + 56);
    while (1)
    {
      v8 = *((_QWORD *)v7 - 1);
      if (v8)
      {
        v9 = *((_QWORD *)v7 - 2);
        v15 = *v7;
        v10 = *(_QWORD **)(a1 + 56);
        swift_retain();
        swift_bridgeObjectRetain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1BB38ED20(0, v10[2] + 1, 1, v10);
        v12 = v10[2];
        v11 = v10[3];
        if (v12 >= v11 >> 1)
          v10 = sub_1BB38ED20((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
        v10[2] = v12 + 1;
        v13 = &v10[4 * v12];
        a1 = v14;
        v13[4] = v9;
        v13[5] = v8;
        *((_OWORD *)v13 + 3) = v15;
        *(_QWORD *)(v14 + 56) = v10;
      }
      else
      {
        swift_retain();
      }
      swift_retain();
      sub_1BAC46704(a1);
      if (v2)
        break;
      v7 = (_OWORD *)((char *)v7 + 40);
      swift_release_n();
      swift_bridgeObjectRelease();
      if (!--v6)
        return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease_n();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC50B24(uint64_t a1)
{
  return sub_1BAC4D630(a1);
}

uint64_t sub_1BAC50B38(uint64_t a1, uint64_t a2)
{
  return sub_1BAC35814(a1, a2);
}

uint64_t sub_1BAC50B4C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *((_QWORD *)v2 + 1);
  *(_QWORD *)&v15 = *(_QWORD *)v2;
  *((_QWORD *)&v15 + 1) = v10;
  result = sub_1BB5D2C38(v11);
  if (!v3)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v2[*(int *)(a2 + 36)], v6);
    sub_1BA4D9CE8(0, &qword_1EF2B0E30);
    if (swift_dynamicCast())
    {
      v13 = *((_QWORD *)&v16 + 1);
      v14 = v17;
      __swift_project_boxed_opaque_existential_1(&v15, *((uint64_t *)&v16 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, v13, v14);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
    }
    else
    {
      v17 = 0;
      v15 = 0u;
      v16 = 0u;
      return sub_1BA65DB80((uint64_t)&v15, &qword_1EF2B0E38, &qword_1EF2B0E30);
    }
  }
  return result;
}

uint64_t sub_1BAC50C90(uint64_t a1, uint64_t a2)
{
  return sub_1BAC50B4C(a1, a2);
}

void sub_1BAC50CA4()
{
  sub_1BAC35E00();
}

void sub_1BAC50CCC(uint64_t a1)
{
  sub_1BAC48200(a1);
}

void sub_1BAC50CE0()
{
  sub_1BAC363C0();
}

void sub_1BAC50CF4()
{
  sub_1BABE39D4();
}

uint64_t sub_1BAC50D08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[12];

  v4 = type metadata accessor for FormatOption();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = v1[8];
  swift_bridgeObjectRetain();
  sub_1BABEBCF0(a1, v8);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_beginAccess();
    v10 = v1[9];
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v15[0] = v1;
      v12 = v10 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v13 = *(_QWORD *)(v5 + 72);
      v15[11] = v10;
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1BA4C2DD8(v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v15[1] = *((_QWORD *)v7 + 2);
        swift_retain();
        sub_1BAC49F9C();
        swift_release();
        sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v12 += v13;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease_n();
      v1 = (_QWORD *)v15[0];
    }
    swift_beginAccess();
    v14 = v1[11];
    swift_bridgeObjectRetain();
    sub_1BABF86EC(a1, v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC50EE0(uint64_t a1)
{
  return sub_1BAC50D08(a1);
}

uint64_t sub_1BAC50F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC53944(a1, a2, a3, (uint64_t (*)(void))sub_1BAC35E00, (uint64_t (*)(uint64_t))sub_1BAC35E00);
}

uint64_t sub_1BAC50F20(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_BYTE *)(v1 + 24) == 1)
  {
    v2 = result;
    v5 = v1 + 8;
    v3 = *(_QWORD *)(v1 + 8);
    v4 = *(_QWORD *)(v5 + 8);
    sub_1BA896BB8(v3, v4, 1);
    sub_1BAC352C8(v2, v3, v4);
    return sub_1BA896BE0(v3, v4, 1);
  }
  return result;
}

uint64_t sub_1BAC50F94(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 16) == 1)
    return sub_1BAC352C8(result, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return result;
}

void sub_1BAC50FB8()
{
  sub_1BAC47B58();
}

void sub_1BAC50FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  if (*(_BYTE *)(v0 + 64) != 1)
  {
    sub_1BAC35E00();
    return;
  }
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v4)
  {
LABEL_7:
    if (!v3)
      return;
    v6 = *(_QWORD *)(v3 + 16);
    if (v6)
    {
      v7 = swift_bridgeObjectRetain();
      sub_1BA5DCC20(v7);
      swift_bridgeObjectRetain();
      v8 = (_BYTE *)(v3 + 40);
      while (1)
      {
        if ((*v8 & 1) == 0)
        {
          v9 = *((_QWORD *)v8 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v9, 0);
          sub_1BA72C46C(v9, 0);
          if (v1)
            break;
        }
        v8 += 16;
        if (!--v6)
        {
          swift_bridgeObjectRelease_n();
          v10 = *(_QWORD *)(v2 + 16);
          if (v10)
            goto LABEL_19;
          goto LABEL_24;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = *(_QWORD *)(v2 + 16);
      if (!v10)
      {
LABEL_24:
        sub_1BA5DCC4C(v3);
        return;
      }
LABEL_19:
      swift_bridgeObjectRetain_n();
      v11 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v11 & 1) == 0)
        {
          v12 = *((_QWORD *)v11 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v12, 0);
          sub_1BA72C46C(v12, 0);
          if (v1)
            break;
        }
        v11 += 16;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  v5 = 0;
  while (1)
  {
    swift_retain();
    sub_1BAC35E00();
    if (v1)
      break;
    ++v5;
    swift_release();
    if (v4 == v5)
    {
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
}

void sub_1BAC51204()
{
  sub_1BAC36408();
}

void sub_1BAC51218()
{
  sub_1BAC50FD8();
}

void sub_1BAC5122C(uint64_t a1)
{
  sub_1BAC48EAC(a1);
}

void sub_1BAC5124C(uint64_t a1)
{
  sub_1BAC49D94(a1);
}

void sub_1BAC5126C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    if ((~v4 & 0xF000000000000007) != 0)
      sub_1BAC35E00();
    if ((~v3 & 0xF000000000000007) != 0)
      sub_1BAC35E00();
  }
}

void sub_1BAC512F4(uint64_t a1)
{
  sub_1BAC5126C(a1);
}

void sub_1BAC51308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 8);
  sub_1BABE39D4();
  if (!v1 && (~v2 & 0xF000000000000007) != 0)
    sub_1BABE39D4();
}

void sub_1BAC5135C()
{
  sub_1BAC3B330();
}

void sub_1BAC51370()
{
  sub_1BAC3EB80();
}

uint64_t sub_1BAC51384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 48) & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 16);
    v2 = *(_QWORD *)(v0 + 24);
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAC39E7C();
    return sub_1BA6C1F54(v1, v2, v3, v4, 0);
  }
  return result;
}

uint64_t sub_1BAC51434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
  {
    v1 = *(_QWORD *)v0;
    v2 = *(_QWORD *)(v0 + 8);
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAC39E7C();
    return sub_1BA6C1F54(v1, v2, v3, v4, 0);
  }
  return result;
}

void sub_1BAC514E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v1;
  swift_beginAccess();
  sub_1BABE39D4();
  if (!v2)
  {
    swift_beginAccess();
    v5 = v1[6];
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v6; ++i)
      {
        v8 = *(_QWORD *)(v5 + 8 * i + 32);
        sub_1BA7196DC(v8);
        sub_1BAC2F274();
        sub_1BA719340(v8);
      }
      swift_bridgeObjectRelease_n();
    }
    sub_1BABFCD44(a1, v1[9]);
    swift_beginAccess();
    v9 = v1[11];
    if (v9 >> 62 == 1)
    {
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      sub_1BA67D3F4(v3[11]);
      sub_1BA67D3F4(v10);
      swift_bridgeObjectRetain();
      sub_1BAC3520C(a1, v10, v11);
      sub_1BA6EEDB4(v10);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v9);
    }
    v12 = v3[13];
    if (v12)
    {
      swift_beginAccess();
      v13 = *(_QWORD *)(v12 + 72);
      if (v13)
      {
        swift_bridgeObjectRetain();
        sub_1BABEB4B0(a1, v13);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v14 = *(_QWORD *)(v12 + 88);
      swift_bridgeObjectRetain();
      sub_1BAC26724(a1, v14);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BAC51708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC51724(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1BABEBCF0);
}

uint64_t sub_1BAC51724(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain();
  a4(a1, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC51774(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = v1[6];
  v4 = v1[7];
  v6 = v1[8];
  swift_bridgeObjectRetain();
  sub_1BABF85C0(a1, v5);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_bridgeObjectRetain();
    sub_1BABF86EC(a1, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BABF4888(a1, v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAC5181C(unint64_t a1)
{
  uint64_t v1;

  sub_1BAC32068();
  if (!v1)
    sub_1BAC4055C(a1);
}

void sub_1BAC51860(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = type metadata accessor for FormatOption();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[6];
  v53 = v1[7];
  v9 = v1[8];
  v11 = v1[11];
  v10 = v1[12];
  swift_bridgeObjectRetain();
  sub_1BABEBCF0(a1, v8);
  v12 = v2;
  if (v2)
    goto LABEL_2;
  v39 = v5;
  v40 = v7;
  v13 = v11;
  v41 = v9;
  swift_bridgeObjectRelease();
  v14 = v53;
  if (v53)
  {
    swift_beginAccess();
    v15 = *(_QWORD *)(v14 + 56);
    swift_bridgeObjectRetain();
    v16 = a1;
    sub_1BABFC2C4(a1, v15);
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(v14 + 74) != 255)
    {
      v17 = *(unsigned __int16 *)(v14 + 72) | (*(unsigned __int8 *)(v14 + 74) << 16);
      v45 = *(_QWORD *)(v14 + 64);
      LOWORD(v46) = v17;
      BYTE2(v46) = BYTE2(v17);
      sub_1BAC3C914();
    }
  }
  else
  {
    v16 = a1;
  }
  v18 = v41;
  v19 = *(_QWORD *)(v41 + 16);
  v37 = v10;
  v38 = v11;
  if (v19)
  {
    v42 = v16;
    v53 = 0;
    swift_bridgeObjectRetain_n();
    v20 = (uint64_t *)(v18 + 48);
    while (1)
    {
      v43 = v19;
      v21 = *(v20 - 2);
      v22 = *(v20 - 1);
      v23 = *v20;
      v24 = v20[1];
      v26 = v20[2];
      v25 = v20[3];
      v28 = v20[4];
      v27 = v20[5];
      v45 = v21;
      v46 = v22;
      v47 = v23;
      v48 = v24;
      v49 = v26;
      v50 = v25;
      v51 = v28;
      v52 = v27;
      v44 = v27;
      sub_1BA76B724(v21, v22, v23, v24, v26, v25, v28);
      v29 = v53;
      sub_1BAC490F8();
      v53 = v29;
      if (v29)
        break;
      v20 += 8;
      sub_1BA76B698(v21, v22, v23, v24, v26, v25, v28);
      v19 = v43 - 1;
      if (v43 == 1)
      {
        swift_bridgeObjectRelease_n();
        v12 = v53;
        v16 = v42;
        v30 = v38;
        v31 = (uint64_t)v40;
        goto LABEL_13;
      }
    }
    sub_1BA76B698(v21, v22, v23, v24, v26, v25, v28);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v31 = (uint64_t)v40;
    v30 = v13;
LABEL_13:
    v32 = *(_QWORD *)(v30 + 16);
    if (!v32)
    {
LABEL_18:
      v35 = v37;
      swift_bridgeObjectRetain();
      sub_1BABF86EC(v16, v35);
LABEL_2:
      swift_bridgeObjectRelease();
      return;
    }
    v33 = v30 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    v34 = *(_QWORD *)(v39 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BA4C2DD8(v33, v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v45 = *(_QWORD *)(v31 + 16);
      swift_retain();
      sub_1BAC49F9C();
      if (v12)
        break;
      swift_release();
      sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v33 += v34;
      if (!--v32)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
    }
    swift_release();
    sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease_n();
  }
}

void sub_1BAC51BC8(uint64_t a1)
{
  sub_1BAC51860(a1);
}

void sub_1BAC51BDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = v1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v1[6];
  sub_1BABE39D4();
  v9 = v2;
  if (!v2)
  {
    v35 = v8;
    swift_beginAccess();
    v10 = v1[8];
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v11; ++i)
      {
        v13 = *(_QWORD *)(v10 + 8 * i + 32);
        v40 = v13;
        sub_1BA7196DC(v13);
        sub_1BAC2F274();
        sub_1BA719340(v13);
      }
      swift_bridgeObjectRelease_n();
    }
    v14 = (uint64_t)v35;
    swift_beginAccess();
    v15 = v1[9];
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v32 = v3;
      v33 = v6;
      v36 = a1;
      v39 = 0;
      swift_bridgeObjectRetain_n();
      v34 = v15;
      v17 = (uint64_t *)(v15 + 48);
      while (1)
      {
        v37 = v16;
        v18 = *(v17 - 2);
        v19 = *(v17 - 1);
        v21 = *v17;
        v20 = v17[1];
        v23 = v17[2];
        v22 = v17[3];
        v25 = v17[4];
        v24 = v17[5];
        v40 = v18;
        v41 = v19;
        v42 = v21;
        v43 = v20;
        v44 = v23;
        v45 = v22;
        v46 = v25;
        v47 = v24;
        v38 = v24;
        sub_1BA76B724(v18, v19, v21, v20, v23, v22, v25);
        v26 = v39;
        sub_1BAC490F8();
        v39 = v26;
        if (v26)
          break;
        v17 += 8;
        sub_1BA76B698(v18, v19, v21, v20, v23, v22, v25);
        v16 = v37 - 1;
        if (v37 == 1)
        {
          swift_bridgeObjectRelease_n();
          v9 = v39;
          v14 = (uint64_t)v35;
          v6 = v33;
          v3 = v32;
          goto LABEL_11;
        }
      }
      sub_1BA76B698(v18, v19, v21, v20, v23, v22, v25);
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      swift_beginAccess();
      v27 = v3[11];
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        v29 = v27 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        v30 = *(_QWORD *)(v6 + 72);
        v39 = v3[11];
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BA4C2DD8(v29, v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v48 = *(_QWORD *)(v14 + 16);
          swift_retain();
          sub_1BAC49F9C();
          if (v9)
            break;
          swift_release();
          sub_1BA4A2E80(v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v29 += v30;
          if (!--v28)
            goto LABEL_18;
        }
        swift_release();
        sub_1BA4A2E80(v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
LABEL_18:
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void sub_1BAC51F18()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;

  v2 = *(_QWORD *)v0;
  v3 = *(unsigned __int8 *)(v0 + 8);
  if ((*(_BYTE *)(v0 + 9) & 1) != 0)
  {
    if (v3 != 255)
      sub_1BAC52014();
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      v5 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v5 & 1) == 0)
        {
          v6 = *((_QWORD *)v5 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v6, 0);
          sub_1BA72C46C(v6, 0);
          if (v1)
            break;
        }
        v5 += 16;
        --v4;
      }
      while (v4);
      sub_1BA7AAE54(v2, v3, 0);
    }
  }
}

void sub_1BAC52014()
{
  __asm { BR              X10 }
}

void sub_1BAC52054()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;

  if (v1 >= 2)
  {
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      sub_1BA67035C(v1);
      v3 = (_BYTE *)(v1 + 40);
      do
      {
        if ((*v3 & 1) == 0)
        {
          v4 = *((_QWORD *)v3 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v4, 0);
          sub_1BA72C46C(v4, 0);
          if (v0)
            break;
        }
        v3 += 16;
        --v2;
      }
      while (v2);
      sub_1BA7AAE2C(v1, 0);
    }
  }
}

void sub_1BAC52294()
{
  sub_1BAC51F18();
}

void sub_1BAC522A8()
{
  sub_1BAC52014();
}

void sub_1BAC522BC()
{
  sub_1BAC3C914();
}

void sub_1BAC522D0(uint64_t a1)
{
  sub_1BAC499AC(a1);
}

void sub_1BAC522F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  v3 = *(unsigned __int8 *)(v1 + 34);
  v4 = *(unsigned __int16 *)(v1 + 32);
  sub_1BB5D2C38(a1);
  if (!v2 && (v4 | (v3 << 16)) >> 16 <= 0xFE)
    sub_1BAC3C914();
}

uint64_t sub_1BAC5236C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC2FF7C(a1, a2, a3, a4);
}

void sub_1BAC52380()
{
  sub_1BAC49E7C();
}

uint64_t sub_1BAC52394(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;

  result = swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    v14 = a1;
    v7 = (_OWORD *)(v5 + 56);
    while (1)
    {
      v8 = *((_QWORD *)v7 - 1);
      if (v8)
      {
        v9 = *((_QWORD *)v7 - 2);
        v15 = *v7;
        v10 = *(_QWORD **)(a1 + 56);
        swift_retain();
        swift_bridgeObjectRetain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1BB38ED20(0, v10[2] + 1, 1, v10);
        v12 = v10[2];
        v11 = v10[3];
        if (v12 >= v11 >> 1)
          v10 = sub_1BB38ED20((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
        v10[2] = v12 + 1;
        v13 = &v10[4 * v12];
        a1 = v14;
        v13[4] = v9;
        v13[5] = v8;
        *((_OWORD *)v13 + 3) = v15;
        *(_QWORD *)(v14 + 56) = v10;
      }
      else
      {
        swift_retain();
      }
      swift_retain();
      sub_1BAC46704();
      if (v2)
        break;
      v7 = (_OWORD *)((char *)v7 + 40);
      swift_release_n();
      swift_bridgeObjectRelease();
      if (!--v6)
        return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease_n();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAC5255C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v1;
  sub_1BAC30118();
  if (!v2)
  {
    swift_beginAccess();
    v5 = *(_QWORD *)(v4 + 24);
    swift_bridgeObjectRetain();
    sub_1BABEBCF0(a1, v5);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAC525E4(uint64_t a1)
{
  return sub_1BAC52394(a1);
}

uint64_t sub_1BAC52604(uint64_t a1, uint64_t a2)
{
  swift_retain();
  sub_1BAC44B58(a1, a2);
  return swift_release();
}

uint64_t sub_1BAC52654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC34D64(a1, a2, a3, a4);
}

void sub_1BAC52668(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v12 = *(_QWORD *)v2;
  sub_1BAC30118();
  if (!v3)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v2[*(int *)(a2 + 36)], v6);
    sub_1BA4D9CE8(0, &qword_1EF2B0E30);
    if (swift_dynamicCast())
    {
      v10 = *((_QWORD *)&v13 + 1);
      v11 = v14;
      __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, v10, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    }
    else
    {
      v14 = 0;
      v12 = 0u;
      v13 = 0u;
      sub_1BA65DB80((uint64_t)&v12, &qword_1EF2B0E38, &qword_1EF2B0E30);
    }
  }
}

void sub_1BAC527AC(uint64_t a1, uint64_t a2)
{
  sub_1BAC52668(a1, a2);
}

void sub_1BAC527C0()
{
  __asm { BR              X10 }
}

void sub_1BAC52808()
{
  sub_1BAC3D62C();
}

void sub_1BAC529A0()
{
  sub_1BAC527C0();
}

void sub_1BAC529B4()
{
  sub_1BAC3D62C();
}

uint64_t sub_1BAC529DC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  if (v2)
    return sub_1BAC2F9C4(result, v2);
  return result;
}

uint64_t sub_1BAC529F8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t result;

  result = a2();
  if (!v3)
    return a3(a1);
  return result;
}

void sub_1BAC52A4C()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC52A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    while (1)
    {
      swift_retain();
      sub_1BAC35E00();
      if (v1)
        break;
      ++v3;
      swift_release();
      if (v2 == v3)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1BAC52B78(uint64_t a1)
{
  sub_1BAC324DC(a1);
}

void sub_1BAC52B8C()
{
  sub_1BAC52A4C();
}

void sub_1BAC52BA0(uint64_t a1)
{
  sub_1BAC45158(a1);
}

void sub_1BAC52BB4()
{
  uint64_t v0;
  BOOL v1;

  if (*(_BYTE *)(v0 + 16))
    v1 = 1;
  else
    v1 = (*(_QWORD *)v0 & 0xF000000000000007) == 0xF000000000000007;
  if (!v1)
    sub_1BB5635E8();
}

void sub_1BAC52BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  sub_1BAC3D62C();
  if (!v1)
  {
    v4 = *(_QWORD *)(v2 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain_n();
      v5 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v5 & 1) == 0)
        {
          v6 = *((_QWORD *)v5 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v6, 0);
          sub_1BA72C46C(v6, 0);
        }
        v5 += 16;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease_n();
    }
    v7 = *(_QWORD *)(v3 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      v8 = (_BYTE *)(v3 + 40);
      do
      {
        if ((*v8 & 1) == 0)
        {
          v9 = *((_QWORD *)v8 - 1);
          swift_retain_n();
          sub_1BA9F22C4();
          sub_1BA72C46C(v9, 0);
          sub_1BA72C46C(v9, 0);
        }
        v8 += 16;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1BAC52D58()
{
  sub_1BAC3EB04();
}

void sub_1BAC52D6C()
{
  sub_1BAC52BF4();
}

void sub_1BAC52D80()
{
  _QWORD *v0;

  if ((~*v0 & 0xF000000000000007) != 0)
    sub_1BB5635E8();
}

void sub_1BAC52DB4()
{
  __asm { BR              X10 }
}

void sub_1BAC52DF8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if ((v0 & 1) != 0)
  {
    sub_1BA9680DC(v2, v1, v0);
    v3 = sub_1BA862600((uint64_t)&unk_1E724D9A8);
    sub_1BB3D7F90(v2, v1, v3, 0);
    swift_bridgeObjectRelease();
    sub_1BA968268(v2, v1, v0);
  }
}

void sub_1BAC52ED0()
{
  sub_1BAC52DB4();
}

uint64_t sub_1BAC52EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v2 = *(_QWORD *)v0;
    v1 = *(_QWORD *)(v0 + 8);
    sub_1BA69C808(*(_QWORD *)v0, v1, 1);
    v3 = sub_1BA862600((uint64_t)&unk_1E724DD08);
    sub_1BB3D7F90(v2, v1, v3, 0);
    swift_bridgeObjectRelease();
    return sub_1BA69C828(v2, v1, 1);
  }
  return result;
}

void sub_1BAC52F80(uint64_t a1)
{
  sub_1BAC3DC58(a1);
}

void sub_1BAC52FA0(uint64_t a1)
{
  sub_1BAC3DC58(a1);
}

void sub_1BAC52FC0(uint64_t a1)
{
  sub_1BAC3DC58(a1);
}

void sub_1BAC52FE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(unsigned __int8 *)(v1 + 32);
  sub_1BAC45158(a1);
  if (!v2)
  {
    if (v5)
    {
      sub_1BA69C808(v4, v3, 1);
      v6 = sub_1BA862600((uint64_t)&unk_1E724DF10);
      sub_1BB3D7F90(v4, v3, v6, 0);
      swift_bridgeObjectRelease();
      v7 = v4;
      v8 = v3;
      v9 = 1;
    }
    else
    {
      v7 = v4;
      v8 = v3;
      v9 = 0;
    }
    sub_1BA69C828(v7, v8, v9);
  }
}

uint64_t sub_1BAC530A4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  v3 = result;
  v4 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 8))
  {
    if (*(_BYTE *)(v1 + 8) != 1)
      return result;
    swift_bridgeObjectRetain();
    sub_1BAC2FA7C(v3, v4);
    v5 = v4;
    v6 = 1;
  }
  else
  {
    v7 = *(_QWORD *)(v4 + 16);
    if (!v7)
      return result;
    sub_1BA93DAE4(*(_QWORD *)v1, 0);
    swift_bridgeObjectRetain();
    v8 = (_BYTE *)(v4 + 40);
    do
    {
      if ((*v8 & 1) == 0)
      {
        v9 = *((_QWORD *)v8 - 1);
        swift_retain_n();
        sub_1BA9F22C4();
        sub_1BA72C46C(v9, 0);
        sub_1BA72C46C(v9, 0);
        if (v2)
          break;
      }
      v8 += 16;
      --v7;
    }
    while (v7);
    sub_1BA93DB08(v4, 0);
    v5 = v4;
    v6 = 0;
  }
  return sub_1BA93DB08(v5, v6);
}

void sub_1BAC531B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  char v13;

  v2 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *v0;
  sub_1BB5635E8();
  if (!v1)
  {
    v5 = type metadata accessor for FormatTextNodeLink();
    sub_1BA4C2DD8((uint64_t)v0 + *(int *)(v5 + 20), (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (!v4[24])
      {
        v8 = *(_QWORD *)v4;
        v7 = *((_QWORD *)v4 + 1);
        v9 = *((_QWORD *)v4 + 2);
        v12[0] = v8;
        v12[1] = v7;
        v12[2] = v9;
        v13 = 6;
        sub_1BA690C00(v8, v7, v9, 0);
        v10 = sub_1BB6B84D4(v12, &v13);
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v8, v7, v10, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5A7EF8(v8, v7, v9, 0);
      }
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
  }
}

unint64_t sub_1BAC53350(unint64_t result)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11[3];

  v3 = *v1;
  v4 = *v1 >> 62;
  if ((v4 - 2) >= 2)
  {
    if ((_DWORD)v4)
    {
      return sub_1BAC3C10C(result);
    }
    else if (!*(_BYTE *)(v3 + 40))
    {
      v5 = *(_QWORD *)(v3 + 24);
      v6 = *(_QWORD *)(v3 + 32);
      v11[0] = *(_QWORD *)(v3 + 16);
      v7 = v11[0];
      v11[1] = v5;
      v11[2] = v6;
      v10 = 1;
      sub_1BA739250(v3);
      sub_1BA690C00(v11[0], v5, v6, 0);
      v8 = sub_1BB6B84D4(v11, &v10);
      if (!v2)
      {
        v9 = v8;
        swift_bridgeObjectRetain();
        sub_1BB3D7F90(v7, v5, v9, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return sub_1BA6F5D74(v3);
    }
  }
  return result;
}

void sub_1BAC5345C()
{
  __asm { BR              X11 }
}

void sub_1BAC534A4()
{
  sub_1BB5635E8();
}

void sub_1BAC5371C(uint64_t a1)
{
  sub_1BAC478F0(a1);
}

void sub_1BAC5373C()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC5377C()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  swift_retain();
  ((void (*)(uint64_t))sub_1BAC5373C)(v1);
  if (!v0)
    ((void (*)(uint64_t))sub_1BAC5373C)(v1);
  swift_release();
  return swift_release();
}

void sub_1BAC538A0()
{
  uint64_t v0;

  sub_1BB5635E8();
  if (!v0)
    sub_1BAC5373C();
}

void sub_1BAC538E8()
{
  sub_1BAC5373C();
}

void sub_1BAC538FC()
{
  sub_1BAC5373C();
}

uint64_t sub_1BAC53924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC53944(a1, a2, a3, (uint64_t (*)(void))sub_1BAC5373C, (uint64_t (*)(uint64_t))sub_1BAC5373C);
}

uint64_t sub_1BAC53944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t result;

  result = a4();
  if (!v5)
    return a5(a1);
  return result;
}

void sub_1BAC53998(uint64_t a1)
{
  sub_1BAC52FE0(a1);
}

unint64_t sub_1BAC539AC(unint64_t a1)
{
  return sub_1BAC53350(a1);
}

uint64_t sub_1BAC539C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC539E4(a1, a2, a3, (uint64_t (*)(void))sub_1BB5635E8, sub_1BAC217D8);
}

uint64_t sub_1BAC539E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t result;

  v9 = *(_QWORD *)(v5 + 8);
  result = a4();
  if (!v6)
    return a5(a1, v9);
  return result;
}

void sub_1BAC53A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 24);
  sub_1BB5635E8();
  if (!v2)
  {
    if (v4)
      sub_1BAC3DC58(a1);
  }
}

void sub_1BAC53A7C()
{
  sub_1BAC531B0();
}

uint64_t sub_1BAC53A90(uint64_t a1)
{
  return sub_1BAC530A4(a1);
}

void sub_1BAC53AA4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24[16];
  __int128 v25[8];
  _BYTE v26[136];
  uint64_t v27;

  v4 = *v1;
  v5 = v1[1];
  v27 = v1[2];
  sub_1BA760F3C((uint64_t)(v1 + 3), (uint64_t)v26, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  v23 = v1[19];
  v22 = *((unsigned __int8 *)v1 + 240);
  v20 = v1[59];
  v21 = v1[24];
  v6 = v1[61];
  v19 = v1[60];
  v7 = v1[62];
  v8 = v1[63];
  v9 = v1[65];
  *(_QWORD *)&v25[0] = v4;
  *((_QWORD *)&v25[0] + 1) = v5;
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    v17 = v8;
    v18 = v7;
    if ((~v27 & 0xF000000000000007) != 0)
    {
      *(_QWORD *)&v25[0] = v27;
      sub_1BAC3D62C();
    }
    sub_1BA760F3C((uint64_t)v26, (uint64_t)v25, (uint64_t)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    if (sub_1BAB05F98((uint64_t)v25) != 1)
    {
      sub_1BA7439D4(v25, (uint64_t)v24);
      sub_1BAC3D3D8();
    }
    if (v23)
      sub_1BABE9768(a1, v23);
    if (v22 != 254)
    {
      v24[0] = v21;
      sub_1BAC35E00();
    }
    v10 = v19;
    if (v20)
    {
      v11 = *(_QWORD *)(v20 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain_n();
        v12 = (_BYTE *)(v20 + 40);
        do
        {
          if ((*v12 & 1) == 0)
          {
            v24[0] = *((_QWORD *)v12 - 1);
            v13 = v24[0];
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v13, 0);
            sub_1BA72C46C(v13, 0);
          }
          v12 += 16;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease_n();
        v10 = v19;
      }
    }
    if (v10 != 9)
    {
      if ((~v6 & 0xF000000000000007) != 0)
      {
        v24[0] = v6;
        sub_1BAC35E00();
      }
      else
      {
        sub_1BA6E8A90(v10, v6);
      }
    }
    if (v18 != 9)
    {
      if ((~v17 & 0xF000000000000007) != 0)
      {
        v24[0] = v17;
        sub_1BAC35E00();
      }
      else
      {
        sub_1BA6E8A90(v18, v17);
      }
    }
    if (v9)
    {
      v14 = *(_QWORD *)(v9 + 16);
      if (v14)
      {
        swift_bridgeObjectRetain_n();
        v15 = (_BYTE *)(v9 + 40);
        do
        {
          if ((*v15 & 1) == 0)
          {
            v24[0] = *((_QWORD *)v15 - 1);
            v16 = v24[0];
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v16, 0);
            sub_1BA72C46C(v16, 0);
          }
          v15 += 16;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void sub_1BAC53E10(uint64_t a1)
{
  sub_1BAC53AA4(a1);
}

void sub_1BAC53E24()
{
  sub_1BAC5345C();
}

void sub_1BAC53E38()
{
  sub_1BAC46688();
}

void sub_1BAC53E4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD v33[4];
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;

  v46 = a1;
  sub_1BA74E17C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent);
  MEMORY[0x1E0C80A78](v2);
  v41 = (char *)v33 - v3;
  sub_1BA74E17C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont);
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v33 - v5;
  sub_1BA74E17C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent);
  MEMORY[0x1E0C80A78](v6);
  v39 = (char *)v33 - v7;
  sub_1BA74E17C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent);
  MEMORY[0x1E0C80A78](v8);
  v38 = (char *)v33 - v9;
  sub_1BA74E17C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor);
  MEMORY[0x1E0C80A78](v10);
  v37 = (char *)v33 - v11;
  v12 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v33 - v17;
  v19 = *(unsigned __int8 *)(v1 + 48);
  if (v19 >> 6)
  {
    v20 = *(_QWORD *)v1;
    v21 = *(_QWORD *)(v1 + 8);
    v22 = *(_QWORD *)(v1 + 24);
    v36 = *(_QWORD *)(v1 + 16);
    v24 = *(_QWORD *)(v1 + 32);
    v23 = *(_QWORD *)(v1 + 40);
    if (v19 >> 6 == 1)
    {
      if ((v19 & 1) == 0)
      {
        v25 = v36;
        v26 = *(_QWORD *)(v36 + 32);
        v27 = *(_BYTE *)(v36 + 40);
        v28 = *(_BYTE *)(v36 + 41);
        v42 = *(_OWORD *)(v36 + 16);
        v43 = v26;
        v44 = v27;
        v45 = v28;
        v29 = v20;
        v30 = v21;
        sub_1BA709DE8(v20, v21, v36, v22, v24, v23, v19);
        sub_1BA7261E0(v25, v22, v24, v23, 0);
        sub_1BAC39E7C();
        sub_1BA6C1F54(v25, v22, v24, v23, 0);
        sub_1BA6C0C20(v29, v30, v25, v22, v24, v23, v19);
      }
    }
    else
    {
      v35 = v22;
      if (*(_QWORD *)(v20 + 16))
      {
        v33[1] = v21;
        v33[2] = v24;
        v33[3] = v23;
        v34 = v19;
        v31 = v20 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
        v33[0] = v20;
        swift_bridgeObjectRetain();
        sub_1BA4C2DD8(v31, (uint64_t)v18, type metadata accessor for FormatPropertyDefinition);
        sub_1BA4C2DD8((uint64_t)v18, (uint64_t)v14, type metadata accessor for FormatPropertyDefinition);
        v32 = (char *)&loc_1BAC541E8 + 4 * byte_1BB8A637B[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
    }
  }
}

void sub_1BAC54584(uint64_t a1)
{
  sub_1BAC53E4C(a1);
}

void sub_1BAC545C4(uint64_t a1)
{
  sub_1BAC53E4C(a1);
}

uint64_t sub_1BAC545D8()
{
  return sub_1BAC462CC();
}

uint64_t sub_1BAC545EC(uint64_t a1, uint64_t a2)
{
  return sub_1BAC39948(a1, a2);
}

void sub_1BAC54600()
{
  uint64_t v0;

  if ((~*(_QWORD *)(v0 + 8) & 0xF000000000000007) != 0)
    sub_1BAC35E00();
}

uint64_t sub_1BAC54634(uint64_t a1, uint64_t a2)
{
  return sub_1BAC34EF4(a1, a2);
}

uint64_t sub_1BAC54648(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;

  v3 = *(unsigned __int8 *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v6 = *(unsigned __int8 *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(unsigned __int8 *)(v1 + 72);
  v22 = *(_QWORD *)(v1 + 80);
  v23 = *(_QWORD *)(v1 + 56);
  v21 = *(_QWORD *)(v1 + 88);
  v24 = *(unsigned __int8 *)(v1 + 96);
  if (v3 != 255)
  {
    v19 = *(_QWORD *)(v1 + 40);
    v20 = *(_QWORD *)(v1 + 64);
    v9 = *(unsigned __int8 *)(v1 + 72);
    v11 = *(_QWORD *)(v1 + 8);
    v10 = *(_QWORD *)(v1 + 16);
    if ((v3 & 1) != 0)
    {
      sub_1BA796C58(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), v3);
      v12 = sub_1BA862600((uint64_t)&unk_1E724DD80);
      sub_1BB3D7F90(v11, v10, v12, 0);
      swift_bridgeObjectRelease();
      result = sub_1BA796C70(v11, v10, v3);
      v8 = v9;
      v4 = v19;
      v7 = v20;
      if (v2)
        return result;
    }
    else
    {
      result = sub_1BA796C70(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), v3);
      v8 = v9;
      v4 = v19;
      v7 = v20;
    }
  }
  if (v6 != 255)
  {
    if ((v6 & 1) != 0)
    {
      v13 = v4;
      sub_1BA796C58(v5, v4, v6);
      v14 = sub_1BA862600((uint64_t)&unk_1E724DDA8);
      sub_1BB3D7F90(v5, v13, v14, 0);
      swift_bridgeObjectRelease();
      result = sub_1BA796C70(v5, v13, v6);
      if (v2)
        return result;
    }
    else
    {
      result = sub_1BA796C70(v5, v4, v6);
    }
  }
  if (v8 != 255)
  {
    if ((v8 & 1) != 0)
    {
      sub_1BA796C58(v23, v7, v8);
      v15 = sub_1BA862600((uint64_t)&unk_1E724DDD0);
      sub_1BB3D7F90(v23, v7, v15, 0);
      swift_bridgeObjectRelease();
      result = sub_1BA796C70(v23, v7, v8);
      if (v2)
        return result;
    }
    else
    {
      result = sub_1BA796C70(v23, v7, v8);
    }
  }
  if (v24 != 255)
  {
    if ((v24 & 1) != 0)
    {
      sub_1BA796C58(v22, v21, v24);
      v18 = sub_1BA862600((uint64_t)&unk_1E724DDF8);
      sub_1BB3D7F90(v22, v21, v18, 0);
      swift_bridgeObjectRelease();
      v16 = v22;
      v17 = v21;
    }
    else
    {
      v17 = v21;
      v16 = v22;
    }
    return sub_1BA796C70(v16, v17, v24);
  }
  return result;
}

void sub_1BAC548E8(uint64_t a1)
{
  sub_1BAC47F48(a1);
}

void sub_1BAC54908()
{
  sub_1BAC4A348();
}

void sub_1BAC5491C(uint64_t a1)
{
  sub_1BAC49A60(a1);
}

void sub_1BAC5493C(uint64_t a1)
{
  sub_1BAC54BC0(a1);
}

uint64_t sub_1BAC54950(uint64_t a1)
{
  return sub_1BAC4A684(a1);
}

uint64_t sub_1BAC54964(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8[3];
  char v9;

  v4 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    if ((v5 & 1) == 0)
      return result;
    sub_1BA82ABBC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), 1);
    v6 = sub_1BA862600((uint64_t)&unk_1E724DE70);
    sub_1BB3D7F90(v4, v3, v6, 0);
    sub_1BA82ABF8(v4, v3, v5, 1);
  }
  else
  {
    v8[0] = *(_QWORD *)v1;
    v8[1] = v3;
    v8[2] = v5;
    v9 = 0;
    sub_1BA82ABBC(v4, v3, v5, 0);
    result = sub_1BB6B84D4(v8, &v9);
    if (v2)
      return result;
    v7 = result;
    swift_bridgeObjectRetain();
    sub_1BB3D7F90(v4, v3, v7, 0);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC54A90(uint64_t a1)
{
  return sub_1BAC54964(a1);
}

void sub_1BAC54AA4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(unsigned __int8 *)(v1 + 48);
  sub_1BAC32068();
  if (!v2)
  {
    sub_1BAC4D078();
    if (v4)
      sub_1BAC4055C(a1);
    if (v7)
    {
      sub_1BA69C808(v5, v6, 1);
      v8 = sub_1BA862600((uint64_t)&unk_1E724DF38);
      sub_1BB3D7F90(v5, v6, v8, 0);
      swift_bridgeObjectRelease();
      sub_1BA69C828(v5, v6, 1);
    }
  }
}

void sub_1BAC54BA0(unint64_t a1)
{
  sub_1BAC48358(a1);
}

void sub_1BAC54BC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(unsigned __int8 *)(v1 + 144);
  v8 = *(_QWORD *)(v1 + 152);
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    if (v4)
    {
      v13 = v7;
      v9 = *(_QWORD *)(v4 + 16);
      if (v9)
      {
        v12 = v8;
        swift_bridgeObjectRetain_n();
        v10 = (_BYTE *)(v4 + 40);
        do
        {
          if ((*v10 & 1) == 0)
          {
            v11 = *((_QWORD *)v10 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v11, 0);
            sub_1BA72C46C(v11, 0);
          }
          v10 += 16;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease_n();
        v8 = v12;
      }
      v7 = v13;
    }
    if ((~v5 & 0xF000000000000007) != 0)
      sub_1BAC359AC();
    if (v6)
      sub_1BABE9768(a1, v6);
    if (v7 != 254)
      sub_1BAC35E00();
    if ((~v8 & 0xF000000000000007) != 0)
      sub_1BAC35E00();
  }
}

void sub_1BAC54D68(unint64_t a1)
{
  sub_1BAC54AA4(a1);
}

uint64_t sub_1BAC54D7C(uint64_t a1)
{
  return sub_1BAC54648(a1);
}

void sub_1BAC54D90(uint64_t a1)
{
  sub_1BAC476E4(a1);
}

void sub_1BAC54DB0(uint64_t a1)
{
  sub_1BAC49818(a1);
}

void sub_1BAC54DD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = *(unsigned __int8 *)(v1 + 136);
  v7 = *(_QWORD *)(v1 + 144);
  sub_1BB5D2C38(a1);
  if (!v2)
  {
    if ((~v5 & 0xF000000000000007) != 0)
      sub_1BAC359AC();
    if (v4)
      sub_1BABE9768(a1, v4);
    if (v6 != 254)
      sub_1BAC35E00();
    if (v7)
    {
      v8 = *(_QWORD *)(v7 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain_n();
        v9 = (_BYTE *)(v7 + 40);
        do
        {
          if ((*v9 & 1) == 0)
          {
            v10 = *((_QWORD *)v9 - 1);
            swift_retain_n();
            sub_1BA9F22C4();
            sub_1BA72C46C(v10, 0);
            sub_1BA72C46C(v10, 0);
          }
          v9 += 16;
          --v8;
        }
        while (v8);
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void sub_1BAC54F28(uint64_t a1)
{
  sub_1BAC54DD0(a1);
}

uint64_t sub_1BAC54F3C(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *v1;
  if ((unint64_t)*v1 >> 62 == 1)
  {
    v3 = result;
    v4 = *(_QWORD *)(v2 + 16);
    v5 = *(_QWORD *)(v2 + 24);
    sub_1BA67D3F4(v4);
    swift_bridgeObjectRetain();
    sub_1BAC3520C(v3, v4, v5);
    sub_1BA6EEDB4(v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAC54FB4()
{
  sub_1BAC527C0();
}

void sub_1BAC54FEC()
{
  sub_1BAC3ED3C();
}

uint64_t sub_1BAC55000(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13[3];

  v3 = result;
  v4 = *v1;
  v5 = (unint64_t)*v1 >> 62;
  if ((_DWORD)v5)
  {
    if ((_DWORD)v5 != 1)
    {
      v7 = *(_QWORD *)(v4 + 16);
      v6 = *(_QWORD *)(v4 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BAC35500(v3, v7, v6);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else if ((*(_BYTE *)(v4 + 40) & 1) != 0)
  {
    v9 = *(_QWORD *)(v4 + 24);
    v8 = *(_QWORD *)(v4 + 32);
    v10 = *(_QWORD *)(v4 + 16);
    v13[0] = v10;
    v13[1] = v9;
    v13[2] = v8;
    v12 = 6;
    sub_1BAC68C24(v10, v9, v8, 1);
    result = sub_1BB6B84D4(v13, &v12);
    if (!v2)
    {
      v11 = result;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v10, v9, v11, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1BAC55118(uint64_t a1)
{
  sub_1BAC47C5C(a1);
}

uint64_t sub_1BAC55138(uint64_t a1)
{
  return sub_1BAC55000(a1);
}

uint64_t sub_1BAC5514C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 96);
  swift_bridgeObjectRetain();
  sub_1BABEBAE0(a1, v4);
  return swift_bridgeObjectRelease();
}

void sub_1BAC551C0()
{
  sub_1BA75DD88();
}

void sub_1BAC55208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA75DD88();
  if (!v5)
  {
    v10 = *(_QWORD *)(a4 + 16);
    if (v10)
    {
      v17 = a2;
      v16 = a5;
      swift_bridgeObjectRetain();
      v11 = (_QWORD *)(a4 + 56);
      do
      {
        v12 = *(v11 - 3);
        v13 = *(v11 - 2);
        v14 = *((_BYTE *)v11 - 8);
        v15 = *v11;
        sub_1BA73B1CC(v12, v13, v14);
        swift_retain_n();
        sub_1BAC5D4B8(a1, v17, v15);
        v11 += 4;
        swift_release();
        sub_1BA73B1B8(v12, v13, v14);
        swift_release();
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      a5 = v16;
      a2 = v17;
    }
    swift_retain();
    sub_1BAC5D4B8(a1, a2, a5);
    swift_release();
  }
}

void sub_1BAC55380(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BA75DD88();
  if (!v4)
  {
    sub_1BA7CCCE8(a1, a2, a4);
    sub_1BA6466EC(a1, (uint64_t)a2);
  }
}

void sub_1BAC55414(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;

  v5 = *a2;
  v6 = *((_BYTE *)a2 + 8);
  v7 = *((_BYTE *)a2 + 9);
  v9 = a2[2];
  v8 = a2[3];
  v10 = a2[4];
  v11 = a2[5];
  v13 = a2[6];
  v12 = a2[7];
  v14 = a2[8];
  v15 = a2[9];
  v16 = a2[10];
  v17 = *(_QWORD *)(*(_QWORD *)v3 + 32);
  v18 = *(_BYTE *)(*(_QWORD *)v3 + 40);
  v19 = *(_BYTE *)(*(_QWORD *)v3 + 41);
  v45 = *(_OWORD *)(*(_QWORD *)v3 + 16);
  v46 = v17;
  v47 = v18;
  v48 = v19;
  v33 = v5;
  v26 = v6;
  v34 = v6;
  v35 = v7;
  v36 = v9;
  v37 = v8;
  v38 = v10;
  v39 = v11;
  v40 = v13;
  v41 = v12;
  v29 = v14;
  v30 = v12;
  v42 = v14;
  v43 = v15;
  v27 = v16;
  v28 = v15;
  v44 = v16;
  v49 = a1;
  sub_1BA75DD88();
  if (!v4)
  {
    v20 = *(_QWORD *)(v32 + 8);
    v33 = v5;
    v34 = v26;
    v35 = v7;
    v36 = v9;
    v37 = v8;
    v38 = v10;
    v39 = v11;
    v40 = v13;
    v41 = v30;
    v42 = v29;
    v43 = v28;
    v44 = v27;
    v24 = a3[3];
    v25 = a3[2];
    v23 = a3[4];
    v21 = type metadata accessor for FormatCommandValue.CaseValue(0, v25, v24, v23);
    sub_1BB850F98(v49, (uint64_t)&v33, v20, v21, (uint64_t)&off_1E729D110);
    v33 = v5;
    v34 = v26;
    v35 = v7;
    v36 = v9;
    v37 = v8;
    v38 = v10;
    v39 = v11;
    v40 = v13;
    v41 = v30;
    v42 = v29;
    v43 = v28;
    v44 = v27;
    v22 = type metadata accessor for FormatCommandValue.DefaultValue(0, v25, v24, v23);
    sub_1BAC55A40(v49, (uint64_t)&v33, v22);
  }
}

uint64_t sub_1BAC555CC(uint64_t result, uint64_t a2)
{
  _QWORD *v2;
  __int128 v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _OWORD v10[5];
  uint64_t v11;

  v3 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v3;
  v10[4] = *(_OWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v4;
  v5 = (_QWORD *)*v2;
  if (*v2 >> 62 == 1)
  {
    v6 = result;
    v7 = v5[2];
    v8 = v5[3];
    v9 = v5[4];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA775C3C(v6, (uint64_t)v10, v7, v8, v9);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAC55694(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v4 = v3;
  v5 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v5;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v6;
  if ((*(_QWORD *)v2 & 0x8000000000000000) != 0)
  {
    v7 = result;
    v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 16) + 24);
    swift_retain();
    sub_1BB568510(v7, (uint64_t)v9, v8);
    if (!v4)
      sub_1BAC55694(v7, v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAC55744(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v7 = *v4;
  v8 = *a2;
  v9 = *((_BYTE *)a2 + 8);
  v10 = *((_BYTE *)a2 + 9);
  v11 = a2[2];
  v12 = a2[3];
  v13 = a2[5];
  v14 = a2[6];
  v15 = a2[7];
  v16 = a2[8];
  v17 = a2[9];
  v18 = a2[10];
  v19 = v4[3];
  v33 = a2[4];
  v34 = *a2;
  v26 = v9;
  v35 = v9;
  v36 = v10;
  v37 = v11;
  v38 = v12;
  v39 = v33;
  v40 = v13;
  v31 = v14;
  v32 = v13;
  v41 = v14;
  v42 = v15;
  v29 = v16;
  v30 = v15;
  v43 = v16;
  v44 = v17;
  v27 = v18;
  v28 = v17;
  v45 = v18;
  v20 = *(_QWORD *)(v7 + 80);
  v21 = type metadata accessor for FormatCommandActionValue.CaseValue(0, v20, a3, a4);
  v46 = a1;
  result = sub_1BB850F98(a1, (uint64_t)&v34, v19, v21, (uint64_t)&off_1E729D130);
  if (!v5)
  {
    v34 = v8;
    v35 = v26;
    v36 = v10;
    v37 = v11;
    v38 = v12;
    v39 = v33;
    v40 = v32;
    v41 = v31;
    v42 = v30;
    v43 = v29;
    v44 = v28;
    v45 = v27;
    v25 = type metadata accessor for FormatCommandActionValue.DefaultValue(0, v20, v23, v24);
    return sub_1BAC55A40(v46, (uint64_t)&v34, v25);
  }
  return result;
}

uint64_t sub_1BAC55894(uint64_t a1, uint64_t a2)
{
  return sub_1BAC55694(a1, a2);
}

void sub_1BAC558A8()
{
  sub_1BA6FAF80();
}

void sub_1BAC558C8()
{
  sub_1BA6FB120();
}

void sub_1BAC558DC(uint64_t a1, uint64_t a2)
{
  sub_1BA74F0D4(a1, a2);
}

uint64_t sub_1BAC558FC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v6 = *((_BYTE *)a2 + 8);
  v7 = *((_BYTE *)a2 + 9);
  v8 = a2[10];
  v9 = *v4;
  v14 = *a2;
  v15 = v6;
  v16 = v7;
  v10 = *((_OWORD *)a2 + 2);
  v17 = *((_OWORD *)a2 + 1);
  v18 = v10;
  v11 = *((_OWORD *)a2 + 4);
  v19 = *((_OWORD *)a2 + 3);
  v20 = v11;
  v21 = v8;
  v12 = type metadata accessor for FormatEquationToken(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  return sub_1BB850F98(a1, (uint64_t)&v14, v9, v12, (uint64_t)&off_1E729C230);
}

uint64_t sub_1BAC55994(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v6 = *((_BYTE *)a2 + 8);
  v7 = *((_BYTE *)a2 + 9);
  v8 = a2[10];
  v9 = *v4;
  v14 = *a2;
  v15 = v6;
  v16 = v7;
  v10 = *((_OWORD *)a2 + 2);
  v17 = *((_OWORD *)a2 + 1);
  v18 = v10;
  v11 = *((_OWORD *)a2 + 4);
  v19 = *((_OWORD *)a2 + 3);
  v20 = v11;
  v21 = v8;
  v12 = type metadata accessor for FormatSwitchListValue.CaseValue(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  return sub_1BB850F98(a1, (uint64_t)&v14, v9, v12, (uint64_t)&off_1E729D0B0);
}

void sub_1BAC55A2C()
{
  sub_1BA6FA7EC();
}

uint64_t sub_1BAC55A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a1;
  v3 = *(_QWORD *)(a3 + 16);
  v4 = MEMORY[0x1E0C80A78](a1);
  v7 = *v6;
  v8 = *((_BYTE *)v6 + 8);
  v9 = *((_BYTE *)v6 + 9);
  v10 = v6[2];
  v11 = v6[3];
  v13 = v6[4];
  v12 = v6[5];
  v25 = v6[6];
  v26 = v12;
  v14 = v6[7];
  v23 = v6[8];
  v24 = v14;
  v22 = v6[9];
  v21 = v6[10];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16, v3, v4);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (swift_dynamicCast())
  {
    v17 = *((_QWORD *)&v40 + 1);
    v18 = v41;
    __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
    v27 = v7;
    v28 = v8;
    v29 = v9;
    v30 = v10;
    v31 = v11;
    v32 = v13;
    v33 = v26;
    v34 = v25;
    v35 = v24;
    v36 = v23;
    v37 = v22;
    v38 = v21;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v18 + 8))(v42, &v27, v17, v18);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  }
  else
  {
    v41 = 0;
    v39 = 0u;
    v40 = 0u;
    return sub_1BA65DB80((uint64_t)&v39, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
}

uint64_t sub_1BAC55BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC55A40(a1, a2, a3);
}

uint64_t sub_1BAC55C04(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC63448(a1, a2, (uint64_t (*)(uint64_t, uint64_t *))sub_1BA6F9BF4);
}

uint64_t sub_1BAC55C20(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  _BYTE v13[144];
  uint64_t v14[14];
  unsigned __int8 v15;
  _OWORD v16[5];
  uint64_t v17;

  v4 = *(_OWORD *)(a2 + 48);
  v16[2] = *(_OWORD *)(a2 + 32);
  v16[3] = v4;
  v16[4] = *(_OWORD *)(a2 + 64);
  v17 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v6 = *v2;
  v7 = (unint64_t)*v2 >> 62;
  v16[0] = *(_OWORD *)a2;
  v16[1] = v5;
  if ((_DWORD)v7)
  {
    if ((_DWORD)v7 == 1)
    {
      swift_retain();
      sub_1BA7F0998();
    }
    else
    {
      v9 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v9 + 16);
      swift_retain();
      sub_1BA7C5A8C(a1, (uint64_t)v16, v10);
      if (!v3)
      {
        v11 = MEMORY[0x1E0DEB940];
        sub_1BA760F3C(v9 + 24, (uint64_t)v13, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
        sub_1BA760F3C((uint64_t)v13, (uint64_t)v14, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v11, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
        if (sub_1BA896370(v14) != 1 && (v15 & 1) == 0)
          sub_1BA825F5C(v14[10], v14[11], v14[12], v14[13], v15);
      }
    }
  }
  else
  {
    swift_retain();
    sub_1BAC55D70();
  }
  return swift_release();
}

void sub_1BAC55D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);
  _BYTE v4[144];
  uint64_t v5[14];
  unsigned __int8 v6;

  if (*(_BYTE *)(v0 + 64) != 4 || v1 == 0)
  {
    v3 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C(v0 + 120, (uint64_t)v4, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v4, (uint64_t)v5, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v3, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    if (sub_1BA896370(v5) != 1 && (v6 & 1) == 0)
      sub_1BA825F5C(v5[10], v5[11], v5[12], v5[13], v6);
  }
}

uint64_t sub_1BAC55E34(uint64_t a1, uint64_t a2)
{
  return sub_1BAC55C20(a1, a2);
}

uint64_t sub_1BAC55E48()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 112) & 1) == 0)
    return sub_1BA825F5C(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 112));
  return result;
}

void sub_1BAC55E7C()
{
  sub_1BAC55D70();
}

uint64_t sub_1BAC55E9C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t result;
  uint64_t (*v8)(void);
  _BYTE v9[10];
  __int128 v10;
  _OWORD v11[5];
  uint64_t v12;

  v4 = *v2;
  v5 = *(_OWORD *)(a2 + 48);
  v11[2] = *(_OWORD *)(a2 + 32);
  v11[3] = v5;
  v11[4] = *(_OWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v6;
  result = sub_1BA7C5A8C(a1, (uint64_t)v11, *(_QWORD *)(v4 + 16));
  if (!v3)
  {
    v8 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C(v4 + 24, (uint64_t)v9, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v9, (uint64_t)&v10, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    result = sub_1BA896370((uint64_t *)&v10);
    if ((_DWORD)result != 1)
      return sub_1BAC55E48();
  }
  return result;
}

uint64_t sub_1BAC55FAC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;

  v4 = v3;
  v47 = a1;
  v66 = a3;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = sub_1BB873A2C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v34 - v12;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v34 - v16;
  v46 = *a2;
  v49 = *((unsigned __int8 *)a2 + 8);
  v45 = *((unsigned __int8 *)a2 + 9);
  v44 = a2[2];
  v43 = a2[3];
  v42 = a2[4];
  v41 = a2[5];
  v40 = a2[6];
  v39 = a2[7];
  v38 = a2[8];
  v18 = a2[9];
  v19 = a2[10];
  v37 = v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16);
  v48 = v4;
  v20((char *)&v34 - v16, v4, v7, v15);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  v22 = v21(v17, 1, v6);
  v36 = v19;
  if (v22 == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
LABEL_7:
    v65 = 0;
    v63 = 0u;
    v64 = 0u;
    v24 = v48;
    goto LABEL_8;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (!swift_dynamicCast())
    goto LABEL_7;
  v23 = *((_QWORD *)&v64 + 1);
  v24 = v48;
  if (!*((_QWORD *)&v64 + 1))
  {
LABEL_8:
    sub_1BA65DB80((uint64_t)&v63, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
    goto LABEL_9;
  }
  v35 = v65;
  __swift_project_boxed_opaque_existential_1(&v63, *((uint64_t *)&v64 + 1));
  v51 = v46;
  v52 = v49;
  v53 = v45;
  v54 = v44;
  v55 = v43;
  v56 = v42;
  v57 = v41;
  v58 = v40;
  v59 = v39;
  v60 = v38;
  v61 = v37;
  v62 = v36;
  v25 = v50;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v35 + 8))(v47, &v51, v23);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
  v50 = v25;
  if (v25)
    return result;
  v24 = v48;
LABEL_9:
  ((void (*)(char *, uint64_t, uint64_t))v20)(v13, v24 + *(int *)(v66 + 36), v7);
  if (v21(v13, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
LABEL_15:
    v65 = 0;
    v63 = 0u;
    v64 = 0u;
    v28 = v49;
    goto LABEL_16;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (!swift_dynamicCast())
    goto LABEL_15;
  v27 = *((_QWORD *)&v64 + 1);
  v28 = v49;
  if (!*((_QWORD *)&v64 + 1))
  {
LABEL_16:
    sub_1BA65DB80((uint64_t)&v63, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
    v31 = v47;
    goto LABEL_17;
  }
  v35 = v65;
  __swift_project_boxed_opaque_existential_1(&v63, *((uint64_t *)&v64 + 1));
  v51 = v46;
  v52 = v28;
  v53 = v45;
  v54 = v44;
  v55 = v43;
  v56 = v42;
  v57 = v41;
  v58 = v40;
  v59 = v39;
  v60 = v38;
  v61 = v37;
  v62 = v36;
  v29 = v47;
  v30 = v50;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v35 + 8))(v47, &v51, v27);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
  v50 = v30;
  if (v30)
    return result;
  v31 = v29;
  v28 = v49;
  v24 = v48;
LABEL_17:
  ((void (*)(char *, uint64_t, uint64_t))v20)(v10, v24 + *(int *)(v66 + 40), v7);
  if (v21(v10, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_22:
    v65 = 0;
    v63 = 0u;
    v64 = 0u;
    return sub_1BA65DB80((uint64_t)&v63, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (!swift_dynamicCast())
    goto LABEL_22;
  v32 = *((_QWORD *)&v64 + 1);
  if (*((_QWORD *)&v64 + 1))
  {
    v33 = v65;
    __swift_project_boxed_opaque_existential_1(&v63, *((uint64_t *)&v64 + 1));
    v51 = v46;
    v52 = v28;
    v53 = v45;
    v54 = v44;
    v55 = v43;
    v56 = v42;
    v57 = v41;
    v58 = v40;
    v59 = v39;
    v60 = v38;
    v61 = v37;
    v62 = v36;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v33 + 8))(v31, &v51, v32, v33);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
  }
  return sub_1BA65DB80((uint64_t)&v63, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
}

void sub_1BAC56580()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAC565B4(uint64_t a1)
{
  return nullsub_1(a1);
}

void sub_1BAC565C8(uint64_t a1)
{
  nullsub_1(a1);
  JUMPOUT(0x1BAC565B8);
}

uint64_t sub_1BAC565EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1BAC55FAC(a1, a2, a3);
}

void sub_1BAC56600()
{
  sub_1BA7F0998();
}

uint64_t sub_1BAC56620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t *i;
  uint64_t v12;
  _OWORD v13[5];
  uint64_t v14;

  v5 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v5;
  v13[4] = *(_OWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v6;
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 72);
  if (!v7
    || (swift_bridgeObjectRetain(), sub_1BA7C5A8C(a1, (uint64_t)v13, v7), result = swift_bridgeObjectRelease(), !v3))
  {
    result = swift_beginAccess();
    v9 = *(_QWORD *)(v2 + 88);
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (i = (uint64_t *)(v9 + 72); ; i += 7)
      {
        v12 = *i;
        if (*i)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA7C5A8C(a1, (uint64_t)v13, v12);
          if (v3)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (!--v10)
          return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1BAC56784(uint64_t a1, uint64_t a2)
{
  return sub_1BAC56620(a1, a2);
}

uint64_t sub_1BAC567A4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  _OWORD v6[5];
  uint64_t v7;

  v3 = *(_OWORD *)(a2 + 48);
  v6[2] = *(_OWORD *)(a2 + 32);
  v6[3] = v3;
  v6[4] = *(_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v6[0] = *(_OWORD *)a2;
  v6[1] = v4;
  v5 = *(_QWORD *)(v2 + 40);
  if (v5)
    return sub_1BA7C5A8C(result, (uint64_t)v6, v5);
  return result;
}

void sub_1BAC567EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a6 && (a4 & 0xF000000000000007) != 0xF000000000000007)
    sub_1BA645F4C();
}

uint64_t sub_1BAC56828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC61890(a1, a2, a3);
}

void sub_1BAC5683C()
{
  __asm { BR              X23 }
}

void sub_1BAC568B8()
{
  sub_1BA7E8890();
  sub_1BAC568A0();
}

void sub_1BAC568FC()
{
  sub_1BA7F1480();
  sub_1BAC568A0();
}

void sub_1BAC56934()
{
  sub_1BAC5A8D8();
  sub_1BAC568A0();
}

uint64_t sub_1BAC56978(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v7 = *a2;
  v8 = *((_BYTE *)a2 + 9);
  v9 = a2[3];
  v10 = a2[4];
  v11 = a2[5];
  v12 = a2[6];
  v13 = a2[7];
  v14 = a2[8];
  v15 = a2[9];
  v16 = a2[10];
  v17 = *v4;
  v18 = a2[2];
  v25 = *((_BYTE *)a2 + 8);
  v35 = v25;
  v36 = v8;
  v37 = v18;
  v38 = v9;
  v32 = v10;
  v33 = v9;
  v39 = v10;
  v40 = v11;
  v30 = v12;
  v31 = v11;
  v41 = v12;
  v42 = v13;
  v28 = v14;
  v29 = v13;
  v43 = v14;
  v44 = v15;
  v26 = v16;
  v27 = v15;
  v45 = v16;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(a3 + 24);
  v21 = type metadata accessor for FormatSwitchValue.CaseValue(0, v19, v20, a4);
  v46 = a1;
  result = sub_1BB850F98(a1, (uint64_t)&v34, v17, v21, (uint64_t)&off_1E729D0A0);
  if (!v5)
  {
    v34 = v7;
    v35 = v25;
    v36 = v8;
    v37 = v18;
    v38 = v33;
    v39 = v32;
    v40 = v31;
    v41 = v30;
    v42 = v29;
    v43 = v28;
    v44 = v27;
    v45 = v26;
    v24 = type metadata accessor for FormatSwitchValue.DefaultValue(0, v19, v20, v23);
    return sub_1BAC55A40(v46, (uint64_t)&v34, v24);
  }
  return result;
}

uint64_t sub_1BAC56AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[4];
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t);
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;

  v42 = a1;
  v35 = a3;
  v3 = *(_QWORD *)(a3 + 16);
  MEMORY[0x1E0C80A78](a1);
  v36 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = *v7;
  v9 = *((unsigned __int8 *)v7 + 8);
  v41 = *((unsigned __int8 *)v7 + 9);
  v44 = v7[2];
  v39 = v7[3];
  v40 = v7[4];
  v43 = v7[5];
  v10 = v7[7];
  v38 = v7[6];
  v11 = v7[8];
  v12 = v7[9];
  v13 = v7[10];
  v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16);
  v37 = v17;
  v34 = v15;
  ((void (*)(_BYTE *, uint64_t, uint64_t, double))v15)(&v27[-v16], v17, v3, v6);
  v18 = sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (swift_dynamicCast())
  {
    v29 = v18;
    v19 = *((_QWORD *)&v58 + 1);
    v33 = v59;
    __swift_project_boxed_opaque_existential_1(&v57, *((uint64_t *)&v58 + 1));
    v30 = v8;
    v45 = v8;
    v28 = v9;
    v46 = v9;
    v47 = v41;
    v48 = v44;
    v49 = v39;
    v50 = v40;
    v51 = v43;
    v52 = v38;
    v53 = v10;
    v54 = v11;
    v55 = v12;
    v56 = v13;
    v20 = v60;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v33 + 8))(v42, &v45, v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
    if (v20)
      return result;
    v31 = v13;
    v32 = v11;
    v33 = v10;
    v23 = v43;
    v22 = v44;
    v60 = 0;
    v8 = v30;
    LOBYTE(v9) = v28;
  }
  else
  {
    v31 = v13;
    v32 = v11;
    v33 = v10;
    v23 = v43;
    v22 = v44;
    v59 = 0;
    v57 = 0u;
    v58 = 0u;
    sub_1BA65DB80((uint64_t)&v57, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
  v34(v36, v37 + *(int *)(v35 + 36), v3);
  if (swift_dynamicCast())
  {
    v24 = v9;
    v25 = *((_QWORD *)&v58 + 1);
    v26 = v59;
    __swift_project_boxed_opaque_existential_1(&v57, *((uint64_t *)&v58 + 1));
    v45 = v8;
    v46 = v24;
    v47 = v41;
    v48 = v22;
    v49 = v39;
    v50 = v40;
    v51 = v23;
    v52 = v38;
    v53 = v33;
    v54 = v32;
    v55 = v12;
    v56 = v31;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v26 + 8))(v42, &v45, v25, v26);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
  }
  else
  {
    v59 = 0;
    v57 = 0u;
    v58 = 0u;
    return sub_1BA65DB80((uint64_t)&v57, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
}

void sub_1BAC56E7C(unint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *((_BYTE *)a2 + 9);
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v12 = a2[6];
  v11 = a2[7];
  v13 = a2[9];
  v14 = a2[10];
  v18 = a2[8];
  v32 = *v2;
  v20 = v4;
  v15 = v5;
  v21 = v5;
  v22 = v6;
  v23 = v7;
  v24 = v8;
  v25 = v9;
  v26 = v10;
  v27 = v12;
  v28 = v11;
  v29 = v18;
  v30 = v13;
  v16 = v14;
  v17 = v13;
  v31 = v14;
  sub_1BA73B1E0();
  if (!v3)
  {
    v20 = v4;
    v21 = v15;
    v22 = v6;
    v23 = v7;
    v24 = v8;
    v25 = v9;
    v26 = v10;
    v27 = v12;
    v28 = v11;
    v29 = v18;
    v30 = v17;
    v31 = v16;
    sub_1BA726664(a1, (uint64_t)&v20);
  }
}

uint64_t sub_1BAC56F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;

  v55 = a1;
  v32 = a3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0C80A78](a1);
  v9 = *v8;
  v10 = *((unsigned __int8 *)v8 + 8);
  v11 = *((unsigned __int8 *)v8 + 9);
  v12 = v8[2];
  v33 = v8[3];
  v34 = v8[4];
  v13 = v8[5];
  v38 = v8[6];
  v39 = v13;
  v14 = v8[7];
  v36 = v8[8];
  v37 = v14;
  v15 = v8[10];
  v35 = v8[9];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v5, v6);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (swift_dynamicCast())
  {
    v30 = v3;
    v31 = v4;
    v18 = *((_QWORD *)&v53 + 1);
    v17 = v54;
    __swift_project_boxed_opaque_existential_1(&v52, *((uint64_t *)&v53 + 1));
    v26 = v9;
    v40 = v9;
    v29 = v10;
    v41 = v10;
    v28 = v11;
    v42 = v11;
    v27 = v12;
    v43 = v12;
    v44 = v33;
    v45 = v34;
    v46 = v39;
    v47 = v38;
    v48 = v37;
    v49 = v36;
    v50 = v35;
    v51 = v15;
    v19 = v31;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v17 + 8))(v55, &v40, v18, v17);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
    if (v19)
      return result;
    LOBYTE(v10) = v29;
    v31 = v15;
    v21 = v33;
    LOBYTE(v11) = v28;
    v9 = v26;
    v12 = v27;
  }
  else
  {
    v31 = v15;
    v21 = v33;
    v54 = 0;
    v52 = 0u;
    v53 = 0u;
    sub_1BA65DB80((uint64_t)&v52, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
  v22 = v32;
  v23 = sub_1BA647A38(v32);
  v40 = v9;
  v41 = v10;
  v42 = v11;
  v43 = v12;
  v44 = v21;
  v45 = v34;
  v46 = v39;
  v47 = v38;
  v48 = v37;
  v49 = v36;
  v50 = v35;
  v51 = v31;
  v25 = type metadata accessor for FormatSelectorValueSelector(0, v5, *(_QWORD *)(v22 + 24), v24);
  swift_bridgeObjectRetain();
  sub_1BB850F98(v55, (uint64_t)&v40, v23, v25, (uint64_t)&off_1E729CA20);
  return swift_bridgeObjectRelease();
}

void sub_1BAC57240()
{
  sub_1BA73B1E0();
}

uint64_t sub_1BAC57254(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v32 = a1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *a2;
  v9 = *((unsigned __int8 *)a2 + 8);
  v29 = *((unsigned __int8 *)a2 + 9);
  v30 = v9;
  v28 = a2[2];
  v27 = a2[3];
  v26 = a2[4];
  v25 = a2[5];
  v24 = a2[6];
  v23 = a2[7];
  v10 = a2[9];
  v22 = a2[8];
  v11 = a2[10];
  swift_beginAccess();
  v12 = *(_QWORD *)(v2 + 32);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v19 = v2;
    v20 = v6;
    swift_bridgeObjectRetain_n();
    v21 = v12;
    v14 = v12 + 48;
    while (1)
    {
      v33 = *(_QWORD *)(v14 - 16);
      v34 = v31;
      v35 = v30;
      v36 = v29;
      v37 = v28;
      v38 = v27;
      v39 = v26;
      v40 = v25;
      v41 = v24;
      v42 = v23;
      v43 = v22;
      v44 = v10;
      v45 = v11;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA6F84BC();
      if (v3)
        break;
      v14 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v13)
      {
        swift_bridgeObjectRelease_n();
        v6 = v20;
        v2 = v19;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    result = *(_QWORD *)(v2 + 48);
    v16 = *(_QWORD *)(result + 16);
    if (v16)
    {
      v17 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v21 = *(_QWORD *)(v6 + 72);
      v20 = result;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v17, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v46 = *((_QWORD *)v8 + 2);
        v34 = v31;
        v35 = v30;
        v36 = v29;
        v37 = v28;
        v38 = v27;
        v39 = v26;
        v40 = v25;
        v41 = v24;
        v42 = v23;
        v43 = v22;
        v44 = v10;
        v45 = v11;
        swift_retain();
        sub_1BA711C44();
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v17 += v21;
        if (!--v16)
          return swift_bridgeObjectRelease_n();
      }
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BAC575E4(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC57254(a1, a2);
}

void sub_1BAC57604()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v0 + 152);
  if (*(_BYTE *)(v0 + 80) == 1)
  {
    sub_1BA756470();
    if (v1)
      return;
  }
  else
  {
    sub_1BA7547AC();
    if (v1)
      return;
  }
  if (v2)
    sub_1BA756470();
  else
    sub_1BA7547AC();
}

void sub_1BAC577E0(unint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *((_BYTE *)a2 + 8);
  v5 = *((_BYTE *)a2 + 9);
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v12 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = *v2;
  v20 = v2[1];
  v21 = *a2;
  v33 = v15;
  v17 = v5;
  v18 = v4;
  v22 = v4;
  v23 = v5;
  v16 = v6;
  v24 = v6;
  v25 = v7;
  v26 = v8;
  v27 = v9;
  v28 = v10;
  v29 = v11;
  v30 = v12;
  v31 = v13;
  v32 = v14;
  sub_1BA73B1E0();
  if (!v3)
  {
    if (v20)
    {
      v22 = v18;
      v23 = v17;
      v24 = v16;
      v25 = v7;
      v26 = v8;
      v27 = v9;
      v28 = v10;
      v29 = v11;
      v30 = v12;
      v31 = v13;
      v32 = v14;
      sub_1BA726664(a1, (uint64_t)&v21);
    }
  }
}

uint64_t sub_1BAC578D0(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[14];
  unsigned __int8 v14;
  __int128 v15[5];
  uint64_t v16;
  _BYTE v17[144];

  v6 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v6;
  v15[4] = *(_OWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v7;
  v8 = *v2;
  sub_1BA760F3C((uint64_t)(v2 + 1), (uint64_t)v17, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  if (v8 >> 62)
  {
    if (v8 >> 62 == 1)
    {
      v9 = *(_QWORD *)(v8 + 24);
      v13[0] = *(_QWORD *)(v8 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1BAC5DBE0(a1, a2);
      if (v3)
      {
        swift_release();
        swift_release();
        return swift_release();
      }
      v13[0] = v9;
      sub_1BAC5DBE0(a1, a2);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      v11 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      v13[0] = v11;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BAC5DBE0(a1, a2);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_bridgeObjectRetain();
      sub_1BB571130(a1, v15, v12);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
    }
  }
  sub_1BA760F3C((uint64_t)v17, (uint64_t)v13, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
  result = sub_1BA896370(v13);
  if ((_DWORD)result != 1 && (v14 & 1) == 0)
    return sub_1BA825F5C(v13[10], v13[11], v13[12], v13[13], v14);
  return result;
}

void sub_1BAC57B28()
{
  sub_1BA755CC8();
}

uint64_t sub_1BAC57B3C(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1BAC57B54()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)nullsub_3 + 4 * byte_1BB8A6424[*(unsigned __int8 *)(v0 + 48)]))();
}

uint64_t sub_1BAC57B74()
{
  return sub_1BAC57B54();
}

uint64_t sub_1BAC57B88(uint64_t result, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 9);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a2 + 80);
  v16 = v2[1];
  v17 = v2[2];
  if (*v2 >> 62 != 1)
    goto LABEL_3;
  v38 = *(_QWORD *)(*v2 + 24);
  v25 = v9;
  v26 = v4;
  v27 = v5;
  v28 = v6;
  v29 = v8;
  v30 = v7;
  v31 = v10;
  v32 = v9;
  v33 = v12;
  v34 = v11;
  v35 = v14;
  v36 = v13;
  v37 = v15;
  v20 = v7;
  v21 = v15;
  v18 = result;
  v23 = v6;
  v24 = v11;
  v22 = v13;
  v19 = v16;
  sub_1BA7A9570(result, &v26);
  LOBYTE(v16) = v19;
  v7 = v20;
  v15 = v21;
  v13 = v22;
  v11 = v24;
  v9 = v25;
  v6 = v23;
  result = v18;
  if (!v3)
  {
LABEL_3:
    if ((v16 & 0xFE) != 0xC && (v17 & 0xC000000000000000) == 0x4000000000000000)
    {
      v38 = *(_QWORD *)(v17 + 24);
      v26 = v4;
      v27 = v5;
      v28 = v6;
      v29 = v8;
      v30 = v7;
      v31 = v10;
      v32 = v9;
      v33 = v12;
      v34 = v11;
      v35 = v14;
      v36 = v13;
      v37 = v15;
      return sub_1BA7A9570(result, &v26);
    }
  }
  return result;
}

uint64_t sub_1BAC57CB0(uint64_t a1, uint64_t a2)
{
  return sub_1BAC57B88(a1, a2);
}

uint64_t sub_1BAC57CC4(uint64_t result, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  if ((*v2 & 0xFELL) != 0xC)
  {
    v3 = *(_QWORD *)(a2 + 80);
    v4 = *(_BYTE *)(a2 + 9);
    v5 = *(_BYTE *)(a2 + 8);
    v6 = *(_QWORD *)a2;
    v17 = v2[1];
    v9 = v6;
    v10 = v5;
    v11 = v4;
    v7 = *(_OWORD *)(a2 + 32);
    v12 = *(_OWORD *)(a2 + 16);
    v13 = v7;
    v8 = *(_OWORD *)(a2 + 64);
    v14 = *(_OWORD *)(a2 + 48);
    v15 = v8;
    v16 = v3;
    return sub_1BA7A9570(result, &v9);
  }
  return result;
}

uint64_t sub_1BAC57D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  __int128 v6;
  __int128 v7;
  uint64_t v9;
  char v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 9);
  v16 = *(_QWORD *)(v2 + 8);
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v12 = *(_OWORD *)(a2 + 16);
  v13 = v6;
  v7 = *(_OWORD *)(a2 + 64);
  v14 = *(_OWORD *)(a2 + 48);
  v15 = v7;
  return sub_1BA7A9570(a1, &v9);
}

void sub_1BAC57DB8()
{
  sub_1BA6FAA58();
}

void sub_1BAC57DCC()
{
  sub_1BAC5683C();
}

uint64_t sub_1BAC57E68(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v32 = a1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *a2;
  v9 = *((unsigned __int8 *)a2 + 8);
  v29 = *((unsigned __int8 *)a2 + 9);
  v30 = v9;
  v28 = a2[2];
  v27 = a2[3];
  v26 = a2[4];
  v25 = a2[5];
  v24 = a2[6];
  v23 = a2[7];
  v10 = a2[9];
  v22 = a2[8];
  v11 = a2[10];
  swift_beginAccess();
  v12 = *(_QWORD *)(v2 + 32);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v19 = v2;
    v20 = v6;
    swift_bridgeObjectRetain_n();
    v21 = v12;
    v14 = v12 + 48;
    while (1)
    {
      v33 = *(_QWORD *)(v14 - 16);
      v34 = v31;
      v35 = v30;
      v36 = v29;
      v37 = v28;
      v38 = v27;
      v39 = v26;
      v40 = v25;
      v41 = v24;
      v42 = v23;
      v43 = v22;
      v44 = v10;
      v45 = v11;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA6F84BC();
      if (v3)
        break;
      v14 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v13)
      {
        swift_bridgeObjectRelease_n();
        v6 = v20;
        v2 = v19;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    result = *(_QWORD *)(v2 + 40);
    v16 = *(_QWORD *)(result + 16);
    if (v16)
    {
      v17 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v21 = *(_QWORD *)(v6 + 72);
      v20 = result;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v17, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v46 = *((_QWORD *)v8 + 2);
        v34 = v31;
        v35 = v30;
        v36 = v29;
        v37 = v28;
        v38 = v27;
        v39 = v26;
        v40 = v25;
        v41 = v24;
        v42 = v23;
        v43 = v22;
        v44 = v10;
        v45 = v11;
        swift_retain();
        sub_1BA711C44();
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v17 += v21;
        if (!--v16)
          return swift_bridgeObjectRelease_n();
      }
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BAC581F8(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC57E68(a1, a2);
}

uint64_t sub_1BAC58218(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v30 = a1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *a2;
  v9 = *((unsigned __int8 *)a2 + 8);
  v27 = *((unsigned __int8 *)a2 + 9);
  v28 = v9;
  v10 = a2[2];
  v25 = a2[3];
  v26 = v10;
  v11 = a2[4];
  v23 = a2[5];
  v24 = v11;
  v22 = a2[6];
  v21 = a2[7];
  v20 = a2[8];
  v12 = a2[9];
  v13 = a2[10];
  v19 = v12;
  swift_beginAccess();
  result = *(_QWORD *)(v2 + 56);
  v15 = *(_QWORD *)(result + 16);
  if (v15)
  {
    v16 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v17 = *(_QWORD *)(v6 + 72);
    v18[1] = *(_QWORD *)(v2 + 56);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BA4C2DD8(v16, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v43 = *((_QWORD *)v8 + 2);
      v31 = v29;
      v32 = v28;
      v33 = v27;
      v34 = v26;
      v35 = v25;
      v36 = v24;
      v37 = v23;
      v38 = v22;
      v39 = v21;
      v40 = v20;
      v41 = v19;
      v42 = v13;
      swift_retain();
      sub_1BA711C44();
      if (v3)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v16 += v17;
      if (!--v15)
        return swift_bridgeObjectRelease_n();
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1BAC58428(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC58218(a1, a2);
}

void sub_1BAC58448()
{
  sub_1BA7547AC();
}

void sub_1BAC584B0()
{
  sub_1BA6F84BC();
}

void sub_1BAC58520(uint64_t a1, uint64_t a2)
{
  sub_1BA749E38(a1, a2);
}

void sub_1BAC58540(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14[5];
  uint64_t v15;

  v4 = v3;
  v6 = *(_OWORD *)(a2 + 48);
  v14[2] = *(_OWORD *)(a2 + 32);
  v14[3] = v6;
  v14[4] = *(_OWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v7;
  v9 = *v2;
  v8 = v2[1];
  if (*v2 && (v10 = *(_QWORD *)(v9 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    v12 = 0;
    while (1)
    {
      v13 = *(_QWORD *)(v9 + 8 * v12 + 32);
      swift_retain();
      sub_1BAC5D4B8(a1, a2, v13);
      if (v4)
        break;
      ++v12;
      swift_release();
      if (v10 == v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_7:
    if (v8)
      sub_1BA7C5D48(a1, v14, v8);
  }
}

void sub_1BAC58640()
{
  sub_1BA74A2B0();
}

void sub_1BAC58654()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 56)
    && (*(_QWORD *)(v0 + 48) & 0xF000000000000007) != 0xD000000000000007
    && (*(_QWORD *)v0 & 0xF000000000000007) != 0xF000000000000007)
  {
    sub_1BA7547AC();
  }
}

void sub_1BAC586EC()
{
  _QWORD *v0;

  if ((~*v0 & 0xF000000000000007) != 0)
    sub_1BA7547AC();
}

uint64_t sub_1BAC58764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA7B8C24(a1, a2);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v9 = *(_QWORD *)(a4 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      v10 = a4 + 48;
      do
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA7B8C24(a1, a2);
        swift_bridgeObjectRelease();
        swift_release_n();
        v10 += 24;
        --v9;
      }
      while (v9);
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    return sub_1BA7B8C24(a1, a2);
  }
}

uint64_t sub_1BAC588E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA7547AC(a1, a2);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_1BA754BF8(a1, a2, a4);
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1BA7547AC(a1, a2);
  }
}

uint64_t sub_1BAC589B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, double);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;

  v46 = a1;
  v40 = *(_QWORD *)(a3 + 24);
  v37 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](a1);
  v38 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v5 + 16);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *v11;
  v12 = *((unsigned __int8 *)v11 + 8);
  v45 = *((unsigned __int8 *)v11 + 9);
  v64 = v11[2];
  v48 = v11[3];
  v43 = v11[4];
  v42 = v11[5];
  v13 = v11[7];
  v41 = v11[6];
  v14 = v11[8];
  v15 = v11[9];
  v16 = v11[10];
  v18 = *(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16);
  v39 = v19;
  v18(v10, v19, v6, v8);
  v20 = sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (swift_dynamicCast())
  {
    v31[1] = v20;
    v22 = *((_QWORD *)&v62 + 1);
    v21 = v63;
    __swift_project_boxed_opaque_existential_1(&v61, *((uint64_t *)&v62 + 1));
    v49 = v44;
    v32 = v12;
    v50 = v12;
    v51 = v45;
    v23 = v47;
    v52 = v64;
    v53 = v48;
    v54 = v43;
    v55 = v42;
    v56 = v41;
    v57 = v13;
    v58 = v14;
    v59 = v15;
    v60 = v16;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v21 + 8))(v46, &v49, v22, v21);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
    if (v23)
      return result;
    v33 = v16;
    v34 = v15;
    v35 = v14;
    v36 = v13;
    v25 = v48;
    v26 = v64;
    LOBYTE(v12) = v32;
  }
  else
  {
    v33 = v16;
    v34 = v15;
    v35 = v14;
    v36 = v13;
    v25 = v48;
    v26 = v64;
    v63 = 0;
    v61 = 0u;
    v62 = 0u;
    sub_1BA65DB80((uint64_t)&v61, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v38, v39 + *(int *)(a3 + 52), v40);
  if (swift_dynamicCast())
  {
    v27 = v25;
    v28 = v12;
    v29 = *((_QWORD *)&v62 + 1);
    v30 = v63;
    __swift_project_boxed_opaque_existential_1(&v61, *((uint64_t *)&v62 + 1));
    v49 = v44;
    v50 = v28;
    v51 = v45;
    v52 = v26;
    v53 = v27;
    v54 = v43;
    v55 = v42;
    v56 = v41;
    v57 = v36;
    v58 = v35;
    v59 = v34;
    v60 = v33;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v30 + 8))(v46, &v49, v29, v30);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
  }
  else
  {
    v63 = 0;
    v61 = 0u;
    v62 = 0u;
    return sub_1BA65DB80((uint64_t)&v61, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
}

void sub_1BAC58D74()
{
  sub_1BA7547AC();
}

uint64_t sub_1BAC58D88(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC63448(a1, a2, (uint64_t (*)(uint64_t, uint64_t *))sub_1BA756210);
}

void sub_1BAC58DA4()
{
  sub_1BA7547AC();
}

uint64_t sub_1BAC58E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC63DA0(a1, a2, a3, a4, (uint64_t (*)(void))sub_1BA756210, (uint64_t (*)(uint64_t, _OWORD *, uint64_t))sub_1BA754BF8);
}

void sub_1BAC58E30()
{
  sub_1BA756210();
}

void sub_1BAC58E44()
{
  __asm { BR              X11 }
}

void sub_1BAC58EA8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 40) = *(_QWORD *)(a1 + 16);
  sub_1BA7547AC();
}

void sub_1BAC58F48()
{
  sub_1BAC58E44();
}

void sub_1BAC58F5C()
{
  sub_1BA75DD88();
}

uint64_t sub_1BAC58FE4(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[5];
  uint64_t v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v14 = a3;
  sub_1BA49DEA8();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  v6 = a3;
  if (swift_dynamicCast())
  {
    v7 = *((_QWORD *)&v16 + 1);
    v8 = v17;
    __swift_project_boxed_opaque_existential_1(&v15, *((uint64_t *)&v16 + 1));
    v9 = *(_OWORD *)(a2 + 48);
    v12[2] = *(_OWORD *)(a2 + 32);
    v12[3] = v9;
    v12[4] = *(_OWORD *)(a2 + 64);
    v13 = *(_QWORD *)(a2 + 80);
    v10 = *(_OWORD *)(a2 + 16);
    v12[0] = *(_OWORD *)a2;
    v12[1] = v10;
    (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t))(v8 + 8))(a1, v12, v7, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
  }
  else
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
    return sub_1BA65DB80((uint64_t)&v15, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
}

uint64_t sub_1BAC59104(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC55744(a1, a2, a3, a4);
}

uint64_t sub_1BAC59124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = MEMORY[0x1E0C80A78](a1);
  v8 = *v7;
  v9 = *((_BYTE *)v7 + 8);
  v10 = *((_BYTE *)v7 + 9);
  v12 = v7[2];
  v11 = v7[3];
  v13 = v7[4];
  v25 = v7[5];
  v26 = v13;
  v14 = v7[6];
  v23 = v7[7];
  v24 = v14;
  v22 = v7[8];
  v21 = v7[9];
  v20 = v7[10];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v3 + *(int *)(v15 + 28), v4, v5);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (swift_dynamicCast())
  {
    v17 = *((_QWORD *)&v40 + 1);
    v18 = v41;
    __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
    v27 = v8;
    v28 = v9;
    v29 = v10;
    v30 = v12;
    v31 = v11;
    v32 = v26;
    v33 = v25;
    v34 = v24;
    v35 = v23;
    v36 = v22;
    v37 = v21;
    v38 = v20;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v18 + 8))(v42, &v27, v17, v18);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  }
  else
  {
    v41 = 0;
    v39 = 0u;
    v40 = 0u;
    return sub_1BA65DB80((uint64_t)&v39, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
}

uint64_t sub_1BAC592E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC59124(a1, a2, a3);
}

void sub_1BAC592F8()
{
  uint64_t v0;
  BOOL v1;

  if (*(_BYTE *)(v0 + 16))
    v1 = 1;
  else
    v1 = (*(_QWORD *)v0 & 0xF000000000000007) == 0xF000000000000007;
  if (!v1)
    sub_1BA645F4C();
}

void sub_1BAC5937C()
{
  uint64_t *v0;
  uint64_t v1;
  unsigned int v2;

  v1 = *v0;
  v2 = *((unsigned __int8 *)v0 + 24);
  if (v2 >> 6 > 1)
  {
    if ((v2 & 0x3F) != 0)
      return;
    v1 = v0[1];
  }
  else if (*((_BYTE *)v0 + 16))
  {
    return;
  }
  if ((v1 & 0xF000000000000007) != 0xF000000000000007)
    sub_1BA645F4C();
}

void sub_1BAC5942C()
{
  sub_1BA75DD88();
}

void sub_1BAC59440(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  sub_1BAC55414(a1, a2, a3);
}

uint64_t sub_1BAC59454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = MEMORY[0x1E0C80A78](a1);
  v8 = *v7;
  v9 = *((_BYTE *)v7 + 8);
  v10 = *((_BYTE *)v7 + 9);
  v12 = v7[2];
  v11 = v7[3];
  v13 = v7[4];
  v25 = v7[5];
  v26 = v13;
  v14 = v7[6];
  v23 = v7[7];
  v24 = v14;
  v22 = v7[8];
  v21 = v7[9];
  v20 = v7[10];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v3 + *(int *)(v15 + 44), v4, v5);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (swift_dynamicCast())
  {
    v17 = *((_QWORD *)&v40 + 1);
    v18 = v41;
    __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
    v27 = v8;
    v28 = v9;
    v29 = v10;
    v30 = v12;
    v31 = v11;
    v32 = v26;
    v33 = v25;
    v34 = v24;
    v35 = v23;
    v36 = v22;
    v37 = v21;
    v38 = v20;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v18 + 8))(v42, &v27, v17, v18);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  }
  else
  {
    v41 = 0;
    v39 = 0u;
    v40 = 0u;
    return sub_1BA65DB80((uint64_t)&v39, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
}

uint64_t sub_1BAC59614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC59454(a1, a2, a3);
}

void sub_1BAC59628()
{
  sub_1BAC60F70();
}

uint64_t sub_1BAC5963C(uint64_t result, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19[5];
  uint64_t v20;
  uint64_t v21;

  v4 = *v2;
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = result;
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 9);
    v17 = *((_OWORD *)a2 + 2);
    v18 = *((_OWORD *)a2 + 1);
    v15 = *((_OWORD *)a2 + 4);
    v16 = *((_OWORD *)a2 + 3);
    v9 = a2[10];
    v10 = *((_BYTE *)a2 + 8);
    v11 = *(_QWORD *)(type metadata accessor for FormatPropertyDefinition(0) - 8);
    v12 = v4;
    v13 = v4 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v14 = *(_QWORD *)(v11 + 72);
    v21 = v12;
    swift_bridgeObjectRetain();
    do
    {
      *(_QWORD *)&v19[0] = v7;
      BYTE8(v19[0]) = v10;
      BYTE9(v19[0]) = v8;
      v19[1] = v18;
      v19[2] = v17;
      v19[3] = v16;
      v19[4] = v15;
      v20 = v9;
      sub_1BAC61158(v6, v19);
      if (v3)
        break;
      v13 += v14;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAC5973C(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC5963C(a1, a2);
}

void sub_1BAC59750(uint64_t a1, uint64_t a2)
{
  sub_1BA7FD438(a1, a2);
}

uint64_t sub_1BAC59770(uint64_t a1, uint64_t a2)
{
  return sub_1BA7FD6E4(a1, a2);
}

uint64_t sub_1BAC59790(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v30 = a1;
  v5 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)(v2 + 24);
  if (result)
  {
    v10 = *(_QWORD *)(result + 16);
    if (v10)
    {
      v29 = *a2;
      v11 = *((unsigned __int8 *)a2 + 8);
      v27 = *((unsigned __int8 *)a2 + 9);
      v28 = v11;
      v12 = a2[2];
      v25 = a2[3];
      v26 = v12;
      v13 = a2[4];
      v23 = a2[5];
      v24 = v13;
      v14 = a2[6];
      v21 = a2[7];
      v22 = v14;
      v20 = a2[8];
      v15 = a2[10];
      v19 = a2[9];
      v16 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v17 = *(_QWORD *)(v6 + 72);
      v18 = result;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BA4C2DD8(v16, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v43 = *((_QWORD *)v8 + 2);
        v31 = v29;
        v32 = v28;
        v33 = v27;
        v34 = v26;
        v35 = v25;
        v36 = v24;
        v37 = v23;
        v38 = v22;
        v39 = v21;
        v40 = v20;
        v41 = v19;
        v42 = v15;
        swift_retain();
        sub_1BA711C44();
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v16 += v17;
        if (!--v10)
          return swift_bridgeObjectRelease();
      }
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BAC5996C(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC59790(a1, a2);
}

uint64_t sub_1BAC59980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v9;
  char v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v3 = *(_BYTE *)(a2 + 9);
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)a2;
  v16 = *(_QWORD *)(v2 + 8);
  v9 = v5;
  v10 = v4;
  v11 = v3;
  v6 = *(_OWORD *)(a2 + 32);
  v12 = *(_OWORD *)(a2 + 16);
  v13 = v6;
  v7 = *(_OWORD *)(a2 + 64);
  v14 = *(_OWORD *)(a2 + 48);
  v15 = v7;
  return sub_1BA7A9570(a1, &v9);
}

uint64_t sub_1BAC599F0(uint64_t a1, uint64_t *a2)
{
  return sub_1BA7A9570(a1, a2);
}

uint64_t sub_1BAC59A04(uint64_t a1, uint64_t a2)
{
  return sub_1BAC59980(a1, a2);
}

void sub_1BAC59A18(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v5 = type metadata accessor for FormatOption();
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a2;
  v9 = *((unsigned __int8 *)a2 + 8);
  v10 = *((unsigned __int8 *)a2 + 9);
  v11 = a2[2];
  v12 = a2[3];
  v14 = a2[4];
  v13 = a2[5];
  v16 = a2[6];
  v15 = a2[7];
  v18 = a2[8];
  v17 = a2[9];
  v19 = a2[10];
  v20 = *(_QWORD *)(v2 + 48);
  v34 = *(_QWORD *)(v2 + 80);
  v33 = *(_QWORD *)(v2 + 96);
  v31 = *(unsigned __int8 *)(v2 + 106);
  v30 = *(unsigned __int16 *)(v2 + 104);
  v59 = v20;
  v46 = v8;
  v47 = v8;
  v44 = v10;
  v45 = v9;
  v48 = v9;
  v49 = v10;
  v42 = v12;
  v43 = v11;
  v50 = v11;
  v51 = v12;
  v40 = v13;
  v41 = v14;
  v52 = v14;
  v53 = v13;
  v54 = v16;
  v55 = v15;
  v56 = v18;
  v57 = v17;
  v58 = v19;
  v21 = v39;
  sub_1BA7B8C24();
  if (!v21)
  {
    v36 = v17;
    v37 = v18;
    v38 = v15;
    v39 = v16;
    v22 = *(_QWORD *)(v34 + 16);
    if (v22)
    {
      v35 = a1;
      v23 = v34 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
      v24 = *(_QWORD *)(v32 + 72);
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1BA4C2DD8(v23, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v59 = *((_QWORD *)v7 + 2);
        v47 = v46;
        v48 = v45;
        v49 = v44;
        v50 = v43;
        v51 = v42;
        v52 = v41;
        v53 = v40;
        v54 = v39;
        v55 = v38;
        v56 = v37;
        v57 = v36;
        v58 = v19;
        swift_retain();
        sub_1BA711C44();
        swift_release();
        sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v23 += v24;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease_n();
      v25 = v33;
      v26 = v31;
      v27 = v30;
    }
    else
    {
      v26 = v31;
      v27 = v30;
      v25 = v33;
    }
    v28 = v27 | (v26 << 16);
    if (BYTE2(v28) != 255
      && (v28 & 0xFFFFFF) >= 0x20000
      && BYTE1(v27) != 255
      && (_BYTE)v27 == 0xFF
      && (v27 & 0x100) != 0)
    {
      sub_1BA77A170(v25, v28, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    }
  }
}

uint64_t sub_1BAC59D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(unsigned __int8 *)(v0 + 10) >= 2u)
  {
    v1 = *(unsigned __int16 *)(v0 + 8);
    if (v1 >> 8 <= 0xFE && (v1 & 0x100) != 0 && (_BYTE)v1 == 0xFF)
      return sub_1BA77A170(*(_QWORD *)v0, v1, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
  }
  return result;
}

void sub_1BAC59D7C(uint64_t a1, uint64_t *a2)
{
  sub_1BAC59A18(a1, a2);
}

void sub_1BAC59D90()
{
  sub_1BA7B8C24();
}

uint64_t sub_1BAC59DA4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 9);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v16 = v2[1];
  v17 = *(_QWORD *)(a2 + 80);
  v34 = *v2;
  v22 = v4;
  v23 = v5;
  v24 = v6;
  v25 = v7;
  v26 = v8;
  v27 = v9;
  v28 = v10;
  v29 = v12;
  v30 = v11;
  v19 = v13;
  v20 = v11;
  v31 = v13;
  v32 = v14;
  v18 = v14;
  v33 = v17;
  result = sub_1BA6FAF04(a1, &v22);
  if (!v3)
  {
    v34 = v16;
    v22 = v4;
    v23 = v5;
    v24 = v6;
    v25 = v7;
    v26 = v8;
    v27 = v9;
    v28 = v10;
    v29 = v12;
    v30 = v20;
    v31 = v19;
    v32 = v18;
    v33 = v17;
    return sub_1BA6FAF04(a1, &v22);
  }
  return result;
}

uint64_t sub_1BAC59E88(uint64_t a1, uint64_t a2)
{
  return sub_1BAC59DA4(a1, a2);
}

uint64_t sub_1BAC59E9C(uint64_t a1, uint64_t *a2)
{
  return sub_1BA6FAF04(a1, a2);
}

uint64_t sub_1BAC59EB0(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  __int128 v8[8];
  _BYTE v9[136];
  int v10;

  v10 = *(unsigned __int8 *)(a2 + 9);
  sub_1BA895FE8(v2, (uint64_t)v8);
  sub_1BA895FE8(v8, (uint64_t)v9);
  v4 = sub_1BA896024((uint64_t)v9);
  result = sub_1BA896030((uint64_t)v9);
  if (v4 != 1)
    return sub_1BA756470();
  v6 = *(_QWORD *)(*(_QWORD *)(result + 112) + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    while (1)
    {
      swift_retain();
      sub_1BA7547AC();
      if (v3)
        break;
      ++v7;
      swift_release();
      if (v6 == v7)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAC5A0A8(uint64_t a1, uint64_t a2)
{
  return sub_1BAC59EB0(a1, a2);
}

uint64_t sub_1BAC5A0BC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC558FC(a1, a2, a3, a4);
}

uint64_t sub_1BAC5A0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v42 = a1;
  v44 = *(_QWORD *)(a3 + 16);
  v46 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](a1);
  v43 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v29 - v5;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *v10;
  v40 = *((unsigned __int8 *)v10 + 8);
  v39 = *((unsigned __int8 *)v10 + 9);
  v38 = v10[2];
  v11 = v10[4];
  v37 = v10[3];
  v13 = v10[5];
  v12 = v10[6];
  v14 = v10[7];
  v15 = v10[8];
  v17 = v10[9];
  v16 = v10[10];
  (*(void (**)(char *, uint64_t, double))(v18 + 16))(v9, v19, v7);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 1)
  {
    v30 = v16;
    v31 = v17;
    v32 = v15;
    v33 = v14;
    v34 = v12;
    v35 = v13;
    v36 = v11;
    v21 = v41;
    v22 = v40;
    v23 = v42;
    v24 = v45;
    v25 = v46;
    v26 = v44;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v45, v9, v44);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v43, v24, v26);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
    if (swift_dynamicCast())
    {
      v27 = *((_QWORD *)&v60 + 1);
      v28 = v61;
      __swift_project_boxed_opaque_existential_1(&v59, *((uint64_t *)&v60 + 1));
      v47 = v21;
      v48 = v22;
      v49 = v39;
      v50 = v38;
      v51 = v37;
      v52 = v36;
      v53 = v35;
      v54 = v34;
      v55 = v33;
      v56 = v32;
      v57 = v31;
      v58 = v30;
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v28 + 8))(v23, &v47, v27, v28);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v26);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
    }
    else
    {
      v61 = 0;
      v59 = 0u;
      v60 = 0u;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v26);
      return sub_1BA65DB80((uint64_t)&v59, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
    }
  }
  return result;
}

uint64_t sub_1BAC5A3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC5A0D0(a1, a2, a3);
}

void sub_1BAC5A3E4()
{
  sub_1BA6F9BF4();
}

void sub_1BAC5A3F8()
{
  sub_1BA754450();
}

void sub_1BAC5A40C()
{
  sub_1BA754E6C();
}

void sub_1BAC5A420(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  char v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  if (*v2)
  {
    v3 = a2[10];
    v4 = *((_BYTE *)a2 + 9);
    v5 = *((_BYTE *)a2 + 8);
    v8 = *a2;
    v9 = v5;
    v10 = v4;
    v6 = *((_OWORD *)a2 + 2);
    v11 = *((_OWORD *)a2 + 1);
    v12 = v6;
    v7 = *((_OWORD *)a2 + 4);
    v13 = *((_OWORD *)a2 + 3);
    v14 = v7;
    v15 = v3;
    sub_1BA7538E0(a1, (uint64_t)&v8);
  }
}

uint64_t sub_1BAC5A488(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v3 = *(char *)(v2 + 24);
  if (v3 < 0)
  {
    v4 = result;
    v6 = *(_QWORD *)(v2 + 8);
    v5 = *(_QWORD *)(v2 + 16);
    v7 = *(_QWORD *)v2;
    v8 = a2[10];
    v9 = *((_BYTE *)a2 + 9);
    v10 = *((_BYTE *)a2 + 8);
    v13 = *a2;
    v14 = v10;
    v15 = v9;
    v11 = *((_OWORD *)a2 + 2);
    v16 = *((_OWORD *)a2 + 1);
    v17 = v11;
    v12 = *((_OWORD *)a2 + 4);
    v18 = *((_OWORD *)a2 + 3);
    v19 = v12;
    v20 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BA7538E0(v4, (uint64_t)&v13);
    return sub_1BAA376C0(v7, v6, v5, v3);
  }
  return result;
}

uint64_t sub_1BAC5A548(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  uint64_t v12;
  char v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char v22;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 9);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_BYTE *)(v2 + 40);
  v20 = *(_OWORD *)(v2 + 16);
  v21 = v7;
  v22 = v8;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v9 = *(_OWORD *)(a2 + 32);
  v15 = *(_OWORD *)(a2 + 16);
  v16 = v9;
  v10 = *(_OWORD *)(a2 + 64);
  v17 = *(_OWORD *)(a2 + 48);
  v18 = v10;
  v19 = v6;
  return sub_1BAC5A488(a1, &v12);
}

uint64_t sub_1BAC5A5C4(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC5A488(a1, a2);
}

void sub_1BAC5A5D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v2 = a2[10];
  v3 = *((_BYTE *)a2 + 9);
  v4 = *((_BYTE *)a2 + 8);
  v7 = *a2;
  v8 = v4;
  v9 = v3;
  v5 = *((_OWORD *)a2 + 2);
  v10 = *((_OWORD *)a2 + 1);
  v11 = v5;
  v6 = *((_OWORD *)a2 + 4);
  v12 = *((_OWORD *)a2 + 3);
  v13 = v6;
  v14 = v2;
  sub_1BA7538E0(a1, (uint64_t)&v7);
}

void sub_1BAC5A63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  unint64_t v4;
  uint64_t v5;

  sub_1BA6FA63C();
  if (!v0)
  {
    swift_beginAccess();
    v1 = *(_QWORD *)(v5 + 40);
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v2; ++i)
      {
        v4 = *(_QWORD *)(v1 + 8 * i + 32);
        sub_1BA7196DC(v4);
        sub_1BA6FA7EC();
        sub_1BA719340(v4);
      }
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1BAC5A7E4()
{
  sub_1BAC5A63C();
}

uint64_t sub_1BAC5A804(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v9[5];
  uint64_t v10;

  v4 = *v2;
  v5 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v5;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v6;
  swift_beginAccess();
  v7 = *(_QWORD *)(v4 + 56);
  swift_bridgeObjectRetain();
  sub_1BB56464C(a1, (uint64_t)v9, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC5A89C()
{
  return sub_1BA756470();
}

uint64_t sub_1BAC5A8B0(uint64_t a1, __int128 *a2)
{
  return sub_1BA7B7CA0(a1, a2);
}

void sub_1BAC5A8C4()
{
  sub_1BA7644D0();
}

void sub_1BAC5A8D8()
{
  sub_1BA7F1480();
}

void sub_1BAC5A988()
{
  sub_1BA7E8890();
}

void sub_1BAC5A99C(uint64_t a1, uint64_t a2)
{
  sub_1BA73D650(a1, a2);
}

void sub_1BAC5A9BC(uint64_t a1, uint64_t a2)
{
  sub_1BA7B0E34(a1, a2);
}

void sub_1BAC5A9DC()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC5AA0C()
{
  return nullsub_1();
}

void sub_1BAC5AA84(uint64_t a1, uint64_t a2)
{
  sub_1BA7B108C(a1, a2);
}

void sub_1BAC5AAA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(unsigned __int8 *)(v0 + 176);
  switch(*(_BYTE *)(v0 + 80))
  {
    case 1:
      nullsub_1();
      goto LABEL_4;
    case 2:
      sub_1BA756470();
LABEL_4:
      v2 = v1;
      if (!v1)
        goto LABEL_5;
      return;
    case 3:
      sub_1BA7AF9E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), 3u);
      if (!v3)
        goto LABEL_12;
      goto LABEL_6;
    default:
LABEL_5:
      if (!v3)
        goto LABEL_12;
LABEL_6:
      v5 = *(_QWORD *)(v3 + 16);
      if (!v5)
        goto LABEL_12;
      swift_bridgeObjectRetain();
      v6 = v3 + 64;
      break;
  }
  do
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BA7547AC();
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      return;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    v6 += 40;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
LABEL_12:
  if (v4 != 254)
    sub_1BA7547AC();
}

void sub_1BAC5ADC4()
{
  sub_1BAC5AAA4();
}

void sub_1BAC5ADD8(uint64_t a1, uint64_t a2)
{
  sub_1BA7E6864(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BA7B9E20);
}

void sub_1BAC5AE00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(unsigned __int8 *)(v0 + 128);
  if (v2 && (v4 = *(_QWORD *)(v2 + 16)) != 0)
  {
    v6 = *(unsigned __int8 *)(v0 + 128);
    v5 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA7547AC();
      if (v1)
        break;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v5 += 40;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        v3 = v6;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
LABEL_7:
    if (v3 != 254)
      sub_1BA7547AC();
  }
}

void sub_1BAC5B044()
{
  sub_1BAC5AE00();
}

void sub_1BAC5B058(uint64_t a1, uint64_t *a2)
{
  sub_1BA6FA32C(a1, a2);
}

void sub_1BAC5B078(uint64_t a1, uint64_t *a2)
{
  sub_1BA70E27C(a1, a2);
}

void sub_1BAC5B098()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC5B100@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(*(_QWORD *)(v16 + 24) + 16);
  v39 = v2;
  v40 = v1;
  v37 = v4;
  v38 = v3;
  v36 = v5;
  if (v17)
  {
    v34 = v12;
    v35 = v11;
    v31 = v13;
    v32 = v10;
    v41 = v6;
    v30 = *(_QWORD *)(a1 + 16);
    v18 = *(_QWORD *)(v16 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    v19 = (_QWORD *)(v18 + 56);
    v33 = v8;
    while (1)
    {
      v20 = *(v19 - 3);
      v21 = *(v19 - 2);
      v22 = *((_BYTE *)v19 - 8);
      *(_QWORD *)(v15 - 72) = *v19;
      v42 = v36;
      v43 = v37;
      v44 = v38;
      v45 = v39;
      v46 = v40;
      v47 = v34;
      v48 = v35;
      v49 = v8;
      v50 = v31;
      v51 = v9;
      v52 = v14;
      v53 = v7;
      sub_1BA73B1CC(v20, v21, v22);
      swift_retain();
      ((void (*)(uint64_t, uint64_t *))sub_1BAC5B098)(v32, &v42);
      if (v41)
        break;
      v19 += 4;
      sub_1BA73B1B8(v20, v21, v22);
      swift_release();
      --v17;
      v8 = v33;
      if (!v17)
      {
        swift_bridgeObjectRelease();
        v10 = v32;
        v8 = v33;
        v23 = v40;
        v24 = v30;
        v13 = v31;
        v11 = v35;
        v12 = v34;
        v25 = v39;
        v27 = v37;
        v26 = v38;
        v28 = v36;
        goto LABEL_7;
      }
    }
    sub_1BA73B1B8(v20, v21, v22);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v24 = *(_QWORD *)(a1 + 16);
    swift_retain();
    v28 = v36;
    v27 = v37;
    v26 = v38;
    v25 = v39;
    v23 = v40;
LABEL_7:
    *(_QWORD *)(v15 - 72) = *(_QWORD *)(v24 + 32);
    v42 = v28;
    v43 = v27;
    v44 = v26;
    v45 = v25;
    v46 = v23;
    v47 = v12;
    v48 = v11;
    v49 = v8;
    v50 = v13;
    v51 = v9;
    v52 = v14;
    v53 = v7;
    ((void (*)(uint64_t, uint64_t *))sub_1BAC5B098)(v10, &v42);
    return swift_release();
  }
}

void sub_1BAC5B4CC()
{
  sub_1BAC5B098();
}

void sub_1BAC5B4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  __int128 *v13;
  __int128 *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[136];
  _BYTE v37[136];
  _BYTE v38[144];
  uint64_t v39;

  v5 = *(_QWORD *)a2;
  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_QWORD *)(a2 + 16);
  v19 = *(_QWORD *)(a2 + 24);
  v20 = *(_QWORD *)(a2 + 32);
  v21 = *(_QWORD *)(a2 + 40);
  v22 = *(_QWORD *)(a2 + 48);
  v23 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  v39 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  sub_1BA895BCC(v2, (uint64_t)v37);
  sub_1BA895BCC((uint64_t)v37, (uint64_t)v38);
  v11 = sub_1BA895C08((uint64_t)v38);
  if (v11)
  {
    if (v11 == 1)
    {
      v12 = sub_1BA895E68((uint64_t)v38);
      sub_1BA53BAD8(v12, (uint64_t)v36);
      if (sub_1BA895ED8((uint64_t)v36) == 1)
      {
        sub_1BA895EE4((uint64_t)v36);
        v24 = v5;
        v25 = v6;
        v26 = v7;
        v27 = v8;
        v28 = v19;
        v29 = v20;
        v30 = v21;
        v31 = v22;
        v32 = v23;
        v33 = v39;
        v34 = v9;
        v35 = v10;
        sub_1BA7547AC();
      }
      else
      {
        v14 = (__int128 *)sub_1BA895EE4((uint64_t)v36);
        sub_1BA895FE8(v14, (uint64_t)&v24);
        v15 = sub_1BA896024((uint64_t)&v24);
        v16 = sub_1BA896030((uint64_t)&v24);
        if (v15 == 1)
        {
          v18 = *(_QWORD *)(*(_QWORD *)(v16 + 112) + 16);
          if (v18)
          {
            swift_bridgeObjectRetain();
            v17 = 0;
            while (1)
            {
              swift_retain();
              sub_1BA7547AC();
              if (v3)
                break;
              ++v17;
              swift_release();
              if (v18 == v17)
              {
                swift_bridgeObjectRelease();
                return;
              }
            }
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        else
        {
          sub_1BA756470();
        }
      }
    }
    else
    {
      sub_1BA895E68((uint64_t)v38);
    }
  }
  else
  {
    v13 = (__int128 *)sub_1BA895E68((uint64_t)v38);
    sub_1BA896178(v13, (uint64_t)v36);
    v24 = v5;
    v25 = v6;
    v26 = v7;
    v27 = v8;
    v28 = v19;
    v29 = v20;
    v30 = v21;
    v31 = v22;
    v32 = v23;
    v33 = v39;
    v34 = v9;
    v35 = v10;
    sub_1BAC5B7EC(a1, &v24);
  }
}

uint64_t sub_1BAC5B7EC(uint64_t a1, uint64_t *a2)
{
  __int128 *v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  __int128 v8[8];
  __int128 v9[8];
  _BYTE v10[136];
  uint64_t v11;

  v11 = *a2;
  sub_1BA896178(v2, (uint64_t)v8);
  sub_1BA896178(v8, (uint64_t)v9);
  sub_1BA895FE8(v9, (uint64_t)v10);
  v4 = sub_1BA896024((uint64_t)v10);
  result = sub_1BA896030((uint64_t)v10);
  if (v4 != 1)
    return sub_1BA756470();
  v6 = *(_QWORD *)(*(_QWORD *)(result + 112) + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    while (1)
    {
      swift_retain();
      sub_1BA7547AC();
      if (v3)
        break;
      ++v7;
      swift_release();
      if (v6 == v7)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1BAC5BA04(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[136];
  _BYTE v43[144];

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *((_BYTE *)a2 + 9);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v13 = a2[7];
  v14 = a2[8];
  v15 = a2[9];
  v16 = a2[10];
  sub_1BA53BAD8(v2, (uint64_t)v42);
  sub_1BA53BAD8((uint64_t)v42, (uint64_t)v43);
  v11 = sub_1BA895ED8((uint64_t)v43);
  v12 = (__int128 *)sub_1BA895EE4((uint64_t)v43);
  if (v11 == 1)
  {
    v18 = *(_QWORD *)v12;
    v30 = v3;
    v31 = v4;
    v32 = v5;
    v33 = v7;
    v34 = v6;
    v35 = v8;
    v36 = v9;
    v37 = v10;
    v38 = v13;
    v39 = v14;
    v40 = v15;
    v41 = v16;
    sub_1BA7547AC();
  }
  else
  {
    sub_1BA895FE8(v12, (uint64_t)&v30);
    v18 = v3;
    v19 = v4;
    v20 = v5;
    v21 = v7;
    v22 = v6;
    v23 = v8;
    v24 = v9;
    v25 = v10;
    v26 = v13;
    v27 = v14;
    v28 = v15;
    v29 = v16;
    sub_1BAC59EB0(a1, (uint64_t)&v18);
  }
}

void sub_1BAC5BB40(uint64_t a1, uint64_t a2)
{
  sub_1BAC5B4E0(a1, a2);
}

void sub_1BAC5BB54(uint64_t a1, uint64_t *a2)
{
  sub_1BAC5BA04(a1, a2);
}

uint64_t sub_1BAC5BB68(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC633E0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t *))sub_1BA7547AC);
}

uint64_t sub_1BAC5BB84(uint64_t a1, uint64_t *a2)
{
  __int128 *v2;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _BYTE v21[128];
  __int128 v22[8];

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *((_BYTE *)a2 + 9);
  v11 = *((_OWORD *)a2 + 2);
  v12 = *((_OWORD *)a2 + 1);
  v9 = *((_OWORD *)a2 + 4);
  v10 = *((_OWORD *)a2 + 3);
  v7 = a2[10];
  sub_1BA895FE8(v2, (uint64_t)v22);
  sub_1BA895FE8(v22, (uint64_t)v21);
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v12;
  v17 = v11;
  v18 = v10;
  v19 = v9;
  v20 = v7;
  return sub_1BAC59EB0(a1, (uint64_t)&v13);
}

uint64_t sub_1BAC5BC48(uint64_t a1, uint64_t *a2)
{
  __int128 *v2;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _BYTE v21[128];
  __int128 v22[8];
  __int128 v23[8];

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *((_BYTE *)a2 + 9);
  v11 = *((_OWORD *)a2 + 2);
  v12 = *((_OWORD *)a2 + 1);
  v9 = *((_OWORD *)a2 + 4);
  v10 = *((_OWORD *)a2 + 3);
  v7 = a2[10];
  sub_1BA896178(v2, (uint64_t)v22);
  sub_1BA896178(v22, (uint64_t)v23);
  sub_1BA895FE8(v23, (uint64_t)v21);
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v12;
  v17 = v11;
  v18 = v10;
  v19 = v9;
  v20 = v7;
  return sub_1BAC59EB0(a1, (uint64_t)&v13);
}

void sub_1BAC5BD18(unint64_t a1, uint64_t *a2)
{
  sub_1BAC577E0(a1, a2);
}

void sub_1BAC5BD2C(unint64_t a1, uint64_t a2)
{
  sub_1BA726394(a1, a2);
}

void sub_1BAC5BD4C()
{
  sub_1BAC5683C();
}

void sub_1BAC5BD78()
{
  sub_1BAC5BD60();
}

uint64_t sub_1BAC5BD8C(uint64_t a1)
{
  return sub_1BB577E64(a1);
}

void sub_1BAC5BDA4(unint64_t a1, uint64_t a2)
{
  sub_1BA726664(a1, a2);
}

void sub_1BAC5BDC4(unint64_t a1, uint64_t a2)
{
  sub_1BA726AB8(a1, a2);
}

unint64_t sub_1BAC5BDD8(unint64_t result, uint64_t a2)
{
  uint64_t *v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v3 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v3;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v4;
  v5 = *v2;
  if ((unint64_t)*v2 >= 3)
  {
    v6 = result;
    v7 = *(_QWORD *)(v5 + 16);
    v8 = *(_QWORD *)(v5 + 24);
    sub_1BA6E6E84(v7);
    sub_1BA6E6E84(v8);
    sub_1BA7852C4(v6, (uint64_t)v9, v7, v8);
    sub_1BA6E7468(v7);
    return sub_1BA6E7468(v8);
  }
  return result;
}

uint64_t sub_1BAC5BE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC616C0(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *, uint64_t, uint64_t))sub_1BB574008);
}

void sub_1BAC5BE94(uint64_t a1, uint64_t a2)
{
  sub_1BA7E6548(a1, a2);
}

void sub_1BAC5BEB4(uint64_t a1, uint64_t a2)
{
  sub_1BA7E6864(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BA76AEBC);
}

void sub_1BAC5BEDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 136);
  if (v2 && (v4 = *(_QWORD *)(v2 + 16)) != 0)
  {
    v6 = *(unsigned __int8 *)(v0 + 136);
    v5 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA7547AC();
      if (v1)
        break;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v5 += 40;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        v3 = v6;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
LABEL_7:
    if (v3 != 254)
      sub_1BA7547AC();
  }
}

void sub_1BAC5C120()
{
  sub_1BAC5BEDC();
}

void sub_1BAC5C134(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _OWORD v50[5];
  uint64_t v51;
  uint64_t v52;

  v4 = v3;
  v52 = a1;
  v6 = type metadata accessor for FormatOption();
  v33 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_OWORD *)(a2 + 48);
  v50[2] = *(_OWORD *)(a2 + 32);
  v50[3] = v8;
  v50[4] = *(_OWORD *)(a2 + 64);
  v51 = *(_QWORD *)(a2 + 80);
  v9 = *(_OWORD *)a2;
  v10 = *(_OWORD *)(a2 + 16);
  v41 = a2;
  v50[0] = v9;
  v50[1] = v10;
  v11 = v2[9];
  v12 = v2[10];
  v13 = v2[11];
  v35 = v2[13];
  v34 = v2[14];
  v14 = *(_QWORD *)(v11 + 16);
  if (v14)
  {
    v37 = v13;
    swift_bridgeObjectRetain_n();
    v15 = v11 + 48;
    while (1)
    {
      v42 = *(_QWORD *)(v15 - 16);
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA6F84BC();
      if (v3)
        break;
      v15 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v14)
      {
        swift_bridgeObjectRelease_n();
        v13 = v37;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
LABEL_6:
    if (!v12 || (sub_1BA7F825C(v52, v41), !v3))
    {
      v16 = *(_QWORD *)(v13 + 16);
      if (v16)
      {
        v40 = v3;
        swift_bridgeObjectRetain_n();
        v37 = v13;
        v17 = (uint64_t *)(v13 + 48);
        while (1)
        {
          v38 = v16;
          v18 = *(v17 - 2);
          v19 = *(v17 - 1);
          v20 = *v17;
          v21 = v17[1];
          v23 = v17[2];
          v22 = v17[3];
          v25 = v17[4];
          v24 = v17[5];
          v42 = v18;
          v43 = v19;
          v44 = v20;
          v45 = v21;
          v46 = v23;
          v47 = v22;
          v48 = v25;
          v49 = v24;
          v39 = v24;
          sub_1BA76B724(v18, v19, v20, v21, v23, v22, v25);
          v26 = v40;
          sub_1BAC5FA3C();
          v40 = v26;
          if (v26)
            break;
          v17 += 8;
          sub_1BA76B698(v18, v19, v20, v21, v23, v22, v25);
          v16 = v38 - 1;
          if (v38 == 1)
          {
            swift_bridgeObjectRelease_n();
            v4 = v40;
            goto LABEL_13;
          }
        }
        sub_1BA76B698(v18, v19, v20, v21, v23, v22, v25);
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_13:
        v27 = *(_QWORD *)(v35 + 16);
        v28 = (uint64_t)v36;
        if (v27)
        {
          v29 = v35 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
          v30 = *(_QWORD *)(v33 + 72);
          swift_bridgeObjectRetain_n();
          while (1)
          {
            sub_1BA4C2DD8(v29, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v42 = *(_QWORD *)(v28 + 16);
            swift_retain();
            sub_1BA711C44();
            if (v4)
              break;
            swift_release();
            sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v29 += v30;
            if (!--v27)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_18;
            }
          }
          swift_release();
          sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          swift_bridgeObjectRelease_n();
        }
        else
        {
LABEL_18:
          v31 = v34;
          swift_bridgeObjectRetain();
          sub_1BA6FEDF0(v52, (uint64_t)v50, v31);
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

void sub_1BAC5C51C(uint64_t a1, uint64_t a2)
{
  sub_1BAC5C134(a1, a2);
}

uint64_t sub_1BAC5C530(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v4 = v3;
  v47 = a1;
  v6 = type metadata accessor for FormatOption();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = *a2;
  v45 = *((unsigned __int8 *)a2 + 8);
  v44 = *((unsigned __int8 *)a2 + 9);
  v43 = a2[2];
  v42 = a2[3];
  v41 = a2[4];
  v40 = a2[5];
  v39 = a2[6];
  v38 = a2[7];
  v37 = a2[8];
  v36 = a2[9];
  v35 = a2[10];
  swift_beginAccess();
  v10 = v2[7];
  v11 = *(_QWORD *)(v10 + 16);
  v31 = v2;
  if (v11)
  {
    v12 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v13 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BA4C2DD8(v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v48 = *((_QWORD *)v9 + 2);
      v56 = v46;
      v57 = v45;
      v58 = v44;
      v59 = v43;
      v60 = v42;
      v61 = v41;
      v62 = v40;
      v63 = v39;
      v64 = v38;
      v65 = v37;
      v66 = v36;
      v67 = v35;
      swift_retain();
      sub_1BA711C44();
      if (v3)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v12 += v13;
      if (!--v11)
      {
        swift_bridgeObjectRelease_n();
        v2 = v31;
        goto LABEL_6;
      }
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    v14 = v2[8];
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v34 = v3;
      swift_bridgeObjectRetain_n();
      v30[1] = v14;
      v16 = (uint64_t *)(v14 + 48);
      while (1)
      {
        v32 = v15;
        v17 = *(v16 - 2);
        v18 = *(v16 - 1);
        v19 = *v16;
        v20 = v16[1];
        v21 = v16[2];
        v22 = v16[3];
        v24 = v16[4];
        v23 = v16[5];
        v48 = v17;
        v49 = v18;
        v50 = v19;
        v51 = v20;
        v52 = v21;
        v53 = v22;
        v54 = v24;
        v55 = v23;
        v56 = v46;
        v57 = v45;
        v58 = v44;
        v59 = v43;
        v60 = v42;
        v61 = v41;
        v62 = v40;
        v63 = v39;
        v64 = v38;
        v65 = v37;
        v66 = v36;
        v67 = v35;
        v33 = v23;
        sub_1BA76B724(v17, v18, v19, v20, v21, v22, v24);
        v25 = v34;
        sub_1BAC5FA3C();
        v34 = v25;
        if (v25)
          break;
        v16 += 8;
        sub_1BA76B698(v17, v18, v19, v20, v21, v22, v24);
        v15 = v32 - 1;
        if (v32 == 1)
        {
          swift_bridgeObjectRelease_n();
          v4 = v34;
          v2 = v31;
          goto LABEL_11;
        }
      }
      sub_1BA76B698(v17, v18, v19, v20, v21, v22, v24);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      result = swift_beginAccess();
      v27 = v2[9];
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        swift_bridgeObjectRetain_n();
        v29 = v27 + 48;
        while (1)
        {
          v68 = *(_QWORD *)(v29 - 16);
          v56 = v46;
          v57 = v45;
          v58 = v44;
          v59 = v43;
          v60 = v42;
          v61 = v41;
          v62 = v40;
          v63 = v39;
          v64 = v38;
          v65 = v37;
          v66 = v36;
          v67 = v35;
          swift_bridgeObjectRetain();
          swift_retain_n();
          sub_1BA6F84BC();
          if (v4)
            break;
          v29 += 40;
          swift_bridgeObjectRelease();
          swift_release_n();
          if (!--v28)
            return swift_bridgeObjectRelease_n();
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
    }
  }
  return result;
}

uint64_t sub_1BAC5CAEC(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC5C530(a1, a2);
}

void sub_1BAC5CB0C(uint64_t a1, uint64_t a2)
{
  sub_1BA72B8F4(a1, a2);
}

uint64_t sub_1BAC5CB2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;

  v3 = v2;
  v29 = a1;
  v5 = type metadata accessor for FormatItemNodeAction();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a2;
  v28 = *((unsigned __int8 *)a2 + 8);
  v25 = *((unsigned __int8 *)a2 + 9);
  v26 = a2[2];
  v27 = v8;
  v24 = a2[3];
  v9 = a2[5];
  v23 = a2[4];
  v10 = a2[6];
  v11 = a2[7];
  v13 = a2[8];
  v12 = a2[9];
  v14 = a2[10];
  sub_1BA4C2DD8(v3, (uint64_t)v7, v15);
  result = swift_getEnumCaseMultiPayload();
  if ((result - 2) >= 6)
  {
    if ((_DWORD)result)
    {
      return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    }
    else
    {
      v17 = *((_QWORD *)v7 + 1);
      v21 = *(_QWORD *)v7;
      v20 = v17;
      v18 = *((_QWORD *)v7 + 2);
      v22 = v7[25];
      v19 = v7[24];
      v42 = v21;
      v43 = v17;
      v44 = v18;
      v45 = v19;
      v46 = v22;
      v30 = v27;
      v31 = v28;
      v32 = v25;
      v33 = v26;
      v34 = v24;
      v35 = v23;
      v36 = v9;
      v37 = v10;
      v38 = v11;
      v39 = v13;
      v40 = v12;
      v41 = v14;
      sub_1BA75DD88();
      return sub_1BAC65170(v21, v20, v18, v19, v22, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    }
  }
  return result;
}

uint64_t sub_1BAC5CD14(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC5CB2C(a1, a2);
}

void sub_1BAC5CD28()
{
  sub_1BA75DD88();
}

void sub_1BAC5CDAC(uint64_t a1, uint64_t a2)
{
  sub_1BA7F825C(a1, a2);
}

void sub_1BAC5CDCC(uint64_t a1, uint64_t *a2)
{
  sub_1BA76AA8C(a1, a2);
}

void sub_1BAC5CDE0(uint64_t a1, uint64_t a2)
{
  sub_1BA7E4288(a1, a2);
}

uint64_t sub_1BAC5CE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC616C0(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *, uint64_t, uint64_t))sub_1BB573FC0);
}

void sub_1BAC5CE1C(uint64_t a1, uint64_t a2)
{
  sub_1BA756CDC(a1, a2);
}

void sub_1BAC5CE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[5];
  uint64_t v15;
  uint64_t v16;

  v5 = *(_OWORD *)(a2 + 48);
  v14[2] = *(_OWORD *)(a2 + 32);
  v14[3] = v5;
  v14[4] = *(_OWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v6;
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 96);
  v9 = *(unsigned __int8 *)(v2 + 144);
  v10 = *(_QWORD *)(v2 + 200);
  if ((~*(_QWORD *)(v2 + 24) & 0xF000000000000007) == 0 || (v16 = *(_QWORD *)(v2 + 24), sub_1BA755CC8(), !v3))
  {
    if (v7 && (v11 = *(_QWORD *)(v7 + 16)) != 0)
    {
      v13 = a1;
      swift_bridgeObjectRetain();
      v12 = v7 + 64;
      while (1)
      {
        v16 = *(_QWORD *)(v12 - 24);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA7547AC();
        if (v3)
          break;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v12 += 40;
        if (!--v11)
        {
          swift_bridgeObjectRelease();
          a1 = v13;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
LABEL_9:
      if (v9 == 254 || (v16 = v8, sub_1BA7547AC(), !v3))
      {
        if (v10)
          sub_1BB5641B0(a1, (uint64_t)v14, v10);
      }
    }
  }
}

void sub_1BAC5D020(uint64_t a1, uint64_t a2)
{
  sub_1BAC5CE3C(a1, a2);
}

uint64_t sub_1BAC5D034()
{
  return sub_1BAC55E48();
}

void sub_1BAC5D048(uint64_t a1, uint64_t a2)
{
  sub_1BAC58540(a1, a2);
}

void sub_1BAC5D05C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12[5];
  uint64_t v13;

  v6 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  v12[3] = v6;
  v12[4] = *(_OWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v7;
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = v2[8];
  if ((~v2[1] & 0xF000000000000007) == 0 && (v2[3] & 7) == 7 || (sub_1BAC5D1B4(a1, a2), !v3))
  {
    if ((~(v8 & v10) & 0x3000000000000007) == 0)
    {
LABEL_5:
      sub_1BA7C5D48(a1, v12, v11);
      return;
    }
    if ((v10 & 0x2000000000000000) != 0)
    {
      sub_1BA6466EC(a1, a2);
      if (!v3)
        goto LABEL_5;
    }
    else
    {
      sub_1BA7CCCA0(v8, v9, v10);
      sub_1BAC55380(a1, v12, v8, v9);
      sub_1BAC68C54(v8, v9, v10);
      if (!v3)
        goto LABEL_5;
    }
  }
}

void sub_1BAC5D1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11[5];
  uint64_t v12;

  v5 = *(_OWORD *)(a2 + 48);
  v11[2] = *(_OWORD *)(a2 + 32);
  v11[3] = v5;
  v11[4] = *(_OWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v6;
  v7 = *(_QWORD **)v2;
  v8 = *(_QWORD *)(v2 + 24);
  if ((v8 & 4) != 0)
  {
    sub_1BA645F4C();
  }
  else
  {
    v9 = *(_QWORD *)(v2 + 8);
    v10 = *(_QWORD *)(v2 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA7D1EF8(a1, v11, v7);
    if (!v3)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BA75DC18(a1, (uint64_t)v11, v9, v10, v8, (void (*)(uint64_t, uint64_t))sub_1BA645F4C);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    sub_1BA7CCC14((uint64_t)v7, v9, v10, v8);
  }
}

void sub_1BAC5D2E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9[5];
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  v6 = *v2;
  v7 = v2[2];
  if ((v7 & 0x2000000000000000) != 0)
  {
    sub_1BA6466EC(a1, a2);
  }
  else
  {
    v8 = v2[1];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAC55380(a1, v9, v6, v8);
    sub_1BA7CCC64(v6, v8, v7);
  }
}

void sub_1BAC5D3A0(uint64_t a1, uint64_t a2)
{
  sub_1BAC5D05C(a1, a2);
}

void sub_1BAC5D3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11[5];
  uint64_t v12;

  v5 = *(_OWORD *)(a2 + 48);
  v11[2] = *(_OWORD *)(a2 + 32);
  v11[3] = v5;
  v11[4] = *(_OWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v6;
  v7 = *(unsigned __int8 *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 56);
  if (v7 != 255 && (v7 & 1) != 0)
  {
    v9 = *(_QWORD *)(v2 + 24);
    v10 = *(_QWORD *)(v9 + 24);
    sub_1BA92F754((void *)v9, 1);
    sub_1BB56837C(a1, (uint64_t)v11, v10);
    if (v3)
    {
      sub_1BAC68A38((void *)v9, v7);
      return;
    }
    sub_1BAC58FE4(a1, (uint64_t)v11, *(void **)(v9 + 32));
    sub_1BAC68A38((void *)v9, v7);
  }
  sub_1BB567F54(a1, v11, v8);
}

void sub_1BAC5D4A4(uint64_t a1, uint64_t a2)
{
  sub_1BAC5D3B4(a1, a2);
}

void sub_1BAC5D4B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

void sub_1BAC5D514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BAC5D674(v2, a2);
}

void sub_1BAC5D674(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12[5];
  uint64_t v13;

  v6 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  v12[3] = v6;
  v12[4] = *(_OWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v7;
  v8 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  v10 = v2[7];
  sub_1BAC5D1B4(a1, a2);
  if (!v3)
  {
    if ((v11 & 0x2000000000000000) != 0)
    {
      sub_1BA6466EC(a1, a2);
    }
    else
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BAC55380(a1, v12, v8, v9);
      sub_1BA7CCC64(v8, v9, v11);
    }
    sub_1BAC5DA9C(a1, (uint64_t)v12, v10);
  }
}

void sub_1BAC5D788(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1BAC5D4B8(a1, a2, *v2);
}

void sub_1BAC5D7A0()
{
  __asm { BR              X11 }
}

void sub_1BAC5D7FC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[144];

  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v3 = *(_QWORD *)(a1 + 40);
    v4 = *(_QWORD *)(v3 + 24);
    swift_retain();
    sub_1BB56837C(v2, (uint64_t)v5, v4);
    if (!v1)
      sub_1BAC58FE4(v2, (uint64_t)v5, *(void **)(v3 + 32));
    sub_1BA92F770((void *)v3, 1);
  }
}

void sub_1BAC5D914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[5];
  uint64_t v11;

  v4 = v3;
  v5 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v5;
  v10[4] = *(_OWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v6;
  if (*(_BYTE *)(v2 + 32) == 1)
  {
    v8 = *(_QWORD *)(v2 + 24);
    v9 = *(_QWORD *)(v8 + 24);
    swift_retain();
    sub_1BB56837C(a1, (uint64_t)v10, v9);
    if (!v4)
      sub_1BAC58FE4(a1, (uint64_t)v10, *(void **)(v8 + 32));
    sub_1BA92F770((void *)v8, 1);
  }
}

void sub_1BAC5D9C4()
{
  sub_1BAC5D7A0();
}

void sub_1BAC5D9D8(uint64_t a1, uint64_t a2)
{
  sub_1BAC5D2E4(a1, a2);
}

void sub_1BAC5D9EC(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  void **v8;
  uint64_t v9;
  _OWORD v10[5];
  uint64_t v11;

  v4 = v3;
  v5 = *(_OWORD *)(a2 + 48);
  v10[2] = *(_OWORD *)(a2 + 32);
  v10[3] = v5;
  v10[4] = *(_OWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v6;
  if (v2[8] == 1)
  {
    v8 = *(void ***)v2;
    v9 = *(_QWORD *)(*(_QWORD *)v2 + 24);
    swift_retain();
    sub_1BB56837C(a1, (uint64_t)v10, v9);
    if (!v4)
      sub_1BAC58FE4(a1, (uint64_t)v10, v8[4]);
    sub_1BA92F770(v8, 1);
  }
}

void sub_1BAC5DA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

void sub_1BAC5DAF4()
{
  sub_1BA75DD88();
}

void sub_1BAC5DB8C(uint64_t a1, uint64_t a2)
{
  sub_1BAC5D674(a1, a2);
}

void sub_1BAC5DBA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1BAC5DA9C(a1, a2, *v2);
}

void sub_1BAC5DBB8(uint64_t a1, uint64_t a2)
{
  sub_1BAC5D914(a1, a2);
}

void sub_1BAC5DBCC(uint64_t a1, uint64_t a2)
{
  sub_1BAC5D1B4(a1, a2);
}

uint64_t sub_1BAC5DBE0(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12[5];
  uint64_t v13;
  uint64_t v14;

  v4 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  v12[3] = v4;
  v12[4] = *(_OWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v6 = *v2;
  v7 = (unint64_t)*v2 >> 62;
  v12[0] = *(_OWORD *)a2;
  v12[1] = v5;
  if ((_DWORD)v7)
  {
    v9 = result;
    if ((_DWORD)v7 == 1)
    {
      v10 = *(_QWORD *)(v6 + 24);
      v14 = *(_QWORD *)(v6 + 16);
      swift_retain();
      swift_retain();
      sub_1BAC5DBE0(v9, a2);
      if (!v3)
      {
        v14 = v10;
        sub_1BAC5DBE0(v9, a2);
      }
      swift_release();
      return swift_release();
    }
    else
    {
      v11 = *(_QWORD *)(v6 + 24);
      v14 = *(_QWORD *)(v6 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BAC5DBE0(v9, a2);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BB571130(v9, v12, v11);
        swift_release();
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1BAC5DD44(uint64_t a1, uint64_t a2)
{
  return sub_1BAC578D0(a1, a2);
}

void sub_1BAC5DD58(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t (*v11)(void);
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE v15[144];
  uint64_t v16[14];
  unsigned __int8 v17;
  uint64_t v18;
  _OWORD v19[5];
  uint64_t v20;

  v6 = *(_OWORD *)(a2 + 48);
  v19[2] = *(_OWORD *)(a2 + 32);
  v19[3] = v6;
  v19[4] = *(_OWORD *)(a2 + 64);
  v20 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v19[0] = *(_OWORD *)a2;
  v19[1] = v7;
  v16[0] = v2[4];
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v8 = v2[6];
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v9; ++i)
      {
        v16[0] = *(_QWORD *)(v8 + 8 * i + 32);
        sub_1BA7196DC(v16[0]);
        sub_1BA6FA7EC();
        sub_1BA719340(v16[0]);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7])
      sub_1BA7E6864(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BB571EA4);
    v18 = v2[8];
    sub_1BAC5DBE0(a1, a2);
    v11 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C((uint64_t)(v2 + 9), (uint64_t)v15, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v15, (uint64_t)v16, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v11, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    if (sub_1BA896370(v16) != 1 && (v17 & 1) == 0)
      sub_1BA825F5C(v16[10], v16[11], v16[12], v16[13], v17);
    swift_beginAccess();
    v12 = v2[29];
    if (v12 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      sub_1BA67D3F4(v13);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v19, v13, v14);
      sub_1BA6EEDB4(v13);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1BAC5DFAC(uint64_t a1, uint64_t a2)
{
  sub_1BAC5DD58(a1, a2);
}

uint64_t sub_1BAC5DFCC(uint64_t a1, uint64_t a2)
{
  return sub_1BAC5DBE0(a1, a2);
}

void sub_1BAC5DFE0(uint64_t a1, uint64_t a2)
{
  sub_1BA7E6864(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BB571EA4);
}

uint64_t sub_1BAC5E008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[4];
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t);
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;

  v42 = a1;
  v35 = a3;
  v3 = *(_QWORD *)(a3 + 16);
  MEMORY[0x1E0C80A78](a1);
  v36 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = *v7;
  v9 = *((unsigned __int8 *)v7 + 8);
  v41 = *((unsigned __int8 *)v7 + 9);
  v44 = v7[2];
  v39 = v7[3];
  v40 = v7[4];
  v43 = v7[5];
  v10 = v7[7];
  v38 = v7[6];
  v11 = v7[8];
  v12 = v7[9];
  v13 = v7[10];
  v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16);
  v37 = v17;
  v34 = v15;
  ((void (*)(_BYTE *, uint64_t, uint64_t, double))v15)(&v27[-v16], v17, v3, v6);
  v18 = sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (swift_dynamicCast())
  {
    v29 = v18;
    v19 = *((_QWORD *)&v58 + 1);
    v33 = v59;
    __swift_project_boxed_opaque_existential_1(&v57, *((uint64_t *)&v58 + 1));
    v30 = v8;
    v45 = v8;
    v28 = v9;
    v46 = v9;
    v47 = v41;
    v48 = v44;
    v49 = v39;
    v50 = v40;
    v51 = v43;
    v52 = v38;
    v53 = v10;
    v54 = v11;
    v55 = v12;
    v56 = v13;
    v20 = v60;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v33 + 8))(v42, &v45, v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
    if (v20)
      return result;
    v31 = v13;
    v32 = v11;
    v33 = v10;
    v23 = v43;
    v22 = v44;
    v60 = 0;
    v8 = v30;
    LOBYTE(v9) = v28;
  }
  else
  {
    v31 = v13;
    v32 = v11;
    v33 = v10;
    v23 = v43;
    v22 = v44;
    v59 = 0;
    v57 = 0u;
    v58 = 0u;
    sub_1BA65DB80((uint64_t)&v57, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
  v34(v36, v37 + *(int *)(v35 + 52), v3);
  if (swift_dynamicCast())
  {
    v24 = v9;
    v25 = *((_QWORD *)&v58 + 1);
    v26 = v59;
    __swift_project_boxed_opaque_existential_1(&v57, *((uint64_t *)&v58 + 1));
    v45 = v8;
    v46 = v24;
    v47 = v41;
    v48 = v22;
    v49 = v39;
    v50 = v40;
    v51 = v23;
    v52 = v38;
    v53 = v33;
    v54 = v32;
    v55 = v12;
    v56 = v31;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v26 + 8))(v42, &v45, v25, v26);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
  }
  else
  {
    v59 = 0;
    v57 = 0u;
    v58 = 0u;
    return sub_1BA65DB80((uint64_t)&v57, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
}

void sub_1BAC5E3A4()
{
  type metadata accessor for FormatRange();
}

uint64_t sub_1BAC5E438(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)(v7 - 72) = v1;
  result = sub_1BAC5E008(v1, (uint64_t)&v18, a1);
  if (!v2)
  {
    v18 = v3;
    v19 = v10;
    v20 = v4;
    v21 = v5;
    v22 = v6;
    v23 = v17;
    v24 = v16;
    v25 = v15;
    v26 = v14;
    v27 = v13;
    v28 = v12;
    v29 = v11;
    return sub_1BAC5E008(*(_QWORD *)(v7 - 72), (uint64_t)&v18, a1);
  }
  return result;
}

void sub_1BAC5E4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  unint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  sub_1BA6FA63C();
  if (!v5)
  {
    swift_beginAccess();
    v1 = *(_QWORD *)(v0 + 40);
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v2; ++i)
      {
        v4 = *(_QWORD *)(v1 + 8 * i + 32);
        sub_1BA7196DC(v4);
        sub_1BA6FA7EC();
        sub_1BA719340(v4);
      }
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1BAC5E6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v17[5];
  __int128 v18[5];
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_OWORD *)(a2 + 48);
  v18[2] = *(_OWORD *)(a2 + 32);
  v18[3] = v9;
  v18[4] = *(_OWORD *)(a2 + 64);
  v19 = *(_QWORD *)(a2 + 80);
  v10 = *(_OWORD *)(a2 + 16);
  v18[0] = *(_OWORD *)a2;
  v18[1] = v10;
  swift_beginAccess();
  v11 = *(_QWORD *)(v2 + 88);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v17[0] = v2;
    v17[1] = v11;
    v13 = v11 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v14 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BA4C2DD8(v13, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v17[2] = *((_QWORD *)v8 + 2);
      swift_retain();
      sub_1BA711C44();
      if (v3)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v13 += v14;
      if (!--v12)
      {
        swift_bridgeObjectRelease_n();
        v2 = v17[0];
        goto LABEL_6;
      }
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    v15 = *(_QWORD *)(v2 + 96);
    swift_bridgeObjectRetain();
    sub_1BA6F9F38(v20, v18, v15);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAC5E86C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v32 = a1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *a2;
  v9 = *((unsigned __int8 *)a2 + 8);
  v29 = *((unsigned __int8 *)a2 + 9);
  v30 = v9;
  v28 = a2[2];
  v27 = a2[3];
  v26 = a2[4];
  v25 = a2[5];
  v24 = a2[6];
  v23 = a2[7];
  v10 = a2[9];
  v22 = a2[8];
  v11 = a2[10];
  swift_beginAccess();
  v12 = *(_QWORD *)(v2 + 40);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v19 = v2;
    v20 = v6;
    swift_bridgeObjectRetain_n();
    v21 = v12;
    v14 = v12 + 48;
    while (1)
    {
      v33 = *(_QWORD *)(v14 - 16);
      v34 = v31;
      v35 = v30;
      v36 = v29;
      v37 = v28;
      v38 = v27;
      v39 = v26;
      v40 = v25;
      v41 = v24;
      v42 = v23;
      v43 = v22;
      v44 = v10;
      v45 = v11;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA6F84BC();
      if (v3)
        break;
      v14 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v13)
      {
        swift_bridgeObjectRelease_n();
        v6 = v20;
        v2 = v19;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    result = *(_QWORD *)(v2 + 56);
    v16 = *(_QWORD *)(result + 16);
    if (v16)
    {
      v17 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v21 = *(_QWORD *)(v6 + 72);
      v20 = result;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v17, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v46 = *((_QWORD *)v8 + 2);
        v34 = v31;
        v35 = v30;
        v36 = v29;
        v37 = v28;
        v38 = v27;
        v39 = v26;
        v40 = v25;
        v41 = v24;
        v42 = v23;
        v43 = v22;
        v44 = v10;
        v45 = v11;
        swift_retain();
        sub_1BA711C44();
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v17 += v21;
        if (!--v16)
          return swift_bridgeObjectRelease_n();
      }
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BAC5EBFC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v34 = a1;
  v5 = type metadata accessor for FormatOptionsNodeStatement();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *a2;
  v9 = *((unsigned __int8 *)a2 + 8);
  v31 = *((unsigned __int8 *)a2 + 9);
  v32 = v9;
  v30 = a2[2];
  v29 = a2[3];
  v28 = a2[4];
  v27 = a2[5];
  v26 = a2[6];
  v25 = a2[7];
  v24 = a2[8];
  v10 = a2[9];
  v11 = a2[10];
  v23 = v10;
  swift_beginAccess();
  v12 = *(_QWORD *)(v2 + 32);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v21 = v2;
    v14 = v12 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v15 = *(_QWORD *)(v6 + 72);
    v22 = v12;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BA4C2DD8(v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      v35 = v33;
      v36 = v32;
      v37 = v31;
      v38 = v30;
      v39 = v29;
      v40 = v28;
      v41 = v27;
      v42 = v26;
      v43 = v25;
      v44 = v24;
      v45 = v23;
      v46 = v11;
      sub_1BA75B8E8(v34, (uint64_t)&v35);
      if (v3)
        break;
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      v14 += v15;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        v2 = v21;
        goto LABEL_6;
      }
    }
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    result = swift_beginAccess();
    v17 = *(_QWORD *)(v2 + 40);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain_n();
      v19 = v17 + 48;
      while (1)
      {
        v47 = *(_QWORD *)(v19 - 16);
        v35 = v33;
        v36 = v32;
        v37 = v31;
        v38 = v30;
        v39 = v29;
        v40 = v28;
        v41 = v27;
        v42 = v26;
        v43 = v25;
        v44 = v24;
        v45 = v23;
        v46 = v11;
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA6F84BC();
        if (v3)
          break;
        v19 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        if (!--v18)
          return swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
  }
  return result;
}

void sub_1BAC5EF58(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _OWORD v22[5];
  uint64_t v23;

  v4 = v2;
  v7 = *(_OWORD *)(a2 + 48);
  v22[2] = *(_OWORD *)(a2 + 32);
  v22[3] = v7;
  v22[4] = *(_OWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 16);
  v22[0] = *(_OWORD *)a2;
  v22[1] = v8;
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v9 = v2[6];
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v10; ++i)
      {
        v12 = *(_QWORD *)(v9 + 8 * i + 32);
        sub_1BA7196DC(v12);
        sub_1BA6FA7EC();
        sub_1BA719340(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7])
      sub_1BA7DFF54(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BA7E0184);
    v13 = v2[8];
    if (v13)
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v13 + 72);
      if (v14)
      {
        swift_bridgeObjectRetain();
        sub_1BA7C5A8C(a1, (uint64_t)v22, v14);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v15 = *(_QWORD *)(v13 + 88);
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain_n();
        v17 = (uint64_t *)(v15 + 72);
        do
        {
          v18 = *v17;
          if (*v17)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7C5A8C(a1, (uint64_t)v22, v18);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v17 += 7;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease_n();
      }
    }
    sub_1BAC60754();
    swift_beginAccess();
    v19 = v4[11];
    if (v19 >> 62 == 1)
    {
      v20 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      sub_1BA67D3F4(v20);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v22, v20, v21);
      sub_1BA6EEDB4(v20);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1BAC5F230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD v15[5];
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v6;
  v15[4] = *(_OWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v7;
  swift_beginAccess();
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v8 = *(_QWORD *)(v2 + 48);
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v9; ++i)
      {
        v11 = *(_QWORD *)(v8 + 8 * i + 32);
        sub_1BA7196DC(v11);
        sub_1BA6FA7EC();
        sub_1BA719340(v11);
      }
      swift_bridgeObjectRelease_n();
    }
    if (*(__int16 *)(v2 + 96) < 0)
      sub_1BA75DD88();
    swift_beginAccess();
    if (*(_QWORD *)(v2 + 112))
    {
      swift_retain();
      sub_1BAC60310(a1, a2);
      swift_release();
    }
    swift_beginAccess();
    swift_beginAccess();
    v12 = *(_QWORD *)(v2 + 184);
    if (v12 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      sub_1BA67D3F4(v13);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v15, v13, v14);
      sub_1BA6EEDB4(v13);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BAC5F47C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = a1;
  v28 = type metadata accessor for FormatOptionsNodeStatement();
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *a2;
  v8 = *((unsigned __int8 *)a2 + 8);
  v25 = *((unsigned __int8 *)a2 + 9);
  v26 = v8;
  v9 = a2[2];
  v23 = a2[3];
  v24 = v9;
  v10 = a2[4];
  v21 = a2[5];
  v22 = v10;
  v20 = a2[6];
  v19 = a2[7];
  v11 = a2[9];
  v18 = a2[8];
  v12 = a2[10];
  swift_beginAccess();
  result = *(_QWORD *)(v2 + 32);
  v14 = *(_QWORD *)(result + 16);
  if (v14)
  {
    v15 = result + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v16 = *(_QWORD *)(v5 + 72);
    v17 = *(_QWORD *)(v2 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v15, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      v29 = v27;
      v30 = v26;
      v31 = v25;
      v32 = v24;
      v33 = v23;
      v34 = v22;
      v35 = v21;
      v36 = v20;
      v37 = v19;
      v38 = v18;
      v39 = v11;
      v40 = v12;
      sub_1BA75B8E8(v41, (uint64_t)&v29);
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      if (v3)
        break;
      v15 += v16;
      --v14;
    }
    while (v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAC5F64C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD v17[5];
  uint64_t v18;

  v5 = *(_OWORD *)(a2 + 48);
  v17[2] = *(_OWORD *)(a2 + 32);
  v17[3] = v5;
  v17[4] = *(_OWORD *)(a2 + 64);
  v18 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v17[0] = *(_OWORD *)a2;
  v17[1] = v6;
  swift_beginAccess();
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v7 = v2[8];
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v8; ++i)
      {
        v10 = *(_QWORD *)(v7 + 8 * i + 32);
        sub_1BA7196DC(v10);
        sub_1BA6FA7EC();
        sub_1BA719340(v10);
      }
      swift_bridgeObjectRelease_n();
    }
    v11 = v2[9];
    if (v11 < 0)
    {
      v12 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BB573FE4(a1, (uint64_t)v17, v12, v13);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v14 = v2[20];
    if (v14 >> 62 == 1)
    {
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v14 + 24);
      sub_1BA67D3F4(v15);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v17, v15, v16);
      sub_1BA6EEDB4(v15);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1BAC5F85C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD v15[5];
  uint64_t v16;

  v4 = v2;
  v6 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v6;
  v15[4] = *(_OWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v7;
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v8 = *(_QWORD *)(v2 + 48);
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v9; ++i)
      {
        v11 = *(_QWORD *)(v8 + 8 * i + 32);
        sub_1BA7196DC(v11);
        sub_1BA6FA7EC();
        sub_1BA719340(v11);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v12 = *(_QWORD *)(v2 + 56);
    if (v12 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      sub_1BA67D3F4(v13);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v15, v13, v14);
      sub_1BA6EEDB4(v13);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    if (*(_QWORD *)(v4 + 96))
    {
      swift_retain();
      sub_1BAC60410(a1, (uint64_t)v15);
      swift_release();
    }
  }
}

void sub_1BAC5FA28()
{
  sub_1BA6F84BC();
}

void sub_1BAC5FA3C()
{
  uint64_t v1;

  v1 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

uint64_t sub_1BAC5FAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 240) = a5;
  *(_QWORD *)(v10 - 232) = a4;
  swift_retain();
  sub_1BA7274BC(v7, v8);
  return sub_1BA76B698(v6, a2, a3, *(_QWORD *)(v10 - 232), *(_QWORD *)(v10 - 240), v5, v9);
}

uint64_t sub_1BAC60240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 56);
  swift_bridgeObjectRetain();
  sub_1BA7F1120(a1, v4);
  result = swift_bridgeObjectRelease();
  if (!v2 && *(unsigned __int8 *)(v1 + 74) != 255)
  {
    v6 = *(unsigned __int16 *)(v1 + 72) | (*(unsigned __int8 *)(v1 + 74) << 16);
    if (v6 >= 0x20000
      && HIBYTE(*(_WORD *)(v1 + 72)) != 255
      && ~*(_BYTE *)(v1 + 72) == 0
      && (*(_WORD *)(v1 + 72) & 0x100) != 0)
    {
      return sub_1BA77A170(*(_QWORD *)(v1 + 64), v6, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    }
  }
  return result;
}

void sub_1BAC60310(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;
  uint64_t v11;

  v4 = v2;
  v6 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v6;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1BB570F58(a1, (uint64_t)v9, v8);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    if ((~*(_QWORD *)(v4 + 64) & 0xF000000000000007) != 0)
    {
      v11 = *(_QWORD *)(v4 + 64);
      sub_1BA7547AC();
    }
    if ((~*(_QWORD *)(v4 + 72) & 0xF000000000000007) != 0)
    {
      v11 = *(_QWORD *)(v4 + 72);
      sub_1BA7547AC();
    }
  }
}

void sub_1BAC60410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;
  uint64_t v11;

  v4 = v2;
  v6 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v6;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1BB570D88(a1, (uint64_t)v9, v8);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    if ((~*(_QWORD *)(v4 + 56) & 0xF000000000000007) != 0)
    {
      v11 = *(_QWORD *)(v4 + 56);
      sub_1BA7547AC();
    }
    if ((~*(_QWORD *)(v4 + 64) & 0xF000000000000007) != 0)
    {
      v11 = *(_QWORD *)(v4 + 64);
      sub_1BA7547AC();
    }
  }
}

void sub_1BAC60510()
{
  sub_1BAC5FA3C();
}

void sub_1BAC60524()
{
  sub_1BA6F9BF4();
}

void sub_1BAC6058C()
{
  sub_1BA711C44();
}

void sub_1BAC605F4()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
    sub_1BA711C44();
}

void sub_1BAC60668()
{
  uint64_t v0;

  if ((*(_WORD *)(v0 + 32) & 0x8001) == 0)
    sub_1BA711C44();
}

void sub_1BAC606E0()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
    sub_1BA711C44();
}

void sub_1BAC60754()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC607BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE v7[176];

  v5 = *(_QWORD **)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BB570958(v2, (uint64_t)v7, v5);
  if (!v1)
  {
    *(_QWORD *)(v3 - 56) = v4;
    ((void (*)(uint64_t, _BYTE *))sub_1BAC60754)(v2, v7);
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1BAC60928()
{
  sub_1BA711C44();
}

uint64_t sub_1BAC6093C(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC5EBFC(a1, a2);
}

void sub_1BAC6095C(uint64_t a1, uint64_t *a2)
{
  char v2;
  char v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v2 = *((_BYTE *)a2 + 8);
  v3 = *((_BYTE *)a2 + 9);
  v4 = a2[10];
  v7 = *a2;
  v8 = v2;
  v9 = v3;
  v5 = *((_OWORD *)a2 + 2);
  v10 = *((_OWORD *)a2 + 1);
  v11 = v5;
  v6 = *((_OWORD *)a2 + 4);
  v12 = *((_OWORD *)a2 + 3);
  v13 = v6;
  v14 = v4;
  sub_1BA75B8E8(a1, (uint64_t)&v7);
}

void sub_1BAC609C4(uint64_t a1, uint64_t a2)
{
  sub_1BA75B8E8(a1, a2);
}

uint64_t sub_1BAC609D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = v3;
  v39 = a1;
  v6 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  v10 = *((unsigned __int8 *)a2 + 8);
  v11 = *((unsigned __int8 *)a2 + 9);
  v13 = a2[2];
  v12 = a2[3];
  v15 = a2[4];
  v14 = a2[5];
  v17 = a2[6];
  v16 = a2[7];
  v19 = a2[8];
  v18 = a2[9];
  v20 = a2[10];
  v21 = *v2;
  v37 = v18;
  v38 = v12;
  v36 = v19;
  if (v21 < 0)
  {
    v27 = *(_QWORD *)(v21 + 24);
    v52 = *(_QWORD *)(v21 + 16);
    v32 = v9;
    v40 = v9;
    v33 = v10;
    v41 = v10;
    v31 = v11;
    v42 = v11;
    v34 = v13;
    v43 = v13;
    v44 = v38;
    v45 = v15;
    v46 = v14;
    v47 = v17;
    v48 = v16;
    v49 = v19;
    v50 = v18;
    v51 = v20;
    v28 = v52 & 0x7FFFFFFFFFFFFFFFLL;
    v29 = v27;
    swift_retain();
    v35 = v28;
    swift_retain();
    sub_1BAC609D8(v39, &v40);
    if (!v4)
    {
      v52 = v29;
      v40 = v32;
      v41 = v33;
      v42 = v31;
      v43 = v34;
      v44 = v38;
      v45 = v15;
      v46 = v14;
      v47 = v17;
      v48 = v16;
      v49 = v36;
      v50 = v37;
      v51 = v20;
      sub_1BAC609D8(v39, &v40);
    }
    swift_release();
    return swift_release();
  }
  else
  {
    v34 = v20;
    v35 = v3;
    v22 = v13;
    v23 = v11;
    v24 = v9;
    v25 = swift_projectBox();
    sub_1BA4C2DD8(v25, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    v40 = v24;
    v41 = v10;
    v42 = v23;
    v43 = v22;
    v44 = v38;
    v45 = v15;
    v46 = v14;
    v47 = v17;
    v48 = v16;
    v49 = v36;
    v50 = v37;
    v51 = v34;
    sub_1BA781078(v39);
    return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
  }
}

uint64_t sub_1BAC60BDC(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  __int128 v6;
  __int128 v7;
  uint64_t v9;
  char v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 9);
  v16 = *(_QWORD *)(v2 + 8);
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v12 = *(_OWORD *)(a2 + 16);
  v13 = v6;
  v7 = *(_OWORD *)(a2 + 64);
  v14 = *(_OWORD *)(a2 + 48);
  v15 = v7;
  return sub_1BAC609D8(a1, &v9);
}

uint64_t sub_1BAC60C44(unint64_t *a1, uint64_t *a2)
{
  return sub_1BAC609D8(a1, a2);
}

uint64_t sub_1BAC60C58(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a1;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = sub_1BB873A2C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - v10;
  v12 = *a2;
  v13 = *((unsigned __int8 *)a2 + 8);
  v29 = *((unsigned __int8 *)a2 + 9);
  v30 = v13;
  v14 = a2[2];
  v27 = a2[3];
  v28 = v14;
  v15 = a2[4];
  v25 = a2[5];
  v26 = v15;
  v24 = a2[6];
  v23 = a2[7];
  v22 = a2[8];
  v16 = a2[9];
  v17 = a2[10];
  v21 = v16;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, v3 + *(int *)(a3 + 52), v7, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v11, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
LABEL_6:
    v45 = 0;
    v43 = 0u;
    v44 = 0u;
    return sub_1BA65DB80((uint64_t)&v43, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (!swift_dynamicCast())
    goto LABEL_6;
  v18 = *((_QWORD *)&v44 + 1);
  if (*((_QWORD *)&v44 + 1))
  {
    v19 = v45;
    __swift_project_boxed_opaque_existential_1(&v43, *((uint64_t *)&v44 + 1));
    v31 = v12;
    v32 = v30;
    v33 = v29;
    v34 = v28;
    v35 = v27;
    v36 = v26;
    v37 = v25;
    v38 = v24;
    v39 = v23;
    v40 = v22;
    v41 = v21;
    v42 = v17;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v19 + 8))(v46, &v31, v18, v19);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }
  return sub_1BA65DB80((uint64_t)&v43, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
}

uint64_t sub_1BAC60E8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1BAC60C58(a1, a2, a3);
}

uint64_t sub_1BAC60EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC63DA0(a1, a2, a3, a4, (uint64_t (*)(void))sub_1BA7547AC, (uint64_t (*)(uint64_t, _OWORD *, uint64_t))sub_1BA754BF8);
}

void sub_1BAC60EC4()
{
  uint64_t v0;

  if (*(__int16 *)(v0 + 40) < 0)
    sub_1BA75DD88();
}

void sub_1BAC60F50(uint64_t a1, uint64_t a2)
{
  sub_1BAC5F230(a1, a2);
}

void sub_1BAC60F70()
{
  uint64_t v0;

  if (*(__int16 *)(v0 + 24) < 0)
    sub_1BA75DD88();
}

void sub_1BAC60FFC()
{
  sub_1BAC60EC4();
}

void sub_1BAC61010()
{
  sub_1BAC60F70();
}

void sub_1BAC61024(uint64_t a1, uint64_t a2)
{
  sub_1BAC60310(a1, a2);
}

void sub_1BAC61044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 32);
  if ((~*(_QWORD *)(v0 + 24) & 0xF000000000000007) == 0 || (sub_1BA7547AC(), !v1))
  {
    if ((~v2 & 0xF000000000000007) != 0)
      sub_1BA7547AC();
  }
}

void sub_1BAC61144()
{
  sub_1BAC61044();
}

void sub_1BAC61158(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t (*v13)(_QWORD);
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v15 = a1;
  sub_1BA74E17C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA74E17C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont);
  MEMORY[0x1E0C80A78](v5);
  sub_1BA74E17C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA74E17C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent);
  MEMORY[0x1E0C80A78](v7);
  sub_1BA74E17C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = a2[3];
  v18 = a2[2];
  v19 = v11;
  v20 = a2[4];
  v21 = *((_QWORD *)a2 + 10);
  v12 = a2[1];
  v16 = *a2;
  v17 = v12;
  sub_1BA4C2DD8(v2, (uint64_t)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  v14 = (char *)sub_1BAC61380 + 4 * byte_1BB8A655A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAC61380()
{
  uint64_t v0;

  return sub_1BA4A2E80(v0, type metadata accessor for FormatPropertyDefinition);
}

void sub_1BAC61670(uint64_t a1, __int128 *a2)
{
  sub_1BAC61158(a1, a2);
}

void sub_1BAC61684(uint64_t a1, uint64_t a2)
{
  sub_1BAC5F64C(a1, a2);
}

uint64_t sub_1BAC616A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC616C0(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *, uint64_t, uint64_t))sub_1BB573FE4);
}

uint64_t sub_1BAC616C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _OWORD *, uint64_t, uint64_t))
{
  uint64_t *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[5];
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v6;
  v13[4] = *(_OWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v7;
  v8 = *v5;
  if (*v5 < 0)
  {
    v10 = result;
    v11 = *(_QWORD *)(v8 + 16);
    v12 = *(_QWORD *)(v8 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    a5(v10, v13, v11, v12);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAC6176C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[5];
  uint64_t v7;

  v3 = *(_OWORD *)(a2 + 48);
  v6[2] = *(_OWORD *)(a2 + 32);
  v6[3] = v3;
  v6[4] = *(_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v6[0] = *(_OWORD *)a2;
  v6[1] = v4;
  return sub_1BB568ECC(a1, (uint64_t)v6, *(_QWORD *)(v2 + 112));
}

uint64_t sub_1BAC617B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC5E008(a1, a2, a3);
}

uint64_t sub_1BAC617C4(uint64_t a1, uint64_t *a2)
{
  return sub_1BA728F9C(a1, a2);
}

uint64_t sub_1BAC617E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v9[5];
  uint64_t v10;

  v4 = *v2;
  v5 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v5;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v6;
  swift_beginAccess();
  v7 = *(_QWORD *)(v4 + 48);
  swift_bridgeObjectRetain();
  sub_1BB56464C(a1, (uint64_t)v9, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC6187C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC56F5C(a1, a2, a3);
}

uint64_t sub_1BAC61890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = MEMORY[0x1E0C80A78](a1);
  v8 = *v7;
  v9 = *((_BYTE *)v7 + 8);
  v10 = *((_BYTE *)v7 + 9);
  v12 = v7[2];
  v11 = v7[3];
  v13 = v7[4];
  v25 = v7[5];
  v26 = v13;
  v14 = v7[6];
  v23 = v7[7];
  v24 = v14;
  v22 = v7[8];
  v21 = v7[9];
  v20 = v7[10];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v3 + *(int *)(v15 + 36), v4, v5);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
  if (swift_dynamicCast())
  {
    v17 = *((_QWORD *)&v40 + 1);
    v18 = v41;
    __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
    v27 = v8;
    v28 = v9;
    v29 = v10;
    v30 = v12;
    v31 = v11;
    v32 = v26;
    v33 = v25;
    v34 = v24;
    v35 = v23;
    v36 = v22;
    v37 = v21;
    v38 = v20;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v18 + 8))(v42, &v27, v17, v18);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  }
  else
  {
    v41 = 0;
    v39 = 0u;
    v40 = 0u;
    return sub_1BA65DB80((uint64_t)&v39, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
  }
}

uint64_t sub_1BAC61A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC61890(a1, a2, a3);
}

void sub_1BAC61A64()
{
  sub_1BA756C74();
}

void sub_1BAC61A78(uint64_t a1, uint64_t a2)
{
  sub_1BA7F5D6C(a1, a2);
}

void sub_1BAC61A8C()
{
  sub_1BA767E9C();
}

void sub_1BAC61AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 8);
  sub_1BA6FA63C();
  if (!v1 && (~v2 & 0xF000000000000007) != 0)
    sub_1BA6FA63C();
}

void sub_1BAC61B9C()
{
  sub_1BA6FA63C();
}

uint64_t sub_1BAC61BB0(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC5E86C(a1, a2);
}

uint64_t sub_1BAC61BD0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[5];
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_OWORD *)(a2 + 48);
  v25[2] = *(_OWORD *)(a2 + 32);
  v25[3] = v9;
  v25[4] = *(_OWORD *)(a2 + 64);
  v26 = *(_QWORD *)(a2 + 80);
  v10 = *(_OWORD *)(a2 + 16);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v10;
  swift_beginAccess();
  v11 = v2[8];
  v12 = *(_QWORD *)(v11 + 16);
  v22 = v2;
  if (v12)
  {
    v20 = v6;
    swift_bridgeObjectRetain_n();
    v21 = v11;
    v13 = v11 + 48;
    while (1)
    {
      v24 = *(_QWORD *)(v13 - 16);
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA6F84BC();
      if (v3)
        break;
      v13 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v12)
      {
        swift_bridgeObjectRelease_n();
        v2 = v22;
        v6 = v20;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    v14 = v2[9];
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = v14 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v17 = *(_QWORD *)(v6 + 72);
      v21 = v2[9];
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v16, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v23 = *((_QWORD *)v8 + 2);
        swift_retain();
        sub_1BA711C44();
        if (v3)
          break;
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v16 += v17;
        if (!--v15)
        {
          swift_bridgeObjectRelease_n();
          v2 = v22;
          goto LABEL_11;
        }
      }
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      swift_beginAccess();
      v18 = v2[11];
      swift_bridgeObjectRetain();
      sub_1BA6FEDF0(v27, (uint64_t)v25, v18);
      return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BAC61E8C(uint64_t a1, uint64_t a2)
{
  return sub_1BAC61BD0(a1, a2);
}

uint64_t sub_1BAC61EAC(uint64_t a1, uint64_t a2)
{
  return sub_1BAC5E6AC(a1, a2);
}

uint64_t sub_1BAC61ECC(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC63448(a1, a2, (uint64_t (*)(uint64_t, uint64_t *))sub_1BA7547AC);
}

uint64_t sub_1BAC61EE8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v3 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v3;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v4;
  if (*(_BYTE *)(v2 + 24) == 1)
  {
    v5 = result;
    v8 = v2 + 8;
    v6 = *(_QWORD *)(v2 + 8);
    v7 = *(_QWORD *)(v8 + 8);
    sub_1BA896BB8(v6, v7, 1);
    sub_1BB573E70(v5, (uint64_t)v9, v6, v7);
    return sub_1BA896BE0(v6, v7, 1);
  }
  return result;
}

uint64_t sub_1BAC61F88(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  _OWORD v5[5];
  uint64_t v6;

  v3 = *(_OWORD *)(a2 + 48);
  v5[2] = *(_OWORD *)(a2 + 32);
  v5[3] = v3;
  v5[4] = *(_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v4;
  if (*(_BYTE *)(v2 + 16) == 1)
    return sub_1BB573E70(result, (uint64_t)v5, *(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  return result;
}

void sub_1BAC61FD8()
{
  sub_1BAC5E4D0();
}

void sub_1BAC61FF8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 64) == 1)
    sub_1BA756470();
  else
    sub_1BA7547AC();
}

void sub_1BAC620C0()
{
  sub_1BAC57604();
}

void sub_1BAC620D4()
{
  sub_1BAC61FF8();
}

void sub_1BAC620E8(uint64_t a1, uint64_t a2)
{
  sub_1BAC5F85C(a1, a2);
}

void sub_1BAC62108(uint64_t a1, uint64_t a2)
{
  sub_1BAC60410(a1, a2);
}

void sub_1BAC62128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 24);
  if ((~*(_QWORD *)(v0 + 16) & 0xF000000000000007) == 0 || (sub_1BA7547AC(), !v1))
  {
    if ((~v2 & 0xF000000000000007) != 0)
      sub_1BA7547AC();
  }
}

void sub_1BAC62228()
{
  sub_1BAC62128();
}

void sub_1BAC6223C()
{
  sub_1BAC61AA0();
}

void sub_1BAC62250()
{
  sub_1BAC5937C();
}

void sub_1BAC62264()
{
  sub_1BAC5A8D8();
}

uint64_t sub_1BAC62278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 48) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 32);
    v1 = *(_QWORD *)(v0 + 40);
    v5 = v0 + 16;
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v5 + 8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAC551C0();
    return sub_1BA6C1F54(v3, v4, v2, v1, 0);
  }
  return result;
}

uint64_t sub_1BAC62338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v1 = *(_QWORD *)(v0 + 24);
    v5 = v0;
    v3 = *(_QWORD *)v0;
    v4 = *(_QWORD *)(v5 + 8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAC551C0();
    return sub_1BA6C1F54(v3, v4, v2, v1, 0);
  }
  return result;
}

void sub_1BAC623F8(uint64_t a1, uint64_t a2)
{
  sub_1BA7F86A4(a1, a2);
}

uint64_t sub_1BAC62418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _OWORD v8[5];
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v4;
  v8[4] = *(_OWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v5;
  v6 = *(_QWORD *)(v2 + 32);
  swift_bridgeObjectRetain();
  sub_1BB56464C(a1, (uint64_t)v8, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC62488(uint64_t a1, __int128 *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _OWORD v50[5];
  uint64_t v51;
  uint64_t v52;

  v4 = v3;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2[3];
  v50[2] = a2[2];
  v50[3] = v11;
  v50[4] = a2[4];
  v51 = *((_QWORD *)a2 + 10);
  v12 = *a2;
  v13 = a2[1];
  v39 = a2;
  v50[0] = v12;
  v50[1] = v13;
  v15 = v2[6];
  v14 = v2[7];
  v16 = v2[8];
  v17 = *(_QWORD *)(v15 + 16);
  if (v17)
  {
    v33 = v14;
    v34 = v8;
    v36 = v16;
    v35 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    v38 = a1;
    v52 = v3;
    swift_bridgeObjectRetain_n();
    v37 = v15;
    v18 = (uint64_t *)(v15 + 48);
    while (1)
    {
      v40 = v17;
      v20 = *(v18 - 2);
      v19 = *(v18 - 1);
      v21 = *v18;
      v22 = v18[1];
      v24 = v18[2];
      v23 = v18[3];
      v26 = v18[4];
      v25 = v18[5];
      v42 = v20;
      v43 = v19;
      v44 = v21;
      v45 = v22;
      v46 = v24;
      v47 = v23;
      v48 = v26;
      v49 = v25;
      v41 = v25;
      sub_1BA76B724(v20, v19, v21, v22, v24, v23, v26);
      v27 = v52;
      sub_1BAC5FA3C();
      v52 = v27;
      if (v27)
        break;
      v18 += 8;
      sub_1BA76B698(v20, v19, v21, v22, v24, v23, v26);
      v17 = v40 - 1;
      if (v40 == 1)
      {
        swift_bridgeObjectRelease_n();
        v4 = v52;
        a1 = v38;
        v10 = v35;
        v16 = v36;
        v8 = v34;
        v14 = v33;
        goto LABEL_6;
      }
    }
    sub_1BA76B698(v20, v19, v21, v22, v24, v23, v26);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRetain();
    sub_1BA6FEDF0(a1, (uint64_t)v50, v14);
    result = swift_bridgeObjectRelease();
    if (!v4)
    {
      v29 = *(_QWORD *)(v16 + 16);
      if (v29)
      {
        v30 = v16 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v31 = *(_QWORD *)(v8 + 72);
        v36 = v16;
        swift_bridgeObjectRetain_n();
        do
        {
          sub_1BA4C2DD8(v30, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v42 = *((_QWORD *)v10 + 2);
          swift_retain();
          sub_1BA711C44();
          swift_release();
          sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v30 += v31;
          --v29;
        }
        while (v29);
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  return result;
}

uint64_t sub_1BAC6278C(uint64_t a1, __int128 *a2)
{
  return sub_1BAC62488(a1, a2);
}

void sub_1BAC627A0(unint64_t a1, uint64_t *a2)
{
  sub_1BAC56E7C(a1, a2);
}

uint64_t sub_1BAC627B4(uint64_t a1, __int128 *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _OWORD v55[5];
  uint64_t v56;
  __int128 *v57;

  v6 = type metadata accessor for FormatOption();
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2[2];
  v10 = a2[4];
  v55[3] = a2[3];
  v55[4] = v10;
  v56 = *((_QWORD *)a2 + 10);
  v11 = *a2;
  v12 = a2[1];
  v57 = a2;
  v55[0] = v11;
  v55[1] = v12;
  v55[2] = v9;
  v14 = v2[6];
  v13 = v2[7];
  v15 = v2[8];
  v42 = v2[11];
  v39 = v2[12];
  v16 = *(_QWORD *)(v14 + 16);
  if (v16)
  {
    v46 = v13;
    v41 = v15;
    v40 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v17 = a1;
    swift_bridgeObjectRetain_n();
    v18 = v14 + 48;
    while (1)
    {
      v47 = *(_QWORD *)(v18 - 16);
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA6F84BC();
      if (v3)
        break;
      v18 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v16)
      {
        swift_bridgeObjectRelease_n();
        a1 = v17;
        v8 = v40;
        v15 = v41;
        v13 = v46;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    if (v13)
    {
      swift_beginAccess();
      v19 = *(_QWORD *)(v13 + 56);
      swift_bridgeObjectRetain();
      sub_1BA7F1120(a1, v19);
      result = swift_bridgeObjectRelease();
      if (v3)
        return result;
      if (*(unsigned __int8 *)(v13 + 74) != 255)
      {
        v21 = *(unsigned __int16 *)(v13 + 72) | (*(unsigned __int8 *)(v13 + 74) << 16);
        if (v21 >= 0x20000
          && HIBYTE(*(_WORD *)(v13 + 72)) != 255
          && *(_WORD *)(v13 + 72) == 0xFF
          && (*(_WORD *)(v13 + 72) & 0x100) != 0)
        {
          sub_1BA77A170(*(_QWORD *)(v13 + 64), v21, 2, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
        }
      }
    }
    v46 = v3;
    v22 = *(_QWORD *)(v15 + 16);
    if (v22)
    {
      v40 = v8;
      v43 = a1;
      swift_bridgeObjectRetain_n();
      v41 = v15;
      v23 = (uint64_t *)(v15 + 48);
      while (1)
      {
        v44 = v22;
        v25 = *(v23 - 2);
        v24 = *(v23 - 1);
        v26 = *v23;
        v27 = v23[1];
        v29 = v23[2];
        v28 = v23[3];
        v31 = v23[4];
        v30 = v23[5];
        v47 = v25;
        v48 = v24;
        v49 = v26;
        v50 = v27;
        v51 = v29;
        v52 = v28;
        v53 = v31;
        v54 = v30;
        v45 = v30;
        sub_1BA76B724(v25, v24, v26, v27, v29, v28, v31);
        v32 = v46;
        sub_1BAC5FA3C();
        v46 = v32;
        if (v32)
          break;
        v23 += 8;
        sub_1BA76B698(v25, v24, v26, v27, v29, v28, v31);
        v22 = v44 - 1;
        if (v44 == 1)
        {
          swift_bridgeObjectRelease_n();
          a1 = v43;
          v8 = v40;
          goto LABEL_19;
        }
      }
      sub_1BA76B698(v25, v24, v26, v27, v29, v28, v31);
    }
    else
    {
LABEL_19:
      v33 = *(_QWORD *)(v42 + 16);
      if (!v33)
      {
LABEL_24:
        v37 = v39;
        swift_bridgeObjectRetain();
        sub_1BA6FEDF0(a1, (uint64_t)v55, v37);
        return swift_bridgeObjectRelease();
      }
      v34 = v42 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
      v35 = *(_QWORD *)(v38 + 72);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v34, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v47 = *((_QWORD *)v8 + 2);
        swift_retain();
        v36 = v46;
        sub_1BA711C44();
        v46 = v36;
        if (v36)
          break;
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v34 += v35;
        if (!--v33)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_24;
        }
      }
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    }
    return swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1BAC62C60(uint64_t a1, __int128 *a2)
{
  return sub_1BAC627B4(a1, a2);
}

void sub_1BAC62C74(uint64_t a1, uint64_t a2)
{
  sub_1BA7583D4(a1, a2);
}

uint64_t sub_1BAC62C94()
{
  return sub_1BAC59D14();
}

uint64_t sub_1BAC62CA8(uint64_t a1)
{
  return sub_1BAC60240(a1);
}

void sub_1BAC62CC8()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;

  if (*(unsigned __int8 *)(v0 + 34) != 255)
  {
    v1 = *(unsigned __int16 *)(v0 + 32) | (*(unsigned __int8 *)(v0 + 34) << 16);
    if (!WORD1(v1) || (WORD1(v1) != 1 ? (v2 = (~(_DWORD)v1 & 0xFF00) == 0) : (v2 = 0), v2))
      sub_1BA771864(*(_QWORD *)(v0 + 24), v1);
  }
}

void sub_1BAC62D24()
{
  sub_1BAC62CC8();
}

uint64_t sub_1BAC62D38(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC55994(a1, a2, a3, a4);
}

void sub_1BAC62D4C()
{
  sub_1BAC60524();
}

uint64_t sub_1BAC62D60(uint64_t a1, uint64_t *a2)
{
  return sub_1BA6F8088(a1, a2);
}

void sub_1BAC62D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA6F9BF4();
  if (!v0)
  {
    swift_beginAccess();
    v1 = *(_QWORD *)(v4 + 24);
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain_n();
      v3 = v1 + 48;
      do
      {
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA6F84BC();
        v3 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1BAC62F64()
{
  sub_1BAC62D80();
}

uint64_t sub_1BAC62F84(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v9[5];
  uint64_t v10;

  v4 = *v2;
  v5 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v5;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v6;
  swift_beginAccess();
  v7 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain();
  sub_1BB56464C(a1, (uint64_t)v9, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAC6301C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC56978(a1, a2, a3, a4);
}

void sub_1BAC63030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = *(_QWORD *)(a3 + 16);
  v36 = *(_QWORD *)(v55 - 8);
  v37 = a3;
  MEMORY[0x1E0C80A78](a1);
  v38 = v3;
  v39 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v6;
  v8 = *((unsigned __int8 *)v6 + 8);
  v9 = *((unsigned __int8 *)v6 + 9);
  v10 = v6[2];
  v11 = v6[3];
  v13 = v6[4];
  v12 = v6[5];
  v14 = v6[6];
  v15 = v6[7];
  v17 = v6[8];
  v16 = v6[9];
  v18 = v6[10];
  *(_QWORD *)&v40 = *(_QWORD *)v3;
  v34 = v7;
  v43 = v7;
  v31 = v8;
  v44 = v8;
  v33 = v9;
  v45 = v9;
  v32 = v10;
  v46 = v10;
  v47 = v11;
  v48 = v13;
  v49 = v12;
  v50 = v14;
  v51 = v15;
  v52 = v17;
  v53 = v16;
  v54 = v18;
  v35 = v19;
  sub_1BA6F9BF4();
  if (!v4)
  {
    v23 = v18;
    v24 = v16;
    v25 = v17;
    v26 = v15;
    v27 = v14;
    v28 = v12;
    v29 = v13;
    v30 = v11;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v39, &v38[*(int *)(v37 + 36)], v55);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2B0E40);
    if (swift_dynamicCast())
    {
      v20 = *((_QWORD *)&v41 + 1);
      v21 = v42;
      __swift_project_boxed_opaque_existential_1(&v40, *((uint64_t *)&v41 + 1));
      v43 = v34;
      v44 = v31;
      v45 = v33;
      v46 = v32;
      v47 = v30;
      v48 = v29;
      v49 = v28;
      v50 = v27;
      v51 = v26;
      v52 = v25;
      v53 = v24;
      v54 = v23;
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v21 + 8))(v35, &v43, v20, v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    }
    else
    {
      v42 = 0;
      v40 = 0u;
      v41 = 0u;
      sub_1BA65DB80((uint64_t)&v40, &qword_1EF2B0E48, (unint64_t *)&qword_1EF2B0E40);
    }
  }
}

void sub_1BAC632C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BAC63030(a1, a2, a3);
}

void sub_1BAC632D4()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 17))
    sub_1BA754E6C();
}

void sub_1BAC63348()
{
  sub_1BA754E6C();
}

void sub_1BAC633B0()
{
  sub_1BAC632D4();
}

uint64_t sub_1BAC633C4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC633E0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t *))sub_1BA754E6C);
}

uint64_t sub_1BAC633E0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t *))
{
  uint64_t *v5;
  uint64_t v6;
  char v7;
  char v8;
  __int128 v9;
  __int128 v10;
  uint64_t v12;
  char v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *((_BYTE *)a2 + 9);
  v19 = *v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  v9 = *((_OWORD *)a2 + 2);
  v15 = *((_OWORD *)a2 + 1);
  v16 = v9;
  v10 = *((_OWORD *)a2 + 4);
  v17 = *((_OWORD *)a2 + 3);
  v18 = v10;
  return a5(a1, &v12);
}

uint64_t sub_1BAC63448(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t *))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *a2;
  v6 = *((_BYTE *)a2 + 8);
  v7 = *((_BYTE *)a2 + 9);
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  v11 = a2[5];
  v12 = a2[6];
  v13 = a2[7];
  v14 = a2[8];
  v15 = a2[9];
  v16 = a2[10];
  v18 = v3[1];
  v37 = *v3;
  v25 = v5;
  v19 = v6;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v9;
  v30 = v10;
  v31 = v11;
  v32 = v12;
  v33 = v13;
  v21 = v15;
  v22 = v14;
  v34 = v14;
  v35 = v15;
  v20 = v16;
  v36 = v16;
  result = a3(a1, &v25);
  if (!v4)
  {
    v37 = v18;
    v25 = v5;
    v26 = v19;
    v27 = v7;
    v28 = v8;
    v29 = v9;
    v30 = v10;
    v31 = v11;
    v32 = v12;
    v33 = v13;
    v34 = v22;
    v35 = v21;
    v36 = v20;
    return a3(a1, &v25);
  }
  return result;
}

void sub_1BAC63538()
{
  __asm { BR              X11 }
}

uint64_t sub_1BAC635A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    while (1)
    {
      swift_retain();
      sub_1BA7547AC();
      if (v1)
        break;
      ++v3;
      swift_release();
      if (v2 == v3)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1BAC636C8()
{
  sub_1BA73D0A8();
}

void sub_1BAC636DC()
{
  sub_1BAC63538();
}

void sub_1BAC636F0(uint64_t a1, uint64_t a2)
{
  sub_1BA6466EC(a1, a2);
}

void sub_1BAC63704()
{
  _QWORD *v0;

  if ((~*v0 & 0xF000000000000007) != 0)
    sub_1BA645F4C();
}

void sub_1BAC6377C()
{
  sub_1BA754E6C();
}

void sub_1BAC637E4()
{
  sub_1BAC6377C();
}

void sub_1BAC637F8(uint64_t a1, uint64_t *a2)
{
  char v2;
  char v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v2 = *((_BYTE *)a2 + 8);
  v3 = *((_BYTE *)a2 + 9);
  v4 = a2[10];
  v7 = *a2;
  v8 = v2;
  v9 = v3;
  v5 = *((_OWORD *)a2 + 2);
  v10 = *((_OWORD *)a2 + 1);
  v11 = v5;
  v6 = *((_OWORD *)a2 + 4);
  v12 = *((_OWORD *)a2 + 3);
  v13 = v6;
  v14 = v4;
  sub_1BA7538E0(a1, (uint64_t)&v7);
}

void sub_1BAC6385C(uint64_t a1, uint64_t *a2)
{
  char v2;
  char v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v2 = *((_BYTE *)a2 + 8);
  v3 = *((_BYTE *)a2 + 9);
  v4 = a2[10];
  v7 = *a2;
  v8 = v2;
  v9 = v3;
  v5 = *((_OWORD *)a2 + 2);
  v10 = *((_OWORD *)a2 + 1);
  v11 = v5;
  v6 = *((_OWORD *)a2 + 4);
  v12 = *((_OWORD *)a2 + 3);
  v13 = v6;
  v14 = v4;
  sub_1BA7538E0(a1, (uint64_t)&v7);
}

void sub_1BAC638C0(uint64_t a1, uint64_t *a2)
{
  char v2;
  char v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v2 = *((_BYTE *)a2 + 8);
  v3 = *((_BYTE *)a2 + 9);
  v4 = a2[10];
  v7 = *a2;
  v8 = v2;
  v9 = v3;
  v5 = *((_OWORD *)a2 + 2);
  v10 = *((_OWORD *)a2 + 1);
  v11 = v5;
  v6 = *((_OWORD *)a2 + 4);
  v12 = *((_OWORD *)a2 + 3);
  v13 = v6;
  v14 = v4;
  sub_1BA7538E0(a1, (uint64_t)&v7);
}

void sub_1BAC63924(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8[5];
  uint64_t v9;
  uint64_t v10;

  v5 = *(_OWORD *)(a2 + 48);
  v8[2] = *(_OWORD *)(a2 + 32);
  v8[3] = v5;
  v8[4] = *(_OWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  v7 = v2[1];
  v10 = *v2;
  sub_1BA645F4C();
  if (!v3)
    sub_1BA64638C(a1, v8, v7);
}

void sub_1BAC63994(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *((_BYTE *)a2 + 9);
  v15 = *v2;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v6 = *((_OWORD *)a2 + 2);
  v11 = *((_OWORD *)a2 + 1);
  v12 = v6;
  v7 = *((_OWORD *)a2 + 4);
  v13 = *((_OWORD *)a2 + 3);
  v14 = v7;
  sub_1BA6466EC(a1, (uint64_t)&v8);
}

void sub_1BAC639FC()
{
  sub_1BA645F4C();
}

uint64_t sub_1BAC63A64(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  __int128 v6;
  __int128 v7;
  uint64_t v9;
  char v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 9);
  v16 = *v2;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v12 = *(_OWORD *)(a2 + 16);
  v13 = v6;
  v7 = *(_OWORD *)(a2 + 64);
  v14 = *(_OWORD *)(a2 + 48);
  v15 = v7;
  return sub_1BA7A9570(a1, &v9);
}

void sub_1BAC63AD4()
{
  sub_1BA645F4C();
}

void sub_1BAC63AE8(uint64_t a1, uint64_t a2)
{
  sub_1BA7535C8(a1, a2);
}

void sub_1BAC63B08()
{
  uint64_t v0;

  sub_1BA645F4C();
  if (!v0)
    sub_1BA768A3C();
}

void sub_1BAC63BF0()
{
  sub_1BAC63B08();
}

void sub_1BAC63C04()
{
  uint64_t v0;

  sub_1BA768A3C();
  if (!v0)
    sub_1BA768A3C();
}

void sub_1BAC63CEC()
{
  sub_1BA768A3C();
}

void sub_1BAC63D00()
{
  sub_1BA768A3C();
}

void sub_1BAC63D68()
{
  sub_1BAC63C04();
}

uint64_t sub_1BAC63D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAC63DA0(a1, a2, a3, a4, (uint64_t (*)(void))sub_1BA645F4C, sub_1BA64638C);
}

uint64_t sub_1BAC63DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(uint64_t, _OWORD *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t result;
  _OWORD v14[5];
  uint64_t v15;

  v10 = *(_OWORD *)(a2 + 48);
  v14[2] = *(_OWORD *)(a2 + 32);
  v14[3] = v10;
  v14[4] = *(_OWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 80);
  v11 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v11;
  v12 = *(_QWORD *)(v6 + 8);
  result = a5();
  if (!v7)
    return a6(a1, v14, v12);
  return result;
}

void sub_1BAC63E14(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *((_BYTE *)a2 + 8);
  v5 = *((_BYTE *)a2 + 9);
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v12 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = *(_QWORD *)(v2 + 16);
  v20 = *(_QWORD *)(v2 + 24);
  v21 = *a2;
  v33 = v15;
  v17 = v5;
  v18 = v4;
  v22 = v4;
  v23 = v5;
  v16 = v6;
  v24 = v6;
  v25 = v7;
  v26 = v8;
  v27 = v9;
  v28 = v10;
  v29 = v11;
  v30 = v12;
  v31 = v13;
  v32 = v14;
  sub_1BA645F4C();
  if (!v3)
  {
    if (v20)
    {
      v22 = v18;
      v23 = v17;
      v24 = v16;
      v25 = v7;
      v26 = v8;
      v27 = v9;
      v28 = v10;
      v29 = v11;
      v30 = v12;
      v31 = v13;
      v32 = v14;
      sub_1BA7538E0(a1, (uint64_t)&v21);
    }
  }
}

void sub_1BAC63F04(uint64_t a1, uint64_t *a2)
{
  sub_1BAC63E14(a1, a2);
}

void sub_1BAC63F18(uint64_t a1, uint64_t a2)
{
  sub_1BA7538E0(a1, a2);
}

void sub_1BAC63F38(uint64_t a1, uint64_t *a2)
{
  sub_1BA753EF0(a1, a2);
}

void sub_1BAC63F4C()
{
  sub_1BA755B9C();
}

void sub_1BAC63F60()
{
  sub_1BAC5E3A4();
}

void sub_1BAC63F74(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  char v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v67 = a1;
  v5 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v2 + 48);
  if (v9 >> 6)
  {
    v10 = *a2;
    v11 = *((unsigned __int8 *)a2 + 8);
    v51 = *((unsigned __int8 *)a2 + 9);
    v52 = v11;
    v13 = a2[2];
    v12 = a2[3];
    v49 = a2[4];
    v50 = v12;
    v14 = a2[5];
    v47 = a2[6];
    v48 = v14;
    v46 = a2[7];
    v45 = a2[8];
    v44 = a2[9];
    v43 = a2[10];
    v15 = *(_QWORD *)v2;
    v16 = *(_QWORD *)(v2 + 8);
    v17 = *(_QWORD *)(v2 + 24);
    v42 = *(_QWORD *)(v2 + 16);
    v19 = *(_QWORD *)(v2 + 32);
    v18 = *(_QWORD *)(v2 + 40);
    if (v9 >> 6 == 1)
    {
      if ((v9 & 1) != 0)
        return;
      v20 = v42;
      v21 = *(_QWORD *)(v42 + 32);
      v22 = *(_BYTE *)(v42 + 40);
      v23 = *(_BYTE *)(v42 + 41);
      v53 = *(_OWORD *)(v42 + 16);
      v54 = v21;
      v55 = v22;
      v56 = v23;
      *(_QWORD *)&v57 = v10;
      BYTE8(v57) = v52;
      BYTE9(v57) = v51;
      v58 = v13;
      v59 = v50;
      v60 = v49;
      v61 = v48;
      v62 = v47;
      v63 = v46;
      v64 = v45;
      v65 = v44;
      v66 = v43;
      v24 = v15;
      v25 = v16;
      sub_1BA709DE8(v15, v16, v42, v17, v19, v18, v9);
      sub_1BA7261E0(v20, v17, v19, v18, 0);
      sub_1BA75DD88();
      sub_1BA6C1F54(v20, v17, v19, v18, 0);
      v26 = v24;
      v27 = v25;
      v28 = v20;
      v29 = v17;
      v30 = v19;
      v31 = v18;
      v32 = v9;
    }
    else
    {
      v41 = v17;
      v33 = *(_QWORD *)(v15 + 16);
      if (!v33)
        return;
      v37 = v16;
      v38 = v19;
      v39 = v18;
      v40 = v9;
      v34 = v15 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v35 = *(_QWORD *)(v6 + 72);
      v36 = v15;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BA4C2DD8(v34, (uint64_t)v8, type metadata accessor for FormatPropertyDefinition);
        *(_QWORD *)&v57 = v10;
        BYTE8(v57) = v52;
        BYTE9(v57) = v51;
        v58 = v13;
        v59 = v50;
        v60 = v49;
        v61 = v48;
        v62 = v47;
        v63 = v46;
        v64 = v45;
        v65 = v44;
        v66 = v43;
        sub_1BAC61158(v67, &v57);
        if (v3)
          break;
        sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatPropertyDefinition);
        v34 += v35;
        if (!--v33)
          goto LABEL_11;
      }
      sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatPropertyDefinition);
LABEL_11:
      v26 = v36;
      v27 = v37;
      v28 = v42;
      v29 = v41;
      v30 = v38;
      v31 = v39;
      v32 = v40;
    }
    sub_1BA6C0C20(v26, v27, v28, v29, v30, v31, v32);
  }
}

void sub_1BAC642C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  char v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 9);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_BYTE *)(v2 + 80);
  v8 = *(_OWORD *)(v2 + 48);
  v19 = *(_OWORD *)(v2 + 32);
  v20 = v8;
  v21 = *(_OWORD *)(v2 + 64);
  v22 = v7;
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v9 = *(_OWORD *)(a2 + 32);
  v14 = *(_OWORD *)(a2 + 16);
  v15 = v9;
  v10 = *(_OWORD *)(a2 + 64);
  v16 = *(_OWORD *)(a2 + 48);
  v17 = v10;
  v18 = v6;
  sub_1BAC63F74(a1, &v11);
}

void sub_1BAC6433C(uint64_t a1, uint64_t *a2)
{
  sub_1BAC63F74(a1, a2);
}

uint64_t sub_1BAC64350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC589B4(a1, a2, a3);
}

void sub_1BAC64364()
{
  uint64_t v0;

  if ((~*(_QWORD *)(v0 + 8) & 0xF000000000000007) != 0)
    sub_1BA7547AC();
}

uint64_t sub_1BAC643DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAC56AE0(a1, a2, a3);
}

uint64_t sub_1BAC643F0(uint64_t a1, uint64_t *a2)
{
  return sub_1BAC5F47C(a1, a2);
}

void sub_1BAC64410(uint64_t a1, uint64_t a2)
{
  sub_1BAC5EF58(a1, a2);
}

void sub_1BAC64430()
{
  sub_1BAC60754();
}

void sub_1BAC64444(uint64_t a1, uint64_t a2)
{
  sub_1BA7DFF54(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BA7E0184);
}

void sub_1BAC6446C()
{
  sub_1BAC64540();
}

uint64_t sub_1BAC64480(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v3 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v3;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v4;
  v5 = *v2;
  if ((*v2 & 0x8000000000000000) == 0)
  {
    v6 = result;
    v7 = *(_QWORD *)(v5 + 16);
    v8 = *(_QWORD *)(v5 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA7F8DE4(v6, (uint64_t)v9, v7, v8);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAC64520(unint64_t a1, uint64_t a2)
{
  sub_1BA7F70B0(a1, a2);
}

void sub_1BAC64540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(unsigned __int8 *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  if ((~*(_QWORD *)(v0 + 24) & 0xF000000000000007) != 0)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 32);
    v7 = *(unsigned __int8 *)(v0 + 144);
    sub_1BA755CC8();
    if (v1)
      return;
    v4 = v9;
    v3 = v7;
    v2 = v10;
  }
  if (!v2)
  {
LABEL_10:
    if (v3 != 254)
      goto LABEL_13;
    goto LABEL_14;
  }
  v5 = *(_QWORD *)(v2 + 16);
  if (!v5)
  {
    if (v3 != 254)
    {
LABEL_13:
      sub_1BA7547AC();
      if (v1)
        return;
    }
LABEL_14:
    if ((~v4 & 0xF000000000000007) != 0)
      sub_1BA7547AC();
    return;
  }
  v8 = v3;
  v6 = swift_bridgeObjectRetain() + 64;
  while (1)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BA7547AC();
    if (v1)
      break;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    v1 = 0;
    v6 += 40;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      v1 = 0;
      v3 = v8;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
}

void sub_1BAC64878(unint64_t a1, uint64_t *a2)
{
  sub_1BA7F7458(a1, a2);
}

void sub_1BAC6488C(uint64_t a1, uint64_t a2)
{
  sub_1BA7272F4(a1, a2);
}

void sub_1BAC648AC(uint64_t a1, uint64_t a2)
{
  sub_1BA7274BC(a1, a2);
}

void sub_1BAC648CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 136);
  if ((~*(_QWORD *)(v0 + 16) & 0xF000000000000007) == 0
    || (v8 = *(_QWORD *)(v0 + 24), v4 = *(unsigned __int8 *)(v0 + 136), sub_1BA755CC8(), v3 = v4, v2 = v8, !v1))
  {
    if (v2 && (v5 = *(_QWORD *)(v2 + 16)) != 0)
    {
      v7 = v3;
      swift_bridgeObjectRetain();
      v6 = v2 + 64;
      do
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BA7547AC();
        if (v1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          return;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v1 = 0;
        v6 += 40;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      if (v7 != 254)
        goto LABEL_11;
    }
    else if (v3 != 254)
    {
LABEL_11:
      sub_1BA7547AC();
    }
  }
}

void sub_1BAC64B84()
{
  sub_1BAC648CC();
}

uint64_t sub_1BAC64B98(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v3 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v3;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v4;
  v5 = *v2;
  if ((unint64_t)*v2 >> 62 == 1)
  {
    v6 = result;
    v7 = *(_QWORD *)(v5 + 16);
    v8 = *(_QWORD *)(v5 + 24);
    sub_1BA67D3F4(v7);
    swift_bridgeObjectRetain();
    sub_1BB5742EC(v6, (uint64_t)v9, v7, v8);
    sub_1BA6EEDB4(v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAC64C3C()
{
  sub_1BAC632D4();
}

void sub_1BAC64CB0(uint64_t a1, uint64_t a2)
{
  sub_1BA75ACDC(a1, a2);
}

