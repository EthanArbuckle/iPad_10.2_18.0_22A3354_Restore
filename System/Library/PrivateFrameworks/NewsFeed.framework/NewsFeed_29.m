uint64_t sub_1BB68D828(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  _QWORD v8[2];
  __int16 v9;
  __int128 v10;
  __int128 v11;
  char v12;

  v3 = sub_1BB8709F0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    if (qword_1ED3BA900 != -1)
      swift_once();
    v8[1] = *(_QWORD *)(a2 + 24);
    v9 = 256;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB9EF8], v3);
    v10 = 0u;
    v11 = 0u;
    v12 = 1;
    swift_unknownObjectRetain();
    sub_1BB8709D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1BB68D9A8(void *a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v8 = a2 + 16;
  swift_beginAccess();
  v9 = MEMORY[0x1BCCE5D40](v8);
  if (v9)
  {
    v10 = (void *)v9;
    v11 = *(id *)(v9 + OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage);

    sub_1BB871704();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    v12 = MEMORY[0x1BCCE5D40](v8);
    if (v12)
    {
      v13 = (char *)v12;
      if (a1)
      {
        v14 = a4[9];
        v38 = a4[8];
        v39 = v14;
        v15 = a4[11];
        v40 = a4[10];
        v41 = v15;
        v16 = a4[5];
        v34 = a4[4];
        v35 = v16;
        v17 = a4[7];
        v36 = a4[6];
        v37 = v17;
        v18 = a4[1];
        v30 = *a4;
        v31 = v18;
        v19 = a4[3];
        v32 = a4[2];
        v33 = v19;
        v20 = a1;
        sub_1BB68EB7C(v20, (uint64_t)v13, &v30);
        v21 = a5[3];
        v22 = a5[4];
        __swift_project_boxed_opaque_existential_1(a5, v21);
        v23 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v22 + 112);
        v24 = *(id *)&v13[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage];
        v23(v24, v21, v22, v25, v26, v27, v28, v29, v30, *((_QWORD *)&v30 + 1), v31, *((_QWORD *)&v31 + 1), v32, *((_QWORD *)&v32 + 1), v33, *((_QWORD *)&v33 + 1), v34, *((_QWORD *)&v34 + 1), v35,
          *((_QWORD *)&v35 + 1),
          v36,
          *((_QWORD *)&v36 + 1),
          v37,
          *((_QWORD *)&v37 + 1));
        swift_release();

      }
      else
      {
        swift_release();

      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1BB68DB54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t result;

  v3 = *(void **)(a1 + 24);
  v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  v5 = sub_1BB8729A0();
  v7 = v6;

  v8 = objc_msgSend(v3, sel_asChannel);
  swift_unknownObjectRelease();
  result = swift_unknownObjectRelease();
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 32) = v8 != 0;
  *(_QWORD *)a2 = 6775156;
  *(_QWORD *)(a2 + 8) = 0xE300000000000000;
  return result;
}

BOOL sub_1BB68DBFC(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCE5D40](v6);
  v8 = (void *)v7;
  if (v7)
  {
    v9 = *(id *)(*(_QWORD *)(v7 + *a3) + *a4);
    MEMORY[0x1BCCE1C6C]();

  }
  return v8 != 0;
}

double sub_1BB68DC80(double *a1, uint64_t a2, double a3)
{
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  double Width;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  if (a3 == 1.0)
  {
    v5 = a1[16];
    v6 = a1[17];
    v7 = a1[18];
    v8 = a1[19];
    v16.origin.x = v5;
    v16.origin.y = v6;
    v16.size.width = v7;
    v16.size.height = v8;
    Width = CGRectGetWidth(v16);
    v17.origin.x = v5;
    v17.origin.y = v6;
    v17.size.width = v7;
    v17.size.height = v8;
    CGRectGetWidth(v17);
  }
  else
  {
    objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage), sel_frame);
    v10 = CGRectGetHeight(v18) * a3;
    v12 = a1[16];
    v11 = a1[17];
    v14 = a1[18];
    v13 = a1[19];
    v19.origin.x = v12;
    v19.origin.y = v11;
    v19.size.width = v14;
    v19.size.height = v13;
    if (CGRectGetHeight(v19) >= v10)
    {
      v22.origin.x = v12;
      v22.origin.y = v11;
      v22.size.width = v14;
      v22.size.height = v13;
      return CGRectGetWidth(v22);
    }
    else
    {
      v20.origin.x = v12;
      v20.origin.y = v11;
      v20.size.width = v14;
      v20.size.height = v13;
      Width = CGRectGetHeight(v20) / a3;
      v21.origin.x = v12;
      v21.origin.y = v11;
      v21.size.width = v14;
      v21.size.height = v13;
      CGRectGetHeight(v21);
    }
  }
  return Width;
}

uint64_t sub_1BB68DD9C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB68DDD4(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_1BB68DE24()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB68DE48()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 120) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 152))
      __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BB68DEF4()
{
  uint64_t v0;

  return sub_1BB68D828(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_1BB68DF04()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

BOOL sub_1BB68DF28(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB68DBFC(a1, v1, &OBJC_IVAR____TtC8NewsFeed16CoverChannelView_followButton, &OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_onTap);
}

uint64_t sub_1BB68DF54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB68DB54(*(_QWORD *)(v1 + 16), a1);
}

void sub_1BB68DF5C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EF2CA158)
  {
    v2 = sub_1BB54E810();
    v4 = type metadata accessor for CellAutomation(a1, (uint64_t)&type metadata for TagAutomation, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF2CA158);
  }
}

BOOL sub_1BB68DFB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB68DBFC(a1, v1, &OBJC_IVAR____TtC8NewsFeed16CoverChannelView_moreActionsButton, &OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap);
}

uint64_t sub_1BB68DFE0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA6DA0C0(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB68E01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  int EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);

  sub_1BA6DA0C0(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = type metadata accessor for FeedItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
    return swift_deallocObject();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 48) >= 0x11uLL)
        goto LABEL_72;
      return swift_deallocObject();
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 80) >= 0x11uLL)
        goto LABEL_72;
      return swift_deallocObject();
    case 2u:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for FeedBannerAd();
      v7 = v3 + *(int *)(v6 + 20);
      v8 = sub_1BB8721C0();
      goto LABEL_55;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v9 = (int *)type metadata accessor for FeedHeadline(0);
      v10 = v9[10];
      v11 = v3 + v10 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v12 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
      {
        v13 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);

        v14 = v11 + *(int *)(v12 + 28);
        v15 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      }
      v16 = v3 + v9[11];
      v17 = sub_1BB871B24();
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      if (*(_QWORD *)(v3 + v9[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + v9[13]) >= 3uLL)
        swift_unknownObjectRelease();

      return swift_deallocObject();
    case 4u:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = (int *)type metadata accessor for FeedWebEmbed();
      v20 = v3 + v19[8];
      v21 = sub_1BB86C67C();
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v23(v20, v21);
      v24 = v3 + v19[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v24, 1, v21))
        v23(v24, v21);
      v67 = v23;
      swift_release();
      swift_release();
      v25 = v3 + v19[12];
      v26 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v26 - 1) + 48))(v25, 1, v26))
      {
        v66 = v21;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v27 = v26[10];
        v28 = v25 + v27 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v29 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
        {
          v30 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v28, v30);

          v67(v28 + *(int *)(v29 + 28), v66);
        }
        v31 = v25 + v26[11];
        v32 = sub_1BB871B24();
        v65 = *(_QWORD *)(v32 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v31, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v31, v32);
        if (*(_QWORD *)(v25 + v26[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v21 = v66;
        if (*(_QWORD *)(v25 + v26[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v33 = v3 + v19[13];
      v34 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v33, 1, v34))
        return swift_deallocObject();
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_57;
      swift_bridgeObjectRelease();
      v35 = type metadata accessor for GenericDataVisualization();
      v67(v33 + *(int *)(v35 + 20), v21);
      goto LABEL_72;
    case 5u:
      goto LABEL_38;
    case 6u:
      v36 = *(unsigned __int8 *)(v3 + 281);
      if (v36 == 2)
        goto LABEL_42;
      if (v36 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v3 + 128) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v43 = *(void **)(v3 + 144);
        if (v43)
        {

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v3 + 224) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(v3 + 272) >= 0x11uLL)
LABEL_72:
            swift_bridgeObjectRelease();
        }
      }
      else
      {
        if (*(_BYTE *)(v3 + 281))
          return swift_deallocObject();
LABEL_38:

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v3 + 128) >= 0x11uLL)
          goto LABEL_72;
      }
      return swift_deallocObject();
    case 7u:
LABEL_42:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 120))
          __swift_destroy_boxed_opaque_existential_1(v3 + 96);
      }
      return swift_deallocObject();
    case 8u:
      swift_bridgeObjectRelease();
      v37 = v3 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = v37 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v39 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39))
      {
        v40 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v38, v40);
      }
      goto LABEL_72;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 56))
        __swift_destroy_boxed_opaque_existential_1(v3 + 32);
      if (*(_QWORD *)(v3 + 96))
        __swift_destroy_boxed_opaque_existential_1(v3 + 72);
      if (*(_QWORD *)(v3 + 136))
        __swift_destroy_boxed_opaque_existential_1(v3 + 112);
      return swift_deallocObject();
    case 0xAu:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for FeedEngagementBanner();
      v7 = v3 + *(int *)(v6 + 20);
      v8 = sub_1BB86EDAC();
LABEL_55:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      if (*(_QWORD *)(v3 + *(int *)(v6 + 32) + 8) >= 0x11uLL)
        goto LABEL_72;
      return swift_deallocObject();
    case 0xBu:
LABEL_57:
      swift_release();
      return swift_deallocObject();
    case 0xCu:
      goto LABEL_66;
    case 0xDu:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 112))
        __swift_destroy_boxed_opaque_existential_1(v3 + 88);
      if (*(_QWORD *)(v3 + 152))
        __swift_destroy_boxed_opaque_existential_1(v3 + 128);
      return swift_deallocObject();
    case 0xEu:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_66:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return swift_deallocObject();
    case 0xFu:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41 = v3 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v42 = v41 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_91;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v45 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v42, 1, v45))
            {
              v46 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v42, v46);
            }
          }
          v47 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v48 = v42 + *(int *)(v47 + 20);
          v49 = swift_getEnumCaseMultiPayload();
          if (v49 == 5 || v49 == 4)
          {
            v50 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v48, 1, v50))
            {
              v51 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v48, v51);
            }
          }
          v42 += *(int *)(v47 + 24);
LABEL_91:
          v52 = swift_getEnumCaseMultiPayload();
          if (v52 == 5 || v52 == 4)
          {
            v53 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v42, 1, v53))goto LABEL_102;
          }
          return swift_deallocObject();
        case 2u:
          v54 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v42, 1, v54))
            return swift_deallocObject();
          v55 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v42, v55);
          v56 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v57 = v42 + *(int *)(v56 + 24);
          swift_bridgeObjectRelease();
          v58 = *(_QWORD *)(v57 + 24);
          if (v58 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v57 + 16), v58);
          goto LABEL_72;
        case 3u:
          v59 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v60 = v42 + *(int *)(v59 + 24);
          v61 = type metadata accessor for PuzzleStreak();
          v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48);
          if (!v62(v60, 1, v61))
          {
            v63 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v60, v63);
          }
          v42 += *(int *)(v59 + 28);
          if (!v62(v42, 1, v61))
          {
LABEL_102:
            v64 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v42, v64);
          }
          return swift_deallocObject();
        default:
          return swift_deallocObject();
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 240) >= 0x11uLL)
        goto LABEL_72;
      return swift_deallocObject();
    default:
      return swift_deallocObject();
  }
}

uint64_t sub_1BB68EAFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BA6DA0C0(0);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1BB7DB500(v1 + ((v4 + 16) & ~v4), a1);
}

uint64_t sub_1BB68EB38()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  return swift_deallocObject();
}

void sub_1BB68EB6C(void *a1)
{
  uint64_t v1;

  sub_1BB68D9A8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (__int128 *)(v1 + 32), (_QWORD *)(v1 + 224));
}

id sub_1BB68EB7C(void *a1, uint64_t a2, __int128 *a3)
{
  CGSize v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  CGPoint origin;
  CGSize size;
  double Height;
  double v14;
  double v15;
  double v16;
  id result;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  CGFloat v23;
  CGFloat v24;
  void *v25;
  CGFloat v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  CGRect v35;
  __int128 v36;
  __int128 v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v5 = (CGSize)a3[9];
  v35.origin = (CGPoint)a3[8];
  v35.size = v5;
  v6 = a3[11];
  v36 = a3[10];
  v37 = v6;
  v7 = a3[5];
  v31 = a3[4];
  v32 = v7;
  v8 = a3[7];
  v33 = a3[6];
  v34 = v8;
  v9 = a3[1];
  v27 = *a3;
  v28 = v9;
  v10 = a3[3];
  v29 = a3[2];
  v30 = v10;
  origin = v35.origin;
  size = v35.size;
  Height = CGRectGetHeight(v35);
  v14 = Height / CGRectGetWidth(v35);
  objc_msgSend(a1, sel_size, v27, v28, v29, v30, v31, v32, v33, v34);
  v16 = v15;
  result = objc_msgSend(a1, sel_size);
  v19 = v16 / v18;
  if (v14 != v19 && v19 != 0.0)
  {
    v20 = sub_1BB68DC80((double *)&v27, a2, v19);
    v22 = v21;
    v38.origin = origin;
    v38.size = size;
    v23 = CGRectGetWidth(v38) - v20;
    v39.origin = origin;
    v39.size = size;
    v24 = CGRectGetHeight(v39) - v22;
    v25 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage);
    v40.origin = origin;
    v40.size = size;
    v26 = v23 * 0.5 + CGRectGetMinX(v40);
    v41.origin = origin;
    v41.size = size;
    return objc_msgSend(v25, sel_setFrame_, v26, v24 + CGRectGetMinY(v41), v20, v22);
  }
  return result;
}

void sub_1BB68ED38(void *a1, char *a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  double v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  char v25;

  if (*(_QWORD *)(a3 + 16))
  {
    v5 = *a2;
    sub_1BB4AB03C(5);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(a3 + 56) + 16 * v6;
      if (*(_BYTE *)(v8 + 8) == 5)
      {
        v9 = *(void **)v8;
        v25 = v5;
        v10 = sub_1BB71DAE0(&v25);
        v11 = (void *)objc_opt_self();
        v12 = v9;
        v24 = objc_msgSend(v11, sel_effectWithStyle_, v10);
        v13 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
        sub_1BB873738();

        objc_msgSend(a1, sel_bounds);
        sub_1BB8736F0();
        objc_msgSend(v12, sel_setEffect_, v24);
        v14 = objc_msgSend(v12, sel_layer);
        v15 = objc_msgSend(a1, sel_layer);
        objc_msgSend(v15, sel_cornerRadius);
        v17 = v16;

        objc_msgSend(v14, sel_setCornerRadius_, v17);
        v18 = objc_msgSend(v12, sel_layer);
        v19 = objc_msgSend(a1, sel_layer);
        v20 = objc_msgSend(v19, sel_maskedCorners);

        objc_msgSend(v18, sel_setMaskedCorners_, v20);
        v21 = objc_msgSend(v12, sel_layer);
        v22 = objc_msgSend(a1, sel_layer);
        v23 = objc_msgSend(v22, sel_cornerCurve);

        objc_msgSend(v21, sel_setCornerCurve_, v23);
        sub_1BB87372C();

      }
    }
  }
}

Swift::Void __swiftcall FormatProgressPieView.setUpPieView(options:)(NewsFeed::FormatProgressPieOptionsResolved *options)
{
  uint64_t v1;
  Swift::Bool clockwise;
  Swift::Double stepPercentage;
  Swift::Double minPercentage;
  Swift::Double maxPercentage;
  uint64_t v6;

  clockwise = options->clockwise;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_radius) = options->radius;
  stepPercentage = options->stepPercentage;
  minPercentage = options->minPercentage;
  maxPercentage = options->maxPercentage;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_clockwise) = clockwise;
  v6 = v1 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_stepPercentage;
  *(Swift::Double *)v6 = stepPercentage;
  *(_BYTE *)(v6 + 8) = 0;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_minPercentage) = minPercentage;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_maxPercentage) = maxPercentage;
}

Swift::Void __swiftcall FormatProgressPieView.setProgressColors(backgroundColor:pieColor:)(UIColor backgroundColor, UIColor pieColor)
{
  uint64_t v2;
  id v5;
  id v6;
  id v7;
  id v8;

  v5 = *(id *)(v2 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer);
  v6 = -[objc_class CGColor](backgroundColor.super.isa, sel_CGColor);
  objc_msgSend(v5, sel_setFillColor_, v6);

  v7 = *(id *)(v2 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer);
  v8 = -[objc_class CGColor](pieColor.super.isa, sel_CGColor);
  objc_msgSend(v7, sel_setFillColor_, v8);

}

Swift::Void __swiftcall FormatProgressPieView.updatePieProgress(progress:)(Swift::Double progress)
{
  char *v1;
  char *v2;
  CGMutablePathRef Mutable;
  uint64_t v4;
  CGMutablePathRef v5;
  CGRect v6;

  v2 = v1;
  Mutable = CGPathCreateMutable();
  objc_msgSend(v1, sel_bounds);
  sub_1BB8735D0();
  objc_msgSend(v1, sel_bounds);
  CGRectGetWidth(v6);
  sub_1BB873348();
  v5 = CGPathCreateMutable();
  objc_msgSend(v1, sel_bounds);
  sub_1BB8735D0();
  sub_1BB87333C();
  objc_msgSend(v1, sel_bounds);
  sub_1BB8735D0();
  sub_1BB873348();
  sub_1BB873330();
  v4 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer], sel_setFillRule_, *MEMORY[0x1E0CD2B70]);
  objc_msgSend(*(id *)&v2[v4], sel_setPath_, Mutable);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer], sel_setPath_, v5);

}

uint64_t FormatProgressPieView.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatProgressPieView.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressPieView.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall FormatProgressPieView.layoutSubviews()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_layoutSubviews);
  v1 = objc_msgSend(v0, sel_layer);
  v2 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  v3 = objc_msgSend(v2, sel_CGColor);

  objc_msgSend(v1, sel_setBackgroundColor_, v3);
}

id sub_1BB68F628()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FormatProgressPieView.NonAnimatingLayerDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id FormatProgressPieView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BB68F6EC()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for FormatProgressPieView.NonAnimatingLayerDelegate()
{
  return objc_opt_self();
}

void sub_1BB68F764()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier];
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  v2 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v3 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_radius] = 0;
  v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_clockwise] = 0;
  v4 = &v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_stepPercentage];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_minPercentage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_maxPercentage] = 0x3FF0000000000000;
  v5 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_layerDelegate;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatProgressPieView.NonAnimatingLayerDelegate()), sel_init);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t FeedGroupPinning.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;
  char v15;
  char v16;

  v13[0] = a2;
  sub_1BA4CDF6C(0, &qword_1ED39EAA0, (uint64_t (*)(void))sub_1BB68FA48, (uint64_t)&type metadata for FeedGroupPinning.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB68FA48();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v13[0];
    v15 = 0;
    sub_1BB68FA8C();
    sub_1BB8740D4();
    v10 = v16;
    if ((v16 & 1) != 0)
    {
      v14 = 1;
      sub_1BB68FAD0();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v11 = v13[1];
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v11 = 0;
    }
    *(_QWORD *)v9 = v11;
    *(_BYTE *)(v9 + 8) = v10 ^ 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BB68FA48()
{
  unint64_t result;

  result = qword_1ED39E480;
  if (!qword_1ED39E480)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93C208, &type metadata for FeedGroupPinning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39E480);
  }
  return result;
}

unint64_t sub_1BB68FA8C()
{
  unint64_t result;

  result = qword_1ED39E4A0;
  if (!qword_1ED39E4A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93C1E0, &type metadata for FeedGroupPinning.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39E4A0);
  }
  return result;
}

unint64_t sub_1BB68FAD0()
{
  unint64_t result;

  result = qword_1EF2CA1E8;
  if (!qword_1EF2CA1E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupPinningDuration, &type metadata for FeedGroupPinningDuration);
    atomic_store(result, (unint64_t *)&qword_1EF2CA1E8);
  }
  return result;
}

uint64_t FeedGroupPinning.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  __int16 v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;

  sub_1BA4CDF6C(0, &qword_1EF2CA1F0, (uint64_t (*)(void))sub_1BB68FA48, (uint64_t)&type metadata for FeedGroupPinning.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  v8 = *v1;
  v9 = *((_BYTE *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB68FA48();
  sub_1BB8746C8();
  if ((v9 & 1) != 0)
  {
    v13 = 0;
    sub_1BB68FCAC();
LABEL_5:
    sub_1BB8741AC();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v17 = 1;
  v16 = 0;
  sub_1BB68FCAC();
  v10 = v12;
  sub_1BB8741AC();
  if (!v10)
  {
    v15 = v8;
    v14 = 1;
    sub_1BB68FCF0();
    goto LABEL_5;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB68FCAC()
{
  unint64_t result;

  result = qword_1EF2CA1F8;
  if (!qword_1EF2CA1F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93C1B8, &type metadata for FeedGroupPinning.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2CA1F8);
  }
  return result;
}

unint64_t sub_1BB68FCF0()
{
  unint64_t result;

  result = qword_1EF2CA200;
  if (!qword_1EF2CA200)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupPinningDuration, &type metadata for FeedGroupPinningDuration);
    atomic_store(result, (unint64_t *)&qword_1EF2CA200);
  }
  return result;
}

uint64_t sub_1BB68FD34@<X0>(char *a1@<X8>)
{
  return sub_1BA4E2654(a1);
}

uint64_t sub_1BB68FD40@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB68FDA0()
{
  sub_1BB68FA48();
  return sub_1BB874710();
}

uint64_t sub_1BB68FDC8()
{
  sub_1BB68FA48();
  return sub_1BB87471C();
}

uint64_t sub_1BB68FDF0(char *a1, char *a2)
{
  return sub_1BB8065EC(*a1, *a2);
}

uint64_t sub_1BB68FDFC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB68FE78()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB68FED0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB68FF48@<X0>(char *a1@<X8>)
{
  return sub_1BA4E2654(a1);
}

void sub_1BB68FF54(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6465786966;
  if (*v1)
    v2 = 0x6E6F697461727564;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB68FF90()
{
  sub_1BB690968();
  return sub_1BB872D60();
}

uint64_t sub_1BB68FFEC()
{
  sub_1BB690968();
  return sub_1BB872D0C();
}

uint64_t static FeedGroupPinning.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t sub_1BB690068@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupPinning.init(from:)(a1, a2);
}

uint64_t sub_1BB69007C(_QWORD *a1)
{
  return FeedGroupPinning.encode(to:)(a1);
}

uint64_t FeedGroupPinning.description.getter()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return 0x6465786946;
  sub_1BB872AFC((_QWORD *)0xE000000000000000);
  sub_1BB872FF4();
  sub_1BB872AFC(v2);
  return 0;
}

uint64_t sub_1BB690130()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return 0x6465786946;
  sub_1BB872AFC((_QWORD *)0xE000000000000000);
  sub_1BB872FF4();
  sub_1BB872AFC(v2);
  return 0;
}

double FeedGroupPinningDuration.value.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t sub_1BB6901D8()
{
  sub_1BB690330();
  return sub_1BB874710();
}

uint64_t sub_1BB690200()
{
  sub_1BB690330();
  return sub_1BB87471C();
}

uint64_t FeedGroupPinningDuration.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA4CDF6C(0, &qword_1EF2CA208, (uint64_t (*)(void))sub_1BB690330, (uint64_t)&type metadata for FeedGroupPinningDuration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB690330();
  sub_1BB8746C8();
  sub_1BB874194();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BB690330()
{
  unint64_t result;

  result = qword_1EF2CA210;
  if (!qword_1EF2CA210)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93C168, &type metadata for FeedGroupPinningDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA210);
  }
  return result;
}

uint64_t FeedGroupPinningDuration.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;

  v14 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2CA218, (uint64_t (*)(void))sub_1BB690330, (uint64_t)&type metadata for FeedGroupPinningDuration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB690330();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v14;
    sub_1BB8740B0();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB6904B8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FeedGroupPinningDuration.init(from:)(a1, a2);
}

uint64_t sub_1BB6904CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA4CDF6C(0, &qword_1EF2CA208, (uint64_t (*)(void))sub_1BB690330, (uint64_t)&type metadata for FeedGroupPinningDuration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB690330();
  sub_1BB8746C8();
  sub_1BB874194();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FeedGroupPinning()
{
  return &type metadata for FeedGroupPinning;
}

ValueMetadata *type metadata accessor for FeedGroupPinningDuration()
{
  return &type metadata for FeedGroupPinningDuration;
}

uint64_t storeEnumTagSinglePayload for FeedGroupPinningDuration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB690634 + 4 * asc_1BB93BDC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB690654 + 4 * byte_1BB93BDC5[v4]))();
}

_BYTE *sub_1BB690634(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB690654(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB69065C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB690664(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB69066C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB690674(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupPinningDuration.CodingKeys()
{
  return &type metadata for FeedGroupPinningDuration.CodingKeys;
}

ValueMetadata *type metadata accessor for FeedGroupPinning.CodingType()
{
  return &type metadata for FeedGroupPinning.CodingType;
}

uint64_t _s8NewsFeed16FeedGroupPinningO10CodingTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB6906F0 + 4 * byte_1BB93BDCF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB690724 + 4 * byte_1BB93BDCA[v4]))();
}

uint64_t sub_1BB690724(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB69072C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB690734);
  return result;
}

uint64_t sub_1BB690740(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB690748);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB69074C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB690754(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupPinning.CodingKeys()
{
  return &type metadata for FeedGroupPinning.CodingKeys;
}

unint64_t sub_1BB690774()
{
  unint64_t result;

  result = qword_1EF2CA220;
  if (!qword_1EF2CA220)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93BFE8, &type metadata for FeedGroupPinning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA220);
  }
  return result;
}

unint64_t sub_1BB6907BC()
{
  unint64_t result;

  result = qword_1EF2CA228;
  if (!qword_1EF2CA228)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93C088, &type metadata for FeedGroupPinning.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2CA228);
  }
  return result;
}

unint64_t sub_1BB690804()
{
  unint64_t result;

  result = qword_1EF2CA230;
  if (!qword_1EF2CA230)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93C140, &type metadata for FeedGroupPinningDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA230);
  }
  return result;
}

unint64_t sub_1BB69084C()
{
  unint64_t result;

  result = qword_1EF2CA238;
  if (!qword_1EF2CA238)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93C0B0, &type metadata for FeedGroupPinningDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA238);
  }
  return result;
}

unint64_t sub_1BB690894()
{
  unint64_t result;

  result = qword_1EF2CA240;
  if (!qword_1EF2CA240)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93C0D8, &type metadata for FeedGroupPinningDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA240);
  }
  return result;
}

unint64_t sub_1BB6908DC()
{
  unint64_t result;

  result = qword_1ED39E490;
  if (!qword_1ED39E490)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93BF20, &type metadata for FeedGroupPinning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39E490);
  }
  return result;
}

unint64_t sub_1BB690924()
{
  unint64_t result;

  result = qword_1ED39E488;
  if (!qword_1ED39E488)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93BF48, &type metadata for FeedGroupPinning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39E488);
  }
  return result;
}

unint64_t sub_1BB690968()
{
  unint64_t result;

  result = qword_1ED39E498;
  if (!qword_1ED39E498)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93C010, &type metadata for FeedGroupPinning.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED39E498);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMicaAsset()
{
  return &type metadata for FormatMicaAsset;
}

uint64_t sub_1BB6909BC()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB6909C8()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB6909D4()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB6909E0()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB6909EC()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB6909F8()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A04()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A10()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A1C()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A28()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A34()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A40()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A4C()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A58()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A64()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A70()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A7C()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A88()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690A94()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690AA0()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690AAC()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690AB8()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690AC4()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690AD0()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690ADC()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690AE8()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690AF4()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B00()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B0C()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B18()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B24()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B30()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B3C()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B48()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B54()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B60()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B6C()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B78()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B84()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B90()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690B9C()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690BA8()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690BB4()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690BC0()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690BCC()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690BD8()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690BE4()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690BF0()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690BFC()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690C08()
{
  uint64_t v0;

  sub_1BB874734();
  sub_1BA7114A0();
  v0 = sub_1BB873B04();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BB690CA8()
{
  uint64_t v0;

  sub_1BB874734();
  sub_1BA7114A0();
  v0 = sub_1BB873B04();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BB690D4C()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690D58()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690D64()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690D70()
{
  return sub_1BB690D7C();
}

uint64_t sub_1BB690D7C()
{
  uint64_t v0;

  sub_1BB874734();
  sub_1BA7114A0();
  v0 = sub_1BB873B04();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BB690E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;

  v3 = v2;
  *(_QWORD *)&v60 = a1;
  *(_QWORD *)&v62 = sub_1BB86DA38();
  *(_QWORD *)&v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86D7A4();
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  MEMORY[0x1E0C80A78](v7);
  v64 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for InternalErrorViewModel();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C8E0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for InternalErrorViewLayout.Context();
  MEMORY[0x1E0C80A78](v16);
  v63 = (_QWORD *)((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
    goto LABEL_5;
  if (qword_1ED3D1ED8 != -1)
    swift_once();
  sub_1BA4A2870(&qword_1ED3D1F78, (uint64_t (*)(uint64_t))_s13InternalErrorCMa, (uint64_t)&unk_1BB93C31C);
  sub_1BB86D210();
  if ((v66 & 1) == 0)
  {
    sub_1BB86C8D4();
    v20 = sub_1BB86C8C8();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_1BA4C2DD8(v3 + OBJC_IVAR____TtCV8NewsFeed11GroupLayout13InternalError_model, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewModel);
    v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV8NewsFeed11GroupLayout13InternalError_key);
    swift_retain();
    v24 = v63;
    sub_1BB5CA670(v20, v22, (uint64_t)v11, v23, v63);
    sub_1BB86D780();
    v26 = v25;
    v28 = v27;
    sub_1BB86D72C();
    v29 = v64;
    v30 = sub_1BB86D798();
    v31 = MEMORY[0x1E0C80A78](v30);
    *((_QWORD *)&v48 - 2) = v29;
    *((_QWORD *)&v48 - 1) = v24;
    (*(void (**)(char *, _QWORD, _QWORD, double))(v61 + 104))(v6, *MEMORY[0x1E0DB6208], v62, v31);
    sub_1BB6919C8();
    swift_allocObject();
    sub_1BB86DB34();
    sub_1BB86DB40();
    v32 = v67;
    v33 = v68;
    v61 = v70;
    v62 = v69;
    v60 = v71;
    v56 = v73;
    v57 = v72;
    v54 = v75;
    v55 = v74;
    v52 = v77;
    v53 = v76;
    v50 = v79;
    v51 = v78;
    v48 = v81;
    v49 = v80;
    v34 = v82;
    v35 = v83;
    sub_1BA7C2F7C(0);
    v36 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8) + 80);
    v37 = (v36 + 32) & ~v36;
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1BB87CE70;
    sub_1BB0746EC();
    v40 = v38 + v37 + *(int *)(v39 + 48);
    sub_1BA4C2DD8((uint64_t)v24, v38 + v37, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
    *(_QWORD *)v40 = v26;
    *(_QWORD *)(v40 + 8) = v28;
    *(_QWORD *)(v40 + 16) = v32;
    *(_QWORD *)(v40 + 24) = v33;
    v41 = v61;
    *(_OWORD *)(v40 + 32) = v62;
    *(_OWORD *)(v40 + 48) = v41;
    v42 = v57;
    *(_OWORD *)(v40 + 64) = v60;
    *(_OWORD *)(v40 + 80) = v42;
    v43 = v55;
    *(_OWORD *)(v40 + 96) = v56;
    *(_OWORD *)(v40 + 112) = v43;
    v44 = v53;
    *(_OWORD *)(v40 + 128) = v54;
    *(_OWORD *)(v40 + 144) = v44;
    v45 = v51;
    *(_OWORD *)(v40 + 160) = v52;
    *(_OWORD *)(v40 + 176) = v45;
    v46 = v49;
    *(_OWORD *)(v40 + 192) = v50;
    *(_OWORD *)(v40 + 208) = v46;
    *(_OWORD *)(v40 + 224) = v48;
    *(_QWORD *)(v40 + 240) = v34;
    *(_QWORD *)(v40 + 248) = v35;
    swift_storeEnumTagMultiPayload();
    v65 = MEMORY[0x1E0DEE9D8];
    sub_1BB2C0284();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B9360, (uint64_t (*)(uint64_t))sub_1BB2C0284, MEMORY[0x1E0DEAF38]);
    sub_1BA6B39A0();
    v47 = sub_1BB872BBC();
    swift_release();
    *(_BYTE *)a2 = 1;
    *(_QWORD *)(a2 + 8) = v26;
    *(_QWORD *)(a2 + 16) = v28;
    *(_QWORD *)(a2 + 24) = v32;
    *(_QWORD *)(a2 + 32) = v33;
    *(_QWORD *)(a2 + 40) = v47;
    *(_QWORD *)(a2 + 48) = v38;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v29, v59);
    return sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
  }
  else
  {
LABEL_5:
    v18 = MEMORY[0x1E0DEE9D8];
    v66 = MEMORY[0x1E0DEE9D8];
    sub_1BB2C0284();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B9360, (uint64_t (*)(uint64_t))sub_1BB2C0284, MEMORY[0x1E0DEAF38]);
    sub_1BA6B39A0();
    result = sub_1BB872BBC();
    *(_BYTE *)a2 = 0;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_QWORD *)(a2 + 40) = result;
    *(_QWORD *)(a2 + 48) = v18;
  }
  return result;
}

uint64_t sub_1BB691464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[6];

  v32 = a2;
  v34 = a1;
  v29 = sub_1BB86C8E0();
  v7 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for GroupLayoutContext();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for GroupLayoutBindingContext();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v13;
  sub_1BA4C2DD8(a1, v3 + OBJC_IVAR____TtCV8NewsFeed11GroupLayout13InternalError_model, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewModel);
  v14 = type metadata accessor for InternalErrorGroupLayoutFactory();
  v15 = swift_allocObject();
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA4C2DD8(a3, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BB86C8D4();
  v16 = sub_1BB86C8C8();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v29);
  v44[3] = v14;
  v44[4] = sub_1BA4A2870(&qword_1ED3D2288, (uint64_t (*)(uint64_t))type metadata accessor for InternalErrorGroupLayoutFactory, (uint64_t)&unk_1BB93C300);
  v44[0] = v15;
  type metadata accessor for GroupLayoutKey();
  v19 = swift_allocObject();
  swift_retain();
  v42 = sub_1BB874734();
  v43 = v20;
  v40 = 95;
  v41 = 0xE100000000000000;
  v38 = 45;
  v39 = 0xE100000000000000;
  sub_1BA7114A0();
  v21 = sub_1BB873B04();
  v23 = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 24) = v23;
  v24 = (uint64_t *)(v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  *v24 = v16;
  v24[1] = v18;
  sub_1BA4C010C((uint64_t)v44, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v25 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4((uint64_t)v30, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v25, 0, 1, v33);
  v26 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v11, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v26, 0, 1, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  swift_release();
  sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewModel);
  result = v36;
  *(_QWORD *)(v36 + OBJC_IVAR____TtCV8NewsFeed11GroupLayout13InternalError_key) = v19;
  return result;
}

uint64_t sub_1BB6917B0()
{
  uint64_t v0;

  sub_1BA4A2E80(v0 + OBJC_IVAR____TtCV8NewsFeed11GroupLayout13InternalError_model, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewModel);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB6917F8()
{
  return _s13InternalErrorCMa();
}

uint64_t _s13InternalErrorCMa()
{
  uint64_t result;

  result = qword_1ED3D1F80;
  if (!qword_1ED3D1F80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB69183C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for InternalErrorViewModel();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for InternalErrorGroupLayoutFactory()
{
  return objc_opt_self();
}

uint64_t sub_1BB6918D4()
{
  uint64_t v0;

  sub_1BA7E415C();
  swift_allocError();
  *(_QWORD *)v0 = 1;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_BYTE *)(v0 + 40) = 13;
  return swift_willThrow();
}

uint64_t sub_1BB691934()
{
  return sub_1BB874734();
}

uint64_t sub_1BB691944()
{
  return sub_1BB690C08();
}

uint64_t sub_1BB691964(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA4A2870(&qword_1ED3D2280, (uint64_t (*)(uint64_t))type metadata accessor for InternalErrorGroupLayoutFactory, (uint64_t)&unk_1BB93C2B0);
  result = sub_1BA4A2870(&qword_1ED3D2278, (uint64_t (*)(uint64_t))type metadata accessor for InternalErrorGroupLayoutFactory, (uint64_t)&unk_1BB93C2D8);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BB6919C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB5CBC00(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BB6919C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AFBE0)
  {
    sub_1BB5CE45C();
    sub_1BB5CE51C();
    v0 = sub_1BB86DB58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AFBE0);
  }
}

uint64_t sub_1BB691A40@<X0>(void **a1@<X3>, char *a2@<X8>)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *a1;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allLikedArticleIDs);
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(v4, sel_identifier);
  v7 = sub_1BB8729A0();
  v9 = v8;

  LOBYTE(v6) = sub_1BA761FE4(v7, v9, v5);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    v11 = 0;
  }
  else
  {
    v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allDislikedArticleIDs);
    swift_bridgeObjectRetain();
    v13 = objc_msgSend(v4, sel_identifier);
    v14 = sub_1BB8729A0();
    v16 = v15;

    LOBYTE(v13) = sub_1BA761FE4(v14, v16, v12);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      v11 = 1;
    else
      v11 = 2;
  }
  *a2 = v11;
  return result;
}

uint64_t sub_1BB691BCC@<X0>(void **a1@<X3>, char *a2@<X8>)
{
  return sub_1BB691A40(a1, a2);
}

uint64_t sub_1BB691BEC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  result = sub_1BB691CCC(a2);
  if ((result & 1) != 0)
  {
    v5 = objc_msgSend(a1, sel_allLikedArticleIDs);
    v6 = sub_1BB873030();

    *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allLikedArticleIDs) = v6;
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(a1, sel_allDislikedArticleIDs);
    v8 = sub_1BB873030();

    *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allDislikedArticleIDs) = v8;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BB691CCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v11 >= v6)
      goto LABEL_24;
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v6)
        goto LABEL_24;
      v12 = *(_QWORD *)(v2 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v6)
          goto LABEL_24;
        v12 = *(_QWORD *)(v2 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v6)
            goto LABEL_24;
          v12 = *(_QWORD *)(v2 + 8 * v8);
          if (!v12)
          {
            v13 = v11 + 4;
            if (v13 >= v6)
            {
LABEL_24:
              v14 = 0;
              goto LABEL_25;
            }
            v12 = *(_QWORD *)(v2 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                v8 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_27;
                if (v8 >= v6)
                  goto LABEL_24;
                v12 = *(_QWORD *)(v2 + 8 * v8);
                ++v13;
                if (v12)
                  goto LABEL_22;
              }
            }
            v8 = v13;
          }
        }
      }
    }
LABEL_22:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_5:
    result = (uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 56) + 8 * v10), sel_unsignedIntegerValue);
    if ((result & 0x20) != 0)
    {
      v14 = 1;
LABEL_25:
      swift_release();
      return v14;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t static FormatCodingDescriptiveStrategy.defaultValue.getter()
{
  return 0;
}

uint64_t static FormatCodingDescriptiveStrategy.shouldEncode(wrappedValue:)()
{
  return 0;
}

uint64_t static FormatCodingEmptyDescriptiveStrategy.defaultValue.getter()
{
  return 0;
}

uint64_t static FormatCodingEmptyDescriptiveStrategy.shouldEncode(wrappedValue:)()
{
  return 1;
}

uint64_t static FormatCodingEmptyDescriptiveStrategy.encode(wrappedValue:)()
{
  return 0;
}

unint64_t sub_1BB691EE0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB691F04();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB691F04()
{
  unint64_t result;

  result = qword_1EF2CA2D0;
  if (!qword_1EF2CA2D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingDescriptiveStrategy, &type metadata for FormatCodingDescriptiveStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2CA2D0);
  }
  return result;
}

uint64_t sub_1BB691F48()
{
  return sub_1BB691FA0(&qword_1ED3C02D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEE9A0]);
}

uint64_t sub_1BB691F74()
{
  return sub_1BB691FA0((unint64_t *)&qword_1ED39BDB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
}

uint64_t sub_1BB691FA0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BA76D834();
    v8 = a2;
    result = MEMORY[0x1BCCE5B24](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingDescriptiveStrategy()
{
  return &type metadata for FormatCodingDescriptiveStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingEmptyDescriptiveStrategy()
{
  return &type metadata for FormatCodingEmptyDescriptiveStrategy;
}

uint64_t sub_1BB69201C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 24))(&v14, v5, v6);
  if ((_BYTE)v14)
  {
    if (v14 == 1)
    {
      v7 = sub_1BB86FD0C();
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB7B98], v7);
      v8 = sub_1BB873138();
      v9 = __OFSUB__(v8, 1);
      result = v8 - 1;
      if (v9)
      {
        __break(1u);
      }
      else
      {
        MEMORY[0x1BCCDD4D8](result, a2);
        v11 = sub_1BB86CBE0();
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 0, 1, v11);
      }
    }
    else
    {
      v13 = sub_1BB86CBE0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
    }
  }
  else
  {
    MEMORY[0x1BCCDD4D8](0, a2);
    v12 = sub_1BB86CBE0();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 0, 1, v12);
  }
  return result;
}

void sub_1BB692190()
{
  sub_1BB871C80();
  type metadata accessor for FeedAdGroupDataProvider.FailureReason();
}

void sub_1BB6921E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedAdGroupDataProvider<A, B, C, D>.FailureReason, a1);
  v10 = sub_1BB874650();
  MEMORY[0x1E0C80A78](v10);
  FeedAdGroupDataProvider.groupData(for:includeAdjacentGroups:)(v9, 0, (uint64_t *)((char *)&a9 - v11));
}

uint64_t sub_1BB692250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BB0118F4(v2, v3 - 128, v0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 0, 1, v1);
}

void sub_1BB6922B4()
{
  sub_1BB871C80();
  type metadata accessor for FeedAdGroupDataProvider.FailureReason();
}

uint64_t sub_1BB692310(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[96];

  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedAdGroupDataProvider<A, B, C, D>.FailureReason, a1);
  v6 = sub_1BB874650();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)&v15[-v10];
  v12 = v2[3];
  v13 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  if (!*(_BYTE *)(v5 - 145))
    FeedAdGroupDataProvider.groupData(before:)(v3, v11);
  if (*(_BYTE *)(v5 - 145) == 1)
    FeedAdGroupDataProvider.groupData(for:includeAdjacentGroups:)(v3, 0, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
}

void sub_1BB69246C()
{
  sub_1BB871C80();
  type metadata accessor for FeedAdGroupDataProvider.FailureReason();
}

uint64_t sub_1BB6924C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[96];

  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedAdGroupDataProvider<A, B, C, D>.FailureReason, a1);
  v6 = sub_1BB874650();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v15[-v10];
  v12 = v2[3];
  v13 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  if (!*(_BYTE *)(v5 - 145))
    FeedAdGroupDataProvider.groupData(for:includeAdjacentGroups:)(v3, 0, v11);
  if (*(_BYTE *)(v5 - 145) == 1)
    FeedAdGroupDataProvider.groupData(after:)(v3, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
}

uint64_t sub_1BB692624(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  unsigned int *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;

  v58 = a5;
  v54 = a3;
  v55 = a4;
  sub_1BA4A3FB4(0, &qword_1ED3B0BA8, (void (*)(uint64_t))MEMORY[0x1E0D53248]);
  MEMORY[0x1E0C80A78](v7);
  v56 = (char *)&v49 - v8;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B0B60, (void (*)(uint64_t))MEMORY[0x1E0D52BF8]);
  MEMORY[0x1E0C80A78](v9);
  v57 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v53 = (char *)&v49 - v12;
  v52 = sub_1BB871C80();
  v60 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v51 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v50 = (char *)&v49 - v15;
  v16 = sub_1BB871CBC();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1BB871CD4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v21 = a2[3];
  v22 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v21);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
  sub_1BB871CC8();
  sub_1BA4A2870(&qword_1ED3B0B70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52C90], MEMORY[0x1E0D52C88]);
  sub_1BB871EF0();
  v23 = *(void (**)(char *, uint64_t))(v18 + 8);
  v24 = v59;
  v23(v20, v17);
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  sub_1BA4A2870(&qword_1ED3B0B58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52BF8], MEMORY[0x1E0D52BF0]);
  v25 = v52;
  v26 = (uint64_t)v53;
  sub_1BB871EF0();
  v27 = v60;
  sub_1BB692B4C(v55, v26);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v26, 1, v25);
  v30 = (unsigned int *)MEMORY[0x1E0D53240];
  if (v29 == 1)
  {
    sub_1BA502AD0(v26, (unint64_t *)&unk_1ED3B0B60, (void (*)(uint64_t))MEMORY[0x1E0D52BF8]);
    v31 = (uint64_t)v56;
  }
  else
  {
    v32 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v50, v26, v25);
    v33 = v25;
    v34 = v24[3];
    v55 = v24[4];
    __swift_project_boxed_opaque_existential_1(v24, v34);
    v35 = *MEMORY[0x1E0D53228];
    v36 = sub_1BB871FA4();
    v31 = (uint64_t)v56;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v56, v35, v36);
    v37 = *v30;
    v38 = sub_1BB871FB0();
    v39 = *(_QWORD *)(v38 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 104))(v31, v37, v38);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
    v25 = v33;
    sub_1BB871EE4();
    v27 = v60;
    sub_1BA502AD0(v31, &qword_1ED3B0BA8, (void (*)(uint64_t))MEMORY[0x1E0D53248]);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v33);
  }
  v40 = v57;
  sub_1BB692B4C(v58, v57);
  if (v28(v40, 1, v25) == 1)
    return sub_1BA502AD0(v40, (unint64_t *)&unk_1ED3B0B60, (void (*)(uint64_t))MEMORY[0x1E0D52BF8]);
  v42 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v51, v40, v25);
  __swift_project_boxed_opaque_existential_1(v59, v59[3]);
  v43 = *MEMORY[0x1E0D53230];
  v44 = sub_1BB871FA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v31, v43, v44);
  v45 = *MEMORY[0x1E0D53240];
  v46 = v31;
  v47 = sub_1BB871FB0();
  v48 = *(_QWORD *)(v47 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 104))(v46, v45, v47);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v46, 0, 1, v47);
  sub_1BB871EE4();
  sub_1BA502AD0(v46, &qword_1ED3B0BA8, (void (*)(uint64_t))MEMORY[0x1E0D53248]);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v42, v25);
}

uint64_t sub_1BB692B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B0B60, (void (*)(uint64_t))MEMORY[0x1E0D52BF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB692BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unsigned int (*v11)(unint64_t, uint64_t, uint64_t);

  v1 = sub_1BB871C80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B0B60, (void (*)(uint64_t))MEMORY[0x1E0D52BF8]);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v7) & ~v7;
  v9 = (*(_QWORD *)(v6 + 64) + v7 + v8) & ~v7;
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v10 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v10(v0 + v3, v1);
  v11 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48);
  if (!v11(v0 + v8, 1, v1))
    v10(v0 + v8, v1);
  if (!v11(v0 + v9, 1, v1))
    v10(v0 + v9, v1);
  return swift_deallocObject();
}

uint64_t sub_1BB692CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B0B60, (void (*)(uint64_t))MEMORY[0x1E0D52BF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB692CFC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(sub_1BB871C80() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B0B60, (void (*)(uint64_t))MEMORY[0x1E0D52BF8]);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  return sub_1BB692624(a1, (_QWORD *)(v1 + 16), v1 + v4, v1 + ((v5 + v8) & ~v8), v1 + ((*(_QWORD *)(v7 + 64) + v8 + ((v5 + v8) & ~v8)) & ~v8));
}

void sub_1BB692D8C()
{
  uint64_t v0;

  dispatch_group_enter(*(dispatch_group_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168)));
}

void sub_1BB692D9C()
{
  uint64_t v0;

  dispatch_group_leave(*(dispatch_group_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168)));
}

uint64_t method lookup function for FeedNativeAdRequester()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedNativeAdRequester.__allocating_init(blueprint:groupDataProvider:adManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t FormatPuzzleTypeBinding.Text.text(from:config:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t result;
  id v17;
  void *v18;
  uint64_t v19;

  v3 = *(void **)(a1 + 56);
  if (*(_BYTE *)(v2 + 8) == 1)
  {
    v4 = objc_msgSend(v3, sel_name);
LABEL_3:
    v5 = sub_1BB8729A0();

    return v5;
  }
  if (!*(_QWORD *)(a2 + 24))
    return 0;
  v6 = (uint64_t *)v2;
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *v6;
  v9 = objc_msgSend(v3, sel_identifier);
  v10 = sub_1BB8729A0();
  v12 = v11;

  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_14;
  v13 = sub_1BA6E35A8(v10, v12);
  if ((v14 & 1) == 0)
    goto LABEL_14;
  v15 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v13);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  if (!(v15 >> 62))
  {
    if (v8 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_9;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v19 = sub_1BB873F30();
  result = swift_bridgeObjectRelease();
  if (v8 >= v19)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_9:
  if ((v15 & 0xC000000000000001) != 0)
  {
    v17 = (id)MEMORY[0x1BCCE4630](v8, v15);
    goto LABEL_13;
  }
  if (v8 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v8 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = *(id *)(v15 + 8 * v8 + 32);
LABEL_13:
    v18 = v17;
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v18, sel_name);

    goto LABEL_3;
  }
  __break(1u);
  return result;
}

BOOL static FormatPuzzleTypeBinding.Text.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 8) == 1)
    return (*(_BYTE *)(a2 + 8) & 1) != 0;
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return *(_QWORD *)a1 == *(_QWORD *)a2;
}

uint64_t FormatPuzzleTypeBinding.Text.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void *static FormatPuzzleTypeBinding.Text.CodingType.allCases.getter()
{
  return &unk_1E72711C0;
}

uint64_t FormatPuzzleTypeBinding.Text.CodingType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x747865546B6E6172;
  else
    return 1701667182;
}

uint64_t sub_1BB693048(char *a1, char *a2)
{
  return sub_1BB7F60FC(*a1, *a2);
}

uint64_t sub_1BB693054()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB6930CC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB693120()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB693194@<X0>(char *a1@<X8>)
{
  return FormatPuzzleTypeBinding.Text.CodingType.init(rawValue:)(a1);
}

void sub_1BB6931A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1701667182;
  if (*v1)
    v2 = 0x747865546B6E6172;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB6931D8()
{
  sub_1BB693598();
  return sub_1BB872D60();
}

uint64_t sub_1BB693234()
{
  sub_1BB693598();
  return sub_1BB872D0C();
}

void sub_1BB693280(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252820;
}

uint64_t sub_1BB693290@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPuzzleTypeBinding.Text.init(from:)(a1, a2);
}

uint64_t sub_1BB6932A4(_QWORD *a1)
{
  return FormatPuzzleTypeBinding.Text.encode(to:)(a1);
}

BOOL sub_1BB6932B8(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 8) == 1)
    return (*(_BYTE *)(a2 + 8) & 1) != 0;
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return *(_QWORD *)a1 == *(_QWORD *)a2;
}

unint64_t sub_1BB6932F8()
{
  unint64_t result;

  result = qword_1EF2CA338;
  if (!qword_1EF2CA338)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Text.CodingType, &type metadata for FormatPuzzleTypeBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2CA338);
  }
  return result;
}

unint64_t sub_1BB693340()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2CA340;
  if (!qword_1EF2CA340)
  {
    sub_1BB693388();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2CA340);
  }
  return result;
}

void sub_1BB693388()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CA348)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CA348);
  }
}

unint64_t sub_1BB6933DC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB693400();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB693400()
{
  unint64_t result;

  result = qword_1EF2CA350;
  if (!qword_1EF2CA350)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Text, &type metadata for FormatPuzzleTypeBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2CA350);
  }
  return result;
}

unint64_t sub_1BB693444(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE75C88();
  a1[2] = sub_1BAEF9B4C();
  result = sub_1BB693478();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB693478()
{
  unint64_t result;

  result = qword_1EF2CA358;
  if (!qword_1EF2CA358)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Text, &type metadata for FormatPuzzleTypeBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2CA358);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding.Text()
{
  return &type metadata for FormatPuzzleTypeBinding.Text;
}

uint64_t _s4TextO10CodingTypeOwst_3(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB693518 + 4 * byte_1BB93C4D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB69354C + 4 * byte_1BB93C4D0[v4]))();
}

uint64_t sub_1BB69354C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB693554(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB69355CLL);
  return result;
}

uint64_t sub_1BB693568(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB693570);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB693574(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB69357C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding.Text.CodingType()
{
  return &type metadata for FormatPuzzleTypeBinding.Text.CodingType;
}

unint64_t sub_1BB693598()
{
  unint64_t result;

  result = qword_1ED3A0F98;
  if (!qword_1ED3A0F98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Text.CodingType, &type metadata for FormatPuzzleTypeBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A0F98);
  }
  return result;
}

_QWORD *sub_1BB6935DC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v28[3];
  uint64_t v29;
  unint64_t v30;

  v4 = (_QWORD *)sub_1BB8726B8();
  v5 = *(v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA657D64();
  *v7 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, _QWORD *))(v5 + 104))(v7, *MEMORY[0x1E0DEF738], v4);
  v8 = sub_1BB8726D0();
  (*(void (**)(uint64_t *, _QWORD *))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v18 = LayeredMediaLayerProvider.syncLayers()();
    swift_retain();
    v19 = sub_1BA8FAEA0(v18);
    swift_bridgeObjectRelease();
    swift_release();
    v20 = a1 + 2;
    v22 = a1[5];
    v21 = a1[6];
    __swift_project_boxed_opaque_existential_1(v20, v22);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v22, v21);
    v25 = v24;
  }
  else
  {
    __break(1u);
    swift_once();
    v9 = (id)qword_1ED4763D0;
    v10 = sub_1BB8732F4();
    sub_1BA7AA598();
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
    v29 = 0;
    v30 = 0xE000000000000000;
    v28[2] = v4;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    sub_1BB873E34();
    v12 = v29;
    v13 = v30;
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v11 + 32) = v12;
    *(_QWORD *)(v11 + 40) = v13;
    sub_1BB86EF44("Failed to create a layered media view model, error=%{public}@", 61, 2, &dword_1BA493000, v9, v10, v11);

    swift_bridgeObjectRelease();
    v14 = a1 + 2;
    v16 = a1[5];
    v15 = a1[6];
    __swift_project_boxed_opaque_existential_1(v14, v16);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
    v25 = v17;

    v19 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for LayeredMediaViewModel();
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v23;
  v26[3] = v25;
  v26[4] = v19;
  v26[5] = a2;
  swift_bridgeObjectRetain();
  return v26;
}

uint64_t FormatLayeredMediaNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

unint64_t FormatLayeredMediaNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 88);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

uint64_t FormatLayeredMediaNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayeredMediaNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 80);
}

uint64_t FormatLayeredMediaNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t FormatLayeredMediaNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayeredMediaNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatLayeredMediaNode.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatLayeredMediaNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatLayeredMediaNode.animation.getter()
{
  return swift_retain();
}

unint64_t FormatLayeredMediaNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatLayeredMediaNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 64);
  return swift_retain();
}

uint64_t FormatLayeredMediaNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayeredMediaNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatLayeredMediaNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatLayeredMediaNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t FormatLayeredMediaNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 88) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatLayeredMediaNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatLayeredMediaNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatLayeredMediaNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatLayeredMediaNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 112);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 104);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatLayeredMediaNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayeredMediaNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatLayeredMediaNode.__allocating_init(identifier:content:style:animation:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11, uint64_t *a12, uint64_t a13)
{
  uint64_t v17;

  v17 = swift_allocObject();
  FormatLayeredMediaNode.init(identifier:content:style:animation:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  return v17;
}

uint64_t FormatLayeredMediaNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BA719718(*(_QWORD *)(v0 + 56));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatLayeredMediaNode.__deallocating_deinit()
{
  FormatLayeredMediaNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB693E38(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB693F30(&qword_1EF2CA360, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB693E6C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB693F30((unint64_t *)&unk_1ED3BB8A8, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNode);
  a1[2] = sub_1BB693F30((unint64_t *)&unk_1ED3A01F0, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNode);
  result = sub_1BB693F30(&qword_1EF2CA368, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB693ED0(_QWORD *a1)
{
  return FormatLayeredMediaNode.encode(to:)(a1);
}

uint64_t sub_1BB693EF0(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed22FormatLayeredMediaNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BB693EFC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB693F30(&qword_1EF2CA370, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB693F30(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatLayeredMediaNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB693F6C@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X1>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>, double a13@<D4>, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[5];

  v65 = a7;
  v69 = a6;
  v64 = a5;
  v61 = a4;
  v60 = a2;
  v62 = a1;
  v66 = a8;
  v68 = a15;
  v67 = a14;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v23);
  v63 = (uint64_t)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v60 - v26;
  v28 = type metadata accessor for FormatNodeStateData.Data();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86D744();
  v33 = v32;
  v35 = v34;
  sub_1BB86D774();
  v78[0] = v33;
  v78[1] = v35;
  *(double *)&v78[2] = a11;
  *(double *)&v78[3] = a12;
  v78[4] = v36;
  if ((a3 & 1) != 0)
    v37 = &unk_1E72711E8;
  else
    v37 = (void *)MEMORY[0x1E0DEE9D8];
  v38 = swift_retain();
  v39 = sub_1BB694734(v38, (uint64_t)v37, v61, (uint64_t)v78, v60);
  swift_release();
  swift_bridgeObjectRelease();
  v40 = v69;
  *(_QWORD *)v31 = v64;
  *((_QWORD *)v31 + 1) = v40;
  *((double *)v31 + 2) = a13;
  *((_QWORD *)v31 + 3) = v39;
  v31[32] = a3;
  swift_storeEnumTagMultiPayload();
  sub_1BA82E948((uint64_t)v31, (uint64_t)v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v27, 0, 1, v28);
  v41 = v63;
  sub_1BA82E954((uint64_t)v27, v63);
  swift_beginAccess();
  v65 = v39;
  swift_retain_n();
  v42 = v68;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1BA722740(v41, v67, v42);
  swift_endAccess();
  sub_1BB6948E8((uint64_t)v27);
  sub_1BA7249BC((uint64_t)v31);
  v43 = v62;
  v44 = *(_QWORD *)(v62 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  v45 = *(_QWORD *)(a16 + 16);
  v46 = *(_QWORD *)(a16 + 24);
  v47 = *(_QWORD *)(v44 + 40);
  if (v47)
  {
    v75 = *(_QWORD *)(v44 + 32);
    v76 = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v48);
    sub_1BB872AFC(v49);
    swift_bridgeObjectRelease();
    v64 = v75;
    v63 = v76;
    v45 = *(_QWORD *)(a16 + 16);
    v46 = *(_QWORD *)(a16 + 24);
  }
  else
  {
    swift_bridgeObjectRetain();
    v64 = v45;
    v63 = v46;
  }
  v50 = *(_QWORD *)(a16 + 64);
  if (v50)
  {
    v51 = *(_QWORD *)(v50 + 16);
    swift_retain();
  }
  else
  {
    v51 = 0;
  }
  v52 = swift_allocObject();
  v77 = v51;
  swift_beginAccess();
  v61 = *(_QWORD *)(a16 + 80);
  swift_beginAccess();
  v73 = *(_QWORD *)(a16 + 88);
  v53 = v73;
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v53);
  sub_1BA67C978(v43, &v74);
  sub_1BA6EEDB4(v53);
  swift_beginAccess();
  v54 = *(_BYTE *)(a16 + 96);
  v55 = *(_BYTE *)(a16 + 112);
  v71 = *(_QWORD *)(a16 + 104);
  v72 = v55;
  sub_1BB86DD80();
  v56 = v70;
  type metadata accessor for FormatLayeredMediaNodeLayoutAttributes();
  swift_allocObject();
  swift_retain();
  v57 = v68;
  swift_bridgeObjectRetain();
  v58 = sub_1BB3C8FC4(v67, v57, v64, v63, v45, v46, &v77, v61, a9, a10, a11, a12, &v74, v54, &v71, v56, a17);
  swift_bridgeObjectRelease();
  swift_release_n();
  result = swift_release();
  *(_QWORD *)(v52 + 16) = v58;
  *v66 = v52 | 0x6000000000000004;
  return result;
}

uint64_t sub_1BB6944D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB69451C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB694568@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return result;
}

uint64_t sub_1BB6945AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 80) = v2;
  return result;
}

unint64_t sub_1BB6945EC@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 88);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BB694638@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 96);
  return result;
}

uint64_t sub_1BB69467C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 96) = v2;
  return result;
}

uint64_t sub_1BB6946BC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatLayeredMediaNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatLayeredMediaNode.__allocating_init(identifier:content:style:animation:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1BB694734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  uint64_t v20;
  _QWORD v22[5];

  v22[3] = type metadata accessor for LayeredMediaLoader();
  v22[4] = &protocol witness table for LayeredMediaLoader;
  v22[0] = a1;
  v10 = a5[5];
  v11 = a5[6];
  __swift_project_boxed_opaque_existential_1(a5 + 2, v10);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v11 + 8);
  swift_retain();
  v13 = (_QWORD *)v12(v22, a2, v10, v11);
  v14 = sub_1BB6935DC(v13, a3);
  v15 = a5[8];
  swift_retain();
  v16 = swift_bridgeObjectRetain();
  sub_1BB71D238(v16, v15, a4);
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for LayeredMediaRenderedViewModel();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v14;
  v18 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v17 + 24) = *(_OWORD *)a4;
  *(_OWORD *)(v17 + 40) = v18;
  *(_QWORD *)(v17 + 56) = *(_QWORD *)(a4 + 32);
  sub_1BA84125C();
  swift_retain();
  v19 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39D958, (uint64_t (*)(uint64_t))sub_1BA84125C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA81DC64();
  v20 = sub_1BB86E920();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  *(_QWORD *)(v17 + 64) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v17;
}

uint64_t sub_1BB6948E8(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB69493C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t IssueService.__allocating_init(issuesFetchOperationFactory:issueReadingHistory:)(__int128 *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1BA4CECCC(a1, v4 + 16);
  *(_QWORD *)(v4 + 56) = a2;
  return v4;
}

uint64_t sub_1BB6949B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BA4A3E50();
    v4 = sub_1BB872DB4();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t IssueServiceType.fetchIssue(for:)()
{
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A25A0, (uint64_t (*)(uint64_t))sub_1BA4A3E50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

void sub_1BB694A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  void *v12;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1BA4B08A0(0);
  swift_retain();
  sub_1BB86EC14();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1BA573ED8;
  v9[5] = v8;
  swift_retain();
  v10 = (void *)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();
  swift_release();

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  swift_retain();
  v12 = (void *)sub_1BB86E854();
  sub_1BB86E9A4();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1BB694C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  sub_1BA6EA07C();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v9 + 32) = a2;
  *(_QWORD *)(v9 + 40) = a3;
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a5 + 8);
  swift_bridgeObjectRetain();
  v11 = v10(v9, a4, a5);
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1BB694CB8(uint64_t *a1, void (*a2)(void), uint64_t a3, void (*a4)(void *))
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;

  v6 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1BB873F30())
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1BB6954F4();
    v10 = (void *)swift_allocError();
    a2();

    return;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x1BCCE4630](0, v6);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v6 + 32);
LABEL_6:
    v9 = v8;
    swift_bridgeObjectRelease();
    a4(v9);

    return;
  }
  __break(1u);
}

uint64_t IssueServiceType.cachedIssue(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;

  sub_1BA6EA07C();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 16);
  swift_bridgeObjectRetain();
  v10 = v9(v8, a3, a4);
  result = swift_bridgeObjectRelease();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (!v12)
      goto LABEL_7;
  }
  else
  {
    v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x1BCCE4630](0, v10);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(v10 + 32);
LABEL_6:
    v12 = (uint64_t)v13;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t IssueService.init(issuesFetchOperationFactory:issueReadingHistory:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BA4CECCC(a1, v2 + 16);
  *(_QWORD *)(v2 + 56) = a2;
  return v2;
}

void sub_1BB694EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BB694A98(a1, a2, a3, a4);
}

uint64_t IssueService.fetchIssues(for:)()
{
  sub_1BA4B07F0(0, &qword_1ED39E370, (uint64_t (*)(uint64_t))sub_1BA4B08A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BB694F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  void *v16;
  _QWORD *v17;
  void *v18;
  _QWORD v20[6];

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = a5[5];
  v14 = a5[6];
  __swift_project_boxed_opaque_existential_1(a5 + 2, v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  v16 = (void *)v15(a6, v13, v14);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a3;
  v17[3] = a4;
  v17[4] = sub_1BA573F08;
  v17[5] = v12;
  v20[4] = sub_1BB6954E8;
  v20[5] = v17;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 1107296256;
  v20[2] = sub_1BB6949B0;
  v20[3] = &block_descriptor_10_7;
  v18 = _Block_copy(v20);
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_setFetchCompletionHandler_, v18);
  _Block_release(v18);
  sub_1BB86E050();
  sub_1BB86E020();
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    sub_1BB86E038();
  else
    objc_msgSend(v16, sel_start);

  return swift_release();
}

void sub_1BB695120(uint64_t a1, id a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void))
{
  id v6;
  id v7;
  uint64_t v8;

  if (a2)
  {
    v6 = a2;
    v7 = a2;
    v8 = (uint64_t)v6;
LABEL_3:
    a3(v8);

    return;
  }
  if (!a1)
  {
    sub_1BB6954F4();
    v8 = swift_allocError();
    v6 = (id)v8;
    goto LABEL_3;
  }
  a5();
}

uint64_t IssueService.cachedIssues(for:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t *v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[6];

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
  v6 = objc_msgSend((id)objc_opt_self(), sel_cachedOnlyCachePolicy);
  objc_msgSend(v5, sel_setCachePolicy_, v6);

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = MEMORY[0x1E0DEE9D8];
  v8 = (uint64_t *)(v7 + 16);
  v12[4] = sub_1BB695498;
  v12[5] = v7;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BB6949B0;
  v12[3] = &block_descriptor_98;
  v9 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_setFetchCompletionHandler_, v9);
  _Block_release(v9);
  objc_msgSend(v5, sel_start);
  objc_msgSend(v5, sel_waitUntilFinishedWithTimeout_, 1.79769313e308);

  swift_beginAccess();
  v10 = *v8;
  swift_bridgeObjectRetain();
  swift_release();
  return v10;
}

uint64_t sub_1BB695334(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (result)
  {
    v4 = result;
    swift_beginAccess();
    *(_QWORD *)(a3 + 16) = v4;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t IssueService.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t IssueService.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB6953E4()
{
  sub_1BA4B07F0(0, &qword_1ED39E370, (uint64_t (*)(uint64_t))sub_1BA4B08A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BB69544C(uint64_t a1)
{
  return IssueService.cachedIssues(for:)(a1);
}

uint64_t sub_1BB69546C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB694F88(a1, a2, a3, a4, *(_QWORD **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1BB695474()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB695498(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB695334(a1, a2, v2);
}

uint64_t dispatch thunk of IssueServiceType.fetchIssues(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of IssueServiceType.cachedIssues(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for IssueService()
{
  return objc_opt_self();
}

uint64_t method lookup function for IssueService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IssueService.__allocating_init(issuesFetchOperationFactory:issueReadingHistory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1BB6954E8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BB695120(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

unint64_t sub_1BB6954F4()
{
  unint64_t result;

  result = qword_1EF2CA378;
  if (!qword_1EF2CA378)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93C9CC, &type metadata for IssueServiceErrors);
    atomic_store(result, (unint64_t *)&qword_1EF2CA378);
  }
  return result;
}

uint64_t sub_1BB695538()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB69555C()
{
  uint64_t *v0;

  return sub_1BB694C14(v0[4], v0[5], v0[6], v0[2], v0[3]);
}

void sub_1BB695580(uint64_t *a1)
{
  uint64_t v1;

  sub_1BB694CB8(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void *))(v1 + 32));
}

uint64_t storeEnumTagSinglePayload for IssueServiceErrors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB6955DC + 4 * byte_1BB93C8E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB6955FC + 4 * byte_1BB93C8E5[v4]))();
}

_BYTE *sub_1BB6955DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB6955FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB695604(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB69560C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB695614(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB69561C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IssueServiceErrors()
{
  return &type metadata for IssueServiceErrors;
}

unint64_t sub_1BB69563C()
{
  unint64_t result;

  result = qword_1EF2CA380;
  if (!qword_1EF2CA380)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93C9A4, &type metadata for IssueServiceErrors);
    atomic_store(result, (unint64_t *)&qword_1EF2CA380);
  }
  return result;
}

uint64_t FormatBorderEdge.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB6956BC + 4 * byte_1BB93CA10[*v0]))(7368564, 0xE300000000000000);
}

uint64_t sub_1BB6956BC()
{
  return 0x676E696461656CLL;
}

uint64_t sub_1BB6956D4()
{
  return 0x676E696C69617274;
}

uint64_t sub_1BB6956EC()
{
  return 0x6D6F74746F62;
}

uint64_t sub_1BB695700()
{
  return 7105633;
}

void sub_1BB69570C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *v1;
  if ((_DWORD)v3 == 4 || v2 == 0)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      goto LABEL_9;
  }
  else
  {
    v6 = swift_bridgeObjectRetain();
    v5 = v6;
    if (!*(_QWORD *)(v6 + 16))
LABEL_9:
      __asm { BR              X9 }
  }
  swift_bridgeObjectRetain();
  __asm { BR              X9 }
}

_QWORD *sub_1BB695A94()
{
  _QWORD *v0;
  uint64_t v2;
  uint64_t v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  double Width;
  unint64_t v9;
  unint64_t v10;
  double *v11;
  CGRect v13;

  if (v2)
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v13.origin.x = v7;
  v13.origin.y = v6;
  v13.size.width = v5;
  v13.size.height = v4;
  Width = CGRectGetWidth(v13);
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v0 = sub_1BB38EE5C(0, v0[2] + 1, 1, v0);
  v10 = v0[2];
  v9 = v0[3];
  if (v10 >= v9 >> 1)
    v0 = sub_1BB38EE5C((_QWORD *)(v9 > 1), v10 + 1, 1, v0);
  v0[2] = v10 + 1;
  v11 = (double *)&v0[5 * v10];
  v11[4] = 0.0;
  *((_QWORD *)v11 + 5) = v3;
  v11[6] = Width - 0.0;
  *((_QWORD *)v11 + 7) = v3;
  *((_BYTE *)v11 + 64) = 0;
  return v0;
}

void sub_1BB6967B4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB6967F8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB696870()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB6968A4()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB696908()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB696930 + 4 * byte_1BB93CA29[*v0]))();
}

void sub_1BB696930(_QWORD *a1@<X8>)
{
  *a1 = 0x676E696461656CLL;
  a1[1] = 0xE700000000000000;
}

void sub_1BB69694C(_QWORD *a1@<X8>)
{
  *a1 = 0x676E696C69617274;
  a1[1] = 0xE800000000000000;
}

void sub_1BB696968(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F74746F62;
  a1[1] = 0xE600000000000000;
}

void sub_1BB696980(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 7105633;
  a1[1] = v1;
}

uint64_t FormatBorderEdge.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB6969B8 + 4 * byte_1BB93CA2E[*v0]))(7368564, 0xE300000000000000);
}

uint64_t sub_1BB6969B8()
{
  return 0x676E696461656CLL;
}

uint64_t sub_1BB6969D0()
{
  return 0x676E696C69617274;
}

uint64_t sub_1BB6969E8()
{
  return 0x6D6F74746F62;
}

uint64_t sub_1BB6969FC()
{
  return 7105633;
}

uint64_t sub_1BB696A08()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB696A30 + 4 * byte_1BB93CA33[*v0]))(7368564, 0xE300000000000000);
}

uint64_t sub_1BB696A30()
{
  return 0x676E696461656CLL;
}

uint64_t sub_1BB696A48()
{
  return 0x676E696C69617274;
}

uint64_t sub_1BB696A60()
{
  return 0x6D6F74746F62;
}

uint64_t sub_1BB696A74()
{
  return 7105633;
}

BOOL sub_1BB696A88(_BYTE *a1, char *a2)
{
  char v2;
  char v3;
  _BYTE v5[2];

  v2 = *a2;
  v5[1] = *a1;
  v5[0] = v2;
  _s8NewsFeed16FormatBorderEdgeO1loiySbAC_ACtFZ_0((uint64_t)v5);
  return (v3 & 1) == 0;
}

BOOL sub_1BB696AC4(char *a1)
{
  char v1;
  char v3;

  v3 = *a1;
  _s8NewsFeed16FormatBorderEdgeO1loiySbAC_ACtFZ_0((uint64_t)&v3);
  return (v1 & 1) == 0;
}

uint64_t sub_1BB696B00(_BYTE *a1, char *a2)
{
  char v2;
  char v3;
  _BYTE v5[2];

  v2 = *a2;
  v5[1] = *a1;
  v5[0] = v2;
  _s8NewsFeed16FormatBorderEdgeO1loiySbAC_ACtFZ_0((uint64_t)v5);
  return v3 & 1;
}

BOOL _s8NewsFeed16FormatBorderEdgeO4PathO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  _BOOL8 result;
  id v20;

  v3 = *(double *)a1;
  v2 = *(uint64_t *)(a1 + 8);
  v5 = *(uint64_t *)(a1 + 16);
  v4 = *(uint64_t *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  v8 = *(double *)a2;
  v7 = *(uint64_t *)(a2 + 8);
  v9 = *(uint64_t *)(a2 + 16);
  v10 = *(uint64_t *)(a2 + 24);
  v11 = *(unsigned __int8 *)(a2 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    if (v6 == 1)
    {
      if (v11 == 1)
      {
        sub_1BA92CDB0();
        sub_1BB1293B0(*(id *)&v8, v7, v9, v10, 1u);
        sub_1BB1293B0(*(id *)&v3, v2, v5, v4, 1u);
        v12 = sub_1BB8738B8();
        sub_1BB1293C8(*(id *)&v3, v2, v5, v4, 1u);
        v13 = v8;
        v14 = v7;
        v15 = v9;
        v16 = v10;
        v17 = 1;
LABEL_16:
        sub_1BB1293C8(*(id *)&v13, v14, v15, v16, v17);
        return v12 & 1;
      }
    }
    else if (v11 == 2)
    {
      sub_1BA92CDB0();
      sub_1BB1293B0(*(id *)&v8, v7, v9, v10, 2u);
      sub_1BB1293B0(*(id *)&v3, v2, v5, v4, 2u);
      v12 = sub_1BB8738B8();
      sub_1BB1293C8(*(id *)&v3, v2, v5, v4, 2u);
      v13 = v8;
      v14 = v7;
      v15 = v9;
      v16 = v10;
      v17 = 2;
      goto LABEL_16;
    }
    v20 = *(id *)&v3;
    goto LABEL_18;
  }
  if (*(_BYTE *)(a2 + 32))
  {
LABEL_18:
    sub_1BB1293B0(*(id *)&v8, v7, v9, v10, v11);
    sub_1BB1293C8(*(id *)&v3, v2, v5, v4, v6);
    sub_1BB1293C8(*(id *)&v8, v7, v9, v10, v11);
    return 0;
  }
  sub_1BB1293C8(*(id *)a1, v2, v5, v4, 0);
  sub_1BB1293C8(*(id *)&v8, v7, v9, v10, 0);
  result = 0;
  if (v3 == v8 && *(double *)&v2 == *(double *)&v7)
    return *(double *)&v4 == *(double *)&v10 && *(double *)&v5 == *(double *)&v9;
  return result;
}

void _s8NewsFeed16FormatBorderEdgeO1loiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB696DC0@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BB696E28 + 4 * byte_1BB93CA3D[a1]))(0x676E696461656CLL);
}

uint64_t sub_1BB696E28(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x676E696461656CLL && v1 == 0xE700000000000000)
    v2 = 0;
  else
    v2 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

unint64_t sub_1BB696EDC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB696F08();
  result = sub_1BA4EA45C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB696F08()
{
  unint64_t result;

  result = qword_1EF2CA388;
  if (!qword_1EF2CA388)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorderEdge, &type metadata for FormatBorderEdge);
    atomic_store(result, (unint64_t *)&qword_1EF2CA388);
  }
  return result;
}

unint64_t sub_1BB696F4C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB696F70();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB696F70()
{
  unint64_t result;

  result = qword_1EF2CA390;
  if (!qword_1EF2CA390)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorderEdge, &type metadata for FormatBorderEdge);
    atomic_store(result, (unint64_t *)&qword_1EF2CA390);
  }
  return result;
}

unint64_t sub_1BB696FB4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA83323C();
  a1[2] = sub_1BA8332C4();
  result = sub_1BA833280();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatBorderEdge()
{
  return &type metadata for FormatBorderEdge;
}

void destroy for FormatBorderEdge.Path(uint64_t a1)
{
  sub_1BB1293C8(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for FormatBorderEdge.Path(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BB1293B0(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FormatBorderEdge.Path(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BB1293B0(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BB1293C8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FormatBorderEdge.Path(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1BB1293C8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBorderEdge.Path(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatBorderEdge.Path(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBorderEdge.Path()
{
  return &type metadata for FormatBorderEdge.Path;
}

NewsFeed::FeedItemRendererOptions __swiftcall FeedItemRendererOptions.init(allowContentHiding:)(NewsFeed::FeedItemRendererOptions allowContentHiding)
{
  NewsFeed::FeedItemRendererOptions *v1;

  v1->allowContentHiding = allowContentHiding.allowContentHiding;
  return allowContentHiding;
}

uint64_t FeedItemRendererType.render(in:at:layoutAttributes:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  char v8;

  v5 = *a3;
  v8 = 1;
  v7 = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t *, uint64_t (*)(_QWORD), _QWORD, uint64_t, uint64_t))(a5 + 72))(a1, a2, &v8, &v7, nullsub_1, 0, a4, a5);
}

uint64_t FeedItemRendererOptions.allowContentHiding.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FeedItemRenderer.presentingViewController.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 16);
}

void FeedItemRenderer.presentingViewController.setter(void *a1)
{
  sub_1BB69C618();

}

void (*FeedItemRenderer.presentingViewController.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCE5D40](v1 + 16);
  return sub_1BB6972EC;
}

void sub_1BB6972EC(uint64_t *a1, char a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a1;
  v4 = *(void **)(*a1 + 24);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 32);
    swift_endAccess();

    v6 = *(_QWORD *)(v5 + 88);
    ObjectType = swift_getObjectType();
    v8 = MEMORY[0x1BCCE5D40](v5 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, ObjectType, v6);
    v9 = *(_QWORD *)(v5 + 208);
    v10 = swift_getObjectType();
    v11 = MEMORY[0x1BCCE5D40](v5 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v11, v10, v9);
  }
  free((void *)v3);
}

uint64_t FeedItemRenderer.disableFormatLayoutViewCellDequeueing.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t FeedItemRenderer.disableFormatLayoutViewCellDequeueing.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 24) = a1;
  return result;
}

uint64_t (*FeedItemRenderer.disableFormatLayoutViewCellDequeueing.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BB69745C(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + 440) = v1;
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall FeedItemRenderer.register(view:)(UICollectionView *view)
{
  uint64_t v1;

  sub_1BA5DFD9C(0, &qword_1ED3B09C0, &qword_1ED3B38C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC8A0], &qword_1ED3B38B8);
  sub_1BB8733A8();
  sub_1BA5DFD9C(0, &qword_1ED3B09C8, &qword_1ED3B38D0, (uint64_t (*)(uint64_t))type metadata accessor for VideoView, &qword_1ED3B38C8);
  sub_1BB8733A8();
  sub_1BB69C6C4(0, &qword_1ED3B09B0, (uint64_t (*)(uint64_t))type metadata accessor for GapView, &qword_1ED3B8FF8, (uint64_t)&protocol conformance descriptor for GapView);
  sub_1BB8733A8();
  sub_1BB69C6C4(0, &qword_1ED3B0998, (uint64_t (*)(uint64_t))type metadata accessor for GapOfflineView, qword_1ED3B4268, (uint64_t)&protocol conformance descriptor for GapOfflineView);
  sub_1BB8733A8();
  sub_1BB69C6C4(0, &qword_1ED3B09D0, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAdView, qword_1ED3B1138, (uint64_t)&protocol conformance descriptor for FeedBannerAdView);
  sub_1BB8733A8();
  sub_1BB69C6C4(0, &qword_1ED3BA888, (uint64_t (*)(uint64_t))type metadata accessor for CategoryView, &qword_1ED3BA9D0, (uint64_t)&protocol conformance descriptor for CategoryView);
  sub_1BB8733A8();
  sub_1BB69C6C4(0, &qword_1ED3B0990, (uint64_t (*)(uint64_t))type metadata accessor for CoverIssueView, &qword_1ED3B3ED0, (uint64_t)&protocol conformance descriptor for CoverIssueView);
  sub_1BB8733A8();
  sub_1BB69C6C4(0, &qword_1ED3B09A0, (uint64_t (*)(uint64_t))type metadata accessor for CoverChannelView, &qword_1ED3B4730, (uint64_t)&protocol conformance descriptor for CoverChannelView);
  sub_1BB8733A8();
  sub_1BA841010();
  sub_1BB8733A8();
  sub_1BB69C6C4(0, &qword_1ED3BBF50, (uint64_t (*)(uint64_t))type metadata accessor for EngagementBannerView, &qword_1ED3BE7D8, (uint64_t)&protocol conformance descriptor for EngagementBannerView);
  sub_1BB8733A8();
  sub_1BB69C6C4(0, &qword_1ED3B09A8, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutView, &qword_1ED3B4890, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
  sub_1BB8733A8();
  *(_QWORD *)(v1 + 448) = sub_1BB873378();
  swift_release();
}

void FeedItemRenderer.render(in:at:options:layoutAttributes:)(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, void **a4@<X3>, _QWORD *a5@<X8>)
{
  void *v5;
  void *v6;
  unsigned __int8 v7;

  v5 = *a4;
  v7 = *a3;
  v6 = v5;
  FeedItemRenderer.render(in:at:options:layoutAttributes:actionSenderHandler:)(a1, a2, &v7, &v6, (uint64_t)nullsub_1, 0, a5);
}

void sub_1BB69776C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1BB86F7A8();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X11 }
}

uint64_t sub_1BB697830()
{
  unint64_t *v0;
  uint64_t result;

  sub_1BB69C6C4(0, &qword_1ED3B09A8, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutView, &qword_1ED3B4890, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
  result = sub_1BB873390();
  *v0 = result | 0x9000000000000000;
  return result;
}

void sub_1BB697E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[166];

  v16[3] = a6;
  v16[4] = a7;
  v16[0] = a5;
  v16[165] = a3;
  v16[2] = a2;
  v16[5] = a1;
  v8 = type metadata accessor for FormatItemNodeLayoutContext();
  MEMORY[0x1E0C80A78](v8);
  v16[1] = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PluginLayout.Context(0);
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for EngagementBannerViewLayout.Context();
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v14 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1E0C80A78](v14);
  v15 = type metadata accessor for FeedBannerAdViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v15);
  __asm { BR              X11 }
}

void sub_1BB697FF4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  sub_1BB69C6C4(0, &qword_1ED3B09A8, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutView, &qword_1ED3B4890, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
  v1 = *(void **)(v0 - 72);
  v2 = swift_dynamicCastClass();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = v1;
    objc_msgSend(v4, sel_setHidden_, 0);
    v5 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    sub_1BB873738();

    sub_1BB873708();
    objc_msgSend(v3, sel_setFocusEffect_, 0);

  }
  else
  {
    objc_msgSend(v1, sel_setHidden_, 1);
    sub_1BB6689B8();
    swift_allocError();
    swift_willThrow();
  }
}

void sub_1BB698EEC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[3];
  void *v46;
  uint64_t (*v47)();
  uint64_t v48;
  uint64_t v49;

  v43 = a7;
  v44 = a8;
  v13 = sub_1BB86CBE0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v18 = Strong;
    v42 = a1;
    swift_beginAccess();
    v19 = MEMORY[0x1BCCE5D40](a4 + 16);
    if (!v19)
    {
LABEL_9:
      swift_release();
      return;
    }
    v20 = (void *)v19;
    sub_1BB86F3E8();
    if (v46)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (!*(_QWORD *)(v18 + 448))
        {
          swift_release();

          goto LABEL_9;
        }
        v41 = v49;
        v40 = swift_retain();
        if ((sub_1BB8711F4() & 1) == 0)
        {
          swift_release();

          swift_release();
          goto LABEL_9;
        }
        v39 = (id)objc_opt_self();
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v13);
        v21 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        v22 = (v15 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
        v34 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
        v36 = (v22 + 31) & 0xFFFFFFFFFFFFFFF8;
        v37 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
        v35 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
        v23 = swift_allocObject();
        *(_QWORD *)(v23 + 16) = v18;
        *(_QWORD *)(v23 + 24) = v20;
        (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v23 + v21, v16, v13);
        *(_QWORD *)(v23 + v22) = v42;
        v24 = v23 + v34;
        v25 = v40;
        *(_QWORD *)v24 = v41;
        *(_BYTE *)(v24 + 8) = a6 & 1;
        v26 = (_QWORD *)(v23 + v36);
        v27 = v44;
        *v26 = v43;
        v26[1] = v27;
        *(_QWORD *)(v23 + v37) = v25;
        *(_QWORD *)(v23 + v35) = a2;
        v38 = v23;
        v28 = swift_allocObject();
        *(_QWORD *)(v28 + 16) = sub_1BB69CB2C;
        *(_QWORD *)(v28 + 24) = v23;
        v47 = sub_1BA4D7948;
        v48 = v28;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BA4D7928;
        v46 = &block_descriptor_99;
        v29 = _Block_copy(aBlock);
        swift_retain();
        swift_retain();
        v30 = a2;
        swift_retain();
        swift_retain();
        swift_retain();
        v31 = v20;
        v32 = v42;
        swift_release();
        objc_msgSend(v39, sel_performWithoutAnimation_, v29);
        swift_release();
        swift_release();
        swift_release();

        _Block_release(v29);
        LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if ((v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_9;
        }
      }
      else
      {
        swift_release();

      }
    }
    else
    {
      swift_release();

      sub_1BA4A2E80((uint64_t)aBlock, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
    }
  }
}

void sub_1BB6992C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  char v8;
  uint64_t v9;

  v9 = a5;
  v8 = a6;
  sub_1BB697E28(a2, a3, a4, (uint64_t)&v9, (uint64_t)&v8, a7, a8);
}

void sub_1BB6993C4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;

  v4 = sub_1BB86CBE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = MEMORY[0x1BCCE5D40](a1 + 16);
  if (v8)
  {
    v9 = (void *)v8;
    sub_1BA4B07F0(0, &qword_1EF2B7E80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
    v12 = v11 + v10;
    v13 = objc_msgSend(a2, sel_indexPath);
    sub_1BB86CBA4();

    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12, v7, v4);
    v14 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_reloadItemsAtIndexPaths_, v14);

  }
}

void sub_1BB699524(void *a1, void *a2, uint64_t a3, CGRect *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_0;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17[5];
  CGRect v18;

  v5 = v4;
  CGRectGetWidth(*a4);
  objc_msgSend(a1, sel_bounds);
  CGRectGetHeight(v18);
  v9 = (void *)sub_1BB8700FC();
  sub_1BB8719B0();
  objc_msgSend(a2, sel_frame);
  v10 = (void *)sub_1BB871EB4();
  v12 = v11;
  swift_release();
  sub_1BAAF09E8(v10, v12);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 128), *(_QWORD *)(v5 + 152));
  v17[3] = type metadata accessor for FeedBannerAd();
  v17[4] = sub_1BA50AD30(&qword_1ED3D35E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
  sub_1BA4C2DD8(a3, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  v14 = (void *)sub_1BB8700FC();
  sub_1BA50AD30(&qword_1ED3B1128, 255, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAdView, (uint64_t)&protocol conformance descriptor for FeedBannerAdView);
  sub_1BB871FF8();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37D8]), sel_init);
  v16 = (void *)sub_1BB8700FC();
  objc_msgSend(v15, sel_setReferenceView_, v16);

  objc_msgSend(a2, sel_setFocusEffect_, v15);
}

uint64_t sub_1BB69972C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  double v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  double v21;
  __int128 v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  void *v31;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59[3];
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  double v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  char v83;

  v6 = v5;
  v51 = a4;
  v52 = a5;
  v50 = a2;
  v58 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1E0C80A78](v58);
  v57 = (uint64_t *)((char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(double *)a3;
  v11 = *(double *)(a3 + 8);
  v13 = *(double *)(a3 + 24);
  v53 = *(_QWORD *)(a3 + 16);
  v12 = v53;
  v14 = *(_OWORD *)(a3 + 240);
  v73 = *(_OWORD *)(a3 + 224);
  v74 = v14;
  v75 = *(_QWORD *)(a3 + 256);
  v15 = *(_OWORD *)(a3 + 176);
  v69 = *(_OWORD *)(a3 + 160);
  v70 = v15;
  v16 = *(_OWORD *)(a3 + 192);
  v72 = *(_OWORD *)(a3 + 208);
  v71 = v16;
  v17 = *(_OWORD *)(a3 + 112);
  v65 = *(_OWORD *)(a3 + 96);
  v66 = v17;
  v18 = *(_OWORD *)(a3 + 128);
  v68 = *(_OWORD *)(a3 + 144);
  v67 = v18;
  v19 = *(_OWORD *)(a3 + 48);
  v61 = *(_OWORD *)(a3 + 32);
  v62 = v19;
  v20 = *(_OWORD *)(a3 + 64);
  v64 = *(_OWORD *)(a3 + 80);
  v63 = v20;
  v21 = *(double *)(a3 + 264);
  v22 = *(_OWORD *)(a3 + 288);
  v77 = *(_OWORD *)(a3 + 272);
  v78 = v22;
  v23 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  sub_1BB873738();

  v54 = v6 + 28;
  v24 = v6[31];
  v25 = v6[32];
  __swift_project_boxed_opaque_existential_1(v6 + 28, v24);
  v26 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8);
  sub_1BA4B07F0(0, &qword_1ED3B38D0, (uint64_t (*)(uint64_t))type metadata accessor for VideoView, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
  v28 = v27;
  v56 = v27;
  v55 = sub_1BA5DFE2C(&qword_1ED3B38C8, &qword_1ED3B38D0, (uint64_t (*)(uint64_t))type metadata accessor for VideoView);
  v26(a1, v28, v55, v24, v25);
  v79 = 1;
  v80 = 0u;
  v81 = 0u;
  v82 = 0u;
  v83 = 0;
  sub_1BB6D2E58((uint64_t)a1, (uint64_t)&v79);
  v29 = v6[11];
  ObjectType = swift_getObjectType();
  *(double *)v59 = v10;
  *(double *)&v59[1] = v11;
  v59[2] = v12;
  v60 = *(_QWORD *)&v13;
  v76 = v21;
  v31 = (void *)sub_1BB8700FC();
  v32 = v50;
  (*(void (**)(uint64_t, uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 40))(v50, v59, v31, v51, v52, ObjectType, v29);

  objc_msgSend(a1, sel_bounds);
  v37 = objc_msgSend((id)objc_opt_self(), sel_effectWithRoundedRect_cornerRadius_curve_, *MEMORY[0x1E0CD2A68], v33, v34, v35, v36, v21);
  v49 = a1;
  v38 = sub_1BB8700FC();
  objc_msgSend(v37, sel_setReferenceView_, v38);

  objc_msgSend(a1, sel_setFocusEffect_, v37);
  v39 = v6[51];
  v40 = v6[52];
  __swift_project_boxed_opaque_existential_1(v6 + 48, v39);
  v41 = v32 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20);
  v42 = (uint64_t)v57;
  *v57 = *(_QWORD *)(v41 + 40);
  swift_storeEnumTagMultiPayload();
  v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 8);
  swift_unknownObjectRetain();
  LOBYTE(v38) = v43(v42, v39, v40);
  sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemDimmingType);
  v45 = v6[31];
  v44 = v6[32];
  __swift_project_boxed_opaque_existential_1(v54, v45);
  v60 = type metadata accessor for FeedHeadline(0);
  *(_QWORD *)&v61 = sub_1BA50AD30(&qword_1ED3B2D40, 255, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v59);
  sub_1BA4C2DD8(v41, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
  (*(void (**)(uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, uint64_t, double))(v44 + 16))(v59, v49, v38 & 1, v56, v55, v45, v44, v10, v11, COERCE__INT64(*(double *)&v53), v13);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
}

uint64_t sub_1BB699B54(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  double v19;
  __int128 v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  void *v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56[3];
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  double v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  char v80;

  v4 = v3;
  v49 = a2;
  v55 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1E0C80A78](v55);
  v54 = (uint64_t *)((char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(double *)a3;
  v9 = *(double *)(a3 + 8);
  v11 = *(double *)(a3 + 24);
  v50 = *(_QWORD *)(a3 + 16);
  v10 = v50;
  v12 = *(_OWORD *)(a3 + 240);
  v70 = *(_OWORD *)(a3 + 224);
  v71 = v12;
  v72 = *(_QWORD *)(a3 + 256);
  v13 = *(_OWORD *)(a3 + 176);
  v66 = *(_OWORD *)(a3 + 160);
  v67 = v13;
  v14 = *(_OWORD *)(a3 + 192);
  v69 = *(_OWORD *)(a3 + 208);
  v68 = v14;
  v15 = *(_OWORD *)(a3 + 112);
  v62 = *(_OWORD *)(a3 + 96);
  v63 = v15;
  v16 = *(_OWORD *)(a3 + 128);
  v65 = *(_OWORD *)(a3 + 144);
  v64 = v16;
  v17 = *(_OWORD *)(a3 + 48);
  v58 = *(_OWORD *)(a3 + 32);
  v59 = v17;
  v18 = *(_OWORD *)(a3 + 64);
  v61 = *(_OWORD *)(a3 + 80);
  v60 = v18;
  v19 = *(double *)(a3 + 264);
  v20 = *(_OWORD *)(a3 + 288);
  v74 = *(_OWORD *)(a3 + 272);
  v75 = v20;
  v21 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  sub_1BB873738();

  v51 = v4 + 28;
  v22 = v4[31];
  v23 = v4[32];
  __swift_project_boxed_opaque_existential_1(v4 + 28, v22);
  v24 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8);
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC8A0];
  sub_1BA4B07F0(0, &qword_1ED3B38C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC8A0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
  v27 = v26;
  v53 = v26;
  v52 = sub_1BA5DFE2C(&qword_1ED3B38B8, &qword_1ED3B38C0, v25);
  v24(a1, v27, v52, v22, v23);
  v76 = 1;
  v77 = 0u;
  v78 = 0u;
  v79 = 0u;
  v80 = 0;
  sub_1BB6D2E58((uint64_t)a1, (uint64_t)&v76);
  v28 = v4[11];
  ObjectType = swift_getObjectType();
  *(double *)v56 = v8;
  *(double *)&v56[1] = v9;
  v56[2] = v10;
  v57 = *(_QWORD *)&v11;
  v73 = v19;
  v30 = (void *)sub_1BB8700FC();
  v31 = v49;
  (*(void (**)(uint64_t, uint64_t *, void *, uint64_t, uint64_t))(v28 + 32))(v49, v56, v30, ObjectType, v28);

  objc_msgSend(a1, sel_bounds);
  v36 = objc_msgSend((id)objc_opt_self(), sel_effectWithRoundedRect_cornerRadius_curve_, *MEMORY[0x1E0CD2A68], v32, v33, v34, v35, v19);
  v48 = a1;
  v37 = sub_1BB8700FC();
  objc_msgSend(v36, sel_setReferenceView_, v37);

  objc_msgSend(a1, sel_setFocusEffect_, v36);
  v38 = v4[51];
  v39 = v4[52];
  __swift_project_boxed_opaque_existential_1(v4 + 48, v38);
  v40 = v31 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20);
  v41 = (uint64_t)v54;
  *v54 = *(_QWORD *)(v40 + 40);
  swift_storeEnumTagMultiPayload();
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 8);
  swift_unknownObjectRetain();
  LOBYTE(v37) = v42(v41, v38, v39);
  sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemDimmingType);
  v44 = v4[31];
  v43 = v4[32];
  __swift_project_boxed_opaque_existential_1(v51, v44);
  v57 = type metadata accessor for FeedHeadline(0);
  *(_QWORD *)&v58 = sub_1BA50AD30(&qword_1ED3B2D40, 255, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v56);
  sub_1BA4C2DD8(v40, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
  (*(void (**)(uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, uint64_t, double))(v43 + 16))(v56, v48, v37 & 1, v53, v52, v44, v43, v8, v9, COERCE__INT64(*(double *)&v50), v11);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
}

uint64_t sub_1BB699F70(void *a1, uint64_t a2, double *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void (*v25)(uint64_t *, _QWORD, uint64_t);
  uint64_t v26;
  uint64_t ObjectType;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t (*v51)(_OWORD *, uint64_t, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _OWORD *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  void (*v64)(_QWORD *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double);
  uint64_t v65;
  uint64_t v66;
  void *v68;
  double v69;
  uint64_t v70;
  _QWORD v71[5];
  __int128 v72;
  __int128 v73;
  _OWORD v74[22];
  _BYTE v75[352];
  _OWORD v76[7];
  _OWORD v77[3];

  v4 = v3;
  v70 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1E0C80A78](v70);
  v9 = (_OWORD *)((char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1BB86FFDC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = a3[1];
  v69 = *a3;
  v14 = v69;
  v17 = a3[2];
  v16 = a3[3];
  memcpy(v75, a3 + 4, sizeof(v75));
  v18 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  sub_1BB873738();

  sub_1BA5E07DC();
  v20 = v19;
  v21 = swift_allocBox();
  v23 = (uint64_t *)(v22 + *(int *)(v20 + 48));
  sub_1BB86FFD0();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 0x3FE0000000000000;
  *v23 = v24;
  v25 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104);
  v25(v23, *MEMORY[0x1E0DB82A0], v10);
  *v13 = v21;
  v25(v13, *MEMORY[0x1E0DB82C8], v10);
  sub_1BB8700E4();
  v26 = v4[22];
  ObjectType = swift_getObjectType();
  *(double *)&v72 = v14;
  *((double *)&v72 + 1) = v15;
  *(double *)&v73 = v17;
  *((double *)&v73 + 1) = v16;
  memcpy(v74, v75, sizeof(v74));
  v28 = (void *)sub_1BB8700FC();
  (*(void (**)(uint64_t, __int128 *, void *, uint64_t, uint64_t))(v26 + 8))(a2, &v72, v28, ObjectType, v26);

  objc_msgSend(a1, sel_bounds);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v37 = *(_QWORD *)(a2 + 320);
  v38 = *(_QWORD *)(a2 + 328);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 296), v37);
  v39 = (*(double (**)(uint64_t, uint64_t))(v38 + 64))(v37, v38);
  v40 = objc_msgSend((id)objc_opt_self(), sel_effectWithRoundedRect_cornerRadius_curve_, *MEMORY[0x1E0CD2A68], v30, v32, v34, v36, v39);
  v68 = a1;
  v41 = sub_1BB8700FC();
  objc_msgSend(v40, sel_setReferenceView_, v41);

  objc_msgSend(v40, sel_setPosition_, 2);
  objc_msgSend(a1, sel_setFocusEffect_, v40);
  v43 = v4[51];
  v42 = v4[52];
  __swift_project_boxed_opaque_existential_1(v4 + 48, v43);
  v44 = *(_OWORD *)(a2 + 104);
  v76[5] = *(_OWORD *)(a2 + 88);
  v76[6] = v44;
  v77[0] = *(_OWORD *)(a2 + 120);
  *(_OWORD *)((char *)v77 + 9) = *(_OWORD *)(a2 + 129);
  v45 = *(_OWORD *)(a2 + 24);
  v46 = *(_OWORD *)(a2 + 56);
  v76[2] = *(_OWORD *)(a2 + 40);
  v76[3] = v46;
  v76[4] = *(_OWORD *)(a2 + 72);
  v76[0] = *(_OWORD *)(a2 + 8);
  v76[1] = v45;
  v47 = *(_OWORD *)(a2 + 88);
  v48 = *(_OWORD *)(a2 + 120);
  v9[6] = *(_OWORD *)(a2 + 104);
  v9[7] = v48;
  *(_OWORD *)((char *)v9 + 121) = *(_OWORD *)(a2 + 129);
  v49 = *(_OWORD *)(a2 + 24);
  v50 = *(_OWORD *)(a2 + 56);
  v9[2] = *(_OWORD *)(a2 + 40);
  v9[3] = v50;
  v9[4] = *(_OWORD *)(a2 + 72);
  v9[5] = v47;
  *v9 = *(_OWORD *)(a2 + 8);
  v9[1] = v49;
  type metadata accessor for FeedItem(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v51 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v42 + 8);
  sub_1BA8D1F08((uint64_t)v76);
  LOBYTE(v41) = v51(v9, v43, v42);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemDimmingType);
  v52 = v4 + 28;
  v54 = v4[31];
  v53 = v4[32];
  __swift_project_boxed_opaque_existential_1(v52, v54);
  v55 = *(_OWORD *)(a2 + 88);
  v56 = *(_OWORD *)(a2 + 120);
  v74[4] = *(_OWORD *)(a2 + 104);
  v74[5] = v56;
  *(_OWORD *)((char *)&v74[5] + 9) = *(_OWORD *)(a2 + 129);
  v57 = *(_OWORD *)(a2 + 24);
  v58 = *(_OWORD *)(a2 + 56);
  v74[0] = *(_OWORD *)(a2 + 40);
  v74[1] = v58;
  v74[2] = *(_OWORD *)(a2 + 72);
  v74[3] = v55;
  v72 = *(_OWORD *)(a2 + 8);
  v73 = v57;
  v71[3] = &type metadata for FeedIssue;
  v71[4] = sub_1BA6B2E68();
  v59 = (_OWORD *)swift_allocObject();
  v71[0] = v59;
  v60 = *(_OWORD *)(a2 + 88);
  v61 = *(_OWORD *)(a2 + 120);
  v59[7] = *(_OWORD *)(a2 + 104);
  v59[8] = v61;
  *(_OWORD *)((char *)v59 + 137) = *(_OWORD *)(a2 + 129);
  v62 = *(_OWORD *)(a2 + 24);
  v63 = *(_OWORD *)(a2 + 56);
  v59[3] = *(_OWORD *)(a2 + 40);
  v59[4] = v63;
  v59[5] = *(_OWORD *)(a2 + 72);
  v59[6] = v60;
  v59[1] = *(_OWORD *)(a2 + 8);
  v59[2] = v62;
  v64 = *(void (**)(_QWORD *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))(v53 + 16);
  sub_1BA8D1F08((uint64_t)&v72);
  v65 = type metadata accessor for CoverIssueView();
  v66 = sub_1BA50AD30(&qword_1ED3B3ED0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CoverIssueView, (uint64_t)&protocol conformance descriptor for CoverIssueView);
  v64(v71, v68, v41 & 1, v65, v66, v54, v53, v69, v15, v17, v16);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
}

uint64_t sub_1BB69A474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD, uint64_t);
  uint64_t v31;
  uint64_t ObjectType;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double);
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  ValueMetadata *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;

  v4 = v3;
  v45 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1E0C80A78](v45);
  v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1BB86FFDC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(double *)a3;
  v15 = *(double *)(a3 + 8);
  v17 = *(double *)(a3 + 16);
  v16 = *(double *)(a3 + 24);
  v18 = *(_OWORD *)(a3 + 144);
  v64 = *(_OWORD *)(a3 + 128);
  v65 = v18;
  v19 = *(_OWORD *)(a3 + 176);
  v66 = *(_OWORD *)(a3 + 160);
  v67 = v19;
  v20 = *(_OWORD *)(a3 + 80);
  v60 = *(_OWORD *)(a3 + 64);
  v61 = v20;
  v21 = *(_OWORD *)(a3 + 112);
  v62 = *(_OWORD *)(a3 + 96);
  v63 = v21;
  v22 = *(_OWORD *)(a3 + 48);
  v58 = *(_OWORD *)(a3 + 32);
  v59 = v22;
  v23 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  sub_1BB873738();

  sub_1BA5E07DC();
  v25 = v24;
  v26 = swift_allocBox();
  v28 = (uint64_t *)(v27 + *(int *)(v25 + 48));
  sub_1BB86FFD0();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = 0x3FE0000000000000;
  *v28 = v29;
  v30 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104);
  v30(v28, *MEMORY[0x1E0DB82A0], v10);
  *v13 = v26;
  v30(v13, *MEMORY[0x1E0DB82C8], v10);
  sub_1BB8700E4();
  v31 = v4[24];
  ObjectType = swift_getObjectType();
  *(double *)v46 = v14;
  *(double *)&v46[1] = v15;
  *(double *)&v46[2] = v17;
  v47 = *(ValueMetadata **)&v16;
  v54 = v64;
  v55 = v65;
  v56 = v66;
  v57 = v67;
  v50 = v60;
  v51 = v61;
  v52 = v62;
  v53 = v63;
  v48 = v58;
  v49 = v59;
  v33 = (void *)sub_1BB8700FC();
  (*(void (**)(uint64_t, _QWORD *, void *, uint64_t, uint64_t))(v31 + 8))(a2, v46, v33, ObjectType, v31);

  v34 = v4[51];
  v35 = v4[52];
  __swift_project_boxed_opaque_existential_1(v4 + 48, v34);
  *v9 = *(_QWORD *)(a2 + 24);
  swift_storeEnumTagMultiPayload();
  v36 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v35 + 8);
  swift_unknownObjectRetain();
  LOBYTE(v28) = v36(v9, v34, v35);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemDimmingType);
  v37 = v4 + 28;
  v39 = v4[31];
  v38 = v4[32];
  __swift_project_boxed_opaque_existential_1(v37, v39);
  v47 = &type metadata for FeedTag;
  *(_QWORD *)&v48 = sub_1BA6A96BC();
  v46[0] = swift_allocObject();
  sub_1BA6A955C(a2 + 8, v46[0] + 16);
  v40 = *(void (**)(_QWORD *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))(v38 + 16);
  v41 = type metadata accessor for CoverChannelView();
  v42 = sub_1BA50AD30(&qword_1ED3B4730, 255, (uint64_t (*)(uint64_t))type metadata accessor for CoverChannelView, (uint64_t)&protocol conformance descriptor for CoverChannelView);
  v40(v46, a1, v28 & 1, v41, v42, v39, v38, v14, v15, v17, v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
}

uint64_t sub_1BB69A7B4(void *a1, uint64_t a2, __int128 *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double);
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  double v51;

  v4 = v3;
  v38 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1E0C80A78](v38);
  v9 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = a3[7];
  v45 = a3[6];
  v46 = v10;
  v47 = *((_QWORD *)a3 + 16);
  v11 = a3[3];
  v41 = a3[2];
  v42 = v11;
  v12 = a3[5];
  v43 = a3[4];
  v44 = v12;
  v13 = *a3;
  v40 = a3[1];
  v39 = v13;
  v14 = *((double *)a3 + 17);
  v15 = *((double *)a3 + 18);
  v17 = *((double *)a3 + 19);
  v16 = *((double *)a3 + 20);
  v18 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  sub_1BB873738();

  v19 = v4[36];
  v20 = v4[37];
  __swift_project_boxed_opaque_existential_1(v4 + 33, v19);
  v21 = a2 + 8;
  v48 = v14;
  v49 = v15;
  v50 = v17;
  v51 = v16;
  v22 = (void *)sub_1BB8700FC();
  (*(void (**)(uint64_t, __int128 *, void *, uint64_t, uint64_t))(v20 + 16))(a2 + 8, &v39, v22, v19, v20);

  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37D8]), sel_init);
  v24 = sub_1BB8700FC();
  objc_msgSend(v23, sel_setReferenceView_, v24);

  objc_msgSend(a1, sel_setFocusEffect_, v23);
  v25 = v4[51];
  v26 = v4[52];
  __swift_project_boxed_opaque_existential_1(v4 + 48, v25);
  v27 = *(_QWORD *)(a2 + 8);
  v28 = *(_QWORD *)(a2 + 16);
  *v9 = v27;
  v9[1] = v28;
  swift_storeEnumTagMultiPayload();
  v29 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v26 + 8);
  swift_bridgeObjectRetain();
  LOBYTE(v24) = v29(v9, v25, v26);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemDimmingType);
  v30 = v4 + 28;
  v32 = v4[31];
  v31 = v4[32];
  __swift_project_boxed_opaque_existential_1(v30, v32);
  *((_QWORD *)&v40 + 1) = &type metadata for FeedCategory;
  *(_QWORD *)&v41 = sub_1BA982EAC();
  *(_QWORD *)&v39 = swift_allocObject();
  sub_1BA982E70(v21, v39 + 16);
  v33 = *(void (**)(__int128 *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))(v31 + 16);
  v34 = type metadata accessor for CategoryView();
  v35 = sub_1BA50AD30(&qword_1ED3BA9D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CategoryView, (uint64_t)&protocol conformance descriptor for CategoryView);
  v33(&v39, a1, v24 & 1, v34, v35, v32, v31, v14, v15, v17, v16);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
}

void sub_1BB69AA80(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18[2];
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGRect v26;

  *(_OWORD *)v18 = *(_OWORD *)(a3 + 32);
  v6 = *(_QWORD *)(a3 + 48);
  v7 = *(_QWORD *)(a3 + 56);
  v8 = *(double *)(a3 + 64);
  v9 = *(double *)(a3 + 72);
  v10 = *(double *)(a3 + 80);
  v11 = *(double *)(a3 + 88);
  v12 = (void *)sub_1BB8700FC();
  __swift_project_boxed_opaque_existential_1(v3 + 43, v3[46]);
  type metadata accessor for FeedEngagementBanner();
  v26.origin.x = v8;
  v26.origin.y = v9;
  v26.size.width = v10;
  v26.size.height = v11;
  CGRectGetWidth(v26);
  v13 = (void *)sub_1BB86EDD0();
  sub_1BB7D2D0C(v13);

  v15 = v3[41];
  v14 = v3[42];
  __swift_project_boxed_opaque_existential_1(v3 + 38, v15);
  v19 = *(_OWORD *)v18;
  v20 = v6;
  v21 = v7;
  v22 = v8;
  v23 = v9;
  v24 = v10;
  v25 = v11;
  v16 = (void *)sub_1BB8700FC();
  (*(void (**)(uint64_t, __int128 *, void *, uint64_t, uint64_t))(v14 + 8))(a2, &v19, v16, v15, v14);

  v18[0] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37D8]), sel_init);
  v17 = (void *)sub_1BB8700FC();
  objc_msgSend(v18[0], sel_setReferenceView_, v17);

  objc_msgSend(a1, sel_setFocusEffect_, v18[0]);
}

uint64_t sub_1BB69AC10(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  __objc2_class_ro *v40;
  uint64_t (*v41)(void);
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t (*v44)(uint64_t);
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(void *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(_QWORD *, uint64_t, uint64_t, void *, uint64_t *, uint64_t, uint64_t, uint64_t, _UNKNOWN **, char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  int v99;
  double v100;
  double v101;
  _QWORD *v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  void *v114;
  double v115;
  double v116;
  id v117;
  void *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  char v127;
  void (*v128)(char *, uint64_t);
  uint64_t v129;
  uint64_t (*v130)(uint64_t);
  double v131;
  uint64_t v132;
  double v133;
  uint64_t v134;
  uint64_t ObjectType;
  void *v136;
  void (*v137)(uint64_t *, uint64_t, void *, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  _QWORD *v158;
  id v159;
  void *v160;
  uint64_t v161[3];
  uint64_t v162;
  _OWORD v163[2];
  uint64_t v164;

  v153 = a7;
  v152 = a6;
  v149 = (uint64_t *)a4;
  v144 = a3;
  v159 = a1;
  v160 = a2;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v147 = (uint64_t)&v142 - v11;
  v155 = type metadata accessor for FormatItemNodeLayoutContext();
  MEMORY[0x1E0C80A78](v155);
  v154 = (uint64_t *)((char *)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v146 = (uint64_t)&v142 - v14;
  sub_1BA5E012C();
  v157 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C2230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30], v9);
  MEMORY[0x1E0C80A78](v18);
  v145 = (char *)&v142 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v148 = (uint64_t)&v142 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v142 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v142 - v26;
  v28 = sub_1BB86F7A8();
  v29 = *(_QWORD **)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v143 = (char *)&v142 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v142 - v32;
  v150 = a5;
  v158 = v7;
  swift_bridgeObjectRetain();
  v159 = v159;
  sub_1BB86F784();
  sub_1BB870114();
  v34 = (void (*)(char *, char *, uint64_t))v29[2];
  v156 = v33;
  v34(v24, v33, v28);
  v35 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v29[7];
  v35(v24, 0, 1, v28);
  v36 = (uint64_t)&v17[*(int *)(v157 + 48)];
  v37 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30];
  sub_1BA5E01A4((uint64_t)v27, (uint64_t)v17, (unint64_t *)&unk_1ED3C2230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30]);
  sub_1BA5E01A4((uint64_t)v24, v36, (unint64_t *)&unk_1ED3C2230, v37);
  v151 = v29;
  v38 = (uint64_t (*)(char *, uint64_t, uint64_t))v29[6];
  v39 = v38(v17, 1, v28);
  v40 = &StubThumbnailProcessor;
  v157 = v28;
  if (v39 != 1)
  {
    sub_1BA5E01A4((uint64_t)v17, v148, (unint64_t *)&unk_1ED3C2230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30]);
    if (v38((char *)v36, 1, v28) != 1)
    {
      v124 = v151;
      v125 = v143;
      ((void (*)(char *, uint64_t, uint64_t))v151[4])(v143, v36, v28);
      sub_1BA50AD30(&qword_1ED3C4940, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30], MEMORY[0x1E0DB6F38]);
      v126 = v148;
      v127 = sub_1BB872958();
      v128 = (void (*)(char *, uint64_t))v124[1];
      v128(v125, v28);
      v129 = (uint64_t)v24;
      v130 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30];
      sub_1BA5C699C(v129, (unint64_t *)&unk_1ED3C2230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30]);
      sub_1BA5C699C((uint64_t)v27, (unint64_t *)&unk_1ED3C2230, v130);
      v128((char *)v126, v28);
      v40 = &StubThumbnailProcessor;
      sub_1BA5C699C((uint64_t)v17, (unint64_t *)&unk_1ED3C2230, v130);
      v43 = v160;
      if ((v127 & 1) == 0)
        goto LABEL_7;
      goto LABEL_20;
    }
    v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30];
    sub_1BA5C699C((uint64_t)v24, (unint64_t *)&unk_1ED3C2230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30]);
    sub_1BA5C699C((uint64_t)v27, (unint64_t *)&unk_1ED3C2230, v44);
    ((void (*)(uint64_t, uint64_t))v151[1])(v148, v28);
LABEL_6:
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA5E012C);
    v43 = v160;
    goto LABEL_7;
  }
  v41 = MEMORY[0x1E0DB6F30];
  sub_1BA5C699C((uint64_t)v24, (unint64_t *)&unk_1ED3C2230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30]);
  v42 = (uint64_t (*)(uint64_t))v41;
  v40 = &StubThumbnailProcessor;
  sub_1BA5C699C((uint64_t)v27, (unint64_t *)&unk_1ED3C2230, v42);
  if (v38((char *)v36, 1, v28) != 1)
    goto LABEL_6;
  sub_1BA5C699C((uint64_t)v17, (unint64_t *)&unk_1ED3C2230, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6F30]);
  v43 = v160;
LABEL_20:
  objc_msgSend(v43, *(SEL *)&v40[26].flags);
  v132 = *(_QWORD *)(v150 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  if (v133 == *(double *)(v132 + 32) && v131 == *(double *)(v132 + 40))
  {
    v102 = v158;
    v134 = v158[26];
    ObjectType = swift_getObjectType();
    v136 = (void *)sub_1BB8700FC();
    v137 = *(void (**)(uint64_t *, uint64_t, void *, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v134 + 104);
    v138 = type metadata accessor for FormatItemNodeData();
    v137(v149, v132, v136, v138, v155, &protocol witness table for FormatItemNodeLayoutContext, ObjectType, v134);
    v97 = v150;

    ((void (*)(char *, uint64_t))v151[1])(v156, v157);
    return sub_1BB69B910(v102, (uint64_t)v159, (uint64_t)v43, v97);
  }
LABEL_7:
  v45 = v145;
  v46 = v157;
  v34(v145, v156, v157);
  v35(v45, 0, 1, v46);
  sub_1BB870120();
  sub_1BB873708();
  v47 = v158;
  v48 = v158[31];
  v49 = v158[32];
  __swift_project_boxed_opaque_existential_1(v158 + 28, v48);
  v50 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8);
  v51 = type metadata accessor for FormatLayoutView();
  v52 = sub_1BA50AD30(&qword_1ED3B4890, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutView, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
  v50(v43, v51, v52, v48, v49);
  v53 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  sub_1BB873738();

  v54 = v150;
  sub_1BA5E091C(v43, v150);
  v161[0] = (uint64_t)objc_msgSend(v159, sel_collectionViewLayout);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3C0448);
  sub_1BA5E0E44();
  if ((swift_dynamicCast() & 1) == 0)
  {
    v164 = 0;
    memset(v163, 0, sizeof(v163));
  }
  sub_1BA5E01A4((uint64_t)v163, (uint64_t)v161, (unint64_t *)&unk_1ED3BBF70, (uint64_t (*)(uint64_t))sub_1BA5E0E44);
  v55 = v149;
  if (v162)
  {
    __swift_project_boxed_opaque_existential_1(v161, v162);
    sub_1BB86CBD4();
    sub_1BB871290();
    v57 = v56;
    v59 = v58;
    v61 = v60;
    v63 = v62;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v161);
    v64 = v146;
    sub_1BA4C2DD8((uint64_t)v55, v146, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
    v65 = v155;
  }
  else
  {
    sub_1BA5C699C((uint64_t)v161, (unint64_t *)&unk_1ED3BBF70, (uint64_t (*)(uint64_t))sub_1BA5E0E44);
    v64 = v146;
    sub_1BA4C2DD8((uint64_t)v55, v146, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
    v65 = v155;
    v66 = (uint64_t *)(v64 + *(int *)(v155 + 36));
    v57 = *v66;
    v59 = v66[1];
    v61 = v66[2];
    v63 = v66[3];
  }
  sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
  objc_msgSend(v43, *(SEL *)&v40[26].flags);
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v75 = *v55;
  v76 = v55[1];
  v78 = v55[2];
  v77 = v55[3];
  v79 = *(int *)(v65 + 28);
  v80 = (uint64_t)v55 + v79;
  v81 = v65;
  v82 = v154;
  v149 = (uint64_t *)v80;
  v83 = sub_1BA4C2DD8(v80, (uint64_t)v154 + v79, type metadata accessor for FeedItem);
  *v82 = v75;
  v82[1] = v76;
  v82[2] = v78;
  v82[3] = v77;
  v84 = (_QWORD *)((char *)v82 + *(int *)(v81 + 32));
  *v84 = v68;
  v84[1] = v70;
  v84[2] = v72;
  v84[3] = v74;
  v85 = (_QWORD *)((char *)v82 + *(int *)(v81 + 36));
  *v85 = v57;
  v85[1] = v59;
  v85[2] = v61;
  v85[3] = v63;
  v86 = *(_QWORD *)(v54 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  MEMORY[0x1E0C80A78](v83);
  *(&v142 - 8) = (uint64_t)v47;
  *(&v142 - 7) = (uint64_t)v82;
  *(&v142 - 6) = v54;
  *(&v142 - 5) = (uint64_t)v43;
  v139 = v159;
  v140 = v152;
  v141 = v153;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1BB8700F0();
  v87 = v47[25];
  v88 = v47[26];
  v148 = v87;
  v89 = v54;
  v145 = (char *)swift_getObjectType();
  v90 = v86 + *(_QWORD *)(*(_QWORD *)v86 + 144);
  v146 = *(_QWORD *)(v54 + 64);
  v91 = (void *)sub_1BB8700FC();
  v92 = (uint64_t *)(v90 + *(int *)(type metadata accessor for FormatItemNodeData() + 32));
  v94 = v92[1];
  v95 = v92[2];
  v161[0] = *v92;
  v93 = v161[0];
  v161[1] = v94;
  v161[2] = v95;
  v96 = *(void (**)(_QWORD *, uint64_t, uint64_t, void *, uint64_t *, uint64_t, uint64_t, uint64_t, _UNKNOWN **, char *, uint64_t))(v88 + 96);
  sub_1BA8E9488(v161[0], v94);
  v141 = v88;
  v97 = v89;
  v96(v82, v90, v146, v91, v161, v152, v153, v155, &protocol witness table for FormatItemNodeLayoutContext, v145, v141);

  sub_1BA8E94B8(v93, v94);
  v98 = *(_QWORD *)(v89 + 32);
  if (v98)
  {
    v43 = v160;
    sub_1BB87372C();
    v99 = *(unsigned __int16 *)(v98 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
    if ((v99 & 0xFF00) != 0x400)
      __asm { BR              X10 }
  }
  else
  {
    v43 = v160;
    sub_1BB87372C();
  }
  v100 = *MEMORY[0x1E0DC49E8];
  v101 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
  v102 = v158;
  objc_msgSend(v43, sel_bounds);
  v107 = UIEdgeInsetsInsetRect(v103, v104, v105, v106, v100, v101);
  v109 = v108;
  v111 = v110;
  v113 = v112;
  v114 = (void *)sub_1BB8700D8();
  sub_1BB8706E4();
  v116 = v115;

  v117 = objc_msgSend((id)objc_opt_self(), sel_effectWithRoundedRect_cornerRadius_curve_, *MEMORY[0x1E0CD2A68], v107, v109, v111, v113, v116);
  v118 = (void *)sub_1BB8700FC();
  objc_msgSend(v117, sel_setReferenceView_, v118);

  objc_msgSend(v117, sel_setPosition_, 0);
  objc_msgSend(v43, sel_setFocusEffect_, v117);
  v119 = (void *)sub_1BB8700FC();

  ((void (*)(char *, uint64_t))v151[1])(v156, v157);
  sub_1BA4A2E80((uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
  v120 = v147;
  sub_1BA4C2DD8((uint64_t)v149, v147, type metadata accessor for FeedItem);
  v121 = type metadata accessor for FeedItem(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v120, 0, 1, v121);
  v122 = (uint64_t)v119 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_feedItem;
  swift_beginAccess();
  sub_1BAB44AA0(v120, v122);
  swift_endAccess();

  sub_1BA5C699C((uint64_t)v163, (unint64_t *)&unk_1ED3BBF70, (uint64_t (*)(uint64_t))sub_1BA5E0E44);
  return sub_1BB69B910(v102, (uint64_t)v159, (uint64_t)v43, v97);
}

uint64_t sub_1BB69B910(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  uint64_t (**v14)();
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (**v18)(CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (**v22)();
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *boxed_opaque_existential_0;
  double *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void (*v36)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double);
  uint64_t v37;
  uint64_t v38;
  uint64_t v41[5];

  v7 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v41[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (char *)sub_1BB8700FC();
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v13 + 2) = v11;
  *((_QWORD *)v13 + 3) = v12;
  *((_QWORD *)v13 + 4) = a4;
  v14 = (uint64_t (**)())&v10[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation];
  v15 = *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation];
  *v14 = sub_1BB69CD74;
  v14[1] = v13;
  swift_retain();
  sub_1BA49EBE0(v15);

  v16 = (char *)sub_1BB8700FC();
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = (void (**)(CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat))&v16[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillShow];
  v19 = *(_QWORD *)&v16[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillShow];
  *v18 = sub_1BB69CD80;
  v18[1] = (void (*)(CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat))v17;
  sub_1BA49EBE0(v19);

  v20 = sub_1BB8700FC();
  v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v22 = (void (**)())(v20 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillHide);
  v23 = *(_QWORD *)(v20 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillHide);
  *v22 = sub_1BB69CD88;
  v22[1] = (void (*)())v21;
  sub_1BA49EBE0(v23);

  v24 = a1[51];
  v25 = a1[52];
  __swift_project_boxed_opaque_existential_1(a1 + 48, v24);
  v26 = a4 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_feedItem;
  sub_1BA4C2DD8(a4 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_feedItem, (uint64_t)v9, type metadata accessor for FeedItem);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v20) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 8))(v9, v24, v25);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemDimmingType);
  v27 = a1 + 28;
  v29 = a1[31];
  v28 = a1[32];
  __swift_project_boxed_opaque_existential_1(v27, v29);
  v41[3] = type metadata accessor for FeedItem(0);
  v41[4] = sub_1BA50AD30((unint64_t *)&qword_1ED3BA6F0, 255, type metadata accessor for FeedItem, (uint64_t)&protocol conformance descriptor for FeedItem);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v41);
  sub_1BA4C2DD8(v26, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedItem);
  v31 = *(double **)(a4 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  v32 = v31[2];
  v33 = v31[3];
  v34 = v31[4];
  v35 = v31[5];
  v36 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))(v28 + 16);
  v37 = type metadata accessor for FormatLayoutView();
  v38 = sub_1BA50AD30(&qword_1ED3B4890, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutView, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
  v36(v41, a3, v20 & 1, v37, v38, v29, v28, v32, v33, v34, v35);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

uint64_t sub_1BB69BC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, void *, id, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t ObjectType;
  _QWORD v26[3];

  v9 = *(_QWORD *)(a1 + 208);
  ObjectType = swift_getObjectType();
  v10 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  v11 = (void *)sub_1BB8700FC();
  v12 = objc_msgSend(a5, sel_traitCollection);
  v13 = *(_QWORD *)(*(_QWORD *)v10 + 144);
  v14 = type metadata accessor for FormatItemNodeData();
  v15 = (uint64_t *)(v10 + *(int *)(v14 + 32) + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v15[2];
  v26[0] = v17;
  v26[1] = v16;
  v26[2] = v18;
  v19 = *(void (**)(uint64_t, uint64_t, void *, id, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 80);
  sub_1BA8E9488(v17, v16);
  v20 = type metadata accessor for FormatItemNodeLayoutContext();
  v19(a2, v10, v11, v12, v26, a6, a7, v14, v20, &protocol witness table for FormatItemNodeLayoutContext, ObjectType, v9);

  return sub_1BA8E94B8(v17, v16);
}

uint64_t sub_1BB69BD7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  double v14;
  id v15;
  id v16;
  _QWORD v17[2];

  v5 = sub_1BB871284();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = *(_QWORD *)(result + 424);
    swift_retain();
    result = swift_release();
    if (v10)
    {
      swift_beginAccess();
      v11 = MEMORY[0x1BCCE5D40](a2 + 16);
      if (v11)
      {
        v12 = (void *)v11;
        v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA0]), sel_initWithMass_stiffness_damping_initialVelocity_, 1.0, 300.0, 32.0, 0.0, 0.0);
        objc_msgSend(v13, sel_ts_settlingDuration);
        v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F38]), sel_initWithDuration_timingParameters_, v13, v14);
        v17[1] = *(_QWORD *)(*(_QWORD *)(a3
                                       + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                           + 48);
        *v8 = v15;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DBC030], v5);
        swift_bridgeObjectRetain();
        v16 = v15;
        sub_1BB8711AC();

        swift_bridgeObjectRelease();
        swift_release();
        return (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
      }
      else
      {
        return swift_release();
      }
    }
  }
  return result;
}

void sub_1BB69BF98(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  uint64_t v17;
  uint64_t v18;
  void *v19;
  double MaxY;
  id v21;
  id v22;
  CGRect v23;
  CGRect v24;

  v17 = a1 + 16;
  swift_beginAccess();
  v18 = MEMORY[0x1BCCE5D40](v17);
  if (v18)
  {
    v19 = (void *)v18;
    v23.origin.x = a2;
    v23.origin.y = a3;
    v23.size.width = a4;
    v23.size.height = a5;
    MaxY = CGRectGetMaxY(v23);
    v24.origin.x = a6;
    v24.origin.y = a7;
    v24.size.width = a8;
    v24.size.height = a9;
    if (MaxY - CGRectGetMinY(v24) > -14.0)
    {
      v21 = v19;
      objc_msgSend(v21, sel_contentInset);
      objc_msgSend(v21, sel_setContentInset_);

      v22 = v21;
      objc_msgSend(v22, sel_contentOffset);
      objc_msgSend(v22, sel_setContentOffset_);

    }
  }
}

void sub_1BB69C0C4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, sel_contentInset);
    objc_msgSend(v3, sel_setContentInset_);

  }
}

uint64_t FeedItemRenderer.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  __swift_destroy_boxed_opaque_existential_1(v0 + 264);
  __swift_destroy_boxed_opaque_existential_1(v0 + 304);
  __swift_destroy_boxed_opaque_existential_1(v0 + 344);
  __swift_destroy_boxed_opaque_existential_1(v0 + 384);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeedItemRenderer.__deallocating_deinit()
{
  FeedItemRenderer.deinit();
  return swift_deallocClassInstance();
}

void sub_1BB69C204(void *a1)
{
  sub_1BB69C618();

}

void (*sub_1BB69C228(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = FeedItemRenderer.presentingViewController.modify(v2);
  return sub_1BA9D68C8;
}

uint64_t sub_1BB69C26C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1BB69C29C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 24) = a1;
  return result;
}

uint64_t (*sub_1BB69C2D8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1BB69C314(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, void **a4@<X3>, _QWORD *a5@<X8>)
{
  void *v5;
  void *v6;
  unsigned __int8 v7;

  v5 = *a4;
  v7 = *a3;
  v6 = v5;
  FeedItemRenderer.render(in:at:options:layoutAttributes:actionSenderHandler:)(a1, a2, &v7, &v6, (uint64_t)nullsub_1, 0, a5);
}

uint64_t sub_1BB69C354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v34;
  __int128 v35[3];

  swift_unknownObjectWeakInit();
  *(_BYTE *)(v21 + 24) = 0;
  *(_QWORD *)(v21 + 432) = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(v21 + 440) = 0;
  *(_QWORD *)(v21 + 448) = 0;
  sub_1BA4C010C(a1, v21 + 32);
  v34 = a1;
  sub_1BA4C010C(a1, (uint64_t)v35);
  type metadata accessor for FeedItemCellSelectionRenderer();
  v28 = swift_allocObject();
  sub_1BA4CECCC(v35, v28 + 16);
  *(_QWORD *)(v21 + 72) = v28;
  *(_QWORD *)(v21 + 80) = a2;
  *(_QWORD *)(v21 + 88) = a3;
  *(_QWORD *)(v21 + 96) = a4;
  *(_QWORD *)(v21 + 104) = a5;
  *(_QWORD *)(v21 + 112) = a6;
  *(_QWORD *)(v21 + 120) = a7;
  sub_1BA4C010C(a8, v21 + 128);
  *(_QWORD *)(v21 + 168) = a9;
  *(_QWORD *)(v21 + 176) = a10;
  *(_QWORD *)(v21 + 184) = a11;
  *(_QWORD *)(v21 + 192) = a12;
  *(_QWORD *)(v21 + 200) = a13;
  *(_QWORD *)(v21 + 208) = a14;
  *(_QWORD *)(v21 + 216) = a15;
  sub_1BA4C010C(a16, v21 + 224);
  sub_1BA4C010C(a17, v21 + 264);
  sub_1BA4C010C(a18, v21 + 304);
  sub_1BA4C010C(a19, v21 + 344);
  *(_QWORD *)(v21 + 424) = a20;
  sub_1BA4C010C(a21, v21 + 384);
  v29 = qword_1ED3BA870;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  if (v29 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1BA50AD30((unint64_t *)&unk_1ED3C5408, v30, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemRenderer, (uint64_t)&protocol conformance descriptor for FeedItemRenderer);
  sub_1BB86D21C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a21);
  __swift_destroy_boxed_opaque_existential_1(a19);
  __swift_destroy_boxed_opaque_existential_1(a18);
  __swift_destroy_boxed_opaque_existential_1(a17);
  __swift_destroy_boxed_opaque_existential_1(a16);
  __swift_destroy_boxed_opaque_existential_1(a8);
  __swift_destroy_boxed_opaque_existential_1(v34);
  *(_BYTE *)(v21 + 440) = v35[0];
  return v21;
}

uint64_t sub_1BB69C618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v1 = *(_QWORD *)(v0 + 88);
  ObjectType = swift_getObjectType();
  v3 = MEMORY[0x1BCCE5D40](v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, ObjectType, v1);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = swift_getObjectType();
  v6 = MEMORY[0x1BCCE5D40](v0 + 16);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6, v5, v4);
}

void sub_1BB69C6C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BA50AD30(a4, 255, a3, a5);
    v9 = sub_1BB870138();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BB69C748()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB69C76C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB69C790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BB86CBE0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1BB69C828(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1BB86CBE0() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1BB698EEC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *(_BYTE *)(v2 + v6 + *(_QWORD *)(v5 + 64)), *(_QWORD *)(((v6 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8) + v2 + 8), *(_QWORD *)(((v6 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8) + v2 + 16));
}

uint64_t sub_1BB69C890@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v3);
  *a2 = result;
  return result;
}

void sub_1BB69C8DC(id *a1)
{
  id v1;

  v1 = *a1;
  sub_1BB69C618();

}

uint64_t dispatch thunk of FeedItemRendererType.presentingViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedItemRendererType.presentingViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FeedItemRendererType.presentingViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FeedItemRendererType.disableFormatLayoutViewCellDequeueing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedItemRendererType.disableFormatLayoutViewCellDequeueing.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FeedItemRendererType.disableFormatLayoutViewCellDequeueing.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FeedItemRendererType.render(in:at:options:layoutAttributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t dispatch thunk of FeedItemRendererType.render(in:at:options:layoutAttributes:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 72))();
}

uint64_t storeEnumTagSinglePayload for FeedItemRendererOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB69C9A4 + 4 * byte_1BB93CCB1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB69C9D8 + 4 * byte_1BB93CCAC[v4]))();
}

uint64_t sub_1BB69C9D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB69C9E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB69C9E8);
  return result;
}

uint64_t sub_1BB69C9F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB69C9FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB69CA00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB69CA08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemRendererOptions()
{
  return &type metadata for FeedItemRendererOptions;
}

uint64_t method lookup function for FeedItemRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB69CA30(char *a1)
{
  return sub_1BB69745C(a1);
}

uint64_t sub_1BB69CA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BB86CBE0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + ((((((v4 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

void sub_1BB69CB2C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1BB86CBE0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BB6992C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1BB69CBBC()
{
  return swift_deallocObject();
}

uint64_t sub_1BB69CBCC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BB69CBF8()
{
  uint64_t v0;

  sub_1BB6993C4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1BB69CC00()
{
  return swift_deallocObject();
}

uint64_t sub_1BB69CC10()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB69CC74()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

uint64_t sub_1BB69CCD0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[9])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 6));
  if (v0[14])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 11));
  if (v0[19])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BB69CD2C()
{
  uint64_t v0;

  return sub_1BB69BC4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1BB69CD40()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB69CD74()
{
  uint64_t *v0;

  return sub_1BB69BD7C(v0[2], v0[3], v0[4]);
}

void sub_1BB69CD80(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  uint64_t v8;

  sub_1BB69BF98(v8, a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1BB69CD88()
{
  uint64_t v0;

  sub_1BB69C0C4(v0);
}

uint64_t FormatStateMachineActionEvent.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateMachineActionEvent.eventIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB69CDEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatStateMachineActionEvent.init(from:)(a1, a2);
}

uint64_t sub_1BB69CE00(_QWORD *a1)
{
  return FormatStateMachineActionEvent.encode(to:)(a1);
}

unint64_t sub_1BB69CE14(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB69CE38();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB69CE38()
{
  unint64_t result;

  result = qword_1EF2CA398;
  if (!qword_1EF2CA398)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineActionEvent, &type metadata for FormatStateMachineActionEvent);
    atomic_store(result, (unint64_t *)&qword_1EF2CA398);
  }
  return result;
}

unint64_t sub_1BB69CE7C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE87840();
  a1[2] = sub_1BAEF52FC();
  result = sub_1BB69CEB0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB69CEB0()
{
  unint64_t result;

  result = qword_1EF2CA3A0;
  if (!qword_1EF2CA3A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineActionEvent, &type metadata for FormatStateMachineActionEvent);
    atomic_store(result, (unint64_t *)&qword_1EF2CA3A0);
  }
  return result;
}

uint64_t destroy for FormatStateMachineAction(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6C1F54(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatStateMachineAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA7261E0(v7, v8, v9, v10, v11);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = v11;
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  v13 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatStateMachineAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_BYTE *)(a2 + 80);
  sub_1BA7261E0(v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = v8;
  sub_1BA6C1F54(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatStateMachineAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 80);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_BYTE *)(a1 + 80);
  v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 80) = v5;
  sub_1BA6C1F54(v6, v7, v8, v9, v10);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatStateMachineAction()
{
  return &type metadata for FormatStateMachineAction;
}

ValueMetadata *type metadata accessor for FormatStateMachineActionEvent()
{
  return &type metadata for FormatStateMachineActionEvent;
}

_QWORD *sub_1BB69D240(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[112];
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[104];
  uint64_t v33;
  _BYTE v34[88];
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;
  _BYTE v44[128];
  _QWORD v45[17];

  sub_1BB69D700(a1, (uint64_t)v44);
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v1);
  sub_1BA8C88C8(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28 = *(_QWORD *)(v4 + 72);
  v27 = 2 * v28;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87A390;
  v7 = (_QWORD *)(v6 + v5);
  sub_1BB69D700((uint64_t)v44, (uint64_t)v45);
  v8 = 0;
  v9 = 0;
  if (sub_1BA8CF120((uint64_t)v45) != 1)
  {
    v8 = v45[0];
    v9 = v45[1];
    swift_bridgeObjectRetain();
  }
  sub_1BAAF7494(0x696669746E656449, 0xEA00000000007265, v8, v9, v7);
  v10 = type metadata accessor for FormatInspectionItem(0);
  v11 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v7, 0, 1, v10);
  sub_1BB69D700((uint64_t)v44, (uint64_t)&v37);
  v12 = 0;
  v13 = 0;
  if (sub_1BA8CF120((uint64_t)&v37) != 1)
  {
    v12 = v38;
    v13 = v39;
    swift_bridgeObjectRetain();
  }
  sub_1BAAF7494(1701667150, 0xE400000000000000, v12, v13, (_QWORD *)((char *)v7 + v28));
  v11((_QWORD *)((char *)v7 + v28), 0, 1, v10);
  sub_1BAF89090(0x614D206574617453, 0xED0000656E696863, 0, 0, v6, v40);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v14 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v14;
  *(_QWORD *)(v14 + 48) = v41;
  v15 = v40[1];
  *(_OWORD *)(v14 + 16) = v40[0];
  *(_OWORD *)(v14 + 32) = v15;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BB87FC80;
  v17 = (_QWORD *)(v16 + v5);
  sub_1BB69D700((uint64_t)v44, (uint64_t)v34);
  v18 = 0;
  v19 = 0;
  if (sub_1BA8CF120((uint64_t)v34) != 1)
  {
    v18 = v35;
    v19 = v36;
    swift_bridgeObjectRetain();
  }
  sub_1BAAF7494(0x696669746E656449, 0xEA00000000007265, v18, v19, v17);
  v11(v17, 0, 1, v10);
  sub_1BB69D700((uint64_t)v44, (uint64_t)v32);
  if (sub_1BA8CF120((uint64_t)v32) == 1)
  {
    v20 = 0;
  }
  else
  {
    v20 = v33;
    swift_bridgeObjectRetain();
  }
  sub_1BAAFE890(0x617453206D6F7246, 0xEA00000000006574, v20, (_QWORD *)((char *)v17 + v28));
  v11((_QWORD *)((char *)v17 + v28), 0, 1, v10);
  sub_1BB69D700((uint64_t)v44, (uint64_t)v29);
  if (sub_1BA8CF120((uint64_t)v29) == 1)
  {
    v21 = 0;
    v22 = 0;
  }
  else
  {
    v21 = v30;
    v22 = v31;
    swift_bridgeObjectRetain();
  }
  sub_1BAAF7494(0x6574617453206F54, 0xE800000000000000, v21, v22, (_QWORD *)((char *)v17 + v27));
  v11((_QWORD *)((char *)v17 + v27), 0, 1, v10);
  sub_1BAF89090(0x746E657645, 0xE500000000000000, 0, 0, v16, v42);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v23 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v23;
  *(_QWORD *)(v23 + 48) = v43;
  v24 = v42[1];
  *(_OWORD *)(v23 + 16) = v42[0];
  *(_OWORD *)(v23 + 32) = v24;
  v25 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v25;
}

uint64_t sub_1BB69D700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB203578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB69D744()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t destroy for FormatStateMachineInlineOutput()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8NewsFeed30FormatStateMachineInlineOutputVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatStateMachineInlineOutput(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FormatStateMachineInlineOutput(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatStateMachineInlineOutput()
{
  return &type metadata for FormatStateMachineInlineOutput;
}

ValueMetadata *type metadata accessor for FormatStateMachineInlineOutput.Scope()
{
  return &type metadata for FormatStateMachineInlineOutput.Scope;
}

uint64_t sub_1BB69D8A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v4 = a1 + 32;
    do
    {
      v4 += 16;
      swift_unknownObjectRetain();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_1BB69D954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_1BB6ADD4C();
  v43 = v3;
  v39 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v42 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v33 - v6;
  sub_1BAC88048(0);
  v40 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v44 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (!v9)
    return v10;
  v35 = v1;
  v45 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7B894(0, v9, 0);
  result = sub_1BA6AFD6C(a1);
  v13 = result;
  v14 = 0;
  v15 = a1 + 64;
  v16 = *(_BYTE *)(a1 + 32);
  v34 = a1 + 88;
  v36 = v9;
  v37 = v12;
  v38 = a1 + 64;
  while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << v16)
  {
    v19 = (unint64_t)v13 >> 6;
    if ((*(_QWORD *)(v15 + 8 * ((unint64_t)v13 >> 6)) & (1 << v13)) == 0)
      goto LABEL_27;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v12)
      goto LABEL_28;
    v20 = a1;
    v21 = *(_QWORD *)(a1 + 56);
    v22 = v39;
    v23 = v41;
    v24 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v41, v21 + *(_QWORD *)(v39 + 72) * v13, v43);
    v25 = v42;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v42, v23, v24);
    swift_getKeyPath();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v24);
    v10 = v45;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC7B894(0, *(_QWORD *)(v10 + 16) + 1, 1);
      v10 = v45;
    }
    v27 = *(_QWORD *)(v10 + 16);
    v26 = *(_QWORD *)(v10 + 24);
    a1 = v20;
    if (v27 >= v26 >> 1)
    {
      sub_1BAC7B894(v26 > 1, v27 + 1, 1);
      v10 = v45;
    }
    *(_QWORD *)(v10 + 16) = v27 + 1;
    result = sub_1BA5193C4(v44, v10+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v27, (uint64_t (*)(_QWORD))sub_1BAC88048);
    v16 = *(_BYTE *)(v20 + 32);
    v17 = 1 << v16;
    if (v13 >= 1 << v16)
      goto LABEL_29;
    v15 = v38;
    v28 = *(_QWORD *)(v38 + 8 * v19);
    if ((v28 & (1 << v13)) == 0)
      goto LABEL_30;
    LODWORD(v12) = v37;
    if (*(_DWORD *)(v20 + 36) != (_DWORD)v37)
      goto LABEL_31;
    v29 = v28 & (-2 << (v13 & 0x3F));
    if (v29)
    {
      v17 = __clz(__rbit64(v29)) | v13 & 0xFFFFFFFFFFFFFFC0;
      v18 = v36;
    }
    else
    {
      v30 = v19 + 1;
      v31 = (v17 + 63) >> 6;
      v18 = v36;
      if (v19 + 1 < v31)
      {
        v32 = *(_QWORD *)(v38 + 8 * v30);
        if (!v32)
        {
          v30 = v19 + 2;
          if (v19 + 2 >= v31)
            goto LABEL_4;
          v32 = *(_QWORD *)(v38 + 8 * v30);
          if (!v32)
          {
            while (v31 - 3 != v19)
            {
              v32 = *(_QWORD *)(v34 + 8 * v19++);
              if (v32)
              {
                v30 = v19 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        v17 = __clz(__rbit64(v32)) + (v30 << 6);
      }
    }
LABEL_4:
    ++v14;
    v13 = v17;
    if (v14 == v18)
      return v10;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1BB69DCC8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1BA7447E8(0, v1, 0);
  v2 = v26;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v22 = v1;
  v23 = v5;
  v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
    v13 = v12[1];
    v25 = *v12;
    v15 = *(_QWORD *)(v26 + 16);
    v14 = *(_QWORD *)(v26 + 24);
    result = swift_bridgeObjectRetain();
    if (v15 >= v14 >> 1)
      result = sub_1BA7447E8(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v26 + 16) = v15 + 1;
    v16 = v26 + 16 * v15;
    *(_QWORD *)(v16 + 32) = v25;
    *(_QWORD *)(v16 + 40) = v13;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v17 = *(_QWORD *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23)
      goto LABEL_27;
    v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v22;
    }
    else
    {
      v19 = v11 + 1;
      v20 = (unint64_t)(v9 + 63) >> 6;
      v10 = v22;
      if (v11 + 1 < v20)
      {
        v21 = *(_QWORD *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            v21 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

_QWORD *sub_1BB69DED0(uint64_t a1)
{
  uint64_t v1;
  id *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = (id *)(swift_bridgeObjectRetain() + 48);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v5 = *(v2 - 2);
    v4 = *(v2 - 1);
    v6 = *v2;
    swift_unknownObjectRetain();
    v7 = v4;
    v8 = objc_msgSend(v5, sel_publisherID);
    if (v8)
    {
      v9 = v8;
      v10 = sub_1BB8729A0();
      v12 = v11;

      swift_unknownObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1BA6EA0D0(0, v3[2] + 1, 1, v3);
      v14 = v3[2];
      v13 = v3[3];
      if (v14 >= v13 >> 1)
        v3 = sub_1BA6EA0D0((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
      v3[2] = v14 + 1;
      v15 = &v3[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
    }
    else
    {

      swift_unknownObjectRelease();
    }
    v2 += 3;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BB69E03C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 32;
    do
    {
      if (swift_dynamicCastObjCProtocolConditional())
      {
        v5 = swift_unknownObjectRetain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 24;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

_QWORD *FeedClusteringService.__allocating_init(cloudContext:allowlistProvider:feedPersonalizer:personalizationService:headlineClusterOrderer:topicClusteringJournalStorageService:tagService:headlineService:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, __int128 *a6, __int128 *a7, __int128 *a8)
{
  _QWORD *v16;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  sub_1BA4CECCC(a4, (uint64_t)(v16 + 5));
  v16[10] = a5;
  sub_1BA4CECCC(a6, (uint64_t)(v16 + 11));
  sub_1BA4CECCC(a7, (uint64_t)(v16 + 16));
  sub_1BA4CECCC(a8, (uint64_t)(v16 + 21));
  return v16;
}

_QWORD *FeedClusteringService.init(cloudContext:allowlistProvider:feedPersonalizer:personalizationService:headlineClusterOrderer:topicClusteringJournalStorageService:tagService:headlineService:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, __int128 *a6, __int128 *a7, __int128 *a8)
{
  _QWORD *v8;

  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1BA4CECCC(a4, (uint64_t)(v8 + 5));
  v8[10] = a5;
  sub_1BA4CECCC(a6, (uint64_t)(v8 + 11));
  sub_1BA4CECCC(a7, (uint64_t)(v8 + 16));
  sub_1BA4CECCC(a8, (uint64_t)(v8 + 21));
  return v8;
}

uint64_t FeedClusteringService.createClusters(request:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v3 = type metadata accessor for FeedClusteringRequest(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = sub_1BB69E3C8(a1);
  sub_1BB69E618();
  sub_1BB86EC14();
  sub_1BA4C2DD8(a1, (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FeedClusteringRequest);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v1;
  sub_1BA5193C4((uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for FeedClusteringRequest);
  *(_QWORD *)(v8 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1BB69EFC0;
  *(_QWORD *)(v9 + 24) = v8;
  swift_retain();
  v10 = v6;
  v11 = (void *)sub_1BB86E854();
  v12 = sub_1BB86E968();

  swift_release();
  swift_release();

  return v12;
}

id sub_1BB69E3C8(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id result;
  unsigned int v12;
  unsigned __int8 v13;
  id v14;
  uint64_t v15;
  unsigned int v16;

  v3 = *(void **)(a1 + 16);
  v4 = objc_msgSend(v3, sel_personalizationTreatment);
  v5 = objc_msgSend(v4, sel_minClusterSizeIPhone);
  v6 = objc_msgSend(v4, sel_minClusterSizeIPad);
  v7 = objc_msgSend(v4, sel_maxClusterSizeIPhone);
  v8 = objc_msgSend(v4, sel_maxClusterSizeIPad);
  v9 = *(void **)(v1 + 16);
  v16 = objc_msgSend(v9, sel_deviceIsiPad);
  v10 = *(unsigned __int8 *)(a1 + 32);
  result = objc_msgSend(v9, sel_pptContext);
  if (result)
  {
    v12 = objc_msgSend(result, sel_isRunningPPT);
    swift_unknownObjectRelease();
    if ((objc_msgSend(v3, sel_respondsToSelector_, sel_todayFeedEnabled) & 1) != 0)
      v13 = objc_msgSend(v3, sel_todayFeedEnabled);
    else
      v13 = 0;
    LOBYTE(v15) = v13;
    v14 = objc_msgSend((id)objc_opt_self(), sel_rulesWithTreatment_deviceIsiPad_limitUnpaidArticles_enforcePublisherCap_minClusterSizeiPhone_maxClusterSizeiPhone_minClusterSizeiPad_maxClusterSizeiPad_todayFeedEnabled_, v4, v16, v10, v12 ^ 1, v5, v7, v6, v8, v15);

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB69E558()
{
  uint64_t v0;

  sub_1BB6AE634();
  swift_allocObject();
  sub_1BB86EA58();
  sub_1BB6AE6A0();
  swift_allocObject();
  sub_1BB86EA58();
  v0 = sub_1BB86EBF0();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1BB69E600()
{
  return sub_1BB69E558();
}

void sub_1BB69E618()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED39DA80)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED39DA78);
    sub_1BA4C3E90(255, (unint64_t *)&unk_1ED39DA90, &qword_1ED39DA88, (uint64_t)&protocolRef_FCTranslationProvider, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED39DA80);
  }
}

uint64_t sub_1BB69E6B4()
{
  sub_1BA4AD288(0, &qword_1ED3A3A28, (uint64_t)&type metadata for FeedClusteringResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BB69E724()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int *v6;
  unsigned int (*v7)(unint64_t, uint64_t, int *);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(unint64_t, uint64_t, uint64_t);
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;

  v1 = (int *)type metadata accessor for FeedClusteringRequest(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v68 = *(_QWORD *)(v2 + 64);
  swift_release();
  v70 = v0;
  v69 = v3;
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + v1[10];
  v6 = (int *)type metadata accessor for FeedClusteringOptions(0);
  v7 = *(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    v8 = v5 + v6[5];
    v9 = sub_1BB86D078();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v8, 1, v9))
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v8, v9);
    v12 = v5 + v6[7];
    if (!v11(v12, 1, v9))
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v12, v9);
    v13 = v5 + v6[8];
    v14 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v13 + *(int *)(v14 + 24), v9);
      swift_bridgeObjectRelease();
    }
    v15 = v5 + v6[10];
    if (!v11(v15, 1, v9))
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v15, v9);
    v16 = v5 + v6[12];
    if (!v11(v16, 1, v9))
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v16, v9);
    v17 = v5 + v6[14];
    if (!v11(v17, 1, v9))
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v17, v9);
    v18 = v5 + v6[16];
    if (!v11(v18, 1, v9))
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v18, v9);
    if (*(_QWORD *)(v5 + v6[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v19 = v5 + v6[19];
    v20 = sub_1BB86D024();
    v21 = *(_QWORD *)(v20 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      (*(void (**)(unint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  v22 = v4 + v1[11];
  if (!v7(v22, 1, v6))
  {
    v23 = v22 + v6[5];
    v24 = sub_1BB86D078();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    if (!v26(v23, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    v27 = v22 + v6[7];
    if (!v26(v27, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
    v28 = v22 + v6[8];
    v29 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v28 + *(int *)(v29 + 24), v24);
      swift_bridgeObjectRelease();
    }
    v30 = v22 + v6[10];
    if (!v26(v30, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v30, v24);
    v31 = v22 + v6[12];
    if (!v26(v31, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v31, v24);
    v32 = v22 + v6[14];
    if (!v26(v32, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v32, v24);
    v33 = v22 + v6[16];
    if (!v26(v33, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v33, v24);
    if (*(_QWORD *)(v22 + v6[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v34 = v22 + v6[19];
    v35 = sub_1BB86D024();
    v36 = *(_QWORD *)(v35 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      (*(void (**)(unint64_t, uint64_t))(v36 + 8))(v34, v35);
  }
  swift_bridgeObjectRelease();
  v37 = v4 + v1[13];
  if (!v7(v37, 1, v6))
  {
    v38 = v37 + v6[5];
    v39 = sub_1BB86D078();
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
    if (!v41(v38, 1, v39))
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
    v42 = v37 + v6[7];
    if (!v41(v42, 1, v39))
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v39);
    v43 = v37 + v6[8];
    v44 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v40 + 8))(v43 + *(int *)(v44 + 24), v39);
      swift_bridgeObjectRelease();
    }
    v45 = v37 + v6[10];
    if (!v41(v45, 1, v39))
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v45, v39);
    v46 = v37 + v6[12];
    if (!v41(v46, 1, v39))
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v46, v39);
    v47 = v37 + v6[14];
    if (!v41(v47, 1, v39))
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v47, v39);
    v48 = v37 + v6[16];
    if (!v41(v48, 1, v39))
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v48, v39);
    if (*(_QWORD *)(v37 + v6[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v49 = v37 + v6[19];
    v50 = sub_1BB86D024();
    v51 = *(_QWORD *)(v50 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      (*(void (**)(unint64_t, uint64_t))(v51 + 8))(v49, v50);
  }
  v52 = v4 + v1[14];
  if (!v7(v52, 1, v6))
  {
    v53 = v52 + v6[5];
    v54 = sub_1BB86D078();
    v55 = *(_QWORD *)(v54 - 8);
    v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
    if (!v56(v53, 1, v54))
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
    v57 = v52 + v6[7];
    if (!v56(v57, 1, v54))
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v57, v54);
    v58 = v52 + v6[8];
    v59 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v55 + 8))(v58 + *(int *)(v59 + 24), v54);
      swift_bridgeObjectRelease();
    }
    v60 = v52 + v6[10];
    if (!v56(v60, 1, v54))
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v60, v54);
    v61 = v52 + v6[12];
    if (!v56(v61, 1, v54))
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v61, v54);
    v62 = v52 + v6[14];
    if (!v56(v62, 1, v54))
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v62, v54);
    v63 = v52 + v6[16];
    if (!v56(v63, 1, v54))
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v63, v54);
    if (*(_QWORD *)(v52 + v6[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v64 = v52 + v6[19];
    v65 = sub_1BB86D024();
    v66 = *(_QWORD *)(v65 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      (*(void (**)(unint64_t, uint64_t))(v66 + 8))(v64, v65);
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BB69EFC0()
{
  type metadata accessor for FeedClusteringRequest(0);
  return sub_1BB69E6B4();
}

uint64_t sub_1BB69F024@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int *a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, unsigned __int8 a12, unsigned __int8 a13, uint64_t a14)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  double v287;
  uint64_t v288;
  char *v289;
  uint64_t v290;
  unsigned int (*v291)(char *, uint64_t);
  id v292;
  char v293;
  char **v294;
  char v295;
  char **v296;
  int v297;
  char *v298;
  char v299;
  char **v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char v304;
  char **v305;
  int *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int *v310;
  char *v311;
  uint64_t v312;
  unsigned int (*v313)(char *, uint64_t, int *);
  int *v314;
  char *v315;
  uint64_t v316;
  int *v317;
  char *v318;
  char v319;
  char **v320;
  uint64_t v321;
  uint64_t v322;
  char v323;
  char **v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char v328;
  char **v329;
  uint64_t v330;
  unsigned int (*v331)(uint64_t, uint64_t, int *);
  uint64_t v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  int v336;
  BOOL v337;
  char **v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  unsigned int v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  unsigned int v347;
  uint64_t v348;
  uint64_t v349;
  unsigned int v350;
  char **v351;
  int v352;
  uint64_t v353;
  uint64_t v354;
  char *v355;
  int v356;
  uint64_t v357;
  uint64_t v358;
  int v359;
  id v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  char *v364;
  uint64_t v365;
  int v366;
  uint64_t v367;
  unsigned int v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  unsigned int v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  char **v377;
  int v378;
  char **v379;
  uint64_t v380;
  char **v381;
  int v382;
  char **v383;
  void *v384;
  uint64_t v385;
  unsigned int v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  char *v390;
  int v391;
  char **v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  int v397;
  char **v398;
  uint64_t v399;
  uint64_t v400;
  unsigned int v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  unsigned int v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  char *v413;
  int v414;
  char **v415;
  char **v416;
  int v417;
  char **v418;
  uint64_t v419;
  char **v420;
  int v421;
  char **v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  char *v433;
  int v434;
  char *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  int v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  char *v445;
  int v446;
  char *v447;
  uint64_t v448;
  unsigned int v449;
  char *v450;
  uint64_t v451;
  char *v452;
  int v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  unsigned int v459;
  uint64_t v460;
  unsigned int v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  unsigned int v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  void (*v469)(char *, char *, uint64_t);
  void (*v470)(uint64_t);
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  char *v475;
  char *v476;
  uint64_t *v477;
  char *v478;
  uint64_t (*v479)(uint64_t);
  uint64_t (*v480)(uint64_t);
  uint64_t v481;
  void (*v482)(char *, char *, uint64_t);
  uint64_t v483;
  uint64_t v484;
  int *v485;
  uint64_t v486;
  char *v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  int v491;
  char *v492;
  unsigned int (*v493)(uint64_t, uint64_t, int *);
  int *v494;
  uint64_t *v495;
  char *v496;
  uint64_t v497;
  char *v498;
  uint64_t (*v499)(uint64_t);
  uint64_t (*v500)(uint64_t);
  id v501;
  uint64_t v502;
  char *v503;
  uint64_t v504;
  uint64_t v505;
  int *v506;
  uint64_t v507;
  char *v508;
  uint64_t v509;
  uint64_t v510;
  int v511;
  uint64_t v512;
  char *v513;
  uint64_t *v514;
  char *v515;
  uint64_t (*v516)(uint64_t);
  uint64_t (*v517)(uint64_t);
  id v518;
  uint64_t v519;
  void (*v520)(char *, char *, uint64_t);
  uint64_t v521;
  uint64_t v522;
  int *v523;
  uint64_t v524;
  char *v525;
  uint64_t v526;
  uint64_t v527;
  int v528;
  uint64_t v529;
  char *v530;
  uint64_t *v531;
  char *v532;
  uint64_t (*v533)(uint64_t);
  uint64_t (*v534)(uint64_t);
  id v535;
  void (*v536)(char *, uint64_t);
  uint64_t v537;
  char *v539;
  char *v540;
  char *v541;
  char *v542;
  uint64_t v543;
  char *v544;
  uint64_t v545;
  char *v546;
  uint64_t v547;
  char *v548;
  uint64_t v549;
  char *v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  char *v557;
  char *v558;
  char *v559;
  uint64_t v560;
  char *v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  char *v565;
  char *v566;
  uint64_t v567;
  uint64_t v568;
  char *v569;
  char *v570;
  uint64_t v571;
  char *v572;
  uint64_t v573;
  uint64_t v574;
  char *v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  char *v581;
  uint64_t v582;
  char *v583;
  char *v584;
  char *v585;
  uint64_t v586;
  char *v587;
  char *v588;
  char *v589;
  char *v590;
  char *v591;
  char *v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  char *v596;
  uint64_t v597;
  char *v598;
  id v599;
  uint64_t v600;
  char *v601;
  char *v602;
  char *v603;
  uint64_t v604;
  uint64_t v605;
  char *v606;
  uint64_t v607;
  uint64_t v608;
  char *v609;
  uint64_t v610;
  int v611;
  uint64_t v612;
  double v613;
  double v614;
  char *v615;
  char *v616;
  char *v617;
  char *v618;
  char *v619;
  id v620;
  char *v621;
  id v622;
  char *v623;
  char *v624;
  char *v625;
  char *v626;
  char *v627;
  char *v628;
  char *v629;
  char *v630;
  char *v631;
  char *v632;
  char *v633;
  char *v634;
  char *v635;
  char *v636;
  char *v637;
  char *v638;
  char *v639;
  char *v640;
  char *v641;
  char *v642;
  char *v643;
  char *v644;
  char *v645;
  char *v646;
  char *v647;
  char *v648;
  char *v649;
  uint64_t v650;
  char *v651;
  uint64_t v652;
  char *v653;
  char *v654;
  char *v655;
  char *v656;
  char *v657;
  char *v658;
  char *v659;
  char *v660;
  char *v661;
  char *v662;
  char *v663;
  char *v664;
  char *v665;
  char *v666;
  char *v667;
  char *v668;
  char *v669;
  char *v670;
  char *v671;
  char *v672;
  char *v673;
  char *v674;
  char *v675;
  char *v676;
  uint64_t v677;
  uint64_t v678;
  char *v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  void (*v685)(char *, uint64_t, uint64_t);
  id v686;
  int *v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;

  v614 = a11;
  v613 = a10;
  v611 = a8;
  v687 = a7;
  v682 = a6;
  v684 = a4;
  v689 = a3;
  v612 = a2;
  v686 = a1;
  v610 = a9;
  sub_1BB6ADA48();
  MEMORY[0x1E0C80A78](v15);
  v609 = (char *)&v539 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB6AE454();
  MEMORY[0x1E0C80A78](v17);
  v657 = (char *)&v539 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v605 = sub_1BB86D0A8();
  v604 = *(_QWORD *)(v605 - 8);
  MEMORY[0x1E0C80A78](v605);
  v656 = (char *)&v539 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB6ADBBC();
  MEMORY[0x1E0C80A78](v20);
  v655 = (char *)&v539 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v652 = sub_1BB86D09C();
  v650 = *(_QWORD *)(v652 - 8);
  MEMORY[0x1E0C80A78](v652);
  v550 = (char *)&v539 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v654 = (char *)&v539 - v24;
  MEMORY[0x1E0C80A78](v25);
  v548 = (char *)&v539 - v26;
  MEMORY[0x1E0C80A78](v27);
  v643 = (char *)&v539 - v28;
  MEMORY[0x1E0C80A78](v29);
  v546 = (char *)&v539 - v30;
  MEMORY[0x1E0C80A78](v31);
  v639 = (char *)&v539 - v32;
  MEMORY[0x1E0C80A78](v33);
  v544 = (char *)&v539 - v34;
  MEMORY[0x1E0C80A78](v35);
  v632 = (char *)&v539 - v36;
  sub_1BA7677C4(0);
  MEMORY[0x1E0C80A78](v37);
  v549 = (uint64_t)&v539 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v547 = (uint64_t)&v539 - v40;
  MEMORY[0x1E0C80A78](v41);
  v545 = (uint64_t)&v539 - v42;
  MEMORY[0x1E0C80A78](v43);
  v543 = (uint64_t)&v539 - v44;
  v608 = sub_1BB86D0CC();
  v607 = *(_QWORD *)(v608 - 8);
  MEMORY[0x1E0C80A78](v608);
  v542 = (char *)&v539 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v46);
  v651 = (char *)&v539 - v47;
  MEMORY[0x1E0C80A78](v48);
  v541 = (char *)&v539 - v49;
  MEMORY[0x1E0C80A78](v50);
  v642 = (char *)&v539 - v51;
  MEMORY[0x1E0C80A78](v52);
  v540 = (char *)&v539 - v53;
  MEMORY[0x1E0C80A78](v54);
  v638 = (char *)&v539 - v55;
  MEMORY[0x1E0C80A78](v56);
  v539 = (char *)&v539 - v57;
  MEMORY[0x1E0C80A78](v58);
  v631 = (char *)&v539 - v59;
  sub_1BB6AD8D4();
  MEMORY[0x1E0C80A78](v60);
  v653 = (char *)&v539 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAC88048(0);
  MEMORY[0x1E0C80A78](v62);
  v680 = (uint64_t)&v539 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v64);
  v678 = (uint64_t)&v539 - v65;
  MEMORY[0x1E0C80A78](v66);
  v677 = (uint64_t)&v539 - v67;
  sub_1BB3A074C();
  MEMORY[0x1E0C80A78](v68);
  v593 = (uint64_t)&v539 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v70);
  v591 = (char *)&v539 - v71;
  MEMORY[0x1E0C80A78](v72);
  v589 = (char *)&v539 - v73;
  MEMORY[0x1E0C80A78](v74);
  v585 = (char *)&v539 - v75;
  MEMORY[0x1E0C80A78](v76);
  v583 = (char *)&v539 - v77;
  MEMORY[0x1E0C80A78](v78);
  v659 = (char *)&v539 - v79;
  MEMORY[0x1E0C80A78](v80);
  v658 = (char *)&v539 - v81;
  MEMORY[0x1E0C80A78](v82);
  v575 = (char *)&v539 - v83;
  MEMORY[0x1E0C80A78](v84);
  v618 = (char *)&v539 - v85;
  MEMORY[0x1E0C80A78](v86);
  v615 = (char *)&v539 - v87;
  MEMORY[0x1E0C80A78](v88);
  v566 = (char *)&v539 - v89;
  MEMORY[0x1E0C80A78](v90);
  v621 = (char *)&v539 - v91;
  MEMORY[0x1E0C80A78](v92);
  v624 = (char *)&v539 - v93;
  MEMORY[0x1E0C80A78](v94);
  v616 = (char *)&v539 - v95;
  MEMORY[0x1E0C80A78](v96);
  v619 = (char *)&v539 - v97;
  MEMORY[0x1E0C80A78](v98);
  v617 = (char *)&v539 - v99;
  MEMORY[0x1E0C80A78](v100);
  v590 = (char *)&v539 - v101;
  v688 = sub_1BB86D078();
  v681 = *(_QWORD *)(v688 - 8);
  MEMORY[0x1E0C80A78](v688);
  v649 = (char *)&v539 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v103);
  v647 = (char *)&v539 - v104;
  MEMORY[0x1E0C80A78](v105);
  v648 = (char *)&v539 - v106;
  MEMORY[0x1E0C80A78](v107);
  v646 = (char *)&v539 - v108;
  MEMORY[0x1E0C80A78](v109);
  v645 = (char *)&v539 - v110;
  MEMORY[0x1E0C80A78](v111);
  v644 = (char *)&v539 - v112;
  MEMORY[0x1E0C80A78](v113);
  v603 = (char *)&v539 - v114;
  MEMORY[0x1E0C80A78](v115);
  v601 = (char *)&v539 - v116;
  MEMORY[0x1E0C80A78](v117);
  v602 = (char *)&v539 - v118;
  MEMORY[0x1E0C80A78](v119);
  v641 = (char *)&v539 - v120;
  MEMORY[0x1E0C80A78](v121);
  v640 = (char *)&v539 - v122;
  MEMORY[0x1E0C80A78](v123);
  v637 = (char *)&v539 - v124;
  MEMORY[0x1E0C80A78](v125);
  v635 = (char *)&v539 - v126;
  MEMORY[0x1E0C80A78](v127);
  v636 = (char *)&v539 - v128;
  MEMORY[0x1E0C80A78](v129);
  v634 = (char *)&v539 - v130;
  MEMORY[0x1E0C80A78](v131);
  v633 = (char *)&v539 - v132;
  MEMORY[0x1E0C80A78](v133);
  v679 = (char *)&v539 - v134;
  MEMORY[0x1E0C80A78](v135);
  v630 = (char *)&v539 - v136;
  MEMORY[0x1E0C80A78](v137);
  v628 = (char *)&v539 - v138;
  MEMORY[0x1E0C80A78](v139);
  v629 = (char *)&v539 - v140;
  MEMORY[0x1E0C80A78](v141);
  v627 = (char *)&v539 - v142;
  MEMORY[0x1E0C80A78](v143);
  v626 = (char *)&v539 - v144;
  MEMORY[0x1E0C80A78](v145);
  v625 = (char *)&v539 - v146;
  MEMORY[0x1E0C80A78](v147);
  v676 = (char *)&v539 - v148;
  MEMORY[0x1E0C80A78](v149);
  v675 = (char *)&v539 - v150;
  MEMORY[0x1E0C80A78](v151);
  v674 = (char *)&v539 - v152;
  MEMORY[0x1E0C80A78](v153);
  v673 = (char *)&v539 - v154;
  MEMORY[0x1E0C80A78](v155);
  v672 = (char *)&v539 - v156;
  MEMORY[0x1E0C80A78](v157);
  v671 = (char *)&v539 - v158;
  MEMORY[0x1E0C80A78](v159);
  v670 = (char *)&v539 - v160;
  MEMORY[0x1E0C80A78](v161);
  v669 = (char *)&v539 - v162;
  MEMORY[0x1E0C80A78](v163);
  v668 = (char *)&v539 - v164;
  MEMORY[0x1E0C80A78](v165);
  v667 = (char *)&v539 - v166;
  MEMORY[0x1E0C80A78](v167);
  v666 = (char *)&v539 - v168;
  MEMORY[0x1E0C80A78](v169);
  v665 = (char *)&v539 - v170;
  MEMORY[0x1E0C80A78](v171);
  v664 = (char *)&v539 - v172;
  MEMORY[0x1E0C80A78](v173);
  v663 = (char *)&v539 - v174;
  MEMORY[0x1E0C80A78](v175);
  v662 = (char *)&v539 - v176;
  MEMORY[0x1E0C80A78](v177);
  v661 = (char *)&v539 - v178;
  MEMORY[0x1E0C80A78](v179);
  v660 = (char *)&v539 - v180;
  sub_1BB6AB02C(0);
  MEMORY[0x1E0C80A78](v181);
  v606 = (char *)&v539 - ((v182 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v183);
  v600 = (uint64_t)&v539 - v184;
  MEMORY[0x1E0C80A78](v185);
  v598 = (char *)&v539 - v186;
  MEMORY[0x1E0C80A78](v187);
  v597 = (uint64_t)&v539 - v188;
  MEMORY[0x1E0C80A78](v189);
  v596 = (char *)&v539 - v190;
  MEMORY[0x1E0C80A78](v191);
  v594 = (uint64_t)&v539 - v192;
  MEMORY[0x1E0C80A78](v193);
  v592 = (char *)&v539 - v194;
  MEMORY[0x1E0C80A78](v195);
  v588 = (char *)&v539 - v196;
  MEMORY[0x1E0C80A78](v197);
  v587 = (char *)&v539 - v198;
  MEMORY[0x1E0C80A78](v199);
  v586 = (uint64_t)&v539 - v200;
  MEMORY[0x1E0C80A78](v201);
  v584 = (char *)&v539 - v202;
  MEMORY[0x1E0C80A78](v203);
  v582 = (uint64_t)&v539 - v204;
  MEMORY[0x1E0C80A78](v205);
  v580 = (uint64_t)&v539 - v206;
  MEMORY[0x1E0C80A78](v207);
  v579 = (uint64_t)&v539 - v208;
  MEMORY[0x1E0C80A78](v209);
  v578 = (uint64_t)&v539 - v210;
  MEMORY[0x1E0C80A78](v211);
  v577 = (uint64_t)&v539 - v212;
  MEMORY[0x1E0C80A78](v213);
  v576 = (uint64_t)&v539 - v214;
  MEMORY[0x1E0C80A78](v215);
  v574 = (uint64_t)&v539 - v216;
  MEMORY[0x1E0C80A78](v217);
  v573 = (uint64_t)&v539 - v218;
  MEMORY[0x1E0C80A78](v219);
  v571 = (uint64_t)&v539 - v220;
  MEMORY[0x1E0C80A78](v221);
  v572 = (char *)&v539 - v222;
  MEMORY[0x1E0C80A78](v223);
  v570 = (char *)&v539 - v224;
  MEMORY[0x1E0C80A78](v225);
  v568 = (uint64_t)&v539 - v226;
  MEMORY[0x1E0C80A78](v227);
  v567 = (uint64_t)&v539 - v228;
  MEMORY[0x1E0C80A78](v229);
  v565 = (char *)&v539 - v230;
  MEMORY[0x1E0C80A78](v231);
  v564 = (uint64_t)&v539 - v232;
  MEMORY[0x1E0C80A78](v233);
  v563 = (uint64_t)&v539 - v234;
  MEMORY[0x1E0C80A78](v235);
  v562 = (uint64_t)&v539 - v236;
  MEMORY[0x1E0C80A78](v237);
  v561 = (char *)&v539 - v238;
  MEMORY[0x1E0C80A78](v239);
  v560 = (uint64_t)&v539 - v240;
  MEMORY[0x1E0C80A78](v241);
  v559 = (char *)&v539 - v242;
  MEMORY[0x1E0C80A78](v243);
  v558 = (char *)&v539 - v244;
  MEMORY[0x1E0C80A78](v245);
  v581 = (char *)&v539 - v246;
  MEMORY[0x1E0C80A78](v247);
  v569 = (char *)&v539 - v248;
  MEMORY[0x1E0C80A78](v249);
  v557 = (char *)&v539 - v250;
  MEMORY[0x1E0C80A78](v251);
  v556 = (uint64_t)&v539 - v252;
  MEMORY[0x1E0C80A78](v253);
  v555 = (uint64_t)&v539 - v254;
  MEMORY[0x1E0C80A78](v255);
  v554 = (uint64_t)&v539 - v256;
  MEMORY[0x1E0C80A78](v257);
  v623 = (char *)&v539 - v258;
  MEMORY[0x1E0C80A78](v259);
  v553 = (uint64_t)&v539 - v260;
  MEMORY[0x1E0C80A78](v261);
  v552 = (uint64_t)&v539 - v262;
  MEMORY[0x1E0C80A78](v263);
  v551 = (uint64_t)&v539 - v264;
  MEMORY[0x1E0C80A78](v265);
  v267 = (char *)&v539 - v266;
  MEMORY[0x1E0C80A78](v268);
  v270 = (char *)&v539 - v269;
  MEMORY[0x1E0C80A78](v271);
  v273 = (char *)&v539 - v272;
  MEMORY[0x1E0C80A78](v274);
  v276 = (char *)&v539 - v275;
  MEMORY[0x1E0C80A78](v277);
  v279 = (char *)&v539 - v278;
  MEMORY[0x1E0C80A78](v280);
  v282 = (char *)&v539 - v281;
  MEMORY[0x1E0C80A78](v283);
  v285 = (char *)&v539 - v284;
  v287 = MEMORY[0x1E0C80A78](v286);
  v289 = (char *)&v539 - v288;
  v595 = *(char *)v687;
  LODWORD(v685) = objc_msgSend(*(id *)(v690 + 16), sel_deviceIsiPad, v287);
  v683 = a5;
  sub_1BA4C2DD8(a5, (uint64_t)v289, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v290 = type metadata accessor for FeedClusteringOptions(0);
  v291 = *(unsigned int (**)(char *, uint64_t))(*(_QWORD *)(v290 - 8) + 48);
  v687 = (int *)v290;
  v690 = (uint64_t)v291;
  if (v291(v289, 1) == 1)
  {
    sub_1BA4A2E80((uint64_t)v289, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v292 = *(id *)v289;
    v293 = v289[8];
    sub_1BA4A2E80((uint64_t)v289, type metadata accessor for FeedClusteringOptions);
    if ((v293 & 1) == 0)
      goto LABEL_7;
  }
  v294 = &selRef_minClusterSizeIPad;
  if (!(_DWORD)v685)
    v294 = &selRef_minClusterSizeIPhone;
  v292 = objc_msgSend(v686, *v294);
LABEL_7:
  v599 = v292;
  sub_1BA4C2DD8(v689, (uint64_t)v285, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (((unsigned int (*)(char *, uint64_t, int *))v690)(v285, 1, v687) == 1)
  {
    sub_1BA4A2E80((uint64_t)v285, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v620 = *(id *)v285;
    v295 = v285[8];
    sub_1BA4A2E80((uint64_t)v285, type metadata accessor for FeedClusteringOptions);
    if ((v295 & 1) == 0)
      goto LABEL_14;
  }
  if ((_DWORD)v685)
    v296 = &selRef_minClusterSizeIPadAutoFavorite;
  else
    v296 = &selRef_minClusterSizeIPhoneAutoFavorite;
  v620 = objc_msgSend(v686, *v296);
LABEL_14:
  sub_1BA4C2DD8(v684, (uint64_t)v282, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v297 = ((uint64_t (*)(char *, uint64_t, int *))v690)(v282, 1, v687);
  v298 = v557;
  if (v297 == 1)
  {
    sub_1BA4A2E80((uint64_t)v282, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v622 = *(id *)v282;
    v299 = v282[8];
    sub_1BA4A2E80((uint64_t)v282, type metadata accessor for FeedClusteringOptions);
    if ((v299 & 1) == 0)
      goto LABEL_21;
  }
  if ((_DWORD)v685)
    v300 = &selRef_minClusterSizeIPadAutoFavorite;
  else
    v300 = &selRef_minClusterSizeIPhoneAutoFavorite;
  v622 = objc_msgSend(v686, *v300);
LABEL_21:
  v301 = v688;
  v302 = v681;
  v303 = (uint64_t)v623;
  sub_1BA4C2DD8(v682, (uint64_t)v279, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (((unsigned int (*)(char *, uint64_t, int *))v690)(v279, 1, v687) == 1)
  {
    sub_1BA4A2E80((uint64_t)v279, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v623 = *(char **)v279;
    v304 = v279[8];
    sub_1BA4A2E80((uint64_t)v279, type metadata accessor for FeedClusteringOptions);
    if ((v304 & 1) == 0)
      goto LABEL_27;
  }
  v305 = &selRef_minMoreForYouSizeIPad;
  if (!(_DWORD)v685)
    v305 = &selRef_minMoreForYouSizeIPhone;
  v623 = (char *)objc_msgSend(v686, *v305);
LABEL_27:
  sub_1BA4C2DD8(v683, (uint64_t)v276, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v306 = v687;
  if (((unsigned int (*)(char *, uint64_t, int *))v690)(v276, 1, v687) == 1)
  {
    sub_1BA4A2E80((uint64_t)v276, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v307 = (uint64_t)v590;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v302 + 56))(v590, 1, 1, v301);
LABEL_30:
    sub_1BB86D06C();
    sub_1BA4A2E80(v307, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_32;
  }
  v308 = (uint64_t)&v276[v306[5]];
  v307 = (uint64_t)v590;
  sub_1BA4C2DD8(v308, (uint64_t)v590, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80((uint64_t)v276, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48))(v307, 1, v301) == 1)
    goto LABEL_30;
  (*(void (**)(char *, uint64_t, uint64_t))(v302 + 32))(v660, v307, v301);
LABEL_32:
  v309 = (uint64_t)v624;
  sub_1BA4C2DD8(v689, (uint64_t)v273, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v310 = v687;
  if (((unsigned int (*)(char *, uint64_t, int *))v690)(v273, 1, v687) == 1)
  {
    sub_1BA4A2E80((uint64_t)v273, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v311 = v617;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v302 + 56))(v617, 1, 1, v301);
LABEL_35:
    sub_1BB86D06C();
    sub_1BA4A2E80((uint64_t)v311, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_37;
  }
  v312 = (uint64_t)&v273[v310[5]];
  v311 = v617;
  sub_1BA4C2DD8(v312, (uint64_t)v617, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80((uint64_t)v273, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v302 + 48))(v311, 1, v301) == 1)
    goto LABEL_35;
  (*(void (**)(char *, char *, uint64_t))(v302 + 32))(v661, v311, v301);
LABEL_37:
  v313 = (unsigned int (*)(char *, uint64_t, int *))v690;
  sub_1BA4C2DD8(v684, (uint64_t)v270, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v314 = v687;
  if (v313(v270, 1, v687) == 1)
  {
    sub_1BA4A2E80((uint64_t)v270, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v315 = v619;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v302 + 56))(v619, 1, 1, v301);
LABEL_40:
    sub_1BB86D06C();
    sub_1BA4A2E80((uint64_t)v315, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_42;
  }
  v316 = (uint64_t)&v270[v314[5]];
  v315 = v619;
  sub_1BA4C2DD8(v316, (uint64_t)v619, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80((uint64_t)v270, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v302 + 48))(v315, 1, v301) == 1)
    goto LABEL_40;
  (*(void (**)(char *, char *, uint64_t))(v302 + 32))(v662, v315, v301);
LABEL_42:
  sub_1BA4C2DD8(v683, (uint64_t)v267, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v317 = v687;
  if (v313(v267, 1, v687) == 1)
  {
    sub_1BA4A2E80((uint64_t)v267, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v318 = &v267[v317[6]];
    v624 = *(char **)v318;
    v319 = v318[8];
    sub_1BA4A2E80((uint64_t)v267, type metadata accessor for FeedClusteringOptions);
    if ((v319 & 1) == 0)
      goto LABEL_48;
  }
  v320 = &selRef_maxClusterSizeIPad;
  if (!(_DWORD)v685)
    v320 = &selRef_maxClusterSizeIPhone;
  v624 = (char *)objc_msgSend(v686, *v320);
LABEL_48:
  v321 = v551;
  sub_1BA4C2DD8(v689, v551, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v313((char *)v321, 1, v317) == 1)
  {
    sub_1BA4A2E80(v321, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v322 = v321 + v317[6];
    v617 = *(char **)v322;
    v323 = *(_BYTE *)(v322 + 8);
    sub_1BA4A2E80(v321, type metadata accessor for FeedClusteringOptions);
    if ((v323 & 1) == 0)
      goto LABEL_55;
  }
  if ((_DWORD)v685)
    v324 = &selRef_maxClusterSizeIPadAutoFavorite;
  else
    v324 = &selRef_maxClusterSizeIPhoneAutoFavorite;
  v617 = (char *)objc_msgSend(v686, *v324);
LABEL_55:
  v325 = v552;
  sub_1BA4C2DD8(v684, v552, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v690)(v325, 1, v317) == 1)
  {
    sub_1BA4A2E80(v325, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v326 = v325 + v317[6];
    v619 = *(char **)v326;
    v327 = v325;
    v328 = *(_BYTE *)(v326 + 8);
    sub_1BA4A2E80(v327, type metadata accessor for FeedClusteringOptions);
    if ((v328 & 1) == 0)
      goto LABEL_62;
  }
  if ((_DWORD)v685)
    v329 = &selRef_maxClusterSizeIPadAutoFavorite;
  else
    v329 = &selRef_maxClusterSizeIPhoneAutoFavorite;
  v619 = (char *)objc_msgSend(v686, *v329);
LABEL_62:
  v330 = v553;
  sub_1BA4C2DD8(v682, v553, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v331 = (unsigned int (*)(uint64_t, uint64_t, int *))v690;
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v690)(v330, 1, v317) == 1)
  {
    sub_1BA4A2E80(v330, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v332 = (uint64_t)v621;
  }
  else
  {
    v333 = v330 + v317[6];
    v334 = *(char **)v333;
    v335 = v330;
    v336 = *(unsigned __int8 *)(v333 + 8);
    sub_1BA4A2E80(v335, type metadata accessor for FeedClusteringOptions);
    v337 = v336 == 1;
    v332 = (uint64_t)v621;
    if (!v337)
      goto LABEL_69;
  }
  v338 = &selRef_maxMoreForYouSizeIPad;
  if (!(_DWORD)v685)
    v338 = &selRef_maxMoreForYouSizeIPhone;
  v334 = (char *)objc_msgSend(v686, *v338);
LABEL_69:
  sub_1BA4C2DD8(v683, v303, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v303, 1, v317) == 1)
  {
    sub_1BA4A2E80(v303, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v339 = v616;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v302 + 56))(v616, 1, 1, v301);
LABEL_72:
    v340 = v302;
    v341 = (uint64_t)v298;
    sub_1BB86D06C();
    sub_1BA4A2E80((uint64_t)v339, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_74;
  }
  v339 = v616;
  sub_1BA4C2DD8(v303 + v317[7], (uint64_t)v616, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v303, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v302 + 48))(v339, 1, v301) == 1)
    goto LABEL_72;
  v341 = (uint64_t)v298;
  v340 = v302;
  (*(void (**)(char *, char *, uint64_t))(v302 + 32))(v663, v339, v688);
LABEL_74:
  v342 = v554;
  sub_1BA4C2DD8(v689, v554, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v343 = v331(v342, 1, v317);
  v344 = (uint64_t)v559;
  v345 = (uint64_t)v569;
  if (v343 == 1)
  {
    sub_1BA4A2E80(v342, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v340 + 56))(v309, 1, 1, v688);
LABEL_77:
    sub_1BB86D06C();
    sub_1BA4A2E80(v309, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_79;
  }
  sub_1BA4C2DD8(v342 + v317[7], v309, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v342, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v340 + 48))(v309, 1, v688) == 1)
    goto LABEL_77;
  (*(void (**)(char *, uint64_t, uint64_t))(v340 + 32))(v664, v309, v688);
LABEL_79:
  v346 = v555;
  sub_1BA4C2DD8(v684, v555, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v347 = v331(v346, 1, v317);
  v348 = (uint64_t)v558;
  if (v347 == 1)
  {
    sub_1BA4A2E80(v346, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v340 + 56))(v332, 1, 1, v688);
LABEL_82:
    sub_1BB86D06C();
    sub_1BA4A2E80(v332, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_84;
  }
  sub_1BA4C2DD8(v346 + v317[7], v332, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v346, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v340 + 48))(v332, 1, v688) == 1)
    goto LABEL_82;
  (*(void (**)(char *, uint64_t, uint64_t))(v340 + 32))(v665, v332, v688);
LABEL_84:
  v349 = v556;
  sub_1BA4C2DD8(v683, v556, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v350 = v331(v349, 1, v317);
  v590 = v334;
  if (v350 == 1)
  {
    sub_1BA4A2E80(v349, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v351 = (char **)(v349 + v317[11]);
    v621 = *v351;
    v352 = *((unsigned __int8 *)v351 + 8);
    sub_1BA4A2E80(v349, type metadata accessor for FeedClusteringOptions);
    if (v352 != 1)
      goto LABEL_88;
  }
  v621 = (char *)objc_msgSend(v686, sel_maxEvergreenArticlesPerGroup);
LABEL_88:
  v353 = v341;
  sub_1BA4C2DD8(v689, v341, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v341, 1, v317) == 1)
  {
    sub_1BA4A2E80(v341, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v354 = v341 + v317[11];
    v355 = *(char **)v354;
    v356 = *(unsigned __int8 *)(v354 + 8);
    sub_1BA4A2E80(v353, type metadata accessor for FeedClusteringOptions);
    if (v356 != 1)
      goto LABEL_92;
  }
  v355 = (char *)objc_msgSend(v686, sel_maxEvergreenArticlesPerGroup);
LABEL_92:
  sub_1BA4C2DD8(v684, v345, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v345, 1, v317) == 1)
  {
    sub_1BA4A2E80(v345, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v357 = (uint64_t)v581;
  }
  else
  {
    v358 = v345 + v317[11];
    v616 = *(char **)v358;
    v359 = *(unsigned __int8 *)(v358 + 8);
    sub_1BA4A2E80(v345, type metadata accessor for FeedClusteringOptions);
    v337 = v359 == 1;
    v357 = (uint64_t)v581;
    if (!v337)
    {
      v360 = v686;
      goto LABEL_97;
    }
  }
  v360 = v686;
  v616 = (char *)objc_msgSend(v686, sel_maxEvergreenArticlesPerGroup);
LABEL_97:
  v569 = v355;
  v361 = v684;
  sub_1BA4C2DD8(v682, v357, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v357, 1, v317) == 1)
  {
    sub_1BA4A2E80(v357, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v362 = (uint64_t)v615;
LABEL_101:
    v364 = (char *)objc_msgSend(v360, sel_maxEvergreenArticlesPerGroup);
    goto LABEL_102;
  }
  v363 = v357 + v317[11];
  v364 = *(char **)v363;
  v365 = v357;
  v366 = *(unsigned __int8 *)(v363 + 8);
  sub_1BA4A2E80(v365, type metadata accessor for FeedClusteringOptions);
  v337 = v366 == 1;
  v362 = (uint64_t)v615;
  if (v337)
    goto LABEL_101;
LABEL_102:
  v367 = (uint64_t)v618;
  sub_1BA4C2DD8(v683, v348, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v368 = v331(v348, 1, v317);
  v581 = v364;
  if (v368 == 1)
  {
    sub_1BA4A2E80(v348, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v369 = (uint64_t)v566;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v340 + 56))(v566, 1, 1, v688);
LABEL_105:
    sub_1BB86D06C();
    sub_1BA4A2E80(v369, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_107;
  }
  v370 = v348 + v317[12];
  v371 = v348;
  v369 = (uint64_t)v566;
  sub_1BA4C2DD8(v370, (uint64_t)v566, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v371, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v340 + 48))(v369, 1, v688) == 1)
    goto LABEL_105;
  (*(void (**)(char *, uint64_t, uint64_t))(v340 + 32))(v666, v369, v688);
LABEL_107:
  v372 = v361;
  sub_1BA4C2DD8(v689, v344, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v373 = v331(v344, 1, v317);
  v374 = (uint64_t)v565;
  v375 = (uint64_t)v561;
  if (v373 == 1)
  {
    sub_1BA4A2E80(v344, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v340 + 56))(v362, 1, 1, v688);
LABEL_110:
    sub_1BB86D06C();
    sub_1BA4A2E80(v362, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_112;
  }
  sub_1BA4C2DD8(v344 + v317[12], v362, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v344, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v340 + 48))(v362, 1, v688) == 1)
    goto LABEL_110;
  (*(void (**)(char *, uint64_t, uint64_t))(v340 + 32))(v667, v362, v688);
LABEL_112:
  v376 = v560;
  sub_1BA4C2DD8(v372, v560, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v376, 1, v317) == 1)
  {
    sub_1BA4A2E80(v376, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v340 + 56))(v367, 1, 1, v688);
LABEL_115:
    sub_1BB86D06C();
    sub_1BA4A2E80(v367, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_117;
  }
  sub_1BA4C2DD8(v376 + v317[12], v367, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v376, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v340 + 48))(v367, 1, v688) == 1)
    goto LABEL_115;
  (*(void (**)(char *, uint64_t, uint64_t))(v340 + 32))(v668, v367, v688);
LABEL_117:
  sub_1BA4C2DD8(v683, v375, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v375, 1, v317) == 1)
  {
    sub_1BA4A2E80(v375, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v377 = (char **)(v375 + v317[9]);
    v618 = *v377;
    v378 = *((unsigned __int8 *)v377 + 8);
    sub_1BA4A2E80(v375, type metadata accessor for FeedClusteringOptions);
    v337 = v378 == 1;
    v331 = (unsigned int (*)(uint64_t, uint64_t, int *))v690;
    if (!v337)
      goto LABEL_125;
  }
  if ((_DWORD)v685)
    v379 = &selRef_maxUnpaidArticlesIPad;
  else
    v379 = &selRef_maxUnpaidArticlesIPhone;
  v618 = (char *)objc_msgSend(v360, *v379);
LABEL_125:
  v380 = v562;
  sub_1BA4C2DD8(v689, v562, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v380, 1, v317) == 1)
  {
    sub_1BA4A2E80(v380, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v381 = (char **)(v380 + v317[9]);
    v615 = *v381;
    v382 = *((unsigned __int8 *)v381 + 8);
    sub_1BA4A2E80(v380, type metadata accessor for FeedClusteringOptions);
    v337 = v382 == 1;
    v331 = (unsigned int (*)(uint64_t, uint64_t, int *))v690;
    if (!v337)
      goto LABEL_133;
  }
  if ((_DWORD)v685)
    v383 = &selRef_maxUnpaidArticlesIPad;
  else
    v383 = &selRef_maxUnpaidArticlesIPhone;
  v615 = (char *)objc_msgSend(v360, *v383);
LABEL_133:
  v384 = v360;
  v385 = v563;
  sub_1BA4C2DD8(v372, v563, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v386 = v331(v385, 1, v317);
  v387 = v688;
  if (v386 == 1)
  {
    sub_1BA4A2E80(v385, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v388 = v385 + v317[9];
    v389 = v385;
    v390 = *(char **)v388;
    v391 = *(unsigned __int8 *)(v388 + 8);
    sub_1BA4A2E80(v389, type metadata accessor for FeedClusteringOptions);
    v337 = v391 == 1;
    v331 = (unsigned int (*)(uint64_t, uint64_t, int *))v690;
    if (!v337)
      goto LABEL_141;
  }
  if ((_DWORD)v685)
    v392 = &selRef_maxUnpaidArticlesIPad;
  else
    v392 = &selRef_maxUnpaidArticlesIPhone;
  v390 = (char *)objc_msgSend(v384, *v392);
LABEL_141:
  v393 = v564;
  sub_1BA4C2DD8(v682, v564, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v393, 1, v317) == 1)
  {
    sub_1BA4A2E80(v393, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v394 = (uint64_t)v572;
  }
  else
  {
    v395 = v393 + v317[9];
    v396 = *(char **)v395;
    v397 = *(unsigned __int8 *)(v395 + 8);
    sub_1BA4A2E80(v393, type metadata accessor for FeedClusteringOptions);
    v337 = v397 == 1;
    v331 = (unsigned int (*)(uint64_t, uint64_t, int *))v690;
    v394 = (uint64_t)v572;
    if (!v337)
      goto LABEL_149;
  }
  if ((_DWORD)v685)
    v398 = &selRef_maxUnpaidArticlesIPad;
  else
    v398 = &selRef_maxUnpaidArticlesIPhone;
  v396 = (char *)objc_msgSend(v384, *v398);
LABEL_149:
  v399 = (uint64_t)v659;
  v400 = (uint64_t)v658;
  sub_1BA4C2DD8(v683, v374, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v401 = v331(v374, 1, v317);
  v572 = v396;
  v566 = v390;
  if (v401 == 1)
  {
    sub_1BA4A2E80(v374, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v402 = (uint64_t)v575;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v681 + 56))(v575, 1, 1, v387);
LABEL_152:
    v405 = v683;
    sub_1BB86D06C();
    sub_1BA4A2E80(v402, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_154;
  }
  v403 = v374 + v317[10];
  v404 = v374;
  v402 = (uint64_t)v575;
  sub_1BA4C2DD8(v403, (uint64_t)v575, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v404, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v681 + 48))(v402, 1, v387) == 1)
    goto LABEL_152;
  v405 = v683;
  (*(void (**)(char *, uint64_t, uint64_t))(v681 + 32))(v669, v402, v387);
LABEL_154:
  v406 = v567;
  sub_1BA4C2DD8(v689, v567, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v407 = v331(v406, 1, v317);
  v408 = (uint64_t)v570;
  if (v407 == 1)
  {
    sub_1BA4A2E80(v406, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v681 + 56))(v400, 1, 1, v387);
LABEL_157:
    sub_1BB86D06C();
    sub_1BA4A2E80(v400, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_159;
  }
  sub_1BA4C2DD8(v406 + v317[10], v400, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v406, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v681 + 48))(v400, 1, v387) == 1)
    goto LABEL_157;
  (*(void (**)(char *, uint64_t, uint64_t))(v681 + 32))(v670, v400, v387);
LABEL_159:
  v409 = v405;
  v410 = v568;
  sub_1BA4C2DD8(v684, v568, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v410, 1, v317) == 1)
  {
    sub_1BA4A2E80(v410, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v681 + 56))(v399, 1, 1, v387);
LABEL_162:
    sub_1BB86D06C();
    sub_1BA4A2E80(v399, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_164;
  }
  sub_1BA4C2DD8(v410 + v317[10], v399, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v410, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v681 + 48))(v399, 1, v387) == 1)
    goto LABEL_162;
  (*(void (**)(char *, uint64_t, uint64_t))(v681 + 32))(v671, v399, v387);
LABEL_164:
  sub_1BA4C2DD8(v405, v408, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v408, 1, v317) == 1)
  {
    sub_1BA4A2E80(v408, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v411 = v408 + v317[13];
    v412 = v408;
    v413 = *(char **)v411;
    v414 = *(unsigned __int8 *)(v411 + 8);
    sub_1BA4A2E80(v412, type metadata accessor for FeedClusteringOptions);
    v337 = v414 == 1;
    v331 = (unsigned int (*)(uint64_t, uint64_t, int *))v690;
    if (!v337)
      goto LABEL_172;
  }
  if ((_DWORD)v685)
    v415 = &selRef_maxPublisherOccurrencesIPad;
  else
    v415 = &selRef_maxPublisherOccurrencesIPhone;
  v413 = (char *)objc_msgSend(v384, *v415);
LABEL_172:
  sub_1BA4C2DD8(v689, v394, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v394, 1, v317) == 1)
  {
    sub_1BA4A2E80(v394, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v416 = (char **)(v394 + v317[13]);
    v658 = *v416;
    v417 = *((unsigned __int8 *)v416 + 8);
    sub_1BA4A2E80(v394, type metadata accessor for FeedClusteringOptions);
    v337 = v417 == 1;
    v331 = (unsigned int (*)(uint64_t, uint64_t, int *))v690;
    if (!v337)
      goto LABEL_180;
  }
  if ((_DWORD)v685)
    v418 = &selRef_maxPublisherOccurrencesIPad;
  else
    v418 = &selRef_maxPublisherOccurrencesIPhone;
  v658 = (char *)objc_msgSend(v384, *v418);
LABEL_180:
  v419 = v571;
  sub_1BA4C2DD8(v682, v571, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v419, 1, v317) == 1)
  {
    sub_1BA4A2E80(v419, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  }
  else
  {
    v420 = (char **)(v419 + v317[13]);
    v659 = *v420;
    v421 = *((unsigned __int8 *)v420 + 8);
    sub_1BA4A2E80(v419, type metadata accessor for FeedClusteringOptions);
    v337 = v421 == 1;
    v331 = (unsigned int (*)(uint64_t, uint64_t, int *))v690;
    if (!v337)
      goto LABEL_188;
  }
  if ((_DWORD)v685)
    v422 = &selRef_maxPublisherOccurrencesIPad;
  else
    v422 = &selRef_maxPublisherOccurrencesIPhone;
  v659 = (char *)objc_msgSend(v384, *v422);
LABEL_188:
  v423 = (uint64_t)v589;
  v424 = (uint64_t)v585;
  v425 = (uint64_t)v583;
  v426 = v681;
  v427 = v573;
  sub_1BA4C2DD8(v409, v573, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v427, 1, v317) == 1)
  {
    sub_1BA4A2E80(v427, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v426 + 56))(v425, 1, 1, v387);
LABEL_191:
    sub_1BB86D06C();
    sub_1BA4A2E80(v425, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_193;
  }
  sub_1BA4C2DD8(v427 + v317[14], v425, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v427, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v426 + 48))(v425, 1, v387) == 1)
    goto LABEL_191;
  (*(void (**)(char *, uint64_t, uint64_t))(v426 + 32))(v672, v425, v387);
LABEL_193:
  v428 = v684;
  v429 = v574;
  sub_1BA4C2DD8(v689, v574, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v429, 1, v317) == 1)
  {
    sub_1BA4A2E80(v429, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v426 + 56))(v424, 1, 1, v387);
LABEL_196:
    sub_1BB86D06C();
    sub_1BA4A2E80(v424, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_198;
  }
  sub_1BA4C2DD8(v429 + v317[14], v424, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v429, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v426 + 48))(v424, 1, v387) == 1)
    goto LABEL_196;
  (*(void (**)(char *, uint64_t, uint64_t))(v426 + 32))(v673, v424, v387);
LABEL_198:
  v430 = v576;
  sub_1BA4C2DD8(v409, v576, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v430, 1, v317) == 1)
  {
    sub_1BA4A2E80(v430, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v589 = v413;
  }
  else
  {
    v431 = v430 + v317[15];
    v432 = v430;
    v433 = *(char **)v431;
    v434 = *(unsigned __int8 *)(v431 + 8);
    sub_1BA4A2E80(v432, type metadata accessor for FeedClusteringOptions);
    if (v434)
      v435 = v413;
    else
      v435 = v433;
    v589 = v435;
  }
  v436 = v577;
  sub_1BA4C2DD8(v689, v577, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v436, 1, v317) == 1)
  {
    sub_1BA4A2E80(v436, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v437 = (uint64_t)v658;
  }
  else
  {
    v438 = v436 + v317[15];
    v439 = v436;
    v440 = *(_QWORD *)v438;
    v441 = *(unsigned __int8 *)(v438 + 8);
    sub_1BA4A2E80(v439, type metadata accessor for FeedClusteringOptions);
    v437 = (uint64_t)v658;
    if (!v441)
      v437 = v440;
  }
  v577 = v437;
  v442 = v428;
  v443 = v578;
  sub_1BA4C2DD8(v442, v578, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v443, 1, v317) == 1)
  {
    sub_1BA4A2E80(v443, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v583 = v413;
  }
  else
  {
    v444 = v443 + v317[15];
    v445 = *(char **)v444;
    v446 = *(unsigned __int8 *)(v444 + 8);
    sub_1BA4A2E80(v443, type metadata accessor for FeedClusteringOptions);
    if (v446)
      v447 = v413;
    else
      v447 = v445;
    v583 = v447;
  }
  v448 = v579;
  sub_1BA4C2DD8(v682, v579, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v449 = v331(v448, 1, v317);
  v575 = v413;
  if (v449 == 1)
  {
    sub_1BA4A2E80(v448, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v450 = v659;
  }
  else
  {
    v451 = v448 + v317[15];
    v452 = *(char **)v451;
    v453 = *(unsigned __int8 *)(v451 + 8);
    sub_1BA4A2E80(v448, type metadata accessor for FeedClusteringOptions);
    v450 = v659;
    if (!v453)
      v450 = v452;
  }
  v585 = v450;
  v454 = v593;
  v455 = (uint64_t)v592;
  v456 = (uint64_t)v591;
  v457 = v580;
  sub_1BA4C2DD8(v409, v580, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v457, 1, v317) == 1)
  {
    sub_1BA4A2E80(v457, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v426 + 56))(v423, 1, 1, v387);
LABEL_221:
    sub_1BB86D06C();
    sub_1BA4A2E80(v423, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_223;
  }
  sub_1BA4C2DD8(v457 + v317[16], v423, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v457, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v426 + 48))(v423, 1, v387) == 1)
    goto LABEL_221;
  (*(void (**)(char *, uint64_t, uint64_t))(v426 + 32))(v674, v423, v387);
LABEL_223:
  v458 = v582;
  sub_1BA4C2DD8(v689, v582, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v459 = v331(v458, 1, v317);
  v460 = (uint64_t)v584;
  if (v459 == 1)
  {
    sub_1BA4A2E80(v458, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v426 + 56))(v456, 1, 1, v387);
LABEL_226:
    sub_1BB86D06C();
    sub_1BA4A2E80(v456, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_228;
  }
  sub_1BA4C2DD8(v458 + v317[16], v456, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v458, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v426 + 48))(v456, 1, v387) == 1)
    goto LABEL_226;
  (*(void (**)(char *, uint64_t, uint64_t))(v426 + 32))(v675, v456, v387);
LABEL_228:
  sub_1BA4C2DD8(v684, v460, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v461 = v331(v460, 1, v317);
  v462 = (uint64_t)v587;
  if (v461 == 1)
  {
    sub_1BA4A2E80(v460, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v426 + 56))(v454, 1, 1, v387);
LABEL_231:
    sub_1BB86D06C();
    sub_1BA4A2E80(v454, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    goto LABEL_233;
  }
  sub_1BA4C2DD8(v460 + v317[16], v454, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80(v460, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v426 + 48))(v454, 1, v387) == 1)
    goto LABEL_231;
  (*(void (**)(char *, uint64_t, uint64_t))(v426 + 32))(v676, v454, v387);
LABEL_233:
  v463 = v409;
  v464 = v586;
  sub_1BA4C2DD8(v463, v586, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v465 = v331(v464, 1, v317);
  v466 = (uint64_t)v588;
  if (v465 == 1)
  {
    sub_1BA4A2E80(v464, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v467 = sub_1BB86D024();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v467 - 8) + 56))(v677, 1, 1, v467);
  }
  else
  {
    sub_1BA4C2DD8(v464 + v317[19], v677, (uint64_t (*)(_QWORD))sub_1BAC88048);
    sub_1BA4A2E80(v464, type metadata accessor for FeedClusteringOptions);
  }
  sub_1BA4C2DD8(v689, v462, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v462, 1, v317) == 1)
  {
    sub_1BA4A2E80(v462, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v468 = sub_1BB86D024();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v468 - 8) + 56))(v678, 1, 1, v468);
  }
  else
  {
    sub_1BA4C2DD8(v462 + v317[19], v678, (uint64_t (*)(_QWORD))sub_1BAC88048);
    sub_1BA4A2E80(v462, type metadata accessor for FeedClusteringOptions);
  }
  v469 = *(void (**)(char *, char *, uint64_t))(v426 + 16);
  v469(v625, v667, v387);
  v469(v626, v670, v387);
  v469(v627, v673, v387);
  v469(v629, v675, v387);
  v469(v628, v664, v387);
  v685 = (void (*)(char *, uint64_t, uint64_t))v469;
  v469(v630, v661, v387);
  sub_1BA4C2DD8(v689, v466, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v466, 1, v317) == 1)
  {
    v470 = sub_1BB6AB02C;
    v471 = v466;
LABEL_243:
    v474 = sub_1BA4A2E80(v471, (uint64_t (*)(_QWORD))v470);
    MEMORY[0x1BCCDD9DC](v474);
    goto LABEL_245;
  }
  v472 = v543;
  sub_1BA4C2DD8(v466 + v317[8], v543, (uint64_t (*)(_QWORD))sub_1BA7677C4);
  sub_1BA4A2E80(v466, type metadata accessor for FeedClusteringOptions);
  v473 = type metadata accessor for FeedGroupBundleArticleQuotas();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v473 - 8) + 48))(v472, 1, v473) == 1)
  {
    v470 = sub_1BA7677C4;
    v471 = v472;
    goto LABEL_243;
  }
  v685(v679, v472 + *(int *)(v473 + 24), v387);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v475 = v539;
  v331 = (unsigned int (*)(uint64_t, uint64_t, int *))v690;
  sub_1BB86D0B4();
  sub_1BA4A2E80(v472, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
  (*(void (**)(char *, char *, uint64_t))(v607 + 32))(v631, v475, v608);
LABEL_245:
  v476 = v632;
  sub_1BA4C2DD8(v689, v455, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (v331(v455, 1, v317) == 1)
  {
    sub_1BA4A2E80(v455, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    sub_1BB86D084();
  }
  else
  {
    v477 = (uint64_t *)(v455 + v317[17]);
    sub_1BAF0CA80(*v477, v477[1], v477[2], v477[3], v477[4]);
    v478 = v544;
    sub_1BB86D090();
    sub_1BA4A2E80(v455, type metadata accessor for FeedClusteringOptions);
    (*(void (**)(char *, char *, uint64_t))(v650 + 32))(v476, v478, v652);
  }
  v593 = a14;
  sub_1BA4C2DD8(v678, v680, (uint64_t (*)(_QWORD))sub_1BAC88048);
  v689 = sub_1BB86CFC4();
  sub_1BB86CFD0();
  sub_1BB86CFDC();
  sub_1BB86CFB8();
  sub_1BB86CF94();
  sub_1BB86CFA0();
  sub_1BB86CFE8();
  v479 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA7C0];
  sub_1BB86CFAC();
  v480 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA770];
  sub_1BA50AD30(&qword_1ED3A24B8, 255, v479, MEMORY[0x1E0DDA7B8]);
  sub_1BA50AD30(&qword_1ED3A24B0, 255, v480, MEMORY[0x1E0DDA768]);
  sub_1BB86D03C();
  v481 = v688;
  v482 = (void (*)(char *, char *, uint64_t))v685;
  v685(v633, (uint64_t)v668, v688);
  v482(v634, v671, v481);
  v482(v636, v676, v481);
  v482(v635, v665, v481);
  v482(v637, v662, v481);
  v483 = v684;
  v484 = v594;
  sub_1BA4C2DD8(v684, v594, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v485 = v687;
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v690)(v484, 1, v687) == 1)
  {
    v486 = sub_1BA4A2E80(v484, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v487 = v639;
    v488 = (uint64_t)v596;
LABEL_252:
    MEMORY[0x1BCCDD9DC](v486);
    goto LABEL_254;
  }
  v489 = v545;
  sub_1BA4C2DD8(v484 + v485[8], v545, (uint64_t (*)(_QWORD))sub_1BA7677C4);
  sub_1BA4A2E80(v484, type metadata accessor for FeedClusteringOptions);
  v490 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v491 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v490 - 8) + 48))(v489, 1, v490);
  v487 = v639;
  v488 = (uint64_t)v596;
  if (v491 == 1)
  {
    v486 = sub_1BA4A2E80(v489, (uint64_t (*)(_QWORD))sub_1BA7677C4);
    goto LABEL_252;
  }
  v685(v679, v489 + *(int *)(v490 + 24), v481);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v492 = v540;
  sub_1BB86D0B4();
  sub_1BA4A2E80(v489, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
  (*(void (**)(char *, char *, uint64_t))(v607 + 32))(v638, v492, v608);
LABEL_254:
  v493 = (unsigned int (*)(uint64_t, uint64_t, int *))v690;
  sub_1BA4C2DD8(v483, v488, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v494 = v687;
  if (v493(v488, 1, v687) == 1)
  {
    sub_1BA4A2E80(v488, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    sub_1BB86D084();
  }
  else
  {
    v495 = (uint64_t *)(v488 + v494[17]);
    sub_1BAF0CA80(*v495, v495[1], v495[2], v495[3], v495[4]);
    v496 = v546;
    sub_1BB86D090();
    sub_1BA4A2E80(v488, type metadata accessor for FeedClusteringOptions);
    (*(void (**)(char *, char *, uint64_t))(v650 + 32))(v487, v496, v652);
  }
  v497 = sub_1BB86D024();
  v498 = *(char **)(*(_QWORD *)(v497 - 8) + 56);
  v632 = (char *)v497;
  v631 = v498;
  ((void (*)(uint64_t, uint64_t, uint64_t))v498)(v680, 1, 1);
  sub_1BB86D06C();
  v689 = sub_1BB86CF04();
  v684 = sub_1BB86CF10();
  sub_1BB86CF1C();
  sub_1BB86CEF8();
  sub_1BB86CED4();
  sub_1BB86CEE0();
  sub_1BB86CF28();
  v499 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA6C0];
  sub_1BB86CEEC();
  v500 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA670];
  sub_1BA50AD30(&qword_1ED3A2498, 255, v499, MEMORY[0x1E0DDA6B8]);
  sub_1BA50AD30(&qword_1ED3A2490, 255, v500, MEMORY[0x1E0DDA668]);
  sub_1BB86D03C();
  v501 = v686;
  objc_msgSend(v686, sel_channelScoreWeight);
  v689 = v502;
  (*(void (**)(char *, _QWORD, uint64_t))(v604 + 104))(v656, **((unsigned int **)&unk_1E7332CA8 + v595), v605);
  v684 = sub_1BB6ABB40(v593);
  objc_msgSend(v501, sel_managedTopicMultiplier);
  v658 = v503;
  objc_msgSend(v501, sel_managedWinnerTopicMultiplier);
  v639 = (char *)objc_msgSend(v501, sel_maxNumberOfTotalTopicAndChannelGroups);
  v504 = v682;
  v505 = v597;
  sub_1BA4C2DD8(v682, v597, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v506 = v687;
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v690)(v505, 1, v687) == 1)
  {
    v507 = sub_1BA4A2E80(v505, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v508 = v643;
LABEL_261:
    v512 = (uint64_t)v598;
    MEMORY[0x1BCCDD9DC](v507);
    goto LABEL_263;
  }
  v509 = v547;
  sub_1BA4C2DD8(v505 + v506[8], v547, (uint64_t (*)(_QWORD))sub_1BA7677C4);
  sub_1BA4A2E80(v505, type metadata accessor for FeedClusteringOptions);
  v510 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v511 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v510 - 8) + 48))(v509, 1, v510);
  v508 = v643;
  if (v511 == 1)
  {
    v507 = sub_1BA4A2E80(v509, (uint64_t (*)(_QWORD))sub_1BA7677C4);
    v506 = v687;
    goto LABEL_261;
  }
  v685(v679, v509 + *(int *)(v510 + 24), v688);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v513 = v541;
  sub_1BB86D0B4();
  sub_1BA4A2E80(v509, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
  (*(void (**)(char *, char *, uint64_t))(v607 + 32))(v642, v513, v608);
  v506 = v687;
  v512 = (uint64_t)v598;
LABEL_263:
  sub_1BA4C2DD8(v504, v512, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v690)(v512, 1, v506) == 1)
  {
    sub_1BA4A2E80(v512, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    sub_1BB86D084();
  }
  else
  {
    v514 = (uint64_t *)(v512 + v506[17]);
    sub_1BAF0CA80(*v514, v514[1], v514[2], v514[3], v514[4]);
    v515 = v548;
    sub_1BB86D090();
    sub_1BA4A2E80(v512, type metadata accessor for FeedClusteringOptions);
    (*(void (**)(char *, char *, uint64_t))(v650 + 32))(v508, v515, v652);
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, char *))v631)(v680, 1, 1, v632);
  sub_1BB86D06C();
  sub_1BB86D06C();
  sub_1BB86D06C();
  sub_1BB86D06C();
  sub_1BB86D06C();
  sub_1BB86D06C();
  v682 = sub_1BB86CF64();
  v638 = (char *)sub_1BB86CF70();
  v637 = (char *)sub_1BB86CF7C();
  sub_1BB86CF58();
  sub_1BB86CF34();
  sub_1BB86CF40();
  sub_1BB86CF88();
  v516 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA740];
  sub_1BB86CF4C();
  v517 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA6F0];
  sub_1BA50AD30(&qword_1ED3A24A8, 255, v516, MEMORY[0x1E0DDA738]);
  sub_1BA50AD30(&qword_1ED3A24A0, 255, v517, MEMORY[0x1E0DDA6E8]);
  sub_1BB86D03C();
  v518 = v686;
  objc_msgSend(v686, sel_relatedTopicMultiplier);
  objc_msgSend(v518, sel_relatedTopicRatioFilter);
  LODWORD(v682) = objc_msgSend(v518, sel_reorderHeadlinesUsingEmbeddingScoreBeforeGrouping);
  v659 = (char *)objc_msgSend(v518, sel_thumbnailMinHammingDistance);
  objc_msgSend(v518, sel_topicAutofavoritedMultiplier);
  v519 = v688;
  v520 = (void (*)(char *, char *, uint64_t))v685;
  v685(v644, (uint64_t)v666, v688);
  v520(v645, v669, v519);
  v520(v646, v672, v519);
  v520(v648, v674, v519);
  v520(v647, v663, v519);
  v520(v649, v660, v519);
  v521 = v683;
  v522 = v600;
  sub_1BA4C2DD8(v683, v600, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v523 = v687;
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v690)(v522, 1, v687) == 1)
  {
    v524 = sub_1BA4A2E80(v522, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v525 = v654;
LABEL_270:
    MEMORY[0x1BCCDD9DC](v524);
    v529 = (uint64_t)v606;
    goto LABEL_272;
  }
  v526 = v549;
  sub_1BA4C2DD8(v522 + v523[8], v549, (uint64_t (*)(_QWORD))sub_1BA7677C4);
  sub_1BA4A2E80(v522, type metadata accessor for FeedClusteringOptions);
  v527 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v528 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v527 - 8) + 48))(v526, 1, v527);
  v525 = v654;
  if (v528 == 1)
  {
    v524 = sub_1BA4A2E80(v526, (uint64_t (*)(_QWORD))sub_1BA7677C4);
    v523 = v687;
    goto LABEL_270;
  }
  v685(v679, v526 + *(int *)(v527 + 24), v519);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v530 = v542;
  sub_1BB86D0B4();
  sub_1BA4A2E80(v526, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
  (*(void (**)(char *, char *, uint64_t))(v607 + 32))(v651, v530, v608);
  v529 = (uint64_t)v606;
  v523 = v687;
LABEL_272:
  LODWORD(v685) = a13;
  LODWORD(v679) = a12;
  sub_1BA4C2DD8(v521, v529, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v690)(v529, 1, v523) == 1)
  {
    sub_1BA4A2E80(v529, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    sub_1BB86D084();
  }
  else
  {
    v531 = (uint64_t *)(v529 + v523[17]);
    sub_1BAF0CA80(*v531, v531[1], v531[2], v531[3], v531[4]);
    v532 = v550;
    sub_1BB86D090();
    sub_1BA4A2E80(v529, type metadata accessor for FeedClusteringOptions);
    (*(void (**)(char *, char *, uint64_t))(v650 + 32))(v525, v532, v652);
  }
  sub_1BA4C2DD8(v677, v680, (uint64_t (*)(_QWORD))sub_1BAC88048);
  v690 = sub_1BB86CDCC();
  sub_1BB86CDD8();
  sub_1BB86CDE4();
  sub_1BB86CDC0();
  sub_1BB86CDA8();
  sub_1BB86CDB4();
  sub_1BB86CDF0();
  v533 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA528];
  sub_1BB86CDFC();
  v534 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA538];
  sub_1BA50AD30(&qword_1ED3A0CF0, 255, v533, MEMORY[0x1E0DDA520]);
  sub_1BA50AD30((unint64_t *)&unk_1ED3A2468, 255, v534, MEMORY[0x1E0DDA530]);
  sub_1BB86D03C();
  v535 = v686;
  objc_msgSend(v686, sel_topicFavoritedMultiplier);
  objc_msgSend(v535, sel_topicGroupSizeMultiplier);
  objc_msgSend(v535, sel_topicGroupableMultiplier);
  objc_msgSend(v535, sel_topicScoreWeight);
  objc_msgSend(v535, sel_topicSpecificityMultiplier);
  sub_1BB86CE08();
  sub_1BA4A2E80(v678, (uint64_t (*)(_QWORD))sub_1BAC88048);
  sub_1BA4A2E80(v677, (uint64_t (*)(_QWORD))sub_1BAC88048);
  v536 = *(void (**)(char *, uint64_t))(v681 + 8);
  v537 = v688;
  v536(v676, v688);
  v536(v675, v537);
  v536(v674, v537);
  v536(v673, v537);
  v536(v672, v537);
  v536(v671, v537);
  v536(v670, v537);
  v536(v669, v537);
  v536(v668, v537);
  v536(v667, v537);
  v536(v666, v537);
  v536(v665, v537);
  v536(v664, v537);
  v536(v663, v537);
  v536(v662, v537);
  v536(v661, v537);
  return ((uint64_t (*)(char *, uint64_t))v536)(v660, v537);
}

uint64_t sub_1BB6A39E8@<X0>(char **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  char *v46;
  int v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t *v59;
  uint64_t (*v60)(uint64_t);
  uint64_t (*v61)(uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;

  v76 = a2;
  sub_1BAC88048(0);
  MEMORY[0x1E0C80A78](v3);
  v75 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86D09C();
  MEMORY[0x1E0C80A78](v5);
  v84 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7677C4(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86D0CC();
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  MEMORY[0x1E0C80A78](v10);
  v64 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v83 = (char *)&v63 - v13;
  sub_1BB3A074C();
  MEMORY[0x1E0C80A78](v14);
  v70 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v68 = (char *)&v63 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v63 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v63 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v63 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v63 - v28;
  v30 = sub_1BB86D078();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v63 = (char *)&v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v82 = (char *)&v63 - v34;
  MEMORY[0x1E0C80A78](v35);
  v80 = (char *)&v63 - v36;
  MEMORY[0x1E0C80A78](v37);
  v81 = (char *)&v63 - v38;
  MEMORY[0x1E0C80A78](v39);
  v79 = (char *)&v63 - v40;
  MEMORY[0x1E0C80A78](v41);
  v78 = (char *)&v63 - v42;
  MEMORY[0x1E0C80A78](v43);
  v77 = (char *)&v63 - v44;
  v45 = (int *)type metadata accessor for FeedClusteringOptions(0);
  v46 = (char *)a1 + v45[11];
  v47 = v46[8];
  v73 = v9;
  if (v47 == 1)
    v74 = sub_1BB86CE74();
  else
    v74 = *(_QWORD *)v46;
  sub_1BA4C2DD8((uint64_t)a1 + v45[12], (uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v48(v29, 1, v30) == 1)
  {
    sub_1BB86D06C();
    sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v77, v29, v30);
  }
  v49 = (char *)a1 + v45[9];
  if (v49[8] == 1)
    v72 = sub_1BB86CE8C();
  else
    v72 = *(_QWORD *)v49;
  sub_1BA4C2DD8((uint64_t)a1 + v45[10], (uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  if (v48(v26, 1, v30) == 1)
  {
    sub_1BB86D06C();
    sub_1BA4A2E80((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v78, v26, v30);
  }
  v50 = (char *)a1 + v45[13];
  v51 = (uint64_t)v68;
  if (v50[8] == 1)
    v71 = sub_1BB86CEA4();
  else
    v71 = *(_QWORD *)v50;
  sub_1BA4C2DD8((uint64_t)a1 + v45[14], (uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  if (v48(v23, 1, v30) == 1)
  {
    sub_1BB86D06C();
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v79, v23, v30);
  }
  v52 = (char *)a1 + v45[15];
  v53 = (uint64_t)v70;
  if (v52[8] == 1)
    v69 = sub_1BB86CE5C();
  else
    v69 = *(_QWORD *)v52;
  sub_1BA4C2DD8((uint64_t)a1 + v45[16], (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  if (v48(v20, 1, v30) == 1)
  {
    sub_1BB86D06C();
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v81, v20, v30);
  }
  v54 = (char *)a1 + v45[6];
  if (v54[8] == 1)
    v67 = sub_1BB86CE20();
  else
    v67 = *(_QWORD *)v54;
  sub_1BA4C2DD8((uint64_t)a1 + v45[7], v51, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  if (v48((char *)v51, 1, v30) == 1)
  {
    sub_1BB86D06C();
    sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v80, v51, v30);
  }
  if (*((_BYTE *)a1 + 8) == 1)
    v68 = (char *)sub_1BB86CE38();
  else
    v68 = *a1;
  sub_1BA4C2DD8((uint64_t)a1 + v45[5], v53, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  if (v48((char *)v53, 1, v30) == 1)
  {
    sub_1BB86D06C();
    sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v82, v53, v30);
  }
  v55 = (uint64_t)v73;
  sub_1BA4C2DD8((uint64_t)a1 + v45[8], (uint64_t)v73, (uint64_t (*)(_QWORD))sub_1BA7677C4);
  v56 = type metadata accessor for FeedGroupBundleArticleQuotas();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56) == 1)
  {
    v57 = sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))sub_1BA7677C4);
    MEMORY[0x1BCCDD7D8](v57);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v63, v55 + *(int *)(v56 + 24), v30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = v64;
    sub_1BB86D0B4();
    sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v83, v58, v66);
  }
  v59 = (uint64_t *)((char *)a1 + v45[17]);
  sub_1BAF0CA80(*v59, v59[1], v59[2], v59[3], v59[4]);
  sub_1BB86D090();
  sub_1BA4C2DD8((uint64_t)a1 + v45[19], v75, (uint64_t (*)(_QWORD))sub_1BAC88048);
  v73 = (char *)sub_1BB86CE80();
  v70 = (char *)sub_1BB86CE98();
  sub_1BB86CEB0();
  sub_1BB86CE68();
  sub_1BB86CE2C();
  sub_1BB86CE44();
  sub_1BB86CEC8();
  v60 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA638];
  sub_1BB86CE50();
  v61 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA598];
  sub_1BA50AD30((unint64_t *)&unk_1ED3A2480, 255, v60, MEMORY[0x1E0DDA630]);
  sub_1BA50AD30(&qword_1ED3A2478, 255, v61, MEMORY[0x1E0DDA590]);
  return sub_1BB86D03C();
}

uint64_t sub_1BB6A431C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD **v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, _QWORD *, double);
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  char *v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  char v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  _QWORD *v66;
  _QWORD *v67;
  id v68;
  uint64_t v69;
  void (*v70)(char *, _QWORD *);
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t result;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  void *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;

  v104 = *v4;
  v9 = (_QWORD *)sub_1BB86D0D8();
  v10 = *(v9 - 1);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v90 - v15;
  v17 = a2[1];
  v94 = (_QWORD *)*a2;
  v18 = *(void (**)(char *, uint64_t, _QWORD *, double))(v10 + 16);
  v18((char *)&v90 - v15, a1, v9, v14);
  v95 = v12;
  ((void (*)(char *, uint64_t, _QWORD *))v18)(v12, a1, v9);
  v100 = a3;
  swift_bridgeObjectRetain();
  if (!sub_1BB6A546C())
  {
    v46 = *(_QWORD **)(v10 + 8);
    ((void (*)(char *, _QWORD *))v46)(v16, v9);
    if (qword_1ED39F8D8 != -1)
      swift_once();
    v47 = (id)qword_1ED476490;
    v48 = sub_1BB87330C();
    v49 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1BB86EF44("Found no topic splitting configuration specified by smarter placement, proceeding with legacy splitting", 103, 2, &dword_1BA493000, v47, v48, MEMORY[0x1E0DEE9D8]);

    v50 = objc_msgSend(objc_msgSend(*(id *)(v101 + 16), sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
    swift_unknownObjectRelease();
    if (qword_1ED3A3350 != -1)
      swift_once();
    if ((objc_msgSend(v50, sel_respondsToSelector_, sel_splitTopicGroups) & 1) != 0)
      objc_msgSend(v50, sel_splitTopicGroups);
    sub_1BA50AD30(&qword_1ED3A4D78, v51, (uint64_t (*)(uint64_t))type metadata accessor for FeedClusteringService, (uint64_t)&protocol conformance descriptor for FeedClusteringService);
    if ((sub_1BB86D228() & 1) == 0)
    {
      v68 = (id)qword_1ED476490;
      v69 = sub_1BB87330C();
      sub_1BB86EF44("Topic group splitting disabled, returning ordered clusters unmodified", 69, 2, &dword_1BA493000, v68, v69, MEMORY[0x1E0DEE9D8]);

      swift_unknownObjectRelease();
      v49 = v94;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      ((void (*)(char *, _QWORD *))v46)(v95, v9);
      goto LABEL_42;
    }
    v99 = v50;
    v102 = v46;
    v92 = v17;
    v93 = v9;
    v114 = v49;
    v53 = v94;
    v103 = v94[2];
    if (!v103)
    {
LABEL_41:
      v78 = (void *)qword_1ED476490;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_1BB87A390;
      v111 = v53[2];
      v80 = v78;
      v81 = sub_1BB87420C();
      v83 = v82;
      v84 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v79 + 56) = MEMORY[0x1E0DEA968];
      v85 = sub_1BA6A2D8C();
      *(_QWORD *)(v79 + 64) = v85;
      *(_QWORD *)(v79 + 32) = v81;
      *(_QWORD *)(v79 + 40) = v83;
      v111 = v49[2];
      v86 = sub_1BB87420C();
      *(_QWORD *)(v79 + 96) = v84;
      *(_QWORD *)(v79 + 104) = v85;
      *(_QWORD *)(v79 + 72) = v86;
      *(_QWORD *)(v79 + 80) = v87;
      v88 = sub_1BB87330C();
      sub_1BB86EF44("Topic group splitting enabled, split %{public}@ groups into %{public}@ groups", 77, 2, &dword_1BA493000, v80, v88, v79);

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      v17 = v92;
      swift_bridgeObjectRetain();
      ((void (*)(char *, _QWORD *))v102)(v95, v93);
      goto LABEL_42;
    }
    v91 = a4;
    swift_bridgeObjectRetain_n();
    v54 = 0;
    a4 = v53 + 6;
    while (1)
    {
      v9 = (_QWORD *)*(a4 - 2);
      v55 = (_QWORD *)*(a4 - 1);
      v56 = *a4;
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v57 = sub_1BB6A4D58(v9, v100, v54);
      v104 = v55;
      v105 = v9;
      v106 = v55;
      v107 = v56;
      sub_1BB6A583C(&v111, &v108, (uint64_t)&v105, v57);
      v17 = v111;
      v58 = v112;
      v59 = v113;
      v10 = v108;
      v60 = v109;
      v61 = v110;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB6AD87C(v10);
      sub_1BB6AD8A8(v10);
      if (v114[2] < v54)
        break;
      sub_1BAA68160(v54, v54, v17, v58, v59);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB6AD87C(v10);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if (v10)
      {
        v62 = v114;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v62 = sub_1BB390720(0, v62[2] + 1, 1, v62);
        v64 = v62[2];
        v63 = v62[3];
        v65 = (char *)(v64 + 1);
        if (v64 >= v63 >> 1)
        {
          v98 = (char *)(v64 + 1);
          v67 = sub_1BB390720((_QWORD *)(v63 > 1), v64 + 1, 1, v62);
          v65 = v98;
          v62 = v67;
        }
        v62[2] = v65;
        v66 = &v62[3 * v64];
        v66[4] = v10;
        v66[5] = v60;
        v66[6] = v61;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_1BB6AD8A8(v10);
        sub_1BB6AD8A8(v10);
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        v114 = v62;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_1BB6AD8A8(0);
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
      }
      a4 += 3;
      if (v103 == ++v54)
      {
        v53 = v94;
        swift_bridgeObjectRelease_n();
        v49 = v114;
        a4 = v91;
        goto LABEL_41;
      }
    }
    __break(1u);
    goto LABEL_44;
  }
  v98 = v16;
  if (qword_1ED39F8D8 != -1)
LABEL_44:
    swift_once();
  v19 = (id)qword_1ED476490;
  v20 = sub_1BB87330C();
  v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BB86EF44("Found topic splitting configuration specified by smarter placement", 66, 2, &dword_1BA493000, v19, v20, MEMORY[0x1E0DEE9D8]);

  v97 = v94[2];
  if (v97)
  {
    v92 = v17;
    v93 = v9;
    v91 = a4;
    v22 = 0;
    v23 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
    v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v102 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v96 = v10;
    do
    {
      v27 = (_QWORD *)*(v23 - 1);
      v28 = *v23;
      v105 = (void *)*(v23 - 2);
      v26 = v105;
      v106 = v27;
      v107 = v28;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      v29 = sub_1BB6A4D58(v26, v100, v22);
      sub_1BB6A583C(&v111, &v108, (uint64_t)&v105, v29);
      v30 = v111;
      v31 = v112;
      v32 = v113;
      v33 = v108;
      v103 = v109;
      v34 = v110;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v99 = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v24 = sub_1BB390720(0, v24[2] + 1, 1, v24);
      v37 = v24[2];
      v36 = v24[3];
      v104 = v24;
      if (v37 >= v36 >> 1)
        v104 = sub_1BB390720((_QWORD *)(v36 > 1), v37 + 1, 1, v104);
      v38 = v104;
      v104[2] = v37 + 1;
      v24 = v38;
      v39 = &v38[3 * v37];
      v39[4] = v30;
      v39[5] = v31;
      v39[6] = v32;
      if (v33)
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        v40 = swift_isUniquelyReferenced_nonNull_native();
        v10 = v96;
        if ((v40 & 1) != 0)
          v41 = v102;
        else
          v41 = sub_1BB390720(0, v102[2] + 1, 1, v102);
        v43 = v41[2];
        v42 = v41[3];
        if (v43 >= v42 >> 1)
          v41 = sub_1BB390720((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
        v41[2] = v43 + 1;
        v102 = v41;
        v44 = &v41[3 * v43];
        v45 = v103;
        v44[4] = v33;
        v44[5] = v45;
        v44[6] = v99;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_1BB6AD8A8(v33);
        v25 = v98;
        v24 = v104;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        v10 = v96;
        v25 = v98;
      }
      ++v22;
      v23 += 3;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    while (v97 != v22);
    swift_bridgeObjectRelease();
    a4 = v91;
    v9 = v93;
    v17 = v92;
    v21 = v102;
    v52 = v24;
  }
  else
  {
    v52 = v21;
    v25 = v98;
  }
  v70 = *(void (**)(char *, _QWORD *))(v10 + 8);
  v70(v25, v9);
  v71 = (void *)qword_1ED476490;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = xmmword_1BB87A390;
  v73 = v52[2];
  v74 = MEMORY[0x1E0DEB418];
  v75 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v72 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v72 + 64) = v75;
  *(_QWORD *)(v72 + 32) = v73;
  v76 = v21[2];
  *(_QWORD *)(v72 + 96) = v74;
  *(_QWORD *)(v72 + 104) = v75;
  *(_QWORD *)(v72 + 72) = v76;
  v77 = v71;
  sub_1BB87330C();
  sub_1BB86EF44("Finished splitting using splitting configuration with %lu front groups and %lu back groups", v90, v91);

  swift_bridgeObjectRelease();
  v111 = (uint64_t)v52;
  sub_1BB387934((uint64_t)v21);
  v49 = (_QWORD *)v111;
  swift_bridgeObjectRetain();
  v70(v95, v9);
LABEL_42:
  result = swift_bridgeObjectRelease();
  *a4 = v49;
  a4[1] = v17;
  return result;
}

uint64_t sub_1BB6A4D58(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t *v72;
  _QWORD v74[3];
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v94 = a3;
  v87 = a2;
  sub_1BB6AD8D4();
  v84 = v5;
  v82 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v76 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v81 = (char *)v74 - v8;
  sub_1BB6ADA48();
  v83 = v9;
  v80 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v75 = (char *)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v79 = (char *)v74 - v12;
  sub_1BB6ADBBC();
  v90 = *(_QWORD *)(v13 - 8);
  v91 = v13;
  MEMORY[0x1E0C80A78](v13);
  v86 = (char *)v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v89 = (char *)v74 - v16;
  sub_1BAC88048(0);
  MEMORY[0x1E0C80A78](v17);
  v78 = (char *)v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v77 = (char *)v74 - v20;
  MEMORY[0x1E0C80A78](v21);
  v88 = (char *)v74 - v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v74 - v24;
  v26 = sub_1BB86D024();
  v27 = *(_QWORD *)(v26 - 8);
  v95 = v26;
  v96 = v27;
  MEMORY[0x1E0C80A78](v26);
  v74[2] = (char *)v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v74[1] = (char *)v74 - v30;
  MEMORY[0x1E0C80A78](v31);
  v85 = (char *)v74 - v32;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)v74 - v34;
  sub_1BB6ADD30(0);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v74 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB6ADD4C();
  v40 = v39;
  v41 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v43 = (char *)v74 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = v3;
  v44 = sub_1BB86D000();
  v93 = a1;
  v45 = objc_msgSend(a1, sel_identifier);
  v46 = sub_1BB8729A0();
  v48 = v47;

  if (*(_QWORD *)(v44 + 16) && (v49 = sub_1BA6E35A8(v46, v48), (v50 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v38, *(_QWORD *)(v44 + 56) + *(_QWORD *)(v41 + 72) * v49, v40);
    v51 = 0;
  }
  else
  {
    v51 = 1;
  }
  v52 = v96;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v38, v51, 1, v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v38, 1, v40) == 1)
  {
    sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))sub_1BB6ADD30);
    v53 = v93;
    v54 = objc_msgSend(v93, sel_asChannel);
    swift_unknownObjectRelease();
    if (v54)
    {
      v55 = v89;
      sub_1BB86D00C();
      v56 = (uint64_t)v88;
      v57 = v91;
      sub_1BB86D030();
      v58 = *(void (**)(char *, uint64_t))(v90 + 8);
      v58(v55, v57);
      v59 = v95;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v56, 1, v95) == 1)
      {
        sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))sub_1BAC88048);
        v60 = v86;
        sub_1BB86D00C();
LABEL_19:
        v62 = sub_1BB86D048();
        v58(v60, v57);
        return v62;
      }
      v69 = v85;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v85, v56, v59);
    }
    else
    {
      v63 = objc_msgSend(v53, sel_identifier);
      v64 = sub_1BB8729A0();
      v66 = v65;

      LOBYTE(v63) = sub_1BA761FE4(v64, v66, v87);
      swift_bridgeObjectRelease();
      if ((v63 & 1) != 0)
      {
        v67 = v79;
        sub_1BB86CFF4();
        v68 = (uint64_t)v77;
        v57 = v83;
        sub_1BB86D030();
        v58 = *(void (**)(char *, uint64_t))(v80 + 8);
        v58(v67, v57);
        v59 = v95;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v68, 1, v95) == 1)
        {
          sub_1BA4A2E80(v68, (uint64_t (*)(_QWORD))sub_1BAC88048);
          v60 = v75;
          sub_1BB86CFF4();
          goto LABEL_19;
        }
        v71 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 32);
        v72 = &v97;
      }
      else
      {
        v70 = v81;
        sub_1BB86CE14();
        v68 = (uint64_t)v78;
        v57 = v84;
        sub_1BB86D030();
        v58 = *(void (**)(char *, uint64_t))(v82 + 8);
        v58(v70, v57);
        v59 = v95;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v68, 1, v95) == 1)
        {
          sub_1BA4A2E80(v68, (uint64_t (*)(_QWORD))sub_1BAC88048);
          v60 = v76;
          sub_1BB86CE14();
          goto LABEL_19;
        }
        v71 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 32);
        v72 = &v98;
      }
      v69 = (char *)*(v72 - 32);
      v71(v69, v68, v59);
    }
    v62 = sub_1BB86D018();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v69, v59);
    return v62;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v43, v38, v40);
  sub_1BB86D030();
  v61 = v95;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v25, 1, v95) == 1)
  {
    sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAC88048);
    v62 = sub_1BB86D048();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v35, v25, v61);
    v62 = sub_1BB86D018();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v61);
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  return v62;
}

BOOL sub_1BB6A546C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  v0 = sub_1BB86D024();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v43 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v35 - v4;
  sub_1BAC88048(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v42 = (uint64_t)&v35 - v10;
  sub_1BB6ADA48();
  v12 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  v39 = v12;
  MEMORY[0x1E0C80A78](v11);
  v37 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB6AD8D4();
  v15 = v14;
  v41 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3200, (uint64_t (*)(uint64_t))sub_1BAC88048, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = *(_QWORD *)(v6 + 72);
  v19 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BB87A390;
  v36 = v19;
  sub_1BB86CE14();
  sub_1BB86D030();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v15);
  v41 = v18;
  v21 = v37;
  sub_1BB86CFF4();
  v22 = v38;
  sub_1BB86D030();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v22);
  v23 = sub_1BB86D000();
  v24 = sub_1BB69D954(v23);
  swift_bridgeObjectRelease();
  v44 = v20;
  sub_1BB387920(v24);
  v25 = *(_QWORD *)(v44 + 16);
  if (v25)
  {
    v26 = v44 + v36;
    v39 = v44;
    swift_bridgeObjectRetain();
    v27 = MEMORY[0x1E0DEE9D8];
    do
    {
      v28 = v42;
      sub_1BA4C2DD8(v26, v42, (uint64_t (*)(_QWORD))sub_1BAC88048);
      sub_1BA5193C4(v28, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAC88048);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v8, 1, v0) == 1)
      {
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAC88048);
      }
      else
      {
        v29 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
        v30 = v40;
        v29(v40, v8, v0);
        v29(v43, v30, v0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27 = sub_1BB393ECC(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
        v32 = *(_QWORD *)(v27 + 16);
        v31 = *(_QWORD *)(v27 + 24);
        if (v32 >= v31 >> 1)
          v27 = sub_1BB393ECC(v31 > 1, v32 + 1, 1, v27);
        *(_QWORD *)(v27 + 16) = v32 + 1;
        v29((char *)(v27+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v32), v43, v0);
      }
      v26 += v41;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v27 = MEMORY[0x1E0DEE9D8];
  }
  v33 = *(_QWORD *)(v27 + 16);
  swift_bridgeObjectRelease();
  return v33 != 0;
}

void sub_1BB6A583C(_QWORD *a1, _QWORD *a2, uint64_t a3, unint64_t a4)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjCClassFromMetadata;
  id v28;
  void *v29;
  id v30;

  v6 = *(void **)a3;
  v7 = *(_QWORD *)(a3 + 8);
  v8 = *(_QWORD *)(a3 + 16);
  if (qword_1ED39F8D8 != -1)
    swift_once();
  v9 = (void *)qword_1ED476490;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87FC80;
  v11 = v9;
  v12 = (uint64_t)objc_msgSend(v6, sel_name);
  v13 = sub_1BB8729A0();
  v15 = v14;

  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v10 + 32) = v13;
  *(_QWORD *)(v10 + 40) = v15;
  v16 = *(_QWORD *)(v7 + 16);
  v17 = MEMORY[0x1E0DEB418];
  v18 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v10 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v10 + 104) = v18;
  *(_QWORD *)(v10 + 72) = v16;
  *(_QWORD *)(v10 + 136) = v17;
  *(_QWORD *)(v10 + 144) = v18;
  *(_QWORD *)(v10 + 112) = a4;
  v19 = sub_1BB87330C();
  sub_1BB86EF44("Splitting cluster %{public}@ with %lu headlines using minClusterSize=%lu", 72, 2, &dword_1BA493000, v11, v19, v10);

  swift_bridgeObjectRelease();
  if ((uint64_t)(a4 + 0x4000000000000000) < 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = 2 * a4;
  if (v16 < (uint64_t)(2 * a4))
  {
    *a1 = v6;
    a1[1] = v7;
    a1[2] = v8;
    a2[1] = 0;
    a2[2] = 0;
    *a2 = 0;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    return;
  }
  if ((a4 & 0x8000000000000000) != 0)
    goto LABEL_21;
  if (*(_QWORD *)(v7 + 16) < a4)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRelease();
    v22 = sub_1BA85D690(v7, v10, 0, v12 | 1);
    goto LABEL_13;
  }
  v10 = v7 + 32;
  sub_1BB874434();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v20 = swift_dynamicCastClass();
  if (!v20)
  {
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x1E0DEE9D8];
  }
  v21 = *(_QWORD *)(v20 + 16);
  swift_release();
  if (v21 != a4)
    goto LABEL_23;
  v22 = swift_dynamicCastClass();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
  }
LABEL_13:
  swift_bridgeObjectRelease();
  *a1 = v6;
  a1[1] = v22;
  a1[2] = v8;
  v23 = *(_QWORD *)(v7 + 16);
  if (v23 < a4)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v24 = swift_dynamicCastClass();
    if (!v24)
    {
      swift_bridgeObjectRelease();
      v24 = MEMORY[0x1E0DEE9D8];
    }
    v25 = *(_QWORD *)(v24 + 16);
    swift_release();
    if (v25 == v23 - a4)
    {
      v26 = swift_dynamicCastClass();
      if (!v26)
      {
        swift_bridgeObjectRelease();
        v26 = MEMORY[0x1E0DEE9D8];
      }
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  v26 = sub_1BA85D690(v7, v10, a4, (2 * v23) | 1);
LABEL_19:
  swift_bridgeObjectRelease();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v28 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  swift_bridgeObjectRetain();
  v29 = (void *)sub_1BB872970();
  v30 = objc_msgSend(v6, sel_setTitleDisplayPrefixOverride_, v29, 0x80000001BB996B00);
  swift_bridgeObjectRelease_n();

  *a2 = v30;
  a2[1] = v26;
  a2[2] = v8;
}

id sub_1BB6A5C50(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, __int16 *a5, double a6, double a7)
{
  uint64_t v7;
  __int16 v14;
  id v15;
  id result;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;

  v14 = *a5;
  v15 = objc_msgSend(*(id *)(v7 + 16), sel_subscriptionList);
  result = objc_msgSend(v15, sel_ignoredTagIDs);
  if (result)
  {
    v17 = result;
    v18 = sub_1BB873030();

    swift_bridgeObjectRetain();
    v19 = sub_1BA6E4124(v18, a4);
    result = objc_msgSend(v15, sel_mutedTagIDs);
    if (result)
    {
      v20 = result;
      v21 = sub_1BB873030();

      v22 = sub_1BA6E4124(v21, v19);
      MEMORY[0x1E0C80A78](v22);
      sub_1BA5746F8();
      sub_1BB86EC14();
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = a2;
      *(_QWORD *)(v23 + 24) = v15;
      *(_QWORD *)(v23 + 32) = v7;
      *(_QWORD *)(v23 + 40) = a1;
      *(_QWORD *)(v23 + 48) = a3;
      *(_QWORD *)(v23 + 56) = v22;
      *(_WORD *)(v23 + 64) = v14;
      *(double *)(v23 + 72) = a6;
      *(double *)(v23 + 80) = a7;
      swift_unknownObjectRetain();
      v24 = a2;
      v25 = v15;
      swift_retain();
      swift_bridgeObjectRetain();
      v26 = (void *)sub_1BB86E854();
      sub_1BB6AE184();
      v27 = sub_1BB86E968();

      swift_release();
      swift_release();

      return (id)v27;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB6A5E5C(char a1, uint64_t a2, uint64_t a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  if (a1 == 2)
  {
    if (qword_1ED39F8D8 != -1)
      swift_once();
    v3 = (id)qword_1ED476490;
    v4 = sub_1BB87330C();
    sub_1BB86EF44("Channel groups disabled, not surfacing channel tags for grouping", 64, 2, &dword_1BA493000, v3, v4, MEMORY[0x1E0DEE9D8]);

    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B08B8, (uint64_t (*)(uint64_t))sub_1BA5746F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    v7 = sub_1BB69DED0(a2);
    swift_bridgeObjectRetain();
    sub_1BB6AE244((uint64_t)v7, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED39F8D8 != -1)
      swift_once();
    v8 = (void *)qword_1ED476490;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
    v10 = v8;
    v11 = sub_1BB87420C();
    v13 = v12;
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v13;
    v14 = sub_1BB87330C();
    sub_1BB86EF44("Requesting %{public}@ publisher tags", 36, 2, &dword_1BA493000, v10, v14, v9);

    v15 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v15);
    sub_1BA4C3E90(0, (unint64_t *)&qword_1ED3B9630, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB86EC14();
    v16 = (void *)sub_1BB86E854();
    sub_1BA5746F8();
    sub_1BB6AD154();
    v5 = sub_1BB86EA88();
    swift_bridgeObjectRelease();
    swift_release();

  }
  return v5;
}

uint64_t sub_1BB6A6158(uint64_t *a1, id a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, int a8, double a9)
{
  uint64_t v9;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char **v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char **v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t isUniquelyReferenced_nonNull_native;
  id v39;
  void *v40;
  id v41;
  _QWORD *v42;
  void *v43;
  id v44;
  unint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  char v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  _BOOL8 v84;
  uint64_t v85;
  char v86;
  unint64_t v87;
  char v88;
  uint64_t *v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  double v96;
  uint64_t result;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  id v103;
  uint64_t v104;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123[6];
  double *v124;

  v14 = *a1;
  v15 = objc_msgSend(a2, sel_subscribedTags);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  v16 = sub_1BB872DB4();

  v124 = (double *)MEMORY[0x1E0DEE9E8];
  v104 = a7;
  v99 = a6;
  v100 = v14;
  v108 = v9;
  LODWORD(v107) = a8;
  if (v16 >> 62)
    goto LABEL_15;
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v17)
  {
    while (1)
    {
      v18 = v16 & 0xC000000000000001;
      v19 = 4;
      v20 = &selRef_isSports;
      v21 = 0;
      if ((v16 & 0xC000000000000001) == 0)
        break;
      while (1)
      {
        v22 = (void *)MEMORY[0x1BCCE4630](v21, v16);
        v23 = v21 + 1;
        if (__OFADD__(v21, 1))
          break;
LABEL_8:
        if (objc_msgSend(v22, v20[3]) == (id)2)
        {
          v24 = objc_msgSend(v22, sel_identifier);
          v112 = v19;
          v25 = v18;
          v26 = v17;
          v27 = v16;
          v28 = v20;
          v29 = sub_1BB8729A0();
          v31 = v30;

          v32 = v29;
          v20 = v28;
          v16 = v27;
          v17 = v26;
          v18 = v25;
          v19 = v112;
          sub_1BA6EE5AC((uint64_t *)&v118, v32, v31);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          if (v23 == v17)
            goto LABEL_16;
        }
        else
        {
          swift_unknownObjectRelease();
          if (v23 == v17)
            goto LABEL_16;
        }
        v21 = ++v19 - 4;
        if (!v18)
          goto LABEL_7;
      }
LABEL_14:
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      v17 = sub_1BB873F30();
      if (!v17)
        goto LABEL_16;
    }
LABEL_7:
    v22 = *(void **)(v16 + 8 * v19);
    swift_unknownObjectRetain();
    v23 = v21 + 1;
    if (__OFADD__(v21, 1))
      goto LABEL_14;
    goto LABEL_8;
  }
LABEL_16:
  swift_bridgeObjectRelease_n();
  v33 = v124;
  v34 = objc_msgSend((id)objc_opt_self(), sel_sharedAccount);
  v35 = objc_msgSend(v34, sel_primaryLanguageCode);

  v36 = sub_1BB8729A0();
  isUniquelyReferenced_nonNull_native = v37;

  v39 = objc_msgSend(a3, sel_subscribedTagIDs);
  if (v39)
  {
    v40 = v39;
    v111 = sub_1BB873030();

  }
  else
  {
    v111 = MEMORY[0x1E0DEE9E8];
  }
  v41 = objc_msgSend(a3, sel_autoFavoriteTagIDs);
  v42 = (_QWORD *)a4;
  v101 = v36;
  if (v41)
  {
    v43 = v41;
    v109 = sub_1BB873030();

  }
  else
  {
    v109 = MEMORY[0x1E0DEE9E8];
  }
  v44 = objc_msgSend(a3, sel_groupableTagIDs);
  v45 = MEMORY[0x1E0DEE9E8];
  if (v44)
  {
    v46 = v44;
    v113 = sub_1BB873030();

  }
  else
  {
    v113 = MEMORY[0x1E0DEE9E8];
  }
  v47 = objc_msgSend(objc_msgSend(*(id *)(a4 + 16), sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
  swift_unknownObjectRelease();
  if ((objc_msgSend(v47, sel_respondsToSelector_, sel_isImprovedManagedTopicGroupingEnabled) & 1) != 0)
    LOBYTE(v103) = objc_msgSend(v47, sel_isImprovedManagedTopicGroupingEnabled);
  else
    LOBYTE(v103) = 0;
  swift_unknownObjectRelease();
  if (qword_1ED3A3338 != -1)
    goto LABEL_55;
LABEL_29:
  type metadata accessor for FeedClusteringService();
  sub_1BA50AD30(&qword_1ED3A4D78, v48, (uint64_t (*)(uint64_t))type metadata accessor for FeedClusteringService, (uint64_t)&protocol conformance descriptor for FeedClusteringService);
  sub_1BB86D210();
  v49 = (char)v118;
  v123[0] = MEMORY[0x1E0DEE9D8];
  v123[1] = v45;
  v123[2] = v45;
  v123[3] = MEMORY[0x1E0DEE9E0];
  v123[4] = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1BB6AC1D0(v123, a5, (uint64_t)v33, v99, v101, isUniquelyReferenced_nonNull_native, v104, v107, &v118, v100, v111, v109, v113, (char)v103, v49, (uint64_t)v42);
  v98 = v108;
  a5 = v119;
  v107 = v120;
  v108 = (uint64_t)v118;
  v101 = v122;
  v103 = v121;
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_1ED39F8D8 != -1)
    swift_once();
  v50 = (void *)qword_1ED476490;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_1BB87FC80;
  v118 = *(_QWORD **)(v108 + 16);
  v52 = v50;
  v53 = sub_1BB87420C();
  v55 = v54;
  v56 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v51 + 56) = MEMORY[0x1E0DEA968];
  v57 = sub_1BA6A2D8C();
  *(_QWORD *)(v51 + 64) = v57;
  *(_QWORD *)(v51 + 32) = v53;
  *(_QWORD *)(v51 + 40) = v55;
  v118 = *(_QWORD **)(a5 + 16);
  v58 = sub_1BB87420C();
  *(_QWORD *)(v51 + 96) = v56;
  *(_QWORD *)(v51 + 104) = v57;
  *(_QWORD *)(v51 + 72) = v58;
  *(_QWORD *)(v51 + 80) = v59;
  v118 = *(_QWORD **)(v107 + 16);
  v60 = sub_1BB87420C();
  *(_QWORD *)(v51 + 136) = v56;
  *(_QWORD *)(v51 + 144) = v57;
  *(_QWORD *)(v51 + 112) = v60;
  *(_QWORD *)(v51 + 120) = v61;
  v62 = sub_1BB87330C();
  sub_1BB86EF44("Found %{public}@ groupable headlines with %{public}@ topicTags %{public}@ channelTags", 85, 2, &dword_1BA493000, v52, v62, v51);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v63 = sub_1BB6AC38C(MEMORY[0x1E0DEE9E8], a5, v111, v109, v113, (uint64_t)v103, v101, a9);
  v104 = v98;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v64 = swift_bridgeObjectRetain();
  v100 = sub_1BA6E4124(v64, v63);
  v65 = a4;
  v66 = objc_msgSend(*(id *)(a4 + 24), sel_allowlist);
  v67 = v109;
  if (v66)
  {
    v68 = v66;
    v69 = objc_msgSend(v66, sel_optionalTags);

    if (!v69)
    {
      __break(1u);
LABEL_57:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v70 = v111;
    v71 = a5;
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
    v72 = sub_1BB87276C();

    v73 = sub_1BB69DCC8(v72);
    swift_bridgeObjectRelease();
  }
  else
  {
    v70 = v111;
    v71 = a5;
    v73 = MEMORY[0x1E0DEE9D8];
  }
  v99 = (void *)sub_1BA6E43EC(v73);
  swift_bridgeObjectRelease();
  v74 = *(_QWORD *)(a4 + 64);
  v75 = *(_QWORD *)(a4 + 72);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a4 + 40), v74);
  v76 = swift_bridgeObjectRetain();
  v77 = sub_1BA67F4CC(v76);
  swift_bridgeObjectRelease();
  v78 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v75 + 32))(v77, v74, v75);
  swift_release();
  v79 = *(_QWORD *)(v78 + 16);
  if (v79)
  {
    swift_bridgeObjectRetain();
    v33 = (double *)(v78 + 48);
    v42 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v81 = *((_QWORD *)v33 - 2);
      v80 = *((_QWORD *)v33 - 1);
      a9 = *v33;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v118 = v42;
      v45 = sub_1BA6E35A8(v81, v80);
      v83 = v42[2];
      v84 = (v82 & 1) == 0;
      v85 = v83 + v84;
      if (__OFADD__(v83, v84))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        swift_once();
        goto LABEL_29;
      }
      v86 = v82;
      if (v42[3] >= v85)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v42 = v118;
          if ((v82 & 1) != 0)
            goto LABEL_37;
        }
        else
        {
          sub_1BB4C3C88();
          v42 = v118;
          if ((v86 & 1) != 0)
            goto LABEL_37;
        }
      }
      else
      {
        sub_1BB4B1010(v85, isUniquelyReferenced_nonNull_native);
        v87 = sub_1BA6E35A8(v81, v80);
        if ((v86 & 1) != (v88 & 1))
          goto LABEL_57;
        v45 = v87;
        v42 = v118;
        if ((v86 & 1) != 0)
        {
LABEL_37:
          *(double *)(v42[7] + 8 * v45) = a9;
          goto LABEL_38;
        }
      }
      v42[(v45 >> 6) + 8] |= 1 << v45;
      v89 = (uint64_t *)(v42[6] + 16 * v45);
      *v89 = v81;
      v89[1] = v80;
      *(double *)(v42[7] + 8 * v45) = a9;
      v90 = v42[2];
      v91 = __OFADD__(v90, 1);
      v92 = v90 + 1;
      if (v91)
        goto LABEL_54;
      v42[2] = v92;
      swift_bridgeObjectRetain();
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 += 3;
      if (!--v79)
      {
        swift_bridgeObjectRelease();
        v93 = a5;
        v65 = a4;
        v67 = v109;
        v94 = v111;
        goto LABEL_52;
      }
    }
  }
  v42 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v93 = v71;
  v94 = v70;
LABEL_52:
  swift_bridgeObjectRelease();
  sub_1BB6A86B0(v65);
  v96 = v95;
  *(_QWORD *)&v114 = v108;
  *((_QWORD *)&v114 + 1) = v93;
  v115 = v107;
  v116 = v103;
  v117 = v101;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v110 = sub_1BB6ACBD8(v100, &v114, (uint64_t)v42, (uint64_t)v99, v94, v67, v113, v96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v118 = (_QWORD *)v108;
  v119 = v110;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3AA0, (uint64_t (*)(uint64_t))sub_1BB6AE184, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB6A6D48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  unint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  int v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  id v76;
  void *v77;
  id v78;
  void *v79;
  unint64_t v80;
  void *v81;
  id v82;
  void *v83;
  unsigned int v84;
  unsigned __int8 v85;
  id v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  uint64_t v92;
  char *v93;
  id v94;
  id v95;
  unint64_t v96;
  id v97;
  id v98;
  unsigned __int8 v99;
  char v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  unint64_t *v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  char *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t result;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t *v139;
  uint64_t v140;
  void *v141;
  void *v142;
  void *v143;
  __int128 v144;
  __int128 v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;

  v16 = v15;
  v140 = a6;
  v132 = a5;
  v135 = sub_1BB86CD9C();
  v133 = *(_QWORD *)(v135 - 8);
  MEMORY[0x1E0C80A78](v135);
  v134 = (char *)&v126 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BB86CD90();
  v137 = *(_QWORD *)(v24 - 8);
  v138 = v24;
  v25 = MEMORY[0x1E0C80A78](v24);
  v136 = (char *)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(void **)a2;
  v27 = *(void **)(a2 + 8);
  v141 = *(void **)(a2 + 16);
  v142 = v27;
  v29 = objc_msgSend(v28, sel_publisherID, v25);
  v143 = v28;
  if (v29)
  {
    v30 = v29;
    v31 = sub_1BB8729A0();
    v33 = v32;

    LOBYTE(v30) = sub_1BA761FE4(v31, v33, a3);
    v28 = v143;
    swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
      goto LABEL_5;
  }
  v34 = objc_msgSend(v28, sel_sourceFeedID);
  if (!v34)
    goto LABEL_6;
  v35 = v34;
  v36 = sub_1BB8729A0();
  v38 = v37;

  LOBYTE(v35) = sub_1BA761FE4(v36, v38, a3);
  v28 = v143;
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
LABEL_5:
    v39 = 1;
  else
LABEL_6:
    v39 = 0;
  v40 = objc_msgSend(v28, sel_topics);
  if (v40)
  {
    v41 = v40;
    sub_1BA49A224(0, &qword_1ED39ECF8);
    v42 = sub_1BB872DB4();

  }
  else
  {
    v42 = MEMORY[0x1E0DEE9D8];
  }
  v139 = (unint64_t *)a1;
  if (a4 && (objc_msgSend(v28, sel_respondsToSelector_, sel_language) & 1) != 0)
  {
    swift_unknownObjectRetain();
    v43 = objc_msgSend(v28, sel_language);
    if (v43)
    {
      v44 = v43;
      v45 = sub_1BB8729A0();
      v47 = v46;

      if (v45 == v132 && v47 == v140)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
LABEL_19:
        a1 = (uint64_t)v139;
        v28 = v143;
        goto LABEL_20;
      }
      v48 = sub_1BB874398();
      swift_bridgeObjectRelease();
      if ((v48 & 1) != 0)
      {
        swift_unknownObjectRelease();
        goto LABEL_19;
      }
    }
    swift_unknownObjectRetain();
    v49 = sub_1BB6ABFE0(MEMORY[0x1E0DEE9D8], v42, a4);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    v42 = (unint64_t)v49;
    goto LABEL_19;
  }
LABEL_20:
  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    v50 = sub_1BB873F30();
    if (!v50)
      goto LABEL_29;
  }
  else
  {
    v50 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v50)
      goto LABEL_29;
  }
  if (v50 < 1)
  {
    __break(1u);
LABEL_121:
    swift_once();
LABEL_41:
    v67 = (id)qword_1ED476490;
    v68 = sub_1BB8732F4();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v69 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v69 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v69 + 32) = a1;
    *(_QWORD *)(v69 + 40) = v39;
    sub_1BB86EF44("Failed to find a publisher tag for %{public}@", 45, 2, &dword_1BA493000, v67, v68, v69);

    swift_bridgeObjectRelease();
LABEL_42:
    v28 = v143;
    goto LABEL_43;
  }
  LODWORD(v140) = a8;
  v51 = 0;
  do
  {
    if ((v42 & 0xC000000000000001) != 0)
      v52 = (id)MEMORY[0x1BCCE4630](v51, v42);
    else
      v52 = *(id *)(v42 + 8 * v51 + 32);
    v53 = v52;
    ++v51;
    v146 = v52;
    sub_1BB6A7D80(&v146, a7, a1, v39);

  }
  while (v50 != v51);
  v28 = v143;
  LOWORD(a8) = v140;
LABEL_29:
  v140 = a10;
  v54 = (unsigned __int16)a8;
  swift_bridgeObjectRelease();
  if (a8 == 2)
    goto LABEL_43;
  v55 = v141;
  swift_unknownObjectRetain();
  v56 = v28;
  v57 = v142;
  v58 = objc_msgSend(v56, sel_publisherID);
  if (!v58)
  {

    swift_unknownObjectRelease();
    v28 = v56;
    goto LABEL_43;
  }
  v59 = v58;
  LODWORD(v131) = v54;
  v132 = sub_1BB8729A0();
  v39 = v60;

  swift_unknownObjectRelease();
  a1 = v132;
  v28 = v56;
  if ((sub_1BA761FE4(v132, v39, a7) & 1) == 0)
  {
    if (*(_QWORD *)(a9 + 16))
    {
      swift_bridgeObjectRetain();
      v61 = sub_1BA6E35A8(a1, v39);
      if ((v62 & 1) != 0)
      {
        v63 = *(void **)(*(_QWORD *)(a9 + 56) + 8 * v61);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if ((v131 & 1) == 0)
        {
          switch((unint64_t)objc_msgSend(v63, sel_groupingEligibility))
          {
            case 0uLL:
              goto LABEL_114;
            case 1uLL:
              goto LABEL_113;
            case 2uLL:
              v64 = a1;
              v65 = v39;
              v66 = v140;
              goto LABEL_112;
            case 3uLL:
              goto LABEL_109;
            default:
              swift_bridgeObjectRelease();
              if (qword_1ED39F8D8 != -1)
                swift_once();
              v120 = (id)qword_1ED476490;
              v121 = sub_1BB8732F4();
              sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
              v122 = swift_allocObject();
              *(_OWORD *)(v122 + 16) = xmmword_1BB87CE70;
              v146 = objc_msgSend(v63, sel_groupingEligibility);
              v123 = sub_1BB87420C();
              v125 = v124;
              *(_QWORD *)(v122 + 56) = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v122 + 64) = sub_1BA6A2D8C();
              *(_QWORD *)(v122 + 32) = v123;
              *(_QWORD *)(v122 + 40) = v125;
              sub_1BB86EF44("Topic group clustering enountered a publisher tag record with an unknown grouping elegibility %{public}@", 104, 2, &dword_1BA493000, v120, v121, v122);

              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              goto LABEL_42;
          }
        }
        goto LABEL_113;
      }
      swift_bridgeObjectRelease();
    }
    if (qword_1ED39F8D8 == -1)
      goto LABEL_41;
    goto LABEL_121;
  }
  while (1)
  {
    swift_bridgeObjectRelease();
LABEL_43:
    v146 = (id)MEMORY[0x1E0DEE9E8];
    v147 = MEMORY[0x1E0DEE9E8];
    v148 = MEMORY[0x1E0DEE9E8];
    if (!v50)
      break;
    swift_bridgeObjectRetain();
    v39 = 4;
    while (1)
    {
      v70 = (v42 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1BCCE4630](v39 - 4, v42)
          : *(id *)(v42 + 8 * v39);
      v28 = v70;
      a1 = v39 - 3;
      if (__OFADD__(v39 - 4, 1))
        break;
      *(_QWORD *)&v144 = v70;
      sub_1BB6A80E4((uint64_t)&v146, (id *)&v144, a13 & 1, a14 & 1, v143, v142, v141, v140);
      if (v16)
        goto LABEL_124;
      v16 = 0;

      ++v39;
      if (a1 == v50)
      {
        swift_bridgeObjectRelease();
        v28 = v143;
        goto LABEL_52;
      }
    }
    __break(1u);
LABEL_109:
    if ((sub_1BA761FE4(a1, v39, v140) & 1) != 0 || (sub_1BA761FE4(a1, v39, a11) & 1) != 0)
      goto LABEL_113;
    v66 = a12;
    v64 = a1;
    v65 = v39;
LABEL_112:
    if ((sub_1BA761FE4(v64, v65, v66) & 1) != 0)
    {
LABEL_113:
      sub_1BA6EE5AC((uint64_t *)&v146, a1, v39);
      swift_unknownObjectRelease();
    }
    else
    {
LABEL_114:
      swift_unknownObjectRelease();
    }
  }
LABEL_52:
  swift_bridgeObjectRelease();
  v71 = v146;
  v72 = v147;
  v73 = v148;
  v74 = v141;
  swift_unknownObjectRetain();
  v75 = v142;
  v76 = objc_msgSend(v28, sel_itemID);
  v141 = (void *)sub_1BB8729A0();
  v142 = v77;

  swift_unknownObjectRelease();
  v78 = objc_msgSend(v28, sel_publisherID);
  v140 = v73;
  if (v78)
  {
    v79 = v78;
    v132 = sub_1BB8729A0();
    v131 = v80;

  }
  else
  {
    v132 = 0;
    v131 = 0xE000000000000000;
  }
  objc_msgSend(v75, sel_sortingScore);
  v81 = *(void **)(a15 + 16);
  v82 = objc_msgSend(v81, sel_paidAccessChecker);
  if (!v82)
  {
    __break(1u);
    goto LABEL_123;
  }
  v83 = v82;
  v130 = v71;
  v84 = objc_msgSend(v28, sel_isPaid);
  if ((objc_msgSend(v28, sel_respondsToSelector_, sel_isBundlePaid) & 1) != 0)
    v85 = objc_msgSend(v28, sel_isBundlePaid);
  else
    v85 = 0;
  v129 = v72;
  v86 = objc_msgSend(v28, sel_publisherID);
  if (v86)
  {
    v87 = v86;
    v128 = sub_1BB8729A0();
    v89 = v88;

    if (v84)
      goto LABEL_61;
  }
  else
  {
    v128 = 0;
    v89 = 0;
    if (v84)
    {
LABEL_61:
      v90 = objc_msgSend(v83, sel_purchaseProvider);
      if (v89)
      {
        v91 = objc_msgSend(v90, sel_purchasedTagIDs);
        v92 = sub_1BB873030();

        LOBYTE(v91) = sub_1BA761FE4(v128, v89, v92);
        swift_unknownObjectRelease();
        v28 = v143;
        swift_bridgeObjectRelease();
        if ((v91 & 1) != 0 || (v85 & 1) == 0)
          goto LABEL_67;
      }
      else
      {
        swift_unknownObjectRelease();
        if ((v85 & 1) == 0)
          goto LABEL_67;
      }
      goto LABEL_69;
    }
  }
  if ((v85 & 1) == 0)
    goto LABEL_67;
LABEL_69:
  if (!v89)
  {
    swift_unknownObjectRelease();
    goto LABEL_92;
  }
  v93 = (char *)objc_msgSend(objc_msgSend(v83, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v93, v93 + 1))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v144 = 0u;
    v145 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v144, (uint64_t)&v146);
  if (!v149)
  {
    sub_1BA6EDA74((uint64_t)&v146);
    goto LABEL_79;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_79:
    v94 = 0;
    v96 = 0;
    goto LABEL_80;
  }
  v94 = v150;
  v95 = objc_msgSend(v150, sel_integerValue);
  if (v95 == (id)-1)
  {

    v28 = v143;
    goto LABEL_91;
  }
  v96 = (unint64_t)v95;
LABEL_80:
  if (objc_getAssociatedObject(v93, (const void *)~v96))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v144 = 0u;
    v145 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v144, (uint64_t)&v146);
  if (v149)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v97 = v150;
      v127 = v94;
      v98 = v97;
      v99 = objc_msgSend(v97, sel_integerValue);

      v100 = (v99 + 1) ^ (v96 + 1);
      v28 = v143;
      if ((v100 & 1) != 0)
        goto LABEL_91;
LABEL_67:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_92;
    }
  }
  else
  {
    sub_1BA6EDA74((uint64_t)&v146);
  }

  v28 = v143;
  if ((v96 & 1) == 0)
    goto LABEL_67;
LABEL_91:
  v101 = objc_msgSend(objc_msgSend(v83, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v102 = objc_msgSend(v101, sel_bundleChannelIDs);

  v103 = (void *)sub_1BB872970();
  objc_msgSend(v102, sel_containsObject_, v103);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

LABEL_92:
  v104 = objc_msgSend(v81, sel_paidAccessChecker);
  v105 = v139;
  if (!v104)
  {
LABEL_123:
    __break(1u);
LABEL_124:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    __break(1u);
    JUMPOUT(0x1BB6A7D70);
  }
  v106 = objc_msgSend(v104, sel_bundleSubscriptionProvider);
  swift_unknownObjectRelease();
  v107 = objc_msgSend(v106, sel_bundleSubscription);
  swift_unknownObjectRelease();
  objc_msgSend(v107, sel_containsItem_, v28);

  if ((objc_msgSend(v28, sel_respondsToSelector_, sel_isAIGenerated) & 1) != 0)
    objc_msgSend(v28, sel_isAIGenerated);
  if ((objc_msgSend(v28, sel_respondsToSelector_, sel_isEvergreen) & 1) != 0)
    objc_msgSend(v28, sel_isEvergreen);
  objc_msgSend(v75, sel_embeddingScore);
  if ((objc_msgSend(v28, sel_respondsToSelector_, sel_thumbnailPerceptualHash) & 1) != 0)
  {
    v108 = objc_msgSend(v28, sel_thumbnailPerceptualHash);
    if (v108)
    {
      v109 = v108;
      v110 = sub_1BB86C6E8();
      v112 = v111;

    }
    else
    {
      v110 = 0;
      v112 = 0xF000000000000000;
    }
    *(_QWORD *)&v144 = v110;
    *((_QWORD *)&v144 + 1) = v112;
    sub_1BA4AD288(0, &qword_1ED3A3268, MEMORY[0x1E0CB0338], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BB873A20();
    sub_1BA69D490(v110, v112);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v133 + 104))(v134, *MEMORY[0x1E0DDA388], v135);
  v113 = v136;
  sub_1BB86CD6C();
  v114 = *v105;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v114 = sub_1BB393F08(0, *(_QWORD *)(v114 + 16) + 1, 1, v114);
  v116 = v137;
  v115 = v138;
  v118 = *(_QWORD *)(v114 + 16);
  v117 = *(_QWORD *)(v114 + 24);
  if (v118 >= v117 >> 1)
    v114 = sub_1BB393F08(v117 > 1, v118 + 1, 1, v114);
  *(_QWORD *)(v114 + 16) = v118 + 1;
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v116 + 32))(v114+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(_QWORD *)(v116 + 72) * v118, v113, v115);
  *v105 = v114;
  return result;
}

id sub_1BB6A7D80(id *a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v7;
  id result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = (unint64_t)*a1;
  result = objc_msgSend(*a1, sel_tagID);
  if (!result)
    return result;
  v9 = result;
  v10 = sub_1BB8729A0();
  v12 = v11;

  if ((sub_1BA761FE4(v10, v12, a2) & 1) != 0)
    return (id)swift_bridgeObjectRelease();
  if ((objc_msgSend((id)v7, sel_isEligibleForGroupingIfFavorited) & 1) != 0
    || objc_msgSend((id)v7, sel_isEligibleForGroupingIfAutofavorited))
  {
    swift_bridgeObjectRetain();
    sub_1BA6EE5AC(&v37, v10, v12);
    swift_bridgeObjectRelease();
  }
  if (!objc_msgSend((id)v7, sel_isEligibleForGrouping))
    return (id)swift_bridgeObjectRelease();
  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    LOBYTE(v9) = swift_isUniquelyReferenced_nonNull_native();
    v37 = *(_QWORD *)(a3 + 24);
    v13 = v37;
    *(_QWORD *)(a3 + 24) = 0x8000000000000000;
    v15 = sub_1BA6E35A8(v10, v12);
    v16 = *(_QWORD *)(v13 + 16);
    v17 = (v14 & 1) == 0;
    v18 = v16 + v17;
    if (__OFADD__(v16, v17))
      goto LABEL_32;
    v19 = v14;
    if (*(_QWORD *)(v13 + 24) >= v18)
    {
      if ((v9 & 1) == 0)
      {
        sub_1BB4C36DC();
        v13 = v37;
      }
    }
    else
    {
      sub_1BB4B0368(v18, (char)v9);
      v13 = v37;
      v20 = sub_1BA6E35A8(v10, v12);
      if ((v19 & 1) != (v21 & 1))
        goto LABEL_35;
      v15 = v20;
    }
    *(_QWORD *)(a3 + 24) = v13;
    swift_bridgeObjectRelease();
    v22 = *(_QWORD **)(a3 + 24);
    swift_bridgeObjectRetain();
    if ((v19 & 1) == 0)
    {
      sub_1BB4C1230(v15, v10, v12, 0, v22);
      swift_bridgeObjectRetain();
    }
    v7 = v22[7];
    swift_bridgeObjectRelease();
    v23 = *(_QWORD *)(v7 + 8 * v15);
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_33;
    *(_QWORD *)(v7 + 8 * v15) = v25;
    swift_bridgeObjectRelease();
    v15 = (unint64_t)sub_1BA80F9D0;
  }
  else
  {
    v15 = 0;
  }
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v37 = *(_QWORD *)(a3 + 32);
  v27 = v37;
  *(_QWORD *)(a3 + 32) = 0x8000000000000000;
  v7 = sub_1BA6E35A8(v10, v12);
  v29 = *(_QWORD *)(v27 + 16);
  v30 = (v28 & 1) == 0;
  v31 = v29 + v30;
  if (__OFADD__(v29, v30))
  {
    __break(1u);
    goto LABEL_31;
  }
  LOBYTE(v9) = v28;
  if (*(_QWORD *)(v27 + 24) >= v31)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_34;
    goto LABEL_25;
  }
  sub_1BB4B0368(v31, isUniquelyReferenced_nonNull_native);
  v27 = v37;
  v32 = sub_1BA6E35A8(v10, v12);
  if ((v9 & 1) != (v33 & 1))
  {
LABEL_35:
    result = (id)sub_1BB874560();
    __break(1u);
    return result;
  }
  v7 = v32;
  while (1)
  {
LABEL_25:
    *(_QWORD *)(a3 + 32) = v27;
    swift_bridgeObjectRelease();
    v34 = *(_QWORD **)(a3 + 32);
    swift_bridgeObjectRetain();
    if ((v9 & 1) == 0)
    {
      sub_1BB4C1230(v7, v10, v12, 0, v34);
      swift_bridgeObjectRetain();
    }
    v9 = (void *)v34[7];
    swift_bridgeObjectRelease();
    v35 = *((_QWORD *)v9 + v7);
    v24 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (!v24)
      break;
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    sub_1BB4C36DC();
    v27 = v37;
  }
  *((_QWORD *)v9 + v7) = v36;
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC(&v37, v10, v12);
  swift_bridgeObjectRelease();
  return (id)sub_1BA49EBE0(v15);
}

id sub_1BB6A80E4(uint64_t a1, id *a2, char a3, char a4, void *a5, void *a6, void *a7, uint64_t a8)
{
  uint64_t v8;
  id v14;
  id result;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  void *v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  void *v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;

  v14 = *a2;
  result = objc_msgSend(*a2, sel_tagID);
  if (result)
  {
    v16 = result;
    v64 = a6;
    v68 = v8;
    v17 = sub_1BB8729A0();
    v19 = v18;

    if (objc_msgSend(v14, sel_isManagedTopic))
    {
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(&v66, v17, v19);
      swift_bridgeObjectRelease();
    }
    if (objc_msgSend(v14, sel_isManagedTopicWinner))
    {
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(&v66, v17, v19);
      swift_bridgeObjectRelease();
    }
    if ((a3 & 1) == 0)
      goto LABEL_16;
    if ((objc_msgSend(v14, sel_isDisallowedFromGrouping) & 1) != 0)
    {
      result = (id)swift_bridgeObjectRelease();
      if ((a4 & 1) == 0)
        return result;
      if (qword_1ED39F8D8 != -1)
        swift_once();
      v20 = (void *)qword_1ED476490;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1BB87A390;
      v22 = a7;
      v23 = v20;
      swift_unknownObjectRetain();
      v24 = v64;
      v25 = objc_msgSend(a5, sel_itemID);
      v26 = sub_1BB8729A0();
      v28 = v27;

      swift_unknownObjectRelease();
      v29 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
      v30 = sub_1BA6A2D8C();
      *(_QWORD *)(v21 + 64) = v30;
      *(_QWORD *)(v21 + 32) = v26;
      *(_QWORD *)(v21 + 40) = v28;
      v66 = 0;
      v67 = 0xE000000000000000;
      v31 = objc_msgSend(v14, sel_tagID);
      if (v31)
      {
        v32 = v31;
        sub_1BB8729A0();

      }
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, v29, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1BB872A00();
      sub_1BB872AFC(v50);
      swift_bridgeObjectRelease();
      v51 = v66;
      v52 = v67;
      *(_QWORD *)(v21 + 96) = v29;
      *(_QWORD *)(v21 + 104) = v30;
      *(_QWORD *)(v21 + 72) = v51;
      *(_QWORD *)(v21 + 80) = v52;
      v53 = sub_1BB87330C();
      sub_1BB86EF44("Article %{public}@ is disallowed from being grouped into %{public}@, omitting topic", 83, 2, &dword_1BA493000, v23, v53, v21);

      return (id)swift_bridgeObjectRelease();
    }
    if (!objc_msgSend(v14, sel_hardFollowRequiredForGrouping))
      goto LABEL_16;
    v33 = objc_msgSend(a5, sel_publisherID);
    if (v33)
    {
      v34 = v33;
      v63 = sub_1BB8729A0();
      v36 = v35;

      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LOBYTE(v34) = sub_1BA761FE4(v63, v36, a8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if ((v34 & 1) != 0)
      {
LABEL_16:
        sub_1BA6EE5AC(&v66, v17, v19);
        return (id)swift_bridgeObjectRelease();
      }
    }
    result = (id)swift_bridgeObjectRelease();
    if ((a4 & 1) != 0)
    {
      if (qword_1ED39F8D8 != -1)
        swift_once();
      v37 = (void *)qword_1ED476490;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1BB87FC80;
      v39 = a7;
      v40 = v37;
      swift_unknownObjectRetain();
      v41 = v64;
      v42 = objc_msgSend(a5, sel_itemID);
      v43 = sub_1BB8729A0();
      v45 = v44;

      swift_unknownObjectRelease();
      v46 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v38 + 56) = MEMORY[0x1E0DEA968];
      v47 = sub_1BA6A2D8C();
      *(_QWORD *)(v38 + 64) = v47;
      *(_QWORD *)(v38 + 32) = v43;
      *(_QWORD *)(v38 + 40) = v45;
      v66 = 0;
      v67 = 0xE000000000000000;
      v48 = objc_msgSend(v14, sel_tagID);
      if (v48)
      {
        v49 = v48;
        sub_1BB8729A0();

      }
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, v46, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1BB872A00();
      sub_1BB872AFC(v54);
      swift_bridgeObjectRelease();
      v55 = v66;
      v56 = v67;
      *(_QWORD *)(v38 + 96) = v46;
      *(_QWORD *)(v38 + 104) = v47;
      *(_QWORD *)(v38 + 72) = v55;
      *(_QWORD *)(v38 + 80) = v56;
      v66 = 0;
      v67 = 0xE000000000000000;
      v57 = objc_msgSend(a5, sel_publisherID);
      if (v57)
      {
        v58 = v57;
        sub_1BB8729A0();

      }
      else
      {
        v59 = "g elegibility %{public}@";
      }
      sub_1BB872AFC(v59);
      swift_bridgeObjectRelease();
      v60 = v66;
      v61 = v67;
      *(_QWORD *)(v38 + 136) = v46;
      *(_QWORD *)(v38 + 144) = v47;
      *(_QWORD *)(v38 + 112) = v60;
      *(_QWORD *)(v38 + 120) = v61;
      v62 = sub_1BB87330C();
      sub_1BB86EF44("Article %{public}@ is disallowed from being grouped into %{public}@ unless the publisher %{public}@ is a hard favorite, which it is not, omitting topic", 151, 2, &dword_1BA493000, v40, v62, v38);

      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BB6A86B0(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v6;
  uint64_t v7;

  v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 16), sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
  swift_unknownObjectRelease();
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_enableTabiTagScoring) & 1) != 0
    && objc_msgSend(v2, sel_enableTabiTagScoring)
    && (objc_msgSend(v2, sel_respondsToSelector_, sel_newsTabiConfiguration) & 1) != 0
    && (v3 = objc_msgSend(v2, sel_newsTabiConfiguration),
        v4 = objc_msgSend(v3, sel_tagScoringConfiguration),
        v3,
        v4))
  {
    objc_msgSend(v4, sel_minimumChannelScoreForGrouping);

    return swift_unknownObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)(a1 + 64);
    v7 = *(_QWORD *)(a1 + 72);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 40), v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 64))(v6, v7);
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1BB6A87F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _DWORD *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  _DWORD *v27;
  unsigned int *v28;
  uint64_t v29;
  unint64_t v30;
  double v31;
  char v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  int v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;

  v53 = a8;
  v52 = a7;
  v49 = a5;
  v50 = a6;
  v48 = a4;
  v12 = *(_QWORD *)(a2 + 16);
  v13 = sub_1BB86CD0C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v51 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v48 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v48 - v20;
  v23 = *a1;
  v22 = a1[1];
  v24 = sub_1BA761FE4(v23, v22, v12);
  v25 = (_DWORD *)MEMORY[0x1E0DDA178];
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v27 = (_DWORD *)MEMORY[0x1E0DDA170];
  if ((v24 & 1) != 0)
    v28 = (unsigned int *)MEMORY[0x1E0DDA178];
  else
    v28 = (unsigned int *)MEMORY[0x1E0DDA170];
  v29 = *v28;
  v54 = v21;
  v55 = v13;
  v26(v21, v29, v13);
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    v30 = sub_1BA6E35A8(v23, v22);
    v31 = 0.0;
    if ((v32 & 1) != 0)
      v31 = *(double *)(*(_QWORD *)(a3 + 56) + 8 * v30);
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = 0.0;
  }
  v33 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v34 = v55;
  v33(v18, v54, v55);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v18, v34);
  if (v35 != *v25)
  {
    a9 = 0.0;
    if (v35 != *v27)
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v55);
  }
  if (a9 <= v31)
  {
    swift_bridgeObjectRetain();
    LODWORD(v48) = sub_1BA761FE4(v23, v22, v48);
    sub_1BA761FE4(v23, v22, v49);
    sub_1BA761FE4(v23, v22, v50);
    sub_1BA761FE4(v23, v22, v52);
    v52 = v14;
    v44 = v54;
    v45 = v55;
    v33(v51, v54, v55);
    v46 = v53;
    sub_1BB86CD00();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v44, v45);
    v47 = sub_1BB86CD18();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
  }
  else
  {
    if (qword_1ED39F8D8 != -1)
      swift_once();
    v36 = (void *)qword_1ED476490;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1BB87FC80;
    *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v37 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v37 + 32) = v23;
    *(_QWORD *)(v37 + 40) = v22;
    v38 = MEMORY[0x1E0DEB070];
    v39 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v37 + 96) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v37 + 104) = v39;
    *(double *)(v37 + 72) = v31;
    *(_QWORD *)(v37 + 136) = v38;
    *(_QWORD *)(v37 + 144) = v39;
    *(double *)(v37 + 112) = a9;
    swift_bridgeObjectRetain();
    v40 = v36;
    v41 = sub_1BB87330C();
    sub_1BB86EF44("Ignoring tag %{public}@ for grouping because its score %f is less than the minimum %f", 85, 2, &dword_1BA493000, v40, v41, v37);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v54, v55);
    v42 = sub_1BB86CD18();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v53, 1, 1, v42);
  }
}

uint64_t sub_1BB6A8BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, id a8, uint64_t a9, void *a10)
{
  int *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  int v32;
  double v33;
  double v34;
  uint64_t v35;
  unsigned int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  double v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  void *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  unint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  id v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  __int128 v113[3];

  v95 = a8;
  v111 = a7;
  v101 = a1;
  v102 = a2;
  v12 = (int *)type metadata accessor for FeedClusteringRequest(0);
  v96 = *((_QWORD *)v12 - 1);
  MEMORY[0x1E0C80A78](v12);
  v97 = v13;
  v107 = (uint64_t)&v89 - ((unint64_t)(v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB6AB02C(0);
  MEMORY[0x1E0C80A78](v14);
  v92 = (uint64_t)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_1BB86D0D8();
  v110 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v106 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v89 - v18;
  v20 = sub_1BB86EF74();
  v108 = *(_QWORD *)(v20 - 8);
  v109 = v20;
  MEMORY[0x1E0C80A78](v20);
  v105 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v89 - v23;
  v25 = sub_1BB86EF98();
  v99 = *(_QWORD *)(v25 - 8);
  v100 = v25;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED39F8D8 != -1)
    swift_once();
  v91 = a9;
  v28 = (id)qword_1ED476490;
  sub_1BB86EF80();
  v98 = v27;
  sub_1BB86EF8C();
  sub_1BB86EF5C();
  v29 = v28;
  sub_1BB86EF68();
  tf_os_signpost_clustering_begin();

  v30 = objc_msgSend(*(id *)(a5 + 16), sel_personalizationTreatment);
  v31 = *(_QWORD *)(a5 + 40);
  v32 = *(unsigned __int8 *)(a5 + v12[17]);
  v33 = *(double *)(a5 + v12[18]);
  v34 = *(double *)(a5 + v12[19]);
  v35 = v12[20];
  v36 = *(unsigned __int16 *)(a5 + v12[21]);
  LOBYTE(v113[0]) = *(_BYTE *)(a5 + v12[16]);
  v37 = (v36 >> 8) & 1;
  if (v36 == 2)
    LOBYTE(v37) = 0;
  v38 = a5 + v12[10];
  v39 = a5 + v12[11];
  v40 = a5 + v12[13];
  v41 = a5 + v12[14];
  v88 = *(_QWORD *)(a5 + v12[12]);
  v87 = *(_BYTE *)(a5 + v35);
  v104 = v30;
  sub_1BB69F024(v30, v31, v38, v39, v40, v41, (int *)v113, v32, (uint64_t)v19, v33, v34, v37, v87, v88);
  v42 = objc_msgSend((id)objc_opt_self(), sel_isInternalBuild);
  v103 = v24;
  if (v42)
  {
    v43 = (void *)qword_1ED476490;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v44 = v19;
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1BB87CE70;
    v46 = a6;
    v47 = v43;
    v48 = sub_1BB6A92BC();
    v50 = v49;
    *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v45 + 64) = sub_1BA6A2D8C();
    v51 = 7104878;
    if (v50)
      v51 = v48;
    v52 = 0xE300000000000000;
    if (v50)
      v52 = v50;
    *(_QWORD *)(v45 + 32) = v51;
    *(_QWORD *)(v45 + 40) = v52;
    v53 = sub_1BB87330C();
    sub_1BB86EF44("Clustering with Xavier using config %{public}@", 46, 2, &dword_1BA493000, v47, v53, v45);

    a6 = v46;
    v24 = v103;
    v19 = v44;
    swift_bridgeObjectRelease();
  }
  v90 = a10;
  v54 = *(_QWORD *)a5;
  objc_msgSend(v104, sel_uGroupMinimumSubscribedChannelSourceFeedArticleRatio);
  v56 = v55;
  v57 = *(_QWORD *)(a5 + v12[15]);
  LOWORD(v113[0]) = v36;
  v58 = v92;
  sub_1BA4C2DD8(v39, v92, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
  v59 = type metadata accessor for FeedClusteringOptions(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59) == 1)
  {
    sub_1BA4A2E80(v58, (uint64_t (*)(_QWORD))sub_1BB6AB02C);
    v60 = 1.0;
  }
  else
  {
    v61 = v58 + *(int *)(v59 + 72);
    v62 = *(double *)v61;
    v63 = *(unsigned __int8 *)(v61 + 8);
    sub_1BA4A2E80(v58, type metadata accessor for FeedClusteringOptions);
    if (v63)
      v60 = 1.0;
    else
      v60 = v62;
  }
  v95 = sub_1BB6A5C50(v54, v111, (uint64_t)v95, v57, (__int16 *)v113, v56, v60);
  v64 = v110;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v106, v19, v112);
  sub_1BA4C010C(v91, (uint64_t)v113);
  sub_1BA4C2DD8(a5, v107, type metadata accessor for FeedClusteringRequest);
  v65 = v108;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v105, v24, v109);
  v66 = (*(unsigned __int8 *)(v64 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  v67 = (v94 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  v69 = (*(unsigned __int8 *)(v96 + 80) + v68 + 40) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  v96 = (unint64_t)&v97[v69 + 7] & 0xFFFFFFFFFFFFFFF8;
  v97 = v19;
  v70 = (v96 + 15) & 0xFFFFFFFFFFFFFFF8;
  v71 = (*(unsigned __int8 *)(v65 + 80) + v70 + 8) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v72 = (v93 + v71 + 7) & 0xFFFFFFFFFFFFFFF8;
  v73 = swift_allocObject();
  *(_QWORD *)(v73 + 16) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v73 + v66, v106, v112);
  v74 = v104;
  *(_QWORD *)(v73 + v67) = v104;
  sub_1BA4CECCC(v113, v73 + v68);
  sub_1BA5193C4(v107, v73 + v69, type metadata accessor for FeedClusteringRequest);
  v75 = v90;
  *(_QWORD *)(v73 + v96) = v90;
  v76 = v111;
  *(_QWORD *)(v73 + v70) = v111;
  v77 = v73 + v71;
  v79 = v108;
  v78 = v109;
  (*(void (**)(unint64_t, char *, uint64_t))(v108 + 32))(v77, v105, v109);
  v80 = (_QWORD *)(v73 + v72);
  v81 = v102;
  *v80 = v101;
  v80[1] = v81;
  swift_retain();
  v82 = v74;
  v83 = v75;
  v84 = v76;
  swift_retain();
  v85 = (void *)sub_1BB86E854();
  sub_1BB86E974();

  swift_release();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v110 + 8))(v97, v112);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v103, v78);
  return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v98, v100);
}

uint64_t sub_1BB6A92BC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24[2];
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v0 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v0);
  sub_1BB86BD4C();
  swift_allocObject();
  sub_1BB86BD40();
  sub_1BB86D0D8();
  sub_1BA50AD30(&qword_1ED3A2510, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA8B8], MEMORY[0x1E0DDA8C8]);
  v8 = sub_1BB86BD28();
  v10 = v9;
  swift_release();
  v11 = (void *)objc_opt_self();
  v12 = (void *)sub_1BB86C6DC();
  v24[0] = 0;
  v13 = objc_msgSend(v11, sel_JSONObjectWithData_options_error_, v12, 0, v24);

  v14 = v24[0];
  if (v13)
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1(&v25, v27);
    v15 = sub_1BB874380();
    v24[0] = 0;
    v16 = objc_msgSend(v11, sel_dataWithJSONObject_options_error_, v15, 1, v24);
    swift_unknownObjectRelease();
    v17 = v24[0];
    if (v16)
    {
      v18 = sub_1BB86C6E8();
      v20 = v19;

      sub_1BB8729DC();
      v6 = sub_1BB8729B8();
      sub_1BA69D314(v8, v10);
      sub_1BA69D314(v18, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
      return v6;
    }
    v23 = v17;
    v22 = (void *)sub_1BB86C484();

    swift_willThrow();
    sub_1BA69D314(v8, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    v21 = v14;
    v22 = (void *)sub_1BB86C484();

    swift_willThrow();
    sub_1BA69D314(v8, v10);
  }
  if (qword_1ED39F8D8 != -1)
    swift_once();
  v1 = (id)qword_1ED476490;
  v2 = sub_1BB8732F4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  v25 = 0;
  v26 = 0xE000000000000000;
  sub_1BB873E34();
  v4 = v25;
  v5 = v26;
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  sub_1BB86EF44("Failed to make pretty version of encodable value %{public}@", 59, 2, &dword_1BA493000, v1, v2, v3);

  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BB6A9664(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t *a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void **v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char isUniquelyReferenced_nonNull_native;
  char v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  void *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  char *v105;
  _QWORD *v106;
  void *v107;
  id v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  void *v117;
  uint64_t result;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  void (*v126)(char *, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  void *v146;
  __int128 v147;
  _QWORD *v148;

  v136 = a8;
  v131 = a7;
  *(_QWORD *)&v147 = a5;
  v143 = a3;
  v135 = sub_1BB86EF74();
  v130 = *(_QWORD *)(v135 - 8);
  MEMORY[0x1E0C80A78](v135);
  v129 = v15;
  v134 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB86D15C();
  v137 = *(_QWORD *)(v16 - 8);
  v138 = v16;
  MEMORY[0x1E0C80A78](v16);
  v133 = (char *)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = v17;
  MEMORY[0x1E0C80A78](v18);
  v144 = (char *)&v119 - v19;
  v141 = sub_1BB86D0D8();
  v139 = *(_QWORD *)(v141 - 8);
  MEMORY[0x1E0C80A78](v141);
  v127 = v20;
  v140 = (char *)&v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BB86CD24();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v119 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = *a1;
  v25 = (void *)objc_opt_self();
  if (objc_msgSend(v25, sel_isInternalBuild))
  {
    v146 = v25;
    if (qword_1ED3A3320 != -1)
      swift_once();
    type metadata accessor for FeedClusteringService();
    sub_1BA50AD30(&qword_1ED3A4D78, v26, (uint64_t (*)(uint64_t))type metadata accessor for FeedClusteringService, (uint64_t)&protocol conformance descriptor for FeedClusteringService);
    sub_1BB86D210();
    *v24 = (_BYTE)v148;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E0DDA1C8], v21);
    v25 = v146;
  }
  else
  {
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E0DDA1C0], v21);
  }
  v126 = *(void (**)(char *, uint64_t, uint64_t))(v139 + 16);
  v126(v140, v143, v141);
  sub_1BB86CD60();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = sub_1BB86CD48();
  v28 = objc_msgSend(a4, sel_defaultTopicsConfig);
  if (!v28)
  {
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    result = sub_1BB874560();
    __break(1u);
    return result;
  }
  v29 = v28;
  sub_1BB52EB1C();

  v132 = a2;
  v30 = objc_msgSend(*(id *)(a2 + 16), sel_bundleSubscriptionManager);
  if (!v30)
    goto LABEL_41;
  v31 = objc_msgSend(v30, sel_bundleSubscription);
  swift_unknownObjectRelease();
  objc_msgSend(v31, sel_isSubscribed);

  sub_1BB86D0FC();
  swift_bridgeObjectRelease();
  if (objc_msgSend(v25, sel_isInternalBuild))
  {
    v32 = *(_QWORD *)(v147 + 24);
    v33 = *(_QWORD *)(v147 + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)v147, v32);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 8);
    v35 = swift_retain();
    v34(v35, v32, v33);
    swift_release();
  }
  v124 = v27;
  v36 = *a6;
  v37 = *(_QWORD *)(*a6 + 16);
  if (!v37)
  {
    swift_bridgeObjectRetain();
    v39 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_27:
    swift_bridgeObjectRelease();
    v148 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v67 = *(_QWORD *)(sub_1BB86D150() + 16);
    if (v67)
    {
      swift_bridgeObjectRetain();
      v68 = 48;
      do
      {
        v69 = swift_bridgeObjectRetain();
        sub_1BA6E9BD8(v69);
        v68 += 24;
        --v67;
      }
      while (v67);
      swift_bridgeObjectRelease();
    }
    v122 = a9;
    swift_bridgeObjectRelease();
    v70 = *(_QWORD *)(sub_1BB86D144() + 16);
    if (v70)
    {
      swift_bridgeObjectRetain();
      v71 = 48;
      do
      {
        v72 = swift_bridgeObjectRetain();
        sub_1BA6E9BD8(v72);
        v71 += 24;
        --v70;
      }
      while (v70);
      swift_bridgeObjectRelease();
    }
    v145 = a11;
    v123 = a10;
    swift_bridgeObjectRelease();
    v73 = sub_1BB86D138();
    sub_1BA6E9BD8(v73);
    v74 = (uint64_t)v148;
    swift_bridgeObjectRetain();
    v75 = v125;
    v121 = sub_1BB6ACFC4(v74, (uint64_t)v39);
    v146 = v75;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v147 = sub_1BB86D144();
    v47 = (_QWORD *)sub_1BB86D150();
    v125 = v39;
    if (qword_1ED39F8D8 != -1)
      goto LABEL_39;
    goto LABEL_36;
  }
  swift_bridgeObjectRetain_n();
  v123 = v36;
  v38 = (void **)(v36 + 48);
  v39 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v147 = *((_OWORD *)v38 - 1);
    v42 = *v38;
    v145 = v37;
    v146 = v42;
    v43 = v42;
    v44 = (void *)v147;
    swift_unknownObjectRetain();
    v45 = *((id *)&v147 + 1);
    v46 = v43;
    swift_unknownObjectRetain();
    v47 = v45;
    v48 = objc_msgSend(v44, sel_itemID);
    v49 = sub_1BB8729A0();
    v51 = v50;

    swift_unknownObjectRelease();
    v52 = v39;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v148 = v52;
    v55 = sub_1BA6E35A8(v49, v51);
    v56 = v52[2];
    v57 = (v54 & 1) == 0;
    v58 = v56 + v57;
    if (__OFADD__(v56, v57))
      break;
    v59 = v54;
    if (v52[3] >= v58)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v39 = v148;
        if ((v54 & 1) != 0)
          goto LABEL_12;
      }
      else
      {
        sub_1BB4CB308();
        v39 = v148;
        if ((v59 & 1) != 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_1BB4BC9D8(v58, isUniquelyReferenced_nonNull_native);
      v60 = sub_1BA6E35A8(v49, v51);
      if ((v59 & 1) != (v61 & 1))
        goto LABEL_42;
      v55 = v60;
      v39 = v148;
      if ((v59 & 1) != 0)
      {
LABEL_12:
        v40 = v39[7] + 24 * v55;
        v41 = *(void **)(v40 + 16);

        swift_unknownObjectRelease();
        *(_QWORD *)v40 = v44;
        *(_QWORD *)(v40 + 8) = v47;
        *(_QWORD *)(v40 + 16) = v146;
        goto LABEL_13;
      }
    }
    v39[(v55 >> 6) + 8] |= 1 << v55;
    v62 = (uint64_t *)(v39[6] + 16 * v55);
    *v62 = v49;
    v62[1] = v51;
    v63 = v39[7] + 24 * v55;
    *(_OWORD *)v63 = v147;
    *(_QWORD *)(v63 + 16) = v146;
    v64 = v39[2];
    v65 = __OFADD__(v64, 1);
    v66 = v64 + 1;
    if (v65)
      goto LABEL_38;
    v39[2] = v66;
    swift_bridgeObjectRetain();
LABEL_13:
    v38 += 3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37 = v145 - 1;
    if (v145 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  swift_once();
LABEL_36:
  v76 = (void *)qword_1ED476490;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = xmmword_1BB87D7A0;
  v148 = *(_QWORD **)(v142 + 16);
  v78 = v76;
  v79 = sub_1BB87420C();
  v81 = v80;
  v82 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v77 + 56) = MEMORY[0x1E0DEA968];
  v83 = sub_1BA6A2D8C();
  *(_QWORD *)(v77 + 64) = v83;
  *(_QWORD *)(v77 + 32) = v79;
  *(_QWORD *)(v77 + 40) = v81;
  v120 = v47;
  v148 = (_QWORD *)v47[2];
  v84 = sub_1BB87420C();
  *(_QWORD *)(v77 + 96) = v82;
  *(_QWORD *)(v77 + 104) = v83;
  *(_QWORD *)(v77 + 72) = v84;
  *(_QWORD *)(v77 + 80) = v85;
  v148 = *(_QWORD **)(v147 + 16);
  v86 = sub_1BB87420C();
  *(_QWORD *)(v77 + 136) = v82;
  *(_QWORD *)(v77 + 144) = v83;
  *(_QWORD *)(v77 + 112) = v86;
  *(_QWORD *)(v77 + 120) = v87;
  v88 = (uint64_t)v121;
  v148 = (_QWORD *)v121[2];
  v89 = sub_1BB87420C();
  *(_QWORD *)(v77 + 176) = v82;
  *(_QWORD *)(v77 + 184) = v83;
  *(_QWORD *)(v77 + 152) = v89;
  *(_QWORD *)(v77 + 160) = v90;
  v91 = sub_1BB87330C();
  sub_1BB86EF44("Clustered %{public}@ items into %{public}@ channel groups, %{public}@ topic groups, and %{public}@ total chosen headlines", 121, 2, &dword_1BA493000, v78, v91, v77);

  swift_bridgeObjectRelease();
  v92 = v144;
  v93 = sub_1BB6AA250();
  MEMORY[0x1E0C80A78](v93);
  v94 = v132;
  *(&v119 - 2) = v132;
  *(&v119 - 1) = v95;
  sub_1BA4C3E90(0, (unint64_t *)&qword_1ED3B9630, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB86EC14();
  v148 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v96 = (void *)sub_1BB86E854();
  sub_1BA5746F8();
  sub_1BB6AD154();
  sub_1BB86EA88();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1BB6AA358(v88);
  swift_bridgeObjectRelease();
  v142 = sub_1BB86EBF0();
  swift_release();
  swift_release();
  v126(v140, v143, v141);
  v97 = v130;
  (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v134, v122, v135);
  v98 = v137;
  (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v133, v92, v138);
  v99 = v139;
  v100 = (*(unsigned __int8 *)(v139 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
  v101 = (v127 + *(unsigned __int8 *)(v97 + 80) + v100) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  v102 = (v129 + v101 + 7) & 0xFFFFFFFFFFFFFFF8;
  v103 = (*(unsigned __int8 *)(v98 + 80) + v102 + 16) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
  v104 = (v128 + v103 + 7) & 0xFFFFFFFFFFFFFFF8;
  v105 = (char *)swift_allocObject();
  v106 = v120;
  *((_QWORD *)v105 + 2) = v125;
  *((_QWORD *)v105 + 3) = v106;
  *((_QWORD *)v105 + 4) = v94;
  v107 = v131;
  v108 = v136;
  *((_QWORD *)v105 + 5) = v131;
  *((_QWORD *)v105 + 6) = v108;
  *((_QWORD *)v105 + 7) = v147;
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(&v105[v100], v140, v141);
  (*(void (**)(char *, char *, uint64_t))(v97 + 32))(&v105[v101], v134, v135);
  v109 = &v105[v102];
  v110 = v145;
  *(_QWORD *)v109 = v123;
  *((_QWORD *)v109 + 1) = v110;
  v111 = &v105[v103];
  v113 = v137;
  v112 = v138;
  (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v111, v133, v138);
  *(_QWORD *)&v105[v104] = v124;
  v114 = swift_allocObject();
  *(_QWORD *)(v114 + 16) = sub_1BB6AD30C;
  *(_QWORD *)(v114 + 24) = v105;
  swift_retain();
  swift_retain();
  v115 = v107;
  v116 = v136;
  swift_retain();
  v117 = (void *)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v144, v112);
}

uint64_t sub_1BB6AA250()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_1BB86D150();
  v1 = sub_1BB86D144();
  sub_1BB387A8C(v1);
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v2, 0);
    v3 = v11;
    v4 = (uint64_t *)(v0 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v7 = *(_QWORD *)(v11 + 16);
      v8 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1)
        sub_1BA7447E8(v8 > 1, v7 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v11 + 16) = v7 + 1;
      v9 = v11 + 16 * v7;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BB6AA358(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BB69E03C(v3);
  swift_bridgeObjectRelease();
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 == *(_QWORD *)(a1 + 16))
  {
    sub_1BA8CB71C();
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ED39F8D8 != -1)
      swift_once();
    v7 = (void *)qword_1ED476490;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
    swift_bridgeObjectRetain();
    v9 = v7;
    v10 = sub_1BB5E6D08(a1);
    swift_bridgeObjectRelease();
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v8 + 64) = v12;
    *(_QWORD *)(v8 + 32) = v11;
    sub_1BB87330C();
    sub_1BB86EF44("Will fetch %lu full headlines for clusters", v15);

    swift_bridgeObjectRelease();
    v13 = v1[24];
    v14 = v1[25];
    __swift_project_boxed_opaque_existential_1(v1 + 21, v13);
    return HeadlineServiceType.fetchHeadlines(for:feedPersonalizer:purpose:)(a1, v1[4], *MEMORY[0x1E0D58690], v13, v14);
  }
}

uint64_t sub_1BB6AA574(uint64_t a1, unint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(_QWORD **), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v57[2];
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD v75[2];

  v59 = a7;
  v60 = a8;
  v65 = a14;
  v67 = a12;
  v61 = a10;
  v62 = a13;
  v66 = sub_1BB86CD3C();
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v63 = (char *)v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v22 = sub_1BB6AC8A8(MEMORY[0x1E0DEE9E0], a2, a3);
  swift_bridgeObjectRelease();
  v23 = a4;
  v24 = *(_QWORD *)(a4 + 16);
  if (v24)
  {
    swift_bridgeObjectRetain();
    v69 = v22;
    swift_bridgeObjectRetain();
    v58 = a5;
    swift_retain();
    v68 = a6;
    swift_bridgeObjectRetain();
    v57[1] = v23;
    v25 = (uint64_t *)(v23 + 48);
    v70 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (*(_QWORD *)(a1 + 16))
      {
        v27 = *(v25 - 1);
        v26 = *v25;
        v28 = *(v25 - 2);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v29 = sub_1BA6E35A8(v28, v27);
        if ((v30 & 1) != 0)
        {
          v31 = a9;
          v32 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v29);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          v33 = v69;
          swift_bridgeObjectRetain();
          v34 = sub_1BB6ADF98(v26, v33);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v35 = sub_1BB6AD444(v34);
          swift_bridgeObjectRelease();
          v36 = v68;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v70 = sub_1BB393F1C(0, v70[2] + 1, 1, v70);
          v38 = v70[2];
          v37 = v70[3];
          if (v38 >= v37 >> 1)
            v70 = sub_1BB393F1C((_QWORD *)(v37 > 1), v38 + 1, 1, v70);
          v39 = v70;
          v70[2] = v38 + 1;
          v40 = &v39[3 * v38];
          v40[4] = v32;
          v40[5] = v35;
          v40[6] = v36;
          a9 = v31;
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
      }
      v25 += 3;
      --v24;
    }
    while (v24);
    a5 = v58;
    swift_release();

    swift_bridgeObjectRelease();
    v22 = v69;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v41 = objc_msgSend(v59, sel_subscribedTags);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  v42 = sub_1BB872DB4();

  v43 = sub_1BB01AC38(v42);
  swift_bridgeObjectRelease();
  v44 = sub_1BA6E43EC(v43);
  v45 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v45);
  v57[-6] = a1;
  v57[-5] = v22;
  v57[-4] = a5;
  v57[-3] = a9;
  v57[-2] = v44;
  v46 = swift_bridgeObjectRetain();
  v47 = sub_1BB6AD714(v46, (void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BB6AD418);
  swift_bridgeObjectRelease();
  if (qword_1ED39F8D8 != -1)
    swift_once();
  v48 = (id)qword_1ED476490;
  sub_1BB86EF68();
  tf_os_signpost_clustering_end();

  v49 = sub_1BB86D138();
  swift_bridgeObjectRetain();
  v50 = sub_1BB6ADF98(v49, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v75[0] = v47;
  v75[1] = v50;
  sub_1BB6A431C(a9, v75, v44, &v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v51 = v71;
  v52 = v72;
  v53 = v63;
  sub_1BB86CD54();
  v54 = sub_1BB86CD30();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v53, v66);
  v55 = sub_1BB6ABE3C(v54);
  swift_bridgeObjectRelease();
  v71 = v70;
  v72 = v51;
  v73 = v52;
  v74 = v55;
  a11(&v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB6AAA64@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>, uint64_t a8)
{
  uint64_t v14;
  unint64_t v15;
  char v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;

  if (*(_QWORD *)(a5 + 16))
  {
    v14 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1BA6E35A8(a2, a3);
    if ((v16 & 1) != 0)
    {
      v17 = *(void **)(*(_QWORD *)(a5 + 56) + 8 * v15);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v18 = sub_1BB6ADF98(a4, a6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = sub_1BB6AD444(v18);
      swift_bridgeObjectRelease();
      result = sub_1BB6A4D58(v17, a8, v14);
      *a7 = v17;
      a7[1] = v19;
      a7[2] = result;
      return result;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  *a7 = 0;
  a7[1] = 0;
  a7[2] = 0;
  return result;
}

id sub_1BB6AAB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *v9;
  id result;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = *(void **)(a5 + 16);
  swift_retain();
  result = objc_msgSend(v9, sel_translationManager);
  if (result)
  {
    v11 = result;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = sub_1BA573ED8;
    *(_QWORD *)(v12 + 24) = v8;
    v14[4] = sub_1BA4D7950;
    v14[5] = v12;
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 1107296256;
    v14[2] = sub_1BAAABC28;
    v14[3] = &block_descriptor_100;
    v13 = _Block_copy(v14);
    swift_release();
    objc_msgSend(v11, sel_fetchTranslationProvider_, v13);
    _Block_release(v13);
    return (id)swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BB6AAC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v17[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = *(void **)(a5 + 16);
  swift_retain();
  v12 = objc_msgSend(v11, sel_subscriptionController);
  if (v12)
  {
    v13 = v12;
    sub_1BB86E050();
    v14 = (void *)sub_1BB86E014();
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = sub_1BA573ED8;
    v15[3] = v10;
    v15[4] = a3;
    v15[5] = a4;
    v17[4] = sub_1BB6AE740;
    v17[5] = v15;
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 1107296256;
    v17[2] = sub_1BB4FA7AC;
    v17[3] = &block_descriptor_39_0;
    v16 = _Block_copy(v17);
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_fetchAllTagsWithCallbackQueue_maximumCachedAge_qualityOfService_completion_, v14, 25, v16, 86400.0);
    _Block_release(v16);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BB6AADE8(void *a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  id v7;
  id v8;
  uint64_t v9;
  id v10;

  if (a1)
  {
    v10 = a1;
    a3();

  }
  else
  {
    v7 = a2;
    if (a2)
    {
      v8 = a2;
      v9 = (uint64_t)v7;
    }
    else
    {
      sub_1BB6AE74C();
      v9 = swift_allocError();
      v7 = (id)v9;
    }
    a5(v9);

  }
}

uint64_t sub_1BB6AAE98(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;

  v3 = a1[19];
  v4 = a1[20];
  __swift_project_boxed_opaque_existential_1(a1 + 16, v3);
  v5 = objc_msgSend((id)objc_opt_self(), sel_cachePolicyWithSoftMaxAge_, 86400.0);
  v6 = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v4 + 24))(a2, v5, v3, v4);

  return v6;
}

uint64_t FeedClusteringService.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return v0;
}

uint64_t FeedClusteringService.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedClusteringService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedClusteringService.__allocating_init(cloudContext:allowlistProvider:feedPersonalizer:personalizationService:headlineClusterOrderer:topicClusteringJournalStorageService:tagService:headlineService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1BB6AB000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB6A8BB0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(void **)(v4 + 32), *(id *)(v4 + 40), *(_QWORD *)(v4 + 48), *(void **)(v4 + 56));
}

void sub_1BB6AB02C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A4D70, type metadata accessor for FeedClusteringOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB6AB048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int *v12;
  unsigned int (*v13)(_QWORD, _QWORD, _QWORD);
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(unint64_t, uint64_t, uint64_t);
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(_QWORD, _QWORD, _QWORD);

  v1 = sub_1BB86D0D8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (int *)type metadata accessor for FeedClusteringRequest(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = (*(unsigned __int8 *)(v7 + 80) + v5 + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v76 = *(_QWORD *)(v7 + 64);
  v9 = sub_1BB86EF74();
  v78 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  __swift_destroy_boxed_opaque_existential_1(v0 + v5);
  v77 = v8;
  v10 = v0 + v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v0 + v8 + v6[10];
  v12 = (int *)type metadata accessor for FeedClusteringOptions(0);
  v13 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(*((_QWORD *)v12 - 1) + 48);
  v81 = v13;
  if (!v13(v11, 1, v12))
  {
    v14 = v11 + v12[5];
    v15 = sub_1BB86D078();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v17(v14, 1, v15))
      (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v14, v15);
    v18 = v11 + v12[7];
    if (!v17(v18, 1, v15))
      (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v18, v15);
    v19 = v11 + v12[8];
    v20 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v19 + *(int *)(v20 + 24), v15);
      swift_bridgeObjectRelease();
    }
    v21 = v11 + v12[10];
    if (!v17(v21, 1, v15))
      (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v21, v15);
    v22 = v11 + v12[12];
    if (!v17(v22, 1, v15))
      (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v22, v15);
    v23 = v11 + v12[14];
    if (!v17(v23, 1, v15))
      (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v23, v15);
    v24 = v11 + v12[16];
    if (!v17(v24, 1, v15))
      (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v24, v15);
    if (*(_QWORD *)(v11 + v12[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v25 = v11 + v12[19];
    v26 = sub_1BB86D024();
    v27 = *(_QWORD *)(v26 - 8);
    v13 = v81;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      (*(void (**)(unint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  v28 = v10 + v6[11];
  if (!v13(v28, 1, v12))
  {
    v29 = v28 + v12[5];
    v30 = sub_1BB86D078();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
    if (!v32(v29, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    v33 = v28 + v12[7];
    if (!v32(v33, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v30);
    v34 = v28 + v12[8];
    v35 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v34 + *(int *)(v35 + 24), v30);
      swift_bridgeObjectRelease();
    }
    v36 = v28 + v12[10];
    if (!v32(v36, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v36, v30);
    v37 = v28 + v12[12];
    if (!v32(v37, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v37, v30);
    v38 = v28 + v12[14];
    if (!v32(v38, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v38, v30);
    v39 = v28 + v12[16];
    if (!v32(v39, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v39, v30);
    if (*(_QWORD *)(v28 + v12[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v40 = v28 + v12[19];
    v41 = sub_1BB86D024();
    v42 = *(_QWORD *)(v41 - 8);
    v13 = v81;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
  }
  swift_bridgeObjectRelease();
  v43 = v10 + v6[13];
  if (!v13(v43, 1, v12))
  {
    v44 = v43 + v12[5];
    v45 = sub_1BB86D078();
    v46 = *(_QWORD *)(v45 - 8);
    v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
    if (!v47(v44, 1, v45))
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    v48 = v43 + v12[7];
    if (!v47(v48, 1, v45))
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v45);
    v49 = v43 + v12[8];
    v50 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v49 + *(int *)(v50 + 24), v45);
      swift_bridgeObjectRelease();
    }
    v51 = v43 + v12[10];
    if (!v47(v51, 1, v45))
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v51, v45);
    v52 = v43 + v12[12];
    if (!v47(v52, 1, v45))
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v52, v45);
    v53 = v43 + v12[14];
    if (!v47(v53, 1, v45))
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v53, v45);
    v54 = v43 + v12[16];
    if (!v47(v54, 1, v45))
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v54, v45);
    if (*(_QWORD *)(v43 + v12[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v55 = v43 + v12[19];
    v56 = sub_1BB86D024();
    v57 = *(_QWORD *)(v56 - 8);
    v13 = v81;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v56);
  }
  v58 = v10 + v6[14];
  if (!v13(v58, 1, v12))
  {
    v59 = v58 + v12[5];
    v60 = sub_1BB86D078();
    v61 = *(_QWORD *)(v60 - 8);
    v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
    if (!v62(v59, 1, v60))
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v59, v60);
    v63 = v58 + v12[7];
    if (!v62(v63, 1, v60))
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v63, v60);
    v64 = v58 + v12[8];
    v65 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v64, 1, v65))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v64 + *(int *)(v65 + 24), v60);
      swift_bridgeObjectRelease();
    }
    v66 = v58 + v12[10];
    if (!v62(v66, 1, v60))
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v66, v60);
    v67 = v58 + v12[12];
    if (!v62(v67, 1, v60))
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v67, v60);
    v68 = v58 + v12[14];
    if (!v62(v68, 1, v60))
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v68, v60);
    v69 = v58 + v12[16];
    if (!v62(v69, 1, v60))
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v69, v60);
    if (*(_QWORD *)(v58 + v12[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v70 = v58 + v12[19];
    v71 = sub_1BB86D024();
    v72 = *(_QWORD *)(v71 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v70, v71);
  }
  v73 = (v76 + v77 + 7) & 0xFFFFFFFFFFFFFFF8;
  v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v79 + 8))(v0 + ((v78 + v74 + 8) & ~v78), v80);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6AB9BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = *(_QWORD *)(sub_1BB86D0D8() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(type metadata accessor for FeedClusteringRequest(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + v6 + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(sub_1BB86EF74() - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + v10 + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BB6A9664(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(void **)(v1 + v5), v1 + v6, (uint64_t *)(v1 + v8), *(void **)(v1 + v9), *(void **)(v1 + v10), v1 + v12, *(_QWORD *)(v1 + v13), *(_QWORD *)(v1 + v13 + 8));
}

void sub_1BB6ABAD0(double a1, double a2)
{
  if ((~COERCE__INT64(a2 - a1) & 0x7FF0000000000000) != 0)
    sub_1BB5BD00C(0x20000000000001uLL);
  else
    __break(1u);
}

uint64_t sub_1BB6ABB40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char **v19;
  BOOL v20;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char **v44;

  sub_1BB6ADD4C();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x1E0C80A78](v3);
  v41 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FeedClusteringOptions(0);
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char **)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB6AE5C8();
  result = sub_1BB873F48();
  v8 = 0;
  v42 = a1;
  v43 = result;
  v11 = *(_QWORD *)(a1 + 64);
  v10 = a1 + 64;
  v9 = v11;
  v12 = 1 << *(_BYTE *)(v10 - 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v9;
  v35 = v10;
  v36 = (unint64_t)(v12 + 63) >> 6;
  v37 = result + 64;
  v15 = type metadata accessor for FeedClusteringOptions;
  v16 = (uint64_t)v41;
  if ((v13 & v9) == 0)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  v18 = v17 | (v8 << 6);
  v19 = v44;
  while (1)
  {
    v23 = (uint64_t *)(*(_QWORD *)(v42 + 48) + 16 * v18);
    v24 = *v23;
    v25 = v23[1];
    sub_1BA4C2DD8(*(_QWORD *)(v42 + 56) + *(_QWORD *)(v40 + 72) * v18, (uint64_t)v19, v15);
    swift_bridgeObjectRetain();
    sub_1BB6A39E8(v19, v16);
    if (v1)
    {
      swift_bridgeObjectRelease();
      v32 = (uint64_t)v19;
      v33 = v43;
      swift_release();
      sub_1BA4A2E80(v32, type metadata accessor for FeedClusteringOptions);
      return v33;
    }
    v26 = (uint64_t)v19;
    v27 = v15;
    sub_1BA4A2E80(v26, v15);
    *(_QWORD *)(v37 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v28 = v43;
    v29 = (_QWORD *)(*(_QWORD *)(v43 + 48) + 16 * v18);
    *v29 = v24;
    v29[1] = v25;
    result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v38 + 32))(*(_QWORD *)(v28 + 56) + *(_QWORD *)(v38 + 72) * v18, v16, v39);
    v30 = *(_QWORD *)(v28 + 16);
    v20 = __OFADD__(v30, 1);
    v31 = v30 + 1;
    if (v20)
      break;
    *(_QWORD *)(v28 + 16) = v31;
    v15 = v27;
    if (v14)
      goto LABEL_4;
LABEL_5:
    v20 = __OFADD__(v8++, 1);
    v19 = v44;
    if (v20)
      goto LABEL_28;
    if (v8 >= v36)
      return v43;
    v21 = *(_QWORD *)(v35 + 8 * v8);
    if (!v21)
    {
      v22 = v8 + 1;
      if (v8 + 1 >= v36)
        return v43;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (v21)
        goto LABEL_14;
      v22 = v8 + 2;
      if (v8 + 2 >= v36)
        return v43;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (v21)
      {
LABEL_14:
        v8 = v22;
        goto LABEL_15;
      }
      v22 = v8 + 3;
      if (v8 + 3 < v36)
      {
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            v8 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_29;
            if (v8 >= v36)
              return v43;
            v21 = *(_QWORD *)(v35 + 8 * v8);
            ++v22;
            if (v21)
              goto LABEL_15;
          }
        }
        goto LABEL_14;
      }
      return v43;
    }
LABEL_15:
    v14 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v8 << 6);
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BB6ABE3C(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  sub_1BA8F624C();
  result = sub_1BB873F48();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v16;
    result = v16[1];
    v18 = (_QWORD *)(v3[6] + 16 * i);
    v19 = *(_OWORD *)(*(_QWORD *)(a1 + 56) + 16 * i);
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *v18 = v17;
    v18[1] = result;
    *(_OWORD *)(v3[7] + 16 * i) = v19;
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1BB6ABFE0(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t i;
  void *v9;
  id v10;
  uint64_t v11;
  id result;
  void *v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;

  v4 = a2;
  v5 = a1;
  if (!(a2 >> 62))
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease();
    return (id)v5;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  v6 = sub_1BB873F30();
  if (!v6)
    goto LABEL_18;
LABEL_3:
  v17 = v4;
  v7 = v4 & 0xC000000000000001;
  for (i = 4; ; ++i)
  {
    v5 = i - 4;
    if (v7)
      v10 = (id)MEMORY[0x1BCCE4630](i - 4, v4);
    else
      v10 = *(id *)(v4 + 8 * i);
    v9 = v10;
    v11 = i - 3;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    result = objc_msgSend(v10, sel_tagID);
    if (!result)
      break;
    v13 = result;
    v14 = objc_msgSend(a3, sel_topicTranslationForTagID_, result);

    if (v14)
    {
      v15 = objc_msgSend(v14, sel_articleTopic);

      if (v15)
      {
        v16 = v15;
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();

        v9 = v16;
        v4 = v17;
      }
    }

    if (v11 == v6)
    {
      swift_bridgeObjectRelease();
      return (id)a1;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_1BB6AC1D0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void **v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  _QWORD *v29;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;

  v41 = a8;
  v18 = *result;
  v17 = result[1];
  v19 = result[2];
  v20 = result[3];
  v21 = result[4];
  v36 = *result;
  v37 = v17;
  v38 = v19;
  v39 = v20;
  v40 = v21;
  v22 = *(_QWORD *)(a2 + 16);
  if (v22)
  {
    v29 = a9;
    swift_bridgeObjectRetain();
    v24 = (void **)(a2 + 48);
    while (1)
    {
      v25 = *(v24 - 1);
      v26 = *v24;
      v35[0] = *(v24 - 2);
      v35[1] = v25;
      v35[2] = v26;
      v27 = v26;
      swift_unknownObjectRetain();
      v28 = v25;
      sub_1BB6A6D48((uint64_t)&v36, (uint64_t)v35, a3, a4, a5, a6, a7, v41, a10, a11, a12, a13, a14 & 1, a15 & 1, a16);
      if (v16)
        break;
      v24 += 3;

      swift_unknownObjectRelease();
      if (!--v22)
      {
        result = (uint64_t *)swift_bridgeObjectRelease();
        v18 = v36;
        v17 = v37;
        v19 = v38;
        v20 = v39;
        v21 = v40;
        a9 = v29;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    *a9 = v18;
    a9[1] = v17;
    a9[2] = v19;
    a9[3] = v20;
    a9[4] = v21;
  }
  return result;
}

uint64_t sub_1BB6AC38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a1;
  v36 = a2 + 56;
  v12 = 1 << *(_BYTE *)(a2 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(a2 + 56);
  v15 = (unint64_t)(v12 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v32 = a6;
  if (v14)
    goto LABEL_6;
LABEL_7:
  v20 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v20 < v15)
    {
      v21 = *(_QWORD *)(v36 + 8 * v20);
      ++v17;
      if (v21)
        goto LABEL_22;
      v17 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_40;
      v21 = *(_QWORD *)(v36 + 8 * v17);
      if (v21)
        goto LABEL_22;
      v17 = v20 + 2;
      if (v20 + 2 >= v15)
        goto LABEL_40;
      v21 = *(_QWORD *)(v36 + 8 * v17);
      if (v21)
        goto LABEL_22;
      v17 = v20 + 3;
      if (v20 + 3 >= v15)
        goto LABEL_40;
      v21 = *(_QWORD *)(v36 + 8 * v17);
      if (v21)
      {
LABEL_22:
        v14 = (v21 - 1) & v21;
        for (i = __clz(__rbit64(v21)) + (v17 << 6); ; i = v18 | (v17 << 6))
        {
          v23 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * i);
          v24 = *v23;
          v25 = v23[1];
          swift_bridgeObjectRetain();
          if ((sub_1BA761FE4(v24, v25, a3) & 1) != 0
            || (sub_1BA761FE4(v24, v25, a4) & 1) != 0
            || (sub_1BA761FE4(v24, v25, a5) & 1) != 0)
          {
            swift_bridgeObjectRetain();
            sub_1BA6EE5AC(&v37, v24, v25);
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            if (!v14)
              goto LABEL_7;
          }
          else
          {
            if (*(_QWORD *)(a6 + 16))
            {
              swift_bridgeObjectRetain();
              v26 = sub_1BA6E35A8(v24, v25);
              if ((v27 & 1) != 0)
                v28 = *(_QWORD *)(*(_QWORD *)(a6 + 56) + 8 * v26);
              else
                v28 = 0;
              swift_bridgeObjectRelease();
            }
            else
            {
              v28 = 0;
            }
            if (*(_QWORD *)(a7 + 16))
            {
              swift_bridgeObjectRetain();
              v29 = sub_1BA6E35A8(v24, v25);
              if ((v30 & 1) != 0)
              {
                v31 = *(_QWORD *)(*(_QWORD *)(a7 + 56) + 8 * v29);
                swift_bridgeObjectRelease();
                if (v31 > 0 && (double)v28 / (double)v31 > a8)
                {
                  swift_bridgeObjectRetain();
                  sub_1BA6EE5AC(&v37, v24, v25);
                  swift_bridgeObjectRelease();
                }
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            result = swift_bridgeObjectRelease();
            a6 = v32;
            if (!v14)
              goto LABEL_7;
          }
LABEL_6:
          v18 = __clz(__rbit64(v14));
          v14 &= v14 - 1;
        }
      }
      v22 = v20 + 4;
      if (v22 < v15)
      {
        v21 = *(_QWORD *)(v36 + 8 * v22);
        if (v21)
        {
          v17 = v22;
          goto LABEL_22;
        }
        while (1)
        {
          v17 = v22 + 1;
          if (__OFADD__(v22, 1))
            goto LABEL_42;
          if (v17 >= v15)
            break;
          v21 = *(_QWORD *)(v36 + 8 * v17);
          ++v22;
          if (v21)
            goto LABEL_22;
        }
      }
    }
LABEL_40:
    swift_release();
    return v38;
  }
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_1BB6AC690(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  __int128 v22;
  unint64_t v23;

  v4 = a2;
  if (a2 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v23 = v4 & 0xC000000000000001;
      v6 = 4;
      v21 = v4;
      do
      {
        v7 = v6 - 4;
        if (v23)
        {
          v8 = (void *)MEMORY[0x1BCCE4630](v6 - 4, v4);
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_18;
        }
        else
        {
          v8 = *(void **)(v4 + 8 * v6);
          swift_unknownObjectRetain();
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v10 = objc_msgSend(v8, sel_identifier);
        v11 = sub_1BB8729A0();
        v13 = v12;

        if (*(_QWORD *)(a3 + 16) && (v14 = sub_1BA6E35A8(v11, v13), (v15 & 1) != 0))
        {
          v22 = *(_OWORD *)(*(_QWORD *)(a3 + 56) + 16 * v14);
          swift_unknownObjectRetain_n();
          v16 = *((id *)&v22 + 1);
          swift_bridgeObjectRelease();
          v17 = v16;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            a1 = sub_1BB38F890(0, a1[2] + 1, 1, a1);
          v19 = a1[2];
          v18 = a1[3];
          if (v19 >= v18 >> 1)
            a1 = sub_1BB38F890((_QWORD *)(v18 > 1), v19 + 1, 1, a1);
          a1[2] = v19 + 1;
          *(_OWORD *)&a1[2 * v19 + 4] = v22;
          swift_unknownObjectRelease();

          swift_unknownObjectRelease();
          v4 = v21;
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        ++v6;
      }
      while (v9 != v5);
    }
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB6AC8A8(_QWORD *a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t result;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;

  v4 = a2;
  if (a2 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    v6 = sub_1BB873F30();
    if (v6)
      goto LABEL_3;
LABEL_29:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_29;
LABEL_3:
  v42 = v4;
  v43 = v4 & 0xC000000000000001;
  v7 = 4;
  v41 = a3;
  while (1)
  {
    v9 = v7 - 4;
    if (v43)
    {
      v10 = (void *)MEMORY[0x1BCCE4630](v7 - 4, v4);
      v11 = v7 - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_25;
    }
    else
    {
      v10 = *(void **)(v4 + 8 * v7);
      swift_unknownObjectRetain();
      v11 = v7 - 3;
      if (__OFADD__(v9, 1))
      {
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    v44 = v11;
    v12 = objc_msgSend(v10, sel_identifier);
    v13 = sub_1BB8729A0();
    v45 = v14;

    v15 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v16 = sub_1BB8729A0();
    v18 = v17;

    if (a3[2] && (v19 = sub_1BA6E35A8(v16, v18), (v20 & 1) != 0))
    {
      v21 = a3[7] + 24 * v19;
      v22 = *(void **)(v21 + 8);
      v23 = *(id *)(v21 + 16);
      swift_unknownObjectRetain();
      v24 = v22;

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v46 = a1;
    v26 = v13;
    a3 = a1;
    v4 = sub_1BA6E35A8(v13, v45);
    v28 = a1[2];
    v29 = (v27 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      goto LABEL_26;
    v31 = v27;
    if (a1[3] < v30)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      a3 = &v46;
      sub_1BB4CB140();
    }
    v32 = v45;
    a1 = v46;
    if ((v31 & 1) != 0)
    {
LABEL_4:
      v8 = a1[7] + 16 * v4;

      swift_unknownObjectRelease();
      *(_QWORD *)v8 = v10;
      *(_QWORD *)(v8 + 8) = v24;
      goto LABEL_5;
    }
LABEL_23:
    a1[(v4 >> 6) + 8] |= 1 << v4;
    v35 = (uint64_t *)(a1[6] + 16 * v4);
    *v35 = v26;
    v35[1] = v32;
    v36 = (_QWORD *)(a1[7] + 16 * v4);
    *v36 = v10;
    v36[1] = v24;
    v37 = a1[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_27;
    a1[2] = v39;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v7;
    a3 = v41;
    v4 = v42;
    if (v44 == v6)
      goto LABEL_29;
  }
  sub_1BB4BC6C8(v30, isUniquelyReferenced_nonNull_native);
  a3 = v46;
  v32 = v45;
  v33 = sub_1BA6E35A8(v26, v45);
  if ((v31 & 1) == (v34 & 1))
  {
    v4 = v33;
    a1 = v46;
    if ((v31 & 1) != 0)
      goto LABEL_4;
    goto LABEL_23;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB6ACBD8(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v8;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t i;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD v54[2];
  uint64_t v55;
  uint64_t v56[3];

  v51 = a5;
  v52 = a6;
  v49 = a3;
  v50 = a4;
  v12 = *a2;
  v47 = a2[1];
  v48 = v12;
  v46 = *((_QWORD *)a2 + 4);
  sub_1BB6AE228(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB86CD18();
  v53 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v45 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v40 = (char *)&v39 - v19;
  v20 = *(_QWORD *)(a1 + 56);
  v43 = a1 + 56;
  v21 = 1 << *(_BYTE *)(a1 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v44 = (unint64_t)(v21 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v25 = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  v42 = a1;
  v41 = a7;
  if (v23)
    goto LABEL_6;
LABEL_7:
  if (__OFADD__(v25++, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v25 >= v44)
    goto LABEL_33;
  v30 = *(_QWORD *)(v43 + 8 * v25);
  if (v30)
    goto LABEL_19;
  v31 = v25 + 1;
  if (v25 + 1 >= v44)
    goto LABEL_33;
  v30 = *(_QWORD *)(v43 + 8 * v31);
  if (v30)
  {
LABEL_18:
    v25 = v31;
LABEL_19:
    v23 = (v30 - 1) & v30;
    for (i = __clz(__rbit64(v30)) + (v25 << 6); ; i = v27 | (v25 << 6))
    {
      v32 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
      v33 = v32[1];
      v56[0] = *v32;
      v56[1] = v33;
      v54[0] = v48;
      v54[1] = v47;
      v55 = v46;
      swift_bridgeObjectRetain();
      sub_1BB6A87F4(v56, (uint64_t)v54, v49, v50, v51, v52, a7, (uint64_t)v15, a8);
      if (v8)
        break;
      swift_bridgeObjectRelease();
      v34 = v53;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v15, 1, v16) == 1)
      {
        result = sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BB6AE228);
        if (!v23)
          goto LABEL_7;
      }
      else
      {
        v35 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
        v36 = v40;
        v35(v40, v15, v16);
        v35(v45, v36, v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1BB393EF4(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
        v38 = *(_QWORD *)(v26 + 16);
        v37 = *(_QWORD *)(v26 + 24);
        if (v38 >= v37 >> 1)
          v26 = sub_1BB393EF4(v37 > 1, v38 + 1, 1, v26);
        *(_QWORD *)(v26 + 16) = v38 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v35)(v26+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(_QWORD *)(v53 + 72) * v38, v45, v16);
        a1 = v42;
        a7 = v41;
        if (!v23)
          goto LABEL_7;
      }
LABEL_6:
      v27 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return v26;
  }
  v31 = v25 + 2;
  if (v25 + 2 >= v44)
  {
LABEL_33:
    swift_release();
    return v26;
  }
  v30 = *(_QWORD *)(v43 + 8 * v31);
  if (v30)
    goto LABEL_18;
  v31 = v25 + 3;
  if (v25 + 3 >= v44)
    goto LABEL_33;
  v30 = *(_QWORD *)(v43 + 8 * v31);
  if (v30)
    goto LABEL_18;
  v31 = v25 + 4;
  if (v25 + 4 >= v44)
    goto LABEL_33;
  v30 = *(_QWORD *)(v43 + 8 * v31);
  if (v30)
    goto LABEL_18;
  while (1)
  {
    v25 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v25 >= v44)
      goto LABEL_33;
    v30 = *(_QWORD *)(v43 + 8 * v25);
    ++v31;
    if (v30)
      goto LABEL_19;
  }
LABEL_36:
  __break(1u);
  return result;
}

_QWORD *sub_1BB6ACFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain_n();
      v8 = sub_1BA6E35A8(v7, v6);
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(a2 + 56) + 24 * v8;
        v18 = *(_OWORD *)v10;
        v11 = *(void **)(v10 + 16);
        v12 = v11;
        swift_unknownObjectRetain();
        v13 = *((id *)&v18 + 1);
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1BB3929D8(0, v5[2] + 1, 1, v5);
        v15 = v5[2];
        v14 = v5[3];
        if (v15 >= v14 >> 1)
          v5 = sub_1BB3929D8((_QWORD *)(v14 > 1), v15 + 1, 1, v5);
        v5[2] = v15 + 1;
        v16 = &v5[3 * v15];
        *((_OWORD *)v16 + 2) = v18;
        v16[6] = v11;
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BB6AD13C()
{
  uint64_t v0;

  return sub_1BB6AAE98(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1BB6AD154()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B9640;
  if (!qword_1ED3B9640)
  {
    sub_1BA4C3E90(255, (unint64_t *)&qword_1ED3B9630, (unint64_t *)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B9640);
  }
  return result;
}

uint64_t sub_1BB6AD1BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = sub_1BB86D0D8();
  v1 = *(_QWORD *)(v13 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v12 = sub_1BB86EF74();
  v4 = *(_QWORD *)(v12 - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = sub_1BB86D15C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v13);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v12);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v11);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6AD30C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v5 = *(_QWORD *)(sub_1BB86D0D8() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_1BB86EF74() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(sub_1BB86D15C() - 8);
  v12 = (v10 + *(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return sub_1BB6AA574(a1, a2, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(void **)(v2 + 48), *(_QWORD *)(v2 + 56), v2 + v6, v2 + v9, *(void (**)(_QWORD **))(v2 + v10), *(_QWORD *)(v2 + v10 + 8), v2 + v12, *(_QWORD *)(v2 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BB6AD3F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6AD418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t *v5;

  return sub_1BB6AAA64(a1, a2, a3, a4, v5[2], v5[3], a5, v5[6]);
}

uint64_t sub_1BB6AD444(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t result;
  __int128 v29;

  v1 = a1;
  v2 = a1[2];
  if (!v2)
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_18:
    sub_1BB69D8A8((uint64_t)v1);
    sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3D4450);
    v25 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    v26 = (id)FCPromoteOneHeadlineIgnoringProminence();

    if (v26)
    {
      v27 = sub_1BB872DB4();

      swift_bridgeObjectRetain();
      v1 = sub_1BB6AC690(MEMORY[0x1E0DEE9D8], v27, (uint64_t)v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v1;
  }
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v29 = *(_OWORD *)&v1[2 * v3 + 4];
    v6 = (void *)v1[2 * v3 + 4];
    swift_unknownObjectRetain();
    v7 = *((id *)&v29 + 1);
    v8 = objc_msgSend(v6, sel_identifier);
    v9 = sub_1BB8729A0();
    v11 = v10;

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = sub_1BA6E35A8(v9, v11);
    v15 = v4[2];
    v16 = (v13 & 1) == 0;
    v17 = v15 + v16;
    if (__OFADD__(v15, v16))
      break;
    v18 = v13;
    if (v4[3] >= v17)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v13 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BB4CB140();
        if ((v18 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BB4BC6C8(v17, isUniquelyReferenced_nonNull_native);
      v19 = sub_1BA6E35A8(v9, v11);
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_24;
      v14 = v19;
      if ((v18 & 1) != 0)
      {
LABEL_3:
        v5 = v4[7] + 16 * v14;

        swift_unknownObjectRelease();
        *(_OWORD *)v5 = v29;
        goto LABEL_4;
      }
    }
    v4[(v14 >> 6) + 8] |= 1 << v14;
    v21 = (uint64_t *)(v4[6] + 16 * v14);
    *v21 = v9;
    v21[1] = v11;
    *(_OWORD *)(v4[7] + 16 * v14) = v29;
    v22 = v4[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_23;
    v4[2] = v24;
    swift_bridgeObjectRetain();
LABEL_4:
    ++v3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v2 == v3)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

_QWORD *sub_1BB6AD714(uint64_t a1, void (*a2)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  _QWORD *v15;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v9 = *(v5 - 1);
    v8 = *v5;
    v10 = *(v5 - 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v18, v4, v10, v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((_QWORD)v18)
    {
      v17 = v18;
      v11 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1BB390720(0, v6[2] + 1, 1, v6);
      v13 = v6[2];
      v12 = v6[3];
      v14 = v17;
      if (v13 >= v12 >> 1)
      {
        v15 = sub_1BB390720((_QWORD *)(v12 > 1), v13 + 1, 1, v6);
        v14 = v17;
        v6 = v15;
      }
      v6[2] = v13 + 1;
      v7 = &v6[3 * v13];
      *((_OWORD *)v7 + 2) = v14;
      v7[6] = v11;
    }
    ++v4;
    v5 += 3;
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BB6AD87C(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BB6AD8A8(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BB6AD8D4()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  unint64_t v2;
  uint64_t v3;

  if (!qword_1ED3AD150)
  {
    sub_1BB86CFC4();
    sub_1BB86CFD0();
    sub_1BB86CFDC();
    sub_1BB86CFB8();
    sub_1BB86CF94();
    sub_1BB86CFA0();
    sub_1BB86CFE8();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA7C0];
    sub_1BB86CFAC();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA770];
    sub_1BA50AD30(&qword_1ED3A24B8, 255, v0, MEMORY[0x1E0DDA7B8]);
    sub_1BA50AD30(&qword_1ED3A24B0, 255, v1, MEMORY[0x1E0DDA768]);
    v2 = sub_1BB86D054();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1ED3AD150);
  }
}

void sub_1BB6ADA48()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  unint64_t v2;
  uint64_t v3;

  if (!qword_1ED3AD108)
  {
    sub_1BB86CDCC();
    sub_1BB86CDD8();
    sub_1BB86CDE4();
    sub_1BB86CDC0();
    sub_1BB86CDA8();
    sub_1BB86CDB4();
    sub_1BB86CDF0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA528];
    sub_1BB86CDFC();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA538];
    sub_1BA50AD30(&qword_1ED3A0CF0, 255, v0, MEMORY[0x1E0DDA520]);
    sub_1BA50AD30((unint64_t *)&unk_1ED3A2468, 255, v1, MEMORY[0x1E0DDA530]);
    v2 = sub_1BB86D054();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1ED3AD108);
  }
}

void sub_1BB6ADBBC()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  unint64_t v2;
  uint64_t v3;

  if (!qword_1ED3AD130)
  {
    sub_1BB86CF04();
    sub_1BB86CF10();
    sub_1BB86CF1C();
    sub_1BB86CEF8();
    sub_1BB86CED4();
    sub_1BB86CEE0();
    sub_1BB86CF28();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA6C0];
    sub_1BB86CEEC();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA670];
    sub_1BA50AD30(&qword_1ED3A2498, 255, v0, MEMORY[0x1E0DDA6B8]);
    sub_1BA50AD30(&qword_1ED3A2490, 255, v1, MEMORY[0x1E0DDA668]);
    v2 = sub_1BB86D054();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1ED3AD130);
  }
}

void sub_1BB6ADD30(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3AD120, (uint64_t (*)(uint64_t))sub_1BB6ADD4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB6ADD4C()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  unint64_t v2;
  uint64_t v3;

  if (!qword_1ED3AD118)
  {
    sub_1BB86CE80();
    sub_1BB86CE98();
    sub_1BB86CEB0();
    sub_1BB86CE68();
    sub_1BB86CE2C();
    sub_1BB86CE44();
    sub_1BB86CEC8();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA638];
    sub_1BB86CE50();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA598];
    sub_1BA50AD30((unint64_t *)&unk_1ED3A2480, 255, v0, MEMORY[0x1E0DDA630]);
    sub_1BA50AD30(&qword_1ED3A2478, 255, v1, MEMORY[0x1E0DDA590]);
    v2 = sub_1BB86D054();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1ED3AD118);
  }
}

uint64_t sub_1BB6ADEC0()
{
  return MEMORY[0x1E0DDA5D0];
}

uint64_t sub_1BB6ADECC()
{
  return MEMORY[0x1E0DDA5F0];
}

uint64_t sub_1BB6ADED8()
{
  return MEMORY[0x1E0DDA610];
}

uint64_t sub_1BB6ADEE4()
{
  return MEMORY[0x1E0DDA5B0];
}

uint64_t sub_1BB6ADEF0()
{
  return MEMORY[0x1E0DDA558];
}

uint64_t sub_1BB6ADEFC()
{
  return MEMORY[0x1E0DDA578];
}

uint64_t sub_1BB6ADF08()
{
  return sub_1BA50AD30((unint64_t *)&unk_1ED3A2480, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA638], MEMORY[0x1E0DDA630]);
}

uint64_t sub_1BB6ADF38()
{
  return sub_1BA50AD30(&qword_1ED3A2478, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA598], MEMORY[0x1E0DDA590]);
}

uint64_t sub_1BB6ADF68()
{
  sub_1BB6ADD4C();
  return sub_1BB86D030();
}

_QWORD *sub_1BB6ADF98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain_n();
      v8 = sub_1BA6E35A8(v7, v6);
      if ((v9 & 1) != 0)
      {
        v14 = *(_OWORD *)(*(_QWORD *)(a2 + 56) + 16 * v8);
        swift_unknownObjectRetain();
        v10 = *((id *)&v14 + 1);
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1BB38F890(0, v5[2] + 1, 1, v5);
        v12 = v5[2];
        v11 = v5[3];
        if (v12 >= v11 >> 1)
          v5 = sub_1BB38F890((_QWORD *)(v11 > 1), v12 + 1, 1, v5);
        v5[2] = v12 + 1;
        *(_OWORD *)&v5[2 * v12 + 4] = v14;
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BB6AE0F0()
{
  uint64_t v0;

  return sub_1BB6A5E5C(*(_WORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BB6AE110()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB6AE15C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BB6A6158(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(_QWORD *)(v1 + 56), *(unsigned __int16 *)(v1 + 64), *(double *)(v1 + 72));
}

void sub_1BB6AE184()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t TupleTypeMetadata2;
  uint64_t v2;

  if (!qword_1ED3AAD78)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
    sub_1BA4B07F0(255, &qword_1ED3AAD70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA248], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA4B07F0(255, &qword_1ED3AAD68, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA188], v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AAD78);
  }
}

void sub_1BB6AE228(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A32F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA188], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB6AE244(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v24 = result + 32;
  v5 = a2 + 56;
  v23 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v4 <= v2)
      v6 = v2;
    else
      v6 = v4;
    v25 = v6;
    while (1)
    {
      if (v4 == v25)
      {
        __break(1u);
        return result;
      }
      v7 = (uint64_t *)(v24 + 16 * v4);
      v9 = *v7;
      v8 = v7[1];
      ++v4;
      if (!*(_QWORD *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        goto LABEL_25;
      }
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v10 = sub_1BB874608();
      v11 = -1 << *(_BYTE *)(a2 + 32);
      v12 = v10 & ~v11;
      if (((*(_QWORD *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_25;
      v13 = *(_QWORD *)(a2 + 48);
      v14 = (_QWORD *)(v13 + 16 * v12);
      v15 = *v14 == v9 && v14[1] == v8;
      if (!v15 && (sub_1BB874398() & 1) == 0)
        break;
LABEL_7:
      result = swift_bridgeObjectRelease();
      if (v4 == v2)
        return v23;
    }
    v16 = ~v11;
    while (1)
    {
      v12 = (v12 + 1) & v16;
      if (((*(_QWORD *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        break;
      v17 = (_QWORD *)(v13 + 16 * v12);
      v18 = *v17 == v9 && v17[1] == v8;
      if (v18 || (sub_1BB874398() & 1) != 0)
        goto LABEL_7;
    }
LABEL_25:
    v19 = v23;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1BA7447E8(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v19 = v23;
    }
    v21 = *(_QWORD *)(v19 + 16);
    v20 = *(_QWORD *)(v19 + 24);
    if (v21 >= v20 >> 1)
    {
      result = sub_1BA7447E8(v20 > 1, v21 + 1, 1);
      v19 = v23;
    }
    *(_QWORD *)(v19 + 16) = v21 + 1;
    v23 = v19;
    v22 = v19 + 16 * v21;
    *(_QWORD *)(v22 + 32) = v9;
    *(_QWORD *)(v22 + 40) = v8;
  }
  while (v4 != v2);
  return v23;
}

void sub_1BB6AE454()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  unint64_t v2;
  uint64_t v3;

  if (!qword_1ED3AD140)
  {
    sub_1BB86CF64();
    sub_1BB86CF70();
    sub_1BB86CF7C();
    sub_1BB86CF58();
    sub_1BB86CF34();
    sub_1BB86CF40();
    sub_1BB86CF88();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA740];
    sub_1BB86CF4C();
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA6F0];
    sub_1BA50AD30(&qword_1ED3A24A8, 255, v0, MEMORY[0x1E0DDA738]);
    sub_1BA50AD30(&qword_1ED3A24A0, 255, v1, MEMORY[0x1E0DDA6E8]);
    v2 = sub_1BB86D054();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1ED3AD140);
  }
}

void sub_1BB6AE5C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE528)
  {
    sub_1BB6ADD4C();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE528);
  }
}

void sub_1BB6AE62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BB6AAC90(a1, a2, a3, a4, v4);
}

void sub_1BB6AE634()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C350)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED39DA78);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C350);
  }
}

id sub_1BB6AE698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB6AAB80(a1, a2, a3, a4, v4);
}

void sub_1BB6AE6A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39C358)
  {
    sub_1BA4C3E90(255, (unint64_t *)&unk_1ED39DA90, &qword_1ED39DA88, (uint64_t)&protocolRef_FCTranslationProvider, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39C358);
  }
}

uint64_t sub_1BB6AE714()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB6AE740(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BB6AADE8(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(uint64_t))(v2 + 32));
}

unint64_t sub_1BB6AE74C()
{
  unint64_t result;

  result = qword_1EF2CA3B0;
  if (!qword_1EF2CA3B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D11C, &type metadata for FeedClusteringService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2CA3B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedClusteringService.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB6AE7D0 + 4 * asc_1BB93CF70[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB6AE7F0 + 4 * byte_1BB93CF75[v4]))();
}

_BYTE *sub_1BB6AE7D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB6AE7F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6AE7F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6AE800(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6AE808(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6AE810(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedClusteringService.Errors()
{
  return &type metadata for FeedClusteringService.Errors;
}

unint64_t sub_1BB6AE830()
{
  unint64_t result;

  result = qword_1EF2CA3B8;
  if (!qword_1EF2CA3B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D0F4, &type metadata for FeedClusteringService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2CA3B8);
  }
  return result;
}

uint64_t sub_1BB6AE88C()
{
  return sub_1BB6AD13C();
}

uint64_t *sub_1BB6AE8A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t started;
  uint64_t v13;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;

  v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v11 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
        started = type metadata accessor for StartTime(0);
        v8[*(int *)(started + 20)] = v9[*(int *)(started + 20)];
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
      case 9u:
        v15 = sub_1BB86C8B0();
        v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        v16(v8, v9, v15);
        v17 = type metadata accessor for StartTimeEndTime(0);
        v16(&v8[*(int *)(v17 + 20)], &v9[*(int *)(v17 + 20)], v15);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB6AEC5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for SportsEventStatusResponseEmbed() + 20);
  type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      v4 = sub_1BB86C8B0();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
      break;
    case 8:
    case 9:
      v5 = sub_1BB86C8B0();
      v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v7(v2, v5);
      v6 = v2 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
      result = ((uint64_t (*)(uint64_t, uint64_t))v7)(v6, v5);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1BB6AED3C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t started;
  uint64_t v11;
  void (*v12)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for SportsEventStatusResponseEmbed() + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      v9 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
      started = type metadata accessor for StartTime(0);
      v6[*(int *)(started + 20)] = v7[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      v11 = sub_1BB86C8B0();
      v12 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v12(v6, v7, v11);
      v13 = type metadata accessor for StartTimeEndTime(0);
      v12(&v6[*(int *)(v13 + 20)], &v7[*(int *)(v13 + 20)], v11);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1BB6AF0A8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t started;
  uint64_t v11;
  void (*v12)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  if (a1 != a2)
  {
    v5 = *(int *)(v4 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    sub_1BB6AF434((uint64_t)a1 + v5);
    v8 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v9 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
        started = type metadata accessor for StartTime(0);
        v6[*(int *)(started + 20)] = v7[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        v11 = sub_1BB86C8B0();
        v12 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        v12(v6, v7, v11);
        v13 = type metadata accessor for StartTimeEndTime(0);
        v12(&v6[*(int *)(v13 + 20)], &v7[*(int *)(v13 + 20)], v11);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB6AF434(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1BB6AF470(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t started;
  uint64_t v10;
  void (*v11)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for SportsEventStatusResponseEmbed() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      v8 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
      started = type metadata accessor for StartTime(0);
      v5[*(int *)(started + 20)] = v6[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      v10 = sub_1BB86C8B0();
      v11 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(v5, v6, v10);
      v12 = type metadata accessor for StartTimeEndTime(0);
      v11(&v5[*(int *)(v12 + 20)], &v6[*(int *)(v12 + 20)], v10);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1BB6AF7D4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t started;
  uint64_t v12;
  void (*v13)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for SportsEventStatusResponseEmbed();
  if (a1 != a2)
  {
    v6 = *(int *)(v5 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BB6AF434((uint64_t)a1 + v6);
    v9 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v10 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
        started = type metadata accessor for StartTime(0);
        v7[*(int *)(started + 20)] = v8[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        v12 = sub_1BB86C8B0();
        v13 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
        v13(v7, v8, v12);
        v14 = type metadata accessor for StartTimeEndTime(0);
        v13(&v7[*(int *)(v14 + 20)], &v8[*(int *)(v14 + 20)], v12);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB6AFB50()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6AFB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BB6AFB98()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6AFBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SportsEventStatusResponseData()
{
  uint64_t result;

  result = qword_1ED3A8A00;
  if (!qword_1ED3A8A00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB6AFC20()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SportsEventStatusResponseEmbed();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB6AFC88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v17 = a2;
  v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  MEMORY[0x1E0C80A78](v4);
  v19 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB6B00C4(0, &qword_1ED3AB4A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v18 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for SportsEventStatusResponseData();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6B0080();
  sub_1BB87468C();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1BB6B0120(&qword_1ED3A8E98, (uint64_t)&unk_1BB916750);
    v14 = (uint64_t)v19;
    v15 = v18;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    sub_1BA5193C4(v14, v13, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseEmbed);
    sub_1BA5193C4(v13, v17, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseData);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB6AFE6C()
{
  return 0x6465626D65;
}

uint64_t sub_1BB6AFE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6465626D65 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB6AFF0C()
{
  sub_1BB6B0080();
  return sub_1BB874710();
}

uint64_t sub_1BB6AFF34()
{
  sub_1BB6B0080();
  return sub_1BB87471C();
}

uint64_t sub_1BB6AFF5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB6AFC88(a1, a2);
}

uint64_t sub_1BB6AFF70(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB6B00C4(0, &qword_1EF2CA3C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6B0080();
  sub_1BB8746C8();
  type metadata accessor for SportsEventStatusResponseEmbed();
  sub_1BB6B0120(&qword_1EF2CA3C8, (uint64_t)&unk_1BB916728);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BB6B0080()
{
  unint64_t result;

  result = qword_1ED3A89D0;
  if (!qword_1ED3A89D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D2E4, &type metadata for SportsEventStatusResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A89D0);
  }
  return result;
}

void sub_1BB6B00C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB6B0080();
    v7 = a3(a1, &type metadata for SportsEventStatusResponseData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB6B0120(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SportsEventStatusResponseEmbed();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsEventStatusResponseData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB6B01A0 + 4 * byte_1BB93D19C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB6B01C0 + 4 * byte_1BB93D1A1[v4]))();
}

_BYTE *sub_1BB6B01A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB6B01C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6B01C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6B01D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6B01D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6B01E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsEventStatusResponseData.CodingKeys()
{
  return &type metadata for SportsEventStatusResponseData.CodingKeys;
}

unint64_t sub_1BB6B0200()
{
  unint64_t result;

  result = qword_1EF2CA3D0;
  if (!qword_1EF2CA3D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D2BC, &type metadata for SportsEventStatusResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA3D0);
  }
  return result;
}

unint64_t sub_1BB6B0248()
{
  unint64_t result;

  result = qword_1ED3A89E0;
  if (!qword_1ED3A89E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D22C, &type metadata for SportsEventStatusResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A89E0);
  }
  return result;
}

unint64_t sub_1BB6B0290()
{
  unint64_t result;

  result = qword_1ED3A89D8;
  if (!qword_1ED3A89D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D254, &type metadata for SportsEventStatusResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A89D8);
  }
  return result;
}

uint64_t FormatMicaNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

unint64_t FormatMicaNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 232);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

uint64_t FormatMicaNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatMicaNode.runMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v4;

  result = swift_beginAccess();
  v4 = *(_BYTE *)(v1 + 216);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 212);
  *(_BYTE *)(a1 + 4) = v4;
  return result;
}

uint64_t FormatMicaNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 224);
}

uint64_t FormatMicaNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 240);
}

uint64_t FormatMicaNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatMicaNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t FormatMicaNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatMicaNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatMicaNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatMicaNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatMicaNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatMicaNode.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 64);
  return swift_retain();
}

uint64_t FormatMicaNode.mediaTiming.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[144];

  sub_1BB004424(v1 + 72, (uint64_t)v4);
  sub_1BB004424((uint64_t)v4, a1);
  return sub_1BA8966F8((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
}

uint64_t FormatMicaNode.runMode.setter(int *a1)
{
  uint64_t v1;
  int v2;
  char v3;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 4);
  result = swift_beginAccess();
  *(_DWORD *)(v1 + 212) = v2;
  *(_BYTE *)(v1 + 216) = v3;
  return result;
}

uint64_t (*FormatMicaNode.runMode.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatMicaNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 224) = a1;
  return result;
}

uint64_t (*FormatMicaNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BB6B06F8(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 232);
  *(_QWORD *)(v3 + 232) = v2;
  sub_1BA67D3F4(v2);
  return sub_1BA6EEDB4(v4);
}

unint64_t FormatMicaNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 232);
  *(_QWORD *)(v1 + 232) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatMicaNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatMicaNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 240) = a1;
  return result;
}

uint64_t (*FormatMicaNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatMicaNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 256);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 248);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1BB6B0860(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 264) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatMicaNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 264) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatMicaNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatMicaNode.__allocating_init(identifier:size:resize:adjustments:style:content:mediaTiming:runMode:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, int *a9, uint64_t a10, uint64_t *a11, char a12, uint64_t *a13, uint64_t a14)
{
  uint64_t v19;

  v19 = swift_allocObject();
  FormatMicaNode.init(identifier:size:resize:adjustments:style:content:mediaTiming:runMode:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return v19;
}

uint64_t FormatMicaNode.init(identifier:size:resize:adjustments:style:content:mediaTiming:runMode:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, int *a9, uint64_t a10, uint64_t *a11, char a12, uint64_t *a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v27;
  _BYTE v28[152];

  v17 = *a3;
  v18 = *a4;
  v19 = *a7;
  sub_1BB004424(a8, (uint64_t)v28);
  v20 = *a9;
  v21 = *((_BYTE *)a9 + 4);
  v22 = *a11;
  v27 = *a13;
  v23 = *((_BYTE *)a13 + 8);
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = v17;
  *(_QWORD *)(v14 + 40) = v18;
  swift_beginAccess();
  *(_QWORD *)(v14 + 48) = a5;
  *(_QWORD *)(v14 + 56) = a6;
  *(_QWORD *)(v14 + 64) = v19;
  sub_1BB004424((uint64_t)v28, v14 + 72);
  swift_beginAccess();
  *(_DWORD *)(v14 + 212) = v20;
  *(_BYTE *)(v14 + 216) = v21;
  swift_beginAccess();
  *(_QWORD *)(v14 + 224) = a10;
  swift_beginAccess();
  *(_QWORD *)(v14 + 232) = v22;
  swift_beginAccess();
  *(_BYTE *)(v14 + 240) = a12;
  *(_QWORD *)(v14 + 248) = v27;
  *(_BYTE *)(v14 + 256) = v23;
  swift_beginAccess();
  *(_QWORD *)(v14 + 264) = a14;
  return v14;
}

uint64_t FormatMicaNode.deinit()
{
  uint64_t v0;
  _BYTE v2[144];

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BB004424(v0 + 72, (uint64_t)v2);
  sub_1BA8966F8((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 232));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatMicaNode.__deallocating_deinit()
{
  FormatMicaNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB6B0C14(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB6B0D54(&qword_1EF2CA3D8, (uint64_t)&protocol conformance descriptor for FormatMicaNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatMicaNode()
{
  return objc_opt_self();
}

uint64_t sub_1BB6B0C68(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB6B0D54(&qword_1EF2B31B0, (uint64_t)&protocol conformance descriptor for FormatMicaNode);
  a1[2] = sub_1BB6B0D54(&qword_1EF2B5C48, (uint64_t)&protocol conformance descriptor for FormatMicaNode);
  result = sub_1BB6B0D54(&qword_1EF2CA3E0, (uint64_t)&protocol conformance descriptor for FormatMicaNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB6B0CCC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BAEA47AC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB6B0CF4(_QWORD *a1)
{
  return FormatMicaNode.encode(to:)(a1);
}

uint64_t sub_1BB6B0D14(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed14FormatMicaNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BB6B0D20(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB6B0D54(&qword_1EF2CA3E8, (uint64_t)&protocol conformance descriptor for FormatMicaNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB6B0D54(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatMicaNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB6B0D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v16 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  v18 = *(_QWORD *)(a4 + 16);
  v17 = *(_QWORD *)(a4 + 24);
  v19 = *(_QWORD *)(v16 + 40);
  if (!v19)
  {
    swift_bridgeObjectRetain();
    v30 = v17;
    v31 = v18;
    v22 = *(_QWORD *)(a4 + 40);
    if (v22)
      goto LABEL_3;
LABEL_5:
    v23 = 0;
    goto LABEL_6;
  }
  v40 = *(_QWORD *)(v16 + 32);
  v41 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v20);
  sub_1BB872AFC(v21);
  swift_bridgeObjectRelease();
  v30 = v19;
  v31 = v40;
  v18 = *(_QWORD *)(a4 + 16);
  v17 = *(_QWORD *)(a4 + 24);
  v22 = *(_QWORD *)(a4 + 40);
  if (!v22)
    goto LABEL_5;
LABEL_3:
  v23 = *(_QWORD *)(v22 + 16);
  swift_retain();
LABEL_6:
  v24 = swift_allocObject();
  v42 = v23;
  swift_beginAccess();
  v25 = *(_QWORD *)(a4 + 224);
  swift_beginAccess();
  v38 = *(_QWORD *)(a4 + 232);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v38);
  sub_1BA67C978(a3, &v39);
  sub_1BA6EEDB4(v38);
  swift_beginAccess();
  v26 = *(_BYTE *)(a4 + 240);
  sub_1BB86DD80();
  v27 = v36;
  v28 = *(_BYTE *)(a4 + 256);
  v36 = *(_QWORD *)(a4 + 248);
  v37 = v28;
  type metadata accessor for FormatMicaNodeLayoutAttributes();
  swift_allocObject();
  *(_QWORD *)(v24 + 16) = FormatMicaNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(a1, a2, v31, v30, v18, v17, a5, &v42, a7, a8, a9, a10, v25, &v39, v26, v27, &v36);
  *a6 = v24 | 0x6000000000000000;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6B0FF0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6B103C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6B1088@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1;
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 216);
  *(_DWORD *)a2 = *(_DWORD *)(v3 + 212);
  *(_BYTE *)(a2 + 4) = v5;
  return result;
}

uint64_t sub_1BB6B10D4(int *a1, uint64_t *a2)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 4);
  v4 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v4 + 212) = v2;
  *(_BYTE *)(v4 + 216) = v3;
  return result;
}

uint64_t sub_1BB6B1124@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 224);
  return result;
}

uint64_t sub_1BB6B1168(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 224) = v2;
  return result;
}

unint64_t sub_1BB6B11A8@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 232);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BB6B11F4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 240);
  return result;
}

uint64_t sub_1BB6B1238(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 240) = v2;
  return result;
}

uint64_t sub_1BB6B1278@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 264);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatMicaNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatMicaNode.__allocating_init(identifier:size:resize:adjustments:style:content:mediaTiming:runMode:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_1BB6B12F8()
{
  swift_release();
  return swift_deallocObject();
}

id FormatPuzzleEmbedNodeRenderer.render<A>(context:for:with:contentFrame:in:viewportSize:)(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  return sub_1BB6B17F0(a4, a5, a6, a7, a1, a2);
}

uint64_t FormatPuzzleEmbedNodeRenderer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FormatPuzzleEmbedNodeRenderer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1BB6B1348(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  return sub_1BB6B17F0(a4, a5, a6, a7, a1, a2);
}

uint64_t sub_1BB6B135C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void *a5, void *a6, _BYTE *a7, double a8, double a9, double a10, double a11, double a12, double a13)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  double *v37;
  double *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  void *v63;
  id v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  _QWORD aBlock[6];

  v71 = a4;
  v69 = a2;
  v70 = a3;
  v23 = type metadata accessor for PuzzleResourceSource();
  v68 = *(_QWORD *)(v23 - 8);
  v24 = *(_QWORD *)(v68 + 64);
  MEMORY[0x1E0C80A78](v23);
  v67 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3C1DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v25);
  v66 = (char *)&v65 - v26;
  sub_1BA4A3FB4(0, qword_1ED3D53F0, (void (*)(uint64_t))type metadata accessor for PuzzleData);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v65 - v28;
  v30 = type metadata accessor for PuzzleData();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v65 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = PuzzleResourceSource.identifier.getter();
  v35 = &a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
  *v35 = v34;
  v35[1] = v36;
  swift_bridgeObjectRelease();
  v37 = (double *)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame];
  swift_beginAccess();
  *v37 = a8;
  v37[1] = a9;
  v37[2] = a10;
  v37[3] = a11;
  v38 = (double *)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize];
  swift_beginAccess();
  *v38 = a12;
  v38[1] = a13;
  *(_QWORD *)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation] = a5;
  v39 = a5;
  swift_unknownObjectRelease();
  v40 = *(void **)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration];
  *(_QWORD *)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration] = a6;
  v41 = a6;

  v42 = *(void **)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_interactionProvider];
  v43 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1BB1BD360;
  aBlock[5] = v43;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_101;
  v44 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v42, sel_setInteractionBlock_, v44);
  _Block_release(v44);
  v45 = (uint64_t)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  swift_beginAccess();
  sub_1BB1BB008(v45, (uint64_t)v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    v46 = v68;
    v47 = v24;
    v48 = (uint64_t)v66;
    v49 = (uint64_t)v67;
    v51 = v69;
    v50 = v70;
    v52 = v71;
    result = sub_1BB6B1E3C((uint64_t)v29);
    if (a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] != 1)
    {
      a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] = 1;
      v54 = sub_1BB872F94();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v48, 1, 1, v54);
      v55 = v49;
      sub_1BB6B1E88(a1, v49);
      sub_1BB872F7C();
      v56 = a7;
      sub_1BA6EA1F0(v51, v50);
      v57 = sub_1BB872F70();
      v58 = (*(unsigned __int8 *)(v46 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      v59 = (v47 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
      v60 = (_QWORD *)swift_allocObject();
      v61 = MEMORY[0x1E0DF06E8];
      v60[2] = v57;
      v60[3] = v61;
      v60[4] = v56;
      sub_1BA5193C4(v55, (uint64_t)v60 + v58, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
      v62 = (char *)v60 + v59;
      *(_QWORD *)v62 = v51;
      *((_QWORD *)v62 + 1) = v50;
      v62[16] = v52;
      sub_1BB1B6AEC(v48, (uint64_t)&unk_1EF2BD258, (uint64_t)v60);
      return swift_release();
    }
  }
  else
  {
    sub_1BA5193C4((uint64_t)v29, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
    v63 = *(void **)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController];
    v64 = sub_1BB1B856C((uint64_t)&v33[*(int *)(v30 + 20)]);
    objc_msgSend(v63, sel_setConfiguration_, v64);

    return sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleData);
  }
  return result;
}

id sub_1BB6B17F0(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id result;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char **v39;
  char *v40;
  void *v41;
  void *v42;
  char **v43;
  void *v44;
  char *v45;
  id v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  char v51;
  double *v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  double v66;
  char *v67;
  _QWORD v68[2];
  char v69;
  uint64_t v70;
  char v71;
  CGRect v72;
  CGRect v73;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v61 - v13;
  v15 = type metadata accessor for PuzzleResourceSource();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA739A14(a3, (uint64_t)&v70);
  v67 = v14;
  if ((v71 & 1) != 0)
  {
    v18 = *(double *)(a2 + 80);
    v19 = *(double *)(a2 + 88);
    v20 = 0.0;
    v21 = 0.0;
  }
  else
  {
    v65 = a5;
    v66 = a6;
    v22 = *(double *)(a2 + 64);
    v23 = *(double *)(a2 + 72);
    v24 = *(double *)(a2 + 80);
    v25 = *(double *)(a2 + 88);
    v72.origin.x = v22;
    v72.origin.y = v23;
    v72.size.width = v24;
    v72.size.height = v25;
    CGRectGetMinX(v72);
    sub_1BB8735A0();
    v73.origin.x = v22;
    v73.origin.y = v23;
    a5 = v65;
    a6 = v66;
    v73.size.width = v24;
    v73.size.height = v25;
    CGRectGetMinY(v73);
    sub_1BB8735AC();
    v20 = v26;
    v21 = v27;
    v18 = v28;
    v19 = v29;
  }
  result = objc_msgSend(a4, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_32;
  }
  v31 = result;
  v65 = *(double *)&a1;
  v66 = *(double *)&v17;
  sub_1BB8736F0();

  result = objc_msgSend(a4, sel_view);
  if (!result)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v32 = result;
  v33 = *(_QWORD *)(a2 + 128);
  v34 = *(_QWORD *)(a2 + 136);
  v35 = *(_QWORD *)(a2 + 144);
  v64 = *(_QWORD *)(a2 + 104);
  if (v64)
    v36 = (v35 >> 8) & 1;
  else
    v36 = 0;
  objc_msgSend(result, sel_setAccessibilityIgnoresInvertColors_, v36);

  result = objc_msgSend(a4, sel_view);
  if (!result)
    goto LABEL_33;
  v37 = result;
  v62 = *(_QWORD *)(a2 + 208);
  v38 = *(unsigned __int8 *)(a2 + 216);
  objc_msgSend(result, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(v37, sel_setAccessibilityElementsHidden_, 0);
  if (v38 > 0xFD)
    goto LABEL_16;
  if ((v38 & 0x80) != 0)
  {
    if (!(v62 | v38 ^ 0x80))
      goto LABEL_16;
    v39 = &selRef_setAccessibilityElementsHidden_;
  }
  else
  {
    v39 = &selRef_setIsAccessibilityElement_;
  }
  objc_msgSend(v37, *v39, 1);
LABEL_16:
  v63 = v15;

  v40 = *(char **)&a4[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController];
  result = objc_msgSend(v40, sel_view);
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v41 = result;
  objc_msgSend(result, sel_setAccessibilityIgnoresInvertColors_, v36);

  result = objc_msgSend(v40, sel_view);
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v42 = result;
  objc_msgSend(result, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(v42, sel_setAccessibilityElementsHidden_, 0);
  if (v38 > 0xFD)
    goto LABEL_24;
  if ((v38 & 0x80) != 0)
  {
    if (!(v62 | v38 ^ 0x80))
      goto LABEL_24;
    v43 = &selRef_setAccessibilityElementsHidden_;
  }
  else
  {
    v43 = &selRef_setIsAccessibilityElement_;
  }
  objc_msgSend(v42, *v43, 1);
LABEL_24:

  result = objc_msgSend(a4, sel_view);
  if (!result)
  {
LABEL_36:
    __break(1u);
    return result;
  }
  v44 = result;
  v45 = v67;
  if (v64)
  {
    sub_1BA6E6C54(v33, v34, v35);
  }
  else
  {
    v33 = 0;
    v34 = 0;
    LOBYTE(v35) = -2;
  }
  v46 = objc_msgSend(v44, sel_layer);
  objc_msgSend(v44, sel_bounds);
  v68[0] = v33;
  v68[1] = v34;
  v69 = v35;
  sub_1BA6787C4(v46, (uint64_t)v68, v47, v48, v49, v50);

  sub_1BA6E6CC4(v33, v34, v35);
  v51 = *(_BYTE *)(a2 + 217);
  v52 = (double *)&v40[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame];
  swift_beginAccess();
  *v52 = v20;
  v52[1] = v21;
  v52[2] = v18;
  v52[3] = v19;
  v40[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_isResizable] = v51;
  v54 = v65;
  v53 = *(_QWORD *)&v66;
  **(_QWORD **)&v66 = *(_QWORD *)(*(_QWORD *)&v65 + 88);
  swift_storeEnumTagMultiPayload();
  v55 = sub_1BB86C67C();
  v56 = *(_QWORD *)(v55 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v45, 1, 1, v55);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v57 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v58 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v45, 1, v55) != 1)
  {
    v58 = (void *)sub_1BB86C58C();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v45, v55);
  }
  v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D977D8]), sel_initWithContext_URL_, v57, v58);

  v60 = *(id *)(*(_QWORD *)(*(_QWORD *)&v54 + 200) + 16);
  sub_1BB6B135C(v53, 0, 0, 0, v59, v60, v40, v20, v21, v18, v19, a5, a6);

  return (id)sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleResourceSource);
}

uint64_t dispatch thunk of FormatPuzzleEmbedNodeRendererType.render<A>(context:for:with:contentFrame:in:viewportSize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, _OWORD *);
  __int128 v11;
  _OWORD v13[2];
  char v14;

  v9 = *(_BYTE *)(a4 + 32);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _OWORD *))(a9 + 8);
  v11 = *(_OWORD *)(a4 + 16);
  v13[0] = *(_OWORD *)a4;
  v13[1] = v11;
  v14 = v9;
  return v10(a1, a2, a3, v13);
}

uint64_t method lookup function for FormatPuzzleEmbedNodeRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB6B1E18()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB6B1E3C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, qword_1ED3D53F0, (void (*)(uint64_t))type metadata accessor for PuzzleData);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB6B1E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PuzzleResourceSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB6B1ECC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;

  v1 = *(_QWORD *)(type metadata accessor for PuzzleResourceSource() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  v4 = v0 + v2;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      sub_1BA976B30();
      v7 = v6;
      v8 = v4 + *(int *)(v6 + 48);
      v9 = sub_1BB86C67C();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v11(v8, v9);
      v12 = v4 + *(int *)(v7 + 64);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
        v11(v12, v9);
      break;
    case 1:
      swift_unknownObjectRelease();
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  if (*(_QWORD *)(v0 + v3 + 8) != 1)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FeedPluginModel.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPluginModel.group.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t FeedPluginModel.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 56));
}

void sub_1BB6B2068(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for FeedPluginModel();
}

uint64_t sub_1BB6B20BC(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v7 + a1[13], v6, v2);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v7 + a1[14], v5, v1);
  v10 = (_QWORD *)(v7 + a1[15]);
  *v10 = v4;
  v10[1] = v3;
  return result;
}

void FeedPluginModel.next(revision:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = v3;
  v24 = a3;
  v23 = *(_QWORD *)(a2 + 24);
  v22 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v3 + *(int *)(v15 + 52);
  v26 = sub_1BB86DEE8();
  v27 = v17;
  sub_1BB872AFC(v18);
  v25 = a1;
  sub_1BB87420C();
  sub_1BB872AFC(v19);
  swift_bridgeObjectRelease();
  v20 = v26;
  v21 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v16, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v8, v4 + *(int *)(a2 + 56), v23);
  sub_1BB6B2068(v20, v21, v24);
}

uint64_t sub_1BB6B2284()
{
  return swift_retain();
}

void static FeedPluginModel.== infix(_:_:)()
{
  type metadata accessor for FeedPluginModel();
}

uint64_t sub_1BB6B22F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  char v21;
  void (*v22)(_BYTE *, _QWORD *, uint64_t, __n128);
  char v23;
  void (*v24)(_BYTE *, uint64_t);
  _BYTE *v25;
  uint64_t v26;
  uint64_t (*v27)(_BYTE *, _BYTE *);
  _BYTE *v28;
  _BYTE *v29;
  char v30;
  _BYTE v32[96];

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v32[-v8];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v32[-v11];
  v14.n128_f64[0] = MEMORY[0x1E0C80A78](v13);
  v16 = &v32[-v15];
  v17 = v3[1];
  v18 = v2[1];
  v19 = *v3 == *v2;
  *(_QWORD *)(v4 - 128) = v1;
  *(_QWORD *)(v4 - 120) = v20;
  if (v19 && v17 == v18)
    v21 = 1;
  else
    v21 = sub_1BB874398();
  v22 = *(void (**)(_BYTE *, _QWORD *, uint64_t, __n128))(v6 + 16);
  v22(v16, v3, a1, v14);
  ((void (*)(_BYTE *, _QWORD *, uint64_t))v22)(v12, v2, a1);
  if ((v21 & 1) != 0)
    v23 = sub_1BB872958();
  else
    v23 = 0;
  v24 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
  v24(v12, a1);
  v24(v16, a1);
  ((void (*)(_BYTE *, _QWORD *, uint64_t))v22)(v9, v3, a1);
  v25 = *(_BYTE **)(v4 - 120);
  ((void (*)(_BYTE *, _QWORD *, uint64_t))v22)(v25, v2, a1);
  if ((v23 & 1) != 0)
  {
    v26 = *(int *)(a1 + 56);
    v27 = *(uint64_t (**)(_BYTE *, _BYTE *))&v9[*(int *)(a1 + 60)];
    v28 = &v9[v26];
    v29 = &v25[v26];
    swift_retain();
    v30 = v27(v28, v29);
    swift_release();
  }
  else
  {
    v30 = 0;
  }
  v24(v25, a1);
  v24(v9, a1);
  return v30 & 1;
}

void sub_1BB6B24B4()
{
  static FeedPluginModel.== infix(_:_:)();
}

void FeedPluginModel<>.init(group:metadata:)(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1BB86DEE8();
  a1[1] = v2;
  type metadata accessor for FeedPluginModel();
}

uint64_t (*sub_1BB6B2528(int *a1))()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*result)();
  uint64_t (**v11)();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5 + a1[13], v2, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5 + a1[14], v8, v6);
  result = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)result + 2) = v7;
  *((_QWORD *)result + 3) = v6;
  *((_QWORD *)result + 4) = v4;
  *((_QWORD *)result + 5) = v3;
  *((_QWORD *)result + 6) = v1;
  v11 = (uint64_t (**)())(v5 + a1[15]);
  *v11 = sub_1BA6DB9A0;
  v11[1] = result;
  return result;
}

uint64_t sub_1BB6B25B8()
{
  return swift_deallocObject();
}

void FeedPluginModel<>.init(group:)(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1BB86DEE8();
  a1[1] = v2;
  type metadata accessor for FeedPluginModel();
}

uint64_t sub_1BB6B2624(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t (**v6)();

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v3 + *(int *)(a1 + 52), v1, v2);
  v6 = (uint64_t (**)())(v3 + *(int *)(a1 + 60));
  *v6 = sub_1BA647E00;
  v6[1] = 0;
  return result;
}

uint64_t *sub_1BB6B2670(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v6 + 64) + v9;
  v11 = *(_QWORD *)(v8 + 64) + 7;
  if ((v9 | v7) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || ((v11 + ((v10 + ((v7 + 16) & ~v7)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + (((v9 | v7) & 0xF8 ^ 0x1F8) & ((v9 | v7) + 16)));
  }
  else
  {
    v15 = ~v9;
    v16 = a2[1];
    *a1 = *a2;
    a1[1] = v16;
    v17 = ((unint64_t)a1 + v7 + 16) & ~v7;
    v18 = ((unint64_t)a2 + v7 + 16) & ~v7;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v19(v17, v18, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v17 + v10) & v15, (v18 + v10) & v15, v4);
    v20 = (_QWORD *)((v11 + ((v18 + v10) & v15)) & 0xFFFFFFFFFFFFFFF8);
    v21 = v20[1];
    v22 = (_QWORD *)((v11 + ((v17 + v10) & v15)) & 0xFFFFFFFFFFFFFFF8);
    *v22 = *v20;
    v22[1] = v21;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1BB6B27B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((v5
                                                                                            + *(_QWORD *)(v4 + 64)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  return swift_release();
}

_QWORD *sub_1BB6B2844(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  v11(v9, v10, v6);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v9) & ~v14;
  v17 = (v15 + v10) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64) + 7;
  v19 = (_QWORD *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  return a1;
}

_QWORD *sub_1BB6B2918(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v10 + v12;
  v14 = (v13 + v8) & ~v12;
  v15 = (v13 + v9) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v14, v15);
  v16 = *(_QWORD *)(v11 + 64) + 7;
  v17 = (_QWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1BB6B2A04(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v13, v14);
  *(_OWORD *)((*(_QWORD *)(v10 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v10 + 64) + 7 + v14) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1BB6B2AC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(v15, v16);
  *(_OWORD *)((*(_QWORD *)(v12 + 64) + 7 + v15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v12 + 64)
                                                                                       + 7
                                                                                       + v16) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1BB6B2B98(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (v4 <= *(_DWORD *)(v5 + 84))
    v6 = *(_DWORD *)(v5 + 84);
  else
    v6 = *(_DWORD *)(v3 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = *(_QWORD *)(v3 + 64);
  v10 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    if ((v6 & 0x80000000) != 0)
    {
      v16 = (a1 + v8 + 16) & ~v8;
      if (v4 == v7)
        return (*(uint64_t (**)(uint64_t, _QWORD))(v3 + 48))(v16, *(unsigned int *)(v3 + 84));
      else
        return (*(uint64_t (**)(uint64_t))(v5 + 48))((v16 + v9 + v10) & ~v10);
    }
    else
    {
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v5 + 64) + ((v9 + v10 + ((v8 + 16) & ~v8)) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v7 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BB6B2C50 + 4 * byte_1BB93D560[v13]))();
  }
}

void sub_1BB6B2D00(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = v7;
  if (v8 >= a3)
  {
    v11 = 0u;
    if (a2 <= v8)
      goto LABEL_20;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64)
         + ((*(_DWORD *)(v5 + 64)
           + *(unsigned __int8 *)(v6 + 80)
           + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v8)
LABEL_20:
      __asm { BR              X6 }
  }
  if (((*(_DWORD *)(v6 + 64)
       + ((*(_DWORD *)(v5 + 64)
         + *(unsigned __int8 *)(v6 + 80)
         + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v8 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64)+ ((*(_QWORD *)(v5 + 64)+ *(unsigned __int8 *)(v6 + 80)+ ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1BB6B2E38()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BB6B2EA0);
}

void sub_1BB6B2E40(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BB6B2E48);
  JUMPOUT(0x1BB6B2EA0);
}

void sub_1BB6B2E5C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB6B2EA0);
}

void sub_1BB6B2E64()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB6B2EA0);
}

void sub_1BB6B2E6C(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if (v2 < 0)
      JUMPOUT(0x1BB6B2E78);
    if (a2 < 0)
      JUMPOUT(0x1BB6B2E98);
    *(_QWORD *)(v3 + 8) = (a2 - 1);
  }
  JUMPOUT(0x1BB6B2EA0);
}

uint64_t storeEnumTagSinglePayload for FormatVersionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB6B2F2C + 4 * byte_1BB93D5F5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB6B2F60 + 4 * byte_1BB93D5F0[v4]))();
}

uint64_t sub_1BB6B2F60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6B2F68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6B2F70);
  return result;
}

uint64_t sub_1BB6B2F7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6B2F84);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB6B2F88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6B2F90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatVersionError()
{
  return &type metadata for FormatVersionError;
}

uint64_t sub_1BB6B2FAC()
{
  uint64_t v0;

  v0 = sub_1BB86EB84();
  __swift_allocate_value_buffer(v0, qword_1ED4768E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED4768E8);
  return sub_1BB86EB90();
}

unint64_t sub_1BB6B3004()
{
  unint64_t result;

  result = qword_1EF2CA4F0;
  if (!qword_1EF2CA4F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D614, &type metadata for FormatVersionError);
    atomic_store(result, (unint64_t *)&qword_1EF2CA4F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for J12_V1()
{
  return &type metadata for J12_V1;
}

uint64_t sub_1BB6B3058(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2CA638, (uint64_t (*)(void))sub_1BB6B50E4, (uint64_t)&type metadata for J12_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6B50E4();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA916364(&qword_1EF2AA7D8, (uint64_t (*)(void))sub_1BA9163E0, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB6B3214()
{
  sub_1BB6B50E4();
  return sub_1BB874710();
}

uint64_t sub_1BB6B323C()
{
  sub_1BB6B50E4();
  return sub_1BB87471C();
}

double sub_1BB6B3264@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB6B4EC8(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB6B32A8(_QWORD *a1)
{
  return sub_1BB6B3058(a1);
}

uint64_t sub_1BB6B32BC()
{
  sub_1BB6B4AFC();
  return sub_1BB86D96C();
}

uint64_t sub_1BB6B3324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  void *v15;
  unsigned __int8 v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  unsigned __int8 v57;
  ValueMetadata *v58;
  unint64_t v59;
  uint64_t v60;

  v46 = a2;
  v48 = a1;
  v38 = a3;
  v39 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for GroupLayoutContext();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v45 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - v11;
  v42 = (uint64_t)&v38 - v11;
  v44 = type metadata accessor for GroupLayoutBindingContext();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v41 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v3;
  v15 = (void *)*((_QWORD *)v3 + 1);
  v16 = v3[16];
  sub_1BA4C2DD8(a1, v41, v17);
  sub_1BA4C2DD8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v15, v16);
  sub_1BB86C8D4();
  v18 = sub_1BB86C8C8();
  v40 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v39);
  v58 = &type metadata for J12_V1;
  v20 = sub_1BA8EDDEC();
  v59 = v20;
  LOBYTE(v56) = v14;
  *((_QWORD *)&v56 + 1) = v15;
  v57 = v16;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v15, v16);
  v54 = sub_1BB874734();
  v55 = v22;
  v52 = 95;
  v53 = 0xE100000000000000;
  v50 = 45;
  v51 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v40;
  *v26 = v18;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v56, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  v29 = (uint64_t)v45;
  sub_1BA5193C4(v41, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v28, 0, 1, v44);
  v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4(v42, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v30, 0, 1, v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
  sub_1BA7C2538(v15, v16);
  v58 = &type metadata for J12_V1;
  v59 = v20;
  LOBYTE(v56) = v14;
  *((_QWORD *)&v56 + 1) = v15;
  v57 = v16;
  sub_1BA4C2DD8(v46, v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v15, v16);
  v31 = v60;
  v32 = sub_1BB32D1C0((uint64_t)&unk_1E7269F48, 0, 0, 0, 0, 0, 0, 0);
  if (v31)
  {
    swift_release();
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
  }
  else
  {
    v34 = v32;
    v35 = type metadata accessor for J12_V1.Bound();
    v36 = v38;
    v38[3] = v35;
    v36[4] = sub_1BA4A2870(&qword_1EF2CA508, (uint64_t (*)(uint64_t))type metadata accessor for J12_V1.Bound, (uint64_t)&unk_1BB93D788);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v56, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v29, (uint64_t)boxed_opaque_existential_0 + *(int *)(v35 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v35 + 28)) = v34;
  }
  return result;
}

uint64_t sub_1BB6B3750@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for J12_V1.Bound() + 28));
  v33 = v2;
  swift_bridgeObjectRetain();
  v9 = sub_1BA8A1F94((void (*)(_QWORD *__return_ptr, _OWORD *))sub_1BB6B4A90, (uint64_t)v32, v8);
  *(_QWORD *)&v25 = 0;
  swift_bridgeObjectRelease();
  v28 = v9;
  *(_QWORD *)&v35 = v9;
  sub_1BA4AD288(0, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v11 = v10;
  sub_1BA5C69E0(&qword_1ED39D9E8, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E0DEAF50]);
  v27 = v11;
  v12 = sub_1BB8730F0();
  v13 = *MEMORY[0x1E0DB5D88];
  v14 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
  v29 = v12;
  v30 = 4;
  v31 = v2;
  sub_1BB6B4D0C(0, &qword_1EF2CA5B0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v15 = sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v26 = v15;
  v16 = v25;
  v17 = sub_1BB86DB40();
  if (v16)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v25 = v35;
    v18 = v36;
    v19 = v37;
    v34 = v38;
    *(_QWORD *)&v35 = v28;
    MEMORY[0x1E0C80A78](v17);
    sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v20 = MEMORY[0x1E0DEAF38];
    sub_1BA5C69E0(&qword_1ED39D9E0, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E0DEAF38]);
    sub_1BA5C69E0(&qword_1ED39D9C8, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, v20);
    swift_bridgeObjectRetain();
    v21 = sub_1BB86ED58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v35 = v21;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C69E0((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, v20);
    sub_1BA6B39A0();
    v22 = sub_1BB872BBC();
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_BYTE *)a1 = 0;
    *(_OWORD *)(a1 + 8) = v25;
    *(_QWORD *)(a1 + 24) = v18;
    *(_QWORD *)(a1 + 32) = v19;
    v24 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(a1 + 40) = v22;
    *(_QWORD *)(a1 + 48) = v24;
  }
  return result;
}

uint64_t sub_1BB6B3B28@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t inited;
  __int128 v21[2];
  __int128 v22[2];
  uint64_t v23[5];
  _BYTE v24[10];
  __int128 v25[7];
  _OWORD v26[2];
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[2];
  _OWORD v34[9];

  v5 = a1[5];
  v6 = a1[7];
  v32 = a1[6];
  v33[0] = v6;
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)a1 + 121);
  v7 = a1[1];
  v8 = a1[3];
  v28 = a1[2];
  v29 = v8;
  v9 = a1[3];
  v10 = a1[5];
  v30 = a1[4];
  v31 = v10;
  v11 = a1[1];
  v27[0] = *a1;
  v27[1] = v11;
  v12 = a1[7];
  v25[6] = v32;
  v26[0] = v12;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)a1 + 121);
  v25[2] = v28;
  v25[3] = v9;
  v25[4] = v30;
  v25[5] = v5;
  v13 = *a2;
  v25[0] = v27[0];
  v25[1] = v7;
  sub_1BA90EFB8(v34);
  sub_1BA8EDBB0((uint64_t)v34, (uint64_t)v24);
  v14 = (char *)a2 + *(int *)(type metadata accessor for J12_V1.Bound() + 24);
  v15 = type metadata accessor for GroupLayoutContext();
  v16 = *(_QWORD *)(*(_QWORD *)&v14[*(int *)(v15 + 40)] + 16);
  v17 = *(double *)&v14[*(int *)(v15 + 32)];
  sub_1BA4C010C(v16 + 16, (uint64_t)v22);
  sub_1BA4C010C(v16 + 56, (uint64_t)v21);
  v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v22, inited + 16);
  sub_1BA4CECCC(v21, inited + 56);
  *(double *)(inited + 96) = v18;
  swift_retain();
  sub_1BA8D1F08((uint64_t)v27);
  FeedLayoutStylerFactory.styler()(v23);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, v25, (uint64_t)v24, (uint64_t)v23, a3);
}

void sub_1BB6B3CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(unint64_t, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[49];
  _QWORD v60[49];
  _QWORD v61[49];
  _QWORD v62[50];

  v52 = a1;
  v53 = a4;
  v43 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2CA5C8, (uint64_t (*)(void))sub_1BB6B4AB8, (uint64_t)&type metadata for J12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t *)((char *)&v42 - v6);
  v55 = *(_QWORD *)(a2 + 16);
  if (v55)
  {
    v7 = *(_QWORD *)(a2 + 32);
    v54 = a2 + 32;
    v47 = *MEMORY[0x1E0DB63F0];
    v46 = *MEMORY[0x1E0DB6410];
    v45 = *MEMORY[0x1E0DB5C80];
    v42 = a2;
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = (_QWORD *)&unk_1ED3D2000;
    v44 = xmmword_1BB87CE70;
    v48 = v7;
    while (1)
    {
      v28 = *(_QWORD *)(v54 + 8 * v8);
      v29 = *(_QWORD *)(v28 + 16);
      v30 = *(_QWORD *)(v7 + 16);
      v58 = v28;
      if (v29 != v30)
        break;
      if (v29 && v28 != v7)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31 = 32;
        while (1)
        {
          sub_1BA915B28(v28 + v31, (uint64_t)v62);
          sub_1BA915B28(v7 + v31, (uint64_t)v61);
          v33 = v62[0];
          v34 = v61[0];
          v35 = *(_QWORD *)(v62[0] + 16) == *(_QWORD *)(v61[0] + 16)
             && *(_QWORD *)(v62[0] + 24) == *(_QWORD *)(v61[0] + 24);
          if (!v35 && (sub_1BB874398() & 1) == 0)
            break;
          v36 = v9[165];
          v37 = *(_QWORD *)(v33 + v36);
          v38 = *(_QWORD *)(v33 + v36 + 8);
          v39 = (_QWORD *)(v34 + v36);
          if (v37 == *v39 && v38 == v39[1])
          {
            sub_1BA915B28((uint64_t)v62, (uint64_t)v60);
            sub_1BA915B28((uint64_t)v61, (uint64_t)v59);
          }
          else
          {
            v41 = sub_1BB874398();
            sub_1BA915B28((uint64_t)v62, (uint64_t)v60);
            sub_1BA915B28((uint64_t)v61, (uint64_t)v59);
            if ((v41 & 1) == 0)
              goto LABEL_33;
          }
          if (v60[2] == v59[2] && v60[3] == v59[3])
          {
            sub_1BA915C30((uint64_t)v60);
            sub_1BA915C30((uint64_t)v59);
            sub_1BA915C30((uint64_t)v61);
            sub_1BA915C30((uint64_t)v62);
          }
          else
          {
            v32 = sub_1BB874398();
            sub_1BA915C30((uint64_t)v60);
            sub_1BA915C30((uint64_t)v59);
            sub_1BA915C30((uint64_t)v61);
            sub_1BA915C30((uint64_t)v62);
            if ((v32 & 1) == 0)
              goto LABEL_34;
          }
          v31 += 392;
          if (!--v29)
          {
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
        }
        sub_1BA915B28((uint64_t)v62, (uint64_t)v60);
        sub_1BA915B28((uint64_t)v61, (uint64_t)v59);
LABEL_33:
        sub_1BA915C30((uint64_t)v60);
        sub_1BA915C30((uint64_t)v59);
        sub_1BA915C30((uint64_t)v61);
        sub_1BA915C30((uint64_t)v62);
LABEL_34:
        swift_bridgeObjectRelease();
        v29 = *(_QWORD *)(v28 + 16);
LABEL_28:
        if (v29 != v43)
          goto LABEL_5;
        goto LABEL_4;
      }
      swift_bridgeObjectRetain();
LABEL_4:
      v10 = v52;
      v62[0] = v52;
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = 0x4024000000000000;
      v12 = v49;
      v13 = v50;
      *v49 = v11;
      v14 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104);
      v57 = v8;
      v15 = v51;
      v14(v12, v47, v51);
      v16 = MEMORY[0x1E0DB5DD0];
      sub_1BB6B4D0C(0, &qword_1EF2CA5D0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
      v56 = v17;
      sub_1BB6B4C50(&qword_1EF2CA5D8, &qword_1EF2CA5D0, (uint64_t (*)(uint64_t, _QWORD *))v16, MEMORY[0x1E0DB5DD8]);
      sub_1BB86D4EC();
      v18 = *(void (**)(uint64_t *, uint64_t))(v13 + 8);
      v18(v12, v15);
      v62[0] = v10;
      v14(v12, v46, v15);
      sub_1BB6B4C90();
      sub_1BA4CDF6C(0, &qword_1EF2CA5E8, (uint64_t (*)(void))sub_1BB6B4AB8, (uint64_t)&type metadata for J12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v20 = v19;
      v21 = *(_QWORD *)(v19 - 8);
      v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v44;
      v24 = *(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v21 + 104);
      v9 = &unk_1ED3D2000;
      v25 = v24(v23 + v22, v45, v20);
      MEMORY[0x1E0C80A78](v25);
      sub_1BB86D498();
      swift_bridgeObjectRelease();
      v26 = v12;
      v7 = v48;
      v27 = v15;
      v8 = v57;
      v18(v26, v27);
LABEL_5:
      swift_bridgeObjectRelease();
      if (++v8 == v55)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
}

void sub_1BB6B419C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double (*v34)(uint64_t, uint64_t);
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(uint64_t, _QWORD *);
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[296];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;

  v61 = a1;
  v5 = sub_1BB86DA38();
  v59 = *(_QWORD *)(v5 - 8);
  v60 = v5;
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2CA5C8, (uint64_t (*)(void))sub_1BB6B4AB8, (uint64_t)&type metadata for J12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v47 - v10);
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v57 = a3 + *(int *)(type metadata accessor for J12_V1.Bound() + 24);
    v56 = *(int *)(type metadata accessor for GroupLayoutContext() + 40);
    v13 = a2 + 32;
    v55 = *MEMORY[0x1E0DB5FB0];
    v54 = *MEMORY[0x1E0DB5FB8];
    v53 = *MEMORY[0x1E0DB63D0];
    v52 = *MEMORY[0x1E0DB5C30];
    v51 = *MEMORY[0x1E0DB5C68];
    v50 = *MEMORY[0x1E0DB6208];
    v47 = a2;
    swift_bridgeObjectRetain();
    v49 = xmmword_1BB87CE70;
    v48 = v9;
    do
    {
      v64 = v13;
      v65 = v12;
      sub_1BA915B28(v13, (uint64_t)v67);
      v66 = v61;
      KeyPath = swift_getKeyPath();
      sub_1BA71C838();
      v15 = v14;
      v16 = swift_allocBox();
      v17 = v9;
      v19 = v18;
      v20 = (char *)v18 + *(int *)(v15 + 48);
      sub_1BB86D42C();
      v21 = swift_allocBox();
      sub_1BB86D420();
      *v19 = v21;
      v22 = sub_1BB86D894();
      v23 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104);
      v23(v19, v55, v22);
      v23((uint64_t *)v20, v54, v22);
      *v11 = v16;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v17 + 104))(v11, v53, v8);
      sub_1BB6B4C90();
      sub_1BA4CDF6C(0, &qword_1EF2CA5E8, (uint64_t (*)(void))sub_1BB6B4AB8, (uint64_t)&type metadata for J12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v25 = v24;
      v26 = *(_QWORD *)(v24 - 8);
      v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v49;
      v62 = v28;
      v29 = v28 + v27;
      sub_1BA4CDF6C(0, &qword_1EF2CA5F0, (uint64_t (*)(void))sub_1BB6B4AB8, (uint64_t)&type metadata for J12_V1.Layout, MEMORY[0x1E0DB5C60]);
      (*(void (**)(unint64_t, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v52, v30);
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v26 + 104))(v29, v51, v25);
      v31 = *(_QWORD *)(*(_QWORD *)(v57 + v56) + 24);
      v32 = v69;
      v33 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      v34 = *(double (**)(uint64_t, uint64_t))(v33 + 16);
      swift_retain();
      v35 = v34(v32, v33);
      if (qword_1ED39E210 != -1)
        swift_once();
      objc_msgSend((id)qword_1ED476400, sel_size);
      v38 = v35 * (v36 / v37);
      v39 = v69;
      v40 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      (*(void (**)(uint64_t, uint64_t))(v40 + 48))(v39, v40);
      v41 = v69;
      v42 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 56))(v41, v42);
      *(double *)&v44 = MEMORY[0x1E0C80A78](v43);
      *(&v47 - 6) = v31;
      *(&v47 - 5) = (uint64_t)v67;
      *((double *)&v47 - 4) = v38;
      *((double *)&v47 - 3) = v35;
      v46 = v44;
      (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v58, v50, v60);
      sub_1BA915C74();
      swift_allocObject();
      sub_1BB86DB34();
      swift_release();
      v45 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BB6B4D0C(0, &qword_1EF2CA5F8, MEMORY[0x1E0DB5A10]);
      sub_1BB6B4C50(&qword_1EF2CA600, &qword_1EF2CA5F8, v45, MEMORY[0x1E0DB5A18]);
      v46 = sub_1BA915DF0();
      sub_1BB86D4C8();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v9 = v48;
      (*(void (**)(uint64_t *, uint64_t))(v48 + 8))(v11, v8);
      sub_1BA915C30((uint64_t)v67);
      v13 = v64 + 392;
      v12 = v65 - 1;
    }
    while (v65 != 1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB6B46F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v10 = swift_allocObject();
  sub_1BA915B28(a2, v10 + 16);
  memcpy((void *)(v10 + 408), a3, 0x180uLL);
  v11 = a4 + *(int *)(type metadata accessor for J12_V1.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v13 = *(_QWORD *)(v11 + *(int *)(result + 28));
  v14 = __OFADD__(v13, a1);
  v15 = v13 + a1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v10 + 792) = v15;
    *a5 = v10 | 0x5000000000000000;
  }
  return result;
}

uint64_t sub_1BB6B47AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB6B3324(a1, a2, a3);
}

uint64_t sub_1BB6B47C0()
{
  return sub_1BB690AC4();
}

unint64_t sub_1BB6B47D0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB6B47FC();
  result = sub_1BB6B4840();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB6B47FC()
{
  unint64_t result;

  result = qword_1EF2CA4F8;
  if (!qword_1EF2CA4F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D6D4, &type metadata for J12_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2CA4F8);
  }
  return result;
}

unint64_t sub_1BB6B4840()
{
  unint64_t result;

  result = qword_1EF2CA500;
  if (!qword_1EF2CA500)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D6FC, &type metadata for J12_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2CA500);
  }
  return result;
}

uint64_t type metadata accessor for J12_V1.Bound()
{
  uint64_t result;

  result = qword_1EF2CA568;
  if (!qword_1EF2CA568)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB6B48C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6B48CC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB6B4948()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB6B4954(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB6B49C8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB6B4A54(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2CA5A8, (uint64_t (*)(uint64_t))type metadata accessor for J12_V1.Bound, (uint64_t)&unk_1BB93D760);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB6B4A90@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB6B3B28(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1BB6B4AAC(uint64_t a1)
{
  uint64_t *v1;

  sub_1BB6B3CB8(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1BB6B4AB8()
{
  unint64_t result;

  result = qword_1EF2CA5B8;
  if (!qword_1EF2CA5B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D8B8, &type metadata for J12_V1.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2CA5B8);
  }
  return result;
}

unint64_t sub_1BB6B4AFC()
{
  unint64_t result;

  result = qword_1EF2CA5C0;
  if (!qword_1EF2CA5C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D888, &type metadata for J12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2CA5C0);
  }
  return result;
}

uint64_t sub_1BB6B4B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB6B46F0(a1, a2, a3, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB6B4B48()
{
  uint64_t v0;
  void *v1;

  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 152) >= 0x11uLL)
    swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(v0 + 296) >= 0x11uLL)
      swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6B4C40()
{
  return swift_deallocObject();
}

uint64_t sub_1BB6B4C50(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB6B4D0C(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB6B4C90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CA5E0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2CA5E8, (uint64_t (*)(void))sub_1BB6B4AB8, (uint64_t)&type metadata for J12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CA5E0);
  }
}

void sub_1BB6B4D04(uint64_t a1)
{
  uint64_t v1;

  sub_1BB6B419C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BB6B4D0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for J12_V1.Layout;
    v8[1] = &type metadata for J12_V1.Layout.Attributes;
    v8[2] = sub_1BB6B4AB8();
    v8[3] = sub_1BB6B4AFC();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

ValueMetadata *type metadata accessor for J12_V1.Layout.Attributes()
{
  return &type metadata for J12_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for J12_V1.Layout()
{
  return &type metadata for J12_V1.Layout;
}

unint64_t sub_1BB6B4DAC()
{
  unint64_t result;

  result = qword_1EF2CA608;
  if (!qword_1EF2CA608)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D828, &type metadata for J12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2CA608);
  }
  return result;
}

unint64_t sub_1BB6B4DF4()
{
  unint64_t result;

  result = qword_1EF2CA610;
  if (!qword_1EF2CA610)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D800, &type metadata for J12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2CA610);
  }
  return result;
}

unint64_t sub_1BB6B4E3C()
{
  unint64_t result;

  result = qword_1EF2CA618;
  if (!qword_1EF2CA618)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D7D8, &type metadata for J12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2CA618);
  }
  return result;
}

unint64_t sub_1BB6B4E84()
{
  unint64_t result;

  result = qword_1EF2CA620;
  if (!qword_1EF2CA620)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D850, &type metadata for J12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2CA620);
  }
  return result;
}

uint64_t sub_1BB6B4EC8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2CA628, (uint64_t (*)(void))sub_1BB6B50E4, (uint64_t)&type metadata for J12_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6B50E4();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v23 = 1;
  sub_1BA916364(&qword_1ED39D9D0, (uint64_t (*)(void))sub_1BA916320, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB6B50E4()
{
  unint64_t result;

  result = qword_1EF2CA630;
  if (!qword_1EF2CA630)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D9AC, &type metadata for J12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA630);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for J12_V1.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB6B5174 + 4 * byte_1BB93D6C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB6B51A8 + 4 * byte_1BB93D6C0[v4]))();
}

uint64_t sub_1BB6B51A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6B51B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6B51B8);
  return result;
}

uint64_t sub_1BB6B51C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6B51CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB6B51D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6B51D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for J12_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for J12_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB6B51F8()
{
  unint64_t result;

  result = qword_1EF2CA640;
  if (!qword_1EF2CA640)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D984, &type metadata for J12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA640);
  }
  return result;
}

unint64_t sub_1BB6B5240()
{
  unint64_t result;

  result = qword_1EF2CA648;
  if (!qword_1EF2CA648)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D8F4, &type metadata for J12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA648);
  }
  return result;
}

unint64_t sub_1BB6B5288()
{
  unint64_t result;

  result = qword_1EF2CA650;
  if (!qword_1EF2CA650)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D91C, &type metadata for J12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA650);
  }
  return result;
}

uint64_t sub_1BB6B52CC(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  BOOL v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  char v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  uint64_t v14;
  char *v15;
  CGRect v17;
  CGRect v18;

  v2 = *(char **)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView);
  if (v2)
  {
    v3 = *(_QWORD *)&v2[qword_1ED3AC1D0];
    v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(v3 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(v3 + 24);
    if (v4 || (sub_1BB874398() & 1) != 0)
    {
      v5 = *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds);
      v6 = *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds + 8);
      v7 = *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds + 16);
      v8 = *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds + 24);
      v9 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds + 32);
      objc_msgSend(v2, sel_bounds);
      if ((v9 & 1) == 0)
      {
        v18.origin.x = v10;
        v18.origin.y = v11;
        v18.size.width = v12;
        v18.size.height = v13;
        v17.origin.x = v5;
        v17.origin.y = v6;
        v17.size.width = v7;
        v17.size.height = v8;
        if (CGRectEqualToRect(v17, v18))
        {
          v14 = 0;
LABEL_13:

          return v14;
        }
      }
    }
    else
    {
      v15 = v2;
    }
    sub_1BB6B54F8();
    v14 = 1;
    goto LABEL_13;
  }
  return 1;
}

id sub_1BB6B53BC(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  int v5;
  void *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = *(_QWORD *)&a1[qword_1ED3AF858];
  swift_beginAccess();
  v5 = *(unsigned __int8 *)(v4 + 17);
  *(_BYTE *)(v4 + 17) = 0;
  if ((v5 & 0xFFFFFFC1) != 0)
    LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
  v6 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView] = a1;

  v7 = a1;
  objc_msgSend(v7, sel_bounds);
  v8 = &v2[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds];
  *(_QWORD *)v8 = v9;
  *((_QWORD *)v8 + 1) = v10;
  *((_QWORD *)v8 + 2) = v11;
  *((_QWORD *)v8 + 3) = v12;
  v8[32] = 0;
  return objc_msgSend(v2, sel_addSubview_, v7);
}

double sub_1BB6B54F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  void *v6;
  uint64_t v7;
  double result;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView;
  v3 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView);
  if (v3)
  {
    v4 = *(_QWORD *)&v3[qword_1ED3AF858];
    swift_beginAccess();
    v5 = *(unsigned __int8 *)(v4 + 17);
    *(_BYTE *)(v4 + 17) = 0;
    if ((v5 & 0xFFFFFFC1) != 0)
    {
      swift_retain();
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
      swift_release();
    }
    v6 = *(void **)(v1 + v2);
    if (v6)
    {
      objc_msgSend(v6, sel_removeFromSuperview);
      v3 = *(char **)(v1 + v2);
    }
    else
    {
      v3 = 0;
    }
  }
  *(_QWORD *)(v1 + v2) = 0;

  v7 = v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds;
  result = 0.0;
  *(_OWORD *)v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  *(_BYTE *)(v7 + 32) = 1;
  return result;
}

uint64_t sub_1BB6B567C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB6B56B8()
{
  return sub_1BB6B56E0();
}

uint64_t sub_1BB6B56CC()
{
  return sub_1BB6B5760();
}

uint64_t sub_1BB6B56E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView);
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + qword_1ED3AF858);
    result = swift_beginAccess();
    v4 = *(unsigned __int8 *)(v2 + 17);
    *(_BYTE *)(v2 + 17) = 1;
    if ((v4 & 0xFFFFFFC1) != 1)
    {
      swift_retain();
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BB6B5760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView);
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + qword_1ED3AF858);
    result = swift_beginAccess();
    v4 = *(unsigned __int8 *)(v2 + 17);
    *(_BYTE *)(v2 + 17) = 0;
    if ((v4 & 0xFFFFFFC1) != 0)
    {
      swift_retain();
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BB6B57D8(void *a1, uint64_t a2, char a3)
{
  void *v3;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v5 = objc_msgSend(a1, sel_asChannel);
  if (!v5)
    goto LABEL_10;
  v6 = v5;
  if (!objc_msgSend(v5, sel_supportsNotifications))
  {
    swift_unknownObjectRelease();
LABEL_10:
    sub_1BB6B5B04();
    swift_allocObject();
    swift_retain();
    return sub_1BB86E9E0();
  }
  if ((a3 & 1) != 0)
    goto LABEL_11;
  v7 = objc_msgSend(v6, sel_identifier);
  if (!v7)
  {
    sub_1BB8729A0();
    v7 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v8 = objc_msgSend(v3, sel_subscribeNotificationPromptForTagID_, v7);

  if (v8 == (id)2)
    goto LABEL_11;
  if (v8 == (id)1)
  {
    MEMORY[0x1E0C80A78](v9);
    sub_1BB6B5B04();
    swift_allocObject();
    v10 = sub_1BB86EA58();
    swift_unknownObjectRelease();
    return v10;
  }
  if (!v8)
  {
LABEL_11:
    sub_1BB6B5B04();
    swift_allocObject();
    swift_retain();
    v10 = sub_1BB86E9E0();
    swift_unknownObjectRelease();
    return v10;
  }
  result = sub_1BB874524();
  __break(1u);
  return result;
}

unint64_t SubscribeNotificationPrompt.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t *sub_1BB6B59E4@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

BOOL NotificationPrompt.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_1BB6B5A28()
{
  unint64_t result;

  result = qword_1EF2CA670;
  if (!qword_1EF2CA670)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SubscribeNotificationPrompt, &type metadata for SubscribeNotificationPrompt);
    atomic_store(result, (unint64_t *)&qword_1EF2CA670);
  }
  return result;
}

unint64_t sub_1BB6B5A70()
{
  unint64_t result;

  result = qword_1EF2CA678;
  if (!qword_1EF2CA678)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for NotificationPrompt, &type metadata for NotificationPrompt);
    atomic_store(result, (unint64_t *)&qword_1EF2CA678);
  }
  return result;
}

_QWORD *sub_1BB6B5AB4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeNotificationPrompt()
{
  return &type metadata for SubscribeNotificationPrompt;
}

ValueMetadata *type metadata accessor for NotificationPrompt()
{
  return &type metadata for NotificationPrompt;
}

void sub_1BB6B5B04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CA680)
  {
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CA680);
  }
}

uint64_t sub_1BB6B5B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  _QWORD *v13;
  id v14;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a5;
  v13[3] = sub_1BB6B5C3C;
  v13[4] = v12;
  v13[5] = a6;
  v13[6] = a7;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v14 = a5;
  sub_1BB86ED4C();
  return swift_release();
}

uint64_t sub_1BB6B5C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB6B5B58(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
}

uint64_t sub_1BB6B5C18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6B5C3C(__int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(__int16 *);
  __int16 v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(__int16 *))(v2 + 16);
  v5 = a1 & 0xFF01;
  v6 = a2;
  return v3(&v5);
}

uint64_t sub_1BB6B5C7C(void *a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, void *a5)
{
  id v9;
  id v10;
  _QWORD *v11;
  _QWORD *v12;

  if (a1)
  {
    v9 = a1;
    v10 = objc_msgSend(a5, sel_name);
    sub_1BB8729A0();

    sub_1BB6B5E6C();
    sub_1BB871314();
    swift_allocObject();
    sub_1BB8712E4();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a2;
    v11[3] = a3;
    v11[4] = a4;
    swift_retain();
    swift_retain();
    sub_1BB8712FC();
    swift_release();
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = a2;
    v12[3] = a3;
    v12[4] = a4;
    swift_retain();
    swift_retain();
    sub_1BB871308();
    swift_release();
    swift_release();
    sub_1BB8712F0();

    swift_release();
  }
  else
  {
    swift_retain();
    a2(768, a4);
  }
  return swift_release();
}

uint64_t sub_1BB6B5E20()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB6B5E5C()
{
  uint64_t v0;

  return sub_1BB6B5C7C(*(void **)(v0 + 16), *(void (**)(uint64_t, uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

unint64_t sub_1BB6B5E6C()
{
  unint64_t result;

  result = qword_1EF2CA688;
  if (!qword_1EF2CA688)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for AlertEnableNotifications, &type metadata for AlertEnableNotifications);
    atomic_store(result, (unint64_t *)&qword_1EF2CA688);
  }
  return result;
}

uint64_t sub_1BB6B5EB4(uint64_t a1)
{
  return sub_1BB6B5EF4(a1, 257);
}

uint64_t objectdestroy_5Tm_7()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6B5EEC(uint64_t a1)
{
  return sub_1BB6B5EF4(a1, 512);
}

uint64_t sub_1BB6B5EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 16);
  v5 = *(_QWORD *)(v2 + 32);
  swift_retain();
  v4(a2, v5);
  return swift_release();
}

uint64_t sub_1BB6B5F48(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NotificationPromptResult(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for NotificationPromptResult(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NotificationPromptResult()
{
  return &type metadata for NotificationPromptResult;
}

uint64_t storeEnumTagSinglePayload for NotificationPromptResult.Action(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB6B6060 + 4 * byte_1BB93DAC5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB6B6094 + 4 * byte_1BB93DAC0[v4]))();
}

uint64_t sub_1BB6B6094(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6B609C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6B60A4);
  return result;
}

uint64_t sub_1BB6B60B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6B60B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB6B60BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6B60C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationPromptResult.Action()
{
  return &type metadata for NotificationPromptResult.Action;
}

unint64_t sub_1BB6B60E4()
{
  unint64_t result;

  result = qword_1EF2CA690;
  if (!qword_1EF2CA690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93DCB0, &type metadata for NotificationPromptResult.Action);
    atomic_store(result, (unint64_t *)&qword_1EF2CA690);
  }
  return result;
}

uint64_t sub_1BB6B612C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1BB86C190();
  result = sub_1BB86C184();
  *a1 = result;
  return result;
}

uint64_t sub_1BB6B615C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1BB86C190();
  result = sub_1BB86C184();
  *a1 = result;
  return result;
}

uint64_t FormatContentSlotItemAuxiliary.Resolved.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlotItemAuxiliary.Resolved.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlotItemAuxiliary.Resolved.init(items:options:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1BB6B61A0()
{
  _BYTE *v0;

  if (*v0)
    return 0x736E6F6974706FLL;
  else
    return 0x736D657469;
}

uint64_t sub_1BB6B61D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB6B6950(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB6B61FC()
{
  sub_1BB6B6410();
  return sub_1BB874710();
}

uint64_t sub_1BB6B6224()
{
  sub_1BB6B6410();
  return sub_1BB87471C();
}

uint64_t FormatContentSlotItemAuxiliary.Resolved.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1BB6B6698(0, &qword_1ED3A31E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6B6410();
  sub_1BB8746C8();
  v13 = v9;
  v12 = 0;
  sub_1BA81D804(0, (unint64_t *)&qword_1ED3BBA80, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution);
  sub_1BB6B66F4(&qword_1ED3A2F98, (unint64_t *)&unk_1ED3A2D60, (uint64_t)&protocol conformance descriptor for FormatContentSlotItemResolution, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_1BA81D804(0, (unint64_t *)&qword_1ED3B9440, (void (*)(uint64_t))type metadata accessor for FormatOption);
    sub_1BA584084((unint64_t *)&qword_1ED39BE80, &qword_1ED3AFE80, (uint64_t)&protocol conformance descriptor for FormatOption, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BB6B6410()
{
  unint64_t result;

  result = qword_1ED3A8D28;
  if (!qword_1ED3A8D28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93DE9C, &_s8ResolvedV10CodingKeysON_4);
    atomic_store(result, (unint64_t *)&qword_1ED3A8D28);
  }
  return result;
}

uint64_t FormatContentSlotItemAuxiliary.Resolved.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_1BB6B6698(0, &qword_1ED3AB4B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6B6410();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1BA81D804(0, (unint64_t *)&qword_1ED3BBA80, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution);
  v14 = 0;
  sub_1BB6B66F4(&qword_1ED3AB038, &qword_1ED3A9108, (uint64_t)&protocol conformance descriptor for FormatContentSlotItemResolution, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  v10 = v15;
  sub_1BA81D804(0, (unint64_t *)&qword_1ED3B9440, (void (*)(uint64_t))type metadata accessor for FormatOption);
  v14 = 1;
  sub_1BA584084((unint64_t *)&qword_1ED3B9450, &qword_1ED3B37E0, (uint64_t)&protocol conformance descriptor for FormatOption, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = v15;
  *a2 = v10;
  a2[1] = v11;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BB6B6698(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB6B6410();
    v7 = a3(a1, &_s8ResolvedV10CodingKeysON_4, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB6B66F4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA81D804(255, (unint64_t *)&qword_1ED3BBA80, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB6B6784@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatContentSlotItemAuxiliary.Resolved.init(from:)(a1, a2);
}

uint64_t sub_1BB6B6798(_QWORD *a1)
{
  return FormatContentSlotItemAuxiliary.Resolved.encode(to:)(a1);
}

uint64_t _s8ResolvedV10CodingKeysOwst_4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB6B67F8 + 4 * byte_1BB93DD71[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB6B682C + 4 * byte_1BB93DD6C[v4]))();
}

uint64_t sub_1BB6B682C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6B6834(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6B683CLL);
  return result;
}

uint64_t sub_1BB6B6848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6B6850);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB6B6854(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6B685C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8ResolvedV10CodingKeysOMa_4()
{
  return &_s8ResolvedV10CodingKeysON_4;
}

unint64_t sub_1BB6B687C()
{
  unint64_t result;

  result = qword_1EF2CA6A0;
  if (!qword_1EF2CA6A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93DE74, &_s8ResolvedV10CodingKeysON_4);
    atomic_store(result, (unint64_t *)&qword_1EF2CA6A0);
  }
  return result;
}

unint64_t sub_1BB6B68C4()
{
  unint64_t result;

  result = qword_1ED3A8D38;
  if (!qword_1ED3A8D38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93DDE4, &_s8ResolvedV10CodingKeysON_4);
    atomic_store(result, (unint64_t *)&qword_1ED3A8D38);
  }
  return result;
}

unint64_t sub_1BB6B690C()
{
  unint64_t result;

  result = qword_1ED3A8D30;
  if (!qword_1ED3A8D30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93DE0C, &_s8ResolvedV10CodingKeysON_4);
    atomic_store(result, (unint64_t *)&qword_1ED3A8D30);
  }
  return result;
}

uint64_t sub_1BB6B6950(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736D657469 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_1BB6B6A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t j;
  unint64_t v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _OWORD v33[3];
  _QWORD v34[2];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content;
  v3 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for FormatContent(0) + 60));
  v4 = MEMORY[0x1E0DEE9D8];
  v32 = MEMORY[0x1E0DEE9D8];
  v29 = *(_QWORD *)(v3 + 16);
  if (v29)
  {
    v5 = type metadata accessor for FormatContentSubgroup();
    v6 = *(_QWORD *)(v5 - 8);
    v27 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v28 = v5;
    v26 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    for (i = 0; i != v29; ++i)
    {
      v9 = *(_QWORD *)(v27 + v26 * i + *(int *)(v28 + 32));
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        v30 = i;
        v11 = v9 + 32;
        swift_bridgeObjectRetain();
        for (j = 0; j != v10; ++j)
        {
          v14 = (__int128 *)(v11 + 48 * j);
          v15 = *v14;
          v16 = v14[2];
          v33[1] = v14[1];
          v33[2] = v16;
          v33[0] = v15;
          v17 = v16;
          v34[0] = v16;
          v18 = *(_QWORD *)(v16 + 16);
          if (v18)
          {
            v19 = *(_QWORD *)(type metadata accessor for FormatContentSlotItem() - 8);
            v20 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
            sub_1BA781758((uint64_t)v34);
            sub_1BA781758((uint64_t)v34);
            sub_1BB6B7994((uint64_t)v33);
            v21 = *(_QWORD *)(v19 + 72);
            do
            {
              sub_1BB6B71D4(v20);
              sub_1BB386E98(v31);
              v20 += v21;
              --v18;
            }
            while (v18);
            sub_1BA4F6CCC((uint64_t)v34);
            sub_1BA4F6CCC((uint64_t)v34);
            sub_1BB6B79F4((uint64_t)v33);
            v13 = v4;
          }
          else
          {
            v13 = v4;
          }
          sub_1BB386E98(v13);
        }
        swift_bridgeObjectRelease();
        v8 = v4;
        i = v30;
      }
      else
      {
        v8 = v4;
      }
      sub_1BB386E98(v8);
    }
    swift_bridgeObjectRelease();
    v4 = v32;
  }
  v22 = v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options;
  v23 = *(_QWORD *)(v22 + *(int *)(type metadata accessor for FormatServiceOptions() + 44));
  type metadata accessor for FeedGroupDebugCandidates();
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = v4;
  sub_1BA865C5C(0);
  sub_1BA4A2870((unint64_t *)&unk_1ED3CF708, (uint64_t (*)(uint64_t))sub_1BA865C5C, MEMORY[0x1E0DEAF38]);
  sub_1BA4A2870(&qword_1ED3C60B8, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupDebugCandidateItem, (uint64_t)&protocol conformance descriptor for FeedGroupDebugCandidateItem);
  swift_bridgeObjectRetain();
  v24[3] = sub_1BB872BB0();
  v24[4] = v23;
  return v24;
}

uint64_t FormatServiceResult.resolvedContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
}

uint64_t FormatServiceResult.resolvedPool.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
}

uint64_t FormatServiceResult.copy(adjustedContent:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v2 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatContentPool();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - v9;
  v11 = type metadata accessor for FormatContent(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatServiceOptions();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t)v16, v17);
  sub_1BA4C2DD8(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, (uint64_t)v13, type metadata accessor for FormatContent);
  sub_1BA4C2DD8(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  sub_1BA4C2DD8(v21, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v16, v18 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA5193C4((uint64_t)v13, v18 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, type metadata accessor for FormatContent);
  sub_1BA5193C4((uint64_t)v10, v18 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  sub_1BA5193C4((uint64_t)v4, v18 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA5193C4((uint64_t)v7, v18 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  return v18;
}

uint64_t FormatServiceResult.deinit()
{
  uint64_t v0;

  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, type metadata accessor for FormatContent);
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  return v0;
}

uint64_t FormatServiceResult.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, type metadata accessor for FormatContent);
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB6B70C8()
{
  return type metadata accessor for FormatServiceResult();
}

uint64_t type metadata accessor for FormatServiceResult()
{
  uint64_t result;

  result = qword_1ED3C85E8;
  if (!qword_1ED3C85E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB6B710C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for FormatContent.Resolved();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FormatContentPool();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for FormatContent(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for FormatServiceOptions();
        if (v4 <= 0x3F)
          return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t method lookup function for FormatServiceResult()
{
  return swift_lookUpClassMethod();
}

void sub_1BB6B71D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v2 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4C2DD8(a1, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)&loc_1BB6B72A4 + dword_1BB6B794C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB6B72B4()
{
  _QWORD *v0;
  uint64_t result;

  result = swift_release();
  *v0 = MEMORY[0x1E0DEE9D8];
  return result;
}

void sub_1BB6B72EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;

  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  v6 = *v0;
  v7 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
  v8 = OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool);
  swift_retain_n();
  *(_QWORD *)(v5 - 120) = v6;
  while (1)
  {
    v10 = *(_QWORD *)(v6 + 24);
    if (*(_QWORD *)(v9 + 16))
    {
      v11 = *(_QWORD *)(v6 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      v12 = sub_1BA6E35A8(v11, v10);
      if ((v13 & 1) != 0)
        goto LABEL_14;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v6 + 24);
    }
    else
    {
      swift_retain();
    }
    v14 = *(_QWORD *)(v3 + v8);
    if (*(_QWORD *)(v14 + 16))
    {
      v15 = *(_QWORD *)(v6 + 16);
      swift_bridgeObjectRetain();
      v12 = sub_1BA6E35A8(v15, v10);
      if ((v16 & 1) != 0)
      {
        v9 = v14;
LABEL_14:
        v17 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v12);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        sub_1BA65E330();
        v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1BB8856E0;
        v20 = *v2;
        v19 = v2[1];
        swift_bridgeObjectRetain();
        v21 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
        if (!v21)
          v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
        type metadata accessor for FeedGroupDebugCandidateItem();
        v22 = (_QWORD *)swift_allocObject();
        v22[2] = v20;
        v22[3] = v19;
        v22[4] = v17;
        v22[5] = v21;
        v22[6] = 0;
        *(_QWORD *)(v18 + 32) = v22;
        *(_QWORD *)(v5 - 72) = v18;
        sub_1BB872DCC();
        swift_release_n();
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
LABEL_17:
        JUMPOUT(0x1BB6B72C4);
      }
      swift_release();
      swift_bridgeObjectRelease();
      if (!v7)
        goto LABEL_12;
    }
    else
    {
      swift_release();
      if (!v7)
      {
LABEL_12:
        swift_release_n();
        goto LABEL_17;
      }
    }
    v6 = v7;
    v7 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
  }
}

uint64_t sub_1BB6B7994(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB6B79F4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB6B7A54(unint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v4)
      break;
    v11 = MEMORY[0x1E0DEE9D8];
    result = sub_1BB873DD4();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v6 = 0;
    v7 = *a2;
    a2 = (uint64_t *)a2[1];
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x1BCCE4630](v6, a1);
      }
      else
      {
        v9 = *(_QWORD *)(a1 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRetain();
      v10 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
      if (!v10)
        v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
      ++v6;
      type metadata accessor for FeedGroupDebugCandidateItem();
      v8 = (_QWORD *)swift_allocObject();
      v8[2] = v7;
      v8[3] = a2;
      v8[4] = v9;
      v8[5] = v10;
      v8[6] = 0;
      swift_unknownObjectRelease();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      if (v4 == v6)
        return v11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v4 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BB6B7C0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;

  v19 = a2;
  v4 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0DEE9D8];
  v20 = MEMORY[0x1E0DEE9D8];
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v17[0] = a1;
    v17[1] = v2;
    v10 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v11 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    v18 = v11;
    do
    {
      sub_1BA4C2DD8(v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      else
      {
        v12 = *v7;
        v13 = *v19;
        v14 = v19[1];
        swift_bridgeObjectRetain();
        v15 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
        if (!v15)
          v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
        swift_unknownObjectRelease();
        type metadata accessor for FeedGroupDebugCandidateItem();
        v16 = (_QWORD *)swift_allocObject();
        v16[2] = v13;
        v16[3] = v14;
        v16[4] = v12;
        v16[5] = v15;
        v16[6] = 0;
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
        v11 = v18;
      }
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    return v20;
  }
  return result;
}

uint64_t sub_1BB6B7DF4(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  FormatOptionValue.type.getter();
  result = sub_1BA713E54(v9, a2);
  if ((result & 1) == 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    swift_allocError();
    v6 = v5;
    v8 = *a1;
    v7 = a1[1];
    swift_bridgeObjectRetain();
    FormatOptionValue.type.getter();
    *(_QWORD *)v6 = v8;
    *(_QWORD *)(v6 + 8) = v7;
    *(_BYTE *)(v6 + 16) = v9;
    *(_QWORD *)(v6 + 24) = a2;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BB6B7EF4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1BA4CDF6C(0, &qword_1EF2CA6D0, (uint64_t (*)(void))sub_1BB6B8994, (uint64_t)&type metadata for FormatOptionValidator.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6B8994();
  sub_1BB8746C8();
  v10[1] = a2;
  sub_1BA4CDF6C(0, &qword_1EF2CA6C0, (uint64_t (*)(void))sub_1BA832824, (uint64_t)&type metadata for FormatOptionType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
  sub_1BB6B89D8(&qword_1EF2CA6D8, (uint64_t (*)(void))sub_1BA6F60E4, MEMORY[0x1E0DEB3B8]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB6B8048()
{
  return 0x7365707974;
}

uint64_t sub_1BB6B805C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7365707974 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB6B80E8()
{
  sub_1BB6B8994();
  return sub_1BB874710();
}

uint64_t sub_1BB6B8110()
{
  sub_1BB6B8994();
  return sub_1BB87471C();
}

_QWORD *sub_1BB6B8138@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BB6B8804(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB6B8160(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BB6B7EF4(a1, *v1);
}

uint64_t sub_1BB6B8178(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA857260(*a1, *a2);
}

uint64_t sub_1BB6B8184()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB7EAF90((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BB6B81C8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB7EAF90(a1, *v1);
}

uint64_t sub_1BB6B81D0()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB7EAF90((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BB6B8210(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v1, 0);
    v3 = sub_1BA580CE4(a1);
    if (v3 < 0 || v3 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    {
      if (*(_DWORD *)(a1 + 36) == v4)
        __asm { BR              X9 }
LABEL_10:
      __break(1u);
      JUMPOUT(0x1BB6B849CLL);
    }
    __break(1u);
    goto LABEL_10;
  }
  v5 = MEMORY[0x1BCCE36DC](MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEA968]);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BB6B84CC()
{
  uint64_t *v0;

  return sub_1BB6B8210(*v0);
}

uint64_t sub_1BB6B84D4(uint64_t *a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a2;
  v5 = *(_QWORD *)(v3 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA738818();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    *(_BYTE *)(inited + 32) = v4;
    v13 = sub_1BA862600(inited);
    swift_setDeallocating();
    return v13;
  }
  v18 = *a1;
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(_QWORD *)(v3 + 32 + 8 * v5 - 8);
  v8 = FormatOptionType.rawValue.getter();
  v10 = v9;
  if (v8 == FormatOptionType.rawValue.getter() && v10 == v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    goto LABEL_7;
  }
  v14 = sub_1BB874398();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      v13 = sub_1BA862600((uint64_t)&unk_1E724D980);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1ED3BB4A8 != -1)
        swift_once();
      v13 = qword_1ED3B9688;
      swift_bridgeObjectRetain();
    }
    return v13;
  }
  swift_bridgeObjectRelease();
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  v16 = v15;
  v13 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1BB873E34();
  if (v7)
    swift_bridgeObjectRelease();
  sub_1BB873E34();
  *v16 = v18;
  v16[1] = v2;
  v16[2] = 0;
  v16[3] = 0xE000000000000000;
  v16[4] = 0;
  v16[5] = 0xE000000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

ValueMetadata *type metadata accessor for FormatOptionValidator()
{
  return &type metadata for FormatOptionValidator;
}

unint64_t sub_1BB6B87C0()
{
  unint64_t result;

  result = qword_1EF2CA6A8;
  if (!qword_1EF2CA6A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93DFB8, &type metadata for FormatOptionValidator);
    atomic_store(result, (unint64_t *)&qword_1EF2CA6A8);
  }
  return result;
}

_QWORD *sub_1BB6B8804(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1BA4CDF6C(0, &qword_1EF2CA6B0, (uint64_t (*)(void))sub_1BB6B8994, (uint64_t)&type metadata for FormatOptionValidator.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6B8994();
  v9 = v8;
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BA4CDF6C(0, &qword_1EF2CA6C0, (uint64_t (*)(void))sub_1BA832824, (uint64_t)&type metadata for FormatOptionType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BB6B89D8(&qword_1EF2CA6C8, (uint64_t (*)(void))sub_1BA74E2A8, MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1BB6B8994()
{
  unint64_t result;

  result = qword_1EF2CA6B8;
  if (!qword_1EF2CA6B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93E0F4, &type metadata for FormatOptionValidator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA6B8);
  }
  return result;
}

uint64_t sub_1BB6B89D8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4CDF6C(255, &qword_1EF2CA6C0, (uint64_t (*)(void))sub_1BA832824, (uint64_t)&type metadata for FormatOptionType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatOptionValidator.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB6B8A9C + 4 * byte_1BB93DF20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB6B8ABC + 4 * byte_1BB93DF25[v4]))();
}

_BYTE *sub_1BB6B8A9C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB6B8ABC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6B8AC4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6B8ACC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6B8AD4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6B8ADC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionValidator.CodingKeys()
{
  return &type metadata for FormatOptionValidator.CodingKeys;
}

unint64_t sub_1BB6B8AFC()
{
  unint64_t result;

  result = qword_1EF2CA6E0;
  if (!qword_1EF2CA6E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93E0CC, &type metadata for FormatOptionValidator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA6E0);
  }
  return result;
}

unint64_t sub_1BB6B8B44()
{
  unint64_t result;

  result = qword_1EF2CA6E8;
  if (!qword_1EF2CA6E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93E03C, &type metadata for FormatOptionValidator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA6E8);
  }
  return result;
}

unint64_t sub_1BB6B8B8C()
{
  unint64_t result;

  result = qword_1EF2CA6F0;
  if (!qword_1EF2CA6F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93E064, &type metadata for FormatOptionValidator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA6F0);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for FormatJson(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v7[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 8u:
      case 0xAu:
        *(_QWORD *)a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v9 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v9;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v10 = sub_1BB86C67C();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(_QWORD *)a1 = *a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v11 = *a2;
        *(_QWORD *)a1 = *a2;
        v12 = v11;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for FormatJson(id *a1)
{
  uint64_t v2;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 5u:
    case 8u:
    case 0xAu:
      swift_bridgeObjectRelease();
      break;
    case 6u:
      v2 = sub_1BB86C67C();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 7u:
      swift_release();
      break;
    case 9u:

      break;
    default:
      return;
  }
}

_QWORD *initializeWithCopy for FormatJson(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 8u:
    case 0xAu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 5u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 6u:
      v7 = sub_1BB86C67C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_8;
    case 7u:
      *a1 = *a2;
      swift_retain();
      goto LABEL_8;
    case 9u:
      v8 = (void *)*a2;
      *a1 = *a2;
      v9 = v8;
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for FormatJson(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  id v8;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 8u:
      case 0xAu:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 6u:
        v6 = sub_1BB86C67C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_9;
      case 7u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_9;
      case 9u:
        v7 = (void *)*a2;
        *a1 = *a2;
        v8 = v7;
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for FormatJson()
{
  uint64_t result;

  result = qword_1ED3A5308;
  if (!qword_1ED3A5308)
    return swift_getSingletonMetadata();
  return result;
}

void *initializeWithTake for FormatJson(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 6)
  {
    v6 = sub_1BB86C67C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for FormatJson(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      v6 = sub_1BB86C67C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BB6B9294()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1BB6B9344(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1BB6BAF6C(a1, a2);
  swift_release();
  return v2;
}

id sub_1BB6B9384(uint64_t a1)
{
  return objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_traitCollectionWithUserInterfaceStyle_, a1);
}

void sub_1BB6B93BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[24];

  v26[4] = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3AF778, (uint64_t (*)(uint64_t))type metadata accessor for FormatJson, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FormatOption();
  v26[7] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], v3);
  MEMORY[0x1E0C80A78](v6);
  v26[11] = (char *)v26 - v7;
  v8 = sub_1BB86E710();
  MEMORY[0x1E0C80A78](v8);
  v26[19] = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v26[14] = (char *)v26 - v11;
  v12 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for FormatJson();
  v26[15] = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v26[1] = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v26[3] = (char *)v26 - v16;
  MEMORY[0x1E0C80A78](v17);
  v26[2] = (char *)v26 - v18;
  MEMORY[0x1E0C80A78](v19);
  v26[18] = (char *)v26 - v20;
  MEMORY[0x1E0C80A78](v21);
  v26[16] = (char *)v26 - v22;
  MEMORY[0x1E0C80A78](v23);
  sub_1BA4C2DD8(v26[12], (uint64_t)v26 - v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  v25 = (char *)&loc_1BB6B9660 + *((int *)qword_1BB6BA840 + swift_getEnumCaseMultiPayload());
  v26[20] = a1;
  __asm { BR              X10 }
}

uint64_t sub_1BB6B9674()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t (*v9)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t *v10;
  uint64_t v11;

  v5 = *v0;
  swift_retain();
  v6 = sub_1BB6BA964(v5, v2);
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    v8 = *(uint64_t **)(v4 - 256);
    *v8 = v7;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v8, *MEMORY[0x1E0DB4898], v1);
    v9 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v10 = v8;
    v11 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v10 = *(uint64_t **)(v4 - 256);
    v11 = 1;
  }
  return v9(v10, v11, 1, v1);
}

uint64_t sub_1BB6BA89C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatJson();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB6BA8E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BB6BA904()
{
  unint64_t result;

  result = qword_1ED3BB4B8;
  if (!qword_1ED3BB4B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3BB4B8);
  }
  return result;
}

uint64_t sub_1BB6BA940()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB6BA964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t *v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char v54;
  unint64_t v55;
  BOOL v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  char *v63;
  int64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int64_t i;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v70 = (uint64_t)v59 - v5;
  v6 = sub_1BB86E710();
  v72 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  MEMORY[0x1E0C80A78](v6);
  v66 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v63 = (char *)v59 - v9;
  sub_1BB6BAF04();
  v11 = v10;
  MEMORY[0x1E0C80A78](v10);
  v62 = (_QWORD *)((char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v69 = (char *)v59 - v14;
  MEMORY[0x1E0C80A78](v15);
  v68 = (char *)v59 - v16;
  v17 = *(_QWORD *)(a1 + 64);
  v65 = a1 + 64;
  v75 = MEMORY[0x1E0DEE9E0];
  v18 = -1 << *(_BYTE *)(a1 + 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v17;
  v59[1] = -1 << *(_BYTE *)(a1 + 32);
  v64 = (unint64_t)(63 - v18) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  v67 = a1;
  v60 = a2;
  v61 = v11;
  v22 = (uint64_t *)v69;
  if (v20)
    goto LABEL_7;
LABEL_8:
  v24 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v24 < v64)
    {
      v25 = *(_QWORD *)(v65 + 8 * v24);
      v26 = i + 1;
      if (v25)
        goto LABEL_23;
      v26 = i + 2;
      if (i + 2 >= v64)
        goto LABEL_39;
      v25 = *(_QWORD *)(v65 + 8 * v26);
      if (v25)
        goto LABEL_23;
      v26 = i + 3;
      if (i + 3 >= v64)
        goto LABEL_39;
      v25 = *(_QWORD *)(v65 + 8 * v26);
      if (v25)
        goto LABEL_23;
      v26 = i + 4;
      if (i + 4 >= v64)
        goto LABEL_39;
      v25 = *(_QWORD *)(v65 + 8 * v26);
      if (v25)
      {
LABEL_23:
        v74 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v26 << 6);
        for (i = v26; ; v23 = __clz(__rbit64(v20)) | (i << 6))
        {
          v28 = *(_QWORD *)(a1 + 56);
          v29 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v23);
          v31 = *v29;
          v30 = v29[1];
          v32 = v28 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for FormatJson() - 8) + 72) * v23;
          v33 = v68;
          sub_1BA4C2DD8(v32, (uint64_t)&v68[*(int *)(v11 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
          *v33 = v31;
          v33[1] = v30;
          v34 = v11;
          sub_1BA5193C4((uint64_t)v33, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BB6BAF04);
          v35 = (uint64_t)v22 + *(int *)(v11 + 48);
          swift_bridgeObjectRetain();
          v36 = v70;
          sub_1BB6B93BC(a2, v70);
          v38 = v72;
          v37 = v73;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v36, 1, v73) == 1)
          {
            sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BB6BAF04);
            result = sub_1BA5C699C(v36, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            a1 = v67;
            v20 = v74;
            if (!v74)
              goto LABEL_8;
          }
          else
          {
            v39 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 32);
            v40 = v63;
            v39(v63, v36, v37);
            v41 = *(int *)(v34 + 48);
            v42 = v62;
            v43 = (uint64_t)v62 + v41;
            v44 = v37;
            v45 = *v22;
            v46 = v22[1];
            *v62 = *v22;
            v42[1] = v46;
            sub_1BA5193C4(v35, (uint64_t)v42 + v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
            v39(v66, (uint64_t)v40, v44);
            v47 = v75;
            v48 = *(_QWORD *)(v75 + 16);
            if (*(_QWORD *)(v75 + 24) <= v48)
            {
              sub_1BB4AF918(v48 + 1, 1);
              v47 = v75;
            }
            sub_1BB8745CC();
            sub_1BB872A90();
            result = sub_1BB874608();
            v49 = v47 + 64;
            v50 = -1 << *(_BYTE *)(v47 + 32);
            v51 = result & ~v50;
            v52 = v51 >> 6;
            v11 = v61;
            if (((-1 << v51) & ~*(_QWORD *)(v47 + 64 + 8 * (v51 >> 6))) != 0)
            {
              v53 = __clz(__rbit64((-1 << v51) & ~*(_QWORD *)(v47 + 64 + 8 * (v51 >> 6)))) | v51 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              v54 = 0;
              v55 = (unint64_t)(63 - v50) >> 6;
              do
              {
                if (++v52 == v55 && (v54 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_40;
                }
                v56 = v52 == v55;
                if (v52 == v55)
                  v52 = 0;
                v54 |= v56;
                v57 = *(_QWORD *)(v49 + 8 * v52);
              }
              while (v57 == -1);
              v53 = __clz(__rbit64(~v57)) + (v52 << 6);
            }
            *(_QWORD *)(v49 + ((v53 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v53;
            v58 = (_QWORD *)(*(_QWORD *)(v47 + 48) + 16 * v53);
            *v58 = v45;
            v58[1] = v46;
            v39((char *)(*(_QWORD *)(v47 + 56) + *(_QWORD *)(v72 + 72) * v53), (uint64_t)v66, v73);
            ++*(_QWORD *)(v47 + 16);
            result = sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
            a1 = v67;
            a2 = v60;
            v20 = v74;
            if (!v74)
              goto LABEL_8;
          }
LABEL_7:
          v74 = (v20 - 1) & v20;
        }
      }
      v27 = i + 5;
      if (i + 5 < v64)
      {
        v25 = *(_QWORD *)(v65 + 8 * v27);
        if (v25)
        {
          v26 = i + 5;
          goto LABEL_23;
        }
        while (1)
        {
          v26 = v27 + 1;
          if (__OFADD__(v27, 1))
            goto LABEL_41;
          if (v26 >= v64)
            break;
          v25 = *(_QWORD *)(v65 + 8 * v26);
          ++v27;
          if (v25)
            goto LABEL_23;
        }
      }
    }
LABEL_39:
    sub_1BA6EBD18();
    return v75;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1BB6BAF04()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AF7B0)
  {
    type metadata accessor for FormatJson();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AF7B0);
  }
}

unint64_t sub_1BB6BAF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v23 - v6;
  v8 = sub_1BB86E710();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v27 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v26 = (char *)v23 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v23[2] = v2;
  v14 = *(_QWORD *)(type metadata accessor for FormatJson() - 8);
  v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v16 = *(_QWORD *)(v14 + 72);
  v23[1] = a1;
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x1E0DEE9D8];
  v24 = v16;
  v25 = a2;
  do
  {
    sub_1BB6B93BC(a2, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    }
    else
    {
      v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v19 = v26;
      v18(v26, v7, v8);
      v18(v27, v19, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_1BB38E858(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      v21 = *(_QWORD *)(v17 + 16);
      v20 = *(_QWORD *)(v17 + 24);
      if (v21 >= v20 >> 1)
        v17 = sub_1BB38E858(v20 > 1, v21 + 1, 1, v17);
      *(_QWORD *)(v17 + 16) = v21 + 1;
      v18((char *)(v17+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v21), v27, v8);
      v16 = v24;
      a2 = v25;
    }
    v15 += v16;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v17;
}

Swift::Void __swiftcall ArticleThumbnailView.prepareForReuse(identifier:)(Swift::String_optional identifier)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v2 = v1;
  *(Swift::String_optional *)(v1 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier) = identifier;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView);
  sub_1BB871710();
  v4 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
  v5 = objc_msgSend(v4, sel_subviews);
  sub_1BA81CF48();
  v6 = sub_1BB872DB4();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v7)
      goto LABEL_10;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      goto LABEL_10;
  }
  if (v7 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v9 = (id)MEMORY[0x1BCCE4630](i, v6);
    else
      v9 = *(id *)(v6 + 8 * i + 32);
    v10 = v9;
    objc_msgSend(v9, sel_removeFromSuperview);

  }
LABEL_10:
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setHidden_, 1);
  objc_msgSend(v3, sel_setHidden_, 1);
  v11 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView) = 0;

  v12 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion) == 1)
  {
    sub_1BB86F7E4();
    sub_1BB86F7D8();
    sub_1BB6BC8C4(&qword_1EF2CA720, (uint64_t)&protocol conformance descriptor for ArticleThumbnailView);
    sub_1BB86F7CC();
    swift_release();
    *(_BYTE *)(v2 + v12) = 0;
  }
}

uint64_t type metadata accessor for ArticleThumbnailView()
{
  return objc_opt_self();
}

void ArticleThumbnailView.asStatic(identifier:block:)(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  BOOL v8;
  void *v9;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t i;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void (*v19)(void *);

  v4 = v3;
  v5 = (_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier + 8);
  if (v6)
  {
    v8 = *v5 == a1 && v6 == a2;
    if (v8 || (sub_1BB874398() & 1) != 0)
    {
      v19 = a3;
      v9 = *(void **)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView);
      sub_1BB871710();
      v10 = *(void **)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
      v11 = objc_msgSend(v10, sel_subviews);
      sub_1BA81CF48();
      v12 = sub_1BB872DB4();

      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        v13 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (v13)
          goto LABEL_9;
      }
      else
      {
        v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v13)
        {
LABEL_9:
          if (v13 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v13; ++i)
          {
            if ((v12 & 0xC000000000000001) != 0)
              v15 = (id)MEMORY[0x1BCCE4630](i, v12);
            else
              v15 = *(id *)(v12 + 8 * i + 32);
            v16 = v15;
            objc_msgSend(v15, sel_removeFromSuperview);

          }
        }
      }
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setHidden_, 1);
      objc_msgSend(v9, sel_setHidden_, 0);
      v17 = *(void **)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView);
      *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView) = 0;

      v19(v9);
      v18 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
      if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion) == 1)
      {
        sub_1BB86F7E4();
        sub_1BB86F7D8();
        sub_1BB6BC8C4(&qword_1EF2CA720, (uint64_t)&protocol conformance descriptor for ArticleThumbnailView);
        sub_1BB86F7CC();
        swift_release();
        *(_BYTE *)(v4 + v18) = 0;
      }
    }
  }
}

void ArticleThumbnailView.asDynamic<A>(identifier:dynamicView:block:)(uint64_t a1, uint64_t a2, id a3, void (*a4)(id))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  void *v21;
  id v22;

  v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier + 8);
  if (!v6)
    return;
  v7 = v4;
  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier) == a1 && v6 == a2;
  if (!v9 && (sub_1BB874398() & 1) == 0)
    return;
  v10 = objc_msgSend(a3, sel_superview);
  v11 = *(void **)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
  if (v10)
  {
    v12 = v10;
    sub_1BA81CF48();
    v13 = v11;
    v14 = v12;
    LOBYTE(v12) = sub_1BB8738B8();

    if ((v12 & 1) != 0)
      goto LABEL_20;
  }
  v15 = objc_msgSend(v11, sel_subviews);
  sub_1BA81CF48();
  v16 = sub_1BB872DB4();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v17)
      goto LABEL_11;
LABEL_19:
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_addSubview_, a3);
    objc_msgSend(v11, sel_setHidden_, 0);
    objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView), sel_setHidden_, 1);
    v21 = *(void **)(v7 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView);
    *(_QWORD *)(v7 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView) = a3;

    v22 = a3;
LABEL_20:
    a4(a3);
    sub_1BB6BBC20();
    return;
  }
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v17)
    goto LABEL_19;
LABEL_11:
  if (v17 >= 1)
  {
    for (i = 0; i != v17; ++i)
    {
      if ((v16 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x1BCCE4630](i, v16);
      else
        v19 = *(id *)(v16 + 8 * i + 32);
      v20 = v19;
      objc_msgSend(v19, sel_removeFromSuperview);

    }
    goto LABEL_19;
  }
  __break(1u);
}

id ArticleThumbnailView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *ArticleThumbnailView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  id v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView;
  v11 = objc_allocWithZone((Class)sub_1BB87171C());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView] = 0;
  v12[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion] = 0;
  v14 = &v12[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;

  v19.receiver = v12;
  v19.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v15, sel_setAccessibilityIgnoresInvertColors_, 1);
  v16 = *(void **)&v15[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView];
  objc_msgSend(v15, sel_addSubview_, v16);
  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView]);
  v17 = v16;
  objc_msgSend(v17, sel_setHidden_, 1);

  return v15;
}

id ArticleThumbnailView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

Swift::Void __swiftcall ArticleThumbnailView.layoutSubviews()()
{
  char *v0;
  void *v1;
  void *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);
}

Swift::Void __swiftcall ArticleThumbnailView.didMoveToSuperview()()
{
  char *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_didMoveToSuperview);
  if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView], sel_isHidden) & 1) == 0)sub_1BB6BBC20();
}

uint64_t sub_1BB6BBC20()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  char v3;

  result = swift_getObjectType();
  v2 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion) & 1) == 0)
  {
    sub_1BB86F7E4();
    sub_1BB86F7D8();
    sub_1BB6BC8C4(&qword_1EF2CA720, (uint64_t)&protocol conformance descriptor for ArticleThumbnailView);
    sub_1BB86F7C0();
    swift_release();
    *(_BYTE *)(v0 + v2) = 1;
    if (qword_1ED39E288 != -1)
      swift_once();
    sub_1BB6BC8C4(&qword_1ED39E0D8, (uint64_t)&protocol conformance descriptor for ArticleThumbnailView);
    result = sub_1BB86D210();
    if ((v3 & 1) == 0 && *(_BYTE *)(v0 + v2) == 1)
    {
      sub_1BB86F7D8();
      sub_1BB86F7CC();
      result = swift_release();
      *(_BYTE *)(v0 + v2) = 0;
    }
  }
  return result;
}

Swift::Void __swiftcall ArticleThumbnailView.removeFromSuperview()()
{
  char *v0;
  uint64_t v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_removeFromSuperview);
  if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView], sel_isHidden) & 1) == 0)
  {
    v1 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
    if (v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion] == 1)
    {
      sub_1BB86F7E4();
      sub_1BB86F7D8();
      sub_1BB6BC8C4(&qword_1EF2CA720, (uint64_t)&protocol conformance descriptor for ArticleThumbnailView);
      sub_1BB86F7CC();
      swift_release();
      v0[v1] = 0;
    }
  }
}

id ArticleThumbnailView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ArticleThumbnailView.motionManager(_:didUpdateMotionData:)()
{
  sub_1BB6BC670();
}

void ArticleThumbnailView.motionManager(_:motionEnabled:)()
{
  sub_1BB6BC510();
}

void sub_1BB6BBF54()
{
  sub_1BB6BC670();
}

void sub_1BB6BBF5C()
{
  sub_1BB6BC510();
}

void sub_1BB6BBF68()
{
  sub_1BB6BC8C4(&qword_1EF2CA730, (uint64_t)&protocol conformance descriptor for ArticleThumbnailView);
  JUMPOUT(0x1BCCE1E7CLL);
}

void sub_1BB6BBFA0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _QWORD *a5, void *a6, uint64_t a7, _OWORD *a8)
{
  uint64_t v9;
  BOOL v15;
  void *v16;
  void *v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t i;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  _OWORD *v29;

  v9 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier + 8);
  if (v9)
  {
    v15 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier) == a1 && v9 == a2;
    if (v15 || (sub_1BB874398() & 1) != 0)
    {
      v28 = a7;
      v29 = a8;
      v16 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView);
      sub_1BB871710();
      v17 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
      v18 = objc_msgSend(v17, sel_subviews);
      sub_1BA81CF48();
      v19 = sub_1BB872DB4();

      v26 = a5;
      v27 = a6;
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        v20 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (v20)
          goto LABEL_9;
      }
      else
      {
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v20)
        {
LABEL_9:
          if (v20 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v20; ++i)
          {
            if ((v19 & 0xC000000000000001) != 0)
              v22 = (id)MEMORY[0x1BCCE4630](i, v19);
            else
              v22 = *(id *)(v19 + 8 * i + 32);
            v23 = v22;
            objc_msgSend(v22, sel_removeFromSuperview, v26, v27, v28, v29);

          }
        }
      }
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setHidden_, 1);
      objc_msgSend(v16, sel_setHidden_, 0);
      v24 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView);
      *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView) = 0;

      sub_1BAA4C838((char *)v16, a4, v26, v27, v28, v29);
      v25 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
      if (*(_BYTE *)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion) == 1)
      {
        sub_1BB86F7E4();
        sub_1BB86F7D8();
        sub_1BB6BC8C4(&qword_1EF2CA720, (uint64_t)&protocol conformance descriptor for ArticleThumbnailView);
        sub_1BB86F7CC();
        swift_release();
        *(_BYTE *)(a3 + v25) = 0;
      }
    }
  }
}

void sub_1BB6BC1C8(uint64_t a1, uint64_t a2, id a3, uint64_t a4, void *a5, uint64_t a6, int a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v13;
  uint64_t v14;
  BOOL v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t i;
  id v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;

  v13 = (_QWORD *)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier);
  v14 = *(_QWORD *)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier + 8);
  if (v14)
  {
    v20 = *v13 == a1 && v14 == a2;
    if (v20 || (sub_1BB874398() & 1) != 0)
    {
      v34 = a6;
      v21 = objc_msgSend(a3, sel_superview);
      v22 = *(void **)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
      if (v21)
      {
        v23 = v21;
        sub_1BA81CF48();
        v24 = v22;
        v25 = v23;
        LOBYTE(v23) = sub_1BB8738B8();

        if ((v23 & 1) != 0)
          goto LABEL_19;
      }
      v26 = objc_msgSend(v22, sel_subviews);
      sub_1BA81CF48();
      v27 = sub_1BB872DB4();

      if (v27 >> 62)
      {
        swift_bridgeObjectRetain();
        v28 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (v28)
          goto LABEL_11;
      }
      else
      {
        v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v28)
        {
LABEL_11:
          if (v28 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v28; ++i)
          {
            if ((v27 & 0xC000000000000001) != 0)
              v30 = (id)MEMORY[0x1BCCE4630](i, v27);
            else
              v30 = *(id *)(v27 + 8 * i + 32);
            v31 = v30;
            objc_msgSend(v30, sel_removeFromSuperview);

          }
        }
      }
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_addSubview_, a3);
      objc_msgSend(v22, sel_setHidden_, 0);
      objc_msgSend(*(id *)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView), sel_setHidden_, 1);
      v32 = *(void **)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView);
      *(_QWORD *)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView) = a3;

      v33 = a3;
LABEL_19:
      sub_1BAA4CDD4(a3, a5, v34, a7, a8, a9, a10, a11, a12);
      sub_1BB6BBC20();
    }
  }
}

void _s8NewsFeed20ArticleThumbnailViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)sub_1BB87171C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView] = 0;
  v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion] = 0;
  v3 = &v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier];
  *v3 = 0;
  v3[1] = 0;

  sub_1BB873EAC();
  __break(1u);
}

void sub_1BB6BC510()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
  if ((objc_msgSend(v1, sel_isHidden) & 1) != 0)
    return;
  v2 = objc_msgSend(v1, sel_subviews);
  sub_1BA81CF48();
  v3 = sub_1BB872DB4();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    goto LABEL_13;
LABEL_4:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1BCCE4630](i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      sub_1BB8702DC();
      if (swift_dynamicCastClass())
        sub_1BB8702B8();

    }
    goto LABEL_13;
  }
  __break(1u);
}

void sub_1BB6BC670()
{
  char *v0;
  char *v1;
  double Width;
  void *v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  CGRect v11;

  v1 = v0;
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v11);
  if (qword_1ED39E1B0 != -1)
    swift_once();
  if (*(double *)&qword_1ED4763F0 < Width)
  {
    v3 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView];
    if ((objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView], sel_isHidden, *(double *)&qword_1ED4763F0) & 1) != 0)return;
    v5 = objc_msgSend(v3, sel_subviews);
    sub_1BA81CF48();
    v6 = sub_1BB872DB4();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (!v7)
        goto LABEL_20;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v7)
        goto LABEL_20;
    }
    if (v7 < 1)
    {
      __break(1u);
      return;
    }
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1BCCE4630](i, v6);
      else
        v9 = *(id *)(v6 + 8 * i + 32);
      v10 = v9;
      sub_1BB8702DC();
      if (swift_dynamicCastClass())
        sub_1BB8702D0();

    }
LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
  v4 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
  if (v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion] == 1)
  {
    sub_1BB86F7E4();
    sub_1BB86F7D8();
    sub_1BB6BC8C4(&qword_1EF2CA720, (uint64_t)&protocol conformance descriptor for ArticleThumbnailView);
    sub_1BB86F7CC();
    swift_release();
    v0[v4] = 0;
  }
  sub_1BB6BC510();
}

uint64_t sub_1BB6BC8A0()
{
  return sub_1BB6BC8C4(&qword_1EF2CA728, (uint64_t)&protocol conformance descriptor for ArticleThumbnailView);
}

uint64_t sub_1BB6BC8C4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ArticleThumbnailView();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t StubOfflineProvider.__allocating_init(offlineReason:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

id sub_1BB6BC930(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_addObserver_, a1);
}

id sub_1BB6BC944(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_removeObserver_, a1);
}

id sub_1BB6BC958()
{
  id *v0;

  return objc_msgSend(*v0, sel_offlineReason);
}

uint64_t StubOfflineProvider.offlineReason.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t StubOfflineProvider.offlineReason.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*StubOfflineProvider.offlineReason.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t StubOfflineProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t StubOfflineProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of OfflineProviding.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for StubOfflineProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StubOfflineProvider.__allocating_init(offlineReason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t FormatGroupNodeLayoutAttributes.flipRightToLeft(bounds:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v12 = *(_QWORD *)(v1 + 48);
  v11 = *(_BYTE *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 72);
  type metadata accessor for FormatLayoutAttributes();
  sub_1BA4A2870(&qword_1ED3C9F20, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB86D96C();
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v12;
  *(_BYTE *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  swift_retain();
  sub_1BA67D3F4(v4);
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t FormatGroupNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t FormatGroupNodeLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatGroupNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

uint64_t FormatGroupNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

unint64_t FormatGroupNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatGroupNodeLayoutAttributes.isUserInteractionEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*FormatGroupNodeLayoutAttributes.isUserInteractionEnabled.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatGroupNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatGroupNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatGroupNodeLayoutAttributes.maskLayoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatGroupNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatGroupNodeLayoutAttributes.init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v10 = *a2;
  v11 = *a4;
  v12 = *a7;
  v13 = *((_BYTE *)a7 + 8);
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = v10;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = v11;
  *(_BYTE *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = v12;
  *(_BYTE *)(a9 + 56) = v13;
  *(_QWORD *)(a9 + 64) = a8;
  *(_QWORD *)(a9 + 72) = a10;
  return result;
}

double FormatGroupNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1BB6BCC58(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BB6BCC94 + 4 * byte_1BB93E410[a1]))(0xD000000000000010, 0x80000001BB965740);
}

uint64_t sub_1BB6BCC94()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB6BCCAC()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB6BCCC0()
{
  return 0x696C696269736976;
}

uint64_t sub_1BB6BCCDC()
{
  uint64_t v0;

  return v0 + 4;
}

uint64_t sub_1BB6BCD2C()
{
  return 0x656C797473;
}

uint64_t sub_1BB6BCD40()
{
  unsigned __int8 *v0;

  return sub_1BB6BCC58(*v0);
}

uint64_t sub_1BB6BCD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB6BDDE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB6BCD6C()
{
  sub_1BB6BD168();
  return sub_1BB874710();
}

uint64_t sub_1BB6BCD94()
{
  sub_1BB6BD168();
  return sub_1BB87471C();
}

uint64_t FormatGroupNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  int v32;
  char v33;

  sub_1BB6BD890(0, &qword_1EF2CA7D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - v6;
  v9 = *v1;
  v8 = v1[1];
  v28 = v1[2];
  v29 = v8;
  v27 = v1[3];
  v32 = *((unsigned __int8 *)v1 + 32);
  v10 = v1[5];
  v25 = v1[6];
  v26 = *((unsigned __int8 *)v1 + 56);
  v11 = v1[8];
  v12 = v1[9];
  v23 = v10;
  v24 = v11;
  v13 = a1[3];
  v14 = a1;
  v16 = v15;
  __swift_project_boxed_opaque_existential_1(v14, v13);
  sub_1BB6BD168();
  sub_1BB8746C8();
  v30 = v9;
  v17 = v7;
  v33 = 0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BA4A2870(&qword_1ED3C9F28, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB8741AC();
  if (!v2)
  {
    v18 = v27;
    v19 = v32;
    v30 = v29;
    v33 = 1;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v30) = 2;
    sub_1BB8741A0();
    v30 = v18;
    v33 = 3;
    sub_1BA84B088();
    sub_1BB8741AC();
    if ((v19 & 1) == 0)
    {
      LOBYTE(v30) = 4;
      v33 = 0;
      sub_1BB6BD1AC();
      sub_1BB874464();
    }
    v30 = v23;
    v33 = 5;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA4A2870(&qword_1EF2AC0C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    v20 = v24;
    v30 = v25;
    v31 = v26;
    v33 = 6;
    sub_1BA5FB410();
    sub_1BB87414C();
    v30 = v20;
    v33 = 7;
    type metadata accessor for FormatGroupNodeMaskLayoutAttributes();
    sub_1BA4A2870(&qword_1EF2CA7F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMaskLayoutAttributes);
    sub_1BB87414C();
    v30 = v12;
    v33 = 8;
    type metadata accessor for FormatGroupNodeStyle();
    sub_1BA4A2870(&qword_1ED3A6800, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeStyle, (uint64_t)&protocol conformance descriptor for FormatGroupNodeStyle);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v17, v16);
}

unint64_t sub_1BB6BD168()
{
  unint64_t result;

  result = qword_1EF2CA7E0;
  if (!qword_1EF2CA7E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93E634, &type metadata for FormatGroupNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA7E0);
  }
  return result;
}

unint64_t sub_1BB6BD1AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2CA7E8;
  if (!qword_1EF2CA7E8)
  {
    sub_1BB6BD890(255, &qword_1EF2CA7D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2CA7E8);
  }
  return result;
}

uint64_t FormatGroupNodeLayoutAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v21[2];
  unint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unsigned __int8 v29;
  int v30;
  unsigned __int8 v31;
  char v32;

  sub_1BB6BD890(0, &qword_1EF2CA7F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6BD168();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  type metadata accessor for FormatLayoutAttributes();
  v32 = 0;
  sub_1BA4A2870(&qword_1ED3C9F30, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB8740D4();
  v11 = v28;
  v32 = 1;
  sub_1BA995268();
  swift_retain();
  sub_1BB874068();
  v12 = v28;
  LOBYTE(v28) = 2;
  swift_retain();
  v26 = sub_1BB8740C8();
  v32 = 3;
  sub_1BA651250();
  sub_1BB8740D4();
  v13 = v28;
  LOBYTE(v28) = 4;
  v25 = v13;
  sub_1BA67D3F4(v13);
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v32 = 4;
    sub_1BB8740D4();
    v14 = v31;
  }
  else
  {
    v14 = 1;
  }
  v30 = v14;
  type metadata accessor for FormatContextLayoutOptions();
  v32 = 5;
  sub_1BA4A2870(&qword_1EF2AC0F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
  sub_1BB8740D4();
  v15 = v28;
  v32 = 6;
  sub_1BA650BA0();
  v27 = v15;
  swift_retain();
  sub_1BB874068();
  v24 = v28;
  v23 = v29;
  type metadata accessor for FormatGroupNodeMaskLayoutAttributes();
  v32 = 7;
  sub_1BA4A2870(&qword_1EF2CA800, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMaskLayoutAttributes);
  sub_1BB874068();
  v16 = v28;
  v21[1] = type metadata accessor for FormatGroupNodeStyle();
  v32 = 8;
  sub_1BA4A2870(&qword_1ED3C8D60, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeStyle, (uint64_t)&protocol conformance descriptor for FormatGroupNodeStyle);
  v22 = v16;
  swift_retain();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17 = v28;
  swift_retain();
  swift_retain();
  v18 = v25;
  sub_1BA67D3F4(v25);
  swift_retain();
  sub_1BA6EEDB4(v18);
  swift_release();
  swift_release();
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v12;
  v19 = v27;
  *(_QWORD *)(a2 + 16) = v26;
  *(_QWORD *)(a2 + 24) = v18;
  *(_BYTE *)(a2 + 32) = v30;
  v20 = v24;
  *(_QWORD *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = v20;
  *(_BYTE *)(a2 + 56) = v23;
  *(_QWORD *)(a2 + 64) = v22;
  *(_QWORD *)(a2 + 72) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_release();
  swift_release();
  sub_1BA6EEDB4(v18);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1BB6BD890(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB6BD168();
    v7 = a3(a1, &type metadata for FormatGroupNodeLayoutAttributes.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB6BD8F0()
{
  unint64_t result;

  result = qword_1EF2CA808;
  if (!qword_1EF2CA808)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupNodeLayoutAttributes, &type metadata for FormatGroupNodeLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2CA808);
  }
  return result;
}

uint64_t sub_1BB6BD934()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1BB6BD970()
{
  unint64_t result;

  result = qword_1EF2CA810;
  if (!qword_1EF2CA810)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupNodeLayoutAttributes, &type metadata for FormatGroupNodeLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2CA810);
  }
  return result;
}

uint64_t sub_1BB6BD9B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupNodeLayoutAttributes.init(from:)(a1, a2);
}

uint64_t sub_1BB6BD9C8(_QWORD *a1)
{
  return FormatGroupNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BB6BD9E0@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 32);
  return result;
}

_BYTE *sub_1BB6BD9EC(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 32) = *result;
  return result;
}

uint64_t destroy for FormatGroupNodeLayoutAttributes(uint64_t a1)
{
  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(a1 + 24));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for FormatGroupNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_retain();
  sub_1BA67D3F4(v5);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatGroupNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  sub_1BA67D3F4(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  sub_1BA6EEDB4(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatGroupNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_1BA6EEDB4(v4);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatGroupNodeLayoutAttributes()
{
  return &type metadata for FormatGroupNodeLayoutAttributes;
}

uint64_t storeEnumTagSinglePayload for FormatGroupNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BB6BDC8C + 4 * byte_1BB93E41E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BB6BDCC0 + 4 * byte_1BB93E419[v4]))();
}

uint64_t sub_1BB6BDCC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6BDCC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6BDCD0);
  return result;
}

uint64_t sub_1BB6BDCDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6BDCE4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BB6BDCE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6BDCF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatGroupNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB6BDD10()
{
  unint64_t result;

  result = qword_1EF2CA818;
  if (!qword_1EF2CA818)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93E60C, &type metadata for FormatGroupNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA818);
  }
  return result;
}

unint64_t sub_1BB6BDD58()
{
  unint64_t result;

  result = qword_1EF2CA820;
  if (!qword_1EF2CA820)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93E57C, &type metadata for FormatGroupNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA820);
  }
  return result;
}

unint64_t sub_1BB6BDDA0()
{
  unint64_t result;

  result = qword_1EF2CA828;
  if (!qword_1EF2CA828)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93E5A4, &type metadata for FormatGroupNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA828);
  }
  return result;
}

uint64_t sub_1BB6BDDE4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BB965740 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB985180 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

unint64_t FormatSponsoredBannerSizing.filled.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1BA71CA6C(v2);
}

unint64_t FormatSponsoredBannerSizing.unfilled.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  return sub_1BAC651E4(v2);
}

uint64_t sub_1BB6BE178@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSponsoredBannerSizing.init(from:)(a1, a2);
}

uint64_t sub_1BB6BE18C(_QWORD *a1)
{
  return FormatSponsoredBannerSizing.encode(to:)(a1);
}

uint64_t sub_1BB6BE1A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t *v17;
  uint64_t v18;
  int v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v30 = a3;
  v28 = a4;
  v29 = a2;
  v6 = sub_1BB871E24();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FeedSponsorshipBannerAd();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v4;
  v13 = v4[1];
  v15 = v31;
  result = sub_1BAF65650(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), (uint64_t)v12);
  if (!v15)
  {
    v27 = v14;
    v31 = v13;
    v17 = v28;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v12[*(int *)(v10 + 20)], v6);
    v18 = v7;
    v19 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
    v20 = v9;
    if (v19 == *MEMORY[0x1E0D52E38])
    {
      v21 = v27;
      v32 = v27;
      sub_1BA71CA6C(v27);
      sub_1BA717E88();
      sub_1BA719718(v21);
      sub_1BB6BE86C((uint64_t)v12);
    }
    else
    {
      v27 = v6;
      if (v19 != *MEMORY[0x1E0D52E18])
      {
        result = sub_1BB87438C();
        __break(1u);
        return result;
      }
      v22 = v31;
      if ((~v31 & 0xF000000000000007) != 0)
      {
        v32 = v31;
        sub_1BA71CA6C(v31);
        sub_1BA717E88();
        sub_1BB6BE86C((uint64_t)v12);
        sub_1BAC651F8(v22);
      }
      else
      {
        sub_1BB6BE86C((uint64_t)v12);
        v23 = swift_allocObject();
        *(_QWORD *)(v23 + 16) = 0x3FF0000000000000;
        *v17 = v23;
        v24 = *MEMORY[0x1E0DB63F0];
        sub_1BA71C89C();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v17, v24, v25);
      }
      v6 = v27;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v6);
  }
  return result;
}

BOOL _s8NewsFeed27FormatSponsoredBannerSizingV2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v7;
  unint64_t v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = a2[1];
  v7 = *a2;
  v8 = v2;
  if ((static FormatSize.== infix(_:_:)(&v8, &v7) & 1) == 0)
    return 0;
  if ((~v3 & 0xF000000000000007) == 0)
  {
    if ((~v4 & 0xF000000000000007) == 0)
      return 1;
    goto LABEL_7;
  }
  v8 = v3;
  if ((~v4 & 0xF000000000000007) == 0)
  {
    sub_1BA71CA6C(v3);
    sub_1BA71CA6C(v3);
    sub_1BA719718(v3);
LABEL_7:
    sub_1BAC651E4(v4);
    sub_1BAC651F8(v3);
    sub_1BAC651F8(v4);
    return 0;
  }
  v7 = v4;
  sub_1BA71CA6C(v3);
  sub_1BA71CA6C(v3);
  v5 = static FormatSize.== infix(_:_:)(&v8, &v7);
  sub_1BA719718(v8);
  sub_1BAC651F8(v3);
  return (v5 & 1) != 0;
}

unint64_t sub_1BB6BE4E4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6BE508();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6BE508()
{
  unint64_t result;

  result = qword_1EF2CA830;
  if (!qword_1EF2CA830)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSponsoredBannerSizing, &type metadata for FormatSponsoredBannerSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2CA830);
  }
  return result;
}

unint64_t sub_1BB6BE54C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEB8288();
  a1[2] = sub_1BAEEC45C();
  result = sub_1BB6BE580();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6BE580()
{
  unint64_t result;

  result = qword_1EF2CA838;
  if (!qword_1EF2CA838)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSponsoredBannerSizing, &type metadata for FormatSponsoredBannerSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2CA838);
  }
  return result;
}

unint64_t destroy for FormatSponsoredBannerSizing(unint64_t *a1)
{
  unint64_t result;

  sub_1BA719718(*a1);
  result = a1[1];
  if ((~result & 0xF000000000000007) != 0)
    return sub_1BA719718(result);
  return result;
}

unint64_t *_s8NewsFeed27FormatSponsoredBannerSizingVwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a2;
  sub_1BA71CA6C(*a2);
  *a1 = v4;
  v5 = a2[1];
  if ((~v5 & 0xF000000000000007) != 0)
    sub_1BA71CA6C(v5);
  a1[1] = v5;
  return a1;
}

unint64_t *assignWithCopy for FormatSponsoredBannerSizing(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *a2;
  sub_1BA71CA6C(*a2);
  v5 = *a1;
  *a1 = v4;
  sub_1BA719718(v5);
  v6 = a1 + 1;
  v7 = a2[1];
  v8 = v7 & 0xF000000000000007;
  if ((~a1[1] & 0xF000000000000007) != 0)
  {
    if (v8 == 0xF000000000000007)
    {
      sub_1BB6BE708(a1 + 1);
      *v6 = a2[1];
    }
    else
    {
      sub_1BA71CA6C(a2[1]);
      v9 = *v6;
      *v6 = v7;
      sub_1BA719718(v9);
    }
  }
  else
  {
    if (v8 != 0xF000000000000007)
      sub_1BA71CA6C(a2[1]);
    *v6 = v7;
  }
  return a1;
}

unint64_t *sub_1BB6BE708(unint64_t *a1)
{
  destroy for FormatSize(a1);
  return a1;
}

unint64_t *assignWithTake for FormatSponsoredBannerSizing(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v4 = *a1;
  *a1 = *a2;
  sub_1BA719718(v4);
  v6 = a1 + 1;
  v5 = a1[1];
  v7 = a2[1];
  if ((~v5 & 0xF000000000000007) != 0)
  {
    if ((~v7 & 0xF000000000000007) != 0)
    {
      *v6 = v7;
      sub_1BA719718(v5);
      return a1;
    }
    sub_1BB6BE708(a1 + 1);
  }
  *v6 = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSponsoredBannerSizing(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x6A && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 106);
  v3 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x69)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatSponsoredBannerSizing(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x69)
  {
    *(_QWORD *)result = a2 - 106;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x6A)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x6A)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSponsoredBannerSizing()
{
  return &type metadata for FormatSponsoredBannerSizing;
}

uint64_t sub_1BB6BE86C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedSponsorshipBannerAd();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB6BE8A8()
{
  return swift_deallocObject();
}

uint64_t FeedGroupDebugFormat.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA5E34EC(v1 + OBJC_IVAR____TtC8NewsFeed20FeedGroupDebugFormat_content, a1);
}

uint64_t FeedGroupDebugFormat.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA598594(v0 + OBJC_IVAR____TtC8NewsFeed20FeedGroupDebugFormat_content);
  return v0;
}

uint64_t sub_1BB6BE968()
{
  return type metadata accessor for FeedGroupDebugFormat();
}

uint64_t method lookup function for FeedGroupDebugFormat()
{
  return swift_lookUpClassMethod();
}

uint64_t FeedGroupKnobsRepool.repooling(cursor:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v22 = *v2;
  v3 = (uint64_t *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 184));
  v4 = *((_BYTE *)v3 + 8);
  v5 = *((_BYTE *)v3 + 9);
  v6 = *((_BYTE *)v3 + 10);
  v7 = *((_BYTE *)v3 + 11);
  v8 = *((_BYTE *)v3 + 48);
  v9 = v3[7];
  v12 = *v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v10 = *((_OWORD *)v3 + 2);
  v17 = *((_OWORD *)v3 + 1);
  v18 = v10;
  v19 = v8;
  v20 = v9;
  v21 = *((_OWORD *)v3 + 4);
  return FeedGroupKnobsRepool.repooling(context:)((uint64_t)&v12, a2);
}

uint64_t FeedGroupKnobsRepool.repooling(context:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unsigned int v16;
  unint64_t v17;
  size_t v18;
  uint64_t isStackAllocationSafe;
  uint64_t v20;
  void *v21;
  char v22;
  char *v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33[3];

  v33[2] = *MEMORY[0x1E0C80C00];
  v4 = *v2;
  if (!v4)
  {
    v22 = 2;
    goto LABEL_28;
  }
  v32 = *(_QWORD *)(result + 16);
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 >> 62)
    goto LABEL_30;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = *(unsigned __int8 *)(v4 + 16);
  if (!v6)
    goto LABEL_26;
  do
  {
    v24 = v7;
    v23 = a2;
    v28 = v5 & 0xC000000000000001;
    v25 = v5 + 32;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    a2 = 0;
    v26 = v6;
    v27 = v5;
    while (1)
    {
      if (v28)
      {
        v8 = MEMORY[0x1BCCE4630](a2, v5);
        v9 = __OFADD__(a2++, 1);
        if (v9)
          break;
        goto LABEL_11;
      }
      v8 = *(_QWORD *)(v25 + 8 * (_QWORD)a2);
      swift_retain();
      v9 = __OFADD__(a2++, 1);
      if (v9)
        break;
LABEL_11:
      if (qword_1ED3BE7F8 != -1)
        swift_once();
      v10 = *(_QWORD *)(v8 + 24);
      v33[0] = *(_QWORD *)(v8 + 16);
      v33[1] = v10;
      swift_bridgeObjectRetain();
      v4 = sub_1BA6E583C(v33);
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v4 + 16);
      if (v11)
      {
        v30 = v8;
        v31 = a2;
        v29 = v4;
        v12 = (uint64_t *)(v4 + 64);
        while (1)
        {
          v13 = *(v12 - 1);
          v14 = *v12;
          v15 = *(_BYTE *)(v13 + 32);
          v16 = v15 & 0x3F;
          v17 = (unint64_t)((1 << v15) + 63) >> 6;
          v18 = 8 * v17;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v16 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)&v23 - ((v18 + 15) & 0x3FFFFFFFFFFFFFF0), v18);
            v20 = sub_1BA6EB5B4((uint64_t)&v23 - ((v18 + 15) & 0x3FFFFFFFFFFFFFF0), v17, v13, v32);
            swift_bridgeObjectRelease();
          }
          else
          {
            v21 = (void *)swift_slowAlloc();
            bzero(v21, v18);
            v20 = sub_1BA6EB5B4((uint64_t)v21, v17, v13, v32);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v21, -1, -1);
          }
          v4 = sub_1BA6EB330(v20, v13);
          swift_release();
          if ((v4 & 1) != 0)
            break;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_16:
          v12 += 5;
          if (!--v11)
            goto LABEL_24;
        }
        v4 = sub_1BA6EBD20(v32, v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
          goto LABEL_16;
        v24 = *(unsigned __int8 *)(v30 + 32);
LABEL_24:
        swift_release();
        swift_bridgeObjectRelease();
        v6 = v26;
        v5 = v27;
        a2 = v31;
        if (v31 == (char *)v26)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease_n();
          a2 = v23;
          LOBYTE(v7) = v24;
          goto LABEL_26;
        }
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        if (a2 == (char *)v6)
          goto LABEL_25;
      }
    }
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    v6 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    v7 = *(unsigned __int8 *)(v4 + 16);
  }
  while (v6);
LABEL_26:
  v22 = v7 & 1;
LABEL_28:
  *a2 = v22;
  return result;
}

uint64_t static FeedGroupKnobsRepool.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      if (*(unsigned __int8 *)(v2 + 16) == *(unsigned __int8 *)(v3 + 16))
      {
        v4 = *(_QWORD *)(v2 + 24);
        v5 = *(_QWORD *)(v3 + 24);
        swift_retain();
        swift_retain();
        LOBYTE(v4) = sub_1BA894740(v4, v5);
        swift_release();
        swift_release();
        if ((v4 & 1) != 0)
          return 1;
      }
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1BB6BEE74(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x676E697A65657266 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1BB6BEEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB6BEE74(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BB6BEF28(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB93E968, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB6BEF5C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB93E968, a1);
  return sub_1BB87471C();
}

uint64_t FeedGroupKnobsRepool.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[4];

  v6 = type metadata accessor for FeedGroupKnobsRepool.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x1BCCE5B24](&unk_1BB93E968, v6);
  v7 = sub_1BB8741D0();
  v12[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v12 - v8;
  v10 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746C8();
  v12[3] = v10;
  sub_1BA572B88();
  sub_1BA572C08(&qword_1ED3A5050, (uint64_t)&protocol conformance descriptor for FeedGroupKnobsRuleValue<A>);
  sub_1BB87414C();
  return (*(uint64_t (**)(char *, uint64_t))(v12[0] + 8))(v9, v7);
}

uint64_t sub_1BB6BF0D0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FeedGroupKnobsRepool.encode(to:)(a1, a2, a3, a4);
}

_QWORD *sub_1BB6BF0E8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_1BB6BF120(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1BB6BF150(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB6BF190 + 4 * byte_1BB93E7D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB6BF1B0 + 4 * byte_1BB93E7D5[v4]))();
}

_BYTE *sub_1BB6BF190(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB6BF1B0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6BF1B8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6BF1C0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6BF1C8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6BF1D0(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1BB6BF1DC()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BB6BF1EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  BOOL v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v45;
  int64_t v46;

  v45 = (unint64_t *)result;
  v6 = 0;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v7 = 0;
    v8 = a4 + 56;
    v9 = 1 << *(_BYTE *)(a4 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(a4 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = a3 + 56;
    while (1)
    {
LABEL_6:
      if (v11)
      {
        v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v15 = v14 | (v7 << 6);
      }
      else
      {
        v16 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v16 >= v12)
          goto LABEL_60;
        v17 = *(_QWORD *)(v8 + 8 * v16);
        ++v7;
        if (!v17)
        {
          v7 = v16 + 1;
          if (v16 + 1 >= v12)
            goto LABEL_60;
          v17 = *(_QWORD *)(v8 + 8 * v7);
          if (!v17)
          {
            v7 = v16 + 2;
            if (v16 + 2 >= v12)
              goto LABEL_60;
            v17 = *(_QWORD *)(v8 + 8 * v7);
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v12)
              {
LABEL_60:
                swift_retain();
                return sub_1BB73DE58(v45, a2, v6, a3);
              }
              v17 = *(_QWORD *)(v8 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  v7 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    break;
                  if (v7 >= v12)
                    goto LABEL_60;
                  v17 = *(_QWORD *)(v8 + 8 * v7);
                  ++v18;
                  if (v17)
                    goto LABEL_21;
                }
LABEL_63:
                __break(1u);
                goto LABEL_64;
              }
              v7 = v18;
            }
          }
        }
LABEL_21:
        v11 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v7 << 6);
      }
      v19 = *(_DWORD *)(*(_QWORD *)(a4 + 48) + 4 * v15);
      result = MEMORY[0x1BCCE4ED0](*(_QWORD *)(a3 + 40), v19, 4);
      v20 = -1 << *(_BYTE *)(a3 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      v23 = 1 << v21;
      if (((1 << v21) & *(_QWORD *)(v13 + 8 * (v21 >> 6))) != 0)
      {
        v24 = *(_QWORD *)(a3 + 48);
        if (*(_DWORD *)(v24 + 4 * v21) != v19)
        {
          for (i = v21 + 1; ; i = v26 + 1)
          {
            v26 = i & ~v20;
            if (((*(_QWORD *)(v13 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
              goto LABEL_6;
            if (*(_DWORD *)(v24 + 4 * v26) == v19)
              break;
          }
          v22 = v26 >> 6;
          v23 = 1 << v26;
        }
        v45[v22] |= v23;
        v27 = __OFADD__(v6++, 1);
        if (v27)
          break;
      }
    }
    __break(1u);
  }
  v28 = 0;
  v29 = a3 + 56;
  v30 = 1 << *(_BYTE *)(a3 + 32);
  if (v30 < 64)
    v31 = ~(-1 << v30);
  else
    v31 = -1;
  v32 = v31 & *(_QWORD *)(a3 + 56);
  v46 = (unint64_t)(v30 + 63) >> 6;
  v33 = a4 + 56;
  while (v32)
  {
    v34 = __clz(__rbit64(v32));
    v32 &= v32 - 1;
    v35 = v34 | (v28 << 6);
LABEL_52:
    v39 = *(_DWORD *)(*(_QWORD *)(a3 + 48) + 4 * v35);
    result = MEMORY[0x1BCCE4ED0](*(_QWORD *)(a4 + 40), v39, 4);
    v40 = -1 << *(_BYTE *)(a4 + 32);
    v41 = result & ~v40;
    if (((*(_QWORD *)(v33 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) != 0)
    {
      v42 = *(_QWORD *)(a4 + 48);
      if (*(_DWORD *)(v42 + 4 * v41) == v39)
      {
LABEL_57:
        *(unint64_t *)((char *)v45 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
        v27 = __OFADD__(v6++, 1);
        if (v27)
        {
          __break(1u);
          goto LABEL_60;
        }
      }
      else
      {
        v43 = ~v40;
        while (1)
        {
          v41 = (v41 + 1) & v43;
          if (((*(_QWORD *)(v33 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) == 0)
            break;
          if (*(_DWORD *)(v42 + 4 * v41) == v39)
            goto LABEL_57;
        }
      }
    }
  }
  v36 = v28 + 1;
  if (__OFADD__(v28, 1))
    goto LABEL_62;
  if (v36 >= v46)
    goto LABEL_60;
  v37 = *(_QWORD *)(v29 + 8 * v36);
  ++v28;
  if (v37)
    goto LABEL_51;
  v28 = v36 + 1;
  if (v36 + 1 >= v46)
    goto LABEL_60;
  v37 = *(_QWORD *)(v29 + 8 * v28);
  if (v37)
    goto LABEL_51;
  v28 = v36 + 2;
  if (v36 + 2 >= v46)
    goto LABEL_60;
  v37 = *(_QWORD *)(v29 + 8 * v28);
  if (v37)
  {
LABEL_51:
    v32 = (v37 - 1) & v37;
    v35 = __clz(__rbit64(v37)) + (v28 << 6);
    goto LABEL_52;
  }
  v38 = v36 + 3;
  if (v38 >= v46)
    goto LABEL_60;
  v37 = *(_QWORD *)(v29 + 8 * v38);
  if (v37)
  {
    v28 = v38;
    goto LABEL_51;
  }
  while (1)
  {
    v28 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v28 >= v46)
      goto LABEL_60;
    v37 = *(_QWORD *)(v29 + 8 * v28);
    ++v38;
    if (v37)
      goto LABEL_51;
  }
LABEL_64:
  __break(1u);
  return result;
}

uint64_t namespaced(_:)()
{
  sub_1BA6D249C();
  sub_1BA6A0BA4();
  return sub_1BB872904();
}

Swift::String __swiftcall namespaced(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  void *v2;
  Swift::String result;

  sub_1BA6D249C();
  sub_1BA6A0BA4();
  v1 = sub_1BB872904();
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

Swift::Bool __swiftcall isNamespaced(_:)(Swift::String a1)
{
  sub_1BA7114A0();
  return sub_1BB873B40() & 1;
}

void _s8NewsFeed33FormatOptionsNodeStatementBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB6BF714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;

  v11 = v6;
  v12 = v3;
  if (v1 >= 0x2000)
  {
    v18 = v4;
    v19 = v4;
    v20 = v1;
    v21 = v0;
    v22 = v2;
    sub_1BAC68BE0(v7, v2, v9, v18, v11, v0, v1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA713CDC, (uint64_t (*)(void))sub_1BA690C00);
    sub_1BAC68BE0(v8, v12, v5, v25, v26, v27, v28, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, (uint64_t (*)(void))sub_1BA5A7EF8);
    sub_1BAC68BE0(v7, v22, v9, v19, v11, v21, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, (uint64_t (*)(void))sub_1BA5A7EF8);
    v17 = 0;
  }
  else
  {
    *(_QWORD *)(v10 - 144) = v8;
    *(_WORD *)(v10 - 136) = v3;
    v13 = v0;
    v14 = v1;
    v15 = v2;
    _s8NewsFeed17FormatBoolBindingO2eeoiySbAC_ACtFZ_0(v10 - 144);
    v24 = v7;
    v17 = v16;
    sub_1BAC68BE0(v8, v12, v5, v25, v26, v27, v28, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, (uint64_t (*)(void))sub_1BA5A7EF8);
    sub_1BAC68BE0(v24, v15, v9, v4, v11, v13, v14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, (uint64_t (*)(void))sub_1BA5A7EF8);
  }
  return v17 & 1;
}

unint64_t sub_1BB6BFFC4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6BFFE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6BFFE8()
{
  unint64_t result;

  result = qword_1EF2CA840;
  if (!qword_1EF2CA840)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementBinding, &type metadata for FormatOptionsNodeStatementBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2CA840);
  }
  return result;
}

unint64_t sub_1BB6C002C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5C5218();
  a1[2] = sub_1BA585654();
  result = sub_1BB6C0060();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6C0060()
{
  unint64_t result;

  result = qword_1EF2CA848;
  if (!qword_1EF2CA848)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementBinding, &type metadata for FormatOptionsNodeStatementBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2CA848);
  }
  return result;
}

uint64_t destroy for FormatOptionsNodeStatementBinding(uint64_t a1)
{
  return sub_1BAC68BE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int16 *)(a1 + 48), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, (uint64_t (*)(void))sub_1BA5A7EF8);
}

uint64_t initializeWithCopy for FormatOptionsNodeStatementBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(unsigned __int16 *)(a2 + 48);
  sub_1BAC68BE0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA713CDC, (uint64_t (*)(void))sub_1BA690C00);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatOptionsNodeStatementBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(unsigned __int16 *)(a2 + 48);
  sub_1BAC68BE0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA713CDC, (uint64_t (*)(void))sub_1BA690C00);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v9;
  sub_1BAC68BE0(v10, v11, v12, v13, v14, v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, (uint64_t (*)(void))sub_1BA5A7EF8);
  return a1;
}

uint64_t assignWithTake for FormatOptionsNodeStatementBinding(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v3 = *(_WORD *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v3;
  sub_1BAC68BE0(v4, v6, v5, v7, v8, v9, v11, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, (uint64_t (*)(void))sub_1BA5A7EF8);
  return a1;
}

uint64_t sub_1BB6C02A8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 48) >> 13;
}

uint64_t sub_1BB6C02B4(uint64_t result)
{
  *(_WORD *)(result + 48) &= 0x1FFFu;
  return result;
}

uint64_t sub_1BB6C02C4(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 48) = *(_WORD *)(result + 48) & 0x7FF | (a2 << 13);
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionsNodeStatementBinding()
{
  return &type metadata for FormatOptionsNodeStatementBinding;
}

uint64_t sub_1BB6C02E8(uint64_t a1)
{
  uint64_t v2;

  sub_1BA8E5458();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB6C0324()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB6C0350()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for DebugFormatLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BB6C03C4 + 4 * byte_1BB93EAD5[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BB6C03F8 + 4 * byte_1BB93EAD0[v4]))();
}

uint64_t sub_1BB6C03F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6C0400(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6C0408);
  return result;
}

uint64_t sub_1BB6C0414(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6C041CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BB6C0420(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6C0428(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatLocation()
{
  return &type metadata for DebugFormatLocation;
}

unint64_t sub_1BB6C0448()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2CA850;
  if (!qword_1EF2CA850)
  {
    sub_1BB6C0490();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2CA850);
  }
  return result;
}

void sub_1BB6C0490()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CA858)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CA858);
  }
}

void sub_1BB6C04E4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB6C050C()
{
  return sub_1BB86D384();
}

uint64_t sub_1BB6C073C(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BB6C0758 + 4 * byte_1BB93EAE5[a1]))();
}

void sub_1BB6C0758(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
}

void sub_1BB6C0768(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1BB93ECA0;
  *(_BYTE *)(a1 + 16) = 0;
}

uint64_t sub_1BB6C07E8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB6C0820 + 4 * byte_1BB93EAF0[a1]))(0x697461636F4C6F6ELL, 0xEA00000000006E6FLL);
}

uint64_t sub_1BB6C0820()
{
  return 0x74746F6C72616863;
}

uint64_t sub_1BB6C083C()
{
  return 0x6E6F7473756F68;
}

uint64_t sub_1BB6C0854()
{
  return 0x6C65676E41736F6CLL;
}

uint64_t sub_1BB6C086C()
{
  return 0x696D61696DLL;
}

uint64_t sub_1BB6C0880()
{
  return 0x436B726F5977656ELL;
}

uint64_t sub_1BB6C08A0()
{
  return 0x6E656D6172636173;
}

uint64_t sub_1BB6C08B8()
{
  return 0x6E6F746E416E6173;
}

uint64_t sub_1BB6C08D0()
{
  return 0x636E6172466E6173;
}

uint64_t sub_1BB6C08F0()
{
  return 0x74676E6968736177;
}

uint64_t sub_1BB6C0910()
{
  return 0x6F676569446E6173;
}

uint64_t sub_1BB6C0928(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB6C07E8(*a1);
  v5 = v4;
  if (v3 == sub_1BB6C07E8(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB6C09B0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB6C07E8(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB6C0A10()
{
  unsigned __int8 *v0;

  sub_1BB6C07E8(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB6C0A50()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB6C07E8(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB6C0AAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB6C0C20();
  *a1 = result;
  return result;
}

uint64_t sub_1BB6C0AD8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB6C07E8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB6C0B00()
{
  sub_1BB1AFF30();
  return sub_1BB872CDC();
}

uint64_t sub_1BB6C0B40()
{
  sub_1BB1AFF30();
  return sub_1BB872CD0();
}

uint64_t sub_1BB6C0B88()
{
  sub_1BB1AFF30();
  return sub_1BB872CC4();
}

void sub_1BB6C0BC8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251878;
}

unint64_t sub_1BB6C0BDC()
{
  unint64_t result;

  result = qword_1EF2CA860;
  if (!qword_1EF2CA860)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93EC20, &type metadata for DebugFormatLocation);
    atomic_store(result, (unint64_t *)&qword_1EF2CA860);
  }
  return result;
}

uint64_t sub_1BB6C0C20()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t FormatIssueCoverTraits.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x4D6465726579616CLL;
  else
    return 0x616C506F65646976;
}

uint64_t sub_1BB6C0CB8(char *a1, char *a2)
{
  return sub_1BB7F46A8(*a1, *a2);
}

uint64_t sub_1BB6C0CC4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB6C0D58()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB6C0DC8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB6C0E58(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x616C506F65646976;
  if (*v1)
    v2 = 0x4D6465726579616CLL;
  v3 = 0xED00006B63616279;
  if (*v1)
    v3 = 0xEC00000061696465;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB6C0EAC(_QWORD *a1)
{
  return FormatIssueCoverTraits.encode(to:)(a1);
}

uint64_t FormatIssueCoverTraits.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x4D6465726579616CLL;
  else
    return 0x616C506F65646976;
}

unint64_t sub_1BB6C0F14()
{
  unint64_t result;

  result = qword_1EF2CA868;
  if (!qword_1EF2CA868)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverTraits, &type metadata for FormatIssueCoverTraits);
    atomic_store(result, (unint64_t *)&qword_1EF2CA868);
  }
  return result;
}

unint64_t sub_1BB6C0F58(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB6C0F84();
  result = sub_1BA4AF6A4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB6C0F84()
{
  unint64_t result;

  result = qword_1EF2CA870;
  if (!qword_1EF2CA870)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverTraits, &type metadata for FormatIssueCoverTraits);
    atomic_store(result, (unint64_t *)&qword_1EF2CA870);
  }
  return result;
}

unint64_t sub_1BB6C0FC8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6C0FEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6C0FEC()
{
  unint64_t result;

  result = qword_1EF2CA878;
  if (!qword_1EF2CA878)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverTraits, &type metadata for FormatIssueCoverTraits);
    atomic_store(result, (unint64_t *)&qword_1EF2CA878);
  }
  return result;
}

unint64_t sub_1BB6C1030(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82A1E0();
  a1[2] = sub_1BA82A224();
  result = sub_1BB6C0F14();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB6C1064()
{
  _BYTE *v0;

  if (*v0)
    return 0x4D6465726579616CLL;
  else
    return 0x616C506F65646976;
}

ValueMetadata *type metadata accessor for FormatIssueCoverTraits()
{
  return &type metadata for FormatIssueCoverTraits;
}

uint64_t sub_1BB6C10C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;

  sub_1BB6C1608(0, &qword_1ED3AB5A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6C13EC();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v23 = v10;
  v28 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v24 = v14;
  v21 = v13;
  v27 = 2;
  swift_bridgeObjectRetain();
  v22 = 0;
  v20 = sub_1BB87402C();
  v16 = v15;
  sub_1BA920B18();
  v26 = 3;
  sub_1BA920C0C((unint64_t *)&unk_1ED3AB0A0, (uint64_t (*)(void))sub_1BA920B6C, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v25;
  swift_bridgeObjectRetain();
  v19 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v16;
  *(_QWORD *)(a2 + 48) = v18;
  *(_BYTE *)(a2 + 56) = 4;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BB6C13EC()
{
  unint64_t result;

  result = qword_1ED3AA988;
  if (!qword_1ED3AA988)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93EFD4, &type metadata for SportsDataVisualizationResponseBoxScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA988);
  }
  return result;
}

uint64_t sub_1BB6C1430(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;

  sub_1BB6C1608(0, &qword_1EF2CA880, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v8 = v1[2];
  v17 = v1[3];
  v18 = v8;
  v9 = v1[4];
  v15 = v1[5];
  v16 = v9;
  v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6C13EC();
  sub_1BB8746C8();
  v24 = 0;
  v10 = v19;
  sub_1BB87417C();
  if (!v10)
  {
    v11 = v14;
    v23 = 1;
    sub_1BB87417C();
    v22 = 2;
    sub_1BB87411C();
    v20 = v11;
    v21 = 3;
    sub_1BA920B18();
    sub_1BA920C0C(&qword_1EF2AA9C8, (uint64_t (*)(void))sub_1BA920C70, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1BB6C1608(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB6C13EC();
    v7 = a3(a1, &type metadata for SportsDataVisualizationResponseBoxScoreItem.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseBoxScoreItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB6C16B0 + 4 * byte_1BB93EE85[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB6C16E4 + 4 * byte_1BB93EE80[v4]))();
}

uint64_t sub_1BB6C16E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6C16EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6C16F4);
  return result;
}

uint64_t sub_1BB6C1700(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6C1708);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB6C170C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6C1714(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseBoxScoreItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseBoxScoreItem.CodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseBoxScoreItem()
{
  return &type metadata for SportsDataVisualizationResponseBoxScoreItem;
}

uint64_t sub_1BB6C1740()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB6C177C + 4 * byte_1BB93EE8A[*v0]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BB6C177C()
{
  return 0x6449746E657665;
}

uint64_t sub_1BB6C1794()
{
  return 0x615465756761656CLL;
}

uint64_t sub_1BB6C17B4()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BB6C17D8()
{
  sub_1BB6C13EC();
  return sub_1BB874710();
}

uint64_t sub_1BB6C1800()
{
  sub_1BB6C13EC();
  return sub_1BB87471C();
}

uint64_t sub_1BB6C1828@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB6C10C4(a1, a2);
}

uint64_t sub_1BB6C183C(_QWORD *a1)
{
  return sub_1BB6C1430(a1);
}

unint64_t sub_1BB6C1854()
{
  unint64_t result;

  result = qword_1EF2CA888;
  if (!qword_1EF2CA888)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93EFAC, &type metadata for SportsDataVisualizationResponseBoxScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA888);
  }
  return result;
}

unint64_t sub_1BB6C189C()
{
  unint64_t result;

  result = qword_1ED3AA998;
  if (!qword_1ED3AA998)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93EF1C, &type metadata for SportsDataVisualizationResponseBoxScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA998);
  }
  return result;
}

unint64_t sub_1BB6C18E4()
{
  unint64_t result;

  result = qword_1ED3AA990;
  if (!qword_1ED3AA990)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93EF44, &type metadata for SportsDataVisualizationResponseBoxScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA990);
  }
  return result;
}

id sub_1BB6C1928(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  void *v15;
  _QWORD *v17;
  _QWORD *v18;

  v6 = *a3;
  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  v8 = *v7;
  if (!*(_QWORD *)(*v7 + 16))
    goto LABEL_10;
  swift_bridgeObjectRetain();
  v9 = sub_1BA6E35A8(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11 + 56);
  swift_retain();
  swift_release();
  if (((v12 >> 59) & 0x1E | (v12 >> 2) & 1) != 0xF)
  {
    swift_release();
    goto LABEL_13;
  }
  v13 = *(id *)((v12 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  swift_release();
  v14 = objc_msgSend(v13, sel_view);
  if (!v14)
  {
    __break(1u);
LABEL_10:
    swift_endAccess();
LABEL_13:
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB872AFC((_QWORD *)0xD000000000000020);
    sub_1BB872AFC(v17);
    type metadata accessor for FormatLayoutViewContainer();
    swift_bridgeObjectRetain();
    sub_1BB8727D8();
    sub_1BB872AFC(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB873EAC();
    __break(1u);
    JUMPOUT(0x1BB6C1B9CLL);
  }
  v15 = v14;
  objc_msgSend(v14, sel_setAutoresizingMask_, 0);
  if (v6)
  {
    swift_retain();
    objc_msgSend(v15, sel_setAutoresizingMask_, sub_1BB275944());

    swift_release();
  }
  else
  {

  }
  return v13;
}

uint64_t sub_1BB6C1BE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t result;
  _QWORD *v17;
  _QWORD *v18;

  v6 = *a3;
  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  v8 = *v7;
  if (!*(_QWORD *)(*v7 + 16))
    goto LABEL_10;
  swift_bridgeObjectRetain();
  v9 = sub_1BA6E35A8(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11 + 56);
  swift_retain();
  swift_release();
  if (((v12 >> 59) & 0x1E | (v12 >> 2) & 1) != 5)
  {
    swift_release();
    goto LABEL_13;
  }
  v13 = *(id *)((v12 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  swift_release();
  v14 = objc_msgSend(v13, sel_view);
  if (!v14)
  {
    __break(1u);
LABEL_10:
    swift_endAccess();
LABEL_13:
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB872AFC((_QWORD *)0xD000000000000020);
    sub_1BB872AFC(v17);
    type metadata accessor for FormatLayoutViewContainer();
    swift_bridgeObjectRetain();
    sub_1BB8727D8();
    sub_1BB872AFC(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1BB873EAC();
    __break(1u);
    return result;
  }
  v15 = v14;
  objc_msgSend(v14, sel_setAutoresizingMask_, 0);
  if (v6)
  {
    swift_retain();
    objc_msgSend(v15, sel_setAutoresizingMask_, sub_1BB275944());

    swift_release();
  }
  else
  {

  }
  return (uint64_t)v13;
}

uint64_t sub_1BB6C1E5C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t result;
  _QWORD *v17;
  _QWORD *v18;

  v6 = *a3;
  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  v8 = *v7;
  if (!*(_QWORD *)(*v7 + 16))
    goto LABEL_10;
  swift_bridgeObjectRetain();
  v9 = sub_1BA6E35A8(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11 + 56);
  swift_retain();
  swift_release();
  if (((v12 >> 59) & 0x1E | (v12 >> 2) & 1) != 0x12)
  {
    swift_release();
    goto LABEL_13;
  }
  v13 = *(id *)((v12 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  swift_release();
  v14 = objc_msgSend(v13, sel_view);
  if (!v14)
  {
    __break(1u);
LABEL_10:
    swift_endAccess();
LABEL_13:
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB872AFC((_QWORD *)0xD000000000000020);
    sub_1BB872AFC(v17);
    type metadata accessor for FormatLayoutViewContainer();
    swift_bridgeObjectRetain();
    sub_1BB8727D8();
    sub_1BB872AFC(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1BB873EAC();
    __break(1u);
    return result;
  }
  v15 = v14;
  objc_msgSend(v14, sel_setAutoresizingMask_, 0);
  if (v6)
  {
    swift_retain();
    objc_msgSend(v15, sel_setAutoresizingMask_, sub_1BB275944());

    swift_release();
  }
  else
  {

  }
  return (uint64_t)v13;
}

uint64_t sub_1BB6C20D0()
{
  return sub_1BA81D430((uint64_t (*)(uint64_t))sub_1BAA67DA8, (uint64_t (*)(void))sub_1BAA66F10);
}

uint64_t sub_1BB6C20E4()
{
  return sub_1BA81D430((uint64_t (*)(uint64_t))sub_1BAA67DA8, sub_1BAA676B4);
}

uint64_t sub_1BB6C20F8(uint64_t (*a1)(uint64_t), uint64_t (*a2)(void))
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;

  v5 = (_QWORD *)(v2 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 16);
  if (!(v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_9:
    v12 = swift_endAccess();
    v13 = *(_QWORD *)(v2 + 64);
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (!v14)
    {
      *(_QWORD *)(v2 + 64) = v15;
      return (*(uint64_t (**)(uint64_t))(v2 + 40))(v12);
    }
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_9;
LABEL_3:
  v7 = sub_1BA79947C(a1);
  if (v7)
  {
LABEL_7:
    v10 = v7;
    swift_endAccess();
    return v10;
  }
  if (*v5 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    v16 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    result = v16 - 1;
    if (!__OFSUB__(v16, 1))
      goto LABEL_6;
    goto LABEL_15;
  }
  v8 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = v8 - 1;
  if (!__OFSUB__(v8, 1))
  {
LABEL_6:
    v7 = a2();
    goto LABEL_7;
  }
LABEL_15:
  __break(1u);
  return result;
}

id FormatLayoutView.blueprintViewportMonitor(_:viewportScrollDataDidChange:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  id result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  BOOL v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  float v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  double v50;
  void *v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  double v58;
  CGFloat v59;
  void *v60;
  double v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  double Height;
  uint64_t v70;
  char v71;
  uint64_t v72;
  void *v73;
  void *v74;
  double v75;
  CGFloat v76;
  double v77;
  CGFloat v78;
  double v79;
  CGFloat v80;
  double v81;
  CGFloat v82;
  void *v83;
  double v84;
  CGFloat v85;
  double v86;
  CGFloat v87;
  double v88;
  CGFloat v89;
  double v90;
  CGFloat v91;
  double v92;
  uint64_t v93;
  char v94;
  _QWORD *v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers);
  swift_beginAccess();
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v3 + 40;
    do
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1BB870EDC();
      swift_unknownObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations);
  result = (id)swift_beginAccess();
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v39 = sub_1BB873F30();
    result = (id)swift_bridgeObjectRelease();
    if (!v39)
      return result;
  }
  else if (!*(_QWORD *)((*v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  v8 = *v6;
  v102 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_1BB873F30();
    v9 = (uint64_t)result;
    if (result)
      goto LABEL_9;
LABEL_58:
    swift_bridgeObjectRelease();
    v38 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_81;
    goto LABEL_59;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_58;
LABEL_9:
  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_85;
  }
  v10 = 0;
  v99 = v9;
  v100 = v8 & 0xC000000000000001;
  v95 = (_QWORD *)(v8 + 32);
  v97 = v8;
  do
  {
    if (v100)
    {
      v11 = (_QWORD *)MEMORY[0x1BCCE4630](v10, v97);
    }
    else
    {
      v11 = (_QWORD *)v95[v10];
      swift_retain();
    }
    v13 = (_QWORD *)v11[4];
    v12 = v11[5];
    v14 = v11[6];
    swift_beginAccess();
    v15 = v13[2];
    if (*(_QWORD *)(v15 + 16))
    {
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v16 = sub_1BB874608();
      v17 = -1 << *(_BYTE *)(v15 + 32);
      v18 = v16 & ~v17;
      if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
      {
        v19 = *(_QWORD *)(v15 + 48);
        v20 = (_QWORD *)(v19 + 16 * v18);
        v21 = *v20 == v12 && v20[1] == v14;
        if (v21 || (sub_1BB874398() & 1) != 0)
        {
LABEL_11:
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
        v22 = ~v17;
        while (1)
        {
          v18 = (v18 + 1) & v22;
          if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
            break;
          v23 = (_QWORD *)(v19 + 16 * v18);
          v24 = *v23 == v12 && v23[1] == v14;
          if (v24 || (sub_1BB874398() & 1) != 0)
            goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v25 = v13[3];
    if (*(_QWORD *)(v25 + 16))
    {
      sub_1BB8745CC();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      v26 = sub_1BB874608();
      v27 = -1 << *(_BYTE *)(v25 + 32);
      v28 = v26 & ~v27;
      if (((*(_QWORD *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) != 0)
      {
        v29 = *(_QWORD *)(v25 + 48);
        v30 = (_QWORD *)(v29 + 16 * v28);
        v31 = *v30 == v12 && v30[1] == v14;
        if (v31 || (sub_1BB874398() & 1) != 0)
          goto LABEL_11;
        v32 = ~v27;
        while (1)
        {
          v28 = (v28 + 1) & v32;
          if (((*(_QWORD *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
            break;
          v33 = (_QWORD *)(v29 + 16 * v28);
          v34 = *v33 == v12 && v33[1] == v14;
          if (v34 || (sub_1BB874398() & 1) != 0)
            goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v35 = v13[4];
    swift_bridgeObjectRetain();
    v36 = sub_1BA761FE4(v12, v14, v35);
    swift_bridgeObjectRelease();
    if ((v36 & 1) != 0
      || (v37 = *(_QWORD *)(v11[11] + 16), *(unsigned __int8 *)(v37 + 84) == 255)
      || (*(unsigned int *)(v37 + 80) | ((unint64_t)*(unsigned __int8 *)(v37 + 84) << 32)) >> 33)
    {
      swift_release();
    }
    else
    {
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
    }
LABEL_12:
    ++v10;
  }
  while (v10 != v99);
  swift_bridgeObjectRelease();
  v38 = v102;
  if ((v102 & 0x8000000000000000) == 0)
  {
LABEL_59:
    if ((v38 & 0x4000000000000000) != 0)
      goto LABEL_81;
    v40 = *(_QWORD *)(v38 + 16);
    if (v40)
      goto LABEL_61;
    return (id)swift_release();
  }
LABEL_81:
  swift_retain();
  v40 = sub_1BB873F30();
  swift_release();
  if (!v40)
    return (id)swift_release();
LABEL_61:
  v41 = (void *)objc_opt_self();
  result = objc_msgSend(v41, sel_begin);
  if (v40 >= 1)
  {
    v96 = v41;
    v98 = v40;
    v42 = 0;
    v43 = v38 & 0xC000000000000001;
    while (1)
    {
      if (v43)
      {
        v44 = (_QWORD *)MEMORY[0x1BCCE4630](v42, v38);
      }
      else
      {
        v44 = *(_QWORD **)(v38 + 8 * v42 + 32);
        swift_retain();
      }
      v45 = *(_QWORD *)(v44[11] + 16);
      if (*(unsigned __int8 *)(v45 + 84) == 255)
        goto LABEL_64;
      v46 = *(float *)(v45 + 80);
      if (!*(_BYTE *)(v45 + 84))
        break;
      if (*(_BYTE *)(v45 + 84) != 1)
        goto LABEL_64;
      v47 = v44[4];
      v101 = v44[5];
      v48 = v44[6];
      v49 = (void *)v44[7];
      objc_msgSend(v49, sel_bounds);
      v50 = 0.0;
      if (CGRectGetHeight(v104) > 0.0)
      {
        v51 = (void *)sub_1BB870C0C();
        objc_msgSend(v49, sel_bounds);
        objc_msgSend(v51, sel_convertRect_fromCoordinateSpace_, v49);
        v53 = v52;
        v55 = v54;
        v57 = v56;
        v59 = v58;

        v43 = v38 & 0xC000000000000001;
        v60 = (void *)sub_1BB870C0C();
        objc_msgSend(v60, sel_bounds);
        v62 = v61;
        v64 = v63;
        v66 = v65;
        v68 = v67;

        v105.origin.x = v62;
        v105.origin.y = v64;
        v105.size.width = v66;
        v105.size.height = v68;
        v112.origin.x = v53;
        v112.origin.y = v55;
        v112.size.width = v57;
        v112.size.height = v59;
        v106 = CGRectIntersection(v105, v112);
        Height = CGRectGetHeight(v106);
        objc_msgSend(v49, sel_bounds);
        v50 = Height / CGRectGetHeight(v107);
      }
      swift_beginAccess();
      v70 = *(_QWORD *)(v47 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      v71 = sub_1BA761FE4(v101, v48, v70);
      swift_bridgeObjectRelease();
      if ((v71 & 1) == 0)
        goto LABEL_78;
LABEL_63:
      swift_release();
LABEL_64:
      ++v42;
      swift_release();
      if (v40 == v42)
      {
        swift_release();
        return objc_msgSend(v96, sel_commit);
      }
    }
    v72 = v44[4];
    v101 = v44[5];
    v48 = v44[6];
    v73 = (void *)v44[7];
    objc_msgSend(v73, sel_bounds);
    v50 = 0.0;
    if (CGRectGetHeight(v108) > 0.0)
    {
      v74 = (void *)sub_1BB870C0C();
      objc_msgSend(v73, sel_bounds);
      objc_msgSend(v74, sel_convertRect_fromCoordinateSpace_, v73);
      v76 = v75;
      v78 = v77;
      v80 = v79;
      v82 = v81;

      v43 = v38 & 0xC000000000000001;
      v83 = (void *)sub_1BB870C0C();
      objc_msgSend(v83, sel_bounds);
      v85 = v84;
      v87 = v86;
      v89 = v88;
      v91 = v90;

      v109.origin.x = v85;
      v109.origin.y = v87;
      v109.size.width = v89;
      v109.size.height = v91;
      v113.origin.x = v76;
      v113.origin.y = v78;
      v113.size.width = v80;
      v113.size.height = v82;
      v110 = CGRectIntersection(v109, v113);
      v92 = CGRectGetHeight(v110);
      v40 = v98;
      objc_msgSend(v73, sel_bounds);
      v50 = v92 / CGRectGetHeight(v111);
    }
    swift_beginAccess();
    v93 = *(_QWORD *)(v72 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    v94 = sub_1BA761FE4(v101, v48, v93);
    swift_bridgeObjectRelease();
    if ((v94 & 1) != 0)
      goto LABEL_63;
LABEL_78:
    if (v50 >= v46)
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(&v103, v101, v48);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1BB843350();
    }
    goto LABEL_63;
  }
LABEL_85:
  __break(1u);
  return result;
}

Swift::Void __swiftcall FormatLayoutView.viewDidLoad()()
{
  sub_1BB6C2AE8(MEMORY[0x1E0DBB818]);
}

Swift::Void __swiftcall FormatLayoutView.viewWillAppear()()
{
  sub_1BB6C2AE8(MEMORY[0x1E0DBB828]);
}

uint64_t sub_1BB6C2AE8(void (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_loadAwareObservers;
  result = swift_beginAccess();
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)v3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C010C(v6, (uint64_t)v9);
      v7 = v10;
      v8 = v11;
      __swift_project_boxed_opaque_existential_1(v9, v10);
      a1(v7, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      v6 += 40;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall FormatLayoutView.viewDidAppear()()
{
  sub_1BB6C2AE8(MEMORY[0x1E0DBB820]);
}

Swift::Void __swiftcall FormatLayoutView.viewWillDisappear()()
{
  sub_1BB6C2AE8(MEMORY[0x1E0DBB838]);
}

Swift::Void __swiftcall FormatLayoutView.viewDidDisappear()()
{
  sub_1BB6C2AE8(MEMORY[0x1E0DBB830]);
}

void sub_1BB6C2BC8()
{
  qword_1ED3CEE30 = 0x4024000000000000;
}

uint64_t FormatLayoutView.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatLayoutView.viewsByName.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

id sub_1BB6C2C74@<X0>(_QWORD *a1@<X8>)
{
  Class v2;
  id result;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0A50, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  result = objc_msgSend(objc_allocWithZone(v2), sel_init);
  *a1 = result;
  return result;
}

void sub_1BB6C2CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;

  sub_1BA4AD288(0, &qword_1ED3C49C0, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DBC320]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v14 - v6);
  swift_beginAccess();
  v8 = MEMORY[0x1BCCE5D40](a2 + 16);
  if (v8)
  {
    v9 = (char *)v8;
    *v7 = 1;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DBC310], v4);
    v10 = sub_1BB87135C();
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
    v11 = OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture;
    v12 = *(void **)&v9[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture];
    *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture] = v10;

    v13 = *(void **)&v9[v11];
    if (v13)
      objc_msgSend(v13, sel_setDelegate_, v9);

  }
}

id FormatLayoutView.__deallocating_deinit()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  id result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_1ED3CC1E0 != -1)
LABEL_28:
    swift_once();
  if (*(_BYTE *)(qword_1ED476AA0 + 152) != 1)
  {
LABEL_26:
    v17.receiver = v0;
    v17.super_class = ObjectType;
    return objc_msgSendSuper2(&v17, sel_dealloc);
  }
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers];
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  v4 = v3 + 64;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v3 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = (id)swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_7;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v8)
      goto LABEL_25;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_25;
      v15 = *(_QWORD *)(v4 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_25;
        v15 = *(_QWORD *)(v4 + 8 * v10);
        if (!v15)
        {
          v10 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_25;
          v15 = *(_QWORD *)(v4 + 8 * v10);
          if (!v15)
            break;
        }
      }
    }
LABEL_24:
    v7 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v12) + 56);
    swift_retain();
    sub_1BB5F20D8(v13);
    result = (id)swift_release();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_25:
    swift_release();
    goto LABEL_26;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v8)
      goto LABEL_25;
    v15 = *(_QWORD *)(v4 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_24;
  }
  __break(1u);
  return result;
}

Swift::Bool __swiftcall FormatLayoutView.point(inside:with:)(CGPoint inside, UIEvent_optional with)
{
  void *v2;
  uint64_t isa;
  double y;
  double x;
  id v6;
  unint64_t v7;
  id v8;
  id v9;

  isa = (uint64_t)with.value.super.isa;
  y = inside.y;
  x = inside.x;
  v6 = objc_msgSend(v2, sel_subviews);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
  v7 = sub_1BB872DB4();

  v8 = (id)isa;
  v9 = v2;
  LOBYTE(isa) = sub_1BB6C77B0(v7, v9, isa, x, y);
  swift_bridgeObjectRelease();

  return isa & 1;
}

void sub_1BB6C3340(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void (*v16)(double, double);

  v13 = a1 + 16;
  swift_beginAccess();
  v14 = MEMORY[0x1BCCE5D40](v13);
  if (v14)
  {
    v15 = (void *)v14;
    v16 = *(void (**)(double, double))(v14 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation);
    sub_1BA4BEB58((uint64_t)v16);

    if (v16)
    {
      v16(a2 - a4 + a6, a3 - a5 + a7);
      sub_1BA49EBE0((uint64_t)v16);
    }
  }
}

void sub_1BB6C3404(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  sub_1BB6C341C(a1, &OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillShow, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1BB6C3410(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  sub_1BB6C341C(a1, &OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillHide, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1BB6C341C(uint64_t a1, _QWORD *a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t *v22;
  void (*v23)(double, double, double, double, double, double, double, double);

  v19 = a1 + 16;
  swift_beginAccess();
  v20 = (char *)MEMORY[0x1BCCE5D40](v19);
  if (v20)
  {
    v21 = v20;
    v22 = (uint64_t *)&v20[*a2];
    v23 = (void (*)(double, double, double, double, double, double, double, double))*v22;
    if (*v22)
    {
      sub_1BA4BEB58(*v22);

      v23(a3, a4, a5, a6, a7, a8, a9, a10);
      sub_1BA49EBE0((uint64_t)v23);
    }
    else
    {

    }
  }
}

void sub_1BB6C3510(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (void *)v4;
    a2();

  }
}

void sub_1BB6C3570(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = *((_BYTE *)a1 + 32);
  if (v3 >= 0x13)
  {
    v6 = *(_QWORD *)(v3 + 24);
    v7 = *a1;
    v8 = v2;
    v9 = v3;
    v10 = v4;
    v11 = v5;
    sub_1BB6C3C30((uint64_t)&v7, a2, v6);
  }
  else
  {
    v7 = *a1;
    v8 = v2;
    v9 = v3;
    v10 = v4;
    v11 = v5;
    sub_1BA799504((uint64_t)&v7, a2);
  }
}

void sub_1BB6C35CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;

  v4 = a1 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1BCCE5D40](v4);
  if (v5)
  {
    v6 = (void *)v5;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v8 = Strong;
      swift_beginAccess();
      v9 = MEMORY[0x1BCCE5D40](a3 + 16);
      if (v9)
      {
        v10 = (char *)v9;
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          v11 = v10;
          sub_1BB1E125C(v8, v6, (uint64_t)v11);
          swift_release();

        }
        v12 = (uint64_t *)&v10[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers];
        swift_beginAccess();
        v13 = v6;
        v14 = swift_bridgeObjectRetain();
        v15 = sub_1BB6C7664(v14, v13);
        swift_release();
        swift_bridgeObjectRelease();

        *v12 = v15;
        swift_bridgeObjectRelease();
        v10[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_isDirty] = 1;

      }
      else
      {

        swift_release();
      }
    }
    else
    {

    }
  }
}

uint64_t sub_1BB6C3768(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  id v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    v4 = MEMORY[0x1BCCE5D40](a2 + 16);
    if (v4)
    {
      v5 = (id)v4;
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        v5 = v5;
        sub_1BB8701F8();
        swift_release();

      }
    }
    return swift_release();
  }
  return result;
}

id sub_1BB6C3844@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 152) >> 6;
  if (!v3)
  {
    if (qword_1ED3CC1E0 != -1)
      swift_once();
    v11 = *(_QWORD *)(qword_1ED476AA0 + 96);
    swift_beginAccess();
    swift_retain();
    v12 = sub_1BA81D430((uint64_t (*)(uint64_t))sub_1BAA67DA8, sub_1BAA676B4);
    result = (id)swift_endAccess();
    if (!v12)
    {
      v13 = *(_QWORD *)(v11 + 64);
      v8 = __OFADD__(v13, 1);
      v14 = v13 + 1;
      if (v8)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      *(_QWORD *)(v11 + 64) = v14;
      v12 = (*(uint64_t (**)(id))(v11 + 40))(result);
    }
    swift_release();
    result = objc_msgSend((id)v12, sel_setAccessibilityIgnoresInvertColors_, 1);
    v10 = (void *)(v12 | 0x4000000000000000);
    goto LABEL_21;
  }
  if (v3 == 1)
  {
    if (qword_1ED3CC1E0 != -1)
      swift_once();
    v4 = *(_QWORD *)(qword_1ED476AA0 + 104);
    swift_beginAccess();
    swift_retain();
    v5 = sub_1BA81D430((uint64_t (*)(uint64_t))sub_1BAA67DA8, sub_1BAA676B4);
    result = (id)swift_endAccess();
    if (v5)
      goto LABEL_8;
    v7 = *(_QWORD *)(v4 + 64);
    v8 = __OFADD__(v7, 1);
    v9 = v7 + 1;
    if (!v8)
    {
      *(_QWORD *)(v4 + 64) = v9;
      v5 = (*(uint64_t (**)(id))(v4 + 40))(result);
LABEL_8:
      swift_release();
      result = objc_msgSend((id)v5, sel_setAccessibilityIgnoresInvertColors_, 1);
      v10 = (void *)(v5 | 0x8000000000000000);
LABEL_21:
      *a2 = v10;
      return result;
    }
    __break(1u);
    goto LABEL_23;
  }
  if (qword_1ED3CC1E0 != -1)
    swift_once();
  v15 = *(_QWORD *)(qword_1ED476AA0 + 88);
  swift_beginAccess();
  swift_retain();
  v10 = (void *)sub_1BA81D430((uint64_t (*)(uint64_t))sub_1BAA67DA8, sub_1BAA676B4);
  result = (id)swift_endAccess();
  if (v10)
  {
LABEL_20:
    swift_release();
    result = objc_msgSend(v10, sel_setAccessibilityIgnoresInvertColors_, 1);
    goto LABEL_21;
  }
  v16 = *(_QWORD *)(v15 + 64);
  v8 = __OFADD__(v16, 1);
  v17 = v16 + 1;
  if (!v8)
  {
    *(_QWORD *)(v15 + 64) = v17;
    v10 = (void *)(*(uint64_t (**)(id))(v15 + 40))(result);
    goto LABEL_20;
  }
LABEL_24:
  __break(1u);
  return result;
}

void sub_1BB6C3AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (char *)v4;
    swift_beginAccess();
    v6 = MEMORY[0x1BCCE5D40](a2 + 16);
    if (v6)
    {
      v7 = (char *)v6;
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        v8 = v7;
        sub_1BB8701F8();

        swift_release();
      }
      v9 = objc_msgSend(v5, sel_view);
      if (!v9)
      {
        __break(1u);
        return;
      }
      v10 = v9;
      objc_msgSend(v9, sel_removeFromSuperview);

      v11 = (uint64_t *)&v7[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers];
      swift_beginAccess();
      v12 = swift_bridgeObjectRetain();
      v13 = sub_1BB6C7664(v12, v5);
      swift_bridgeObjectRelease();

      *v11 = v13;
      swift_bridgeObjectRelease();
      v7[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_isDirty] = 1;
    }
    else
    {
      v7 = v5;
    }

  }
}

void sub_1BB6C3C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  id i;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __int128 *v43;
  _QWORD *v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;

  v8 = v3;
  v11 = *(_QWORD *)(a1 + 16);
  v50 = *(_QWORD *)a1;
  v51 = *(_QWORD *)(a1 + 8);
  v49 = *(_QWORD *)(a1 + 24);
  v48 = *(_BYTE *)(a1 + 32);
  sub_1BA67604C(MEMORY[0x1E0DEE9D8]);
  v56 = v12;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB8856E0;
  sub_1BA799868(a2);
  *(_QWORD *)(v13 + 32) = v14;
  sub_1BB872DCC();
  sub_1BB6C7CE4(a2, a3);
  sub_1BB6C7FAC(a2, a3);
  sub_1BB6C826C(a2, a3);
  sub_1BB6C84B4(a2, a3);
  sub_1BB6C86E0(a2, a3);
  sub_1BB6C8998(a2, a3);
  v15 = v13 >> 62;
  if (v13 >> 62)
  {
    v20 = v8;
    swift_bridgeObjectRetain();
    v16 = sub_1BB873F30();
    v53 = v8;
    if (!v16)
      goto LABEL_10;
  }
  else
  {
    v16 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = v8;
    swift_bridgeObjectRetain();
    v53 = v8;
    if (!v16)
      goto LABEL_10;
  }
  if (v16 < 1)
    goto LABEL_58;
  v4 = 0;
  v6 = v13 & 0xC000000000000001;
  v7 = (unint64_t)&StubThumbnailProcessor;
  v18 = v53;
  do
  {
    if (v6)
      v19 = (char *)MEMORY[0x1BCCE4630](v4, v13);
    else
      v19 = (char *)*(id *)(v13 + 8 * v4 + 32);
    v8 = v19;
    ++v4;
    objc_msgSend(v18, sel_addSubview_, v19);

    v18 = v8;
  }
  while (v16 != v4);
LABEL_10:
  swift_bridgeObjectRelease();
  if (!v15)
  {
    v21 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v5 = v11;
    if (v21)
      goto LABEL_12;
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1BA799868(a2);
    v52 = v23;
    v11 = v51;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v21 = sub_1BB873F30();
  v5 = v11;
  if (!v21)
    goto LABEL_17;
LABEL_12:
  v11 = v51;
  if ((v13 & 0xC000000000000001) != 0)
    goto LABEL_59;
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_61;
  }
  for (i = *(id *)(v13 + 32); ; i = (id)MEMORY[0x1BCCE4630](0, v13))
  {
    v52 = i;
    swift_bridgeObjectRelease();
LABEL_18:
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a2;
    *(_QWORD *)(v6 + 24) = v56;
    if (v15)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA79A788(v5);
      swift_retain();
      v27 = v52;
      v24 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v24 < 0)
      {
        __break(1u);
        return;
      }
      if (v24 >= 1)
        a2 = 1;
      else
        a2 = v24;
      swift_bridgeObjectRetain();
      v28 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v28 < a2)
      {
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      swift_bridgeObjectRetain();
      v25 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      sub_1BA79A788(v5);
      if (v24 >= 1)
        a2 = 1;
      else
        a2 = v24;
      v25 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      v26 = v52;
      if (v25 < (unint64_t)a2)
        goto LABEL_56;
    }
    if (v25 >= v24)
      break;
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    ;
  }
  if ((v13 & 0xC000000000000001) != 0 && (unint64_t)v24 >= 2)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
    v29 = a2;
    do
    {
      v30 = v29 + 1;
      sub_1BB873CFC();
      v29 = v30;
    }
    while (v24 != v30);
  }
  if (v15)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1BB873F3C();
    v4 = v31;
    a2 = v32;
    v7 = v33;
    swift_bridgeObjectRelease_n();
    if ((v7 & 1) == 0)
      goto LABEL_39;
  }
  else
  {
    v21 = v13 & 0xFFFFFFFFFFFFFF8;
    v4 = (v13 & 0xFFFFFFFFFFFFFF8) + 32;
    v7 = (2 * v24) | 1;
    if ((v7 & 1) == 0)
      goto LABEL_39;
  }
  sub_1BB874434();
  swift_unknownObjectRetain_n();
  v35 = swift_dynamicCastClass();
  if (!v35)
  {
    swift_unknownObjectRelease();
    v35 = MEMORY[0x1E0DEE9D8];
  }
  v36 = *(_QWORD *)(v35 + 16);
  swift_release();
  if (__OFSUB__(v7 >> 1, a2))
  {
LABEL_61:
    __break(1u);
LABEL_62:
    swift_unknownObjectRelease();
LABEL_39:
    v34 = sub_1BA85D814(v21, v4, a2, v7);
    goto LABEL_46;
  }
  if (v36 != (v7 >> 1) - a2)
    goto LABEL_62;
  v34 = swift_dynamicCastClass();
  if (!v34)
  {
    swift_unknownObjectRelease();
    v34 = MEMORY[0x1E0DEE9D8];
  }
LABEL_46:
  swift_unknownObjectRelease();
  type metadata accessor for FormatLayoutViewContainer();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 80) = 0;
  *(_QWORD *)(v37 + 88) = 0;
  *(_QWORD *)(v37 + 16) = v50;
  *(_QWORD *)(v37 + 24) = v11;
  *(_QWORD *)(v37 + 32) = v5;
  *(_QWORD *)(v37 + 40) = v49;
  *(_BYTE *)(v37 + 48) = v48;
  *(_QWORD *)(v37 + 56) = v6 | 0x3000000000000000;
  *(_QWORD *)(v37 + 64) = v52;
  *(_QWORD *)(v37 + 72) = v34;
  v38 = &v53[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v55 = *(_QWORD *)v38;
  *(_QWORD *)v38 = 0x8000000000000000;
  sub_1BA7999A8(v37, v50, v11, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v38 = v55;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v40 = sub_1BA7999D4();
  v41 = *(_QWORD *)(v40 + 16);
  if (v41)
  {
    v42 = &v53[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers];
    v43 = (__int128 *)(v40 + 32);
    do
    {
      v54 = *v43;
      swift_getObjectType();
      swift_unknownObjectRetain();
      if ((sub_1BB870ED0() & 1) != 0)
      {
        swift_beginAccess();
        v44 = *(_QWORD **)v42;
        swift_unknownObjectRetain();
        v45 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)v42 = v44;
        if ((v45 & 1) == 0)
        {
          v44 = sub_1BB391908(0, v44[2] + 1, 1, v44);
          *(_QWORD *)v42 = v44;
        }
        v47 = v44[2];
        v46 = v44[3];
        if (v47 >= v46 >> 1)
        {
          v44 = sub_1BB391908((_QWORD *)(v46 > 1), v47 + 1, 1, v44);
          *(_QWORD *)v42 = v44;
        }
        v44[2] = v47 + 1;
        *(_OWORD *)&v44[2 * v47 + 4] = v54;
        swift_endAccess();
      }
      swift_unknownObjectRelease();
      ++v43;
      --v41;
    }
    while (v41);
  }

  swift_bridgeObjectRelease();
  swift_release();

}

void sub_1BB6C433C()
{
  FormatLayoutView.prepareForReuse()();
}

uint64_t sub_1BB6C435C()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1BB6C43B4()
{
  sub_1BB6C792C(&qword_1ED3B4890, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t FormatLayoutView.isSelectable.getter()
{
  uint64_t v0;
  char *v1;
  void *v2;
  char *v3;
  id v4;
  _BOOL8 v5;
  unint64_t v6;
  uint64_t result;

  v1 = (char *)sub_1BB6C44E8(v0);
  if (!v1)
    return 1;
  v2 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_interactionProvider];
  v3 = v1;
  v4 = objc_msgSend(v2, sel_interaction);
  v5 = (_BOOL8)v4;
  if (!v4)
  {
LABEL_5:

    return v5;
  }
  v6 = (unint64_t)objc_msgSend(v4, sel_type);
  swift_unknownObjectRelease();
  if (v6 < 3)
  {
    v5 = (v6 & 7) == 2;
    goto LABEL_5;
  }
  result = sub_1BB873EAC();
  __break(1u);
  return result;
}

uint64_t sub_1BB6C44E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  id v16;

  v1 = a1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers;
  result = swift_beginAccess();
  v3 = 0;
  v4 = *(_QWORD *)v1 + 64;
  v5 = 1 << *(_BYTE *)(*(_QWORD *)v1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*(_QWORD *)v1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v12 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v12 >= v8)
      return 0;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v12 + 1;
      if (v12 + 1 >= v8)
        return 0;
      v13 = *(_QWORD *)(v4 + 8 * v3);
      if (!v13)
      {
        v3 = v12 + 2;
        if (v12 + 2 >= v8)
          return 0;
        v13 = *(_QWORD *)(v4 + 8 * v3);
        if (!v13)
        {
          v3 = v12 + 3;
          if (v12 + 3 >= v8)
            return 0;
          v13 = *(_QWORD *)(v4 + 8 * v3);
          if (!v13)
          {
            v14 = v12 + 4;
            if (v14 >= v8)
              return 0;
            v13 = *(_QWORD *)(v4 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                v3 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_27;
                if (v3 >= v8)
                  return 0;
                v13 = *(_QWORD *)(v4 + 8 * v3);
                ++v14;
                if (v13)
                  goto LABEL_22;
              }
            }
            v3 = v14;
          }
        }
      }
    }
LABEL_22:
    v7 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 56) + 8 * v10) + 56);
    if (((v11 >> 59) & 0x1E | (v11 >> 2) & 1) == 5)
    {
      v15 = *(void **)((v11 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
      v16 = v15;
      return (uint64_t)v15;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BB6C4664()
{
  return FormatLayoutView.isSelectable.getter() & 1;
}

uint64_t FormatLayoutView.shouldMonitorMotion.getter()
{
  return 0;
}

uint64_t FormatLayoutView.blueprintViewportMonitor(_:didEndDisplayingCellWith:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int v32;
  char *v33;
  uint64_t v34;
  int v35;
  char *v36;

  v3 = v2;
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers);
  swift_beginAccess();
  v6 = *v5;
  if ((unint64_t)*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      if (v7 < 1)
        goto LABEL_45;
      for (i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0)
          v9 = (id)MEMORY[0x1BCCE4630](i, v6);
        else
          v9 = *(id *)(v6 + 8 * i + 32);
        v10 = v9;
        sub_1BB871020();

      }
    }
  }
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  v12 = *v11;
  v13 = *v11 + 64;
  v14 = 1 << *(_BYTE *)(*v11 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(*v11 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  v18 = 0;
  while (v16)
  {
    v21 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v22 = v21 | (v18 << 6);
LABEL_33:
    v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v22) + 56);
    switch((v26 >> 59) & 0x1E | (v26 >> 2) & 1)
    {
      case 4uLL:
        v19 = *(void **)((v26 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_retain();
        swift_retain();
        v20 = v19;
        FormatLayoutView.blueprintViewportMonitor(_:didEndDisplayingCellWith:)(a1, a2);
        swift_release();

        goto LABEL_14;
      case 0xBuLL:
        v27 = *(char **)((v26 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v28 = *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView];
        if (!v28)
          continue;
        v29 = *(_QWORD *)(v28 + qword_1ED3AF858);
        goto LABEL_40;
      case 0xCuLL:
        v30 = *(char **)((v26 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v31 = *(_QWORD *)&v30[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
        swift_beginAccess();
        v32 = *(unsigned __int8 *)(v31 + 17);
        *(_BYTE *)(v31 + 17) = 0;
        if ((v32 & 0xFFFFFFC1) == 0)
          continue;
        swift_retain();
        swift_retain();
        v33 = v30;
        LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
        swift_release();

        goto LABEL_14;
      case 0xDuLL:
        v27 = *(char **)((v26 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v34 = *(_QWORD *)&v27[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
        if (!v34)
          continue;
        v29 = *(_QWORD *)(v34 + qword_1ED3AF858);
LABEL_40:
        swift_beginAccess();
        v35 = *(unsigned __int8 *)(v29 + 17);
        *(_BYTE *)(v29 + 17) = 0;
        if ((v35 & 0xFFFFFFC1) != 0)
        {
          swift_retain();
          swift_retain();
          v36 = v27;
          swift_retain();
          LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
          swift_release();

          swift_release();
LABEL_14:
          swift_release();
        }
        break;
      default:
        continue;
    }
  }
  v23 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v23 >= v17)
    return swift_release();
  v24 = *(_QWORD *)(v13 + 8 * v23);
  ++v18;
  if (v24)
    goto LABEL_32;
  v18 = v23 + 1;
  if (v23 + 1 >= v17)
    return swift_release();
  v24 = *(_QWORD *)(v13 + 8 * v18);
  if (v24)
    goto LABEL_32;
  v18 = v23 + 2;
  if (v23 + 2 >= v17)
    return swift_release();
  v24 = *(_QWORD *)(v13 + 8 * v18);
  if (v24)
    goto LABEL_32;
  v18 = v23 + 3;
  if (v23 + 3 >= v17)
    return swift_release();
  v24 = *(_QWORD *)(v13 + 8 * v18);
  if (v24)
  {
LABEL_32:
    v16 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v18 << 6);
    goto LABEL_33;
  }
  v25 = v23 + 4;
  if (v25 < v17)
  {
    v24 = *(_QWORD *)(v13 + 8 * v25);
    if (!v24)
    {
      while (1)
      {
        v18 = v25 + 1;
        if (__OFADD__(v25, 1))
          break;
        if (v18 >= v17)
          return swift_release();
        v24 = *(_QWORD *)(v13 + 8 * v18);
        ++v25;
        if (v24)
          goto LABEL_32;
      }
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      JUMPOUT(0x1BB6C4ACCLL);
    }
    v18 = v25;
    goto LABEL_32;
  }
  return swift_release();
}

uint64_t FormatLayoutView.blueprintViewportMonitorDidEndDisplayingSupplementaryView(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  void *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  char *v24;
  uint64_t v25;
  int v26;
  char *v27;

  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  v3 = *v2;
  v4 = *v2 + 64;
  v5 = 1 << *(_BYTE *)(*v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*v2 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (v7)
  {
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v13 = v12 | (v9 << 6);
LABEL_24:
    v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v13) + 56);
    switch((v17 >> 59) & 0x1E | (v17 >> 2) & 1)
    {
      case 4uLL:
        v10 = *(void **)((v17 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_retain();
        swift_retain();
        v11 = v10;
        FormatLayoutView.blueprintViewportMonitorDidEndDisplayingSupplementaryView(_:)(a1);
        swift_release();

        goto LABEL_5;
      case 0xBuLL:
        v18 = *(char **)((v17 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView];
        if (!v19)
          continue;
        v20 = *(_QWORD *)(v19 + qword_1ED3AF858);
        goto LABEL_31;
      case 0xCuLL:
        v21 = *(char **)((v17 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v22 = *(_QWORD *)&v21[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
        swift_beginAccess();
        v23 = *(unsigned __int8 *)(v22 + 17);
        *(_BYTE *)(v22 + 17) = 0;
        if ((v23 & 0xFFFFFFC1) == 0)
          continue;
        swift_retain();
        swift_retain();
        v24 = v21;
        LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
        swift_release();

        goto LABEL_5;
      case 0xDuLL:
        v18 = *(char **)((v17 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v25 = *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
        if (!v25)
          continue;
        v20 = *(_QWORD *)(v25 + qword_1ED3AF858);
LABEL_31:
        swift_beginAccess();
        v26 = *(unsigned __int8 *)(v20 + 17);
        *(_BYTE *)(v20 + 17) = 0;
        if ((v26 & 0xFFFFFFC1) != 0)
        {
          swift_retain();
          swift_retain();
          v27 = v18;
          swift_retain();
          LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
          swift_release();

          swift_release();
LABEL_5:
          swift_release();
        }
        break;
      default:
        continue;
    }
  }
  v14 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v14 >= v8)
    return swift_release();
  v15 = *(_QWORD *)(v4 + 8 * v14);
  ++v9;
  if (v15)
    goto LABEL_23;
  v9 = v14 + 1;
  if (v14 + 1 >= v8)
    return swift_release();
  v15 = *(_QWORD *)(v4 + 8 * v9);
  if (v15)
    goto LABEL_23;
  v9 = v14 + 2;
  if (v14 + 2 >= v8)
    return swift_release();
  v15 = *(_QWORD *)(v4 + 8 * v9);
  if (v15)
    goto LABEL_23;
  v9 = v14 + 3;
  if (v14 + 3 >= v8)
    return swift_release();
  v15 = *(_QWORD *)(v4 + 8 * v9);
  if (v15)
  {
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v9 << 6);
    goto LABEL_24;
  }
  v16 = v14 + 4;
  if (v16 < v8)
  {
    v15 = *(_QWORD *)(v4 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        v9 = v16 + 1;
        if (__OFADD__(v16, 1))
          break;
        if (v9 >= v8)
          return swift_release();
        v15 = *(_QWORD *)(v4 + 8 * v9);
        ++v16;
        if (v15)
          goto LABEL_23;
      }
LABEL_35:
      __break(1u);
      JUMPOUT(0x1BB6C4E58);
    }
    v9 = v16;
    goto LABEL_23;
  }
  return swift_release();
}

uint64_t FormatLayoutView.accessibilityContainerType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  __int16 v4;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
    return 0;
  swift_retain();
  sub_1BB1F8DCC();
  v2 = v1;
  v4 = v3;
  swift_release();
  if ((v4 & 0x100) != 0)
    return 0;
  if ((v4 & 1) != 0)
    return 4 * (v2 == 0);
  return v2;
}

uint64_t (*FormatLayoutView.accessibilityContainerType.modify(uint64_t *a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  __int16 v6;

  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)
    || (swift_retain(), sub_1BB1F8DCC(), v4 = v3, v6 = v5, swift_release(), (v6 & 0x100) != 0))
  {
    v4 = 0;
  }
  else if ((v6 & 1) != 0)
  {
    v4 = 4 * (v4 == 0);
  }
  *a1 = v4;
  return nullsub_1;
}

BOOL FormatLayoutView.isAccessibilityElement.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  __int16 v4;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)
    && (swift_retain(), sub_1BB1F8DCC(), v2 = v1, v4 = v3, swift_release(), (v4 & 0x101) == 1))
  {
    return v2 != 0;
  }
  else
  {
    return 0;
  }
}

uint64_t (*FormatLayoutView.isAccessibilityElement.modify(BOOL *a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  __int16 v6;
  BOOL v7;

  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)
    && (swift_retain(), sub_1BB1F8DCC(), v4 = v3, v6 = v5, swift_release(), (v6 & 0x101) == 1)
    && v4 != 0;
  *a1 = v7;
  return nullsub_1;
}

uint64_t FormatLayoutView.accessibilityElements.getter()
{
  return sub_1BB6C6000((uint64_t (*)(uint64_t))sub_1BB1F8FF8);
}

uint64_t (*FormatLayoutView.accessibilityElements.modify(uint64_t *a1))()
{
  uint64_t v1;
  uint64_t v3;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
  {
    swift_retain();
    v3 = sub_1BB1F8FF8();
    swift_release();
  }
  else
  {
    v3 = 0;
  }
  *a1 = v3;
  return destroy for FormatOptionBindingModifier;
}

uint64_t FormatLayoutView.accessibilityIdentifier.getter()
{
  return sub_1BB6C5900((void (*)(uint64_t, uint64_t))sub_1BB6C6B84);
}

uint64_t (*FormatLayoutView.accessibilityIdentifier.modify(uint64_t *a1))()
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
    goto LABEL_9;
  swift_retain();
  sub_1BB1F8DCC();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    v8 = 0;
    v10 = 0;
    goto LABEL_10;
  }
  v5 = sub_1BB1F8A68();
  swift_retain();
  v6 = sub_1BB6C6B84(v5);
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = (uint64_t)v6;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6A28((unint64_t *)&unk_1ED3B95E0, MEMORY[0x1E0DEAF38]);
  v7 = sub_1BB872BC8();
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  a1[2] = v7;
  sub_1BA5C6A28((unint64_t *)&qword_1ED3B95D0, MEMORY[0x1E0DEAF20]);
  v8 = sub_1BB872904();
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v10;
  return destroy for FormatSelectorsExpression;
}

uint64_t FormatLayoutView.accessibilityLabel.getter()
{
  return sub_1BB6C5900((void (*)(uint64_t, uint64_t))sub_1BB6C6D54);
}

uint64_t (*FormatLayoutView.accessibilityLabel.modify(uint64_t *a1))()
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
    goto LABEL_9;
  swift_retain();
  sub_1BB1F8DCC();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    v8 = 0;
    v10 = 0;
    goto LABEL_10;
  }
  v5 = sub_1BB1F8A68();
  swift_retain();
  v6 = sub_1BB6C6D54(v5);
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = (uint64_t)v6;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6A28((unint64_t *)&unk_1ED3B95E0, MEMORY[0x1E0DEAF38]);
  v7 = sub_1BB872BC8();
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  a1[2] = v7;
  sub_1BA5C6A28((unint64_t *)&qword_1ED3B95D0, MEMORY[0x1E0DEAF20]);
  v8 = sub_1BB872904();
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v10;
  return destroy for FormatSelectorsExpression;
}

uint64_t FormatLayoutView.accessibilityValue.getter()
{
  return sub_1BB6C5900((void (*)(uint64_t, uint64_t))sub_1BB6C6F24);
}

uint64_t (*FormatLayoutView.accessibilityValue.modify(uint64_t *a1))()
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
    goto LABEL_9;
  swift_retain();
  sub_1BB1F8DCC();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    v8 = 0;
    v10 = 0;
    goto LABEL_10;
  }
  v5 = sub_1BB1F8A68();
  swift_retain();
  v6 = sub_1BB6C6F24(v5);
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = (uint64_t)v6;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6A28((unint64_t *)&unk_1ED3B95E0, MEMORY[0x1E0DEAF38]);
  v7 = sub_1BB872BC8();
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  a1[2] = v7;
  sub_1BA5C6A28((unint64_t *)&qword_1ED3B95D0, MEMORY[0x1E0DEAF20]);
  v8 = sub_1BB872904();
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v10;
  return destroy for FormatSelectorsExpression;
}

uint64_t FormatLayoutView.ts_accessibilityElementHelp.getter()
{
  return sub_1BB6C5900((void (*)(uint64_t, uint64_t))sub_1BB6C70F4);
}

uint64_t (*FormatLayoutView.ts_accessibilityElementHelp.modify(uint64_t *a1))()
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
    goto LABEL_9;
  swift_retain();
  sub_1BB1F8DCC();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    v8 = 0;
    v10 = 0;
    goto LABEL_10;
  }
  v5 = sub_1BB1F8A68();
  swift_retain();
  v6 = sub_1BB6C70F4(v5);
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = (uint64_t)v6;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6A28((unint64_t *)&unk_1ED3B95E0, MEMORY[0x1E0DEAF38]);
  v7 = sub_1BB872BC8();
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  a1[2] = v7;
  sub_1BA5C6A28((unint64_t *)&qword_1ED3B95D0, MEMORY[0x1E0DEAF20]);
  v8 = sub_1BB872904();
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v10;
  return destroy for FormatSelectorsExpression;
}

uint64_t FormatLayoutView.accessibilityHint.getter()
{
  return sub_1BB6C5900((void (*)(uint64_t, uint64_t))sub_1BB6C72C4);
}

uint64_t sub_1BB6C5900(void (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer);
  if (v2)
  {
    swift_retain();
    sub_1BB1F8DCC();
    if ((v5 & 0x100) != 0 || (v5 & 1) != 0 && !v4)
    {
      swift_release();
    }
    else
    {
      v8 = sub_1BB1F8A68();
      swift_retain();
      a1(v8, v2);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5C6A28((unint64_t *)&unk_1ED3B95E0, MEMORY[0x1E0DEAF38]);
      if (*(_QWORD *)(sub_1BB872BC8() + 16))
      {
        sub_1BA5C6A28((unint64_t *)&qword_1ED3B95D0, MEMORY[0x1E0DEAF20]);
        v6 = sub_1BB872904();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v6;
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t FormatLayoutView.accessibilityHint.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayoutView.accessibilityHint.modify(uint64_t *a1))()
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
    goto LABEL_9;
  swift_retain();
  sub_1BB1F8DCC();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    v8 = 0;
    v10 = 0;
    goto LABEL_10;
  }
  v5 = sub_1BB1F8A68();
  swift_retain();
  v6 = sub_1BB6C72C4(v5);
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = (uint64_t)v6;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6A28((unint64_t *)&unk_1ED3B95E0, MEMORY[0x1E0DEAF38]);
  v7 = sub_1BB872BC8();
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  a1[2] = v7;
  sub_1BA5C6A28((unint64_t *)&qword_1ED3B95D0, MEMORY[0x1E0DEAF20]);
  v8 = sub_1BB872904();
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v10;
  return destroy for FormatSelector;
}

id sub_1BB6C5C48(char *a1, uint64_t a2, void (*a3)(uint64_t))
{
  void *v3;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer];
  if (v3)
  {
    v5 = a1;
    v6 = swift_retain();
    a3(v6);
    v8 = v7;

    swift_release();
    if (v8)
    {
      v3 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v3 = 0;
    }
  }
  return v3;
}

uint64_t FormatLayoutView.accessibilityLanguage.getter()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  unint64_t v5;
  _QWORD *v6;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
  {
    swift_retain();
    sub_1BB1F8DCC();
    if ((v2 & 0x100) != 0 || (v2 & 1) != 0 && !v1)
    {
      swift_release();
    }
    else
    {
      v5 = sub_1BB1F8A68();
      swift_retain();
      v6 = sub_1BB6C7494(v5);
      swift_bridgeObjectRelease();
      swift_release();
      if (v6[2])
      {
        v3 = v6[4];
        swift_bridgeObjectRetain();
        swift_release();
        swift_bridgeObjectRelease();
        return v3;
      }
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t (*FormatLayoutView.accessibilityLanguage.modify(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
    goto LABEL_9;
  swift_retain();
  sub_1BB1F8DCC();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    v8 = 0;
    v7 = 0;
    goto LABEL_10;
  }
  v5 = sub_1BB1F8A68();
  swift_retain();
  v6 = sub_1BB6C7494(v5);
  swift_release();
  swift_bridgeObjectRelease();
  if (!v6[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v8 = v6[4];
  v7 = v6[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v7;
  return destroy for FormatSelectorsExpression;
}

uint64_t FormatLayoutView.accessibilityTraits.getter()
{
  return sub_1BB6C6000((uint64_t (*)(uint64_t))sub_1BB1F9D34);
}

uint64_t (*FormatLayoutView.accessibilityTraits.modify(uint64_t *a1))()
{
  uint64_t v1;
  uint64_t v3;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
  {
    swift_retain();
    v3 = sub_1BB1F9D34();
    swift_release();
  }
  else
  {
    v3 = 0;
  }
  *a1 = v3;
  return nullsub_1;
}

uint64_t FormatLayoutView.accessibilityCustomActions.getter()
{
  return sub_1BB6C6000((uint64_t (*)(uint64_t))sub_1BB1FA050);
}

uint64_t sub_1BB6C6000(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
    return 0;
  v3 = swift_retain();
  v4 = a1(v3);
  swift_release();
  return v4;
}

uint64_t (*FormatLayoutView.accessibilityCustomActions.modify(uint64_t *a1))()
{
  uint64_t v1;
  uint64_t v3;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
  {
    swift_retain();
    v3 = sub_1BB1FA050();
    swift_release();
  }
  else
  {
    v3 = 0;
  }
  *a1 = v3;
  return destroy for FeedEditionConfig.RepoolInterval;
}

uint64_t sub_1BB6C60B8()
{
  void *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _OWORD v12[2];
  _QWORD *v13[6];
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  swift_beginAccess();
  v1 = v0;
  v2 = swift_bridgeObjectRetain();
  v3 = (_QWORD *)sub_1BB6C6848(v2);
  swift_bridgeObjectRelease();

  v13[0] = v3;
  v4 = v1;
  swift_bridgeObjectRetain();
  sub_1BB6CA8E0(v13, v4);
  swift_bridgeObjectRelease();

  v5 = v13[0];
  v6 = v13[0][2];
  if (v6)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1BA57F544(0, v6, 0);
    v7 = (uint64_t)(v5 + 4);
    v8 = v16;
    do
    {
      sub_1BA4C2DD8(v7, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      sub_1BA747A10((uint64_t)&v14, (uint64_t)v12);
      sub_1BA76EAE0(v12, v15);
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA57F544(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v16;
      }
      v10 = *(_QWORD *)(v8 + 16);
      v9 = *(_QWORD *)(v8 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1BA57F544(v9 > 1, v10 + 1, 1);
        v8 = v16;
      }
      *(_QWORD *)(v8 + 16) = v10 + 1;
      sub_1BA76EAE0(v15, (_OWORD *)(v8 + 32 * v10 + 32));
      v7 += 80;
      --v6;
    }
    while (v6);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v8;
}

void sub_1BB6C62A4()
{
  FormatLayoutView.viewDidLoad()();
}

void sub_1BB6C62C4()
{
  FormatLayoutView.viewWillAppear()();
}

void sub_1BB6C62E4()
{
  FormatLayoutView.viewDidAppear()();
}

void sub_1BB6C6304()
{
  FormatLayoutView.viewWillDisappear()();
}

void sub_1BB6C6324()
{
  FormatLayoutView.viewDidDisappear()();
}

Swift::Bool __swiftcall FormatLayoutView.gestureRecognizer(_:shouldRequireFailureOf:)(UIGestureRecognizer _, UIGestureRecognizer shouldRequireFailureOf)
{
  id v2;
  void *v3;
  Swift::Bool v4;

  v2 = -[objc_class view](shouldRequireFailureOf.super.isa, sel_view);
  if (v2)
  {
    v3 = v2;
    type metadata accessor for FormatButton();
    v2 = (id)swift_dynamicCastClass();
    if (!v2)
    {

      v2 = 0;
    }
  }
  v4 = v2 != 0;

  return v4;
}

void __swiftcall FormatLayoutView.sourceView(identifier:)(UIView_optional *__return_ptr retstr, Swift::String identifier)
{
  char *v2;
  char *v3;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char v33;
  char *v34;
  _QWORD v35[2];
  __int128 v36[2];
  uint64_t v37;
  void *v38;
  _QWORD v39[4];

  v3 = v2;
  object = identifier._object;
  countAndFlagsBits = identifier._countAndFlagsBits;
  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - v7;
  v9 = type metadata accessor for FeedItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)&v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_feedItem];
  swift_beginAccess();
  sub_1BAB42DE4(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BA5C699C((uint64_t)v8, &qword_1ED3B2A50, type metadata accessor for FeedItem);
    goto LABEL_3;
  }
  sub_1BA6DA07C((uint64_t)v8, (uint64_t)v12);
  FeedItem.identifier.getter();
  if (v31 == countAndFlagsBits && v30 == object)
  {
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FeedItem);
LABEL_36:
    v34 = v3;
    return;
  }
  v33 = sub_1BB874398();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FeedItem);
  if ((v33 & 1) != 0)
    goto LABEL_36;
LABEL_3:
  v35[0] = countAndFlagsBits;
  v35[1] = object;
  v14 = &v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers];
  swift_beginAccess();
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)v14 + 64;
  v17 = 1 << *(_BYTE *)(*(_QWORD *)v14 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(*(_QWORD *)v14 + 64);
  v20 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  v21 = 0;
  if (v19)
    goto LABEL_8;
LABEL_9:
  v24 = v21 + 1;
  if (!__OFADD__(v21, 1))
  {
    if (v24 < v20)
    {
      v25 = *(_QWORD *)(v16 + 8 * v24);
      ++v21;
      if (v25)
        goto LABEL_22;
      v21 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_33;
      v25 = *(_QWORD *)(v16 + 8 * v21);
      if (v25)
        goto LABEL_22;
      v21 = v24 + 2;
      if (v24 + 2 >= v20)
        goto LABEL_33;
      v25 = *(_QWORD *)(v16 + 8 * v21);
      if (v25)
      {
LABEL_22:
        v19 = (v25 - 1) & v25;
        for (i = __clz(__rbit64(v25)) + (v21 << 6); ; i = v22 | (v21 << 6))
        {
          v38 = *(void **)(*(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * i) + 64);
          v27 = v38;
          sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
          sub_1BB6C78D8();
          swift_retain();
          v28 = v27;
          if ((swift_dynamicCast() & 1) != 0)
          {
            sub_1BA4CECCC(v36, (uint64_t)v39);
            __swift_project_boxed_opaque_existential_1(v39, v39[3]);
            v29 = sub_1BB870DA4();
            swift_release();
            if (v29)
            {
              swift_release();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
              return;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
            if (!v19)
              goto LABEL_9;
          }
          else
          {
            v37 = 0;
            memset(v36, 0, sizeof(v36));
            swift_release();
            sub_1BA5C699C((uint64_t)v36, &qword_1EF2CA8D0, (uint64_t (*)(uint64_t))sub_1BB6C78D8);
            if (!v19)
              goto LABEL_9;
          }
LABEL_8:
          v22 = __clz(__rbit64(v19));
          v19 &= v19 - 1;
        }
      }
      v26 = v24 + 3;
      if (v26 < v20)
      {
        v25 = *(_QWORD *)(v16 + 8 * v26);
        if (v25)
        {
          v21 = v26;
          goto LABEL_22;
        }
        while (1)
        {
          v21 = v26 + 1;
          if (__OFADD__(v26, 1))
            goto LABEL_38;
          if (v21 >= v20)
            break;
          v25 = *(_QWORD *)(v16 + 8 * v21);
          ++v26;
          if (v25)
            goto LABEL_22;
        }
      }
    }
LABEL_33:
    swift_release();
    return;
  }
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_1BB6C681C(uint64_t a1@<X0>, UIView_optional *a2@<X8>)
{
  FormatLayoutView.sourceView(identifier:)(a2, *(Swift::String *)&a1);
}

BOOL sub_1BB6C683C(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

uint64_t sub_1BB6C6848(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t i;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _OWORD *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _QWORD *v57;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v57 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v5)
    goto LABEL_8;
LABEL_14:
  v29 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v29 < v6)
    {
      v30 = *(_QWORD *)(v2 + 8 * v29);
      ++v8;
      if (v30)
        goto LABEL_29;
      v8 = v29 + 1;
      if (v29 + 1 >= v6)
        goto LABEL_34;
      v30 = *(_QWORD *)(v2 + 8 * v8);
      if (v30)
        goto LABEL_29;
      v8 = v29 + 2;
      if (v29 + 2 >= v6)
        goto LABEL_34;
      v30 = *(_QWORD *)(v2 + 8 * v8);
      if (v30)
        goto LABEL_29;
      v8 = v29 + 3;
      if (v29 + 3 >= v6)
        goto LABEL_34;
      v30 = *(_QWORD *)(v2 + 8 * v8);
      if (v30)
      {
LABEL_29:
        v5 = (v30 - 1) & v30;
        for (i = __clz(__rbit64(v30)) + (v8 << 6); ; i = v23 | (v8 << 6))
        {
          v32 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
          v33 = *(unsigned __int8 *)(v32 + 48);
          if (v33 > 0x3F)
          {
            *(_QWORD *)&v52 = 0;
            BYTE8(v52) = 1;
            v9 = *(_QWORD *)(v32 + 56);
            swift_retain();
            sub_1BA799868(v9);
            v11 = v10;
            objc_msgSend(v10, sel_frame);
            v13 = v12;
            v15 = v14;
            v17 = v16;
            v19 = v18;

            *(_QWORD *)&v53 = v13;
            *((_QWORD *)&v53 + 1) = v15;
            *(_QWORD *)&v54 = v17;
            *((_QWORD *)&v54 + 1) = v19;
            v20 = v9;
          }
          else
          {
            v34 = *(_QWORD *)(v32 + 40);
            v35 = v33 & 1;
            if (v35)
              v34 = 0;
            *(_QWORD *)&v52 = v34;
            BYTE8(v52) = v35;
            v36 = *(_QWORD *)(v32 + 56);
            swift_retain();
            sub_1BA799868(v36);
            v38 = v37;
            objc_msgSend(v37, sel_frame);
            v40 = v39;
            v42 = v41;
            v44 = v43;
            v46 = v45;

            *(_QWORD *)&v53 = v40;
            *((_QWORD *)&v53 + 1) = v42;
            *(_QWORD *)&v54 = v44;
            *((_QWORD *)&v54 + 1) = v46;
            v20 = v36;
          }
          sub_1BA799868(v20);
          v22 = v21;
          *((_QWORD *)&v56 + 1) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
          *(_QWORD *)&v55 = v22;
          swift_release();
          if (*((_QWORD *)&v56 + 1))
          {
            v49 = v54;
            v50 = v55;
            v51 = v56;
            v47 = v52;
            v48 = v53;
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_1BB3931A4(0, v57[2] + 1, 1, v57);
              v57 = (_QWORD *)result;
            }
            v26 = v57[2];
            v25 = v57[3];
            if (v26 >= v25 >> 1)
            {
              result = (uint64_t)sub_1BB3931A4((_QWORD *)(v25 > 1), v26 + 1, 1, v57);
              v57 = (_QWORD *)result;
            }
            v27 = v57;
            v57[2] = v26 + 1;
            v28 = &v27[10 * v26];
            v28[2] = v47;
            v28[5] = v50;
            v28[6] = v51;
            v28[3] = v48;
            v28[4] = v49;
            if (!v5)
              goto LABEL_14;
          }
          else
          {
            result = sub_1BA5C699C((uint64_t)&v52, &qword_1EF2CA8D8, (uint64_t (*)(uint64_t))sub_1BAC87F60);
            if (!v5)
              goto LABEL_14;
          }
LABEL_8:
          v23 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      v31 = v29 + 4;
      if (v31 < v6)
      {
        v30 = *(_QWORD *)(v2 + 8 * v31);
        if (v30)
        {
          v8 = v31;
          goto LABEL_29;
        }
        while (1)
        {
          v8 = v31 + 1;
          if (__OFADD__(v31, 1))
            goto LABEL_36;
          if (v8 >= v6)
            break;
          v30 = *(_QWORD *)(v2 + 8 * v8);
          ++v31;
          if (v30)
            goto LABEL_29;
        }
      }
    }
LABEL_34:
    swift_release();
    return (uint64_t)v57;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

_QWORD *sub_1BB6C6B84(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v19;
  uint64_t v20;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = v1 & 0xC000000000000001;
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v5 = 4;
      v19 = v1 & 0xC000000000000001;
      while (1)
      {
        v6 = v5 - 4;
        if (v3)
        {
          v7 = MEMORY[0x1BCCE4630](v5 - 4, v1);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_19;
        }
        else
        {
          v7 = *(_QWORD *)(v1 + 8 * v5);
          swift_retain();
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(_BYTE *)(*(_QWORD *)(v7 + 16) + 32) == 18)
        {
          v9 = v1;
          v10 = v2;
          v11 = *(_QWORD *)(v7 + 24);
          v20 = v11;
          sub_1BA7333B4(v11);
          v12 = sub_1BB1F9820(&v20);
          v14 = v13;
          sub_1BA62ECD4(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v4 = sub_1BA6EA0D0(0, v4[2] + 1, 1, v4);
            v16 = v4[2];
            v15 = v4[3];
            if (v16 >= v15 >> 1)
              v4 = sub_1BA6EA0D0((_QWORD *)(v15 > 1), v16 + 1, 1, v4);
            v4[2] = v16 + 1;
            v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          v2 = v10;
          v1 = v9;
          v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2)
          goto LABEL_22;
      }
    }
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

_QWORD *sub_1BB6C6D54(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v19;
  uint64_t v20;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = v1 & 0xC000000000000001;
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v5 = 4;
      v19 = v1 & 0xC000000000000001;
      while (1)
      {
        v6 = v5 - 4;
        if (v3)
        {
          v7 = MEMORY[0x1BCCE4630](v5 - 4, v1);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_19;
        }
        else
        {
          v7 = *(_QWORD *)(v1 + 8 * v5);
          swift_retain();
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(_BYTE *)(*(_QWORD *)(v7 + 16) + 32) == 19)
        {
          v9 = v1;
          v10 = v2;
          v11 = *(_QWORD *)(v7 + 24);
          v20 = v11;
          sub_1BA7333B4(v11);
          v12 = sub_1BB1F9820(&v20);
          v14 = v13;
          sub_1BA62ECD4(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v4 = sub_1BA6EA0D0(0, v4[2] + 1, 1, v4);
            v16 = v4[2];
            v15 = v4[3];
            if (v16 >= v15 >> 1)
              v4 = sub_1BA6EA0D0((_QWORD *)(v15 > 1), v16 + 1, 1, v4);
            v4[2] = v16 + 1;
            v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          v2 = v10;
          v1 = v9;
          v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2)
          goto LABEL_22;
      }
    }
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

_QWORD *sub_1BB6C6F24(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v19;
  uint64_t v20;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = v1 & 0xC000000000000001;
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v5 = 4;
      v19 = v1 & 0xC000000000000001;
      while (1)
      {
        v6 = v5 - 4;
        if (v3)
        {
          v7 = MEMORY[0x1BCCE4630](v5 - 4, v1);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_19;
        }
        else
        {
          v7 = *(_QWORD *)(v1 + 8 * v5);
          swift_retain();
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(_BYTE *)(*(_QWORD *)(v7 + 16) + 32) == 20)
        {
          v9 = v1;
          v10 = v2;
          v11 = *(_QWORD *)(v7 + 24);
          v20 = v11;
          sub_1BA7333B4(v11);
          v12 = sub_1BB1F9820(&v20);
          v14 = v13;
          sub_1BA62ECD4(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v4 = sub_1BA6EA0D0(0, v4[2] + 1, 1, v4);
            v16 = v4[2];
            v15 = v4[3];
            if (v16 >= v15 >> 1)
              v4 = sub_1BA6EA0D0((_QWORD *)(v15 > 1), v16 + 1, 1, v4);
            v4[2] = v16 + 1;
            v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          v2 = v10;
          v1 = v9;
          v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2)
          goto LABEL_22;
      }
    }
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

_QWORD *sub_1BB6C70F4(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v19;
  uint64_t v20;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = v1 & 0xC000000000000001;
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v5 = 4;
      v19 = v1 & 0xC000000000000001;
      while (1)
      {
        v6 = v5 - 4;
        if (v3)
        {
          v7 = MEMORY[0x1BCCE4630](v5 - 4, v1);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_19;
        }
        else
        {
          v7 = *(_QWORD *)(v1 + 8 * v5);
          swift_retain();
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(_BYTE *)(*(_QWORD *)(v7 + 16) + 32) == 21)
        {
          v9 = v1;
          v10 = v2;
          v11 = *(_QWORD *)(v7 + 24);
          v20 = v11;
          sub_1BA7333B4(v11);
          v12 = sub_1BB1F9820(&v20);
          v14 = v13;
          sub_1BA62ECD4(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v4 = sub_1BA6EA0D0(0, v4[2] + 1, 1, v4);
            v16 = v4[2];
            v15 = v4[3];
            if (v16 >= v15 >> 1)
              v4 = sub_1BA6EA0D0((_QWORD *)(v15 > 1), v16 + 1, 1, v4);
            v4[2] = v16 + 1;
            v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          v2 = v10;
          v1 = v9;
          v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2)
          goto LABEL_22;
      }
    }
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

_QWORD *sub_1BB6C72C4(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v19;
  uint64_t v20;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = v1 & 0xC000000000000001;
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v5 = 4;
      v19 = v1 & 0xC000000000000001;
      while (1)
      {
        v6 = v5 - 4;
        if (v3)
        {
          v7 = MEMORY[0x1BCCE4630](v5 - 4, v1);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_19;
        }
        else
        {
          v7 = *(_QWORD *)(v1 + 8 * v5);
          swift_retain();
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(_BYTE *)(*(_QWORD *)(v7 + 16) + 32) == 22)
        {
          v9 = v1;
          v10 = v2;
          v11 = *(_QWORD *)(v7 + 24);
          v20 = v11;
          sub_1BA7333B4(v11);
          v12 = sub_1BB1F9820(&v20);
          v14 = v13;
          sub_1BA62ECD4(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v4 = sub_1BA6EA0D0(0, v4[2] + 1, 1, v4);
            v16 = v4[2];
            v15 = v4[3];
            if (v16 >= v15 >> 1)
              v4 = sub_1BA6EA0D0((_QWORD *)(v15 > 1), v16 + 1, 1, v4);
            v4[2] = v16 + 1;
            v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          v2 = v10;
          v1 = v9;
          v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2)
          goto LABEL_22;
      }
    }
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

_QWORD *sub_1BB6C7494(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v19;
  uint64_t v20;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = v1 & 0xC000000000000001;
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v5 = 4;
      v19 = v1 & 0xC000000000000001;
      while (1)
      {
        v6 = v5 - 4;
        if (v3)
        {
          v7 = MEMORY[0x1BCCE4630](v5 - 4, v1);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_19;
        }
        else
        {
          v7 = *(_QWORD *)(v1 + 8 * v5);
          swift_retain();
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(_BYTE *)(*(_QWORD *)(v7 + 16) + 32) == 23)
        {
          v9 = v1;
          v10 = v2;
          v11 = *(_QWORD *)(v7 + 24);
          v20 = v11;
          sub_1BA7333B4(v11);
          v12 = sub_1BB1F9820(&v20);
          v14 = v13;
          sub_1BA62ECD4(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v4 = sub_1BA6EA0D0(0, v4[2] + 1, 1, v4);
            v16 = v4[2];
            v15 = v4[3];
            if (v16 >= v15 >> 1)
              v4 = sub_1BA6EA0D0((_QWORD *)(v15 > 1), v16 + 1, 1, v4);
            v4[2] = v16 + 1;
            v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          v2 = v10;
          v1 = v9;
          v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2)
          goto LABEL_22;
      }
    }
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BB6C7664(unint64_t a1, id a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x1BCCE4630](v5, a1);
LABEL_9:
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        if (v6 == a2)
        {

        }
        else
        {
          sub_1BB873DB0();
          sub_1BB873DE0();
          sub_1BB873DEC();
          sub_1BB873DBC();
        }
        ++v5;
        if (v7 == v4)
          return v9;
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v4 = sub_1BB873F30();
      if (!v4)
        return MEMORY[0x1E0DEE9D8];
    }
    v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

id sub_1BB6C77B0(unint64_t a1, void *a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;

  if (a1 >> 62)
    goto LABEL_12;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; v10 = sub_1BB873F30())
  {
    v11 = 4;
    while (1)
    {
      v12 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCE4630](v11 - 4, a1) : *(id *)(a1 + 8 * v11);
      v13 = v12;
      v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1))
        break;
      objc_msgSend(a2, sel_convertPoint_toCoordinateSpace_, v12, a4, a5);
      v15 = objc_msgSend(v13, sel_pointInside_withEvent_, a3);

      if ((v15 & 1) == 0)
      {
        ++v11;
        if (v14 != v10)
          continue;
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  v15 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_1BB6C78D8()
{
  unint64_t result;

  result = qword_1EF2CA8C8;
  if (!qword_1EF2CA8C8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2CA8C8);
  }
  return result;
}

uint64_t sub_1BB6C792C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatLayoutView();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB6C796C()
{
  return type metadata accessor for FormatLayoutView();
}

void sub_1BB6C7974()
{
  unint64_t v0;

  sub_1BA4B07F0(319, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1BB6C7A58(void *a1, unint64_t a2, _QWORD *a3)
{
  void *v6;
  void *v7;
  int v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;

  if (*a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_3:
      v6 = (void *)sub_1BA79947C((uint64_t (*)(uint64_t))sub_1BAA67DA8);
      if (v6)
      {
LABEL_7:
        v7 = v6;
        v8 = (a2 >> 59) & 0x1E | (a2 >> 2) & 1;
        if ((v8 - 3) < 0x11 || !v8)
        {
          v13 = v6;
          MEMORY[0x1BCCE36AC]();
          if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
          v9 = a1;
          MEMORY[0x1BCCE36AC]();
          if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
          goto LABEL_13;
        }
        if (v8 == 1)
        {
          v13 = *(id *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
          objc_msgSend(a1, sel_setMaskView_);
        }
        else
        {
          v13 = *(id *)((a2 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
          v10 = (void *)sub_1BB8716F8();
          objc_msgSend(a1, sel_setMaskView_, v10);

        }
        v11 = a1;
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_19:
          sub_1BB872E8C();
          sub_1BB872DCC();

LABEL_13:
          return;
        }
LABEL_25:
        sub_1BB872E44();
        goto LABEL_19;
      }
      if (*a3 >> 62)
      {
        swift_bridgeObjectRetain();
        v7 = (void *)sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (!__OFSUB__(v7, 1))
          goto LABEL_6;
      }
      else
      {
        v7 = *(void **)((*a3 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!__OFSUB__(v7, 1))
        {
LABEL_6:
          v6 = (void *)sub_1BAA676B4();
          goto LABEL_7;
        }
      }
      __break(1u);
      goto LABEL_25;
    }
  }
  else if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
}

void sub_1BB6C7CE4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB8745CC();
    sub_1BB872A90();
    v3 = sub_1BB874608() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
      __asm { BR              X9 }
  }
}

void sub_1BB6C7FAC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB8745CC();
    sub_1BB872A90();
    v3 = sub_1BB874608() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
      __asm { BR              X9 }
  }
}

void sub_1BB6C826C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB8745CC();
    sub_1BB872A90();
    v3 = sub_1BB874608() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
      __asm { BR              X9 }
  }
}

void sub_1BB6C84B4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB8745CC();
    sub_1BB872A90();
    v3 = sub_1BB874608() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
      __asm { BR              X9 }
  }
}

void sub_1BB6C86E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB8745CC();
    sub_1BB872A90();
    v3 = sub_1BB874608() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
      __asm { BR              X9 }
  }
}

void sub_1BB6C8998(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB8745CC();
    sub_1BB872A90();
    v3 = sub_1BB874608() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
      __asm { BR              X9 }
  }
}

uint64_t sub_1BB6C8BD8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, CGFloat a7, CGFloat a8, double a9, CGFloat a10, CGFloat a11, CGFloat a12, CGFloat a13, CGFloat a14)
{
  double v22;
  char v27;
  double MinX;
  double v29;
  _BOOL8 v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat MaxX;
  double v45;
  double MinY;
  double v47;
  double v48;
  double MaxY;
  double v50;
  BOOL v51;
  double v52;
  double v53;
  CGFloat width;
  CGFloat v56;
  CGFloat v57;
  double v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  double v62;
  _QWORD v63[5];
  char v64;
  CGFloat v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  _OWORD v69[2];
  uint64_t v70;
  char v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  _OWORD v76[2];
  uint64_t v77;
  char v78;
  CGFloat v79;
  CGFloat v80;
  CGFloat v81;
  CGFloat v82;
  _OWORD v83[2];
  uint64_t v84;
  char v85;
  CGFloat v86;
  CGFloat v87;
  CGFloat v88;
  CGFloat v89;
  _OWORD v90[2];
  uint64_t v91;
  char v92;
  CGFloat v93;
  CGFloat v94;
  double v95;
  CGFloat v96;
  _BYTE v97[32];
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;

  v22 = a9;
  v91 = a1;
  v27 = a2 & 1;
  v92 = a2 & 1;
  v93 = a7;
  v94 = a8;
  v95 = a9;
  v96 = a10;
  sub_1BA747A10(a3, (uint64_t)v97);
  v84 = a4;
  v85 = a5 & 1;
  v86 = a11;
  v87 = a12;
  v88 = a13;
  v89 = a14;
  sub_1BA747A10(a6, (uint64_t)v90);
  v77 = a1;
  v78 = v27;
  v79 = a7;
  v80 = a8;
  v62 = a8;
  v81 = v22;
  v82 = a10;
  sub_1BA747A10((uint64_t)v97, (uint64_t)v83);
  if ((a2 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    if ((a5 & 1) != 0)
    {
      v63[4] = a1;
      v64 = 1;
      v65 = a7;
      v66 = a8;
      v67 = v22;
      v68 = a10;
      sub_1BA747A10((uint64_t)v97, (uint64_t)v69);
      v98.origin.x = a7;
      v98.origin.y = a8;
      v98.size.width = v22;
      v98.size.height = a10;
      MinX = CGRectGetMinX(v98);
      sub_1BA747A10((uint64_t)v90, (uint64_t)v63);
      v99.origin.x = a11;
      v99.origin.y = a12;
      v99.size.width = a13;
      v99.size.height = a14;
      v61 = a11;
      v29 = CGRectGetMinX(v99);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
      v30 = MinX < v29;
      v59 = a7;
      v60 = a12;
      if (MinX < v29)
      {
        sub_1BA747A10((uint64_t)v97, (uint64_t)v69);
        v77 = a1;
        v78 = 1;
        v79 = a7;
        v80 = v62;
        v81 = v22;
        v82 = a10;
        sub_1BA76EAE0(v69, v83);
        sub_1BA747A10((uint64_t)v90, (uint64_t)v69);
        v70 = a4;
        v71 = 1;
        v72 = v61;
        v73 = a12;
        v74 = a13;
        v75 = a14;
        sub_1BA76EAE0(v69, v76);
        v32 = a7;
        v31 = a12;
        v39 = a14;
        v36 = v61;
        v34 = v62;
        v37 = a10;
        v38 = v31;
      }
      else
      {
        sub_1BA747A10((uint64_t)v90, (uint64_t)v69);
        v77 = a4;
        v78 = 1;
        v32 = v61;
        v79 = v61;
        v80 = a12;
        v81 = a13;
        v82 = a14;
        sub_1BA76EAE0(v69, v83);
        sub_1BA747A10((uint64_t)v97, (uint64_t)v69);
        v70 = a1;
        v71 = 1;
        v72 = a7;
        v73 = v62;
        v74 = v22;
        v75 = a10;
        sub_1BA76EAE0(v69, v76);
        v33 = a14;
        v34 = a12;
        v35 = a13;
        v36 = a7;
        v37 = v33;
        v38 = v62;
        a13 = v22;
        v22 = v35;
        v39 = a10;
      }
      v40 = v36;
      v41 = v38;
      v42 = a13;
      v43 = v39;
      v58 = CGRectGetMinX(*(CGRect *)(&v38 - 1));
      v100.origin.x = v32;
      v100.origin.y = v34;
      v100.size.width = v22;
      v100.size.height = v37;
      MaxX = CGRectGetMaxX(v100);
      v101.size.width = v22;
      v45 = MaxX;
      v57 = v32;
      v101.origin.x = v32;
      v101.origin.y = v34;
      width = v101.size.width;
      v56 = v37;
      v101.size.height = v37;
      MinY = CGRectGetMinY(v101);
      v102.origin.x = v36;
      v102.origin.y = v41;
      v102.size.width = a13;
      v102.size.height = v39;
      v47 = MinY - CGRectGetMinY(v102);
      if (qword_1ED3CEE40 != -1)
        swift_once();
      v48 = v60;
      if (v47 >= *(double *)&qword_1ED3CEE30 || v47 >= v58 - v45)
      {
        sub_1BA4A2E80((uint64_t)&v70, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        sub_1BA4A2E80((uint64_t)&v77, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        sub_1BA4A2E80((uint64_t)&v84, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        sub_1BA4A2E80((uint64_t)&v91, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        v52 = v61;
        v53 = v59;
      }
      else
      {
        v103.origin.x = v36;
        v103.origin.y = v41;
        v103.size.width = a13;
        v103.size.height = v39;
        MaxY = CGRectGetMaxY(v103);
        v104.origin.y = v34;
        v104.origin.x = v57;
        v104.size.width = width;
        v104.size.height = v56;
        v50 = CGRectGetMinY(v104);
        sub_1BA4A2E80((uint64_t)&v70, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        sub_1BA4A2E80((uint64_t)&v77, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        sub_1BA4A2E80((uint64_t)&v84, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        sub_1BA4A2E80((uint64_t)&v91, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        v51 = v50 < MaxY;
        v48 = v60;
        v52 = v61;
        v53 = v59;
        if (v51)
          return v30;
      }
      if (v62 == v48)
        return v53 <= v52;
      else
        return v62 < v48;
    }
    else
    {
      sub_1BA4A2E80((uint64_t)&v84, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      sub_1BA4A2E80((uint64_t)&v91, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      return 0;
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)&v91, (uint64_t (*)(_QWORD))sub_1BAC87F60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    v77 = a4;
    v78 = a5 & 1;
    v79 = a11;
    v80 = a12;
    v81 = a13;
    v82 = a14;
    sub_1BA76EAE0(v90, v83);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    if ((a5 & 1) != 0)
    {
      return 1;
    }
    else if (a1 == a4)
    {
      if (a8 == a12)
        return a7 <= a11;
      else
        return a8 < a12;
    }
    else
    {
      return a1 < a4;
    }
  }
}

uint64_t sub_1BB6C90D4(char *__src, char *a2, unint64_t a3, char *__dst, void *a5)
{
  char *v5;
  char *v6;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  CGFloat v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  uint64_t v18;
  char v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  char v24;
  char *v25;
  unint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char v32;
  CGFloat v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  uint64_t v37;
  char v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  unint64_t v43;
  char *v44;
  uint64_t result;
  unint64_t v46;
  char *v47;
  char *v49;
  _BYTE v50[32];
  uint64_t v51;
  char v52;
  double v53;
  double v54;
  double v55;
  double v56;
  _BYTE v57[32];
  uint64_t v58;
  char v59;
  double v60;
  double v61;
  double v62;
  double v63;
  _BYTE v64[32];
  uint64_t v65;
  char v66;
  double v67;
  double v68;
  double v69;
  double v70;
  _BYTE v71[32];
  unint64_t v72;
  char *v73;
  char *v74;

  v5 = __dst;
  v6 = a2;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 80;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 80;
  v74 = __src;
  v73 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -79)
      goto LABEL_43;
    if (__dst != a2 || &a2[80 * v11] <= __dst)
      memmove(__dst, a2, 80 * v11);
    v28 = &v5[80 * v11];
    v72 = (unint64_t)v28;
    v74 = v6;
    if (__src >= v6 || v10 < 80)
      goto LABEL_42;
    v29 = (char *)(a3 - 80);
    v47 = __src;
    while (1)
    {
      v49 = v29 + 80;
      sub_1BA4C2DD8((uint64_t)(v28 - 80), (uint64_t)&v65, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      v30 = v6 - 80;
      sub_1BA4C2DD8((uint64_t)(v6 - 80), (uint64_t)&v58, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      v31 = v65;
      v32 = v66;
      v51 = v65;
      v52 = v66;
      v33 = v67;
      v34 = v68;
      v35 = v69;
      v36 = v70;
      v53 = v67;
      v54 = v68;
      v55 = v69;
      v56 = v70;
      sub_1BA747A10((uint64_t)v71, (uint64_t)v57);
      v37 = v58;
      v38 = v59;
      v39 = v60;
      v40 = v61;
      v41 = v62;
      v42 = v63;
      sub_1BA747A10((uint64_t)v64, (uint64_t)v50);
      LOBYTE(v37) = sub_1BB6C8BD8(v31, v32, (uint64_t)v57, v37, v38, (uint64_t)v50, v33, v34, v35, v36, v39, v40, v41, v42);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      sub_1BA4A2E80((uint64_t)&v58, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      sub_1BA4A2E80((uint64_t)&v65, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      if ((v37 & 1) != 0)
        break;
      v43 = v72;
      v28 = (char *)(v72 - 80);
      v72 -= 80;
      if ((unint64_t)v49 < v43 || (unint64_t)v29 >= v43)
      {
        memmove(v29, (const void *)(v43 - 80), 0x50uLL);
        v30 = v6;
        goto LABEL_40;
      }
      if (v49 != (char *)v43)
        memmove(v29, (const void *)(v43 - 80), 0x50uLL);
      v30 = v6;
      v44 = v47;
      if (v28 <= v5)
        goto LABEL_42;
LABEL_41:
      v29 -= 80;
      v6 = v30;
      if (v30 <= v44)
        goto LABEL_42;
    }
    if (v49 != v6 || v29 >= v6)
      memmove(v29, v6 - 80, 0x50uLL);
    v74 -= 80;
    v28 = (char *)v72;
LABEL_40:
    v44 = v47;
    if (v28 <= v5)
      goto LABEL_42;
    goto LABEL_41;
  }
  if (v8 >= -79)
  {
    if (__dst != __src || &__src[80 * v9] <= __dst)
      memmove(__dst, __src, 80 * v9);
    v46 = (unint64_t)&v5[80 * v9];
    v72 = v46;
    if ((unint64_t)v6 < a3 && v8 >= 80)
    {
      do
      {
        sub_1BA4C2DD8((uint64_t)v6, (uint64_t)&v65, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        sub_1BA4C2DD8((uint64_t)v5, (uint64_t)&v58, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        v12 = v65;
        v13 = v66;
        v51 = v65;
        v52 = v66;
        v14 = v67;
        v15 = v68;
        v16 = v69;
        v17 = v70;
        v53 = v67;
        v54 = v68;
        v55 = v69;
        v56 = v70;
        sub_1BA747A10((uint64_t)v71, (uint64_t)v57);
        v18 = v58;
        v19 = v59;
        v20 = v60;
        v21 = v61;
        v22 = v62;
        v23 = v63;
        sub_1BA747A10((uint64_t)v64, (uint64_t)v50);
        v24 = sub_1BB6C8BD8(v12, v13, (uint64_t)v57, v18, v19, (uint64_t)v50, v14, v15, v16, v17, v20, v21, v22, v23);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
        sub_1BA4A2E80((uint64_t)&v58, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        sub_1BA4A2E80((uint64_t)&v65, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        v25 = v74;
        if ((v24 & 1) != 0)
        {
          v26 = (unint64_t)(v6 + 80);
          if (v74 >= v6 && (unint64_t)v74 < v26 && v74 == v6)
            v25 = v6;
          else
            memmove(v74, v6, 0x50uLL);
        }
        else
        {
          v27 = v73 + 80;
          if (v74 != v73 || v74 >= v27)
            memmove(v74, v73, 0x50uLL);
          v73 = v27;
          v26 = (unint64_t)v6;
        }
        v74 = v25 + 80;
        v5 = v73;
        if ((unint64_t)v73 >= v46)
          break;
        v6 = (char *)v26;
      }
      while (v26 < a3);
    }
LABEL_42:
    sub_1BACAB3A0((void **)&v74, (const void **)&v73, &v72);
    return 1;
  }
LABEL_43:

  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB6C9630(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  char v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD v28[5];
  char v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[32];
  uint64_t v33;
  char v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v25 = result;
  v45 = a3;
  if (a3 != a2)
  {
    v4 = 80 * v45;
    v27 = a4;
LABEL_5:
    v5 = v25;
    v26 = v4;
    while (1)
    {
      v6 = *a4 + v4;
      sub_1BA4C2DD8(v6, (uint64_t)&v40, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      sub_1BA4C2DD8(v6 - 80, (uint64_t)&v33, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      v7 = v40;
      v8 = BYTE8(v40);
      v28[4] = v40;
      v29 = BYTE8(v40);
      v9 = v41;
      v10 = v42;
      v30 = v41;
      v31 = v42;
      sub_1BA747A10((uint64_t)&v43, (uint64_t)v32);
      v11 = v33;
      v12 = v34;
      v13 = v35;
      v14 = v36;
      v15 = v37;
      v16 = v38;
      sub_1BA747A10((uint64_t)&v39, (uint64_t)v28);
      v17 = sub_1BB6C8BD8(v7, v8, (uint64_t)v32, v11, v12, (uint64_t)v28, *(CGFloat *)&v9, *((CGFloat *)&v9 + 1), *(double *)&v10, *((CGFloat *)&v10 + 1), v13, v14, v15, v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      sub_1BA4A2E80((uint64_t)&v33, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      result = sub_1BA4A2E80((uint64_t)&v40, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      a4 = v27;
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v4 = v26 + 80;
        if (++v45 == a2)
          return result;
        goto LABEL_5;
      }
      if (!*v27)
        break;
      v18 = (__int128 *)(*v27 + v4);
      v41 = v18[1];
      v42 = v18[2];
      v43 = v18[3];
      v44 = v18[4];
      v40 = *v18;
      v19 = *(v18 - 2);
      v18[2] = *(v18 - 3);
      v18[3] = v19;
      v18[4] = *(v18 - 1);
      v20 = *(v18 - 4);
      *v18 = *(v18 - 5);
      v18[1] = v20;
      *(v18 - 5) = v40;
      v21 = v41;
      v22 = v42;
      v23 = v44;
      *(v18 - 2) = v43;
      *(v18 - 1) = v23;
      *(v18 - 4) = v21;
      *(v18 - 3) = v22;
      v4 -= 80;
      if (v45 == ++v5)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

void sub_1BB6C9894(_QWORD *a1, void *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void (*v12)();
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CGPoint v17;
  __int128 v18;
  char *v19;
  uint64_t v20;
  char v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  CGPoint v32;
  __int128 v33;
  char *v34;
  uint64_t v35;
  char v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  int v41;
  uint64_t v42;
  _OWORD *v43;
  uint64_t v44;
  __int128 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)();
  char v52;
  CGPoint v53;
  CGFloat v54;
  CGFloat v55;
  char *v56;
  uint64_t v57;
  char v58;
  double v59;
  double y;
  CGFloat v61;
  CGFloat v62;
  double MinX;
  CGFloat x;
  double v65;
  BOOL v66;
  CGFloat v67;
  CGFloat v68;
  double v69;
  double v70;
  double MinY;
  double v72;
  CGFloat v73;
  double MaxY;
  double v75;
  __int128 *v76;
  __int128 v77;
  __int128 v78;
  CGPoint v79;
  __int128 v80;
  __int128 v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  char v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  BOOL v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  unint64_t v134;
  id v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  unint64_t v145;
  id v146;
  char *v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *__dst;
  char *v155;
  char *v156;
  void *v157;
  CGFloat rect_8;
  CGFloat rect_16;
  CGFloat rect_24;
  double MaxX;
  double v162;
  double v163;
  double v164;
  char *v165;
  uint64_t v166;
  _QWORD *v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  void *__srcb;
  int __src;
  char *__srca;
  char *__srcc;
  uint64_t v176;
  _QWORD v177[5];
  char v178;
  CGPoint v179;
  CGFloat v180;
  CGFloat v181;
  _OWORD v182[2];
  uint64_t v183;
  char v184;
  CGPoint v185;
  CGFloat v186;
  CGFloat v187;
  _OWORD v188[2];
  uint64_t v189;
  char v190;
  CGPoint v191;
  CGFloat v192;
  CGFloat v193;
  _OWORD v194[2];
  uint64_t v195;
  char v196;
  double v197;
  double v198;
  CGFloat v199;
  CGFloat v200;
  _OWORD v201[2];
  uint64_t v202;
  char v203;
  CGPoint v204;
  CGFloat v205;
  CGFloat v206;
  _BYTE v207[32];
  uint64_t v208;
  char v209;
  double v210;
  double v211;
  double v212;
  double v213;
  _BYTE v214[32];
  uint64_t v215;
  char v216;
  CGPoint v217;
  __int128 v218;
  uint64_t v219;
  uint64_t v220;
  char v221;
  double v222;
  double v223;
  double v224;
  double v225;
  _BYTE v226[32];
  __int128 v227;
  CGPoint v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  char *v232;
  CGRect v233;
  CGRect v234;
  CGRect v235;
  CGRect v236;
  CGRect v237;
  CGRect v238;
  CGRect v239;
  CGRect v240;

  v3 = a1;
  v4 = a1[1];
  v5 = a2;
  v6 = sub_1BB8741F4();
  if (v6 >= v4)
  {
    if (v4 < 0)
      goto LABEL_160;
    if (v4)
      sub_1BB6C9630(0, v4, 1, v3);

    goto LABEL_137;
  }
  if (v4 >= 0)
    v7 = v4;
  else
    v7 = v4 + 1;
  if (v4 < -1)
    goto LABEL_168;
  v150 = v6;
  v157 = v5;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v149 = MEMORY[0x1E0DEE9D8];
    if (v4 == 1)
      goto LABEL_13;
    v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_124:
    if (v13 >= 2)
    {
      v138 = *v3;
      v176 = *v3;
      do
      {
        v139 = v13 - 2;
        if (v13 < 2)
          goto LABEL_155;
        if (!v138)
          goto LABEL_167;
        v140 = v10;
        v141 = *(_QWORD *)&v10[16 * v139 + 32];
        v142 = *(_QWORD *)&v10[16 * v13 + 24];
        v143 = *(_QWORD *)&v10[16 * v13 + 16];
        v232 = (char *)(v138 + 80 * v141);
        v144 = (char *)(v138 + 80 * v143);
        v145 = v138 + 80 * v142;
        v146 = v157;
        sub_1BB6C90D4(v232, v144, v145, __dst, v146);
        if (v2)
          goto LABEL_122;

        if (v142 < v141)
          goto LABEL_156;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v140 = sub_1BACAB464((uint64_t)v140);
        if (v139 >= *((_QWORD *)v140 + 2))
          goto LABEL_157;
        v147 = &v140[16 * v139 + 32];
        *(_QWORD *)v147 = v141;
        *((_QWORD *)v147 + 1) = v142;
        v148 = *((_QWORD *)v140 + 2);
        if (v13 > v148)
          goto LABEL_158;
        v10 = v140;
        memmove(&v140[16 * v13 + 16], &v140[16 * v13 + 32], 16 * (v148 - v13));
        *((_QWORD *)v140 + 2) = v148 - 1;
        v13 = v148 - 1;
        v138 = v176;
      }
      while (v148 > 2);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v149 + 16) = 0;
    v5 = v157;
LABEL_136:

    swift_bridgeObjectRelease();
LABEL_137:

    return;
  }
  v8 = v7 >> 1;
  sub_1BAC87F60();
  v9 = sub_1BB872E74();
  *(_QWORD *)(v9 + 16) = v8;
  v149 = v9;
  __dst = (char *)(v9 + 32);
LABEL_13:
  v11 = 0;
  v232 = (char *)&v219;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v12 = sub_1BAC87F60;
  v167 = v3;
  while (1)
  {
    v14 = (uint64_t)v11;
    v15 = (uint64_t)(v11 + 1);
    v152 = (uint64_t)v11;
    if ((uint64_t)(v11 + 1) >= v4)
      goto LABEL_33;
    v16 = *v3;
    sub_1BA4C2DD8(*v3 + 80 * v15, (uint64_t)&v227, (uint64_t (*)(_QWORD))v12);
    sub_1BA4C2DD8(v16 + 80 * v14, (uint64_t)&v220, (uint64_t (*)(_QWORD))v12);
    __srcb = (void *)v227;
    v168 = BYTE8(v227);
    v215 = v227;
    v216 = BYTE8(v227);
    v17 = v228;
    v18 = v229;
    v217 = v228;
    v218 = v229;
    v19 = v232;
    sub_1BA747A10((uint64_t)&v230, (uint64_t)v232);
    v20 = v220;
    v21 = v221;
    v208 = v220;
    v209 = v221;
    v22 = v222;
    v23 = v223;
    v24 = v224;
    v25 = v225;
    v210 = v222;
    v211 = v223;
    v212 = v224;
    v213 = v225;
    sub_1BA747A10((uint64_t)v226, (uint64_t)v214);
    v26 = v20;
    v14 = v152;
    __src = sub_1BB6C8BD8((uint64_t)__srcb, v168, (uint64_t)v19, v26, v21, (uint64_t)v214, v17.x, v17.y, *(double *)&v18, *((CGFloat *)&v18 + 1), v22, v23, v24, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v214);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    sub_1BA4A2E80((uint64_t)&v220, (uint64_t (*)(_QWORD))v12);
    sub_1BA4A2E80((uint64_t)&v227, (uint64_t (*)(_QWORD))v12);
    v15 = v152 + 2;
    v169 = v16;
    if (v152 + 2 >= v4)
    {
LABEL_22:
      if ((__src & 1) == 0)
        goto LABEL_33;
LABEL_25:
      if (v15 < v14)
        goto LABEL_161;
      if (v14 < v15)
      {
        v42 = v14;
        v43 = (_OWORD *)(v169 + 80 * v15 - 80);
        v44 = v169;
        v45 = (__int128 *)(v169 + 80 * v14);
        v46 = v15;
        do
        {
          if (v42 != --v15)
          {
            if (!v44)
              goto LABEL_166;
            v228 = (CGPoint)v45[1];
            v229 = v45[2];
            v230 = v45[3];
            v231 = v45[4];
            v227 = *v45;
            memmove(v45, v43, 0x50uLL);
            v43[1] = v228;
            v43[2] = v229;
            v43[3] = v230;
            v43[4] = v231;
            *v43 = v227;
            v44 = v169;
          }
          ++v42;
          v43 -= 5;
          v45 += 5;
        }
        while (v42 < v15);
        v15 = v46;
        v14 = v152;
      }
      goto LABEL_33;
    }
    v155 = v10;
    v27 = v16 + 80 * v152 + 80;
    v170 = v4;
    while (1)
    {
      v28 = v15;
      v29 = v27 + 80;
      sub_1BA4C2DD8(v27 + 80, (uint64_t)&v227, (uint64_t (*)(_QWORD))v12);
      sub_1BA4C2DD8(v27, (uint64_t)&v220, (uint64_t (*)(_QWORD))v12);
      v30 = v227;
      v31 = BYTE8(v227);
      v215 = v227;
      v216 = BYTE8(v227);
      v32 = v228;
      v33 = v229;
      v217 = v228;
      v218 = v229;
      v34 = v232;
      sub_1BA747A10((uint64_t)&v230, (uint64_t)v232);
      v35 = v220;
      v36 = v221;
      v208 = v220;
      v209 = v221;
      v37 = v222;
      v38 = v223;
      v39 = v224;
      v40 = v225;
      v210 = v222;
      v211 = v223;
      v212 = v224;
      v213 = v225;
      sub_1BA747A10((uint64_t)v226, (uint64_t)v214);
      v41 = sub_1BB6C8BD8(v30, v31, (uint64_t)v34, v35, v36, (uint64_t)v214, v32.x, v32.y, *(double *)&v33, *((CGFloat *)&v33 + 1), v37, v38, v39, v40);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v214);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      sub_1BA4A2E80((uint64_t)&v220, (uint64_t (*)(_QWORD))v12);
      sub_1BA4A2E80((uint64_t)&v227, (uint64_t (*)(_QWORD))v12);
      if (((__src ^ v41) & 1) != 0)
        break;
      v15 = v28 + 1;
      v27 = v29;
      v4 = v170;
      if (v170 == v28 + 1)
      {
        v15 = v170;
        v10 = v155;
        v3 = v167;
        v14 = v152;
        goto LABEL_22;
      }
    }
    v10 = v155;
    v15 = v28;
    v3 = v167;
    v14 = v152;
    v4 = v170;
    if ((__src & 1) != 0)
      goto LABEL_25;
LABEL_33:
    if (v15 >= v4)
      goto LABEL_74;
    if (__OFSUB__(v15, v14))
      goto LABEL_159;
    if (v15 - v14 >= v150)
      goto LABEL_74;
    if (__OFADD__(v14, v150))
      goto LABEL_162;
    v47 = v14 + v150 >= v4 ? v4 : v14 + v150;
    if (v47 < v14)
      break;
    if (v15 == v47)
      goto LABEL_74;
    v48 = 80 * v15;
    v151 = (char *)v47;
    while (2)
    {
      v165 = (char *)v15;
      v153 = v48;
      while (1)
      {
        __srca = (char *)v14;
        v49 = *v3 + v48;
        sub_1BA4C2DD8(v49, (uint64_t)&v227, (uint64_t (*)(_QWORD))v12);
        sub_1BA4C2DD8(v49 - 80, (uint64_t)&v220, (uint64_t (*)(_QWORD))v12);
        v50 = v227;
        v51 = v12;
        v52 = BYTE8(v227);
        v215 = v227;
        v216 = BYTE8(v227);
        v53 = v228;
        v54 = *((double *)&v229 + 1);
        v55 = *(double *)&v229;
        v217 = v228;
        v218 = v229;
        v56 = v232;
        sub_1BA747A10((uint64_t)&v230, (uint64_t)v232);
        v57 = v220;
        v58 = v221;
        v208 = v220;
        v209 = v221;
        v59 = v222;
        y = v223;
        v61 = v224;
        v62 = v225;
        v210 = v222;
        v211 = v223;
        v212 = v224;
        v213 = v225;
        sub_1BA747A10((uint64_t)v226, (uint64_t)v214);
        v202 = v50;
        v203 = v52;
        v204 = v53;
        v205 = v55;
        v206 = v54;
        sub_1BA747A10((uint64_t)v56, (uint64_t)v207);
        v195 = v57;
        v196 = v58;
        v197 = v59;
        v198 = y;
        v199 = v61;
        v200 = v62;
        sub_1BA747A10((uint64_t)v214, (uint64_t)v201);
        v189 = v50;
        v190 = v52;
        v191 = v53;
        v192 = v55;
        v193 = v54;
        sub_1BA747A10((uint64_t)v207, (uint64_t)v194);
        if ((v52 & 1) != 0)
          break;
        sub_1BA4A2E80((uint64_t)&v202, (uint64_t (*)(_QWORD))v51);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v194);
        v189 = v57;
        v190 = v58;
        v191.x = v59;
        v191.y = y;
        v192 = v61;
        v193 = v62;
        sub_1BA76EAE0(v201, v194);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v194);
        v12 = v51;
        if ((v58 & 1) == 0)
        {
          if (v50 == v57)
          {
            if (v53.y == y)
              v66 = v53.x <= v59;
            else
              v66 = v53.y < y;
          }
          else
          {
            v66 = v50 < v57;
          }
          v3 = v167;
          goto LABEL_69;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v214);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v232);
        sub_1BA4A2E80((uint64_t)&v220, (uint64_t (*)(_QWORD))v51);
        sub_1BA4A2E80((uint64_t)&v227, (uint64_t (*)(_QWORD))v51);
        v3 = v167;
LABEL_70:
        if (!*v3)
          goto LABEL_164;
        v76 = (__int128 *)(*v3 + v48);
        v228 = (CGPoint)v76[1];
        v229 = v76[2];
        v230 = v76[3];
        v231 = v76[4];
        v227 = *v76;
        v77 = *(v76 - 2);
        v76[2] = *(v76 - 3);
        v76[3] = v77;
        v76[4] = *(v76 - 1);
        v78 = *(v76 - 4);
        *v76 = *(v76 - 5);
        v76[1] = v78;
        *(v76 - 5) = v227;
        v79 = v228;
        v80 = v229;
        v81 = v231;
        *(v76 - 2) = v230;
        *(v76 - 1) = v81;
        *(v76 - 4) = (__int128)v79;
        *(v76 - 3) = v80;
        v48 -= 80;
        v14 = (uint64_t)(__srca + 1);
        if (v165 == __srca + 1)
          goto LABEL_44;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v194);
      if ((v58 & 1) != 0)
      {
        v177[4] = v50;
        v178 = 1;
        v179 = v53;
        v180 = v55;
        v181 = v54;
        sub_1BA747A10((uint64_t)v207, (uint64_t)v182);
        v233.origin = v53;
        v233.size.width = v55;
        v233.size.height = v54;
        MinX = CGRectGetMinX(v233);
        sub_1BA747A10((uint64_t)v201, (uint64_t)v177);
        v234.origin.x = v59;
        v234.origin.y = y;
        v234.size.width = v61;
        v234.size.height = v62;
        x = v59;
        v65 = CGRectGetMinX(v234);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v177);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v182);
        v66 = MinX < v65;
        v163 = y;
        v164 = x;
        if (MinX < v65)
        {
          sub_1BA747A10((uint64_t)v207, (uint64_t)v182);
          v189 = v50;
          v190 = 1;
          v68 = x;
          x = v53.x;
          v191 = v53;
          v192 = v55;
          v193 = v54;
          sub_1BA76EAE0(v182, v194);
          sub_1BA747A10((uint64_t)v201, (uint64_t)v182);
          v183 = v57;
          v184 = 1;
          v185.x = v68;
          v185.y = y;
          v186 = v61;
          v187 = v62;
          sub_1BA76EAE0(v182, v188);
          v67 = y;
          y = v53.y;
        }
        else
        {
          sub_1BA747A10((uint64_t)v201, (uint64_t)v182);
          v189 = v57;
          v190 = 1;
          v191.x = x;
          v191.y = y;
          v192 = v61;
          v193 = v62;
          sub_1BA76EAE0(v182, v194);
          sub_1BA747A10((uint64_t)v207, (uint64_t)v182);
          v183 = v50;
          v184 = 1;
          v67 = v53.y;
          v68 = v53.x;
          v185 = v53;
          v186 = v55;
          v187 = v54;
          sub_1BA76EAE0(v182, v188);
          v69 = v61;
          v70 = v62;
          v61 = v55;
          v55 = v69;
          v62 = v54;
          v54 = v70;
        }
        v235.origin.x = v68;
        v235.origin.y = v67;
        v235.size.width = v61;
        v235.size.height = v62;
        v162 = CGRectGetMinX(v235);
        v236.origin.x = x;
        v236.origin.y = y;
        v236.size.width = v55;
        v236.size.height = v54;
        rect_24 = v55;
        MaxX = CGRectGetMaxX(v236);
        v237.origin.x = x;
        rect_8 = y;
        rect_16 = v54;
        v237.origin.y = y;
        v237.size.width = v55;
        v237.size.height = v54;
        MinY = CGRectGetMinY(v237);
        v238.origin.x = v68;
        v238.origin.y = v67;
        v238.size.width = v61;
        v238.size.height = v62;
        v72 = CGRectGetMinY(v238);
        v12 = sub_1BAC87F60;
        v3 = v167;
        v73 = x;
        if (qword_1ED3CEE40 != -1)
          swift_once();
        if (MinY - v72 >= *(double *)&qword_1ED3CEE30 || MinY - v72 >= v162 - MaxX)
        {
          sub_1BA4A2E80((uint64_t)&v183, (uint64_t (*)(_QWORD))sub_1BAC87F60);
          sub_1BA4A2E80((uint64_t)&v189, (uint64_t (*)(_QWORD))sub_1BAC87F60);
          sub_1BA4A2E80((uint64_t)&v195, (uint64_t (*)(_QWORD))sub_1BAC87F60);
          sub_1BA4A2E80((uint64_t)&v202, (uint64_t (*)(_QWORD))sub_1BAC87F60);
        }
        else
        {
          v239.origin.x = v68;
          v239.origin.y = v67;
          v239.size.width = v61;
          v239.size.height = v62;
          MaxY = CGRectGetMaxY(v239);
          v240.origin.x = v73;
          v240.origin.y = rect_8;
          v240.size.height = rect_16;
          v240.size.width = rect_24;
          v75 = CGRectGetMinY(v240);
          sub_1BA4A2E80((uint64_t)&v183, (uint64_t (*)(_QWORD))sub_1BAC87F60);
          sub_1BA4A2E80((uint64_t)&v189, (uint64_t (*)(_QWORD))sub_1BAC87F60);
          sub_1BA4A2E80((uint64_t)&v195, (uint64_t (*)(_QWORD))sub_1BAC87F60);
          sub_1BA4A2E80((uint64_t)&v202, (uint64_t (*)(_QWORD))sub_1BAC87F60);
          if (v75 < MaxY)
            goto LABEL_69;
        }
        if (v53.y == v163)
          v66 = v53.x <= v164;
        else
          v66 = v53.y < v163;
LABEL_69:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v214);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v232);
        sub_1BA4A2E80((uint64_t)&v220, (uint64_t (*)(_QWORD))v12);
        sub_1BA4A2E80((uint64_t)&v227, (uint64_t (*)(_QWORD))v12);
        if (!v66)
          goto LABEL_44;
        goto LABEL_70;
      }
      v12 = sub_1BAC87F60;
      sub_1BA4A2E80((uint64_t)&v195, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      sub_1BA4A2E80((uint64_t)&v202, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v214);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v232);
      sub_1BA4A2E80((uint64_t)&v220, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      sub_1BA4A2E80((uint64_t)&v227, (uint64_t (*)(_QWORD))sub_1BAC87F60);
      v3 = v167;
LABEL_44:
      v15 = (uint64_t)(v165 + 1);
      v14 = v152;
      v48 = v153 + 80;
      if (v165 + 1 != v151)
        continue;
      break;
    }
    v15 = (uint64_t)v151;
LABEL_74:
    if (v15 < v14)
      goto LABEL_154;
    v166 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BACAA368(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v83 = *((_QWORD *)v10 + 2);
    v82 = *((_QWORD *)v10 + 3);
    v13 = v83 + 1;
    if (v83 >= v82 >> 1)
      v10 = sub_1BACAA368((char *)(v82 > 1), v83 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v13;
    v84 = v10 + 32;
    v85 = &v10[16 * v83 + 32];
    *(_QWORD *)v85 = v152;
    *((_QWORD *)v85 + 1) = v166;
    if (v83)
    {
      v156 = v10;
      v171 = v10 + 32;
      while (1)
      {
        v86 = v13 - 1;
        if (v13 >= 4)
        {
          v91 = &v84[16 * v13];
          v92 = *((_QWORD *)v91 - 8);
          v93 = *((_QWORD *)v91 - 7);
          v97 = __OFSUB__(v93, v92);
          v94 = v93 - v92;
          if (v97)
            goto LABEL_143;
          v96 = *((_QWORD *)v91 - 6);
          v95 = *((_QWORD *)v91 - 5);
          v97 = __OFSUB__(v95, v96);
          v89 = v95 - v96;
          v90 = v97;
          if (v97)
            goto LABEL_144;
          v98 = v13 - 2;
          v99 = &v84[16 * v13 - 32];
          v101 = *(_QWORD *)v99;
          v100 = *((_QWORD *)v99 + 1);
          v97 = __OFSUB__(v100, v101);
          v102 = v100 - v101;
          if (v97)
            goto LABEL_146;
          v97 = __OFADD__(v89, v102);
          v103 = v89 + v102;
          if (v97)
            goto LABEL_149;
          if (v103 >= v94)
          {
            v121 = &v84[16 * v86];
            v123 = *(_QWORD *)v121;
            v122 = *((_QWORD *)v121 + 1);
            v97 = __OFSUB__(v122, v123);
            v124 = v122 - v123;
            if (v97)
              goto LABEL_153;
            v114 = v89 < v124;
            goto LABEL_112;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v115 = *((_QWORD *)v10 + 4);
            v116 = *((_QWORD *)v10 + 5);
            v97 = __OFSUB__(v116, v115);
            v108 = v116 - v115;
            v109 = v97;
            goto LABEL_106;
          }
          v88 = *((_QWORD *)v10 + 4);
          v87 = *((_QWORD *)v10 + 5);
          v97 = __OFSUB__(v87, v88);
          v89 = v87 - v88;
          v90 = v97;
        }
        if ((v90 & 1) != 0)
          goto LABEL_145;
        v98 = v13 - 2;
        v104 = &v84[16 * v13 - 32];
        v106 = *(_QWORD *)v104;
        v105 = *((_QWORD *)v104 + 1);
        v107 = __OFSUB__(v105, v106);
        v108 = v105 - v106;
        v109 = v107;
        if (v107)
          goto LABEL_148;
        v110 = &v84[16 * v86];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v97 = __OFSUB__(v111, v112);
        v113 = v111 - v112;
        if (v97)
          goto LABEL_151;
        if (__OFADD__(v108, v113))
          goto LABEL_152;
        if (v108 + v113 >= v89)
        {
          v114 = v89 < v113;
LABEL_112:
          if (v114)
            v86 = v98;
          goto LABEL_114;
        }
LABEL_106:
        if ((v109 & 1) != 0)
          goto LABEL_147;
        v117 = &v84[16 * v86];
        v119 = *(_QWORD *)v117;
        v118 = *((_QWORD *)v117 + 1);
        v97 = __OFSUB__(v118, v119);
        v120 = v118 - v119;
        if (v97)
          goto LABEL_150;
        if (v120 < v108)
          goto LABEL_15;
LABEL_114:
        v125 = v86 - 1;
        if (v86 - 1 >= v13)
        {
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
          goto LABEL_163;
        }
        v126 = *v167;
        if (!*v167)
          goto LABEL_165;
        v127 = v84;
        v128 = &v84[16 * v125];
        v129 = *(_QWORD *)v128;
        v130 = v86;
        v131 = &v127[16 * v86];
        v132 = *((_QWORD *)v131 + 1);
        __srcc = (char *)(v126 + 80 * *(_QWORD *)v128);
        v133 = (char *)(v126 + 80 * *(_QWORD *)v131);
        v134 = v126 + 80 * v132;
        v135 = v157;
        sub_1BB6C90D4(__srcc, v133, v134, __dst, v135);
        if (v2)
        {
LABEL_122:
          swift_bridgeObjectRelease();
          v5 = v157;

          *(_QWORD *)(v149 + 16) = 0;
          goto LABEL_136;
        }

        v10 = v156;
        if (v132 < v129)
          goto LABEL_140;
        if (v130 > *((_QWORD *)v156 + 2))
          goto LABEL_141;
        v136 = v130;
        *(_QWORD *)v128 = v129;
        v84 = v171;
        *(_QWORD *)&v171[16 * v125 + 8] = v132;
        v137 = *((_QWORD *)v156 + 2);
        if (v136 >= v137)
          goto LABEL_142;
        v13 = v137 - 1;
        memmove(v131, v131 + 16, 16 * (v137 - 1 - v136));
        *((_QWORD *)v156 + 2) = v137 - 1;
        v3 = v167;
        v12 = sub_1BAC87F60;
        if (v137 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v4 = v3[1];
    v11 = (char *)v166;
    if (v166 >= v4)
      goto LABEL_124;
  }
LABEL_163:
  __break(1u);
LABEL_164:

  __break(1u);
LABEL_165:

  __break(1u);
LABEL_166:

  __break(1u);
LABEL_167:
  v5 = v157;

  __break(1u);
LABEL_168:

  sub_1BB873EA0();
  __break(1u);
}

void sub_1BB6CA8E0(_QWORD **a1, void *a2)
{
  _QWORD *v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD v7[2];

  v3 = *a1;
  v4 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BACABA3C(v3);
  v5 = v3[2];
  v7[0] = v3 + 4;
  v7[1] = v5;
  v6 = v4;
  sub_1BB6C9894(v7, v6);

  *a1 = v3;
}

void sub_1BB6CA974()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_identifier];
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillShow];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillHide];
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer] = 0;
  v5 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_feedItem];
  v6 = type metadata accessor for FeedItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_token] = 0;
  v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_isDirty] = 0;
  v8 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers] = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers] = v7;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_loadAwareObservers] = v7;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_layoutObservers] = v7;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers] = v7;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewKey] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewsByName] = v8;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture] = 0;

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB6CAAE8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB6CAB0C(uint64_t a1)
{
  uint64_t v1;

  sub_1BB6C2CC8(a1, v1);
}

uint64_t sub_1BB6CAB18()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB6CAB3C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB6CAB64()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1BB6CAB8C()
{
  uint64_t v0;

  sub_1BB6C3AB8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BB6CABA8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2CA8E0)
  {
    type metadata accessor for FormatShareAttributionData();
    type metadata accessor for FormatShareAttributionNodeLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2CA8E0);
  }
}

uint64_t sub_1BB6CAC18()
{
  uint64_t v0;

  return sub_1BB6C3768(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB6CAC24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6CAC48()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB6CAC84()
{
  uint64_t *v0;

  sub_1BB6C35CC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BB6CAC90()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FormatLatestCompatibleFileReference.init(latestCompatible:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v9 = type metadata accessor for FormatFileReference(0, a2, a3, a4);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a5, a1, v9);
  sub_1BB874218();
  swift_allocObject();
  v11 = sub_1BB872E2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
  v13 = sub_1BA69C794(v11);
  FormatFileReferenceCollection.init(references:)(v13, &v17);
  v14 = v17;
  result = type metadata accessor for FormatLatestCompatibleFileReference(0, a2, a3, v15);
  *(_QWORD *)(a5 + *(int *)(result + 36)) = v14;
  return result;
}

uint64_t static FormatLatestCompatibleFileReference.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;

  if ((static FormatFileReference.== infix(_:_:)(a1, a2, a3, a4) & 1) != 0)
  {
    v9 = *(int *)(type metadata accessor for FormatLatestCompatibleFileReference(0, a3, a4, v8) + 36);
    v10 = *(_QWORD *)(a1 + v9);
    v13 = *(_QWORD *)(a2 + v9);
    v14 = v10;
    v11 = static FormatFileReferenceCollection.== infix(_:_:)((uint64_t)&v14, (uint64_t)&v13, a3, a4);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t FormatLatestCompatibleFileReference.latestCompatible.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = type metadata accessor for FormatFileReference(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v3, v5);
}

uint64_t sub_1BB6CAEF0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = type metadata accessor for FormatFileReference(0, a1, a2, a3);
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReference<A>, v5);
  result = sub_1BB874350();
  *a4 = 0;
  a4[1] = 0xE000000000000000;
  return result;
}

uint64_t FormatLatestCompatibleFileReference.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for FormatFileReferenceCollection(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  return FormatFileReferenceCollection.encode(to:)(a1, v5);
}

uint64_t sub_1BB6CAFC8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FormatLatestCompatibleFileReference.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_1BB6CAFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FormatLatestCompatibleFileReference.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1BB6CAFE8@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB6CAEF0(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_1BB6CB004(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLatestCompatibleFileReference<A>);
  a1[2] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLatestCompatibleFileReference<A>, a2);
  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLatestCompatibleFileReference<A>, a2);
  a1[3] = result;
  return result;
}

_QWORD *sub_1BB6CB05C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v27;
  _QWORD *v28;
  unsigned int v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  void (*v38)(unint64_t, unint64_t, uint64_t);
  unint64_t v39;
  unint64_t v40;
  void *v41;
  const void *v42;
  _QWORD *v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  void (*v47)(unint64_t, unint64_t, uint64_t);
  unint64_t v48;
  unint64_t v49;
  void *v50;
  const void *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  char v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  size_t __n;
  uint64_t v67;
  size_t v68;
  unint64_t v69;
  _QWORD *v70;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_1BB86EB84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 | 7;
  v13 = (v11 | 7) + v8;
  v14 = v11 + 16;
  v15 = *(_QWORD *)(v10 + 64);
  v16 = v15 + v11;
  if (*(_DWORD *)(v10 + 84))
    v17 = *(_QWORD *)(v10 + 64);
  else
    v17 = v15 + 1;
  v18 = ((((((((v17 + 7 + ((v15 + v11 + ((v15 + v11 + ((v11 + 16) & ~v11)) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v19 = v18 + (v13 & ~(v11 | 7));
  v20 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v21 = *(_QWORD *)(v20 + 64) + v12;
  v22 = v18 + (v21 & ~v12);
  if (v22 <= v19)
    v23 = v19;
  else
    v23 = v22;
  v24 = v12 | (*(_BYTE *)(v20 + 80) | *(_BYTE *)(v7 + 80));
  if (v24 != 7
    || ((*(_DWORD *)(v20 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || v23 + 16 > 0x18)
  {
    v27 = *a2;
    *a1 = *a2;
    v28 = (_QWORD *)(v27 + ((v24 + 16) & ~v24));
    swift_retain();
  }
  else
  {
    v67 = v9;
    v70 = a1;
    v29 = *((unsigned __int8 *)a2 + v23);
    if ((v23 & 0xFFFFFFF8) != 0 && v29 >= 2)
      v29 = *(_DWORD *)a2 + 2;
    __n = v17;
    v68 = v17 + 7;
    v69 = v23;
    v31 = ~v12;
    v32 = ~v11;
    if (v29 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *))(v20 + 16))(v70, a2);
      v33 = (_QWORD *)(((unint64_t)v70 + v21) & v31);
      v34 = a2;
      v35 = (_QWORD *)(((unint64_t)a2 + v21) & v31);
      *v33 = *v35;
      v33[1] = v35[1];
      v36 = ((unint64_t)v33 + v14) & v32;
      v37 = ((unint64_t)v35 + v14) & v32;
      v38 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
      swift_bridgeObjectRetain();
      v38(v36, v37, v67);
      v39 = (v16 + v36) & v32;
      v40 = (v16 + v37) & v32;
      v38(v39, v40, v67);
      v41 = (void *)((v16 + v39) & v32);
      v42 = (const void *)((v16 + v40) & v32);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v42, 1, v67))
      {
        memcpy(v41, v42, __n);
      }
      else
      {
        v38((unint64_t)v41, (unint64_t)v42, v67);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v67);
      }
      v52 = (_QWORD *)(((unint64_t)v41 + v68) & 0xFFFFFFFFFFFFF8);
      v53 = (_QWORD *)(((unint64_t)v42 + v68) & 0xFFFFFFFFFFFFFFF8);
      *v52 = *v53;
      v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
      v55 = (_QWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v54 = *v55;
      v56 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFF8);
      v57 = (_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v56 = *v57;
      *(_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFF8);
      v58 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v70, a2, v6);
      v43 = (_QWORD *)(((unint64_t)v70 + v13) & v31);
      v34 = a2;
      v44 = (_QWORD *)(((unint64_t)a2 + v13) & v31);
      *v43 = *v44;
      v43[1] = v44[1];
      v45 = ((unint64_t)v43 + v14) & v32;
      v46 = ((unint64_t)v44 + v14) & v32;
      v47 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
      swift_bridgeObjectRetain();
      v47(v45, v46, v67);
      v48 = (v16 + v45) & v32;
      v49 = (v16 + v46) & v32;
      v47(v48, v49, v67);
      v50 = (void *)((v16 + v48) & v32);
      v51 = (const void *)((v16 + v49) & v32);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v51, 1, v67))
      {
        memcpy(v50, v51, __n);
      }
      else
      {
        v47((unint64_t)v50, (unint64_t)v51, v67);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v50, 0, 1, v67);
      }
      v58 = 0;
      v59 = (_QWORD *)(((unint64_t)v50 + v68) & 0xFFFFFFFFFFFFF8);
      v60 = (_QWORD *)(((unint64_t)v51 + v68) & 0xFFFFFFFFFFFFFFF8);
      *v59 = *v60;
      v61 = (_QWORD *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8);
      v62 = (_QWORD *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v61 = *v62;
      v63 = (_QWORD *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFF8);
      v64 = (_QWORD *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v63 = *v64;
      *(_QWORD *)(((unint64_t)v63 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFF8);
    }
    v28 = v70;
    *((_BYTE *)v70 + v69) = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(_QWORD *)(((unint64_t)v70 + v69 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v34 + v69 + 8) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v28;
}

_DWORD *sub_1BB6CB498(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, uint64_t);
  size_t v29;
  size_t v30;
  unsigned int v31;
  BOOL v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(unint64_t, unint64_t, uint64_t);
  unint64_t v38;
  unint64_t v39;
  void *v40;
  const void *v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  void (*v46)(unint64_t, unint64_t, uint64_t);
  unint64_t v47;
  unint64_t v48;
  void *v49;
  const void *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v73;
  size_t __n;
  uint64_t v75;
  unsigned int (*v76)(size_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _DWORD *v82;
  size_t v83;
  unint64_t v84;

  v4 = a2;
  if (a1 != a2)
  {
    v6 = sub_1BB86C67C();
    v79 = *(_QWORD *)(v6 - 8);
    v80 = v6;
    v7 = *(_QWORD *)(v79 + 64);
    v8 = sub_1BB86EB84();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = v10 | 7;
    v78 = (v10 | 7) + v7;
    v12 = v10 + 16;
    v13 = *(_QWORD *)(v9 + 64);
    v14 = v13 + v10;
    v15 = (v13 + v10 + ((v13 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
    if (!*(_DWORD *)(v9 + 84))
      ++v13;
    __n = v13;
    v83 = v13 + 7;
    v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    v17 = v16 + (v78 & ~(v10 | 7));
    v81 = a3;
    v18 = *(_QWORD *)(a3 + 16);
    v75 = *(_QWORD *)(v18 - 8);
    v77 = *(_QWORD *)(v75 + 64) + v11;
    v19 = v16 + (v77 & ~v11);
    if (v19 <= v17)
      v19 = v17;
    v20 = *((unsigned __int8 *)a1 + v19);
    v84 = v19;
    v21 = v19 & 0xFFFFFFF8;
    v22 = v20 < 2 || v21 == 0;
    if (!v22)
      v20 = *a1 + 2;
    v82 = v4;
    v23 = ~v11;
    v24 = ~v10;
    v73 = v18;
    if (v20 == 1)
    {
      (*(void (**)(_DWORD *))(v75 + 8))(a1);
      v25 = v77;
    }
    else
    {
      (*(void (**)(_DWORD *, uint64_t))(v79 + 8))(a1, v80);
      v25 = v78;
    }
    v26 = ((unint64_t)a1 + v25) & v23;
    swift_bridgeObjectRelease();
    v27 = (v12 + v26) & v24;
    v28 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
    v28(v27, v8);
    v29 = (v14 + v27) & v24;
    v28(v29, v8);
    v30 = (v14 + v29) & v24;
    v76 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v9 + 48);
    if (!v76(v30, 1, v8))
      v28(v30, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v82;
    v31 = *((unsigned __int8 *)v82 + v84);
    if (v21)
      v32 = v31 >= 2;
    else
      v32 = 0;
    if (v32)
      v31 = *v82 + 2;
    if (v31 == 1)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v75 + 16))(a1, v82, v73);
      v33 = (_QWORD *)(((unint64_t)a1 + v77) & v23);
      v34 = (_QWORD *)(((unint64_t)v82 + v77) & v23);
      *v33 = *v34;
      v33[1] = v34[1];
      v35 = ((unint64_t)v33 + v12) & v24;
      v36 = ((unint64_t)v34 + v12) & v24;
      v37 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      v37(v35, v36, v8);
      v38 = (v14 + v35) & v24;
      v39 = (v14 + v36) & v24;
      v37(v38, v39, v8);
      v40 = (void *)((v14 + v38) & v24);
      v41 = (const void *)((v14 + v39) & v24);
      if (v76((size_t)v41, 1, v8))
      {
        memcpy(v40, v41, __n);
      }
      else
      {
        v37((unint64_t)v40, (unint64_t)v41, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v40, 0, 1, v8);
      }
      v51 = (_QWORD *)(((unint64_t)v40 + v83) & 0xFFFFFFFFFFFFF8);
      v52 = (_QWORD *)(((unint64_t)v41 + v83) & 0xFFFFFFFFFFFFFFF8);
      *v51 = *v52;
      v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
      v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v53 = *v54;
      v55 = (_QWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFF8);
      v56 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v55 = *v56;
      *(_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)a1 + v84) = 1;
    }
    else
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v79 + 16))(a1, v82, v80);
      v42 = (_QWORD *)(((unint64_t)a1 + v78) & v23);
      v43 = (_QWORD *)(((unint64_t)v82 + v78) & v23);
      *v42 = *v43;
      v42[1] = v43[1];
      v44 = ((unint64_t)v42 + v12) & v24;
      v45 = ((unint64_t)v43 + v12) & v24;
      v46 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      v46(v44, v45, v8);
      v47 = (v14 + v44) & v24;
      v48 = (v14 + v45) & v24;
      v46(v47, v48, v8);
      v49 = (void *)((v14 + v47) & v24);
      v50 = (const void *)((v14 + v48) & v24);
      if (v76((size_t)v50, 1, v8))
      {
        memcpy(v49, v50, __n);
      }
      else
      {
        v46((unint64_t)v49, (unint64_t)v50, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v49, 0, 1, v8);
      }
      v57 = (_QWORD *)(((unint64_t)v49 + v83) & 0xFFFFFFFFFFFFF8);
      v58 = (_QWORD *)(((unint64_t)v50 + v83) & 0xFFFFFFFFFFFFFFF8);
      *v57 = *v58;
      v59 = (_QWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
      v60 = (_QWORD *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v59 = *v60;
      v61 = (_QWORD *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFF8);
      v62 = (_QWORD *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v61 = *v62;
      *(_QWORD *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)a1 + v84) = 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3 = v81;
  }
  v63 = *(_QWORD *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 64);
  v64 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v65 = *(unsigned __int8 *)(v64 + 80);
  v66 = *(_QWORD *)(v64 + 64);
  v22 = *(_DWORD *)(v64 + 84) == 0;
  v67 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + (v65 | 7)) & ~(v65 | 7);
  v68 = ((v65 | 7) + v63) & ~(v65 | 7);
  v69 = (v66 + v65 + ((v66 + v65 + ((v65 + 16) & ~v65)) & ~v65)) & ~v65;
  if (v22)
    ++v66;
  v70 = ((((((((v66 + v69 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v71 = v70 + v67;
  if (v71 <= v70 + v68)
    v71 = v70 + v68;
  *(_QWORD *)(((unint64_t)a1 + v71 + 8) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v4 + v71 + 8) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB6CBA50(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  unint64_t v30;
  unint64_t v31;
  void (*v32)(unint64_t, unint64_t, uint64_t);
  unint64_t v33;
  unint64_t v34;
  void *v35;
  const void *v36;
  char v37;
  void (*v38)(uint64_t, _DWORD *, uint64_t);
  _OWORD *v39;
  _OWORD *v40;
  unint64_t v41;
  unint64_t v42;
  void (*v43)(unint64_t, unint64_t, uint64_t);
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  size_t __n;
  size_t v54;
  unint64_t v55;
  _DWORD *v57;

  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1BB86EB84();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v10 | 7;
  v12 = (v10 | 7) + v7;
  v13 = v10 + 16;
  v14 = *(_QWORD *)(v9 + 64);
  v15 = v14 + v10;
  v16 = (v14 + v10 + ((v14 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
  if (!*(_DWORD *)(v9 + 84))
    ++v14;
  __n = v14;
  v54 = v14 + 7;
  v17 = ((((((((v14 + 7 + v16) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v18 = v17 + (v12 & ~(v10 | 7));
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v20 = *(_QWORD *)(v19 + 64) + v11;
  v21 = v17 + (v20 & ~v11);
  if (v21 > v18)
    v18 = v21;
  v57 = a2;
  v22 = *((unsigned __int8 *)a2 + v18);
  v55 = v18;
  v23 = v18 & 0xFFFFFFF8;
  if (v22 >= 2 && v23 != 0)
    v22 = *a2 + 2;
  v25 = ~v11;
  v26 = ~v10;
  if (v22 == 1)
  {
    v27 = a1;
    (*(void (**)(uint64_t, _DWORD *))(v19 + 32))(a1, v57);
    v28 = (_OWORD *)((v20 + a1) & v25);
    v29 = (_OWORD *)(((unint64_t)v57 + v20) & v25);
    *v28 = *v29;
    v30 = ((unint64_t)v28 + v13) & v26;
    v31 = ((unint64_t)v29 + v13) & v26;
    v32 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
    v32(v30, v31, v8);
    v33 = (v15 + v30) & v26;
    v34 = (v15 + v31) & v26;
    v32(v33, v34, v8);
    v35 = (void *)((v15 + v33) & v26);
    v36 = (const void *)((v15 + v34) & v26);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v36, 1, v8))
    {
      memcpy(v35, v36, __n);
      v37 = 1;
    }
    else
    {
      v32((unint64_t)v35, (unint64_t)v36, v8);
      v37 = 1;
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v35, 0, 1, v8);
    }
  }
  else
  {
    v38 = *(void (**)(uint64_t, _DWORD *, uint64_t))(v6 + 32);
    v27 = a1;
    v38(a1, v57, v5);
    v39 = (_OWORD *)((v12 + a1) & v25);
    v40 = (_OWORD *)(((unint64_t)v57 + v12) & v25);
    *v39 = *v40;
    v41 = ((unint64_t)v39 + v13) & v26;
    v42 = ((unint64_t)v40 + v13) & v26;
    v43 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
    v43(v41, v42, v8);
    v44 = (v15 + v41) & v26;
    v45 = (v15 + v42) & v26;
    v43(v44, v45, v8);
    v35 = (void *)((v15 + v44) & v26);
    v36 = (const void *)((v15 + v45) & v26);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v36, 1, v8))
    {
      memcpy(v35, v36, __n);
    }
    else
    {
      v43((unint64_t)v35, (unint64_t)v36, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v35, 0, 1, v8);
    }
    v37 = 0;
  }
  v46 = (_QWORD *)(((unint64_t)v35 + v54) & 0xFFFFFFFFFFFFF8);
  v47 = (_QWORD *)(((unint64_t)v36 + v54) & 0xFFFFFFFFFFFFFFF8);
  *v46 = *v47;
  v48 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  v49 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v48 = *v49;
  v50 = (_QWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFF8);
  v51 = (_QWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v50 = *v51;
  *(_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
  *(_BYTE *)(v27 + v55) = v37;
  *(_QWORD *)((v55 + 8 + v27) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v57 + v55 + 8) & 0xFFFFFFFFFFFFF8);
  return v27;
}

_DWORD *sub_1BB6CBDBC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, uint64_t);
  size_t v29;
  size_t v30;
  unsigned int v31;
  BOOL v32;
  _OWORD *v33;
  _OWORD *v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(unint64_t, unint64_t, uint64_t);
  unint64_t v38;
  unint64_t v39;
  void *v40;
  const void *v41;
  _OWORD *v42;
  _OWORD *v43;
  unint64_t v44;
  unint64_t v45;
  void (*v46)(unint64_t, unint64_t, uint64_t);
  unint64_t v47;
  unint64_t v48;
  void *v49;
  const void *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v73;
  size_t __n;
  uint64_t v75;
  unsigned int (*v76)(size_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  size_t v83;
  unint64_t v84;

  if (a1 != a2)
  {
    v6 = sub_1BB86C67C();
    v80 = *(_QWORD *)(v6 - 8);
    v81 = v6;
    v7 = *(_QWORD *)(v80 + 64);
    v8 = sub_1BB86EB84();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = v10 | 7;
    v79 = (v10 | 7) + v7;
    v12 = v10 + 16;
    v13 = *(_QWORD *)(v9 + 64);
    v14 = v13 + v10;
    v15 = (v13 + v10 + ((v13 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
    if (!*(_DWORD *)(v9 + 84))
      ++v13;
    __n = v13;
    v82 = a3;
    v83 = v13 + 7;
    v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    v17 = v16 + (v79 & ~(v10 | 7));
    v18 = *(_QWORD *)(a3 + 16);
    v77 = *(_QWORD *)(v18 - 8);
    v78 = *(_QWORD *)(v77 + 64) + v11;
    v19 = v16 + (v78 & ~v11);
    if (v19 <= v17)
      v19 = v17;
    v20 = *((unsigned __int8 *)a1 + v19);
    v84 = v19;
    v21 = v19 & 0xFFFFFFF8;
    v75 = v21;
    v22 = v20 < 2 || v21 == 0;
    if (!v22)
      v20 = *a1 + 2;
    v23 = ~v11;
    v24 = ~v10;
    v73 = v18;
    if (v20 == 1)
    {
      (*(void (**)(_DWORD *))(v77 + 8))(a1);
      v25 = v78;
    }
    else
    {
      (*(void (**)(_DWORD *, uint64_t))(v80 + 8))(a1, v81);
      v25 = v79;
    }
    v26 = ((unint64_t)a1 + v25) & v23;
    swift_bridgeObjectRelease();
    v27 = (v12 + v26) & v24;
    v28 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
    v28(v27, v8);
    v29 = (v14 + v27) & v24;
    v28(v29, v8);
    v30 = (v14 + v29) & v24;
    v76 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v9 + 48);
    if (!v76(v30, 1, v8))
      v28(v30, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = *((unsigned __int8 *)a2 + v84);
    if (v75)
      v32 = v31 >= 2;
    else
      v32 = 0;
    if (v32)
      v31 = *a2 + 2;
    if (v31 == 1)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v77 + 32))(a1, a2, v73);
      v33 = (_OWORD *)(((unint64_t)a1 + v78) & v23);
      v34 = (_OWORD *)(((unint64_t)a2 + v78) & v23);
      *v33 = *v34;
      v35 = ((unint64_t)v33 + v12) & v24;
      v36 = ((unint64_t)v34 + v12) & v24;
      v37 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
      v37(v35, v36, v8);
      v38 = (v14 + v35) & v24;
      v39 = (v14 + v36) & v24;
      v37(v38, v39, v8);
      v40 = (void *)((v14 + v38) & v24);
      v41 = (const void *)((v14 + v39) & v24);
      if (v76((size_t)v41, 1, v8))
      {
        memcpy(v40, v41, __n);
      }
      else
      {
        v37((unint64_t)v40, (unint64_t)v41, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v40, 0, 1, v8);
      }
      v51 = (_QWORD *)(((unint64_t)v40 + v83) & 0xFFFFFFFFFFFFF8);
      v52 = (_QWORD *)(((unint64_t)v41 + v83) & 0xFFFFFFFFFFFFFFF8);
      *v51 = *v52;
      v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
      v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v53 = *v54;
      v55 = (_QWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFF8);
      v56 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v55 = *v56;
      *(_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)a1 + v84) = 1;
    }
    else
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v80 + 32))(a1, a2, v81);
      v42 = (_OWORD *)(((unint64_t)a1 + v79) & v23);
      v43 = (_OWORD *)(((unint64_t)a2 + v79) & v23);
      *v42 = *v43;
      v44 = ((unint64_t)v42 + v12) & v24;
      v45 = ((unint64_t)v43 + v12) & v24;
      v46 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
      v46(v44, v45, v8);
      v47 = (v14 + v44) & v24;
      v48 = (v14 + v45) & v24;
      v46(v47, v48, v8);
      v49 = (void *)((v14 + v47) & v24);
      v50 = (const void *)((v14 + v48) & v24);
      if (v76((size_t)v50, 1, v8))
      {
        memcpy(v49, v50, __n);
      }
      else
      {
        v46((unint64_t)v49, (unint64_t)v50, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v49, 0, 1, v8);
      }
      v57 = (_QWORD *)(((unint64_t)v49 + v83) & 0xFFFFFFFFFFFFF8);
      v58 = (_QWORD *)(((unint64_t)v50 + v83) & 0xFFFFFFFFFFFFFFF8);
      *v57 = *v58;
      v59 = (_QWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
      v60 = (_QWORD *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v59 = *v60;
      v61 = (_QWORD *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFF8);
      v62 = (_QWORD *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v61 = *v62;
      *(_QWORD *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)a1 + v84) = 0;
    }
    a3 = v82;
  }
  v63 = *(_QWORD *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 64);
  v64 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v65 = *(unsigned __int8 *)(v64 + 80);
  v66 = *(_QWORD *)(v64 + 64);
  v22 = *(_DWORD *)(v64 + 84) == 0;
  v67 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + (v65 | 7)) & ~(v65 | 7);
  v68 = ((v65 | 7) + v63) & ~(v65 | 7);
  v69 = (v66 + v65 + ((v66 + v65 + ((v65 + 16) & ~v65)) & ~v65)) & ~v65;
  if (v22)
    ++v66;
  v70 = ((((((((v66 + v69 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v71 = v70 + v67;
  if (v71 <= v70 + v68)
    v71 = v70 + v68;
  *(_QWORD *)(((unint64_t)a1 + v71 + 8) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v71 + 8) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

id sub_1BB6CC334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a1;
  v4 = *(unsigned __int8 *)(a1 + 64);
  sub_1BB86DD80();
  v5 = sub_1BA761770();
  swift_release();
  if (v4)
    v6 = &unk_1E724D748;
  else
    v6 = (void *)MEMORY[0x1E0DEE9D8];
  v7 = sub_1BA7B69E8((uint64_t)v6, v5);
  swift_bridgeObjectRelease();
  v8 = sub_1BA79E0CC(12, v7);
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = &unk_1E724D770;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_WORD *)(a2 + 40) = 768;
  *(_QWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 56) = v3;
  *(_BYTE *)(a2 + 64) = v8 & 1 | 0x10;
  type metadata accessor for FormatAction();
  swift_storeEnumTagMultiPayload();
  return v3;
}

uint64_t static FormatIssueBinding.Action.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatIssueBinding.Action.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatIssueBinding.Action.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB6CC498()
{
  unint64_t result;

  result = qword_1EF2CA8E8;
  if (!qword_1EF2CA8E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Action, &type metadata for FormatIssueBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1EF2CA8E8);
  }
  return result;
}

unint64_t sub_1BB6CC4DC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6CC500();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6CC500()
{
  unint64_t result;

  result = qword_1EF2CA8F0;
  if (!qword_1EF2CA8F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Action, &type metadata for FormatIssueBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1EF2CA8F0);
  }
  return result;
}

unint64_t sub_1BB6CC544(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE878C4();
  a1[2] = sub_1BAEF5268();
  result = sub_1BB6CC498();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB6CC578(_QWORD *a1)
{
  return FormatIssueBinding.Action.init(from:)(a1);
}

uint64_t sub_1BB6CC58C(_QWORD *a1)
{
  return FormatIssueBinding.Action.encode(to:)(a1);
}

uint64_t _s6ActionOwst_1(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB6CC5E0 + 4 * byte_1BB93F398[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB6CC600 + 4 * byte_1BB93F39D[v4]))();
}

_BYTE *sub_1BB6CC5E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB6CC600(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6CC608(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6CC610(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6CC618(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6CC620(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueBinding.Action()
{
  return &type metadata for FormatIssueBinding.Action;
}

uint64_t type metadata accessor for DebugFormatUploadHiddenTableViewCell()
{
  return objc_opt_self();
}

char *sub_1BB6CC8C8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  Class v10;
  void *v11;
  id v12;
  char *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  objc_super v20;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_button;
  v7 = (void *)objc_opt_self();
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_buttonWithType_, 0);
  v9 = OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_onTap;
  sub_1BA563554();
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone(v10), sel_init);

  if (a2)
  {
    v11 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v20.receiver = v8;
  v20.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v20, sel_initWithStyle_reuseIdentifier_, 3, v11);

  v13 = (char *)v12;
  v14 = objc_msgSend(v13, sel_contentView);
  v15 = OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_button;
  objc_msgSend(v14, sel_addSubview_, *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_button]);

  v16 = *(void **)&v13[v15];
  v17 = *(id *)&v13[OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_onTap];
  v18 = v16;
  sub_1BB871368();

  return v13;
}

uint64_t SharingTagTextActivityItemSource.__allocating_init(tag:)(uint64_t a1)
{
  return sub_1BB6CCAD4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BB6CD700);
}

id SharingTagTextActivityItemSource.__allocating_init(feedDescriptor:)(void *a1)
{
  objc_class *v1;
  objc_class *v2;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v2 = v1;
  v4 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_tag] = FCFeedDescriptor.feedTag.getter();
  v5 = FCFeedDescriptor.feedExternalTitle.getter();
  v6 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle];
  *v6 = v5;
  v6[1] = v7;

  v10.receiver = v4;
  v10.super_class = v2;
  v8 = objc_msgSendSuper2(&v10, sel_init);

  return v8;
}

uint64_t SharingTagTextActivityItemSource.init(tag:)(uint64_t a1)
{
  return sub_1BB6CCAD4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BB6CD604);
}

uint64_t sub_1BB6CCAD4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v6;

  ObjectType = swift_getObjectType();
  v6 = a2(a1, v2, ObjectType);
  swift_unknownObjectRelease();
  return v6;
}

id SharingTagTextActivityItemSource.init(feedDescriptor:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = v2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_tag] = FCFeedDescriptor.feedTag.getter();
  v6 = FCFeedDescriptor.feedExternalTitle.getter();
  v7 = (uint64_t *)&v5[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle];
  *v7 = v6;
  v7[1] = v8;

  v11.receiver = v5;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

uint64_t SharingTagTextActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle + 8);
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void SharingTagTextActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  char v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char isUniquelyReferenced_nonNull_native;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23[2];

  v23[1] = *(id *)MEMORY[0x1E0C80C00];
  if (!a1)
    goto LABEL_17;
  if (sub_1BB8729A0() != 0xD000000000000026 || v5 != 0x80000001BB968360)
  {
    v7 = sub_1BB874398();
    v8 = a1;
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      goto LABEL_6;

LABEL_17:
    sub_1BB6CCEAC(a1, v2, a2);
    return;
  }
  v6 = a1;
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = (void *)sub_1BB8727B4();
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle + 8);
  if (v10)
    v12 = 0;
  else
    v12 = v11 == 0xE000000000000000;
  if (!v12 && (sub_1BB874398() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23[0] = v9;
    sub_1BB4BDCEC(v10, v11, 0x2D6C656E6E616863, 0xED0000656C746974, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  v14 = (void *)objc_opt_self();
  v15 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v23[0] = 0;
  v16 = objc_msgSend(v14, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v15, 1, v23);

  v17 = v23[0];
  if (v16)
  {
    v18 = sub_1BB86C6E8();
    v20 = v19;

    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0CB0338];
    *(_QWORD *)a2 = v18;
    *(_QWORD *)(a2 + 8) = v20;
  }
  else
  {
    v21 = v17;
    v22 = (void *)sub_1BB86C484();

    swift_willThrow();
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

uint64_t sub_1BB6CCEAC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  char v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  char v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;

  if (!a1)
    goto LABEL_25;
  v6 = sub_1BB8729A0();
  v8 = v7;
  if (v6 == sub_1BB8729A0() && v8 == v9)
    goto LABEL_16;
  v11 = sub_1BB874398();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_17:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  v13 = (void *)*MEMORY[0x1E0CEB1C0];
  v14 = sub_1BB8729A0();
  v16 = v15;
  if (v14 == sub_1BB8729A0() && v16 == v17)
  {
    v29 = v13;
    v30 = a1;

LABEL_16:
    result = swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  v19 = sub_1BB874398();
  v20 = v13;
  v21 = a1;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    goto LABEL_17;
  v22 = (void *)*MEMORY[0x1E0CEB1F0];
  v23 = sub_1BB8729A0();
  v25 = v24;
  if (v23 == sub_1BB8729A0() && v25 == v26)
  {
    v27 = v22;
    v28 = v21;

LABEL_22:
    result = swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
  v31 = sub_1BB874398();
  v32 = v22;
  v33 = v21;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
  {
LABEL_23:
    *(_QWORD *)(a3 + 24) = MEMORY[0x1E0DEA968];
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0xE000000000000000;
    return result;
  }
  v34 = (void *)*MEMORY[0x1E0CEB1D0];
  v35 = sub_1BB8729A0();
  v37 = v36;
  if (v35 == sub_1BB8729A0() && v37 == v38)
  {
    v39 = v34;
    v40 = v33;

    goto LABEL_22;
  }
  v41 = sub_1BB874398();
  v42 = v34;
  v43 = v33;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v41 & 1) != 0)
    goto LABEL_23;
LABEL_25:
  v45 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle);
  v44 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle + 8);
  *(_QWORD *)(a3 + 24) = MEMORY[0x1E0DEA968];
  *(_QWORD *)a3 = v45;
  *(_QWORD *)(a3 + 8) = v44;
  return swift_bridgeObjectRetain();
}

Swift::String __swiftcall SharingTagTextActivityItemSource.activityViewController(_:dataTypeIdentifierForActivityType:)(UIActivityViewController *_, UIActivityType_optional dataTypeIdentifierForActivityType)
{
  unint64_t v3;
  uint64_t v4;
  NSString *v5;
  unint64_t v6;
  char v7;
  NSString *v8;
  uint64_t v9;
  void *v10;
  Swift::String result;

  if (dataTypeIdentifierForActivityType.value)
  {
    v3 = 0xD00000000000001DLL;
    if (sub_1BB8729A0() == 0xD000000000000026 && v4 == 0x80000001BB968360)
    {
      v5 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      v6 = 0x80000001BB968390;
    }
    else
    {
      v7 = sub_1BB874398();
      v8 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
        v6 = 0x80000001BB968390;
      }
      else
      {
        v3 = 0;
        v6 = 0xE000000000000000;
      }
    }

  }
  else
  {
    v3 = 0;
    v6 = 0xE000000000000000;
  }
  v9 = v3;
  v10 = (void *)v6;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

Swift::String __swiftcall SharingTagTextActivityItemSource.activityViewController(_:subjectForActivityType:)(UIActivityViewController *_, UIActivityType_optional subjectForActivityType)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle);
  v4 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle + 8);
  swift_bridgeObjectRetain();
  v5 = v3;
  v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

id SharingTagTextActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingTagTextActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingTagTextActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BB6CD604(void *a1, char *a2)
{
  objc_class *ObjectType;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&a2[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_tag] = a1;
  v5 = a2;
  swift_unknownObjectRetain();
  v6 = objc_msgSend(a1, sel_asPuzzleType);
  if (v6)
  {
    v7 = objc_msgSend(v6, sel_nameForSharing);
    swift_unknownObjectRelease();
  }
  else
  {
    v7 = objc_msgSend(a1, sel_displayName);
  }
  v8 = sub_1BB8729A0();
  v10 = v9;

  v11 = (uint64_t *)&v5[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle];
  *v11 = v8;
  v11[1] = v10;

  v13.receiver = v5;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

id sub_1BB6CD700(void *a1, Class a2)
{
  return sub_1BB6CD604(a1, (char *)objc_allocWithZone(a2));
}

uint64_t type metadata accessor for SharingTagTextActivityItemSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingTagTextActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingTagTextActivityItemSource.__allocating_init(tag:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SharingTagTextActivityItemSource.__allocating_init(feedDescriptor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t ResetPuzzleProgressCommandHandler.__allocating_init(historyService:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BA4CECCC(a1, v2 + 16);
  return v2;
}

uint64_t ResetPuzzleProgressCommandHandler.init(historyService:)(__int128 *a1)
{
  uint64_t v1;

  sub_1BA4CECCC(a1, v1 + 16);
  return v1;
}

uint64_t ResetPuzzleProgressCommandHandler.handle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = v4[5];
  v7 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v6);
  v8 = objc_msgSend(a4, sel_identifier);
  v9 = sub_1BB8729A0();
  v11 = v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40))(v9, v11, v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t ResetPuzzleProgressCommandHandler.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ResetPuzzleProgressCommandHandler.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB6CD898(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *a4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 40);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v4 + 16), v6);
  v8 = objc_msgSend(v5, sel_identifier);
  v9 = sub_1BB8729A0();
  v11 = v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40))(v9, v11, v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t method lookup function for ResetPuzzleProgressCommandHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResetPuzzleProgressCommandHandler.__allocating_init(historyService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t FormatCompilerSlotDefinitionItemSet.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerSlotDefinitionItemSet.properties.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*FormatCompilerSlotDefinitionItemSet.properties.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCompilerSlotDefinitionItemSet.auxiliary.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA8EF4D4(v2);
}

uint64_t FormatCompilerSlotDefinitionItemSet.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatCompilerSlotDefinitionItemSet() + 24);
  return sub_1BA6E70E4(v3, a1);
}

uint64_t sub_1BB6CD9B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCompilerSlotDefinitionItemSet.init(from:)(a1, a2);
}

uint64_t sub_1BB6CD9CC(_QWORD *a1)
{
  return FormatCompilerSlotDefinitionItemSet.encode(to:)(a1);
}

BOOL _s8NewsFeed35FormatCompilerSlotDefinitionItemSetV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48[2];
  uint64_t v49[2];

  v4 = sub_1BB86E710();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA793CE8();
  v7 = v6;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA74E57C();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v40 - v17;
  v19 = *a1;
  v20 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = sub_1BA882848(v19, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
    return 0;
  v42 = v15;
  v43 = v18;
  v41 = v12;
  v44 = v9;
  v23 = a1[1];
  v22 = a1[2];
  v25 = a2[1];
  v24 = a2[2];
  if (v23)
  {
    v49[0] = a1[1];
    v49[1] = v22;
    if (v25)
    {
      v26 = v47;
      v48[0] = v25;
      v48[1] = v24;
      sub_1BA8EF4D4(v23);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = _s8NewsFeed44FormatCompilerSlotDefinitionItemSetAuxiliaryV2eeoiySbAC_ACtFZ_0(v49, v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5DCC4C(v23);
      if ((v27 & 1) == 0)
        return 0;
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_11:
    sub_1BA8EF4D4(v25);
    sub_1BA5DCC4C(v23);
    sub_1BA5DCC4C(v25);
    return 0;
  }
  v26 = v47;
  if (v25)
    goto LABEL_11;
LABEL_7:
  v28 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  v29 = (uint64_t)v43;
  sub_1BA6E70E4((uint64_t)a1 + *(int *)(v28 + 24), (uint64_t)v43);
  v30 = (uint64_t)v42;
  sub_1BA6E70E4((uint64_t)a2 + *(int *)(v28 + 24), (uint64_t)v42);
  v31 = (uint64_t)v44;
  v32 = (uint64_t)&v44[*(int *)(v7 + 48)];
  sub_1BA6E70E4(v29, (uint64_t)v44);
  sub_1BA6E70E4(v30, v32);
  v33 = v45;
  v34 = v46;
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
  if (v35(v31, 1, v46) == 1)
  {
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))sub_1BA74E57C);
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))sub_1BA74E57C);
    if (v35(v32, 1, v34) == 1)
    {
      sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BA74E57C);
      return 1;
    }
    goto LABEL_14;
  }
  v36 = (uint64_t)v41;
  sub_1BA6E70E4(v31, (uint64_t)v41);
  if (v35(v32, 1, v34) == 1)
  {
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))sub_1BA74E57C);
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))sub_1BA74E57C);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v36, v34);
LABEL_14:
    sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BA793CE8);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v26, v32, v34);
  sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
  v37 = sub_1BB872958();
  v38 = *(void (**)(char *, uint64_t))(v33 + 8);
  v38(v26, v34);
  sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  v38((char *)v36, v34);
  sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  return (v37 & 1) != 0;
}

uint64_t sub_1BB6CDDE4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2CA940, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t)&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSet);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB6CDE20(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3C00D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t)&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSet);
  a1[2] = sub_1BA4A2870(&qword_1ED3A0680, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t)&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSet);
  result = sub_1BA4A2870(&qword_1EF2CA948, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t)&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSet);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB6CDE98@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6CDEA4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatCompilerSlotDefinitionItemSet(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v9 = a2 + 1;
    v8 = a2[1];
    swift_bridgeObjectRetain();
    if (v8)
    {
      v10 = a2[2];
      a1[1] = v8;
      a1[2] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 1) = *v9;
    }
    v11 = *(int *)(a3 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1BB86E710();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_1BA74E57C();
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t destroy for FormatCompilerSlotDefinitionItemSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BB86E710();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for FormatCompilerSlotDefinitionItemSet(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v7 = a2 + 1;
  v6 = a2[1];
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = a2[2];
    a1[1] = v6;
    a1[2] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v7;
  }
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1BB86E710();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1BA74E57C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

_QWORD *assignWithCopy for FormatCompilerSlotDefinitionItemSet(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[1];
  if (a1[1])
  {
    if (v6)
    {
      a1[1] = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BA9F5798((uint64_t)(a1 + 1));
  }
  else if (v6)
  {
    a1[1] = v6;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
LABEL_8:
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86E710();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_13;
  }
  if (v14)
  {
LABEL_13:
    sub_1BA74E57C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for FormatCompilerSlotDefinitionItemSet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1BB86E710();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BA74E57C();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for FormatCompilerSlotDefinitionItemSet(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[1];
  if (a1[1])
  {
    if (v6)
    {
      a1[1] = v6;
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA9F5798((uint64_t)(a1 + 1));
  }
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
LABEL_6:
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86E710();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_11;
  }
  if (v14)
  {
LABEL_11:
    sub_1BA74E57C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1BB6CE530(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA74E57C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

char *sub_1BB6CE5AC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1BA74E57C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:contextLayoutOptions:contentFrameIdentifier:puzzleIdentifier:accessibilityRole:isResizable:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,char a21,uint64_t a22,uint64_t a23)
{
  uint64_t v27;

  swift_allocObject();
  v27 = sub_1BB6CF900(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23);
  swift_release();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatPuzzleEmbedNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.style.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1[12];
  v3 = v1[13];
  v4 = v1[14];
  v5 = v1[15];
  v6 = v1[16];
  v7 = v1[17];
  v8 = v1[18];
  v9 = v1[19];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_1BAC69440(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 160);
  return swift_retain();
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 168);
}

unint64_t FormatPuzzleEmbedNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 176);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.contentFrameIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

void FormatPuzzleEmbedNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 216);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 208);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.isResizable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 217);
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.location.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:contextLayoutOptions:contentFrameIdentifier:puzzleIdentifier:accessibilityRole:isResizable:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,char a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;

  v23 = sub_1BB6CF900(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23);
  swift_release();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1BB6CE928(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB6CE960 + 4 * byte_1BB93F6B0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BB6CE960()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB6CE97C()
{
  return 0x6E65644965646F6ELL;
}

uint64_t sub_1BB6CE9A0()
{
  return 0x656D617266;
}

uint64_t sub_1BB6CE9B4()
{
  return 0x656C797473;
}

uint64_t sub_1BB6CE9C8()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB6CE9E0()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB6CE9F4()
{
  return 0x696C696269736976;
}

unint64_t sub_1BB6CEA0C()
{
  return 0xD000000000000014;
}

uint64_t sub_1BB6CEAD0()
{
  unsigned __int8 *v0;

  return sub_1BB6CE928(*v0);
}

uint64_t sub_1BB6CEAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB6CFCFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB6CEAFC()
{
  sub_1BB6CF9E0();
  return sub_1BB874710();
}

uint64_t sub_1BB6CEB24()
{
  sub_1BB6CF9E0();
  return sub_1BB87471C();
}

_QWORD *FormatPuzzleEmbedNodeLayoutAttributes.deinit()
{
  _QWORD *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BAC694A8(v0[12], v0[13], v0[14], v0[15], v0[16], v0[17], v0[18]);
  swift_release();
  sub_1BA6EEDB4(v0[22]);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.__deallocating_deinit()
{
  FormatPuzzleEmbedNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2CA950, (uint64_t (*)(void))sub_1BB6CF9E0, (uint64_t)&type metadata for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6CF9E0();
  sub_1BB8746C8();
  LOBYTE(v15) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1BB87417C();
    LOBYTE(v15) = 2;
    sub_1BB87417C();
    v10 = *(_OWORD *)(v3 + 80);
    v15 = *(_OWORD *)(v3 + 64);
    v16 = v10;
    v19 = 3;
    type metadata accessor for CGRect(0);
    sub_1BA50AD30(&qword_1EF2A9A18, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
    sub_1BB8741AC();
    v11 = *(_OWORD *)(v3 + 112);
    v15 = *(_OWORD *)(v3 + 96);
    v16 = v11;
    v12 = *(_OWORD *)(v3 + 144);
    v17 = *(_OWORD *)(v3 + 128);
    v18 = v12;
    v19 = 4;
    sub_1BAEED80C();
    sub_1BB87414C();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 160);
    v19 = 5;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v15) = 6;
    sub_1BB8741A0();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 176);
    v19 = 7;
    sub_1BA84B088();
    sub_1BB8741AC();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 184);
    v19 = 8;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    LOBYTE(v15) = 9;
    sub_1BB87411C();
    v13 = *(_BYTE *)(v3 + 216);
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 208);
    BYTE8(v15) = v13;
    v19 = 10;
    sub_1BA5FB410();
    sub_1BB87414C();
    LOBYTE(v15) = 11;
    sub_1BB874188();
    LOBYTE(v15) = 12;
    sub_1BB87411C();
    LOBYTE(v15) = 13;
    sub_1BB87417C();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 256);
    v19 = 14;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA9952AC(&qword_1EF2AC0D8, (uint64_t (*)(void))sub_1BA994B84, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatPuzzleEmbedNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;

  sub_1BA4CDF6C(0, &qword_1EF2CA960, (uint64_t (*)(void))sub_1BB6CF9E0, (uint64_t)&type metadata for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v22 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6CF9E0();
  v21 = v6;
  v7 = v23;
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
    v19 = (uint64_t)a1;
  }
  else
  {
    v23 = a1;
    LOBYTE(v24) = 0;
    *(_QWORD *)(v1 + 16) = sub_1BB874098();
    *(_QWORD *)(v1 + 24) = v8;
    LOBYTE(v24) = 1;
    *(_QWORD *)(v1 + 32) = sub_1BB874098();
    *(_QWORD *)(v1 + 40) = v9;
    LOBYTE(v24) = 2;
    *(_QWORD *)(v1 + 48) = sub_1BB874098();
    *(_QWORD *)(v1 + 56) = v10;
    type metadata accessor for CGRect(0);
    v28 = 3;
    sub_1BA50AD30((unint64_t *)&unk_1ED3B9910, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    v20 = 0;
    sub_1BB8740D4();
    v11 = v25;
    *(_OWORD *)(v1 + 64) = v24;
    *(_OWORD *)(v1 + 80) = v11;
    v28 = 4;
    sub_1BAEA7A04();
    sub_1BB874068();
    v13 = v25;
    *(_OWORD *)(v1 + 96) = v24;
    *(_OWORD *)(v1 + 112) = v13;
    v14 = v27;
    *(_OWORD *)(v1 + 128) = v26;
    *(_OWORD *)(v1 + 144) = v14;
    v28 = 5;
    sub_1BA995268();
    sub_1BB874068();
    *(_QWORD *)(v1 + 160) = v24;
    LOBYTE(v24) = 6;
    *(_QWORD *)(v1 + 168) = sub_1BB8740C8();
    v28 = 7;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 176) = v24;
    type metadata accessor for FormatContextLayoutOptions();
    v28 = 8;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 184) = v24;
    LOBYTE(v24) = 9;
    *(_QWORD *)(v1 + 192) = sub_1BB87402C();
    *(_QWORD *)(v1 + 200) = v15;
    v28 = 10;
    sub_1BA650BA0();
    sub_1BB874068();
    v16 = BYTE8(v24);
    *(_QWORD *)(v1 + 208) = v24;
    *(_BYTE *)(v1 + 216) = v16;
    LOBYTE(v24) = 11;
    *(_BYTE *)(v1 + 217) = sub_1BB8740A4() & 1;
    LOBYTE(v24) = 12;
    *(_QWORD *)(v1 + 224) = sub_1BB87402C();
    *(_QWORD *)(v1 + 232) = v17;
    LOBYTE(v24) = 13;
    *(_QWORD *)(v1 + 240) = sub_1BB874098();
    *(_QWORD *)(v1 + 248) = v18;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v28 = 14;
    sub_1BA9952AC(&qword_1EF2AC100, (uint64_t (*)(void))sub_1BA995330, MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v21, v22);
    v19 = (uint64_t)v23;
    *(_QWORD *)(v1 + 256) = v24;
  }
  __swift_destroy_boxed_opaque_existential_1(v19);
  return v1;
}

uint64_t sub_1BB6CF800()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6CF80C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatPuzzleEmbedNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB6CF860(_QWORD *a1)
{
  return FormatPuzzleEmbedNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BB6CF880(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1EF2C3140, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedNodeLayoutAttributes);
  return sub_1BB86D96C();
}

uint64_t sub_1BB6CF900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,char a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;
  _QWORD *v31;

  v24 = *a8;
  v25 = *a14;
  v26 = *a20;
  v27 = *((_BYTE *)a20 + 8);
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  *(_QWORD *)(v23 + 32) = a3;
  *(_QWORD *)(v23 + 40) = a4;
  *(_QWORD *)(v23 + 48) = a5;
  *(_QWORD *)(v23 + 56) = a6;
  *(double *)(v23 + 64) = a9;
  *(double *)(v23 + 72) = a10;
  *(double *)(v23 + 80) = a11;
  *(double *)(v23 + 88) = a12;
  v28 = a7[1];
  *(_OWORD *)(v23 + 96) = *a7;
  *(_OWORD *)(v23 + 112) = v28;
  v29 = a7[3];
  *(_OWORD *)(v23 + 128) = a7[2];
  *(_OWORD *)(v23 + 144) = v29;
  *(_QWORD *)(v23 + 160) = v24;
  *(_QWORD *)(v23 + 168) = a13;
  *(_QWORD *)(v23 + 176) = v25;
  *(_QWORD *)(v23 + 184) = a15;
  *(_QWORD *)(v23 + 192) = a16;
  *(_QWORD *)(v23 + 200) = a17;
  *(_QWORD *)(v23 + 208) = v26;
  *(_BYTE *)(v23 + 216) = v27;
  *(_BYTE *)(v23 + 217) = a21;
  *(_QWORD *)(v23 + 224) = a22;
  *(_QWORD *)(v23 + 232) = a23;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB872AFC(v30);
  sub_1BB872AFC(v31);
  *(_QWORD *)(v23 + 240) = a3;
  *(_QWORD *)(v23 + 248) = a4;
  *(_QWORD *)(v23 + 256) = MEMORY[0x1E0DEE9E8];
  return v23;
}

unint64_t sub_1BB6CF9E0()
{
  unint64_t result;

  result = qword_1EF2CA958;
  if (!qword_1EF2CA958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93F99C, &type metadata for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA958);
  }
  return result;
}

uint64_t sub_1BB6CFA24(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2CA968, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t sub_1BB6CFA70(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C3098, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedNodeLayoutAttributes);
}

uint64_t sub_1BB6CFA9C(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C30F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedNodeLayoutAttributes);
}

uint64_t sub_1BB6CFAC8(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2CA970, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedNodeLayoutAttributes);
}

uint64_t method lookup function for FormatPuzzleEmbedNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatPuzzleEmbedNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:contextLayoutOptions:contentFrameIdentifier:puzzleIdentifier:accessibilityRole:isResizable:location:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of FormatPuzzleEmbedNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t storeEnumTagSinglePayload for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1BB6CFBA4 + 4 * byte_1BB93F6C4[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1BB6CFBD8 + 4 * byte_1BB93F6BF[v4]))();
}

uint64_t sub_1BB6CFBD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6CFBE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6CFBE8);
  return result;
}

uint64_t sub_1BB6CFBF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6CFBFCLL);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1BB6CFC00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6CFC08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB6CFC28()
{
  unint64_t result;

  result = qword_1EF2CA978;
  if (!qword_1EF2CA978)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93F974, &type metadata for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA978);
  }
  return result;
}

unint64_t sub_1BB6CFC70()
{
  unint64_t result;

  result = qword_1EF2CA980;
  if (!qword_1EF2CA980)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93F8E4, &type metadata for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA980);
  }
  return result;
}

unint64_t sub_1BB6CFCB8()
{
  unint64_t result;

  result = qword_1EF2CA988;
  if (!qword_1EF2CA988)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93F90C, &type metadata for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CA988);
  }
  return result;
}

uint64_t sub_1BB6CFCFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB961EB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB959E40 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x617A697365527369 && a2 == 0xEB00000000656C62 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB965970)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

id sub_1BB6D0320(uint64_t a1)
{
  return sub_1BB6D0340(a1, 1, &qword_1ED3A0FB8);
}

id sub_1BB6D0330(uint64_t a1)
{
  return sub_1BB6D0340(a1, 3, &qword_1EF2CA990);
}

id sub_1BB6D0340(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  id result;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  objc_msgSend(v5, sel_setUnitsStyle_, a2);
  result = objc_msgSend(v5, sel_setAllowedUnits_, 240);
  *a3 = v5;
  return result;
}

uint64_t type metadata accessor for PuzzlePlayDurationFormatter()
{
  return objc_opt_self();
}

BOOL static FormatBindingURLExpressionLogic.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatBindingURLExpressionLogic.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatBindingURLExpressionLogic.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB6D0450()
{
  unint64_t result;

  result = qword_1EF2CAA30;
  if (!qword_1EF2CAA30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingURLExpressionLogic, &type metadata for FormatBindingURLExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2CAA30);
  }
  return result;
}

unint64_t sub_1BB6D0494(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6D04B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6D04B8()
{
  unint64_t result;

  result = qword_1EF2CAA38;
  if (!qword_1EF2CAA38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingURLExpressionLogic, &type metadata for FormatBindingURLExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2CAA38);
  }
  return result;
}

unint64_t sub_1BB6D04FC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5159A4();
  a1[2] = sub_1BA548B1C();
  result = sub_1BB6D0450();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingURLExpressionLogic()
{
  return &type metadata for FormatBindingURLExpressionLogic;
}

id sub_1BB6D0540(uint64_t a1, uint64_t a2, uint64_t *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char **v34;
  id result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  __objc2_class_ro *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v61 = a7;
  v57 = a8;
  v59 = a5;
  v60 = a6;
  v52 = a2;
  v58 = a1;
  v50 = type metadata accessor for FormatAction();
  MEMORY[0x1E0C80A78](v50);
  v51 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v45 - v13;
  sub_1BA4B07F0(0, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v45 - v19;
  v22 = *a3;
  v21 = a3[1];
  v55 = a3[2];
  v56 = v21;
  v23 = a3[3];
  v53 = a3[4];
  v54 = v23;
  v24 = &a4[OBJC_IVAR____TtC8NewsFeed12FormatButton_createMenuElementsBlock];
  v25 = *(_QWORD *)&a4[OBJC_IVAR____TtC8NewsFeed12FormatButton_createMenuElementsBlock];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  sub_1BA49EBE0(v25);
  objc_msgSend(a4, sel_setActivityItemsConfiguration_, 0);
  v26 = *(_QWORD *)(v22 + 16);
  v28 = *(_QWORD *)(v26 + 48);
  v27 = *(_QWORD *)(v26 + 56);
  v29 = &a4[OBJC_IVAR____TtC8NewsFeed12FormatButton_identifier];
  swift_beginAccess();
  *(_QWORD *)v29 = v28;
  *((_QWORD *)v29 + 1) = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)&a4[OBJC_IVAR____TtC8NewsFeed12FormatButton_onTap];

  v31 = *(_QWORD *)&a4[OBJC_IVAR____TtC8NewsFeed12FormatButton_onLongPress];
  sub_1BB8736F0();
  v32 = *(_QWORD *)(v22 + 72);
  v33 = *(unsigned __int8 *)(v22 + 80);
  objc_msgSend(a4, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a4, sel_setAccessibilityElementsHidden_, 0);
  if (v33 <= 0xFD)
  {
    if ((v33 & 0x80) != 0)
    {
      if (!(v32 | v33 ^ 0x80))
        goto LABEL_7;
      v34 = &selRef_setAccessibilityElementsHidden_;
    }
    else
    {
      v34 = &selRef_setIsAccessibilityElement_;
    }
    objc_msgSend(a4, *v34, 1);
  }
LABEL_7:
  swift_beginAccess();
  result = objc_msgSend(a4, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(v22 + 56));
  if (*(_BYTE *)(v22 + 56) == 1)
  {
    v49 = v31;
    v46 = v14;
    v36 = v52;
    sub_1BA4C2DD8(v52, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
    v37 = type metadata accessor for FormatButtonNodeDataAction();
    v38 = *(_QWORD *)(v37 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v20, 0, 1, v37);
    v62 = v22;
    v63 = v56;
    v64 = v55;
    v65 = v54;
    v66 = v53;
    v48 = a9;
    v47 = sub_1BB6D0B30(v58, (uint64_t)a4, v30, (uint64_t)v20, v59, &v62, v60, v61, v57);
    sub_1BA5C699C((uint64_t)v20, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
    v39 = v36 + *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
    sub_1BA5E01A4(v39, (uint64_t)v17, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v17, 1, v37) != 1)
    {
      v40 = (uint64_t)v46;
      sub_1BA4C2DD8((uint64_t)v17, (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
      sub_1BA4C2DD8(v40, v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
      v41 = (char *)&loc_1BB6D09B4 + 4 * byte_1BB93FB70[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    sub_1BA5C699C((uint64_t)v17, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
    sub_1BA83647C(0);
    v62 = v22;
    v63 = v56;
    v64 = v55;
    v65 = v54;
    v66 = v53;
    v42 = sub_1BB6D0B30(v58, (uint64_t)a4, v49, v39, v59, &v62, v60, v61, v57);
    if (v47 == 2)
    {
      v43 = &StubThumbnailProcessor;
      if (v42 == 2)
        v44 = 0;
      else
        v44 = v42 & 1;
    }
    else
    {
      v43 = &StubThumbnailProcessor;
      if (v42 == 2)
        v44 = v47 & 1;
      else
        v44 = (v47 | v42) & 1;
    }
    result = objc_msgSend(a4, (SEL)v43[55].base_prots, v44);
    if (!*(_QWORD *)v24)
    {
      if (objc_msgSend(a4, sel_isContextMenuInteractionEnabled))
        objc_msgSend(a4, sel_setContextMenuInteractionEnabled_, 0);
      result = objc_msgSend(a4, sel_showsMenuAsPrimaryAction);
      if ((result & 1) != 0)
        return objc_msgSend(a4, sel_setShowsMenuAsPrimaryAction_, 0);
    }
  }
  else if (!*(_QWORD *)v24)
  {
    if (objc_msgSend(a4, sel_isContextMenuInteractionEnabled))
      objc_msgSend(a4, sel_setContextMenuInteractionEnabled_, 0);
    result = objc_msgSend(a4, sel_showsMenuAsPrimaryAction);
    if ((_DWORD)result)
      return objc_msgSend(a4, sel_setShowsMenuAsPrimaryAction_, 0);
  }
  return result;
}

uint64_t sub_1BB6D0B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  _QWORD v29[6];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v35 = a8;
  v38 = a7;
  v32 = a5;
  v39 = a3;
  v40 = a4;
  v34 = a2;
  v33 = a1;
  v10 = type metadata accessor for FormatPurchaseData(0);
  v30 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v30 + 64);
  MEMORY[0x1E0C80A78](v10);
  v31 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v36 = (char *)v29 - v13;
  v37 = a9;
  v14 = *(_QWORD *)(a9 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v16);
  sub_1BA4B07F0(0, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v29 - v18;
  v20 = type metadata accessor for FormatAction();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a6[2];
  v24 = a6[3];
  v25 = a6[4];
  sub_1BA5E01A4(v40, (uint64_t)v19, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  v26 = type metadata accessor for FormatButtonNodeDataAction();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v19, 1, v26) != 1)
  {
    v29[1] = v11;
    v29[2] = v15;
    v29[3] = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    v29[4] = v14;
    sub_1BA4C2DD8((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
    v29[5] = v23;
    v40 = v25;
    sub_1BA8E9488(v23, v24);
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
    v28 = (char *)&loc_1BB6D0DEC + 4 * word_1BB93FB78[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_1BA8E9488(v23, v24);
  sub_1BA5C699C((uint64_t)v19, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  sub_1BA8E94B8(v23, v24);
  return 2;
}

void sub_1BB6D1414()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BA8E94B8(*(_QWORD *)(v2 - 328), v1);
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  JUMPOUT(0x1BB6D13F4);
}

uint64_t sub_1BB6D1470(int a1, id a2, uint64_t a3)
{
  uint64_t result;
  void *v6;

  if (objc_msgSend(a2, sel_showsMenuAsPrimaryAction))
    return (uint64_t)objc_msgSend(a2, sel__feldsparAccessibilityPresentMenu);
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](a3 + 16);
  if (result)
  {
    v6 = (void *)result;
    MEMORY[0x1BCCE1C6C]();

    return 1;
  }
  return result;
}

uint64_t sub_1BB6D14F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v9 = sub_1BB8709F0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return 0;
  v14 = Strong;
  swift_beginAccess();
  v15 = MEMORY[0x1BCCE5D40](a2 + 16);
  if (!v15)
  {
    swift_release();
    return 0;
  }
  v16 = (void *)v15;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB9EF8], v9);
  v17 = *(_QWORD *)(v14 + 32);
  swift_retain();
  sub_1BA8E9488(a3, a4);
  v18 = v16;
  sub_1BB6D2100(a3, a4, a5, (uint64_t)v12, v17);
  swift_retain();
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1BB6D22A8(v19);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release_n();
  return v20;
}

uint64_t sub_1BB6D168C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[48];
  _BYTE v43[48];
  _QWORD *v44;
  _BYTE v45[40];

  v41 = a6;
  v40 = sub_1BB870A14();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v38 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB8709F0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return 0;
  v21 = Strong;
  v37 = a8;
  swift_beginAccess();
  v22 = MEMORY[0x1BCCE5D40](a2 + 16);
  if (!v22)
  {
    swift_release();
    return 0;
  }
  v23 = (void *)v22;
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DB9EF8], v16);
  v24 = *(_QWORD *)(v21 + 32);
  swift_retain();
  v25 = v23;
  sub_1BA8E9488(a3, a4);
  sub_1BB6D2100(a3, a4, a5, (uint64_t)v19, v24);
  sub_1BB6D2AFC(v41, (uint64_t)v45);
  sub_1BB6D2AFC((uint64_t)v45, (uint64_t)v43);
  sub_1BB6D2B38((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA7271AC);
  _s5TeaUI11ContextMenuC8NewsFeedE07contextD6Groups3for7optionsSayAA0cD9Groupable_pSgGAcDE0D4TypeO_ShyAcDE11ItemOptionsOGtFZ_0((uint64_t)v43);
  v27 = v26;
  sub_1BB6D2B38((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA726DD8);
  v44 = v27;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
    {
      sub_1BB86D294();
      sub_1BB86D27C();
      sub_1BB86D168();
      v28 = v38;
      sub_1BB86D270();
      swift_release();
      swift_release();
      v29 = v39;
      v30 = v40;
      v31 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v28, v40);
      if (v31 != *MEMORY[0x1E0DB9F60])
      {
        if (v31 != *MEMORY[0x1E0DB9F68])
        {
          if (v31 == *MEMORY[0x1E0DB9F70])
          {
            sub_1BB2CD77C(v37, a9, a10, (uint64_t)v43);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v27 = sub_1BB393424(0, v27[2] + 1, 1, v27);
            v36 = v27[2];
            v35 = v27[3];
            if (v36 >= v35 >> 1)
              v27 = sub_1BB393424((_QWORD *)(v35 > 1), v36 + 1, 1, v27);
            v27[2] = v36 + 1;
            sub_1BB32CE40((uint64_t)v43, (uint64_t)&v27[5 * v36 + 4]);
            swift_release();
            v44 = v27;
          }
          else
          {
            swift_release();
            (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
          }
          goto LABEL_9;
        }
        sub_1BB2CD77C(v37, a9, a10, (uint64_t)v43);
        sub_1BB32CE40((uint64_t)v43, (uint64_t)v42);
        sub_1BAA687B4(0, 0, (uint64_t)v42);
      }
    }
    swift_release();
  }
LABEL_9:
  swift_retain();
  swift_retain();
  v32 = swift_bridgeObjectRetain();
  v33 = sub_1BB6D23C4(v32);
  swift_bridgeObjectRelease_n();

  swift_release_n();
  swift_release_n();
  return v33;
}

void sub_1BB6D1AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;

  v11 = sub_1BB8709F0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v16 = Strong;
    swift_beginAccess();
    v17 = MEMORY[0x1BCCE5D40](a2 + 16);
    if (v17)
    {
      v18 = (void *)v17;
      (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DB9EF8], v11);
      v19 = *(_QWORD *)(v16 + 32);
      swift_retain();
      sub_1BA8E9488(a3, a4);
      v20 = v18;
      v21 = sub_1BB6D2100(a3, a4, a5, (uint64_t)v14, v19);
      v22 = *(_QWORD *)(v16 + 24);
      v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(a6 + 56);
      v24 = swift_unknownObjectRetain();
      v23(v24, v22, v21);
      swift_release();
      swift_unknownObjectRelease();
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1BB6D1C54(uint64_t a1, char a2, void (*a3)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  void *v10;
  id v11;
  uint64_t v12;

  v6 = type metadata accessor for FeedActionSenderInternal(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](a1 + 16);
  if (result)
  {
    v10 = (void *)result;
    *v8 = a2;
    type metadata accessor for FeedAction(0);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for FeedActionInternal(0);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)&v8[*(int *)(v6 + 20)] = v10;
    v11 = v10;
    a3(v8);

    return sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedActionSenderInternal);
  }
  return result;
}

void sub_1BB6D1D54(_OWORD *a1)
{
  id v2;
  void *v3;
  uint64_t inited;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v3 = (void *)sub_1BB872970();
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2CAA40, (uint64_t (*)(uint64_t))sub_1BB6D2B74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BB873C48();
  *(_QWORD *)(inited + 96) = &type metadata for FormatStateMachineAction;
  v5 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(inited + 72) = v5;
  v6 = a1[1];
  v5[1] = *a1;
  v5[2] = v6;
  v7 = a1[3];
  v5[3] = a1[2];
  v5[4] = v7;
  v8 = a1[5];
  v5[5] = a1[4];
  v5[6] = v8;
  v9 = a1[7];
  v5[7] = a1[6];
  v5[8] = v9;
  sub_1BB6D2738((uint64_t)a1);
  sub_1BA8F377C(inited);
  v10 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_postNotificationName_object_userInfo_, v3, 0, v10);

}

uint64_t sub_1BB6D1ED4(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void *v10;
  id v11;
  uint64_t v12;

  v6 = type metadata accessor for FeedActionSenderInternal(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](a1 + 16);
  if (result)
  {
    v10 = (void *)result;
    sub_1BA4C2DD8(a2, (uint64_t)v8, type metadata accessor for FormatPurchaseData);
    type metadata accessor for FeedAction(0);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for FeedActionInternal(0);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)&v8[*(int *)(v6 + 20)] = v10;
    v11 = v10;
    a3(v8);

    return sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedActionSenderInternal);
  }
  return result;
}

uint64_t sub_1BB6D1FE4(uint64_t a1, char a2, void (*a3)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  void *v10;
  id v11;
  uint64_t v12;

  v6 = type metadata accessor for FeedActionSenderInternal(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](a1 + 16);
  if (result)
  {
    v10 = (void *)result;
    *v8 = a2;
    type metadata accessor for FeedActionInternal(0);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)&v8[*(int *)(v6 + 20)] = v10;
    v11 = v10;
    a3(v8);

    return sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedActionSenderInternal);
  }
  return result;
}

uint64_t sub_1BB6D20CC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB6D2100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[40];
  _QWORD v17[5];
  __int128 v18;
  __int128 v19;
  char v20;

  v9 = sub_1BB8709F0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB87069C();
  v17[3] = sub_1BB86DC0C();
  v17[4] = sub_1BB3A4D94();
  v17[0] = a5;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1BA8E94B8(a1, a2);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v12, a4, v9);
    sub_1BA4C010C((uint64_t)v17, (uint64_t)v16);
    v18 = 0u;
    v19 = 0u;
    v20 = 1;
    v13 = sub_1BB870648();
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v12, a4, v9);
    sub_1BA4C010C((uint64_t)v17, (uint64_t)v16);
    v18 = 0u;
    v19 = 0u;
    v20 = 1;
    v13 = sub_1BB870678();
  }
  v14 = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a4, v9);
  return v14;
}

uint64_t sub_1BB6D22A8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = MEMORY[0x1E0DEE9D8];
  v8 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v3; ++i)
    {
      swift_retain();
      sub_1BB4D46E8();
      v6 = v5;
      v7 = swift_release();
      if (v6)
      {
        MEMORY[0x1BCCE36AC](v7);
        if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1BB6D23C4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  result = MEMORY[0x1E0DEE9D8];
  v9 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA5E01A4(v4, (uint64_t)v7, (unint64_t *)&qword_1ED3AFAA0, (uint64_t (*)(uint64_t))sub_1BA93CD68);
      if (v8)
      {
        __swift_project_boxed_opaque_existential_1(v7, v8);
        v5 = sub_1BB870384();
        v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
        if (v5)
        {
          MEMORY[0x1BCCE36AC](v6);
          if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
        }
      }
      else
      {
        sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1ED3AFAA0, (uint64_t (*)(uint64_t))sub_1BA93CD68);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_1BB6D251C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB6D2540()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6D256C(int a1)
{
  uint64_t v1;

  return sub_1BB6D1470(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB6D2578()
{
  uint64_t v0;

  return sub_1BB6D1FE4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(_BYTE *))(v0 + 32));
}

uint64_t sub_1BB6D2588()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(type metadata accessor for FormatPurchaseData(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v5 = type metadata accessor for FormatPurchaseLandingPageData();
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v2, 1, v5))
    {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    v4 = *(int *)(v5 + 20);
  }
  else
  {
    if (EnumCaseMultiPayload)
      goto LABEL_9;
    swift_bridgeObjectRelease();
    v4 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
  }
  v6 = v0 + v2 + v4;
  v7 = type metadata accessor for FormatPostPurchaseData();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = sub_1BB86C67C();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 2, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  }
LABEL_9:
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6D26D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for FormatPurchaseData(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1BB6D1ED4(*(_QWORD *)(v0 + 16), v0 + v2, *(void (**)(char *))(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_1BB6D2730()
{
  uint64_t v0;

  sub_1BB6D1D54((_OWORD *)(v0 + 16));
}

uint64_t sub_1BB6D2738(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_BYTE *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA7261E0(v2, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t objectdestroy_8Tm_9()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6D2820()
{
  uint64_t v0;

  return sub_1BB6D1C54(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(_BYTE *))(v0 + 32));
}

uint64_t sub_1BB6D2830()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB6D2854()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1BB6D289C()
{
  uint64_t *v0;

  sub_1BB6D1AC0(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1BB6D28AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1BA726DD8(*(void **)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(unsigned __int8 *)(v0 + 112), *(_BYTE *)(v0 + 113));
  swift_bridgeObjectRelease();
  sub_1BA726DA4(*(void **)(v0 + 128), *(_BYTE *)(v0 + 136));
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 152) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_1BB6D2970()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(v0[2] - 8) + 80);
  return sub_1BB6D168C(v0[4], v0[5], v0[6], v0[7], v0[8], (uint64_t)(v0 + 9), v0[18], (uint64_t)v0 + ((v1 + 152) & ~v1), v0[2], v0[3]);
}

uint64_t sub_1BB6D29BC(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;

  v2 = *(void **)(a1 + 56);
  v3 = *(_BYTE *)(a1 + 64);
  sub_1BA7271AC(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(_BYTE *)(a1 + 41));
  swift_bridgeObjectRetain();
  sub_1BA727178(v2, v3);
  return a1;
}

uint64_t sub_1BB6D2A18(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;

  v2 = *(void **)(a1 + 56);
  v3 = *(_BYTE *)(a1 + 64);
  sub_1BA726DD8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(_BYTE *)(a1 + 41));
  swift_bridgeObjectRelease();
  sub_1BA726DA4(v2, v3);
  return a1;
}

uint64_t sub_1BB6D2A74()
{
  uint64_t v0;
  unsigned int v1;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 <= 0xFD)
    sub_1BA726DA4(*(void **)(v0 + 64), v1);
  return swift_deallocObject();
}

uint64_t sub_1BB6D2AD0()
{
  uint64_t *v0;

  return sub_1BB6D14F4(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

id sub_1BB6D2AE8(id result, unsigned __int8 a2)
{
  if (a2 <= 0xFDu)
    return sub_1BA727178(result, a2);
  return result;
}

uint64_t sub_1BB6D2AFC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy42_8(a2, a1);
  return a2;
}

uint64_t sub_1BB6D2B38(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(unsigned __int8 *)(a1 + 41));
  return a1;
}

void sub_1BB6D2B74()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2A9FE8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2A9FE8);
  }
}

uint64_t CommandExecutionSource.init(sourceItemData:location:tracker:sourceView:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(a3 + 32);
  v11 = __swift_mutable_project_boxed_opaque_existential_1(a3, v9);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v15 + 16))(v14, v12);
  v16 = sub_1BB6D2CAC(a1, a2, (uint64_t)v14, a4, v4, v9, v10);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v16;
}

uint64_t sub_1BB6D2CAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[40];
  uint64_t v23[5];
  __int128 v24;
  __int128 v25;
  char v26;

  v12 = sub_1BB8709F0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23[3] = a6;
  v23[4] = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v23);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_0, a3, a6);
  v17 = a1[1];
  if (v17)
  {
    v18 = *a1;
    swift_bridgeObjectRetain();
    sub_1BA8E94B8(v18, v17);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
    sub_1BA4C010C((uint64_t)v23, (uint64_t)v22);
    v24 = 0u;
    v25 = 0u;
    v26 = 1;
    v19 = sub_1BB870648();
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
    sub_1BA4C010C((uint64_t)v23, (uint64_t)v22);
    v24 = 0u;
    v25 = 0u;
    v26 = 1;
    v19 = sub_1BB870678();
  }
  v20 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  return v20;
}

void sub_1BB6D2E5C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for ZIndexable() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BACAB9EC(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1BB6D6410(v5);
  *a1 = v3;
}

id sub_1BB6D2EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char *v11;
  objc_class *ObjectType;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  id v25;
  objc_super v29;
  __int128 v30[2];

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA4C010C(a1, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_colorPaletteProvider]);
  sub_1BA4C010C(a1, (uint64_t)v30);
  type metadata accessor for FeedItemCellSelectionRenderer();
  v19 = swift_allocObject();
  sub_1BA4CECCC(v30, v19 + 16);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_cellSelectionRenderer] = v19;
  v20 = &v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_imageHeadlineViewRenderer];
  *(_QWORD *)v20 = a2;
  *((_QWORD *)v20 + 1) = a3;
  v21 = &v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_coverIssueViewRenderer];
  *(_QWORD *)v21 = a4;
  *((_QWORD *)v21 + 1) = a5;
  v22 = &v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_coverChannelViewRenderer];
  *(_QWORD *)v22 = a6;
  *((_QWORD *)v22 + 1) = a7;
  v23 = &v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_formatLayoutViewRenderer];
  *(_QWORD *)v23 = a8;
  *((_QWORD *)v23 + 1) = a9;
  v24 = &v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_internalErrorViewRenderer];
  *(_QWORD *)v24 = a10;
  *((_QWORD *)v24 + 1) = a11;
  v29.receiver = v11;
  v29.super_class = ObjectType;
  v25 = objc_msgSendSuper2(&v29, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v25;
}

uint64_t sub_1BB6D3030(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  id v76;
  char *v77;
  void *v78;
  uint64_t v79;
  int64_t v80;
  _QWORD *v81;
  unint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t *v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int EnumCaseMultiPayload;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  unsigned int v126;
  uint64_t v127;
  char v128;
  void (*v129)(char *, _QWORD, uint64_t);
  char *v130;
  unsigned int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  unsigned int v155;
  uint64_t v156;
  char v157;
  void (*v158)(char *, _QWORD, uint64_t);
  uint64_t v159;
  char *v160;
  unsigned int v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD **v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  int64_t v178;
  int64_t v179;
  unint64_t v180;
  unint64_t v181;
  int64_t v182;
  unint64_t v183;
  int64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD **v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  id v193;
  id v194;
  id v195;
  id v196;
  _QWORD v198[3];
  unsigned int v199;
  char *v200;
  char *v201;
  uint64_t *v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t *v206;
  unsigned int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t *v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  unsigned int v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  __int128 v243;
  _QWORD v244[2];

  v12 = v11;
  v236 = a6;
  v235 = a5;
  v234 = a4;
  v227 = a2;
  v198[1] = swift_getObjectType();
  v208 = sub_1BB870E88();
  v213 = *(_QWORD *)(v208 - 8);
  MEMORY[0x1E0C80A78](v208);
  v21 = (char *)v198 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v200 = (char *)v198 - v23;
  v231 = sub_1BB871170();
  v232 = *(_QWORD *)(v231 - 8);
  MEMORY[0x1E0C80A78](v231);
  v25 = (char *)v198 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v202 = (_QWORD *)((char *)v198 - v27);
  MEMORY[0x1E0C80A78](v28);
  v215 = (_QWORD *)((char *)v198 - v29);
  MEMORY[0x1E0C80A78](v30);
  v203 = (_QWORD *)((char *)v198 - v31);
  v224 = type metadata accessor for FeedItemSupplementaryAttributes();
  v223 = *(_QWORD *)(v224 - 8);
  MEMORY[0x1E0C80A78](v224);
  v204 = (uint64_t)v198 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v209 = (uint64_t)v198 - v34;
  MEMORY[0x1E0C80A78](v35);
  v221 = (uint64_t)v198 - v36;
  MEMORY[0x1E0C80A78](v37);
  v205 = (uint64_t)v198 - v38;
  MEMORY[0x1E0C80A78](v39);
  v212 = (uint64_t)v198 - v40;
  MEMORY[0x1E0C80A78](v41);
  v222 = (uint64_t)v198 - v42;
  MEMORY[0x1E0C80A78](v43);
  v230 = (uint64_t)v198 - v44;
  v238 = type metadata accessor for ZIndexable();
  v45 = *(_QWORD *)(v238 - 8);
  MEMORY[0x1E0C80A78](v238);
  v216 = (char *)v198 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v47);
  v219 = (uint64_t)v198 - v48;
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)v198 - v50;
  MEMORY[0x1E0C80A78](v52);
  v217 = (char *)v198 - v53;
  MEMORY[0x1E0C80A78](v54);
  v226 = (uint64_t)v198 - v55;
  MEMORY[0x1E0C80A78](v56);
  v211 = (uint64_t)v198 - v57;
  MEMORY[0x1E0C80A78](v58);
  v214 = (_QWORD *)((char *)v198 - v59);
  MEMORY[0x1E0C80A78](v60);
  v229 = (uint64_t)v198 - v61;
  MEMORY[0x1E0C80A78](v62);
  v64 = (char *)v198 - v63;
  MEMORY[0x1E0C80A78](v65);
  v67 = (_QWORD *)((char *)v198 - v66);
  v233 = *(_QWORD *)(a1 + 40);
  v228 = *(_QWORD *)(a1 + 48);
  sub_1BB873594();
  sub_1BB8735B8();
  v69 = v68;
  v71 = v70;
  v73 = v72;
  v75 = v74;
  v76 = objc_allocWithZone((Class)type metadata accessor for DebugGroupLayoutView());
  v77 = sub_1BB0D9A7C(v69, v71, v73, v75, a8, a9, a10, a11);
  v78 = a3;
  v79 = (uint64_t)v77;
  if (v78)
    objc_msgSend(v78, sel_addSubview_, v77);
  v237 = v79;
  v243 = xmmword_1BB87A390;
  v225 = v244;
  v80 = *(_QWORD *)(v227 + 16);
  v81 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v198[2] = v12;
  v218 = a7;
  v201 = v21;
  v206 = (uint64_t *)v25;
  v210 = (uint64_t *)v51;
  if (v80)
  {
    v240 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v82 = v227;
    sub_1BAC7AFA8(0, v80, 0);
    v81 = v240;
    v83 = (uint64_t *)(v82 + 32);
    do
    {
      v84 = *v83++;
      *v67 = v84;
      swift_storeEnumTagMultiPayload();
      v240 = v81;
      v86 = v81[2];
      v85 = v81[3];
      swift_retain();
      if (v86 >= v85 >> 1)
      {
        sub_1BAC7AFA8(v85 > 1, v86 + 1, 1);
        v81 = v240;
      }
      v81[2] = v86 + 1;
      sub_1BA5193C4((uint64_t)v67, (uint64_t)v81+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v86, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      --v80;
    }
    while (v80);
  }
  sub_1BB32DB5C((unint64_t)v81);
  v244[0] = v87;
  v88 = v228;
  v89 = *(_QWORD *)(v228 + 16);
  v90 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v89)
  {
    v240 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7AFA8(0, v89, 0);
    v91 = v88 + ((*(unsigned __int8 *)(v223 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v223 + 80));
    v92 = *(_QWORD *)(v223 + 72);
    do
    {
      v93 = v230;
      sub_1BA4C2DD8(v91, v230, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4C2DD8(v93, (uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      swift_storeEnumTagMultiPayload();
      sub_1BA4A2E80(v93, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      v94 = v240;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AFA8(0, v94[2] + 1, 1);
        v94 = v240;
      }
      v96 = v94[2];
      v95 = v94[3];
      if (v96 >= v95 >> 1)
      {
        sub_1BAC7AFA8(v95 > 1, v96 + 1, 1);
        v94 = v240;
      }
      v94[2] = v96 + 1;
      sub_1BA5193C4((uint64_t)v64, (uint64_t)v94+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v96, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      v91 += v92;
      --v89;
    }
    while (v89);
    swift_bridgeObjectRelease();
    v90 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v94 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v244[1] = v94;
  v240 = v90;
  v97 = swift_bridgeObjectRetain();
  sub_1BB386C6C(v97);
  v98 = swift_bridgeObjectRetain();
  sub_1BB386C6C(v98);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2CAB50, (uint64_t (*)(uint64_t))type metadata accessor for ZIndexable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_arrayDestroy();
  swift_bridgeObjectRetain();
  sub_1BB6D2E5C(&v240);
  swift_bridgeObjectRelease();
  v99 = v240;
  v242 = (uint64_t)v90;
  v100 = v240[2];
  swift_retain();
  v101 = v231;
  v228 = v100;
  if (!v100)
  {
    swift_release();
    v167 = MEMORY[0x1E0DEE9D8];
    v232 = MEMORY[0x1E0DEE9D8];
    goto LABEL_102;
  }
  v102 = 0;
  v220 = *MEMORY[0x1E0DBBB48];
  LODWORD(v223) = *MEMORY[0x1E0DBBB50];
  v199 = *MEMORY[0x1E0DBB2B8];
  v207 = *MEMORY[0x1E0DBB2B0];
  v103 = v208;
  v104 = v213;
  v225 = v99;
  while (v102 < v99[2])
  {
    v105 = *(_QWORD *)(v45 + 72);
    v227 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v106 = (uint64_t)v99 + v227 + v105 * v102;
    v107 = v229;
    sub_1BA4C2DD8(v106, v229, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    v108 = v107;
    v109 = v214;
    sub_1BA4C2DD8(v108, (uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v114 = (uint64_t)v109;
      v115 = v222;
      sub_1BA5193C4(v114, v222, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4C2DD8(v115, v212, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v117 = v232;
      if (EnumCaseMultiPayload < 2)
        goto LABEL_37;
      if (EnumCaseMultiPayload == 2)
      {
        v118 = *(_QWORD *)(v212 + 112);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v119 = *(_QWORD *)(v118 + 56);
        v120 = *(_BYTE *)(v118 + 64);
        swift_release();
        v121 = v223;
        v122 = v203;
        if ((v120 & 1) == 0)
        {
          *v203 = v119;
          v121 = v220;
        }
        v123 = v232;
        v101 = v231;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v232 + 104))(v122, v121, v231);
        v124 = (*(uint64_t (**)(uint64_t *, uint64_t))(v123 + 88))(v122, v101);
        v103 = v208;
        v104 = v213;
        if (v124 == v220)
        {
          (*(void (**)(uint64_t *, uint64_t))(v123 + 96))(v122, v101);
          v125 = *v122;
          goto LABEL_53;
        }
        if (v124 == (_DWORD)v223)
          goto LABEL_38;
        (*(void (**)(uint64_t *, uint64_t))(v123 + 8))(v203, v101);
      }
      else
      {
        sub_1BA4A2E80(v212, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_37:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v117 + 104))(v203, v223, v101);
LABEL_38:
        sub_1BA4C2DD8(v222, v205, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        v126 = swift_getEnumCaseMultiPayload();
        if (v126 < 2)
        {
          (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v200, v207, v103);
          v125 = 1000;
          goto LABEL_53;
        }
        if (v126 == 2)
        {
          v127 = *(_QWORD *)(v205 + 112);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v128 = *(_BYTE *)(*(_QWORD *)(v127
                                      + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                          + 208);
          v104 = v213;
          swift_release();
          v129 = *(void (**)(char *, _QWORD, uint64_t))(v104 + 104);
          if ((v128 & 1) != 0)
          {
            v130 = v200;
            v103 = v208;
            v129(v200, v207, v208);
            v101 = v231;
            v131 = v199;
          }
          else
          {
            v130 = v200;
            v131 = v199;
            v103 = v208;
            v129(v200, v199, v208);
            v101 = v231;
          }
        }
        else
        {
          v130 = v200;
          v131 = v199;
          (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v200, v199, v103);
          sub_1BA4A2E80(v205, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
        }
        v132 = (*(uint64_t (**)(char *, uint64_t))(v104 + 88))(v130, v103);
        if (v132 == v131)
        {
          v125 = 2000;
          goto LABEL_53;
        }
        if (v132 == v207)
        {
          v125 = 1000;
          goto LABEL_53;
        }
        (*(void (**)(char *, uint64_t))(v104 + 8))(v130, v103);
      }
      v125 = 0;
LABEL_53:
      sub_1BA4A2E80(v222, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      if (v125 < 0)
        goto LABEL_54;
      goto LABEL_19;
    }
    v239 = *v109;
    FeedGroupDecoration.decorationItem.getter();
    __swift_project_boxed_opaque_existential_1(&v240, v241);
    v110 = v215;
    sub_1BB87120C();
    v101 = v231;
    v111 = v232;
    v112 = (*(uint64_t (**)(uint64_t *, uint64_t))(v232 + 88))(v110, v231);
    if (v112 == v220)
    {
      (*(void (**)(uint64_t *, uint64_t))(v111 + 96))(v110, v101);
      v113 = *v110;
    }
    else
    {
      if (v112 != (_DWORD)v223)
        (*(void (**)(uint64_t *, uint64_t))(v111 + 8))(v110, v101);
      v113 = -100;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v240);
    swift_release();
    if (v113 < 0)
    {
LABEL_54:
      sub_1BA5193C4(v229, v211, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      v133 = v242;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AFA8(0, *(_QWORD *)(v133 + 16) + 1, 1);
        v101 = v231;
        v133 = v242;
      }
      v135 = *(_QWORD *)(v133 + 16);
      v134 = *(_QWORD *)(v133 + 24);
      if (v135 >= v134 >> 1)
      {
        sub_1BAC7AFA8(v134 > 1, v135 + 1, 1);
        v101 = v231;
        v133 = v242;
      }
      *(_QWORD *)(v133 + 16) = v135 + 1;
      sub_1BA5193C4(v211, v133 + v227 + v135 * v105, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      goto LABEL_20;
    }
LABEL_19:
    sub_1BA4A2E80(v229, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
LABEL_20:
    ++v102;
    v99 = v225;
    if (v228 == v102)
    {
      v229 = v242;
      swift_release();
      v136 = 0;
      v242 = MEMORY[0x1E0DEE9D8];
      v137 = (uint64_t)v99 + v227;
      v138 = v210;
      while (1)
      {
        if (v136 >= v99[2])
          goto LABEL_147;
        v139 = v226;
        sub_1BA4C2DD8(v137, v226, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
        sub_1BA4C2DD8(v139, (uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
        if (swift_getEnumCaseMultiPayload() != 1)
          break;
        v239 = *v138;
        FeedGroupDecoration.decorationItem.getter();
        __swift_project_boxed_opaque_existential_1(&v240, v241);
        v140 = v206;
        sub_1BB87120C();
        v101 = v231;
        v141 = v232;
        v142 = (*(uint64_t (**)(uint64_t *, uint64_t))(v232 + 88))(v140, v231);
        if (v142 == v220)
        {
          (*(void (**)(uint64_t *, uint64_t))(v141 + 96))(v140, v101);
          v143 = *v140;
        }
        else
        {
          if (v142 != (_DWORD)v223)
            (*(void (**)(uint64_t *, uint64_t))(v141 + 8))(v206, v101);
          v143 = -100;
        }
        v138 = v210;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v240);
        swift_release();
        if ((v143 & 0x8000000000000000) == 0)
        {
LABEL_95:
          sub_1BA5193C4(v226, v219, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
          v164 = v242;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BAC7AFA8(0, *(_QWORD *)(v164 + 16) + 1, 1);
            v101 = v231;
            v164 = v242;
          }
          v166 = *(_QWORD *)(v164 + 16);
          v165 = *(_QWORD *)(v164 + 24);
          if (v166 >= v165 >> 1)
          {
            sub_1BAC7AFA8(v165 > 1, v166 + 1, 1);
            v101 = v231;
            v164 = v242;
          }
          *(_QWORD *)(v164 + 16) = v166 + 1;
          sub_1BA5193C4(v219, v164 + v227 + v166 * v105, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
          goto LABEL_61;
        }
LABEL_60:
        sub_1BA4A2E80(v226, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
LABEL_61:
        ++v136;
        v137 += v105;
        v99 = v225;
        if (v228 == v136)
        {
          v232 = v242;
          v167 = v229;
LABEL_102:
          swift_release();
          v168 = *(_QWORD *)(v167 + 16);
          v169 = (_QWORD **)v217;
          if (v168)
          {
            v170 = v167 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
            v171 = *(_QWORD *)(v45 + 72);
            v229 = v167;
            swift_retain();
            do
            {
              sub_1BA4C2DD8(v170, (uint64_t)v169, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v240 = *v169;
                sub_1BB6DBCC0(&v240, v237, v69, v71, v73, v75);
                swift_release();
              }
              else
              {
                v172 = (uint64_t)v169;
                v173 = v230;
                sub_1BA5193C4(v172, v230, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
                sub_1BB6D49F0(v173, v237, v234, v235, v236);
                sub_1BA4A2E80(v173, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
              }
              v170 += v171;
              --v168;
              v169 = (_QWORD **)v217;
            }
            while (v168);
            swift_release_n();
          }
          else
          {
            swift_release();
          }
          v174 = v233 + 64;
          v175 = 1 << *(_BYTE *)(v233 + 32);
          v176 = -1;
          if (v175 < 64)
            v176 = ~(-1 << v175);
          v177 = v176 & *(_QWORD *)(v233 + 64);
          v178 = (unint64_t)(v175 + 63) >> 6;
          swift_bridgeObjectRetain();
          v179 = 0;
          while (1)
          {
            if (v177)
            {
              v180 = __clz(__rbit64(v177));
              v177 &= v177 - 1;
              v181 = v180 | (v179 << 6);
            }
            else
            {
              v182 = v179 + 1;
              if (__OFADD__(v179, 1))
                goto LABEL_148;
              if (v182 >= v178)
              {
LABEL_130:
                swift_release();
                v185 = *(_QWORD *)(v232 + 16);
                if (v185)
                {
                  v186 = v232
                       + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
                  v187 = *(_QWORD *)(v45 + 72);
                  swift_retain();
                  v45 = v237;
                  v188 = (_QWORD **)v216;
                  do
                  {
                    sub_1BA4C2DD8(v186, (uint64_t)v188, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
                    if (swift_getEnumCaseMultiPayload() == 1)
                    {
                      v240 = *v188;
                      sub_1BB6DBCC0(&v240, v45, v69, v71, v73, v75);
                      swift_release();
                    }
                    else
                    {
                      v189 = (uint64_t)v188;
                      v190 = v230;
                      sub_1BA5193C4(v189, v230, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
                      sub_1BB6D49F0(v190, v45, v234, v235, v236);
                      sub_1BA4A2E80(v190, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
                    }
                    v186 += v187;
                    --v185;
                    v188 = (_QWORD **)v216;
                  }
                  while (v185);
                  swift_release_n();
                }
                else
                {
                  swift_release();
                  v45 = v237;
                }
                if (qword_1EF2A6D30 != -1)
                  goto LABEL_150;
                goto LABEL_139;
              }
              v183 = *(_QWORD *)(v174 + 8 * v182);
              ++v179;
              if (!v183)
              {
                v179 = v182 + 1;
                if (v182 + 1 >= v178)
                  goto LABEL_130;
                v183 = *(_QWORD *)(v174 + 8 * v179);
                if (!v183)
                {
                  v179 = v182 + 2;
                  if (v182 + 2 >= v178)
                    goto LABEL_130;
                  v183 = *(_QWORD *)(v174 + 8 * v179);
                  if (!v183)
                  {
                    v184 = v182 + 3;
                    if (v184 >= v178)
                      goto LABEL_130;
                    v183 = *(_QWORD *)(v174 + 8 * v184);
                    if (!v183)
                    {
                      while (1)
                      {
                        v179 = v184 + 1;
                        if (__OFADD__(v184, 1))
                          goto LABEL_149;
                        if (v179 >= v178)
                          goto LABEL_130;
                        v183 = *(_QWORD *)(v174 + 8 * v179);
                        ++v184;
                        if (v183)
                          goto LABEL_129;
                      }
                    }
                    v179 = v184;
                  }
                }
              }
LABEL_129:
              v177 = (v183 - 1) & v183;
              v181 = __clz(__rbit64(v183)) + (v179 << 6);
            }
            v240 = *(_QWORD **)(*(_QWORD *)(v233 + 56) + 8 * v181);
            swift_retain();
            sub_1BB6D4E38((uint64_t)&v240);
            swift_release();
          }
        }
      }
      v144 = v221;
      sub_1BA5193C4((uint64_t)v138, v221, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4C2DD8(v144, v209, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      v145 = swift_getEnumCaseMultiPayload();
      v146 = v232;
      if (v145 < 2)
      {
LABEL_78:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v146 + 104))(v202, v223, v101);
      }
      else
      {
        if (v145 != 2)
        {
          sub_1BA4A2E80(v209, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
          goto LABEL_78;
        }
        v147 = *(_QWORD *)(v209 + 112);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v148 = *(_QWORD *)(v147 + 56);
        v149 = *(_BYTE *)(v147 + 64);
        swift_release();
        v150 = v223;
        v151 = v202;
        if ((v149 & 1) == 0)
        {
          *v202 = v148;
          v150 = v220;
        }
        v152 = v232;
        v101 = v231;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v232 + 104))(v151, v150, v231);
        v153 = (*(uint64_t (**)(uint64_t *, uint64_t))(v152 + 88))(v151, v101);
        v138 = v210;
        if (v153 == v220)
        {
          (*(void (**)(uint64_t *, uint64_t))(v152 + 96))(v151, v101);
          v154 = *v151;
          goto LABEL_94;
        }
        if (v153 != (_DWORD)v223)
        {
          (*(void (**)(uint64_t *, uint64_t))(v152 + 8))(v202, v101);
          goto LABEL_93;
        }
      }
      sub_1BA4C2DD8(v221, v204, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      v155 = swift_getEnumCaseMultiPayload();
      if (v155 >= 2)
      {
        if (v155 == 2)
        {
          v156 = *(_QWORD *)(v204 + 112);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v157 = *(_BYTE *)(*(_QWORD *)(v156
                                      + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                          + 208);
          swift_release();
          v158 = *(void (**)(char *, _QWORD, uint64_t))(v213 + 104);
          v160 = v201;
          if ((v157 & 1) != 0)
          {
            v162 = v208;
            v158(v201, v207, v208);
            v159 = v213;
            v138 = v210;
            v161 = v199;
          }
          else
          {
            v161 = v199;
            v162 = v208;
            v158(v201, v199, v208);
            v159 = v213;
            v138 = v210;
          }
        }
        else
        {
          v159 = v213;
          v160 = v201;
          v161 = v199;
          v162 = v208;
          (*(void (**)(char *, _QWORD, uint64_t))(v213 + 104))(v201, v199, v208);
          sub_1BA4A2E80(v204, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
        }
        v163 = (*(uint64_t (**)(char *, uint64_t))(v159 + 88))(v160, v162);
        if (v163 == v161)
        {
          v154 = 2000;
          v101 = v231;
        }
        else
        {
          v101 = v231;
          if (v163 == v207)
          {
            v154 = 1000;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v213 + 8))(v201, v208);
LABEL_93:
            v154 = 0;
          }
        }
      }
      else
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v213 + 104))(v201, v207, v208);
        v154 = 1000;
      }
LABEL_94:
      sub_1BA4A2E80(v221, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((v154 & 0x8000000000000000) == 0)
        goto LABEL_95;
      goto LABEL_60;
    }
  }
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  swift_once();
LABEL_139:
  sub_1BA50AD30(&qword_1EF2CAB48, v191, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory, (uint64_t)&unk_1BB93FCC8);
  sub_1BB86D210();
  sub_1BB86D804();
  if (qword_1EF2A6D38 != -1)
    swift_once();
  sub_1BB86D210();
  sub_1BB86D810();
  if (qword_1EF2A6D40 != -1)
    swift_once();
  sub_1BB86D210();
  if ((v240 & 1) != 0)
  {
    v192 = OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView;
    v193 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v45
                                                                 + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView), sel_layer));
    v194 = objc_msgSend((id)objc_opt_self(), sel_redColor);
    v195 = objc_msgSend(v194, sel_CGColor);

    objc_msgSend(v193, sel_setBorderColor_, v195);
    v196 = objc_msgSend(*(id *)(v45 + v192), sel_layer);
    objc_msgSend(v196, sel_setBorderWidth_, 1.0);

  }
  return v45;
}

void sub_1BB6D49F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  _QWORD v11[38];

  v11[1] = a5;
  v11[2] = a2;
  v6 = type metadata accessor for InternalErrorViewLayout.Context();
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v7);
  sub_1BA4C2DD8(a1, (uint64_t)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v10 = (char *)sub_1BB6D4ADC + 4 * byte_1BB93FC00[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1BB6D4ADC()
{
  uint64_t v0;
  void *v1;
  double *v2;
  id v3;
  id v4;

  v3 = objc_msgSend(objc_allocWithZone((Class)sub_1BB86F868()), sel_initWithFrame_, *v2, v2[1], v2[2], v2[3]);
  v4 = v1;
  sub_1BB6DB0D0(v3, *(_QWORD *)(v0 + 16), (uint64_t)v4, (uint64_t)v3, (uint64_t)v4);

}

void sub_1BB6D4E38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for FormatItemNodeLayoutContext();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1BB6D4F3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  double v7;
  double v8;
  double v9;
  double v10;
  Class v11;
  char *v12;
  void *v13;
  uint64_t (*v14)();
  Class v15;

  sub_1BA640FB4();
  v4 = v3;
  v5 = swift_projectBox();
  memcpy(v0 + 10, (const void *)(v5 + *(int *)(v4 + 48)), 0x130uLL);
  sub_1BA4C2DD8(v5, v2, type metadata accessor for HeadlineViewLayout.Context);
  v6 = objc_msgSend(*(id *)(v2 + *(int *)(v1 + 20) + 40), sel_hasVideo);
  v8 = *((double *)v0 + 10);
  v7 = *((double *)v0 + 11);
  v10 = *((double *)v0 + 12);
  v9 = *((double *)v0 + 13);
  if ((v6 & 1) != 0)
  {
    sub_1BA4B07F0(0, &qword_1ED3B38D0, (uint64_t (*)(uint64_t))type metadata accessor for VideoView, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
    v12 = (char *)objc_msgSend(objc_allocWithZone(v11), sel_initWithFrame_, v8, v7, v10, v9);
    MEMORY[0x1E0C80A78](v12);
    v14 = sub_1BB6DC598;
  }
  else
  {
    sub_1BA4B07F0(0, &qword_1ED3B38C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC8A0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
    v12 = (char *)objc_msgSend(objc_allocWithZone(v15), sel_initWithFrame_, v8, v7, v10, v9);
    MEMORY[0x1E0C80A78](v12);
    v14 = sub_1BB6DC50C;
  }
  sub_1BB6D5690(v13, v0[7], (void (*)(void))v14);
  objc_msgSend(*(id *)&v12[qword_1ED3B3818], sel_setHidden_, 1);

  return sub_1BA4A2E80(v2, type metadata accessor for HeadlineViewLayout.Context);
}

void sub_1BB6D5690(void *a1, uint64_t a2, void (*a3)(void))
{
  void *v6;
  double v7;
  double v8;
  double MaxX;
  double v10;
  double v11;
  double MaxY;
  double v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t i;
  id v25;
  void *v26;
  char v27;
  char v28;
  CGRect v29;
  CGRect v30;

  swift_getObjectType();
  v6 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView);
  objc_msgSend(v6, sel_addSubview_, a1);
  objc_msgSend(v6, sel_contentSize);
  v8 = v7;
  objc_msgSend(a1, sel_frame);
  MaxX = CGRectGetMaxX(v29);
  if (v8 <= MaxX)
    v8 = MaxX;
  objc_msgSend(v6, sel_contentSize);
  v11 = v10;
  objc_msgSend(a1, sel_frame);
  MaxY = CGRectGetMaxY(v30);
  if (v11 > MaxY)
    v13 = v11;
  else
    v13 = MaxY;
  objc_msgSend(v6, sel_setContentSize_, v8, v13);
  if (qword_1EF2A6D48 != -1)
    swift_once();
  sub_1BA50AD30(&qword_1EF2CAB48, v14, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory, (uint64_t)&unk_1BB93FCC8);
  sub_1BB86D210();
  if (v28 == 1)
  {
    v15 = objc_msgSend(a1, sel_layer);
    v16 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v17 = objc_msgSend(a1, sel_traitCollection);
    v18 = objc_msgSend(v16, sel_resolvedColorWithTraitCollection_, v17);

    v19 = objc_msgSend(v18, sel_CGColor);
    objc_msgSend(v15, sel_setBorderColor_, v19);

    v20 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v20, sel_setBorderWidth_, 1.0);

  }
  a3();
  if (qword_1EF2A6D50 != -1)
    swift_once();
  sub_1BB86D210();
  if (v27 == 1)
  {
    v21 = objc_msgSend(a1, sel_subviews);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
    v22 = sub_1BB872DB4();

    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v23)
        goto LABEL_15;
    }
    else
    {
      v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v23)
      {
LABEL_15:
        if (v23 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v23; ++i)
        {
          if ((v22 & 0xC000000000000001) != 0)
            v25 = (id)MEMORY[0x1BCCE4630](i, v22);
          else
            v25 = *(id *)(v22 + 8 * i + 32);
          v26 = v25;
          sub_1BB6D5C00(v25, a1);

        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB6D5A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, void *, uint64_t *, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  void (*v26)(uint64_t, uint64_t, void *, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_formatLayoutViewRenderer + 8);
  ObjectType = swift_getObjectType();
  v11 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  v12 = (void *)sub_1BB8700FC();
  v13 = v11 + *(_QWORD *)(*(_QWORD *)v11 + 144);
  v34 = v13;
  v14 = type metadata accessor for FormatItemNodeData();
  v15 = (uint64_t *)(v13 + *(int *)(v14 + 32));
  v17 = v15[1];
  v18 = v15[2];
  v36 = *v15;
  v16 = v36;
  v37 = v17;
  v38 = v18;
  v26 = *(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v10 + 88);
  sub_1BA8E9488(v36, v17);
  v29 = type metadata accessor for FormatItemNodeLayoutContext();
  v26(a2, v11, v12, a5, &v36, a6, a7, a8, v14, v29, &protocol witness table for FormatItemNodeLayoutContext, ObjectType, v10);

  sub_1BA8E94B8(v16, v17);
  v19 = *(_QWORD *)(a3 + 64);
  v20 = (void *)sub_1BB8700FC();
  v21 = *v15;
  v22 = v15[1];
  v23 = v15[2];
  v36 = v21;
  v37 = v22;
  v38 = v23;
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t *, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v10 + 96);
  sub_1BA8E9488(v21, v22);
  v24(a2, v34, v19, v20, &v36, a7, a8, v29, &protocol witness table for FormatItemNodeLayoutContext, ObjectType, v10);

  return sub_1BA8E94B8(v21, v22);
}

void sub_1BB6D5C00(void *a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t i;
  id v14;
  void *v15;

  v4 = objc_msgSend(a1, sel_layer);
  v5 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v6 = objc_msgSend(a2, sel_traitCollection);
  v7 = objc_msgSend(v5, sel_resolvedColorWithTraitCollection_, v6);

  v8 = objc_msgSend(v7, sel_CGColor);
  objc_msgSend(v4, sel_setBorderColor_, v8);

  v9 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v9, sel_setBorderWidth_, 1.0);

  v10 = objc_msgSend(a1, sel_subviews);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
  v11 = sub_1BB872DB4();

  if (!(v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_10;
LABEL_3:
  if (v12 >= 1)
  {
    for (i = 0; i != v12; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x1BCCE4630](i, v11);
      else
        v14 = *(id *)(v11 + 8 * i + 32);
      v15 = v14;
      sub_1BB6D5C00(v14, a2);

    }
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t type metadata accessor for DebugGroupLayoutViewFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DebugItemDragInteraction()
{
  return objc_opt_self();
}

uint64_t sub_1BB6D6044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, _QWORD, uint64_t);
  int v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v1 = v0;
  v2 = sub_1BB870E88();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - v9;
  v11 = sub_1BB871170();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2)
    goto LABEL_6;
  if (EnumCaseMultiPayload != 2)
  {
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_6:
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DBBB50], v11);
    goto LABEL_7;
  }
  v31 = v3;
  v32 = v2;
  v16 = *((_QWORD *)v10 + 14);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 56);
  v18 = *(_BYTE *)(v16 + 64);
  swift_release();
  if ((v18 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DBBB50], v11);
    v19 = *MEMORY[0x1E0DBBB48];
  }
  else
  {
    *(_QWORD *)v14 = v17;
    v19 = *MEMORY[0x1E0DBBB48];
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DBBB48], v11);
  }
  v3 = v31;
  v2 = v32;
  v28 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  if (v28 == v19)
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    return *(_QWORD *)v14;
  }
  if (v28 != *MEMORY[0x1E0DBBB50])
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return 0;
  }
LABEL_7:
  sub_1BA4C2DD8(v1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
  v20 = swift_getEnumCaseMultiPayload();
  if (v20 < 2)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v33, *MEMORY[0x1E0DBB2B0], v2);
    return 1000;
  }
  if (v20 == 2)
  {
    v22 = v3;
    v23 = *((_QWORD *)v7 + 14);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = *(_BYTE *)(*(_QWORD *)(v23
                               + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                   + 208);
    swift_release();
    v25 = *(void (**)(char *, _QWORD, uint64_t))(v22 + 104);
    if ((v24 & 1) != 0)
    {
      v27 = v33;
      v25(v33, *MEMORY[0x1E0DBB2B0], v2);
      v26 = *MEMORY[0x1E0DBB2B8];
    }
    else
    {
      v26 = *MEMORY[0x1E0DBB2B8];
      v27 = v33;
      v25(v33, *MEMORY[0x1E0DBB2B8], v2);
    }
    v3 = v22;
  }
  else
  {
    v26 = *MEMORY[0x1E0DBB2B8];
    v27 = v33;
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v33, *MEMORY[0x1E0DBB2B8], v2);
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
  }
  v29 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v27, v2);
  if (v29 == v26)
    return 2000;
  if (v29 == *MEMORY[0x1E0DBB2B0])
    return 1000;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v27, v2);
  return 0;
}

void sub_1BB6D6410(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t *v96;
  uint64_t *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int EnumCaseMultiPayload;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  int v141;
  unsigned int v142;
  uint64_t v143;
  char v144;
  void (*v145)(char *, _QWORD, uint64_t);
  uint64_t v146;
  char *v147;
  unsigned int v148;
  int v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  int v165;
  unsigned int v166;
  uint64_t v167;
  char v168;
  void (*v169)(char *, _QWORD, uint64_t);
  uint64_t v170;
  char *v171;
  unsigned int v172;
  uint64_t v173;
  int v174;
  _BOOL4 v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  unsigned int v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  char v204;
  uint64_t v205;
  int v206;
  unsigned int v207;
  uint64_t v208;
  char v209;
  void (*v210)(char *, _QWORD, uint64_t);
  uint64_t v211;
  char *v212;
  unsigned int v213;
  uint64_t v214;
  int v215;
  uint64_t *v216;
  uint64_t v217;
  int v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unsigned int v222;
  uint64_t v223;
  uint64_t v224;
  char v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t *v228;
  int v229;
  unsigned int v230;
  uint64_t v231;
  char v232;
  void (*v233)(char *, _QWORD, uint64_t);
  uint64_t v234;
  char *v235;
  unsigned int v236;
  uint64_t v237;
  int v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  unint64_t v242;
  char *v243;
  char *v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  BOOL v256;
  unint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  BOOL v266;
  uint64_t v267;
  char v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  BOOL v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  _QWORD *v285;
  char *v286;
  char *v287;
  uint64_t v288;
  char *v289;
  unint64_t v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  unint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  uint64_t v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  uint64_t v314;
  _QWORD *v315;
  uint64_t v316;
  uint64_t *v317;
  uint64_t *v318;
  uint64_t *v319;
  uint64_t *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  uint64_t *v328;
  char *v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t *v335;
  unint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  unsigned int v340;
  char *v341;
  char *v342;
  uint64_t *v343;
  uint64_t *v344;
  uint64_t *v345;
  uint64_t v346;
  uint64_t v347;
  unsigned int v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t *v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t *v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  unsigned int v360;
  uint64_t v361;
  unsigned int v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;

  v2 = sub_1BB870E88();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v305 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v305 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v305 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v305 - v13;
  v15 = sub_1BB871170();
  v367 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v344 = (uint64_t *)((char *)&v305 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v345 = (uint64_t *)((char *)&v305 - v18);
  MEMORY[0x1E0C80A78](v19);
  v356 = (uint64_t *)((char *)&v305 - v20);
  MEMORY[0x1E0C80A78](v21);
  v343 = (uint64_t *)((char *)&v305 - v22);
  MEMORY[0x1E0C80A78](v23);
  v318 = (uint64_t *)((char *)&v305 - v24);
  MEMORY[0x1E0C80A78](v25);
  v320 = (uint64_t *)((char *)&v305 - v26);
  MEMORY[0x1E0C80A78](v27);
  v317 = (uint64_t *)((char *)&v305 - v28);
  MEMORY[0x1E0C80A78](v29);
  v319 = (uint64_t *)((char *)&v305 - v30);
  MEMORY[0x1E0C80A78](v31);
  v335 = (uint64_t *)((char *)&v305 - v32);
  MEMORY[0x1E0C80A78](v33);
  v308 = (char *)&v305 - v34;
  v363 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v363);
  v347 = (uint64_t)&v305 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v350 = (uint64_t)&v305 - v37;
  MEMORY[0x1E0C80A78](v38);
  v359 = (uint64_t)&v305 - v39;
  MEMORY[0x1E0C80A78](v40);
  v346 = (uint64_t)&v305 - v41;
  MEMORY[0x1E0C80A78](v42);
  v349 = (uint64_t)&v305 - v43;
  MEMORY[0x1E0C80A78](v44);
  v358 = (uint64_t)&v305 - v45;
  MEMORY[0x1E0C80A78](v46);
  v322 = (uint64_t)&v305 - v47;
  MEMORY[0x1E0C80A78](v48);
  v324 = (uint64_t)&v305 - v49;
  MEMORY[0x1E0C80A78](v50);
  v332 = (uint64_t)&v305 - v51;
  MEMORY[0x1E0C80A78](v52);
  v321 = (uint64_t)&v305 - v53;
  MEMORY[0x1E0C80A78](v54);
  v323 = (uint64_t)&v305 - v55;
  MEMORY[0x1E0C80A78](v56);
  v331 = (uint64_t)&v305 - v57;
  MEMORY[0x1E0C80A78](v58);
  v309 = (uint64_t)&v305 - v59;
  v371 = type metadata accessor for ZIndexable();
  v337 = *(_QWORD *)(v371 - 8);
  MEMORY[0x1E0C80A78](v371);
  v327 = (uint64_t)&v305 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v61);
  v364 = (uint64_t)&v305 - v62;
  MEMORY[0x1E0C80A78](v63);
  v352 = (char *)&v305 - v64;
  MEMORY[0x1E0C80A78](v65);
  v351 = (uint64_t *)((char *)&v305 - v66);
  MEMORY[0x1E0C80A78](v67);
  v372 = (uint64_t)&v305 - v68;
  MEMORY[0x1E0C80A78](v69);
  v366 = (uint64_t)&v305 - v70;
  MEMORY[0x1E0C80A78](v71);
  v330 = (char *)&v305 - v72;
  MEMORY[0x1E0C80A78](v73);
  v328 = (uint64_t *)((char *)&v305 - v74);
  MEMORY[0x1E0C80A78](v75);
  v338 = (uint64_t)&v305 - v76;
  MEMORY[0x1E0C80A78](v77);
  v334 = (uint64_t)&v305 - v78;
  MEMORY[0x1E0C80A78](v79);
  v310 = (char *)&v305 - v80;
  MEMORY[0x1E0C80A78](v81);
  v83 = (uint64_t *)((char *)&v305 - v82);
  MEMORY[0x1E0C80A78](v84);
  v314 = (uint64_t)&v305 - v85;
  MEMORY[0x1E0C80A78](v86);
  v311 = (uint64_t)&v305 - v87;
  v370 = a1;
  v88 = a1[1];
  v89 = sub_1BB8741F4();
  if (v89 >= v88)
  {
    if (v88 < 0)
      goto LABEL_283;
    if (v88)
      sub_1BB6D8934(0, v88, 1, v370);
    return;
  }
  if (v88 >= 0)
    v90 = v88;
  else
    v90 = v88 + 1;
  if (v88 < -1)
    goto LABEL_291;
  v329 = v11;
  v307 = v89;
  if (v88 < 2)
  {
    v336 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v337 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v337 + 80));
    if (v88 != 1)
    {
      v98 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v95 = (char *)MEMORY[0x1E0DEE9D8];
      v296 = MEMORY[0x1E0DEE9D8];
LABEL_249:
      v297 = v339;
      if (v98 >= 2)
      {
        v298 = *v370;
        do
        {
          v299 = v98 - 2;
          if (v98 < 2)
            goto LABEL_278;
          if (!v298)
            goto LABEL_290;
          v300 = v95;
          v301 = *(_QWORD *)&v95[16 * v299 + 32];
          v302 = *(_QWORD *)&v95[16 * v98 + 24];
          sub_1BB6D95EC(v298 + *(_QWORD *)(v337 + 72) * v301, v298 + *(_QWORD *)(v337 + 72) * *(_QWORD *)&v95[16 * v98 + 16], v298 + *(_QWORD *)(v337 + 72) * v302, v336);
          if (v297)
            break;
          if (v302 < v301)
            goto LABEL_279;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v300 = sub_1BACAB464((uint64_t)v300);
          if (v299 >= *((_QWORD *)v300 + 2))
            goto LABEL_280;
          v303 = &v300[16 * v299 + 32];
          *(_QWORD *)v303 = v301;
          *((_QWORD *)v303 + 1) = v302;
          v304 = *((_QWORD *)v300 + 2);
          if (v98 > v304)
            goto LABEL_281;
          memmove(&v300[16 * v98 + 16], &v300[16 * v98 + 32], 16 * (v304 - v98));
          v95 = v300;
          *((_QWORD *)v300 + 2) = v304 - 1;
          v98 = v304 - 1;
        }
        while (v304 > 2);
      }
LABEL_260:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v296 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    v306 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v91 = v90 >> 1;
    v92 = sub_1BB872E74();
    *(_QWORD *)(v92 + 16) = v91;
    v93 = *(unsigned __int8 *)(v337 + 80);
    v306 = v92;
    v336 = v92 + ((v93 + 32) & ~v93);
  }
  v94 = 0;
  v360 = *MEMORY[0x1E0DBBB48];
  v362 = *MEMORY[0x1E0DBBB50];
  v340 = *MEMORY[0x1E0DBB2B8];
  v348 = *MEMORY[0x1E0DBB2B0];
  v95 = (char *)MEMORY[0x1E0DEE9D8];
  v353 = v2;
  v355 = v3;
  v342 = v5;
  v341 = v8;
  v313 = v14;
  v361 = v15;
  v96 = v356;
  v97 = v335;
  v315 = v83;
  while (2)
  {
    v99 = v94 + 1;
    v326 = v95;
    v333 = v94;
    v369 = v88;
    if (v94 + 1 >= v88)
      goto LABEL_198;
    v100 = v94;
    v101 = *v370;
    v102 = *(_QWORD *)(v337 + 72);
    v357 = v94 + 1;
    v103 = v311;
    sub_1BA4C2DD8(v101 + v102 * v99, v311, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    v316 = v101;
    sub_1BA4C2DD8(v101 + v102 * v100, v314, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    sub_1BA4C2DD8(v103, (uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v375 = *v83;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter();
      __swift_project_boxed_opaque_existential_1(&v373, v374);
      v104 = (uint64_t *)v308;
      sub_1BB87120C();
      v105 = v367;
      v106 = v361;
      v107 = (*(uint64_t (**)(uint64_t *, uint64_t))(v367 + 88))(v104, v361);
      if (v107 == v360)
      {
        (*(void (**)(uint64_t *, uint64_t))(v105 + 96))(v104, v106);
        v108 = *v104;
      }
      else
      {
        if (v107 != v362)
          (*(void (**)(char *, uint64_t))(v367 + 8))(v308, v361);
        v108 = -100;
      }
      v368 = v108;
      v96 = v356;
      v110 = (uint64_t *)v310;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v373);
      swift_release_n();
    }
    else
    {
      v109 = v309;
      sub_1BA5193C4((uint64_t)v83, v309, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      v368 = sub_1BB6D6044();
      sub_1BA4A2E80(v109, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      v110 = (uint64_t *)v310;
    }
    sub_1BA4C2DD8(v314, (uint64_t)v110, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v375 = *v110;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter();
      __swift_project_boxed_opaque_existential_1(&v373, v374);
      sub_1BB87120C();
      v111 = v367;
      v112 = v361;
      v113 = (*(uint64_t (**)(uint64_t *, uint64_t))(v367 + 88))(v97, v361);
      if (v113 == v360)
      {
        (*(void (**)(uint64_t *, uint64_t))(v111 + 96))(v97, v112);
        v114 = *v97;
      }
      else
      {
        if (v113 != v362)
          (*(void (**)(uint64_t *, uint64_t))(v367 + 8))(v97, v361);
        v114 = -100;
      }
      v365 = v114;
      v96 = v356;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v373);
      swift_release_n();
    }
    else
    {
      v115 = (uint64_t)v110;
      v116 = v309;
      sub_1BA5193C4(v115, v309, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      v365 = sub_1BB6D6044();
      sub_1BA4A2E80(v116, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
    }
    sub_1BA4A2E80(v314, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    sub_1BA4A2E80(v311, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    v94 = v333;
    v99 = v333 + 2;
    v117 = v369;
    if (v333 + 2 >= v369)
      goto LABEL_103;
    v354 = v102 * v357;
    v118 = v316;
    v325 = v102 * v99;
    while (1)
    {
      v357 = v99;
      v119 = v334;
      sub_1BA4C2DD8(v118 + v325, v334, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      sub_1BA4C2DD8(v118 + v354, v338, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      v120 = v119;
      v121 = v328;
      sub_1BA4C2DD8(v120, (uint64_t)v328, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        v129 = (uint64_t)v121;
        v130 = v331;
        sub_1BA5193C4(v129, v331, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        sub_1BA4C2DD8(v130, v323, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v128 = v367;
        v132 = (uint64_t *)v330;
        if (EnumCaseMultiPayload >= 2)
        {
          if (EnumCaseMultiPayload == 2)
          {
            v133 = *(_QWORD *)(v323 + 112);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v134 = *(_QWORD *)(v133 + 56);
            v135 = *(_BYTE *)(v133 + 64);
            swift_release();
            v136 = v362;
            v137 = v319;
            if ((v135 & 1) == 0)
            {
              *v319 = v134;
              v136 = v360;
            }
            v138 = v367;
            v139 = v137;
            v140 = v361;
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v367 + 104))(v137, v136, v361);
            v141 = (*(uint64_t (**)(uint64_t *, uint64_t))(v138 + 88))(v139, v140);
            if (v141 == v360)
            {
              (*(void (**)(uint64_t *, uint64_t))(v138 + 96))(v139, v140);
              v126 = *v139;
              v127 = v329;
              v128 = v138;
LABEL_66:
              sub_1BA4A2E80(v331, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
              goto LABEL_67;
            }
            v127 = v329;
            v128 = v138;
            if (v141 != v362)
            {
              (*(void (**)(uint64_t *, uint64_t))(v138 + 8))(v319, v361);
              goto LABEL_65;
            }
LABEL_50:
            sub_1BA4C2DD8(v331, v321, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
            v142 = swift_getEnumCaseMultiPayload();
            if (v142 < 2)
            {
              (*(void (**)(char *, _QWORD, uint64_t))(v355 + 104))(v313, v348, v2);
              v126 = 1000;
              v132 = (uint64_t *)v330;
              goto LABEL_66;
            }
            v132 = (uint64_t *)v330;
            if (v142 == 2)
            {
              v143 = *(_QWORD *)(v321 + 112);
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v144 = *(_BYTE *)(*(_QWORD *)(v143
                                          + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                              + 208);
              swift_release();
              v145 = *(void (**)(char *, _QWORD, uint64_t))(v355 + 104);
              v147 = v313;
              if ((v144 & 1) != 0)
              {
                v145(v313, v348, v2);
                v146 = v355;
                v127 = v329;
                v148 = v340;
              }
              else
              {
                v148 = v340;
                v145(v313, v340, v2);
                v146 = v355;
                v127 = v329;
              }
            }
            else
            {
              v146 = v355;
              v147 = v313;
              v148 = v340;
              (*(void (**)(char *, _QWORD, uint64_t))(v355 + 104))(v313, v340, v2);
              sub_1BA4A2E80(v321, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
            }
            v149 = (*(uint64_t (**)(char *, uint64_t))(v146 + 88))(v147, v2);
            if (v149 == v148)
            {
              v126 = 2000;
              v128 = v367;
              goto LABEL_66;
            }
            v128 = v367;
            if (v149 == v348)
            {
              v126 = 1000;
              goto LABEL_66;
            }
            (*(void (**)(char *, uint64_t))(v355 + 8))(v313, v2);
LABEL_65:
            v126 = 0;
            goto LABEL_66;
          }
          sub_1BA4A2E80(v323, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
        }
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v128 + 104))(v319, v362, v361);
        v127 = v329;
        goto LABEL_50;
      }
      v375 = *v121;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter();
      __swift_project_boxed_opaque_existential_1(&v373, v374);
      v122 = v317;
      sub_1BB87120C();
      v123 = v367;
      v124 = v361;
      v125 = (*(uint64_t (**)(uint64_t *, uint64_t))(v367 + 88))(v122, v361);
      if (v125 == v360)
      {
        (*(void (**)(uint64_t *, uint64_t))(v123 + 96))(v122, v124);
        v126 = *v122;
        v127 = v329;
        v128 = v123;
      }
      else
      {
        v127 = v329;
        if (v125 == v362)
        {
          v126 = -100;
          v128 = v367;
        }
        else
        {
          v128 = v367;
          (*(void (**)(uint64_t *, uint64_t))(v367 + 8))(v122, v361);
          v126 = -100;
        }
      }
      v132 = (uint64_t *)v330;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v373);
      swift_release_n();
LABEL_67:
      sub_1BA4C2DD8(v338, (uint64_t)v132, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        v155 = (uint64_t)v132;
        v156 = v332;
        sub_1BA5193C4(v155, v332, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        sub_1BA4C2DD8(v156, v324, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        v157 = swift_getEnumCaseMultiPayload();
        if (v157 >= 2)
        {
          if (v157 == 2)
          {
            v158 = *(_QWORD *)(v324 + 112);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v159 = *(_QWORD *)(v158 + 56);
            v160 = *(_BYTE *)(v158 + 64);
            swift_release();
            v161 = v362;
            if ((v160 & 1) == 0)
            {
              *v320 = v159;
              v161 = v360;
            }
            v162 = v367;
            v163 = v320;
            v164 = v361;
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v367 + 104))(v320, v161, v361);
            v165 = (*(uint64_t (**)(uint64_t *, uint64_t))(v162 + 88))(v163, v164);
            if (v165 == v360)
            {
              (*(void (**)(uint64_t *, uint64_t))(v162 + 96))(v163, v164);
              v154 = *v163;
              goto LABEL_84;
            }
            v127 = v329;
            if (v165 != v362)
            {
              (*(void (**)(uint64_t *, uint64_t))(v162 + 8))(v320, v361);
              v154 = 0;
              goto LABEL_84;
            }
LABEL_82:
            sub_1BA4C2DD8(v332, v322, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
            v166 = swift_getEnumCaseMultiPayload();
            if (v166 >= 2)
            {
              v96 = v356;
              if (v166 == 2)
              {
                v167 = *(_QWORD *)(v322 + 112);
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v168 = *(_BYTE *)(*(_QWORD *)(v167
                                            + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                                + 208);
                swift_release();
                v169 = *(void (**)(char *, _QWORD, uint64_t))(v355 + 104);
                v171 = v329;
                if ((v168 & 1) != 0)
                {
                  v173 = v353;
                  v169(v329, v348, v353);
                  v170 = v355;
                  v172 = v340;
                }
                else
                {
                  v172 = v340;
                  v173 = v353;
                  v169(v329, v340, v353);
                  v170 = v355;
                }
              }
              else
              {
                v170 = v355;
                v171 = v329;
                v172 = v340;
                v173 = v353;
                (*(void (**)(char *, _QWORD, uint64_t))(v355 + 104))(v329, v340, v353);
                sub_1BA4A2E80(v322, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
              }
              v174 = (*(uint64_t (**)(char *, uint64_t))(v170 + 88))(v171, v173);
              if (v174 == v172)
              {
                v154 = 2000;
              }
              else if (v174 == v348)
              {
                v154 = 1000;
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v355 + 8))(v171, v353);
                v154 = 0;
              }
              goto LABEL_97;
            }
            (*(void (**)(char *, _QWORD, uint64_t))(v355 + 104))(v127, v348, v353);
            v154 = 1000;
LABEL_84:
            v96 = v356;
LABEL_97:
            sub_1BA4A2E80(v332, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
            goto LABEL_98;
          }
          sub_1BA4A2E80(v324, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
        }
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v128 + 104))(v320, v362, v361);
        goto LABEL_82;
      }
      v375 = *v132;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter();
      v150 = v128;
      __swift_project_boxed_opaque_existential_1(&v373, v374);
      v151 = v318;
      sub_1BB87120C();
      v152 = v361;
      v153 = (*(uint64_t (**)(uint64_t *, uint64_t))(v150 + 88))(v151, v361);
      if (v153 == v360)
      {
        (*(void (**)(uint64_t *, uint64_t))(v150 + 96))(v151, v152);
        v154 = *v151;
      }
      else
      {
        if (v153 != v362)
          (*(void (**)(uint64_t *, uint64_t))(v367 + 8))(v151, v361);
        v154 = -100;
      }
      v96 = v356;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v373);
      swift_release_n();
      v83 = v315;
LABEL_98:
      v175 = v368 < v365;
      sub_1BA4A2E80(v338, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      sub_1BA4A2E80(v334, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      if (((v175 ^ (v126 >= v154)) & 1) == 0)
        break;
      v99 = v357 + 1;
      v118 += v102;
      v117 = v369;
      v2 = v353;
      if (v369 == v357 + 1)
      {
        v99 = v369;
        v97 = v335;
        v94 = v333;
        goto LABEL_103;
      }
    }
    v97 = v335;
    v99 = v357;
    v94 = v333;
    v117 = v369;
LABEL_103:
    if (v368 >= v365)
      goto LABEL_116;
    if (v99 < v94)
      goto LABEL_284;
    if (v94 >= v99)
    {
LABEL_116:
      v185 = v361;
      if (v99 < v117)
        goto LABEL_119;
      goto LABEL_198;
    }
    v176 = 0;
    v177 = v102 * (v99 - 1);
    v178 = v99 * v102;
    v179 = v94;
    v180 = v94 * v102;
    v312 = v102;
    do
    {
      if (v179 != v99 + v176 - 1)
      {
        v182 = v316;
        if (!v316)
          goto LABEL_289;
        v183 = v99;
        v184 = v316 + v180;
        v368 = v316 + v177;
        sub_1BA5193C4(v316 + v180, v327, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
        if (v180 < v177 || v184 >= v182 + v178)
        {
          v181 = v368;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v181 = v368;
          if (v180 != v177)
            swift_arrayInitWithTakeBackToFront();
        }
        sub_1BA5193C4(v327, v181, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
        v99 = v183;
        v102 = v312;
      }
      ++v179;
      --v176;
      v177 -= v102;
      v178 -= v102;
      v180 += v102;
    }
    while (v179 < v99 + v176);
    v185 = v361;
    v96 = v356;
    v97 = v335;
    v94 = v333;
    if (v99 >= v369)
      goto LABEL_198;
LABEL_119:
    if (__OFSUB__(v99, v94))
      goto LABEL_282;
    if (v99 - v94 >= v307)
    {
LABEL_197:
      v94 = v333;
      goto LABEL_198;
    }
    v94 = v333;
    if (__OFADD__(v333, v307))
      goto LABEL_285;
    v186 = v369;
    if (v333 + v307 < v369)
      v186 = v333 + v307;
    if (v186 >= v333)
    {
      if (v99 != v186)
      {
        v187 = *(_QWORD *)(v337 + 72);
        v369 = v187 * (v99 - 1);
        v354 = v187;
        v368 = v99 * v187;
        v325 = v186;
        while (1)
        {
          v189 = 0;
          v190 = v333;
          v357 = v99;
          while (1)
          {
            v191 = *v370;
            v365 = v368 + v189;
            v192 = v366;
            sub_1BA4C2DD8(v368 + v189 + v191, v366, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
            sub_1BA4C2DD8(v369 + v189 + v191, v372, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
            v193 = v351;
            sub_1BA4C2DD8(v192, (uint64_t)v351, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
            if (swift_getEnumCaseMultiPayload() != 1)
            {
              v198 = (uint64_t)v193;
              v199 = v358;
              sub_1BA5193C4(v198, v358, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
              sub_1BA4C2DD8(v199, v349, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
              v200 = swift_getEnumCaseMultiPayload();
              v194 = v367;
              v201 = v343;
              if (v200 < 2)
                goto LABEL_145;
              if (v200 == 2)
              {
                v202 = *(_QWORD *)(v349 + 112);
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v203 = *(_QWORD *)(v202 + 56);
                v204 = *(_BYTE *)(v202 + 64);
                swift_release();
                v205 = v362;
                if ((v204 & 1) == 0)
                {
                  *v201 = v203;
                  v205 = v360;
                }
                v194 = v367;
                v185 = v361;
                (*(void (**)(uint64_t *, uint64_t, uint64_t))(v367 + 104))(v201, v205, v361);
                v206 = (*(uint64_t (**)(uint64_t *, uint64_t))(v194 + 88))(v201, v185);
                if (v206 == v360)
                {
                  (*(void (**)(uint64_t *, uint64_t))(v194 + 96))(v201, v185);
                  v196 = *v201;
                }
                else
                {
                  if (v206 == v362)
                    goto LABEL_146;
                  (*(void (**)(uint64_t *, uint64_t))(v194 + 8))(v201, v185);
                  v196 = 0;
                }
LABEL_148:
                v197 = (uint64_t *)v352;
              }
              else
              {
                sub_1BA4A2E80(v349, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_145:
                (*(void (**)(uint64_t *, _QWORD, uint64_t))(v194 + 104))(v201, v362, v185);
LABEL_146:
                sub_1BA4C2DD8(v358, v346, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
                v207 = swift_getEnumCaseMultiPayload();
                if (v207 < 2)
                {
                  (*(void (**)(char *, _QWORD, uint64_t))(v355 + 104))(v341, v348, v353);
                  v196 = 1000;
                  goto LABEL_148;
                }
                if (v207 == 2)
                {
                  v208 = *(_QWORD *)(v346 + 112);
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v209 = *(_BYTE *)(*(_QWORD *)(v208
                                              + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                                  + 208);
                  swift_release();
                  v210 = *(void (**)(char *, _QWORD, uint64_t))(v355 + 104);
                  v212 = v341;
                  if ((v209 & 1) != 0)
                  {
                    v214 = v353;
                    v210(v341, v348, v353);
                    v211 = v355;
                    v185 = v361;
                    v213 = v340;
                  }
                  else
                  {
                    v213 = v340;
                    v214 = v353;
                    v210(v341, v340, v353);
                    v211 = v355;
                    v185 = v361;
                  }
                }
                else
                {
                  v211 = v355;
                  v212 = v341;
                  v213 = v340;
                  v214 = v353;
                  (*(void (**)(char *, _QWORD, uint64_t))(v355 + 104))(v341, v340, v353);
                  sub_1BA4A2E80(v346, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
                }
                v215 = (*(uint64_t (**)(char *, uint64_t))(v211 + 88))(v212, v214);
                if (v215 == v213)
                {
                  v196 = 2000;
                  v194 = v367;
                  v197 = (uint64_t *)v352;
                }
                else
                {
                  v194 = v367;
                  v197 = (uint64_t *)v352;
                  if (v215 == v348)
                  {
                    v196 = 1000;
                  }
                  else
                  {
                    (*(void (**)(char *, uint64_t))(v355 + 8))(v341, v353);
                    v196 = 0;
                  }
                }
              }
              sub_1BA4A2E80(v358, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
              goto LABEL_162;
            }
            v375 = *v193;
            swift_retain();
            FeedGroupDecoration.decorationItem.getter();
            __swift_project_boxed_opaque_existential_1(&v373, v374);
            v185 = v361;
            sub_1BB87120C();
            v194 = v367;
            v195 = (*(uint64_t (**)(uint64_t *, uint64_t))(v367 + 88))(v96, v185);
            if (v195 == v360)
            {
              (*(void (**)(uint64_t *, uint64_t))(v194 + 96))(v96, v185);
              v196 = *v96;
              v197 = (uint64_t *)v352;
            }
            else
            {
              v197 = (uint64_t *)v352;
              if (v195 != v362)
                (*(void (**)(uint64_t *, uint64_t))(v194 + 8))(v96, v185);
              v196 = -100;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v373);
            swift_release_n();
LABEL_162:
            sub_1BA4C2DD8(v372, (uint64_t)v197, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
            if (swift_getEnumCaseMultiPayload() != 1)
            {
              v220 = (uint64_t)v197;
              v221 = v359;
              sub_1BA5193C4(v220, v359, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
              sub_1BA4C2DD8(v221, v350, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
              v222 = swift_getEnumCaseMultiPayload();
              if (v222 < 2)
                goto LABEL_176;
              if (v222 == 2)
              {
                v223 = *(_QWORD *)(v350 + 112);
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v224 = *(_QWORD *)(v223 + 56);
                v225 = *(_BYTE *)(v223 + 64);
                swift_release();
                v226 = v362;
                if ((v225 & 1) == 0)
                {
                  *v345 = v224;
                  v226 = v360;
                }
                v227 = v367;
                v228 = v345;
                v185 = v361;
                (*(void (**)(uint64_t *, uint64_t, uint64_t))(v367 + 104))(v345, v226, v361);
                v229 = (*(uint64_t (**)(uint64_t *, uint64_t))(v227 + 88))(v228, v185);
                if (v229 != v360)
                {
                  if (v229 == v362)
                    goto LABEL_177;
                  (*(void (**)(uint64_t *, uint64_t))(v227 + 8))(v345, v185);
                  goto LABEL_191;
                }
                (*(void (**)(uint64_t *, uint64_t))(v227 + 96))(v228, v185);
                v219 = *v228;
              }
              else
              {
                sub_1BA4A2E80(v350, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_176:
                (*(void (**)(uint64_t *, _QWORD, uint64_t))(v194 + 104))(v345, v362, v185);
LABEL_177:
                sub_1BA4C2DD8(v359, v347, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
                v230 = swift_getEnumCaseMultiPayload();
                if (v230 < 2)
                {
                  (*(void (**)(char *, _QWORD, uint64_t))(v355 + 104))(v342, v348, v353);
                  goto LABEL_179;
                }
                if (v230 == 2)
                {
                  v231 = *(_QWORD *)(v347 + 112);
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v232 = *(_BYTE *)(*(_QWORD *)(v231
                                              + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                                  + 208);
                  swift_release();
                  v233 = *(void (**)(char *, _QWORD, uint64_t))(v355 + 104);
                  v235 = v342;
                  if ((v232 & 1) != 0)
                  {
                    v237 = v353;
                    v233(v342, v348, v353);
                    v234 = v355;
                    v185 = v361;
                    v236 = v340;
                  }
                  else
                  {
                    v236 = v340;
                    v237 = v353;
                    v233(v342, v340, v353);
                    v234 = v355;
                    v185 = v361;
                  }
                }
                else
                {
                  v234 = v355;
                  v235 = v342;
                  v236 = v340;
                  v237 = v353;
                  (*(void (**)(char *, _QWORD, uint64_t))(v355 + 104))(v342, v340, v353);
                  sub_1BA4A2E80(v347, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
                }
                v238 = (*(uint64_t (**)(char *, uint64_t))(v234 + 88))(v235, v237);
                if (v238 == v236)
                {
                  v219 = 2000;
                  goto LABEL_192;
                }
                if (v238 != v348)
                {
                  (*(void (**)(char *, uint64_t))(v355 + 8))(v342, v353);
LABEL_191:
                  v219 = 0;
                  goto LABEL_192;
                }
LABEL_179:
                v219 = 1000;
              }
LABEL_192:
              sub_1BA4A2E80(v359, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
              goto LABEL_193;
            }
            v375 = *v197;
            swift_retain();
            FeedGroupDecoration.decorationItem.getter();
            __swift_project_boxed_opaque_existential_1(&v373, v374);
            v216 = v344;
            v217 = v367;
            v185 = v361;
            sub_1BB87120C();
            v218 = (*(uint64_t (**)(uint64_t *, uint64_t))(v217 + 88))(v216, v185);
            if (v218 == v360)
            {
              (*(void (**)(uint64_t *, uint64_t))(v217 + 96))(v216, v185);
              v219 = *v216;
            }
            else
            {
              if (v218 != v362)
                (*(void (**)(uint64_t *, uint64_t))(v217 + 8))(v216, v185);
              v219 = -100;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v373);
            swift_release_n();
LABEL_193:
            sub_1BA4A2E80(v372, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
            sub_1BA4A2E80(v366, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
            if (v196 >= v219)
              break;
            v239 = *v370;
            v96 = v356;
            if (!*v370)
              goto LABEL_287;
            v240 = v239 + v369 + v189;
            sub_1BA5193C4(v239 + v368 + v189, v364, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
            swift_arrayInitWithTakeFrontToBack();
            sub_1BA5193C4(v364, v240, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
            v189 -= v354;
            ++v190;
            v188 = v357;
            if (v357 == v190)
              goto LABEL_128;
          }
          v96 = v356;
          v188 = v357;
LABEL_128:
          v99 = v188 + 1;
          v369 += v354;
          v368 += v354;
          if (v99 == v325)
          {
            v99 = v325;
            v97 = v335;
            v83 = v315;
            goto LABEL_197;
          }
        }
      }
LABEL_198:
      if (v99 < v94)
        goto LABEL_277;
      v357 = v99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v95 = v326;
      else
        v95 = sub_1BACAA368(0, *((_QWORD *)v326 + 2) + 1, 1, v326);
      v242 = *((_QWORD *)v95 + 2);
      v241 = *((_QWORD *)v95 + 3);
      v98 = v242 + 1;
      v94 = v357;
      if (v242 >= v241 >> 1)
      {
        v295 = sub_1BACAA368((char *)(v241 > 1), v242 + 1, 1, v95);
        v94 = v357;
        v95 = v295;
      }
      *((_QWORD *)v95 + 2) = v98;
      v243 = v95 + 32;
      v244 = &v95[16 * v242 + 32];
      *(_QWORD *)v244 = v333;
      *((_QWORD *)v244 + 1) = v94;
      if (v242)
      {
        while (2)
        {
          v245 = v98 - 1;
          if (v98 >= 4)
          {
            v250 = &v243[16 * v98];
            v251 = *((_QWORD *)v250 - 8);
            v252 = *((_QWORD *)v250 - 7);
            v256 = __OFSUB__(v252, v251);
            v253 = v252 - v251;
            if (v256)
              goto LABEL_266;
            v255 = *((_QWORD *)v250 - 6);
            v254 = *((_QWORD *)v250 - 5);
            v256 = __OFSUB__(v254, v255);
            v248 = v254 - v255;
            v249 = v256;
            if (v256)
              goto LABEL_267;
            v257 = v98 - 2;
            v258 = &v243[16 * v98 - 32];
            v260 = *(_QWORD *)v258;
            v259 = *((_QWORD *)v258 + 1);
            v256 = __OFSUB__(v259, v260);
            v261 = v259 - v260;
            if (v256)
              goto LABEL_269;
            v256 = __OFADD__(v248, v261);
            v262 = v248 + v261;
            if (v256)
              goto LABEL_272;
            if (v262 >= v253)
            {
              v280 = &v243[16 * v245];
              v282 = *(_QWORD *)v280;
              v281 = *((_QWORD *)v280 + 1);
              v256 = __OFSUB__(v281, v282);
              v283 = v281 - v282;
              if (v256)
                goto LABEL_276;
              v273 = v248 < v283;
            }
            else
            {
LABEL_217:
              if ((v249 & 1) != 0)
                goto LABEL_268;
              v257 = v98 - 2;
              v263 = &v243[16 * v98 - 32];
              v265 = *(_QWORD *)v263;
              v264 = *((_QWORD *)v263 + 1);
              v266 = __OFSUB__(v264, v265);
              v267 = v264 - v265;
              v268 = v266;
              if (v266)
                goto LABEL_271;
              v269 = &v243[16 * v245];
              v271 = *(_QWORD *)v269;
              v270 = *((_QWORD *)v269 + 1);
              v256 = __OFSUB__(v270, v271);
              v272 = v270 - v271;
              if (v256)
                goto LABEL_274;
              if (__OFADD__(v267, v272))
                goto LABEL_275;
              if (v267 + v272 < v248)
                goto LABEL_229;
              v273 = v248 < v272;
            }
            if (v273)
              v245 = v257;
          }
          else
          {
            if (v98 == 3)
            {
              v247 = *((_QWORD *)v95 + 4);
              v246 = *((_QWORD *)v95 + 5);
              v256 = __OFSUB__(v246, v247);
              v248 = v246 - v247;
              v249 = v256;
              goto LABEL_217;
            }
            v274 = *((_QWORD *)v95 + 4);
            v275 = *((_QWORD *)v95 + 5);
            v256 = __OFSUB__(v275, v274);
            v267 = v275 - v274;
            v268 = v256;
LABEL_229:
            if ((v268 & 1) != 0)
              goto LABEL_270;
            v276 = &v243[16 * v245];
            v278 = *(_QWORD *)v276;
            v277 = *((_QWORD *)v276 + 1);
            v256 = __OFSUB__(v277, v278);
            v279 = v277 - v278;
            if (v256)
              goto LABEL_273;
            if (v279 < v267)
              goto LABEL_15;
          }
          v284 = v245 - 1;
          if (v245 - 1 >= v98)
          {
            __break(1u);
LABEL_263:
            __break(1u);
LABEL_264:
            __break(1u);
LABEL_265:
            __break(1u);
LABEL_266:
            __break(1u);
LABEL_267:
            __break(1u);
LABEL_268:
            __break(1u);
LABEL_269:
            __break(1u);
LABEL_270:
            __break(1u);
LABEL_271:
            __break(1u);
LABEL_272:
            __break(1u);
LABEL_273:
            __break(1u);
LABEL_274:
            __break(1u);
LABEL_275:
            __break(1u);
LABEL_276:
            __break(1u);
LABEL_277:
            __break(1u);
LABEL_278:
            __break(1u);
LABEL_279:
            __break(1u);
LABEL_280:
            __break(1u);
LABEL_281:
            __break(1u);
LABEL_282:
            __break(1u);
LABEL_283:
            __break(1u);
LABEL_284:
            __break(1u);
LABEL_285:
            __break(1u);
            goto LABEL_286;
          }
          if (!*v370)
            goto LABEL_288;
          v285 = v83;
          v286 = v95;
          v287 = &v243[16 * v284];
          v288 = *(_QWORD *)v287;
          v289 = v243;
          v290 = v245;
          v291 = &v243[16 * v245];
          v292 = *((_QWORD *)v291 + 1);
          v293 = v339;
          sub_1BB6D95EC(*v370 + *(_QWORD *)(v337 + 72) * *(_QWORD *)v287, *v370 + *(_QWORD *)(v337 + 72) * *(_QWORD *)v291, *v370 + *(_QWORD *)(v337 + 72) * v292, v336);
          v339 = v293;
          if (v293)
          {
            v296 = v306;
            goto LABEL_260;
          }
          if (v292 < v288)
            goto LABEL_263;
          if (v290 > *((_QWORD *)v286 + 2))
            goto LABEL_264;
          *(_QWORD *)v287 = v288;
          *(_QWORD *)&v289[16 * v284 + 8] = v292;
          v294 = *((_QWORD *)v286 + 2);
          if (v290 >= v294)
            goto LABEL_265;
          v98 = v294 - 1;
          memmove(v291, v291 + 16, 16 * (v294 - 1 - v290));
          v243 = v289;
          v95 = v286;
          *((_QWORD *)v286 + 2) = v294 - 1;
          v273 = v294 > 2;
          v96 = v356;
          v97 = v335;
          v83 = v285;
          v94 = v357;
          if (!v273)
            goto LABEL_15;
          continue;
        }
      }
      v98 = 1;
LABEL_15:
      v88 = v370[1];
      v2 = v353;
      if (v94 >= v88)
      {
        v296 = v306;
        goto LABEL_249;
      }
      continue;
    }
    break;
  }
LABEL_286:
  __break(1u);
LABEL_287:
  __break(1u);
LABEL_288:
  __break(1u);
LABEL_289:
  __break(1u);
LABEL_290:
  __break(1u);
LABEL_291:
  sub_1BB873EA0();
  __break(1u);
}

void sub_1BB6D8934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t *v64;
  unsigned int v65;
  uint64_t v66;
  char v67;
  void (*v68)(char *, _QWORD, uint64_t);
  unsigned int v69;
  int v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int EnumCaseMultiPayload;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  unsigned int v87;
  uint64_t v88;
  char v89;
  void (*v90)(char *, _QWORD, uint64_t);
  char *v91;
  unsigned int v92;
  int v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int v100;
  char *v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v125 = a4;
  v99 = a1;
  v117 = sub_1BB870E88();
  v6 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v115 = (char *)&v97 - v10;
  v11 = sub_1BB871170();
  v127 = *(_QWORD *)(v11 - 8);
  v128 = v11;
  MEMORY[0x1E0C80A78](v11);
  v103 = (uint64_t *)((char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v105 = (uint64_t *)((char *)&v97 - v14);
  MEMORY[0x1E0C80A78](v15);
  v102 = (uint64_t *)((char *)&v97 - v16);
  MEMORY[0x1E0C80A78](v17);
  v104 = (uint64_t *)((char *)&v97 - v18);
  v122 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v122);
  v107 = (uint64_t)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v110 = (uint64_t)&v97 - v21;
  MEMORY[0x1E0C80A78](v22);
  v119 = (uint64_t)&v97 - v23;
  MEMORY[0x1E0C80A78](v24);
  v106 = (uint64_t)&v97 - v25;
  MEMORY[0x1E0C80A78](v26);
  v109 = (uint64_t)&v97 - v27;
  MEMORY[0x1E0C80A78](v28);
  v118 = (uint64_t)&v97 - v29;
  v131 = type metadata accessor for ZIndexable();
  MEMORY[0x1E0C80A78](v131);
  v123 = (uint64_t)&v97 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v111 = (char *)&v97 - v32;
  MEMORY[0x1E0C80A78](v33);
  v112 = (uint64_t *)((char *)&v97 - v34);
  MEMORY[0x1E0C80A78](v35);
  v132 = (uint64_t)&v97 - v36;
  MEMORY[0x1E0C80A78](v37);
  v126 = (uint64_t)&v97 - v39;
  v114 = a3;
  v98 = a2;
  if (a3 != a2)
  {
    v40 = *(_QWORD *)(v38 + 72);
    v116 = *MEMORY[0x1E0DBBB48];
    v121 = *MEMORY[0x1E0DBBB50];
    v100 = *MEMORY[0x1E0DBB2B8];
    v108 = *MEMORY[0x1E0DBB2B0];
    v130 = v40 * (v114 - 1);
    v113 = v40;
    v129 = v40 * v114;
    v120 = v6;
    v101 = v8;
LABEL_5:
    v41 = 0;
    v42 = v99;
    v43 = v115;
    while (1)
    {
      v44 = v126;
      v45 = *v125;
      v124 = v129 + v41;
      sub_1BA4C2DD8(v129 + v41 + v45, v126, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      sub_1BA4C2DD8(v130 + v41 + v45, v132, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      v46 = v112;
      sub_1BA4C2DD8(v44, (uint64_t)v112, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() != 1)
        break;
      v135 = *v46;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter();
      __swift_project_boxed_opaque_existential_1(&v133, v134);
      v47 = v102;
      sub_1BB87120C();
      v49 = v127;
      v48 = v128;
      v50 = (*(uint64_t (**)(uint64_t *, uint64_t))(v127 + 88))(v47, v128);
      if (v50 == v116)
      {
        (*(void (**)(uint64_t *, uint64_t))(v49 + 96))(v47, v48);
        v51 = *v47;
        v52 = v117;
      }
      else
      {
        v52 = v117;
        if (v50 != v121)
          (*(void (**)(uint64_t *, uint64_t))(v49 + 8))(v47, v48);
        v51 = -100;
      }
      v6 = v120;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
      swift_release_n();
      v64 = (uint64_t *)v111;
LABEL_39:
      sub_1BA4C2DD8(v132, (uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        v76 = (uint64_t)v64;
        v77 = v119;
        sub_1BA5193C4(v76, v119, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        sub_1BA4C2DD8(v77, v110, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload < 2)
          goto LABEL_53;
        if (EnumCaseMultiPayload == 2)
        {
          v79 = *(_QWORD *)(v110 + 112);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v80 = *(_QWORD *)(v79 + 56);
          v81 = *(_BYTE *)(v79 + 64);
          swift_release();
          v82 = v121;
          v83 = v105;
          if ((v81 & 1) == 0)
          {
            *v105 = v80;
            v82 = v116;
          }
          v85 = v127;
          v84 = v128;
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(v127 + 104))(v83, v82, v128);
          v86 = (*(uint64_t (**)(uint64_t *, uint64_t))(v85 + 88))(v83, v84);
          v6 = v120;
          if (v86 != v116)
          {
            v52 = v117;
            if (v86 == v121)
              goto LABEL_54;
            (*(void (**)(uint64_t *, uint64_t))(v127 + 8))(v105, v128);
            goto LABEL_68;
          }
          (*(void (**)(uint64_t *, uint64_t))(v85 + 96))(v83, v84);
          v75 = *v83;
        }
        else
        {
          sub_1BA4A2E80(v110, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_53:
          (*(void (**)(uint64_t *, _QWORD, uint64_t))(v127 + 104))(v105, v121, v128);
LABEL_54:
          sub_1BA4C2DD8(v119, v107, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
          v87 = swift_getEnumCaseMultiPayload();
          if (v87 < 2)
          {
            (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v101, v108, v52);
            goto LABEL_56;
          }
          if (v87 == 2)
          {
            v88 = *(_QWORD *)(v107 + 112);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v89 = *(_BYTE *)(*(_QWORD *)(v88
                                       + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                           + 208);
            v6 = v120;
            swift_release();
            v90 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
            v91 = v101;
            if ((v89 & 1) != 0)
            {
              v52 = v117;
              v90(v101, v108, v117);
              v92 = v100;
            }
            else
            {
              v92 = v100;
              v52 = v117;
              v90(v101, v100, v117);
            }
          }
          else
          {
            v91 = v101;
            v92 = v100;
            (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v101, v100, v52);
            sub_1BA4A2E80(v107, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
          }
          v93 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v91, v52);
          if (v93 == v92)
          {
            v75 = 2000;
            goto LABEL_69;
          }
          if (v93 != v108)
          {
            (*(void (**)(char *, uint64_t))(v6 + 8))(v101, v52);
LABEL_68:
            v75 = 0;
            goto LABEL_69;
          }
LABEL_56:
          v75 = 1000;
        }
LABEL_69:
        sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        goto LABEL_70;
      }
      v135 = *v64;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter();
      __swift_project_boxed_opaque_existential_1(&v133, v134);
      v71 = v103;
      sub_1BB87120C();
      v73 = v127;
      v72 = v128;
      v74 = (*(uint64_t (**)(uint64_t *, uint64_t))(v127 + 88))(v71, v128);
      if (v74 == v116)
      {
        (*(void (**)(uint64_t *, uint64_t))(v73 + 96))(v71, v72);
        v75 = *v71;
      }
      else
      {
        if (v74 != v121)
          (*(void (**)(uint64_t *, uint64_t))(v73 + 8))(v71, v72);
        v75 = -100;
      }
      v6 = v120;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v133);
      swift_release_n();
LABEL_70:
      sub_1BA4A2E80(v132, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      sub_1BA4A2E80(v126, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      v94 = v51 < v75;
      v43 = v115;
      if (!v94)
        goto LABEL_4;
      v95 = *v125;
      if (!*v125)
      {
        __break(1u);
        return;
      }
      v96 = v95 + v130 + v41;
      sub_1BA5193C4(v95 + v129 + v41, v123, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      swift_arrayInitWithTakeFrontToBack();
      sub_1BA5193C4(v123, v96, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      v41 -= v113;
      if (v114 == ++v42)
      {
LABEL_4:
        v130 += v113;
        v129 += v113;
        if (++v114 == v98)
          return;
        goto LABEL_5;
      }
    }
    v53 = (uint64_t)v46;
    v54 = v118;
    sub_1BA5193C4(v53, v118, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
    sub_1BA4C2DD8(v54, v109, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
    v55 = swift_getEnumCaseMultiPayload();
    v52 = v117;
    if (v55 >= 2)
    {
      if (v55 == 2)
      {
        v56 = *(_QWORD *)(v109 + 112);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v57 = *(_QWORD *)(v56 + 56);
        v58 = *(_BYTE *)(v56 + 64);
        swift_release();
        v59 = v121;
        v60 = v104;
        if ((v58 & 1) == 0)
        {
          *v104 = v57;
          v59 = v116;
        }
        v62 = v127;
        v61 = v128;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v127 + 104))(v60, v59, v128);
        v63 = (*(uint64_t (**)(uint64_t *, uint64_t))(v62 + 88))(v60, v61);
        v52 = v117;
        v6 = v120;
        if (v63 == v116)
        {
          (*(void (**)(uint64_t *, uint64_t))(v62 + 96))(v60, v61);
          v51 = *v60;
LABEL_24:
          v64 = (uint64_t *)v111;
LABEL_38:
          sub_1BA4A2E80(v118, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
          goto LABEL_39;
        }
        v43 = v115;
        if (v63 != v121)
        {
          (*(void (**)(uint64_t *, uint64_t))(v127 + 8))(v104, v128);
          v51 = 0;
          goto LABEL_24;
        }
LABEL_22:
        sub_1BA4C2DD8(v118, v106, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        v65 = swift_getEnumCaseMultiPayload();
        if (v65 < 2)
        {
          (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v43, v108, v52);
          v51 = 1000;
          goto LABEL_24;
        }
        if (v65 == 2)
        {
          v66 = *(_QWORD *)(v106 + 112);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v67 = *(_BYTE *)(*(_QWORD *)(v66
                                     + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                         + 208);
          v6 = v120;
          swift_release();
          v68 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
          if ((v67 & 1) != 0)
          {
            v52 = v117;
            v68(v43, v108, v117);
            v64 = (uint64_t *)v111;
            v69 = v100;
            goto LABEL_33;
          }
          v69 = v100;
          v52 = v117;
          v68(v43, v100, v117);
        }
        else
        {
          v69 = v100;
          (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v43, v100, v52);
          sub_1BA4A2E80(v106, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
        }
        v64 = (uint64_t *)v111;
LABEL_33:
        v70 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v43, v52);
        if (v70 == v69)
        {
          v51 = 2000;
        }
        else if (v70 == v108)
        {
          v51 = 1000;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v43, v52);
          v51 = 0;
        }
        goto LABEL_38;
      }
      sub_1BA4A2E80(v109, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v127 + 104))(v104, v121, v128);
    goto LABEL_22;
  }
}

uint64_t sub_1BB6D95EC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  unsigned int v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  int v97;
  uint64_t *v98;
  unsigned int v99;
  uint64_t v100;
  char v101;
  void (*v102)(_BYTE *, _QWORD, uint64_t);
  uint64_t v103;
  _BYTE *v104;
  int v105;
  _BYTE *v106;
  uint64_t v107;
  int v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  unsigned int v125;
  uint64_t v126;
  char v127;
  void (*v128)(_BYTE *, _QWORD, uint64_t);
  uint64_t v129;
  _BYTE *v130;
  int v131;
  uint64_t v132;
  int v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t *v146;
  uint64_t v147;
  _BYTE *v148;
  unsigned int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t *v156;
  int v157;
  uint64_t v158;
  unsigned int v159;
  uint64_t v160;
  char v161;
  void (*v162)(_BYTE *, _QWORD, uint64_t);
  uint64_t v163;
  _BYTE *v164;
  int v165;
  int v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  unsigned int EnumCaseMultiPayload;
  uint64_t v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  unint64_t v183;
  unsigned int v184;
  uint64_t v185;
  char v186;
  void (*v187)(_BYTE *, _QWORD, uint64_t);
  uint64_t v188;
  _BYTE *v189;
  int v190;
  uint64_t v191;
  int v192;
  unint64_t v193;
  unint64_t v194;
  uint64_t result;
  _BYTE v196[16];
  _BYTE *v197;
  _BYTE *v198;
  _BYTE *v199;
  uint64_t *v200;
  uint64_t *v201;
  uint64_t *v202;
  uint64_t *v203;
  uint64_t *v204;
  uint64_t *v205;
  uint64_t *v206;
  _BYTE *v207;
  _BYTE *v208;
  _BYTE *v209;
  _BYTE *v210;
  _BYTE *v211;
  _BYTE *v212;
  uint64_t v213;
  _BYTE *v214;
  _BYTE *v215;
  unint64_t v216;
  uint64_t *v217;
  uint64_t *v218;
  uint64_t *v219;
  uint64_t *v220;
  uint64_t *v221;
  _BYTE *v222;
  _BYTE *v223;
  _BYTE *v224;
  _BYTE *v225;
  uint64_t v226;
  _BYTE *v227;
  uint64_t v228;
  uint64_t v229;
  _BYTE *v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  _BYTE *v240;
  _BYTE *v241;

  v231 = a3;
  v226 = sub_1BB870E88();
  v7 = *(_QWORD *)(v226 - 8);
  MEMORY[0x1E0C80A78](v226);
  v9 = &v196[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v196[-v11];
  MEMORY[0x1E0C80A78](v13);
  v199 = &v196[-v14];
  MEMORY[0x1E0C80A78](v15);
  v211 = &v196[-v16];
  v17 = sub_1BB871170();
  v18 = *(_QWORD *)(v17 - 8);
  v233 = v17;
  v234 = v18;
  MEMORY[0x1E0C80A78](v17);
  v202 = (uint64_t *)&v196[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v20);
  v206 = (uint64_t *)&v196[-v21];
  MEMORY[0x1E0C80A78](v22);
  v221 = (uint64_t *)&v196[-v23];
  MEMORY[0x1E0C80A78](v24);
  v205 = (uint64_t *)&v196[-v25];
  MEMORY[0x1E0C80A78](v26);
  v201 = (uint64_t *)&v196[-v27];
  MEMORY[0x1E0C80A78](v28);
  v204 = (uint64_t *)&v196[-v29];
  MEMORY[0x1E0C80A78](v30);
  v200 = (uint64_t *)&v196[-v31];
  MEMORY[0x1E0C80A78](v32);
  v203 = (uint64_t *)&v196[-v33];
  v232 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v232);
  v210 = &v196[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v35);
  v215 = &v196[-v36];
  MEMORY[0x1E0C80A78](v37);
  v224 = &v196[-v38];
  MEMORY[0x1E0C80A78](v39);
  v209 = &v196[-v40];
  MEMORY[0x1E0C80A78](v41);
  v214 = &v196[-v42];
  MEMORY[0x1E0C80A78](v43);
  v223 = &v196[-v44];
  MEMORY[0x1E0C80A78](v45);
  v208 = &v196[-v46];
  MEMORY[0x1E0C80A78](v47);
  v213 = (uint64_t)&v196[-v48];
  MEMORY[0x1E0C80A78](v49);
  v225 = &v196[-v50];
  MEMORY[0x1E0C80A78](v51);
  v207 = &v196[-v52];
  MEMORY[0x1E0C80A78](v53);
  v212 = &v196[-v54];
  MEMORY[0x1E0C80A78](v55);
  v222 = &v196[-v56];
  v235 = type metadata accessor for ZIndexable();
  MEMORY[0x1E0C80A78](v235);
  v220 = (uint64_t *)&v196[-((v57 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v58);
  v219 = (uint64_t *)&v196[-v59];
  MEMORY[0x1E0C80A78](v60);
  v230 = &v196[-v61];
  MEMORY[0x1E0C80A78](v62);
  v227 = &v196[-v63];
  MEMORY[0x1E0C80A78](v64);
  v218 = (uint64_t *)&v196[-v65];
  MEMORY[0x1E0C80A78](v66);
  v217 = (uint64_t *)&v196[-v67];
  MEMORY[0x1E0C80A78](v68);
  v70 = &v196[-v69];
  MEMORY[0x1E0C80A78](v71);
  v73 = &v196[-v72];
  v229 = *(_QWORD *)(v74 + 72);
  if (!v229)
  {
    __break(1u);
LABEL_183:
    __break(1u);
LABEL_184:
    __break(1u);
    goto LABEL_185;
  }
  if (a2 - a1 == 0x8000000000000000 && v229 == -1)
    goto LABEL_183;
  v75 = v231 - a2;
  if (v231 - a2 == 0x8000000000000000 && v229 == -1)
    goto LABEL_184;
  v76 = (uint64_t)(a2 - a1) / v229;
  v241 = (_BYTE *)a1;
  v240 = (_BYTE *)a4;
  v77 = v75 / v229;
  v228 = v7;
  if (v76 >= v75 / v229)
  {
    if (v77 < 0)
      goto LABEL_185;
    v79 = v77 * v229;
    v80 = v221;
    v216 = a1;
    v198 = v9;
    v197 = v12;
    if (a4 < a2 || a2 + v79 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v137 = a4 + v79;
    v239 = a4 + v79;
    v241 = (_BYTE *)a2;
    if (v79 < 1 || v216 >= a2)
    {
LABEL_181:
      sub_1BACAB2D8((unint64_t *)&v241, (unint64_t *)&v240, (uint64_t *)&v239);
      return 1;
    }
    v138 = -v229;
    LODWORD(v222) = *MEMORY[0x1E0DBBB48];
    LODWORD(v225) = *MEMORY[0x1E0DBBB50];
    LODWORD(v217) = *MEMORY[0x1E0DBB2B8];
    LODWORD(v218) = *MEMORY[0x1E0DBB2B0];
    v213 = -v229;
    while (1)
    {
      v139 = v227;
      sub_1BA4C2DD8(v137 + v138, (uint64_t)v227, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      v140 = a2 + v138;
      sub_1BA4C2DD8(a2 + v138, (uint64_t)v230, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      v141 = (uint64_t)v139;
      v142 = v219;
      sub_1BA4C2DD8(v141, (uint64_t)v219, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() != 1)
        break;
      v236 = *v142;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter();
      __swift_project_boxed_opaque_existential_1(&v237, v238);
      sub_1BB87120C();
      v143 = v233;
      v144 = v234;
      v145 = (*(uint64_t (**)(uint64_t *, uint64_t))(v234 + 88))(v80, v233);
      if (v145 == (_DWORD)v222)
      {
        (*(void (**)(uint64_t *, uint64_t))(v144 + 96))(v80, v143);
        v229 = *v80;
        v146 = v220;
      }
      else
      {
        v146 = v220;
        if (v145 != (_DWORD)v225)
          (*(void (**)(uint64_t *, uint64_t))(v144 + 8))(v80, v143);
        v229 = -100;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v237);
      swift_release_n();
LABEL_135:
      sub_1BA4C2DD8((uint64_t)v230, (uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v236 = *v146;
        swift_retain();
        FeedGroupDecoration.decorationItem.getter();
        __swift_project_boxed_opaque_existential_1(&v237, v238);
        v167 = v202;
        v168 = v234;
        sub_1BB87120C();
        v169 = v233;
        v170 = (*(uint64_t (**)(uint64_t *, uint64_t))(v168 + 88))(v167, v233);
        if (v170 == (_DWORD)v222)
        {
          (*(void (**)(uint64_t *, uint64_t))(v168 + 96))(v167, v169);
          v171 = *v167;
        }
        else
        {
          if (v170 != (_DWORD)v225)
            (*(void (**)(uint64_t *, uint64_t))(v168 + 8))(v167, v169);
          v171 = -100;
        }
        v80 = v221;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v237);
        swift_release_n();
        v183 = v231;
        goto LABEL_166;
      }
      v172 = (uint64_t)v146;
      v173 = v224;
      sub_1BA5193C4(v172, (uint64_t)v224, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4C2DD8((uint64_t)v173, (uint64_t)v215, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload < 2)
        goto LABEL_149;
      if (EnumCaseMultiPayload != 2)
      {
        sub_1BA4A2E80((uint64_t)v215, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_149:
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v144 + 104))(v206, v225, v143);
        v183 = v231;
        goto LABEL_150;
      }
      v175 = *((_QWORD *)v215 + 14);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v176 = *(_QWORD *)(v175 + 56);
      v177 = *(_BYTE *)(v175 + 64);
      swift_release();
      v178 = v225;
      v179 = v206;
      if ((v177 & 1) == 0)
      {
        *v206 = v176;
        v178 = v222;
      }
      v180 = v233;
      v181 = v234;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v234 + 104))(v179, v178, v233);
      v182 = (*(uint64_t (**)(uint64_t *, uint64_t))(v181 + 88))(v179, v180);
      v183 = v231;
      if (v182 == (_DWORD)v222)
      {
        (*(void (**)(uint64_t *, uint64_t))(v181 + 96))(v179, v180);
        v171 = *v179;
        goto LABEL_165;
      }
      if (v182 != (_DWORD)v225)
      {
        (*(void (**)(uint64_t *, uint64_t))(v181 + 8))(v206, v180);
LABEL_164:
        v171 = 0;
        goto LABEL_165;
      }
LABEL_150:
      sub_1BA4C2DD8((uint64_t)v224, (uint64_t)v210, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      v184 = swift_getEnumCaseMultiPayload();
      if (v184 >= 2)
      {
        if (v184 == 2)
        {
          v185 = *((_QWORD *)v210 + 14);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v186 = *(_BYTE *)(*(_QWORD *)(v185
                                      + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                          + 208);
          swift_release();
          v187 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104);
          v189 = v198;
          if ((v186 & 1) != 0)
          {
            v191 = v226;
            v187(v198, v218, v226);
            v188 = v228;
            v183 = v231;
            v190 = (int)v217;
          }
          else
          {
            v190 = (int)v217;
            v191 = v226;
            v187(v198, v217, v226);
            v188 = v228;
            v183 = v231;
          }
        }
        else
        {
          v188 = v228;
          v189 = v198;
          v190 = (int)v217;
          v191 = v226;
          (*(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104))(v198, v217, v226);
          sub_1BA4A2E80((uint64_t)v210, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
        }
        v192 = (*(uint64_t (**)(_BYTE *, uint64_t))(v188 + 88))(v189, v191);
        if (v192 == v190)
        {
          v171 = 2000;
          v138 = v213;
          goto LABEL_165;
        }
        v138 = v213;
        if (v192 != (_DWORD)v218)
        {
          (*(void (**)(_BYTE *, uint64_t))(v228 + 8))(v198, v226);
          goto LABEL_164;
        }
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104))(v198, v218, v226);
      }
      v171 = 1000;
LABEL_165:
      sub_1BA4A2E80((uint64_t)v224, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
LABEL_166:
      v193 = v183 + v138;
      sub_1BA4A2E80((uint64_t)v230, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      sub_1BA4A2E80((uint64_t)v227, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
      if (v229 >= v171)
      {
        v194 = v239;
        v239 += v138;
        if (v183 < v194 || v193 >= v194)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v183 != v194)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v140 = a2;
      }
      else
      {
        if (v183 < a2 || v193 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v183 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v241 += v138;
      }
      v137 = v239;
      if (v239 > a4)
      {
        a2 = v140;
        v231 = v183 + v138;
        if (v140 > v216)
          continue;
      }
      goto LABEL_181;
    }
    v147 = (uint64_t)v142;
    v148 = v223;
    sub_1BA5193C4(v147, (uint64_t)v223, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
    sub_1BA4C2DD8((uint64_t)v148, (uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
    v149 = swift_getEnumCaseMultiPayload();
    v150 = v226;
    v143 = v233;
    v144 = v234;
    if (v149 >= 2)
    {
      if (v149 == 2)
      {
        v151 = *((_QWORD *)v214 + 14);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v152 = *(_QWORD *)(v151 + 56);
        v153 = *(_BYTE *)(v151 + 64);
        swift_release();
        v154 = v225;
        v155 = v205;
        if ((v153 & 1) == 0)
        {
          *v205 = v152;
          v154 = v222;
        }
        v143 = v233;
        v144 = v234;
        v156 = v155;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v234 + 104))(v155, v154, v233);
        v157 = (*(uint64_t (**)(uint64_t *, uint64_t))(v144 + 88))(v156, v143);
        if (v157 == (_DWORD)v222)
        {
          (*(void (**)(uint64_t *, uint64_t))(v144 + 96))(v156, v143);
          v158 = *v156;
LABEL_120:
          v229 = v158;
LABEL_121:
          v146 = v220;
LABEL_134:
          sub_1BA4A2E80((uint64_t)v223, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
          v80 = v221;
          goto LABEL_135;
        }
        if (v157 != (_DWORD)v225)
        {
          (*(void (**)(uint64_t *, uint64_t))(v144 + 8))(v205, v143);
          v229 = 0;
          goto LABEL_121;
        }
LABEL_118:
        sub_1BA4C2DD8((uint64_t)v223, (uint64_t)v209, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        v159 = swift_getEnumCaseMultiPayload();
        if (v159 >= 2)
        {
          if (v159 == 2)
          {
            v160 = *((_QWORD *)v209 + 14);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v161 = *(_BYTE *)(*(_QWORD *)(v160
                                        + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                            + 208);
            swift_release();
            v162 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104);
            v164 = v197;
            if ((v161 & 1) != 0)
            {
              v162(v197, v218, v150);
              v163 = v228;
              v143 = v233;
              v144 = v234;
              v165 = (int)v217;
            }
            else
            {
              v165 = (int)v217;
              v162(v197, v217, v150);
              v163 = v228;
              v143 = v233;
              v144 = v234;
            }
          }
          else
          {
            v163 = v228;
            v164 = v197;
            v165 = (int)v217;
            (*(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104))(v197, v217, v150);
            sub_1BA4A2E80((uint64_t)v209, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
          }
          v166 = (*(uint64_t (**)(_BYTE *, uint64_t))(v163 + 88))(v164, v150);
          if (v166 == v165)
          {
            v229 = 2000;
            v146 = v220;
            v138 = v213;
          }
          else
          {
            v146 = v220;
            v138 = v213;
            if (v166 == (_DWORD)v218)
            {
              v229 = 1000;
            }
            else
            {
              (*(void (**)(_BYTE *, uint64_t))(v228 + 8))(v197, v150);
              v229 = 0;
            }
          }
          goto LABEL_134;
        }
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104))(v197, v218, v150);
        v158 = 1000;
        goto LABEL_120;
      }
      sub_1BA4A2E80((uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v144 + 104))(v205, v225, v143);
    goto LABEL_118;
  }
  if ((v76 & 0x8000000000000000) == 0)
  {
    v78 = v76 * v229;
    if (a4 < a1 || a1 + v78 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v224 = (_BYTE *)(a4 + v78);
    v239 = a4 + v78;
    if (v78 >= 1 && a2 < v231)
    {
      LODWORD(v227) = *MEMORY[0x1E0DBBB48];
      LODWORD(v230) = *MEMORY[0x1E0DBBB50];
      LODWORD(v221) = *MEMORY[0x1E0DBB2B8];
      LODWORD(v223) = *MEMORY[0x1E0DBB2B0];
      while (1)
      {
        sub_1BA4C2DD8(a2, (uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
        sub_1BA4C2DD8(a4, (uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
        v81 = v217;
        sub_1BA4C2DD8((uint64_t)v73, (uint64_t)v217, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
        if (swift_getEnumCaseMultiPayload() != 1)
          break;
        v236 = *v81;
        swift_retain();
        FeedGroupDecoration.decorationItem.getter();
        __swift_project_boxed_opaque_existential_1(&v237, v238);
        v82 = v200;
        sub_1BB87120C();
        v84 = v233;
        v83 = v234;
        v85 = (*(uint64_t (**)(uint64_t *, uint64_t))(v234 + 88))(v82, v233);
        if (v85 == (_DWORD)v227)
        {
          (*(void (**)(uint64_t *, uint64_t))(v83 + 96))(v82, v84);
          v86 = *v82;
        }
        else
        {
          if (v85 != (_DWORD)v230)
            (*(void (**)(uint64_t *, uint64_t))(v234 + 8))(v82, v84);
          v86 = -100;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v237);
        swift_release_n();
        v98 = v218;
LABEL_49:
        sub_1BA4C2DD8((uint64_t)v70, (uint64_t)v98, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v236 = *v98;
          swift_retain();
          FeedGroupDecoration.decorationItem.getter();
          __swift_project_boxed_opaque_existential_1(&v237, v238);
          v109 = v201;
          sub_1BB87120C();
          v110 = v233;
          v111 = v234;
          v112 = (*(uint64_t (**)(uint64_t *, uint64_t))(v234 + 88))(v109, v233);
          if (v112 == (_DWORD)v227)
          {
            (*(void (**)(uint64_t *, uint64_t))(v111 + 96))(v109, v110);
            v113 = *v109;
          }
          else
          {
            if (v112 != (_DWORD)v230)
              (*(void (**)(uint64_t *, uint64_t))(v234 + 8))(v109, v110);
            v113 = -100;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v237);
          swift_release_n();
          goto LABEL_83;
        }
        v114 = (uint64_t)v98;
        v115 = v225;
        sub_1BA5193C4(v114, (uint64_t)v225, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        sub_1BA4C2DD8((uint64_t)v115, v213, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        v116 = swift_getEnumCaseMultiPayload();
        if (v116 < 2)
          goto LABEL_63;
        if (v116 != 2)
        {
          sub_1BA4A2E80(v213, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_63:
          (*(void (**)(uint64_t *, _QWORD, uint64_t))(v234 + 104))(v204, v230, v84);
          goto LABEL_64;
        }
        v117 = *(_QWORD *)(v213 + 112);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v118 = *(_QWORD *)(v117 + 56);
        v119 = *(_BYTE *)(v117 + 64);
        swift_release();
        v120 = v230;
        v121 = v204;
        if ((v119 & 1) == 0)
        {
          *v204 = v118;
          v120 = v227;
        }
        v122 = v233;
        v123 = v234;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v234 + 104))(v121, v120, v233);
        v124 = (*(uint64_t (**)(uint64_t *, uint64_t))(v123 + 88))(v121, v122);
        if (v124 == (_DWORD)v227)
        {
          (*(void (**)(uint64_t *, uint64_t))(v123 + 96))(v121, v122);
          v113 = *v121;
          goto LABEL_82;
        }
        if (v124 != (_DWORD)v230)
        {
          (*(void (**)(uint64_t *, uint64_t))(v234 + 8))(v204, v122);
LABEL_81:
          v113 = 0;
          goto LABEL_82;
        }
LABEL_64:
        sub_1BA4C2DD8((uint64_t)v225, (uint64_t)v208, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        v125 = swift_getEnumCaseMultiPayload();
        if (v125 >= 2)
        {
          if (v125 == 2)
          {
            v126 = *((_QWORD *)v208 + 14);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v127 = *(_BYTE *)(*(_QWORD *)(v126
                                        + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                            + 208);
            swift_release();
            v128 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104);
            v130 = v199;
            if ((v127 & 1) != 0)
            {
              v132 = v226;
              v128(v199, v223, v226);
              v129 = v228;
              v131 = (int)v221;
            }
            else
            {
              v131 = (int)v221;
              v132 = v226;
              v128(v199, v221, v226);
              v129 = v228;
            }
          }
          else
          {
            v129 = v228;
            v130 = v199;
            v131 = (int)v221;
            v132 = v226;
            (*(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104))(v199, v221, v226);
            sub_1BA4A2E80((uint64_t)v208, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
          }
          v133 = (*(uint64_t (**)(_BYTE *, uint64_t))(v129 + 88))(v130, v132);
          if (v133 == v131)
          {
            v113 = 2000;
            goto LABEL_82;
          }
          if (v133 != (_DWORD)v223)
          {
            (*(void (**)(_BYTE *, uint64_t))(v228 + 8))(v199, v226);
            goto LABEL_81;
          }
        }
        else
        {
          (*(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104))(v199, v223, v226);
        }
        v113 = 1000;
LABEL_82:
        sub_1BA4A2E80((uint64_t)v225, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
LABEL_83:
        sub_1BA4A2E80((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
        sub_1BA4A2E80((uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
        v134 = (unint64_t)v241;
        if (v86 >= v113)
        {
          v136 = (unint64_t)&v240[v229];
          if (v241 < v240 || (unint64_t)v241 >= v136)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v241 != v240)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v240 = (_BYTE *)v136;
          v135 = a2;
        }
        else
        {
          v135 = a2 + v229;
          if ((unint64_t)v241 < a2 || (unint64_t)v241 >= v135)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v241 == (_BYTE *)a2)
          {
            v134 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v241 = (_BYTE *)(v134 + v229);
        a4 = (unint64_t)v240;
        if (v240 < v224)
        {
          a2 = v135;
          if (v135 < v231)
            continue;
        }
        goto LABEL_181;
      }
      v87 = (uint64_t)v81;
      v88 = v222;
      sub_1BA5193C4(v87, (uint64_t)v222, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4C2DD8((uint64_t)v88, (uint64_t)v212, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      v89 = swift_getEnumCaseMultiPayload();
      v84 = v233;
      v90 = v211;
      if (v89 >= 2)
      {
        if (v89 == 2)
        {
          v91 = *((_QWORD *)v212 + 14);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v92 = *(_QWORD *)(v91 + 56);
          v93 = *(_BYTE *)(v91 + 64);
          swift_release();
          v94 = v230;
          v95 = v203;
          if ((v93 & 1) == 0)
          {
            *v203 = v92;
            v94 = v227;
          }
          v84 = v233;
          v96 = v234;
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(v234 + 104))(v95, v94, v233);
          v97 = (*(uint64_t (**)(uint64_t *, uint64_t))(v96 + 88))(v95, v84);
          if (v97 == (_DWORD)v227)
          {
            (*(void (**)(uint64_t *, uint64_t))(v96 + 96))(v95, v84);
            v86 = *v95;
            goto LABEL_47;
          }
          v90 = v211;
          if (v97 != (_DWORD)v230)
          {
            (*(void (**)(uint64_t *, uint64_t))(v234 + 8))(v203, v84);
            v86 = 0;
            goto LABEL_47;
          }
LABEL_36:
          sub_1BA4C2DD8((uint64_t)v222, (uint64_t)v207, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
          v99 = swift_getEnumCaseMultiPayload();
          if (v99 >= 2)
          {
            if (v99 == 2)
            {
              v100 = *((_QWORD *)v207 + 14);
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v101 = *(_BYTE *)(*(_QWORD *)(v100
                                          + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                              + 208);
              swift_release();
              v102 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104);
              v106 = v211;
              if ((v101 & 1) != 0)
              {
                v107 = v226;
                v102(v211, v223, v226);
                v103 = v228;
                v105 = (int)v221;
              }
              else
              {
                v105 = (int)v221;
                v107 = v226;
                v102(v211, v221, v226);
                v103 = v228;
              }
            }
            else
            {
              v103 = v228;
              v104 = v90;
              v105 = (int)v221;
              v106 = v90;
              v107 = v226;
              (*(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104))(v104, v221, v226);
              sub_1BA4A2E80((uint64_t)v207, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
            }
            v108 = (*(uint64_t (**)(_BYTE *, uint64_t))(v103 + 88))(v106, v107);
            if (v108 != v105)
            {
              v84 = v233;
              v98 = v218;
              if (v108 == (_DWORD)v223)
              {
                v86 = 1000;
              }
              else
              {
                (*(void (**)(_BYTE *, uint64_t))(v228 + 8))(v211, v226);
                v86 = 0;
              }
              goto LABEL_48;
            }
            v86 = 2000;
            v84 = v233;
          }
          else
          {
            (*(void (**)(_BYTE *, _QWORD, uint64_t))(v228 + 104))(v90, v223, v226);
            v86 = 1000;
          }
LABEL_47:
          v98 = v218;
LABEL_48:
          sub_1BA4A2E80((uint64_t)v222, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
          goto LABEL_49;
        }
        sub_1BA4A2E80((uint64_t)v212, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewLayout.Context);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v234 + 104))(v203, v230, v84);
      goto LABEL_36;
    }
    goto LABEL_181;
  }
LABEL_185:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB6DAFC4(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void (*v16)(uint64_t *, _QWORD, uint64_t);
  uint64_t v18;

  v5 = sub_1BB86FFDC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a3 & 0x101) != 0)
    v9 = 0.5;
  else
    v9 = *(double *)&a2;
  sub_1BA5E07DC();
  v11 = v10;
  v12 = swift_allocBox();
  v14 = (uint64_t *)(v13 + *(int *)(v11 + 48));
  sub_1BB86FFD0();
  v15 = swift_allocObject();
  *(double *)(v15 + 16) = v9;
  *v14 = v15;
  v16 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104);
  v16(v14, *MEMORY[0x1E0DB82A0], v5);
  *v8 = v12;
  v16(v8, *MEMORY[0x1E0DB82C8], v5);
  return sub_1BB8700E4();
}

void sub_1BB6DB0D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  double v9;
  double v10;
  double MaxX;
  double v12;
  double v13;
  double MaxY;
  double v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t i;
  id v30;
  void *v31;
  id v32;
  CGRect v33;
  CGRect v34;

  swift_getObjectType();
  v8 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView);
  objc_msgSend(v8, sel_addSubview_, a1);
  objc_msgSend(v8, sel_contentSize);
  v10 = v9;
  objc_msgSend(a1, sel_frame);
  MaxX = CGRectGetMaxX(v33);
  if (v10 <= MaxX)
    v10 = MaxX;
  objc_msgSend(v8, sel_contentSize);
  v13 = v12;
  objc_msgSend(a1, sel_frame);
  MaxY = CGRectGetMaxY(v34);
  if (v13 > MaxY)
    v15 = v13;
  else
    v15 = MaxY;
  objc_msgSend(v8, sel_setContentSize_, v10, v15);
  if (qword_1EF2A6D48 != -1)
    swift_once();
  sub_1BA50AD30(&qword_1EF2CAB48, v16, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory, (uint64_t)&unk_1BB93FCC8);
  sub_1BB86D210();
  if (v32 == 1)
  {
    v17 = objc_msgSend(a1, sel_layer);
    v18 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v19 = objc_msgSend(a1, sel_traitCollection);
    v20 = objc_msgSend(v18, sel_resolvedColorWithTraitCollection_, v19);

    v21 = objc_msgSend(v20, sel_CGColor);
    objc_msgSend(v17, sel_setBorderColor_, v21);

    v22 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v22, sel_setBorderWidth_, 1.0);

  }
  v23 = (_QWORD *)(a5 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_colorPaletteProvider);
  v24 = *(_QWORD *)(a5 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_colorPaletteProvider + 24);
  v25 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v25 + 8))(&v32, v24, v25);

  sub_1BB86F85C();
  if (qword_1EF2A6D50 != -1)
    swift_once();
  sub_1BB86D210();
  if (v32 == 1)
  {
    v26 = objc_msgSend(a1, sel_subviews);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
    v27 = sub_1BB872DB4();

    if (v27 >> 62)
    {
      swift_bridgeObjectRetain();
      v28 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v28)
        goto LABEL_15;
    }
    else
    {
      v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v28)
      {
LABEL_15:
        if (v28 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v28; ++i)
        {
          if ((v27 & 0xC000000000000001) != 0)
            v30 = (id)MEMORY[0x1BCCE4630](i, v27);
          else
            v30 = *(id *)(v27 + 8 * i + 32);
          v31 = v30;
          sub_1BB6D5C00(v30, a1);

        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1BB6DB4A4(void *a1, uint64_t a2)
{
  void *v3;
  double v4;
  double v5;
  double MaxX;
  double v7;
  double v8;
  double MaxY;
  double v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t i;
  id v23;
  void *v24;
  char v25;
  char v26;
  CGRect v27;
  CGRect v28;

  v3 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView);
  objc_msgSend(v3, sel_addSubview_, a1);
  objc_msgSend(v3, sel_contentSize);
  v5 = v4;
  objc_msgSend(a1, sel_frame);
  MaxX = CGRectGetMaxX(v27);
  if (v5 <= MaxX)
    v5 = MaxX;
  objc_msgSend(v3, sel_contentSize);
  v8 = v7;
  objc_msgSend(a1, sel_frame);
  MaxY = CGRectGetMaxY(v28);
  if (v8 > MaxY)
    v10 = v8;
  else
    v10 = MaxY;
  objc_msgSend(v3, sel_setContentSize_, v5, v10);
  if (qword_1EF2A6D48 != -1)
    swift_once();
  type metadata accessor for DebugGroupLayoutViewFactory();
  sub_1BA50AD30(&qword_1EF2CAB48, v11, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory, (uint64_t)&unk_1BB93FCC8);
  sub_1BB86D210();
  if (v26 == 1)
  {
    v12 = objc_msgSend(a1, sel_layer);
    v13 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v14 = objc_msgSend(a1, sel_traitCollection);
    v15 = objc_msgSend(v13, sel_resolvedColorWithTraitCollection_, v14);

    v16 = objc_msgSend(v15, sel_CGColor);
    objc_msgSend(v12, sel_setBorderColor_, v16);

    v17 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v17, sel_setBorderWidth_, 1.0);

  }
  v18 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  sub_1BB86F85C();
  if (qword_1EF2A6D50 != -1)
    swift_once();
  sub_1BB86D210();
  if (v25 == 1)
  {
    v19 = objc_msgSend(a1, sel_subviews);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
    v20 = sub_1BB872DB4();

    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      v21 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v21)
        goto LABEL_15;
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v21)
      {
LABEL_15:
        if (v21 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v21; ++i)
        {
          if ((v20 & 0xC000000000000001) != 0)
            v23 = (id)MEMORY[0x1BCCE4630](i, v20);
          else
            v23 = *(id *)(v20 + 8 * i + 32);
          v24 = v23;
          sub_1BB6D5C00(v23, a1);

        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1BB6DB84C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  void *v17;
  double v18;
  double v19;
  double MaxX;
  double v21;
  double v22;
  double MaxY;
  double v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t ObjectType;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t i;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  _QWORD v47[3];
  _OWORD v48[8];
  CGRect v49;
  CGRect v50;

  v16 = a11;
  v17 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView);
  objc_msgSend(v17, sel_addSubview_, a1);
  objc_msgSend(v17, sel_contentSize);
  v19 = v18;
  objc_msgSend(a1, sel_frame);
  MaxX = CGRectGetMaxX(v49);
  if (v19 <= MaxX)
    v19 = MaxX;
  objc_msgSend(v17, sel_contentSize);
  v22 = v21;
  objc_msgSend(a1, sel_frame);
  MaxY = CGRectGetMaxY(v50);
  if (v22 > MaxY)
    v24 = v22;
  else
    v24 = MaxY;
  objc_msgSend(v17, sel_setContentSize_, v19, v24);
  if (qword_1EF2A6D48 != -1)
    swift_once();
  type metadata accessor for DebugGroupLayoutViewFactory();
  sub_1BA50AD30(&qword_1EF2CAB48, v25, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory, (uint64_t)&unk_1BB93FCC8);
  sub_1BB86D210();
  if (LOBYTE(v48[0]) == 1)
  {
    v44 = objc_msgSend(a1, sel_layer);
    v45 = a8;
    v26 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v27 = a7;
    v28 = objc_msgSend(a1, sel_traitCollection);
    v29 = objc_msgSend(v26, sel_resolvedColorWithTraitCollection_, v28);

    a7 = v27;
    v30 = objc_msgSend(v29, sel_CGColor);

    v16 = a11;
    objc_msgSend(v44, sel_setBorderColor_, v30);

    a8 = v45;
    v31 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v31, sel_setBorderWidth_, 1.0);

  }
  v32 = *(_QWORD *)(a4 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_formatLayoutViewRenderer + 8);
  ObjectType = swift_getObjectType();
  v34 = a5[5];
  v48[4] = a5[4];
  v48[5] = v34;
  v48[6] = a5[6];
  v35 = a5[1];
  v48[0] = *a5;
  v48[1] = v35;
  v36 = a5[3];
  v48[2] = a5[2];
  v48[3] = v36;
  v37 = *(_QWORD *)(a6 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
  memset(v47, 0, sizeof(v47));
  (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v32 + 88))(v48, v37, a7, a8, v47, a9, a10, v16, &type metadata for FormatSupplementary, &type metadata for FormatLayoutContext, &protocol witness table for FormatLayoutContext, ObjectType, v32);
  if (qword_1EF2A6D50 != -1)
    swift_once();
  sub_1BB86D210();
  if (LOBYTE(v48[0]) == 1)
  {
    v38 = objc_msgSend(a1, sel_subviews);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
    v39 = sub_1BB872DB4();

    if (v39 >> 62)
    {
      swift_bridgeObjectRetain();
      v40 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v40)
        goto LABEL_15;
    }
    else
    {
      v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v40)
      {
LABEL_15:
        if (v40 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v40; ++i)
        {
          if ((v39 & 0xC000000000000001) != 0)
            v42 = (id)MEMORY[0x1BCCE4630](i, v39);
          else
            v42 = *(id *)(v39 + 8 * i + 32);
          v43 = v42;
          sub_1BB6D5C00(v42, a1);

        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1BB6DBCC0(_QWORD *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;

  v12 = sub_1BB871170();
  v30 = *(_QWORD *)(v12 - 8);
  v31 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_1BB86CBE0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33[0] = *a1;
  v19 = v33[0];
  sub_1BB14B4DC();
  v21 = v20;
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView), sel_addSubview_, v20);
  sub_1BB86F418();
  v32 = v19;
  FeedGroupDecoration.decorationItem.getter();
  __swift_project_boxed_opaque_existential_1(v33, v34);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  sub_1BB871218();
  MEMORY[0x1BCCDD4D8](0, 0);
  v22 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v23 = (void *)sub_1BB86CB8C();
  v24 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_layoutAttributesForDecorationViewOfKind_withIndexPath_, v22, v23);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  objc_msgSend(v24, sel_setFrame_, a3, a4, a5, a6);
  v32 = v19;
  FeedGroupDecoration.decorationItem.getter();
  sub_1BB86F400();
  v32 = v19;
  v25 = v30;
  swift_retain();
  v26 = v24;
  FeedGroupDecoration.decorationItem.getter();
  __swift_project_boxed_opaque_existential_1(v33, v34);
  sub_1BB87120C();
  v27 = v31;
  v28 = (*(uint64_t (**)(uint64_t *, uint64_t))(v25 + 88))(v14, v31);
  if (v28 == *MEMORY[0x1E0DBBB48])
  {
    (*(void (**)(uint64_t *, uint64_t))(v25 + 96))(v14, v27);
    v29 = *v14;
  }
  else
  {
    if (v28 != *MEMORY[0x1E0DBBB50])
      (*(void (**)(uint64_t *, uint64_t))(v25 + 8))(v14, v27);
    v29 = -100;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  swift_release();
  objc_msgSend(v26, sel_setZIndex_, v29);

  objc_msgSend(v21, sel_applyLayoutAttributes_, v26);
}

uint64_t sub_1BB6DBFE0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  swift_getObjectType();
  if (qword_1EF2A6D98 != -1)
    swift_once();
  sub_1BA50AD30(&qword_1EF2CAB48, v0, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory, (uint64_t)&unk_1BB93FCC8);
  sub_1BB86D210();
  if (v8 != 1)
    return MEMORY[0x1E0DEE9D8];
  type metadata accessor for DebugItemDragInteraction();
  if (!swift_dynamicCastClass())
    return MEMORY[0x1E0DEE9D8];
  sub_1BA49A224(0, &qword_1ED3C04A0);
  v1 = (void *)sub_1BB8738DC();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36C8]), sel_initWithObject_, v1);

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3758]), sel_initWithItemProvider_, v2);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB8856E0;
  *(_QWORD *)(v4 + 32) = v3;
  v7 = v4;
  sub_1BB872DCC();
  v5 = v7;

  return v5;
}

char *sub_1BB6DC178(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1BB8702A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DebugItemDragInteraction();
  v6 = (char *)swift_dynamicCastClass();
  if (v6)
  {
    v7 = a1;
    v8 = objc_msgSend(v7, sel_view);
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3768]), sel_init);
      v19 = *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeedP33_ADE4A126F6FB4BE95458B6110D529A9F24DebugItemDragInteraction_feedItemLayoutAttributes];
      v11 = v19;
      v12 = v10;
      FeedItemLayoutAttributes.dragBackgroundColor.getter();
      v14 = v13;
      objc_msgSend(v12, sel_setBackgroundColor_, v13);

      v19 = v11;
      v15 = v12;
      FeedItemLayoutAttributes.dragPreviewClipping.getter();
      objc_msgSend(v9, sel_bounds);
      v16 = (void *)sub_1BB870294();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      objc_msgSend(v15, sel_setVisiblePath_, v16);

      v6 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D88]), sel_initWithView_parameters_, v9, v15);
    }
    else
    {

      return 0;
    }
  }
  return v6;
}

uint64_t type metadata accessor for ZIndexable()
{
  uint64_t result;

  result = qword_1EF2CABE0;
  if (!qword_1EF2CABE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB6DC360()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[16];

  v1 = (_QWORD *)v0[3];
  v3 = (_OWORD *)v0[4];
  v2 = (char *)v0[5];
  v4 = v3[13];
  v13[12] = v3[12];
  v13[13] = v4;
  v5 = v3[15];
  v13[14] = v3[14];
  v13[15] = v5;
  v6 = v3[9];
  v13[8] = v3[8];
  v13[9] = v6;
  v7 = v3[11];
  v13[10] = v3[10];
  v13[11] = v7;
  v8 = v3[5];
  v13[4] = v3[4];
  v13[5] = v8;
  v9 = v3[7];
  v13[6] = v3[6];
  v13[7] = v9;
  v10 = v3[1];
  v13[0] = *v3;
  v13[1] = v10;
  v11 = v3[3];
  v13[2] = v3[2];
  v13[3] = v11;
  return sub_1BB171510(v1, (double *)v13, v2);
}

uint64_t sub_1BB6DC3DC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB6DC42C(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BB6DC47C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF2CAB60)
  {
    v2 = type metadata accessor for FormatLayoutView();
    v3 = sub_1BA50AD30(&qword_1ED3B4890, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutView, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
    v5 = type metadata accessor for DebugItemLayoutView(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF2CAB60);
  }
}

uint64_t sub_1BB6DC4F8()
{
  uint64_t *v0;

  return sub_1BB6D5A28(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9]);
}

uint64_t sub_1BB6DC50C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  _BYTE v8[304];

  v1 = v0[2];
  v2 = v0[3];
  v4 = (const void *)v0[4];
  v3 = v0[5];
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_imageHeadlineViewRenderer + 8);
  ObjectType = swift_getObjectType();
  memcpy(v8, v4, sizeof(v8));
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v8, v3, ObjectType, v5);
}

uint64_t sub_1BB6DC598()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _BYTE v10[304];

  v1 = v0[2];
  v2 = v0[3];
  v3 = (const void *)v0[4];
  v4 = v0[5];
  v6 = v0[6];
  v5 = v0[7];
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_imageHeadlineViewRenderer + 8);
  ObjectType = swift_getObjectType();
  memcpy(v10, v3, sizeof(v10));
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40))(v2, v10, v4, v6, v5, ObjectType, v7);
}

uint64_t sub_1BB6DC638()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t ObjectType;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[12];

  v1 = v0[2];
  v2 = v0[3];
  v4 = (_OWORD *)v0[4];
  v3 = v0[5];
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_coverChannelViewRenderer + 8);
  ObjectType = swift_getObjectType();
  v7 = v4[9];
  v14[8] = v4[8];
  v14[9] = v7;
  v8 = v4[11];
  v14[10] = v4[10];
  v14[11] = v8;
  v9 = v4[5];
  v14[4] = v4[4];
  v14[5] = v9;
  v10 = v4[7];
  v14[6] = v4[6];
  v14[7] = v10;
  v11 = v4[1];
  v14[0] = *v4;
  v14[1] = v11;
  v12 = v4[3];
  v14[2] = v4[2];
  v14[3] = v12;
  return (*(uint64_t (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t))(v5 + 8))(v2, v14, v3, ObjectType, v5);
}

uint64_t sub_1BB6DC6D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  _BYTE v8[384];

  v1 = v0[2];
  v2 = v0[3];
  v4 = (const void *)v0[4];
  v3 = v0[5];
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_coverIssueViewRenderer + 8);
  ObjectType = swift_getObjectType();
  memcpy(v8, v4, sizeof(v8));
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t))(v5 + 8))(v2, v8, v3, ObjectType, v5);
}

uint64_t sub_1BB6DC764()
{
  return swift_deallocObject();
}

uint64_t sub_1BB6DC774()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

id *sub_1BB6DC798(id *a1)
{
  sub_1BA5E0E34(*a1);
  return a1;
}

_QWORD *sub_1BB6DC7D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  void *v62;
  void *v63;
  uint64_t v64;
  void *v65;
  _QWORD *v66;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
LABEL_17:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v7 = type metadata accessor for FeedItemSupplementaryAttributes();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = (void *)a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      v16 = (void *)a2[4];
      v17 = (void *)a2[5];
      a1[4] = v16;
      a1[5] = v17;
      v62 = (void *)a2[6];
      v63 = (void *)a2[7];
      a1[6] = v62;
      a1[7] = v63;
      v65 = (void *)a2[8];
      a1[8] = v65;
      v18 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      v66 = (_QWORD *)((char *)a1 + v18);
      v19 = (char *)a2 + v18;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      v20 = v15;
      v21 = v16;
      v22 = v17;
      v23 = v62;
      v24 = v63;
      v25 = v65;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v26 = *((_QWORD *)v19 + 1);
        *v66 = *(_QWORD *)v19;
        v66[1] = v26;
        v27 = *((_QWORD *)v19 + 2);
        swift_bridgeObjectRetain();
        if (v27 >= 0xB)
        {
          v31 = *((_QWORD *)v19 + 3);
          v32 = *((_QWORD *)v19 + 4);
          v66[2] = v27;
          v66[3] = v31;
          v66[4] = v32;
          swift_retain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)v66 + 1) = *((_OWORD *)v19 + 1);
          v66[4] = *((_QWORD *)v19 + 4);
        }
        v33 = *((_QWORD *)v19 + 6);
        v66[5] = *((_QWORD *)v19 + 5);
        v66[6] = v33;
        v66[7] = *((_QWORD *)v19 + 7);
        sub_1BB074B08();
        v35 = *(int *)(v34 + 80);
        v36 = (char *)v66 + v35;
        v37 = &v19[v35];
        *v36 = *v37;
        v64 = (uint64_t)v66 + v35 + 8;
        v38 = *((_OWORD *)v37 + 2);
        *((_OWORD *)v36 + 2) = v38;
        v39 = v38;
        v40 = **(void (***)(uint64_t, char *, uint64_t))(v38 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40(v64, v37 + 8, v39);
        v41 = *((_QWORD *)v37 + 7);
        *((_QWORD *)v36 + 6) = *((_QWORD *)v37 + 6);
        *((_QWORD *)v36 + 7) = v41;
        v42 = *((_QWORD *)v37 + 9);
        *((_QWORD *)v36 + 8) = *((_QWORD *)v37 + 8);
        *((_QWORD *)v36 + 9) = v42;
        *((_QWORD *)v36 + 10) = *((_QWORD *)v37 + 10);
        v36[88] = v37[88];
        *((_QWORD *)v36 + 12) = *((_QWORD *)v37 + 12);
        v43 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v44 = v43[13];
        v60 = &v37[v44];
        v61 = &v36[v44];
        v45 = sub_1BB86D8A0();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v59(v61, v60, v45);
        *(_QWORD *)&v36[v43[14]] = *(_QWORD *)&v37[v43[14]];
        *(_QWORD *)&v36[v43[15]] = *(_QWORD *)&v37[v43[15]];
        v36[v43[16]] = v37[v43[16]];
        *(_QWORD *)&v36[v43[17]] = *(_QWORD *)&v37[v43[17]];
        *(_QWORD *)&v36[v43[18]] = *(_QWORD *)&v37[v43[18]];
        *(_QWORD *)&v36[v43[19]] = *(_QWORD *)&v37[v43[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v28 = *(_QWORD *)v19;
        v29 = *(id *)v19;
        v30 = *((_QWORD *)v19 + 1);
        *v66 = v28;
        v66[1] = v30;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1BB0746EC();
      v47 = *(int *)(v46 + 48);
      v48 = (_OWORD *)((char *)a1 + v47);
      v49 = (_OWORD *)((char *)a2 + v47);
      v50 = v49[13];
      v48[12] = v49[12];
      v48[13] = v50;
      v51 = v49[15];
      v48[14] = v49[14];
      v48[15] = v51;
      v52 = v49[9];
      v48[8] = v49[8];
      v48[9] = v52;
      v53 = v49[11];
      v48[10] = v49[10];
      v48[11] = v53;
      v54 = v49[5];
      v48[4] = v49[4];
      v48[5] = v54;
      v55 = v49[7];
      v48[6] = v49[6];
      v48[7] = v55;
      v56 = v49[1];
      *v48 = *v49;
      v48[1] = v56;
      v57 = v49[3];
      v48[2] = v49[2];
      v48[3] = v57;
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_17;
      }
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      v11 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v11;
      v12 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v12;
      v13 = a2[13];
      a1[12] = a2[12];
      a1[13] = v13;
      a1[14] = a2[14];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_17;
  }
  v6 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1BB6DCC3C(id *a1)
{
  uint64_t result;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload() == 1)
    return swift_release();
  type metadata accessor for FeedItemSupplementaryAttributes();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3)
  {
    swift_bridgeObjectRelease();
    swift_release();

    v3 = (char *)a1 + *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
    type metadata accessor for InternalErrorViewModel();
    if (swift_getEnumCaseMultiPayload() != 1)
    {

      return swift_release();
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)v3 + 2) >= 0xBuLL)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB074B08();
    v5 = &v3[*(int *)(v4 + 80)];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v5 + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = &v5[*(int *)(type metadata accessor for GroupLayoutBindingContext() + 52)];
    v7 = sub_1BB86D8A0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if ((_DWORD)result == 2)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

_QWORD *sub_1BB6DCE20(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char *v58;
  char *v59;
  void *v60;
  void *v61;
  _QWORD *v62;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v4 = type metadata accessor for FeedItemSupplementaryAttributes();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = (void *)a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = (void *)a2[4];
      v14 = (void *)a2[5];
      a1[4] = v13;
      a1[5] = v14;
      v15 = (void *)a2[6];
      v60 = (void *)a2[7];
      a1[6] = v15;
      a1[7] = v60;
      v61 = (void *)a2[8];
      a1[8] = v61;
      v16 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      v62 = (_QWORD *)((char *)a1 + v16);
      v17 = (char *)a2 + v16;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      v18 = v12;
      v19 = v13;
      v20 = v14;
      v21 = v15;
      v22 = v60;
      v23 = v61;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v24 = *((_QWORD *)v17 + 1);
        *v62 = *(_QWORD *)v17;
        v62[1] = v24;
        v25 = *((_QWORD *)v17 + 2);
        swift_bridgeObjectRetain();
        if (v25 >= 0xB)
        {
          v29 = *((_QWORD *)v17 + 3);
          v30 = *((_QWORD *)v17 + 4);
          v62[2] = v25;
          v62[3] = v29;
          v62[4] = v30;
          swift_retain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)v62 + 1) = *((_OWORD *)v17 + 1);
          v62[4] = *((_QWORD *)v17 + 4);
        }
        v31 = *((_QWORD *)v17 + 6);
        v62[5] = *((_QWORD *)v17 + 5);
        v62[6] = v31;
        v62[7] = *((_QWORD *)v17 + 7);
        sub_1BB074B08();
        v33 = *(int *)(v32 + 80);
        v34 = (char *)v62 + v33;
        v35 = &v17[v33];
        *v34 = *v35;
        v36 = *((_OWORD *)v35 + 2);
        *((_OWORD *)v34 + 2) = v36;
        v37 = v36;
        v38 = **(void (***)(char *, char *, uint64_t))(v36 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38(v34 + 8, v35 + 8, v37);
        v39 = *((_QWORD *)v35 + 7);
        *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
        *((_QWORD *)v34 + 7) = v39;
        v40 = *((_QWORD *)v35 + 9);
        *((_QWORD *)v34 + 8) = *((_QWORD *)v35 + 8);
        *((_QWORD *)v34 + 9) = v40;
        *((_QWORD *)v34 + 10) = *((_QWORD *)v35 + 10);
        v34[88] = v35[88];
        *((_QWORD *)v34 + 12) = *((_QWORD *)v35 + 12);
        v41 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v42 = v41[13];
        v58 = &v35[v42];
        v59 = &v34[v42];
        v43 = sub_1BB86D8A0();
        v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v44(v59, v58, v43);
        *(_QWORD *)&v34[v41[14]] = *(_QWORD *)&v35[v41[14]];
        *(_QWORD *)&v34[v41[15]] = *(_QWORD *)&v35[v41[15]];
        v34[v41[16]] = v35[v41[16]];
        *(_QWORD *)&v34[v41[17]] = *(_QWORD *)&v35[v41[17]];
        *(_QWORD *)&v34[v41[18]] = *(_QWORD *)&v35[v41[18]];
        *(_QWORD *)&v34[v41[19]] = *(_QWORD *)&v35[v41[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v26 = *(_QWORD *)v17;
        v27 = *(id *)v17;
        v28 = *((_QWORD *)v17 + 1);
        *v62 = v26;
        v62[1] = v28;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1BB0746EC();
      v46 = *(int *)(v45 + 48);
      v47 = (_OWORD *)((char *)a1 + v46);
      v48 = (_OWORD *)((char *)a2 + v46);
      v49 = v48[13];
      v47[12] = v48[12];
      v47[13] = v49;
      v50 = v48[15];
      v47[14] = v48[14];
      v47[15] = v50;
      v51 = v48[9];
      v47[8] = v48[8];
      v47[9] = v51;
      v52 = v48[11];
      v47[10] = v48[10];
      v47[11] = v52;
      v53 = v48[5];
      v47[4] = v48[4];
      v47[5] = v53;
      v54 = v48[7];
      v47[6] = v48[6];
      v47[7] = v54;
      v55 = v48[1];
      *v47 = *v48;
      v47[1] = v55;
      v56 = v48[3];
      v47[2] = v48[2];
      v47[3] = v56;
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        goto LABEL_15;
      }
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      v8 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v8;
      v9 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v9;
      v10 = a2[13];
      a1[12] = a2[12];
      a1[13] = v10;
      a1[14] = a2[14];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  *a1 = *a2;
  swift_retain();
LABEL_15:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1BB6DD258(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  __int128 v6;
  __int128 v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  void *v55;
  _QWORD *v56;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v4 = type metadata accessor for FeedItemSupplementaryAttributes();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v8 = (void *)a2[3];
      a1[3] = v8;
      v9 = (void *)a2[4];
      a1[4] = v9;
      v10 = (void *)a2[5];
      a1[5] = v10;
      v52 = (void *)a2[6];
      a1[6] = v52;
      v53 = (void *)a2[7];
      a1[7] = v53;
      v55 = (void *)a2[8];
      a1[8] = v55;
      v11 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      v56 = (_QWORD *)((char *)a1 + v11);
      v12 = (char *)a2 + v11;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      v13 = v8;
      v14 = v9;
      v15 = v10;
      v16 = v52;
      v17 = v53;
      v18 = v55;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v56 = *(_QWORD *)v12;
        v56[1] = *((_QWORD *)v12 + 1);
        v19 = *((_QWORD *)v12 + 2);
        swift_bridgeObjectRetain();
        if (v19 >= 0xB)
        {
          v56[2] = v19;
          v56[3] = *((_QWORD *)v12 + 3);
          v56[4] = *((_QWORD *)v12 + 4);
          swift_retain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v20 = *((_OWORD *)v12 + 1);
          v56[4] = *((_QWORD *)v12 + 4);
          *((_OWORD *)v56 + 1) = v20;
        }
        v56[5] = *((_QWORD *)v12 + 5);
        v56[6] = *((_QWORD *)v12 + 6);
        v56[7] = *((_QWORD *)v12 + 7);
        sub_1BB074B08();
        v24 = *(int *)(v23 + 80);
        v25 = (char *)v56 + v24;
        v26 = &v12[v24];
        *v25 = *v26;
        v54 = (uint64_t)v56 + v24 + 8;
        v27 = *((_QWORD *)v26 + 4);
        *((_QWORD *)v25 + 4) = v27;
        *((_QWORD *)v25 + 5) = *((_QWORD *)v26 + 5);
        v28 = **(void (***)(uint64_t, char *, uint64_t))(v27 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28(v54, v26 + 8, v27);
        *((_QWORD *)v25 + 6) = *((_QWORD *)v26 + 6);
        *((_QWORD *)v25 + 7) = *((_QWORD *)v26 + 7);
        *((_QWORD *)v25 + 8) = *((_QWORD *)v26 + 8);
        *((_QWORD *)v25 + 9) = *((_QWORD *)v26 + 9);
        *((_QWORD *)v25 + 10) = *((_QWORD *)v26 + 10);
        v25[88] = v26[88];
        *((_QWORD *)v25 + 12) = *((_QWORD *)v26 + 12);
        v29 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v30 = v29[13];
        v50 = &v26[v30];
        v51 = &v25[v30];
        v31 = sub_1BB86D8A0();
        v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v49(v51, v50, v31);
        *(_QWORD *)&v25[v29[14]] = *(_QWORD *)&v26[v29[14]];
        *(_QWORD *)&v25[v29[15]] = *(_QWORD *)&v26[v29[15]];
        v25[v29[16]] = v26[v29[16]];
        *(_QWORD *)&v25[v29[17]] = *(_QWORD *)&v26[v29[17]];
        *(_QWORD *)&v25[v29[18]] = *(_QWORD *)&v26[v29[18]];
        *(_QWORD *)&v25[v29[19]] = *(_QWORD *)&v26[v29[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v21 = *(_QWORD *)v12;
        v22 = *(id *)v12;
        *v56 = v21;
        v56[1] = *((_QWORD *)v12 + 1);
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1BB0746EC();
      v33 = *(int *)(v32 + 48);
      v34 = (_OWORD *)((char *)a1 + v33);
      v35 = (__int128 *)((char *)a2 + v33);
      v36 = v35[12];
      v37 = v35[13];
      v38 = v35[15];
      v34[14] = v35[14];
      v34[15] = v38;
      v34[12] = v36;
      v34[13] = v37;
      v39 = v35[8];
      v40 = v35[9];
      v41 = v35[11];
      v34[10] = v35[10];
      v34[11] = v41;
      v34[8] = v39;
      v34[9] = v40;
      v42 = v35[4];
      v43 = v35[5];
      v44 = v35[7];
      v34[6] = v35[6];
      v34[7] = v44;
      v34[4] = v42;
      v34[5] = v43;
      v45 = *v35;
      v46 = v35[1];
      v47 = v35[3];
      v34[2] = v35[2];
      v34[3] = v47;
      *v34 = v45;
      v34[1] = v46;
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        goto LABEL_16;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v6 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v6;
      v7 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v7;
      a1[12] = a2[12];
      a1[13] = a2[13];
      a1[14] = a2[14];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_16;
  }
  return a1;
}

_OWORD *sub_1BB6DD714(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for FeedItemSupplementaryAttributes();
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      v9 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for InternalErrorViewModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v13 = *((_OWORD *)v11 + 1);
        *(_OWORD *)v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v13;
        v14 = *((_QWORD *)v11 + 5);
        *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
        *((_QWORD *)v10 + 5) = v14;
        *((_OWORD *)v10 + 3) = *((_OWORD *)v11 + 3);
        sub_1BB074B08();
        v16 = *(int *)(v15 + 80);
        v17 = &v10[v16];
        v18 = &v11[v16];
        *v17 = v11[v16];
        *((_QWORD *)v17 + 5) = *(_QWORD *)&v11[v16 + 40];
        *(_OWORD *)(v17 + 24) = *(_OWORD *)&v11[v16 + 24];
        *(_OWORD *)(v17 + 8) = *(_OWORD *)&v11[v16 + 8];
        v19 = *(_OWORD *)&v11[v16 + 64];
        *((_OWORD *)v17 + 3) = *(_OWORD *)&v11[v16 + 48];
        *((_OWORD *)v17 + 4) = v19;
        *((_QWORD *)v17 + 10) = *(_QWORD *)&v11[v16 + 80];
        v17[88] = v11[v16 + 88];
        *((_QWORD *)v17 + 12) = *(_QWORD *)&v11[v16 + 96];
        v20 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v21 = v20[13];
        v22 = &v17[v21];
        v23 = &v18[v21];
        v24 = sub_1BB86D8A0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        *(_QWORD *)&v17[v20[14]] = *(_QWORD *)&v18[v20[14]];
        *(_QWORD *)&v17[v20[15]] = *(_QWORD *)&v18[v20[15]];
        v17[v20[16]] = v18[v20[16]];
        *(_QWORD *)&v17[v20[17]] = *(_QWORD *)&v18[v20[17]];
        *(_QWORD *)&v17[v20[18]] = *(_QWORD *)&v18[v20[18]];
        *(_QWORD *)&v17[v20[19]] = *(_QWORD *)&v18[v20[19]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      sub_1BB0746EC();
      v26 = *(int *)(v25 + 48);
      v27 = (_OWORD *)((char *)a1 + v26);
      v28 = (_OWORD *)((char *)a2 + v26);
      v29 = v28[13];
      v27[12] = v28[12];
      v27[13] = v29;
      v30 = v28[15];
      v27[14] = v28[14];
      v27[15] = v30;
      v31 = v28[9];
      v27[8] = v28[8];
      v27[9] = v31;
      v32 = v28[11];
      v27[10] = v28[10];
      v27[11] = v32;
      v33 = v28[5];
      v27[4] = v28[4];
      v27[5] = v33;
      v34 = v28[7];
      v27[6] = v28[6];
      v27[7] = v34;
      v35 = v28[1];
      *v27 = *v28;
      v27[1] = v35;
      v36 = v28[3];
      v27[2] = v28[2];
      v27[3] = v36;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1BB6DD99C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for FeedItemSupplementaryAttributes();
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        v8 = a2[3];
        a1[2] = a2[2];
        a1[3] = v8;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v9 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = type metadata accessor for InternalErrorViewModel();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v13 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v13;
          v14 = *((_QWORD *)v11 + 5);
          *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
          *((_QWORD *)v10 + 5) = v14;
          *((_OWORD *)v10 + 3) = *((_OWORD *)v11 + 3);
          sub_1BB074B08();
          v16 = *(int *)(v15 + 80);
          v17 = &v10[v16];
          v18 = &v11[v16];
          *v17 = v11[v16];
          *((_QWORD *)v17 + 5) = *(_QWORD *)&v11[v16 + 40];
          *(_OWORD *)(v17 + 24) = *(_OWORD *)&v11[v16 + 24];
          *(_OWORD *)(v17 + 8) = *(_OWORD *)&v11[v16 + 8];
          v19 = *(_OWORD *)&v11[v16 + 64];
          *((_OWORD *)v17 + 3) = *(_OWORD *)&v11[v16 + 48];
          *((_OWORD *)v17 + 4) = v19;
          *((_QWORD *)v17 + 10) = *(_QWORD *)&v11[v16 + 80];
          v17[88] = v11[v16 + 88];
          *((_QWORD *)v17 + 12) = *(_QWORD *)&v11[v16 + 96];
          v20 = (int *)type metadata accessor for GroupLayoutBindingContext();
          v21 = v20[13];
          v22 = &v17[v21];
          v23 = &v18[v21];
          v24 = sub_1BB86D8A0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
          *(_QWORD *)&v17[v20[14]] = *(_QWORD *)&v18[v20[14]];
          *(_QWORD *)&v17[v20[15]] = *(_QWORD *)&v18[v20[15]];
          v17[v20[16]] = v18[v20[16]];
          *(_QWORD *)&v17[v20[17]] = *(_QWORD *)&v18[v20[17]];
          *(_QWORD *)&v17[v20[18]] = *(_QWORD *)&v18[v20[18]];
          *(_QWORD *)&v17[v20[19]] = *(_QWORD *)&v18[v20[19]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        sub_1BB0746EC();
        v26 = *(int *)(v25 + 48);
        v27 = (_OWORD *)((char *)a1 + v26);
        v28 = (_OWORD *)((char *)a2 + v26);
        v29 = v28[13];
        v27[12] = v28[12];
        v27[13] = v29;
        v30 = v28[15];
        v27[14] = v28[14];
        v27[15] = v30;
        v31 = v28[9];
        v27[8] = v28[8];
        v27[9] = v31;
        v32 = v28[11];
        v27[10] = v28[10];
        v27[11] = v32;
        v33 = v28[5];
        v27[4] = v28[4];
        v27[5] = v33;
        v34 = v28[7];
        v27[6] = v28[6];
        v27[7] = v34;
        v35 = v28[1];
        *v27 = *v28;
        v27[1] = v35;
        v36 = v28[3];
        v27[2] = v28[2];
        v27[3] = v36;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BB6DDC3C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FeedItemSupplementaryAttributes();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id sub_1BB6DDCA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  id result;
  double v8;
  double v9;
  double v10;
  float v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;

  v3 = *v0;
  v2 = v0[1];
  v5 = v0[2];
  v4 = v0[3];
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  v6 = sub_1BA72BED4(v17, v3);
  swift_bridgeObjectRelease();
  result = (id)swift_release();
  if (!v1)
  {
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v8 = sub_1BA72BED4(v17, v2);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v9 = sub_1BA72BED4(v17, v5);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v10 = sub_1BA72BED4(v17, v4);
    swift_bridgeObjectRelease();
    swift_release();
    v12 = objc_allocWithZone(MEMORY[0x1E0CD27D0]);
    v11 = v6;
    *(float *)&v13 = v11;
    *(float *)&v8 = v8;
    LODWORD(v14) = LODWORD(v8);
    *(float *)&v9 = v9;
    LODWORD(v15) = LODWORD(v9);
    *(float *)&v10 = v10;
    LODWORD(v16) = LODWORD(v10);
    return objc_msgSend(v12, sel_initWithControlPoints__::, v13, v14, v15, v16);
  }
  return result;
}

uint64_t FormatMediaTimingFunctionControlPoints.point1.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTimingFunctionControlPoints.point2.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTimingFunctionControlPoints.point3.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTimingFunctionControlPoints.point4.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6DDE74@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatMediaTimingFunctionControlPoints.init(from:)(a1, a2);
}

uint64_t sub_1BB6DDE88(_QWORD *a1)
{
  return FormatMediaTimingFunctionControlPoints.encode(to:)(a1);
}

unint64_t sub_1BB6DDE9C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6DDEC0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6DDEC0()
{
  unint64_t result;

  result = qword_1EF2CAC20;
  if (!qword_1EF2CAC20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunctionControlPoints, &type metadata for FormatMediaTimingFunctionControlPoints);
    atomic_store(result, (unint64_t *)&qword_1EF2CAC20);
  }
  return result;
}

unint64_t sub_1BB6DDF04(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE7AB68();
  a1[2] = sub_1BAEF85C8();
  result = sub_1BB6DDF38();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6DDF38()
{
  unint64_t result;

  result = qword_1EF2CAC28;
  if (!qword_1EF2CAC28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunctionControlPoints, &type metadata for FormatMediaTimingFunctionControlPoints);
    atomic_store(result, (unint64_t *)&qword_1EF2CAC28);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMediaTimingFunctionControlPoints()
{
  return &type metadata for FormatMediaTimingFunctionControlPoints;
}

uint64_t sub_1BB6DDF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void *v10;
  char v11;
  id v12;
  char *v13;
  BOOL v14;
  _OWORD v15[7];
  _OWORD v16[2];
  _OWORD v17[4];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];

  v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*v2 & 1) != 0)
  {
    result = sub_1BA78731C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v17);
    if (!v3)
    {
      v15[4] = v18;
      v15[5] = v19;
      v15[6] = v20;
      v16[0] = v21[0];
      *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v21 + 9);
      v15[0] = v17[0];
      v15[1] = v17[1];
      v15[2] = v17[2];
      v15[3] = v17[3];
      v10 = *(void **)&v17[0];
      v11 = v18 | 0x10;
      *(_QWORD *)a2 = *(_QWORD *)&v17[0];
      *(_BYTE *)(a2 + 8) = v11;
      v12 = v10;
      return sub_1BA8D1FE4((uint64_t)v15);
    }
  }
  else
  {
    result = sub_1BA70DDB0(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    if (!v3)
    {
      v13 = &v8[*(int *)(v6 + 40)];
      v14 = v13[*(int *)(type metadata accessor for FeedHeadline.State(0) + 32)] == 0;
      *(_QWORD *)a2 = *((_QWORD *)v8 + 5);
      *(_BYTE *)(a2 + 8) = v14;
      swift_unknownObjectRetain();
      return sub_1BA717468((uint64_t)v8);
    }
  }
  return result;
}

uint64_t static FormatActivityItemsBinding.== infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  if ((*a1 & 1) != 0)
  {
    if ((*a2 & 1) == 0)
      return 0;
  }
  else if ((*a2 & 1) != 0)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1BB6DE114(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6DE138();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6DE138()
{
  unint64_t result;

  result = qword_1EF2CAC30;
  if (!qword_1EF2CAC30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatActivityItemsBinding, &type metadata for FormatActivityItemsBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2CAC30);
  }
  return result;
}

unint64_t sub_1BB6DE17C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE7F674();
  a1[2] = sub_1BAEF6CBC();
  result = sub_1BB6DE1B0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6DE1B0()
{
  unint64_t result;

  result = qword_1EF2CAC38;
  if (!qword_1EF2CAC38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatActivityItemsBinding, &type metadata for FormatActivityItemsBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2CAC38);
  }
  return result;
}

uint64_t sub_1BB6DE1F4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatActivityItemsBinding.init(from:)(a1, a2);
}

uint64_t sub_1BB6DE208(_QWORD *a1)
{
  return FormatActivityItemsBinding.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatActivityItemsBinding(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB6DE268 + 4 * byte_1BB93FE55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB6DE29C + 4 * asc_1BB93FE50[v4]))();
}

uint64_t sub_1BB6DE29C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6DE2A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6DE2ACLL);
  return result;
}

uint64_t sub_1BB6DE2B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6DE2C0);
  *(_BYTE *)result = -(char)a2;
  return result;
}

uint64_t sub_1BB6DE2C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6DE2CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatActivityItemsBinding()
{
  return &type metadata for FormatActivityItemsBinding;
}

uint64_t initializeWithCopy for DebugInspectionCohort(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectionCohort(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  return a1;
}

uint64_t assignWithTake for DebugInspectionCohort(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectionCohort()
{
  return &type metadata for DebugInspectionCohort;
}

uint64_t sub_1BB6DE414(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 v10;
  _BYTE v12[16];
  __int128 v13;
  __int128 v14;

  v3 = v1;
  sub_1BB6DE87C(0, &qword_1EF2CAC50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6DE838();
  sub_1BB8746C8();
  v10 = v3[1];
  v13 = *v3;
  v14 = v10;
  v12[15] = 0;
  sub_1BB10E5DC();
  sub_1BB8741AC();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1BB874134();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB6DE54C()
{
  _BYTE *v0;

  if (*v0)
    return 0x65726F6373;
  else
    return 6775156;
}

uint64_t sub_1BB6DE57C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB6DEA7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB6DE5A0()
{
  sub_1BB6DE838();
  return sub_1BB874710();
}

uint64_t sub_1BB6DE5C8()
{
  sub_1BB6DE838();
  return sub_1BB87471C();
}

double sub_1BB6DE5F0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_1BB6DE644(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1BB6DE630(_QWORD *a1)
{
  return sub_1BB6DE414(a1);
}

uint64_t sub_1BB6DE644@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  sub_1BB6DE87C(0, &qword_1EF2CAC40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6DE838();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = 0;
  sub_1BB10E038();
  sub_1BB8740D4();
  v10 = v20;
  v11 = v22;
  v17 = v21;
  v18 = v19;
  LOBYTE(v19) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_1BB874044();
  v13 = v9;
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v17;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_BYTE *)(a2 + 40) = v15 & 1;
  return result;
}

unint64_t sub_1BB6DE838()
{
  unint64_t result;

  result = qword_1EF2CAC48;
  if (!qword_1EF2CAC48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94007C, &type metadata for DebugInspectionCohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CAC48);
  }
  return result;
}

void sub_1BB6DE87C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB6DE838();
    v7 = a3(a1, &type metadata for DebugInspectionCohort.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for DebugInspectionCohort.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB6DE924 + 4 * byte_1BB93FF45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB6DE958 + 4 * byte_1BB93FF40[v4]))();
}

uint64_t sub_1BB6DE958(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6DE960(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6DE968);
  return result;
}

uint64_t sub_1BB6DE974(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6DE97CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB6DE980(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6DE988(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionCohort.CodingKeys()
{
  return &type metadata for DebugInspectionCohort.CodingKeys;
}

unint64_t sub_1BB6DE9A8()
{
  unint64_t result;

  result = qword_1EF2CAC58;
  if (!qword_1EF2CAC58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB940054, &type metadata for DebugInspectionCohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CAC58);
  }
  return result;
}

unint64_t sub_1BB6DE9F0()
{
  unint64_t result;

  result = qword_1EF2CAC60;
  if (!qword_1EF2CAC60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93FFC4, &type metadata for DebugInspectionCohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CAC60);
  }
  return result;
}

unint64_t sub_1BB6DEA38()
{
  unint64_t result;

  result = qword_1EF2CAC68;
  if (!qword_1EF2CAC68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93FFEC, &type metadata for DebugInspectionCohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CAC68);
  }
  return result;
}

uint64_t sub_1BB6DEA7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6775156 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BB6DEB54()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BAF6A4F4(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t sub_1BB6DEB88()
{
  sub_1BB6DEB54();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB6DEBA8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = *v0;
  sub_1BB873CB4();
  sub_1BB872AFC(",\n    videoViewPool=");
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 80);
  v5 = swift_bridgeObjectRetain();
  MEMORY[0x1BCCE37B4](v5, v4);
  swift_bridgeObjectRelease();
  sub_1BB87420C();
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  sub_1BB87420C();
  sub_1BB872AFC(v8);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v9);
  return 0;
}

uint64_t sub_1BB6DED38()
{
  return sub_1BB6DEBA8();
}

uint64_t sub_1BB6DED58(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC79E48(0, v1, 0);
    v4 = a1 + 32;
    v2 = v29;
    do
    {
      sub_1BA4C010C(v4, (uint64_t)v26);
      v5 = v27;
      v6 = v28;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E48(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v29;
      }
      v9 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1BAC79E48(v8 > 1, v9 + 1, 1);
        v2 = v29;
      }
      *(_QWORD *)(v2 + 16) = v9 + 1;
      *(_QWORD *)(v2 + 8 * v9 + 32) = v7;
      v4 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  v10 = *(_QWORD *)(v2 + 16);
  if (!v10)
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_33:
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  swift_bridgeObjectRetain();
  v11 = 0;
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v13 = *(_QWORD *)(v2 + 8 * v11 + 32);
    v14 = *(_QWORD *)(v13 + 16);
    v15 = v12[2];
    v16 = v15 + v14;
    if (__OFADD__(v15, v14))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v16 <= v12[3] >> 1)
    {
      if (*(_QWORD *)(v13 + 16))
        goto LABEL_22;
    }
    else
    {
      if (v15 <= v16)
        v18 = v15 + v14;
      else
        v18 = v15;
      v12 = sub_1BB38C7E8(isUniquelyReferenced_nonNull_native, v18, 1, v12);
      if (*(_QWORD *)(v13 + 16))
      {
LABEL_22:
        v19 = v12[2];
        if ((v12[3] >> 1) - v19 < v14)
          goto LABEL_36;
        v20 = (unint64_t)&v12[5 * v19 + 4];
        if (v13 + 32 < v20 + 40 * v14 && v20 < v13 + 32 + 40 * v14)
          goto LABEL_38;
        swift_arrayInitWithCopy();
        if (v14)
        {
          v22 = v12[2];
          v23 = __OFADD__(v22, v14);
          v24 = v22 + v14;
          if (v23)
            goto LABEL_37;
          v12[2] = v24;
        }
        goto LABEL_12;
      }
    }
    if (v14)
      goto LABEL_35;
LABEL_12:
    ++v11;
    swift_bridgeObjectRelease();
    if (v10 == v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB6DF008()
{
  uint64_t *v0;

  return sub_1BB6DED58(*v0);
}

_QWORD *sub_1BB6DF010(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __int128 v7;
  uint64_t v8;
  __int128 v9[2];
  _BYTE v10[40];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = a1 + 32;
  do
  {
    sub_1BB6DF15C(v3, (uint64_t)v10);
    sub_1BAFB3794((uint64_t)v10, (uint64_t)&v7);
    if (v8)
    {
      sub_1BA4CECCC(&v7, (uint64_t)v9);
      sub_1BA4CECCC(v9, (uint64_t)&v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_1BB38C7FC(0, v2[2] + 1, 1, v2);
      v5 = v2[2];
      v4 = v2[3];
      if (v5 >= v4 >> 1)
        v2 = sub_1BB38C7FC((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
      v2[2] = v5 + 1;
      sub_1BA4CECCC(&v7, (uint64_t)&v2[5 * v5 + 4]);
    }
    else
    {
      sub_1BA65DB80((uint64_t)&v7, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
    }
    v3 += 40;
    --v1;
  }
  while (v1);
  return v2;
}

uint64_t sub_1BB6DF15C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA65DC00(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1BB6DF1B8(void *a1, uint64_t a2)
{
  char *v2;
  int *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, _QWORD, uint64_t, uint64_t);
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  _QWORD *v76;
  void (*v78)(uint64_t *, _QWORD, uint64_t, uint64_t);
  __int128 v79;
  _OWORD v81[2];
  uint64_t v82;
  _OWORD v83[2];
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;

  v2 = "ptionsKey";
  v3 = &OBJC_IVAR____TtC8NewsFeed30SportsTaxonomyGraphSectionNode_weakParents;
  if (a2)
  {
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BA8C88C8(0);
    v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
    v7 = (v6 + 32) & ~v6;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
    v9 = v8 + v7;
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = (_QWORD *)(v9 + *(int *)(v12 + 24));
    *v13 = v10;
    v13[1] = v11;
    v14 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
    *(_OWORD *)v9 = xmmword_1BB8D4900;
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)(v9 + 24) = 0;
    v15 = v9 + *(int *)(v12 + 28);
    *(_QWORD *)v15 = 0;
    *(_QWORD *)(v15 + 8) = 0;
    *(_BYTE *)(v15 + 16) = -1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 0, 1, v12);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BAF89090(0x6567616B636150, 0xE700000000000000, 0, 0, v8, v81);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v16 = sub_1BB38C7E8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
      v16 = sub_1BB38C7E8((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v16[2] = v18 + 1;
    v19 = &v16[5 * v18];
    v20 = v81[1];
    *((_OWORD *)v19 + 2) = v81[0];
    *((_OWORD *)v19 + 3) = v20;
    v19[8] = v82;
    swift_release();
    v21 = a1;
    v2 = "OpenExternalURLOptionsKey" + 16;
  }
  else
  {
    v21 = a1;
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v83[0] = v21;
  v22 = v21;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2BE000);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(&v85, (uint64_t)&v88);
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BA8C88C8(0);
    v24 = *(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80);
    v25 = (v24 + 32) & ~v24;
    v26 = swift_allocObject();
    v79 = *((_OWORD *)v2 + 231);
    *(_OWORD *)(v26 + 16) = v79;
    v27 = v26 + v25;
    v28 = *((_QWORD *)&v89 + 1);
    v29 = v90;
    __swift_project_boxed_opaque_existential_1(&v88, *((uint64_t *)&v89 + 1));
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    v32 = v31;
    v33 = type metadata accessor for FormatInspectionItem(0);
    v34 = (uint64_t *)(v26 + v25 + *(int *)(v33 + 24));
    *v34 = v30;
    v34[1] = v32;
    v35 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    v78 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
    v78(v34, 0, 1, v35);
    *(_OWORD *)v27 = xmmword_1BB8D4900;
    *(_QWORD *)(v27 + 16) = 0;
    *(_QWORD *)(v27 + 24) = 0;
    v36 = v26 + v25 + *(int *)(v33 + 28);
    *(_QWORD *)v36 = 0;
    *(_QWORD *)(v36 + 8) = 0;
    *(_BYTE *)(v36 + 16) = -1;
    v37 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v37(v26 + v25, 0, 1, v33);
    sub_1BAF89090(0x7470697263736544, 0xEB000000006E6F69, 0, 0, v26, v83);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1BB38C7E8(0, v16[2] + 1, 1, v16);
    v39 = v16[2];
    v38 = v16[3];
    if (v39 >= v38 >> 1)
      v16 = sub_1BB38C7E8((_QWORD *)(v38 > 1), v39 + 1, 1, v16);
    v16[2] = v39 + 1;
    v40 = &v16[5 * v39];
    v41 = v83[0];
    v42 = v83[1];
    v40[8] = v84;
    *((_OWORD *)v40 + 2) = v41;
    *((_OWORD *)v40 + 3) = v42;
    v43 = *((_QWORD *)&v89 + 1);
    v44 = v90;
    __swift_project_boxed_opaque_existential_1(&v88, *((uint64_t *)&v89 + 1));
    v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 24))(v43, v44);
    if (v46)
    {
      v47 = v45;
      v48 = v46;
      v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = v79;
      v50 = v49 + v25;
      v51 = (uint64_t *)(v49 + v25 + *(int *)(v33 + 24));
      *v51 = v47;
      v51[1] = v48;
      swift_storeEnumTagMultiPayload();
      v78(v51, 0, 1, v35);
      *(_OWORD *)v50 = xmmword_1BB8D4900;
      *(_QWORD *)(v50 + 16) = 0;
      *(_QWORD *)(v50 + 24) = 0;
      v52 = v50 + *(int *)(v33 + 28);
      *(_QWORD *)v52 = 0;
      *(_QWORD *)(v52 + 8) = 0;
      *(_BYTE *)(v52 + 16) = -1;
      v37(v50, 0, 1, v33);
      sub_1BAF89090(1953392968, 0xE400000000000000, 0, 0, v49, &v85);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v54 = v16[2];
      v53 = v16[3];
      if (v54 >= v53 >> 1)
        v16 = sub_1BB38C7E8((_QWORD *)(v53 > 1), v54 + 1, 1, v16);
      v3 = &OBJC_IVAR____TtC8NewsFeed30SportsTaxonomyGraphSectionNode_weakParents;
      v21 = a1;
      v2 = "OpenExternalURLOptionsKey" + 16;
      v16[2] = v54 + 1;
      v55 = &v16[5 * v54];
      v56 = v85;
      v57 = v86;
      v55[8] = v87;
      *((_OWORD *)v55 + 2) = v56;
      *((_OWORD *)v55 + 3) = v57;
    }
    else
    {
      v3 = &OBJC_IVAR____TtC8NewsFeed30SportsTaxonomyGraphSectionNode_weakParents;
      v21 = a1;
      v2 = "ptionsKey";
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v88);
  }
  else
  {
    v87 = 0;
    v85 = 0u;
    v86 = 0u;
    sub_1BA65DB80((uint64_t)&v85, (unint64_t *)&qword_1EF2CE320, (unint64_t *)&unk_1EF2BE000);
  }
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v59 = *(unsigned __int8 *)(*(_QWORD *)(v58 - 8) + 80);
  v60 = (v59 + 32) & ~v59;
  v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = *((_OWORD *)v2 + 231);
  v62 = v61 + v60;
  v63 = sub_1BA907794(v21);
  v65 = v64;
  v66 = type metadata accessor for FormatInspectionItem(0);
  v67 = (uint64_t *)(v62 + *(int *)(v66 + 24));
  *v67 = v63;
  v67[1] = v65;
  v68 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v67, 0, 1, v68);
  *(_OWORD *)v62 = *((_OWORD *)v3 + 144);
  *(_QWORD *)(v62 + 16) = 0;
  *(_QWORD *)(v62 + 24) = 0;
  v69 = v62 + *(int *)(v66 + 28);
  *(_QWORD *)v69 = 0;
  *(_QWORD *)(v69 + 8) = 0;
  *(_BYTE *)(v69 + 16) = -1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v62, 0, 1, v66);
  sub_1BAF89090(1886221636, 0xE400000000000000, 0, 0, v61, &v88);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_1BB38C7E8(0, v16[2] + 1, 1, v16);
  v71 = v16[2];
  v70 = v16[3];
  if (v71 >= v70 >> 1)
    v16 = sub_1BB38C7E8((_QWORD *)(v70 > 1), v71 + 1, 1, v16);
  v16[2] = v71 + 1;
  v72 = &v16[5 * v71];
  v73 = v88;
  v74 = v89;
  v72[8] = v90;
  *((_OWORD *)v72 + 2) = v73;
  *((_OWORD *)v72 + 3) = v74;
  v75 = sub_1BA9752A4((uint64_t)v16);
  swift_bridgeObjectRelease();
  v76 = sub_1BB6DF010(v75);
  swift_bridgeObjectRelease();
  return v76;
}

ValueMetadata *type metadata accessor for FormatInspection()
{
  return &type metadata for FormatInspection;
}

uint64_t sub_1BB6DF9F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;

  sub_1BB6DFF38(0, &qword_1ED3AB5C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6DFD1C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v23 = v10;
  v28 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v24 = v14;
  v21 = v13;
  v27 = 2;
  swift_bridgeObjectRetain();
  v22 = 0;
  v20 = sub_1BB87402C();
  v16 = v15;
  sub_1BA920B18();
  v26 = 3;
  sub_1BA920C0C((unint64_t *)&unk_1ED3AB0A0, (uint64_t (*)(void))sub_1BA920B6C, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v25;
  swift_bridgeObjectRetain();
  v19 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v16;
  *(_QWORD *)(a2 + 48) = v18;
  *(_BYTE *)(a2 + 56) = 5;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BB6DFD1C()
{
  unint64_t result;

  result = qword_1ED3AA9F0;
  if (!qword_1ED3AA9F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB940328, &type metadata for SportsDataVisualizationResponseLineScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA9F0);
  }
  return result;
}

uint64_t sub_1BB6DFD60(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;

  sub_1BB6DFF38(0, &qword_1EF2CAC70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v8 = v1[2];
  v17 = v1[3];
  v18 = v8;
  v9 = v1[4];
  v15 = v1[5];
  v16 = v9;
  v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6DFD1C();
  sub_1BB8746C8();
  v24 = 0;
  v10 = v19;
  sub_1BB87417C();
  if (!v10)
  {
    v11 = v14;
    v23 = 1;
    sub_1BB87417C();
    v22 = 2;
    sub_1BB87411C();
    v20 = v11;
    v21 = 3;
    sub_1BA920B18();
    sub_1BA920C0C(&qword_1EF2AA9C8, (uint64_t (*)(void))sub_1BA920C70, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1BB6DFF38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB6DFD1C();
    v7 = a3(a1, &type metadata for SportsDataVisualizationResponseLineScoreItem.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseLineScoreItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB6DFFE0 + 4 * byte_1BB9401D5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB6E0014 + 4 * byte_1BB9401D0[v4]))();
}

uint64_t sub_1BB6E0014(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6E001C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6E0024);
  return result;
}

uint64_t sub_1BB6E0030(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6E0038);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB6E003C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6E0044(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseLineScoreItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseLineScoreItem.CodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseLineScoreItem()
{
  return &type metadata for SportsDataVisualizationResponseLineScoreItem;
}

uint64_t sub_1BB6E0070()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB6E00AC + 4 * byte_1BB9401DA[*v0]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BB6E00AC()
{
  return 0x6449746E657665;
}

uint64_t sub_1BB6E00C4()
{
  return 0x615465756761656CLL;
}

uint64_t sub_1BB6E00E4()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BB6E0108()
{
  sub_1BB6DFD1C();
  return sub_1BB874710();
}

uint64_t sub_1BB6E0130()
{
  sub_1BB6DFD1C();
  return sub_1BB87471C();
}

uint64_t sub_1BB6E0158@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB6DF9F4(a1, a2);
}

uint64_t sub_1BB6E016C(_QWORD *a1)
{
  return sub_1BB6DFD60(a1);
}

unint64_t sub_1BB6E0184()
{
  unint64_t result;

  result = qword_1EF2CAC78;
  if (!qword_1EF2CAC78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB940300, &type metadata for SportsDataVisualizationResponseLineScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CAC78);
  }
  return result;
}

unint64_t sub_1BB6E01CC()
{
  unint64_t result;

  result = qword_1ED3AAA00;
  if (!qword_1ED3AAA00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB940270, &type metadata for SportsDataVisualizationResponseLineScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AAA00);
  }
  return result;
}

unint64_t sub_1BB6E0214()
{
  unint64_t result;

  result = qword_1ED3AA9F8;
  if (!qword_1ED3AA9F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB940298, &type metadata for SportsDataVisualizationResponseLineScoreItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA9F8);
  }
  return result;
}

void sub_1BB6E0258(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  char *v40;
  _QWORD v41[24];

  v41[16] = a2;
  v41[14] = a1;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v2);
  v41[13] = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v41[12] = (char *)v41 - v5;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v41[1] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41[2] = (char *)v41 - v7;
  v8 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1E0C80A78](v8);
  v41[0] = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v41[15] = (char *)v41 - v11;
  sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v12);
  v41[11] = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v41[10] = (char *)v41 - v15;
  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3CD5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v16);
  v41[9] = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v41[8] = (char *)v41 - v19;
  sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v20);
  v41[7] = (char *)v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v41[6] = (char *)v41 - v23;
  sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v24);
  v41[5] = (char *)v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v41[4] = (char *)v41 - v27;
  sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v28);
  v41[3] = (char *)v41 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3CD600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v31);
  MEMORY[0x1E0C80A78](v32);
  sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v35);
  MEMORY[0x1E0C80A78](v36);
  v37 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1E0C80A78](v37);
  sub_1BA4C2DD8(v41[23], (uint64_t)v41 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), v39);
  v40 = (char *)sub_1BB6E0788 + 4 * word_1BB940380[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB6E0788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = MEMORY[0x1E0DEAFA0];
  sub_1BB6E1780(v0, v2, (uint64_t)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  sub_1BB6EB824(v2, v1, (uint64_t)&unk_1ED3CD660, v4, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  sub_1BB6E1FE0(0, v1, *(_QWORD *)(v3 - 128));
  sub_1BB6E17DC(v2, (uint64_t)&unk_1ED3CD660, v4, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  type metadata accessor for FormatPropertyDefinition(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB6E0FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  _QWORD v32[12];
  uint64_t v33;
  uint64_t v34;

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v1);
  v32[11] = (char *)v32 - v2;
  sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v3);
  v32[10] = (char *)v32 - v4;
  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3CD5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v32[9] = v5;
  MEMORY[0x1E0C80A78](v5);
  v32[8] = (char *)v32 - v6;
  sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v7);
  v32[7] = (char *)v32 - v8;
  sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v9);
  v32[6] = (char *)v32 - v10;
  sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v11);
  v32[5] = (char *)v32 - v12;
  v13 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1E0C80A78](v13);
  v32[4] = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3CD600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v32[3] = v15;
  MEMORY[0x1E0C80A78](v15);
  v32[2] = (char *)v32 - v16;
  sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v17);
  v32[1] = (char *)v32 - v18;
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v19);
  v32[0] = (char *)v32 - v20;
  v33 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1E0C80A78](v33);
  v22 = (char *)v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v0;
  sub_1BB6E18B0();
  v24 = v23;
  if (!*(_QWORD *)(v23 + 16)
    || (sub_1BB8745CC(),
        sub_1BB872A90(),
        v25 = sub_1BB874608(),
        v26 = -1 << *(_BYTE *)(v24 + 32),
        v27 = v25 & ~v26,
        ((*(_QWORD *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0))
  {
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8(v34, (uint64_t)v22, type metadata accessor for FormatCompilerProperty);
    v30 = (char *)&loc_1BB6E1498 + 4 * byte_1BB940394[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v28 = ~v26;
  while (!*(_BYTE *)(*(_QWORD *)(v24 + 48) + v27) || *(_BYTE *)(*(_QWORD *)(v24 + 48) + v27) == 1)
  {
    v29 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
      goto LABEL_11;
    v27 = (v27 + 1) & v28;
    if (((*(_QWORD *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
      goto LABEL_8;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1BB6E1780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5, type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1BB6E17DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  uint64_t v6;

  v6 = a5(0, a2, a3, a4, type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1BB6E1824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatCompilerEnumProperty(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB6E1868(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  uint64_t v4;

  v4 = a3(0, a2, type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BB6E18B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  char *v16;
  _QWORD v17[6];

  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v0);
  v17[4] = (char *)v17 - v1;
  sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v2);
  v17[3] = (char *)v17 - v3;
  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3CD5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v17[2] = v4;
  MEMORY[0x1E0C80A78](v4);
  v17[1] = (char *)v17 - v5;
  sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v7);
  sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1E0C80A78](v9);
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3CD600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v11);
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1E0C80A78](v13);
  sub_1BA4C2DD8(v17[5], (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  v16 = (char *)sub_1BB6E1C24 + 4 * byte_1BB9403A8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB6E1C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DEAFA0];
  sub_1BB6E1780(v1, v0, (uint64_t)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  v3 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  sub_1BB6E17DC(v0, (uint64_t)&unk_1ED3CD660, v2, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  return v3;
}

uint64_t FormatCompilerEnumProperty.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerEnumProperty.required.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t FormatCompilerEnumProperty.deprecated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t FormatCompilerEnumProperty.compilerFlags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerPrimitiveProperty.description.getter()
{
  uint64_t v0;

  v0 = sub_1BA62405C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FormatCompilerPrimitiveProperty.compilerFlags.getter(uint64_t a1)
{
  sub_1BA624050(a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6E1FE0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v17[-v7];
  v17[15] = a1;
  *(_QWORD *)a3 = FormatOptionType.rawValue.getter();
  *(_QWORD *)(a3 + 8) = v9;
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a3 + 16) = *(_QWORD *)a2;
  *(_QWORD *)(a3 + 24) = v10;
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a3 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a3 + 40) = v11;
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a3 + 48) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 56) = v12;
  *(_BYTE *)(a3 + 64) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a3 + 65) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a3 + 66) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a3 + 72) = *(_QWORD *)(a2 + 56);
  v13 = MEMORY[0x1E0DEAFA0];
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BA57B488(a2 + *(int *)(v14 + 60), (uint64_t)v8, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB6E17DC(a2, (uint64_t)&unk_1ED3CD660, v13, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  sub_1BA50CAA8(0, &qword_1ED3CE138, v13, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BA646F54((uint64_t)v8, a3 + *(int *)(v15 + 64), (uint64_t)&qword_1ED3C47E8, (uint64_t)MEMORY[0x1E0DB48B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4A3FB4);
}

uint64_t sub_1BB6E218C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v17[-v7];
  v17[15] = a1;
  *(_QWORD *)a3 = FormatOptionType.rawValue.getter();
  *(_QWORD *)(a3 + 8) = v9;
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a3 + 16) = *(_QWORD *)a2;
  *(_QWORD *)(a3 + 24) = v10;
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a3 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a3 + 40) = v11;
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a3 + 48) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 56) = v12;
  *(_BYTE *)(a3 + 64) = *(_BYTE *)(a2 + 48);
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a3 + 72) = v13;
  *(_BYTE *)(a3 + 80) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a3 + 88) = *(_QWORD *)(a2 + 72);
  sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BA57B488(a2 + *(int *)(v14 + 60), (uint64_t)v8, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  swift_bridgeObjectRetain();
  sub_1BA5E7FF4(v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB6E17DC(a2, (uint64_t)&qword_1ED3CD640, (uint64_t)sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA4CDF6C);
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BA646F54((uint64_t)v8, a3 + *(int *)(v15 + 64), (uint64_t)&qword_1ED3C47E8, (uint64_t)MEMORY[0x1E0DB48B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4A3FB4);
}

uint64_t sub_1BB6E2340@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  int *v14;
  uint64_t v15;
  int *v16;
  int *v17;
  uint64_t (*v18)(void);
  _BYTE v20[16];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v20[-v7];
  v20[15] = a1;
  *(_QWORD *)a3 = FormatOptionType.rawValue.getter();
  *(_QWORD *)(a3 + 8) = v9;
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a3 + 16) = *(_QWORD *)a2;
  *(_QWORD *)(a3 + 24) = v10;
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a3 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a3 + 40) = v11;
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a3 + 48) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 56) = v12;
  *(_BYTE *)(a3 + 64) = *(_BYTE *)(a2 + 48);
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3CD600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v14 = v13;
  v15 = a2 + v13[12];
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3B8A38, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v17 = v16;
  sub_1BA57B488(v15, a3 + v16[13], (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  *(_BYTE *)(a3 + v17[14]) = *(_BYTE *)(a2 + v14[13]);
  *(_QWORD *)(a3 + v17[15]) = *(_QWORD *)(a2 + v14[14]);
  v18 = MEMORY[0x1E0DB48B0];
  sub_1BA57B488(a2 + v14[15], (uint64_t)v8, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB6E1868(a2, (uint64_t)&qword_1ED3CD600, (uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA68D5EC);
  return sub_1BA646F54((uint64_t)v8, a3 + v17[16], (uint64_t)&qword_1ED3C47E8, (uint64_t)v18, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4A3FB4);
}

uint64_t sub_1BB6E24FC@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v18[-v7];
  v18[15] = a1;
  *(_QWORD *)a3 = FormatOptionType.rawValue.getter();
  *(_QWORD *)(a3 + 8) = v9;
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a3 + 16) = *(_QWORD *)a2;
  *(_QWORD *)(a3 + 24) = v10;
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a3 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a3 + 40) = v11;
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a3 + 48) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 56) = v12;
  *(_BYTE *)(a3 + 64) = *(_BYTE *)(a2 + 48);
  v13 = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a3 + 72) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a3 + 80) = v13;
  *(_BYTE *)(a3 + 81) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a3 + 88) = *(_QWORD *)(a2 + 72);
  v14 = MEMORY[0x1E0DEF040];
  sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BA57B488(a2 + *(int *)(v15 + 60), (uint64_t)v8, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB6E17DC(a2, (uint64_t)&qword_1ED3CD610, (uint64_t)sub_1BA841CF4, v14, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA4CDF6C);
  sub_1BA4CDF6C(0, &qword_1ED3CE100, (uint64_t (*)(void))sub_1BA841CF4, v14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BA646F54((uint64_t)v8, a3 + *(int *)(v16 + 64), (uint64_t)&qword_1ED3C47E8, (uint64_t)MEMORY[0x1E0DB48B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4A3FB4);
}

uint64_t sub_1BB6E26B0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v18[-v7];
  v18[15] = a1;
  *(_QWORD *)a3 = FormatOptionType.rawValue.getter();
  *(_QWORD *)(a3 + 8) = v9;
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a3 + 16) = *(_QWORD *)a2;
  *(_QWORD *)(a3 + 24) = v10;
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a3 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a3 + 40) = v11;
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a3 + 48) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 56) = v12;
  *(_BYTE *)(a3 + 64) = *(_BYTE *)(a2 + 48);
  v13 = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a3 + 72) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a3 + 80) = v13;
  *(_BYTE *)(a3 + 81) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a3 + 88) = *(_QWORD *)(a2 + 72);
  v14 = MEMORY[0x1E0DEB418];
  sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BA57B488(a2 + *(int *)(v15 + 60), (uint64_t)v8, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB6E17DC(a2, (uint64_t)&qword_1ED3CD670, v14, (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  sub_1BA50CAA8(0, &qword_1ED3CE140, v14, (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BA646F54((uint64_t)v8, a3 + *(int *)(v16 + 64), (uint64_t)&qword_1ED3C47E8, (uint64_t)MEMORY[0x1E0DB48B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4A3FB4);
}

uint64_t sub_1BB6E2864@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v18[-v7];
  v18[15] = a1;
  *(_QWORD *)a3 = FormatOptionType.rawValue.getter();
  *(_QWORD *)(a3 + 8) = v9;
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a3 + 16) = *(_QWORD *)a2;
  *(_QWORD *)(a3 + 24) = v10;
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a3 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a3 + 40) = v11;
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a3 + 48) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 56) = v12;
  *(_BYTE *)(a3 + 64) = *(_BYTE *)(a2 + 48);
  v13 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a3 + 72) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a3 + 80) = v13;
  *(_BYTE *)(a3 + 88) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a3 + 96) = *(_QWORD *)(a2 + 80);
  v14 = MEMORY[0x1E0DEA968];
  sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BA57B488(a2 + *(int *)(v15 + 60), (uint64_t)v8, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB6E17DC(a2, (uint64_t)&qword_1ED3CD650, v14, (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
  sub_1BA50CAA8(0, &qword_1ED3CE130, v14, (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BA646F54((uint64_t)v8, a3 + *(int *)(v16 + 64), (uint64_t)&qword_1ED3C47E8, (uint64_t)MEMORY[0x1E0DB48B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4A3FB4);
}

uint64_t sub_1BB6E2A18@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  int *v14;
  uint64_t v15;
  int *v16;
  int *v17;
  uint64_t (*v18)(void);
  _BYTE v20[16];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v20[-v7];
  v20[15] = a1;
  *(_QWORD *)a3 = FormatOptionType.rawValue.getter();
  *(_QWORD *)(a3 + 8) = v9;
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a3 + 16) = *(_QWORD *)a2;
  *(_QWORD *)(a3 + 24) = v10;
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a3 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a3 + 40) = v11;
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a3 + 48) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 56) = v12;
  *(_BYTE *)(a3 + 64) = *(_BYTE *)(a2 + 48);
  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3CD5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v14 = v13;
  v15 = a2 + v13[12];
  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3B8A30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v17 = v16;
  sub_1BA57B488(v15, a3 + v16[13], (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  *(_BYTE *)(a3 + v17[14]) = *(_BYTE *)(a2 + v14[13]);
  *(_QWORD *)(a3 + v17[15]) = *(_QWORD *)(a2 + v14[14]);
  v18 = MEMORY[0x1E0DB48B0];
  sub_1BA57B488(a2 + v14[15], (uint64_t)v8, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB6E1868(a2, (uint64_t)&qword_1ED3CD5F0, (uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA68D4C8);
  return sub_1BA646F54((uint64_t)v8, a3 + v17[16], (uint64_t)&qword_1ED3C47E8, (uint64_t)v18, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4A3FB4);
}

uint64_t sub_1BB6E2BD4@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v17[-v7];
  v17[15] = a1;
  *(_QWORD *)a3 = FormatOptionType.rawValue.getter();
  *(_QWORD *)(a3 + 8) = v9;
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a3 + 16) = *(_QWORD *)a2;
  *(_QWORD *)(a3 + 24) = v10;
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a3 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a3 + 40) = v11;
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a3 + 48) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 56) = v12;
  *(_BYTE *)(a3 + 64) = *(_BYTE *)(a2 + 48);
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a3 + 72) = v13;
  *(_BYTE *)(a3 + 80) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a3 + 88) = *(_QWORD *)(a2 + 72);
  sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BA57B488(a2 + *(int *)(v14 + 60), (uint64_t)v8, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  swift_bridgeObjectRetain();
  sub_1BA6E6C68(v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB6E17DC(a2, (uint64_t)&qword_1ED3CD630, (uint64_t)sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA4CDF6C);
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BA646F54((uint64_t)v8, a3 + *(int *)(v15 + 64), (uint64_t)&qword_1ED3C47E8, (uint64_t)MEMORY[0x1E0DB48B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4A3FB4);
}

uint64_t sub_1BB6E2D88@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v17[-v7];
  v17[15] = a1;
  *(_QWORD *)a3 = FormatOptionType.rawValue.getter();
  *(_QWORD *)(a3 + 8) = v9;
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a3 + 16) = *(_QWORD *)a2;
  *(_QWORD *)(a3 + 24) = v10;
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a3 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a3 + 40) = v11;
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a3 + 48) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 56) = v12;
  *(_BYTE *)(a3 + 64) = *(_BYTE *)(a2 + 48);
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a3 + 72) = v13;
  *(_BYTE *)(a3 + 80) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a3 + 88) = *(_QWORD *)(a2 + 72);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BA57B488(a2 + *(int *)(v14 + 60), (uint64_t)v8, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  swift_bridgeObjectRetain();
  sub_1BA5E7FF4(v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB6E17DC(a2, (uint64_t)&unk_1ED3CD620, (uint64_t)sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA4CDF6C);
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BA646F54((uint64_t)v8, a3 + *(int *)(v15 + 64), (uint64_t)&qword_1ED3C47E8, (uint64_t)MEMORY[0x1E0DB48B0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA4A3FB4);
}

BOOL sub_1BB6E2F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char v22;
  _BOOL8 result;
  char v24;
  char v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  _BYTE *v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  void (*v36)(uint64_t);
  void (*v37)(uint64_t);
  void (*v38)(uint64_t);
  char v39;
  void (*v40)(_BYTE *, uint64_t);
  _BYTE v41[12];
  int v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86E710();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = &v41[-v11];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, v5);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v41[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v41[-v17];
  MEMORY[0x1E0C80A78](v19);
  v21 = &v41[-v20];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
          return 0;
        v26 = *(unsigned __int8 *)(a1 + 49);
        v27 = *(unsigned __int8 *)(a2 + 49);
        if (v26 == 2)
        {
          if (v27 != 2)
            return 0;
        }
        else if (v27 == 2 || ((v27 & 1) == 0) == (v26 & 1))
        {
          return 0;
        }
        if (*(unsigned __int8 *)(a1 + 50) != *(unsigned __int8 *)(a2 + 50))
          return 0;
        v28 = *(_QWORD *)(a2 + 56);
        v43 = *(_QWORD *)(a1 + 56);
        v44 = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42 = sub_1BA857AC0(v43, v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0)
          return 0;
        sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        v44 = v29;
        sub_1BA57B488(a1 + *(int *)(v29 + 60), (uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v30 = a2 + *(int *)(v44 + 60);
        v31 = MEMORY[0x1E0DB48B0];
        sub_1BA57B488(v30, (uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v32 = &v12[*(int *)(v10 + 48)];
        v33 = (void (*)(uint64_t))v31;
        v34 = (uint64_t)v32;
        sub_1BA57B488((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v33);
        sub_1BA57B488((uint64_t)v18, v34, (unint64_t *)&qword_1ED3C47E8, v33);
        v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
        if (v35((uint64_t)v12, 1, v4) == 1)
        {
          v36 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v36);
          if (v35(v34, 1, v4) == 1)
          {
            sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            return 1;
          }
        }
        else
        {
          sub_1BA57B488((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          if (v35(v34, 1, v4) != 1)
          {
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v34, v4);
            v38 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
            v39 = sub_1BB872958();
            v40 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
            v40(v8, v4);
            sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v38);
            sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v38);
            v40(v15, v4);
            sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v38);
            return (v39 & 1) != 0;
          }
          v37 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v37);
          (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
        }
        sub_1BA896B7C((uint64_t)v12, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1BB6E3414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  _BYTE *v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(uint64_t);
  void (*v41)(uint64_t);
  void (*v42)(uint64_t);
  char v43;
  void (*v44)(_BYTE *, uint64_t);
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_1BB86E710();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v48 = &v45[-v11];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, v5);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v45[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v45[-v19];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v21 = sub_1BB874398(), result = 0, (v21 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v23 = sub_1BB874398(), result = 0, (v23 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
          return 0;
        v47 = v4;
        v25 = *(_QWORD *)(a1 + 56);
        v26 = *(_QWORD *)(a2 + 56);
        if ((~v25 & 0xF000000000000007) != 0)
        {
          v50 = *(_QWORD *)(a1 + 56);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            v49 = v26;
            swift_retain_n();
            static FormatColor.== infix(_:_:)((uint64_t)&v50);
            v28 = v27;
            swift_release();
            sub_1BA5E800C(v25);
            if ((v28 & 1) == 0)
              return 0;
            goto LABEL_18;
          }
          sub_1BA5E7FF4(v25);
        }
        else if ((~v26 & 0xF000000000000007) == 0)
        {
LABEL_18:
          if (*(unsigned __int8 *)(a1 + 64) == *(unsigned __int8 *)(a2 + 64))
          {
            v29 = *(_QWORD *)(a1 + 72);
            v30 = *(_QWORD *)(a2 + 72);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v46 = sub_1BA857AC0(v29, v30);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v46 & 1) != 0)
            {
              sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
              v32 = v31;
              v33 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA57B488(a1 + *(int *)(v31 + 60), (uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA57B488(a2 + *(int *)(v32 + 60), (uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v33);
              v34 = v48;
              v35 = (uint64_t)&v48[*(int *)(v10 + 48)];
              sub_1BA57B488((uint64_t)v20, (uint64_t)v48, (unint64_t *)&qword_1ED3C47E8, v33);
              v36 = v33;
              v37 = (uint64_t)v34;
              sub_1BA57B488((uint64_t)v17, v35, (unint64_t *)&qword_1ED3C47E8, v36);
              v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
              v39 = v47;
              if (v38((uint64_t)v34, 1, v47) == 1)
              {
                v40 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v40);
                if (v38(v35, 1, v39) == 1)
                {
                  sub_1BA502AD0((uint64_t)v34, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  return 1;
                }
              }
              else
              {
                sub_1BA57B488((uint64_t)v34, (uint64_t)v14, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                if (v38(v35, 1, v39) != 1)
                {
                  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v35, v39);
                  v42 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                  v43 = sub_1BB872958();
                  v44 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
                  v44(v8, v39);
                  sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v42);
                  sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v42);
                  v44(v14, v39);
                  sub_1BA502AD0(v37, (unint64_t *)&qword_1ED3C47E8, v42);
                  return (v43 & 1) != 0;
                }
                v41 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v41);
                (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v39);
              }
              sub_1BA896B7C((uint64_t)v34, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            }
          }
          return 0;
        }
        sub_1BA5E7FF4(v26);
        sub_1BA5E800C(v25);
        sub_1BA5E800C(v26);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1BB6E3940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  char v32;
  _BOOL8 result;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  void (*v44)(uint64_t);
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t *v47;
  uint64_t *v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  void (*v53)(_BYTE *, uint64_t);
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(uint64_t);
  _BYTE *v70;
  void (*v71)(uint64_t);
  _BYTE *v72;
  void (*v73)(uint64_t);
  char v74;
  void (*v75)(_BYTE *, uint64_t);
  _BYTE v76[12];
  int v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;

  v4 = sub_1BB86E710();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v87 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v82 = &v76[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v84 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v76[-v8];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, v5);
  MEMORY[0x1E0C80A78](v10);
  v83 = &v76[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v85 = &v76[-v13];
  MEMORY[0x1E0C80A78](v14);
  v86 = &v76[-v15];
  v16 = sub_1BB86C8B0();
  v17 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v89 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v88 = &v76[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED39C228, (unint64_t *)&qword_1ED3B0540, v17);
  v20 = v19;
  MEMORY[0x1E0C80A78](v19);
  v22 = &v76[-v21];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, v17);
  MEMORY[0x1E0C80A78](v23);
  v25 = &v76[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v26);
  v28 = &v76[-v27];
  MEMORY[0x1E0C80A78](v29);
  v31 = &v76[-v30];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v32 = sub_1BB874398(), result = 0, (v32 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v34 = sub_1BB874398(), result = 0, (v34 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v35 = sub_1BB874398(), result = 0, (v35 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
          return 0;
        v81 = v25;
        v78 = v9;
        v79 = v4;
        sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3CD600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        v36 = v16;
        v38 = v37;
        v39 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
        sub_1BA57B488(a1 + *(int *)(v37 + 48), (uint64_t)v31, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        v80 = v38;
        v40 = *(int *)(v38 + 48);
        v41 = v36;
        sub_1BA57B488(a2 + v40, (uint64_t)v28, (unint64_t *)&qword_1ED3B0540, v39);
        v42 = (uint64_t)&v22[*(int *)(v20 + 48)];
        sub_1BA57B488((uint64_t)v31, (uint64_t)v22, (unint64_t *)&qword_1ED3B0540, v39);
        sub_1BA57B488((uint64_t)v28, v42, (unint64_t *)&qword_1ED3B0540, v39);
        v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
        if (v43((uint64_t)v22, 1, v36) == 1)
        {
          v44 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
          sub_1BA502AD0((uint64_t)v28, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          sub_1BA502AD0((uint64_t)v31, (unint64_t *)&qword_1ED3B0540, v44);
          if (v43(v42, 1, v41) == 1)
          {
            sub_1BA502AD0((uint64_t)v22, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
LABEL_19:
            v55 = v80;
            if (*(unsigned __int8 *)(a1 + *(int *)(v80 + 52)) != *(unsigned __int8 *)(a2 + *(int *)(v80 + 52)))
              return 0;
            v56 = *(int *)(v80 + 56);
            v57 = *(_QWORD *)(a1 + v56);
            v58 = *(_QWORD *)(a2 + v56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v59 = sub_1BA857AC0(v57, v58);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v59 & 1) == 0)
              return 0;
            v60 = a1 + *(int *)(v55 + 60);
            v61 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
            v62 = v86;
            sub_1BA57B488(v60, (uint64_t)v86, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            v63 = v85;
            sub_1BA57B488(a2 + *(int *)(v55 + 60), (uint64_t)v85, (unint64_t *)&qword_1ED3C47E8, v61);
            v64 = (uint64_t)v78;
            v65 = (uint64_t)&v78[*(int *)(v84 + 48)];
            sub_1BA57B488((uint64_t)v62, (uint64_t)v78, (unint64_t *)&qword_1ED3C47E8, v61);
            sub_1BA57B488((uint64_t)v63, v65, (unint64_t *)&qword_1ED3C47E8, v61);
            v66 = v87;
            v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
            v68 = v79;
            if (v67(v64, 1, v79) == 1)
            {
              v69 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA502AD0((uint64_t)v63, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA502AD0((uint64_t)v62, (unint64_t *)&qword_1ED3C47E8, v69);
              if (v67(v65, 1, v68) == 1)
              {
                sub_1BA502AD0(v64, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                return 1;
              }
            }
            else
            {
              v70 = v83;
              sub_1BA57B488(v64, (uint64_t)v83, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              if (v67(v65, 1, v68) != 1)
              {
                v72 = v82;
                (*(void (**)(_BYTE *, uint64_t, uint64_t))(v66 + 32))(v82, v65, v68);
                v73 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                v74 = sub_1BB872958();
                v75 = *(void (**)(_BYTE *, uint64_t))(v66 + 8);
                v75(v72, v68);
                sub_1BA502AD0((uint64_t)v63, (unint64_t *)&qword_1ED3C47E8, v73);
                sub_1BA502AD0((uint64_t)v62, (unint64_t *)&qword_1ED3C47E8, v73);
                v75(v70, v68);
                sub_1BA502AD0(v64, (unint64_t *)&qword_1ED3C47E8, v73);
                return (v74 & 1) != 0;
              }
              v71 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA502AD0((uint64_t)v63, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA502AD0((uint64_t)v62, (unint64_t *)&qword_1ED3C47E8, v71);
              (*(void (**)(_BYTE *, uint64_t))(v66 + 8))(v70, v68);
            }
            v47 = &qword_1ED3C47F0;
            v48 = &qword_1ED3C47E8;
            v49 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
            v50 = v64;
            goto LABEL_17;
          }
        }
        else
        {
          v45 = (uint64_t)v81;
          sub_1BA57B488((uint64_t)v22, (uint64_t)v81, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          if (v43(v42, 1, v41) != 1)
          {
            v51 = v88;
            v52 = v89;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v89 + 32))(v88, v42, v41);
            sub_1BA4A2870((unint64_t *)&qword_1ED3B0520, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
            v77 = sub_1BB872958();
            v53 = *(void (**)(_BYTE *, uint64_t))(v52 + 8);
            v53(v51, v41);
            v54 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
            sub_1BA502AD0((uint64_t)v28, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
            sub_1BA502AD0((uint64_t)v31, (unint64_t *)&qword_1ED3B0540, v54);
            v53((_BYTE *)v45, v41);
            sub_1BA502AD0((uint64_t)v22, (unint64_t *)&qword_1ED3B0540, v54);
            if ((v77 & 1) == 0)
              return 0;
            goto LABEL_19;
          }
          v46 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
          sub_1BA502AD0((uint64_t)v28, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          sub_1BA502AD0((uint64_t)v31, (unint64_t *)&qword_1ED3B0540, v46);
          (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v45, v41);
        }
        v47 = &qword_1ED39C228;
        v48 = &qword_1ED3B0540;
        v49 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
        v50 = (uint64_t)v22;
LABEL_17:
        sub_1BA896B7C(v50, (unint64_t *)v47, (unint64_t *)v48, v49);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1BB6E4154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  _BOOL8 result;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t);
  void (*v36)(uint64_t);
  void (*v37)(uint64_t);
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;

  v4 = sub_1BB86E710();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v40 - v11;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, v5);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v40 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v40 - v20;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
          return 0;
        v26 = *(_BYTE *)(a2 + 64);
        if ((*(_BYTE *)(a1 + 64) & 1) != 0)
        {
          if (!*(_BYTE *)(a2 + 64))
            return 0;
        }
        else
        {
          if (*(double *)(a1 + 56) != *(double *)(a2 + 56))
            v26 = 1;
          if ((v26 & 1) != 0)
            return 0;
        }
        if (*(unsigned __int8 *)(a1 + 65) != *(unsigned __int8 *)(a2 + 65))
          return 0;
        v41 = v4;
        v43 = *(_QWORD *)(a1 + 72);
        v27 = *(_QWORD *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42 = sub_1BA857AC0(v43, v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0)
          return 0;
        sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        v29 = v28;
        sub_1BA57B488(a1 + *(int *)(v28 + 60), (uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v30 = a2 + *(int *)(v29 + 60);
        v31 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
        sub_1BA57B488(v30, (uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v32 = (uint64_t)&v12[*(int *)(v10 + 48)];
        sub_1BA57B488((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v31);
        sub_1BA57B488((uint64_t)v18, v32, (unint64_t *)&qword_1ED3C47E8, v31);
        v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
        v34 = v41;
        if (v33((uint64_t)v12, 1, v41) == 1)
        {
          v35 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v35);
          if (v33(v32, 1, v34) == 1)
          {
            sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            return 1;
          }
        }
        else
        {
          sub_1BA57B488((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          if (v33(v32, 1, v34) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v32, v34);
            v37 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
            v38 = sub_1BB872958();
            v39 = *(void (**)(char *, uint64_t))(v6 + 8);
            v39(v8, v34);
            sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v37);
            sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v37);
            v39(v15, v34);
            sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v37);
            return (v38 & 1) != 0;
          }
          v36 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v36);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v34);
        }
        sub_1BA896B7C((uint64_t)v12, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1BB6E4618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  _BOOL8 result;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t);
  void (*v36)(uint64_t);
  void (*v37)(uint64_t);
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;

  v4 = sub_1BB86E710();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v40 - v11;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, v5);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v40 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v40 - v20;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
          return 0;
        v26 = *(_BYTE *)(a2 + 64);
        if ((*(_BYTE *)(a1 + 64) & 1) != 0)
        {
          if (!*(_BYTE *)(a2 + 64))
            return 0;
        }
        else
        {
          if (*(_QWORD *)(a1 + 56) != *(_QWORD *)(a2 + 56))
            v26 = 1;
          if ((v26 & 1) != 0)
            return 0;
        }
        if (*(unsigned __int8 *)(a1 + 65) != *(unsigned __int8 *)(a2 + 65))
          return 0;
        v41 = v4;
        v43 = *(_QWORD *)(a1 + 72);
        v27 = *(_QWORD *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42 = sub_1BA857AC0(v43, v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0)
          return 0;
        sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        v29 = v28;
        sub_1BA57B488(a1 + *(int *)(v28 + 60), (uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v30 = a2 + *(int *)(v29 + 60);
        v31 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
        sub_1BA57B488(v30, (uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v32 = (uint64_t)&v12[*(int *)(v10 + 48)];
        sub_1BA57B488((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v31);
        sub_1BA57B488((uint64_t)v18, v32, (unint64_t *)&qword_1ED3C47E8, v31);
        v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
        v34 = v41;
        if (v33((uint64_t)v12, 1, v41) == 1)
        {
          v35 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v35);
          if (v33(v32, 1, v34) == 1)
          {
            sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            return 1;
          }
        }
        else
        {
          sub_1BA57B488((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          if (v33(v32, 1, v34) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v32, v34);
            v37 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
            v38 = sub_1BB872958();
            v39 = *(void (**)(char *, uint64_t))(v6 + 8);
            v39(v8, v34);
            sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v37);
            sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v37);
            v39(v15, v34);
            sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v37);
            return (v38 & 1) != 0;
          }
          v36 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v36);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v34);
        }
        sub_1BA896B7C((uint64_t)v12, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1BB6E4ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  _BOOL8 result;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  void (*v37)(uint64_t);
  void (*v38)(uint64_t);
  void (*v39)(uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;

  v4 = sub_1BB86E710();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v42 - v11;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, v5);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v42 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v42 - v20;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
          return 0;
        v26 = *(_QWORD *)(a1 + 64);
        v27 = *(_QWORD *)(a2 + 64);
        if (!v26)
        {
          if (v27)
            return 0;
          goto LABEL_20;
        }
        if (!v27)
          return 0;
        if (*(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56) && v26 == v27
          || (v28 = sub_1BB874398(), result = 0, (v28 & 1) != 0))
        {
LABEL_20:
          if (*(unsigned __int8 *)(a1 + 72) != *(unsigned __int8 *)(a2 + 72))
            return 0;
          v43 = v4;
          v45 = *(_QWORD *)(a1 + 80);
          v29 = *(_QWORD *)(a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v44 = sub_1BA857AC0(v45, v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v44 & 1) == 0)
            return 0;
          sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
          v31 = v30;
          sub_1BA57B488(a1 + *(int *)(v30 + 60), (uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          v32 = a2 + *(int *)(v31 + 60);
          v33 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA57B488(v32, (uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          v34 = (uint64_t)&v12[*(int *)(v10 + 48)];
          sub_1BA57B488((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v33);
          sub_1BA57B488((uint64_t)v18, v34, (unint64_t *)&qword_1ED3C47E8, v33);
          v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
          v36 = v43;
          if (v35((uint64_t)v12, 1, v43) == 1)
          {
            v37 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v37);
            if (v35(v34, 1, v36) == 1)
            {
              sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              return 1;
            }
          }
          else
          {
            sub_1BA57B488((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            if (v35(v34, 1, v36) != 1)
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v34, v36);
              v39 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
              v40 = sub_1BB872958();
              v41 = *(void (**)(char *, uint64_t))(v6 + 8);
              v41(v8, v36);
              sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v39);
              sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v39);
              v41(v15, v36);
              sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v39);
              return (v40 & 1) != 0;
            }
            v38 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
            sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v38);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v36);
          }
          sub_1BA896B7C((uint64_t)v12, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1BB6E4FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  char v32;
  _BOOL8 result;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  void (*v44)(uint64_t);
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t *v47;
  uint64_t *v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  void (*v53)(_BYTE *, uint64_t);
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(uint64_t);
  _BYTE *v70;
  void (*v71)(uint64_t);
  _BYTE *v72;
  void (*v73)(uint64_t);
  char v74;
  void (*v75)(_BYTE *, uint64_t);
  _BYTE v76[12];
  int v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;

  v4 = sub_1BB86E710();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v87 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v82 = &v76[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v84 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v76[-v8];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, v5);
  MEMORY[0x1E0C80A78](v10);
  v83 = &v76[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v85 = &v76[-v13];
  MEMORY[0x1E0C80A78](v14);
  v86 = &v76[-v15];
  v16 = sub_1BB86C67C();
  v17 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v89 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v88 = &v76[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3B04F0, (unint64_t *)&qword_1ED3D2E70, v17);
  v20 = v19;
  MEMORY[0x1E0C80A78](v19);
  v22 = &v76[-v21];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, v17);
  MEMORY[0x1E0C80A78](v23);
  v25 = &v76[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v26);
  v28 = &v76[-v27];
  MEMORY[0x1E0C80A78](v29);
  v31 = &v76[-v30];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v32 = sub_1BB874398(), result = 0, (v32 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v34 = sub_1BB874398(), result = 0, (v34 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v35 = sub_1BB874398(), result = 0, (v35 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
          return 0;
        v81 = v25;
        v78 = v9;
        v79 = v4;
        sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3CD5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        v36 = v16;
        v38 = v37;
        v39 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        sub_1BA57B488(a1 + *(int *)(v37 + 48), (uint64_t)v31, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v80 = v38;
        v40 = *(int *)(v38 + 48);
        v41 = v36;
        sub_1BA57B488(a2 + v40, (uint64_t)v28, (unint64_t *)&qword_1ED3D2E70, v39);
        v42 = (uint64_t)&v22[*(int *)(v20 + 48)];
        sub_1BA57B488((uint64_t)v31, (uint64_t)v22, (unint64_t *)&qword_1ED3D2E70, v39);
        sub_1BA57B488((uint64_t)v28, v42, (unint64_t *)&qword_1ED3D2E70, v39);
        v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
        if (v43((uint64_t)v22, 1, v36) == 1)
        {
          v44 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          sub_1BA502AD0((uint64_t)v28, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          sub_1BA502AD0((uint64_t)v31, (unint64_t *)&qword_1ED3D2E70, v44);
          if (v43(v42, 1, v41) == 1)
          {
            sub_1BA502AD0((uint64_t)v22, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
LABEL_19:
            v55 = v80;
            if (*(unsigned __int8 *)(a1 + *(int *)(v80 + 52)) != *(unsigned __int8 *)(a2 + *(int *)(v80 + 52)))
              return 0;
            v56 = *(int *)(v80 + 56);
            v57 = *(_QWORD *)(a1 + v56);
            v58 = *(_QWORD *)(a2 + v56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v59 = sub_1BA857AC0(v57, v58);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v59 & 1) == 0)
              return 0;
            v60 = a1 + *(int *)(v55 + 60);
            v61 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
            v62 = v86;
            sub_1BA57B488(v60, (uint64_t)v86, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            v63 = v85;
            sub_1BA57B488(a2 + *(int *)(v55 + 60), (uint64_t)v85, (unint64_t *)&qword_1ED3C47E8, v61);
            v64 = (uint64_t)v78;
            v65 = (uint64_t)&v78[*(int *)(v84 + 48)];
            sub_1BA57B488((uint64_t)v62, (uint64_t)v78, (unint64_t *)&qword_1ED3C47E8, v61);
            sub_1BA57B488((uint64_t)v63, v65, (unint64_t *)&qword_1ED3C47E8, v61);
            v66 = v87;
            v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
            v68 = v79;
            if (v67(v64, 1, v79) == 1)
            {
              v69 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA502AD0((uint64_t)v63, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA502AD0((uint64_t)v62, (unint64_t *)&qword_1ED3C47E8, v69);
              if (v67(v65, 1, v68) == 1)
              {
                sub_1BA502AD0(v64, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                return 1;
              }
            }
            else
            {
              v70 = v83;
              sub_1BA57B488(v64, (uint64_t)v83, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              if (v67(v65, 1, v68) != 1)
              {
                v72 = v82;
                (*(void (**)(_BYTE *, uint64_t, uint64_t))(v66 + 32))(v82, v65, v68);
                v73 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                v74 = sub_1BB872958();
                v75 = *(void (**)(_BYTE *, uint64_t))(v66 + 8);
                v75(v72, v68);
                sub_1BA502AD0((uint64_t)v63, (unint64_t *)&qword_1ED3C47E8, v73);
                sub_1BA502AD0((uint64_t)v62, (unint64_t *)&qword_1ED3C47E8, v73);
                v75(v70, v68);
                sub_1BA502AD0(v64, (unint64_t *)&qword_1ED3C47E8, v73);
                return (v74 & 1) != 0;
              }
              v71 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA502AD0((uint64_t)v63, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA502AD0((uint64_t)v62, (unint64_t *)&qword_1ED3C47E8, v71);
              (*(void (**)(_BYTE *, uint64_t))(v66 + 8))(v70, v68);
            }
            v47 = &qword_1ED3C47F0;
            v48 = &qword_1ED3C47E8;
            v49 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
            v50 = v64;
            goto LABEL_17;
          }
        }
        else
        {
          v45 = (uint64_t)v81;
          sub_1BA57B488((uint64_t)v22, (uint64_t)v81, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          if (v43(v42, 1, v41) != 1)
          {
            v51 = v88;
            v52 = v89;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v89 + 32))(v88, v42, v41);
            sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
            v77 = sub_1BB872958();
            v53 = *(void (**)(_BYTE *, uint64_t))(v52 + 8);
            v53(v51, v41);
            v54 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
            sub_1BA502AD0((uint64_t)v28, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            sub_1BA502AD0((uint64_t)v31, (unint64_t *)&qword_1ED3D2E70, v54);
            v53((_BYTE *)v45, v41);
            sub_1BA502AD0((uint64_t)v22, (unint64_t *)&qword_1ED3D2E70, v54);
            if ((v77 & 1) == 0)
              return 0;
            goto LABEL_19;
          }
          v46 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          sub_1BA502AD0((uint64_t)v28, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          sub_1BA502AD0((uint64_t)v31, (unint64_t *)&qword_1ED3D2E70, v46);
          (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v45, v41);
        }
        v47 = &qword_1ED3B04F0;
        v48 = &qword_1ED3D2E70;
        v49 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        v50 = (uint64_t)v22;
LABEL_17:
        sub_1BA896B7C(v50, (unint64_t *)v47, (unint64_t *)v48, v49);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1BB6E57D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  _BYTE *v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(uint64_t);
  void (*v41)(uint64_t);
  void (*v42)(uint64_t);
  char v43;
  void (*v44)(_BYTE *, uint64_t);
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_1BB86E710();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v48 = &v45[-v11];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, v5);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v45[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v45[-v19];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v21 = sub_1BB874398(), result = 0, (v21 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v23 = sub_1BB874398(), result = 0, (v23 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
          return 0;
        v47 = v4;
        v25 = *(_QWORD *)(a1 + 56);
        v26 = *(_QWORD *)(a2 + 56);
        if ((~v25 & 0xF000000000000007) != 0)
        {
          v50 = *(_QWORD *)(a1 + 56);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            v49 = v26;
            swift_retain_n();
            static FormatFont.== infix(_:_:)((uint64_t)&v50);
            v28 = v27;
            swift_release();
            sub_1BA6E6CD8(v25);
            if ((v28 & 1) == 0)
              return 0;
            goto LABEL_18;
          }
          sub_1BA6E6C68(v25);
        }
        else if ((~v26 & 0xF000000000000007) == 0)
        {
LABEL_18:
          if (*(unsigned __int8 *)(a1 + 64) == *(unsigned __int8 *)(a2 + 64))
          {
            v29 = *(_QWORD *)(a1 + 72);
            v30 = *(_QWORD *)(a2 + 72);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v46 = sub_1BA857AC0(v29, v30);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v46 & 1) != 0)
            {
              sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
              v32 = v31;
              v33 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA57B488(a1 + *(int *)(v31 + 60), (uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA57B488(a2 + *(int *)(v32 + 60), (uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v33);
              v34 = v48;
              v35 = (uint64_t)&v48[*(int *)(v10 + 48)];
              sub_1BA57B488((uint64_t)v20, (uint64_t)v48, (unint64_t *)&qword_1ED3C47E8, v33);
              v36 = v33;
              v37 = (uint64_t)v34;
              sub_1BA57B488((uint64_t)v17, v35, (unint64_t *)&qword_1ED3C47E8, v36);
              v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
              v39 = v47;
              if (v38((uint64_t)v34, 1, v47) == 1)
              {
                v40 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v40);
                if (v38(v35, 1, v39) == 1)
                {
                  sub_1BA502AD0((uint64_t)v34, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  return 1;
                }
              }
              else
              {
                sub_1BA57B488((uint64_t)v34, (uint64_t)v14, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                if (v38(v35, 1, v39) != 1)
                {
                  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v35, v39);
                  v42 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                  v43 = sub_1BB872958();
                  v44 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
                  v44(v8, v39);
                  sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v42);
                  sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v42);
                  v44(v14, v39);
                  sub_1BA502AD0(v37, (unint64_t *)&qword_1ED3C47E8, v42);
                  return (v43 & 1) != 0;
                }
                v41 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v41);
                (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v39);
              }
              sub_1BA896B7C((uint64_t)v34, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            }
          }
          return 0;
        }
        sub_1BA6E6C68(v26);
        sub_1BA6E6CD8(v25);
        sub_1BA6E6CD8(v26);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1BB6E5CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  _BYTE *v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(uint64_t);
  void (*v41)(uint64_t);
  void (*v42)(uint64_t);
  char v43;
  void (*v44)(_BYTE *, uint64_t);
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_1BB86E710();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v48 = &v45[-v11];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, v5);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v45[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v45[-v19];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v21 = sub_1BB874398(), result = 0, (v21 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v23 = sub_1BB874398(), result = 0, (v23 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
          return 0;
        v47 = v4;
        v25 = *(_QWORD *)(a1 + 56);
        v26 = *(_QWORD *)(a2 + 56);
        if ((~v25 & 0xF000000000000007) != 0)
        {
          v50 = *(_QWORD *)(a1 + 56);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            v49 = v26;
            swift_retain_n();
            static FormatAsyncImageContent.== infix(_:_:)((uint64_t)&v50);
            v28 = v27;
            swift_release();
            sub_1BA5E800C(v25);
            if ((v28 & 1) == 0)
              return 0;
            goto LABEL_18;
          }
          sub_1BA5E7FF4(v25);
        }
        else if ((~v26 & 0xF000000000000007) == 0)
        {
LABEL_18:
          if (*(unsigned __int8 *)(a1 + 64) == *(unsigned __int8 *)(a2 + 64))
          {
            v29 = *(_QWORD *)(a1 + 72);
            v30 = *(_QWORD *)(a2 + 72);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v46 = sub_1BA857AC0(v29, v30);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v46 & 1) != 0)
            {
              sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
              v32 = v31;
              v33 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA57B488(a1 + *(int *)(v31 + 60), (uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA57B488(a2 + *(int *)(v32 + 60), (uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v33);
              v34 = v48;
              v35 = (uint64_t)&v48[*(int *)(v10 + 48)];
              sub_1BA57B488((uint64_t)v20, (uint64_t)v48, (unint64_t *)&qword_1ED3C47E8, v33);
              v36 = v33;
              v37 = (uint64_t)v34;
              sub_1BA57B488((uint64_t)v17, v35, (unint64_t *)&qword_1ED3C47E8, v36);
              v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
              v39 = v47;
              if (v38((uint64_t)v34, 1, v47) == 1)
              {
                v40 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v40);
                if (v38(v35, 1, v39) == 1)
                {
                  sub_1BA502AD0((uint64_t)v34, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  return 1;
                }
              }
              else
              {
                sub_1BA57B488((uint64_t)v34, (uint64_t)v14, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                if (v38(v35, 1, v39) != 1)
                {
                  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v35, v39);
                  v42 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                  v43 = sub_1BB872958();
                  v44 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
                  v44(v8, v39);
                  sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, v42);
                  sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v42);
                  v44(v14, v39);
                  sub_1BA502AD0(v37, (unint64_t *)&qword_1ED3C47E8, v42);
                  return (v43 & 1) != 0;
                }
                v41 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                sub_1BA502AD0((uint64_t)v20, (unint64_t *)&qword_1ED3C47E8, v41);
                (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v39);
              }
              sub_1BA896B7C((uint64_t)v34, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            }
          }
          return 0;
        }
        sub_1BA5E7FF4(v26);
        sub_1BA5E800C(v25);
        sub_1BA5E800C(v26);
        return 0;
      }
    }
  }
  return result;
}

BOOL static FormatCompilerPrimitiveProperty.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  _BOOL8 result;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  void (*v42)(char *, uint64_t);
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  void (*v62)(uint64_t);
  uint64_t v63;
  void (*v64)(uint64_t);
  char *v65;
  void (*v66)(uint64_t);
  char v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t TupleTypeMetadata2;

  v82 = a4;
  v7 = sub_1BB86E710();
  v8 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v78 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v73 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v8);
  v75 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v69 - v11;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, v8);
  MEMORY[0x1E0C80A78](v13);
  v74 = (uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v76 = (uint64_t)&v69 - v16;
  MEMORY[0x1E0C80A78](v17);
  v77 = (uint64_t)&v69 - v18;
  v83 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v19);
  v79 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BB873A2C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v80 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v23 = (char *)&v69 - v22;
  v24 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v25);
  v81 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v69 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v69 - v31;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v33 = sub_1BB874398(), result = 0, (v33 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v35 = sub_1BB874398(), result = 0, (v35 & 1) != 0))
    {
      if ((v36 = *(_QWORD *)(a2 + 40), *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)) && *(_QWORD *)(a1 + 40) == v36
        || (v37 = sub_1BB874398(), result = 0, (v37 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
          return 0;
        v69 = v12;
        v70 = v7;
        v38 = type metadata accessor for FormatCompilerPrimitiveProperty(0, a3, v82, v36);
        v39 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
        v39(v32, a1 + *(int *)(v38 + 48), v21);
        v71 = v38;
        v39(v29, a2 + *(int *)(v38 + 48), v21);
        v40 = &v23[*(int *)(TupleTypeMetadata2 + 48)];
        v39(v23, (uint64_t)v32, v21);
        v72 = v40;
        v39(v40, (uint64_t)v29, v21);
        v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
        if (v41(v23, 1, a3) == 1)
        {
          v42 = *(void (**)(char *, uint64_t))(v24 + 8);
          v42(v29, v21);
          v42(v32, v21);
          if (v41(v72, 1, a3) == 1)
          {
            v42(v23, v21);
LABEL_18:
            v48 = v71;
            if (*(unsigned __int8 *)(a1 + *(int *)(v71 + 52)) == *(unsigned __int8 *)(a2 + *(int *)(v71 + 52)))
            {
              v49 = *(int *)(v71 + 56);
              v50 = *(_QWORD *)(a1 + v49);
              v51 = *(_QWORD *)(a2 + v49);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v52 = sub_1BA857AC0(v50, v51);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v52 & 1) != 0)
              {
                v53 = a1 + *(int *)(v48 + 60);
                v54 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                v55 = v77;
                sub_1BA57B488(v53, v77, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                v56 = v76;
                sub_1BA57B488(a2 + *(int *)(v48 + 60), v76, (unint64_t *)&qword_1ED3C47E8, v54);
                v57 = (uint64_t)v69;
                v58 = (uint64_t)&v69[*(int *)(v75 + 48)];
                sub_1BA57B488(v55, (uint64_t)v69, (unint64_t *)&qword_1ED3C47E8, v54);
                sub_1BA57B488(v56, v58, (unint64_t *)&qword_1ED3C47E8, v54);
                v59 = v78;
                v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
                v61 = v70;
                if (v60(v57, 1, v70) == 1)
                {
                  v62 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA502AD0(v56, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA502AD0(v55, (unint64_t *)&qword_1ED3C47E8, v62);
                  if (v60(v58, 1, v61) == 1)
                  {
                    sub_1BA502AD0(v57, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                    return 1;
                  }
                }
                else
                {
                  v63 = v74;
                  sub_1BA57B488(v57, v74, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  if (v60(v58, 1, v61) != 1)
                  {
                    v65 = v73;
                    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v73, v58, v61);
                    v66 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                    sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                    v67 = sub_1BB872958();
                    v68 = *(void (**)(char *, uint64_t))(v59 + 8);
                    v68(v65, v61);
                    sub_1BA502AD0(v56, (unint64_t *)&qword_1ED3C47E8, v66);
                    sub_1BA502AD0(v55, (unint64_t *)&qword_1ED3C47E8, v66);
                    v68((char *)v63, v61);
                    sub_1BA502AD0(v57, (unint64_t *)&qword_1ED3C47E8, v66);
                    return (v67 & 1) != 0;
                  }
                  v64 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                  sub_1BA502AD0(v56, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                  sub_1BA502AD0(v55, (unint64_t *)&qword_1ED3C47E8, v64);
                  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v63, v61);
                }
                sub_1BA896B7C(v57, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              }
            }
            return 0;
          }
        }
        else
        {
          v39(v81, (uint64_t)v23, v21);
          if (v41(v72, 1, a3) != 1)
          {
            v44 = v83;
            v45 = v79;
            (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v79, v72, a3);
            LODWORD(TupleTypeMetadata2) = sub_1BB872958();
            v46 = *(void (**)(char *, uint64_t))(v44 + 8);
            v46(v45, a3);
            v47 = *(void (**)(char *, uint64_t))(v24 + 8);
            v47(v29, v21);
            v47(v32, v21);
            v46(v81, a3);
            v47(v23, v21);
            if ((TupleTypeMetadata2 & 1) == 0)
              return 0;
            goto LABEL_18;
          }
          v43 = *(void (**)(char *, uint64_t))(v24 + 8);
          v43(v29, v21);
          v43(v32, v21);
          (*(void (**)(char *, uint64_t))(v83 + 8))(v81, a3);
        }
        (*(void (**)(char *, uint64_t))(v80 + 8))(v23, TupleTypeMetadata2);
        return 0;
      }
    }
  }
  return result;
}

uint64_t FormatCompilerPrimitiveProperty.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerPrimitiveProperty.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerPrimitiveProperty.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatCompilerPrimitiveProperty.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB6E6A30@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;

  type metadata accessor for FormatCompilerPrimitiveProperty(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  *a4 = sub_1BA62405C();
  a4[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6E6A6C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return FormatCompilerPrimitiveProperty.description.setter(v1, v2);
}

uint64_t FormatCompilerPrimitiveProperty.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatCompilerPrimitiveProperty.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCompilerPrimitiveProperty.required.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*FormatCompilerPrimitiveProperty.required.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCompilerPrimitiveProperty.default.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 48);
  v5 = sub_1BB873A2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t FormatCompilerPrimitiveProperty.deprecated.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 52)) = result;
  return result;
}

uint64_t (*FormatCompilerPrimitiveProperty.deprecated.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB6E6B68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for FormatCompilerPrimitiveProperty(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  *a4 = sub_1BA624050(v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6E6BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for FormatCompilerPrimitiveProperty(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  v5 = swift_bridgeObjectRetain();
  return FormatCompilerPrimitiveProperty.compilerFlags.setter(v5, v4);
}

uint64_t FormatCompilerPrimitiveProperty.compilerFlags.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 56);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FormatCompilerPrimitiveProperty.compilerFlags.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCompilerPrimitiveProperty.editorProperties.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA57B488(v2 + *(int *)(a1 + 60), a2, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
}

BOOL sub_1BB6E6C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FormatCompilerPrimitiveProperty.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t FormatCompilerEnumProperty.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerEnumProperty.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerEnumProperty.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerEnumProperty.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatCompilerEnumProperty.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCompilerEnumProperty.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*FormatCompilerEnumProperty.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCompilerEnumProperty.required.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = result;
  return result;
}

uint64_t (*FormatCompilerEnumProperty.required.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCompilerEnumProperty.default.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerEnumProperty.deprecated.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 88) = result;
  return result;
}

uint64_t (*FormatCompilerEnumProperty.deprecated.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCompilerEnumProperty.compilerFlags.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatCompilerEnumProperty.compilerFlags.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatCompilerEnumProperty.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatCompilerEnumProperty(0);
  return sub_1BA57B488(v1 + *(int *)(v3 + 48), a1, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
}

BOOL _s8NewsFeed26FormatCompilerEnumPropertyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char v22;
  _BOOL8 result;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  _BYTE *v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  void (*v37)(uint64_t);
  void (*v38)(uint64_t);
  void (*v39)(uint64_t);
  char v40;
  void (*v41)(_BYTE *, uint64_t);
  _BYTE v42[12];
  int v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_1BB86E710();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA896B1C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = &v42[-v11];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, v5);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v42[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v42[-v17];
  MEMORY[0x1E0C80A78](v19);
  v21 = &v42[-v20];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v22 = sub_1BB874398(), result = 0, (v22 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v24 = sub_1BB874398(), result = 0, (v24 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v25 = sub_1BB874398(), result = 0, (v25 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v26 = sub_1BB874398(), result = 0, (v26 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64))
            return 0;
          v27 = *(_QWORD *)(a1 + 80);
          v28 = *(_QWORD *)(a2 + 80);
          if (!v27)
          {
            if (v28)
              return 0;
            goto LABEL_23;
          }
          if (!v28)
            return 0;
          if (*(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72) && v27 == v28
            || (v29 = sub_1BB874398(), result = 0, (v29 & 1) != 0))
          {
LABEL_23:
            if (*(unsigned __int8 *)(a1 + 88) != *(unsigned __int8 *)(a2 + 88))
              return 0;
            v30 = *(_QWORD *)(a2 + 96);
            v44 = *(_QWORD *)(a1 + 96);
            v45 = v30;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v43 = sub_1BA857AC0(v44, v45);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v43 & 1) == 0)
              return 0;
            v45 = type metadata accessor for FormatCompilerEnumProperty(0);
            sub_1BA57B488(a1 + *(int *)(v45 + 48), (uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            v31 = a2 + *(int *)(v45 + 48);
            v32 = MEMORY[0x1E0DB48B0];
            sub_1BA57B488(v31, (uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            v33 = &v12[*(int *)(v10 + 48)];
            v34 = (void (*)(uint64_t))v32;
            v35 = (uint64_t)v33;
            sub_1BA57B488((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v34);
            sub_1BA57B488((uint64_t)v18, v35, (unint64_t *)&qword_1ED3C47E8, v34);
            v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
            if (v36((uint64_t)v12, 1, v4) == 1)
            {
              v37 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v37);
              if (v36(v35, 1, v4) == 1)
              {
                sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
                return 1;
              }
            }
            else
            {
              sub_1BA57B488((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              if (v36(v35, 1, v4) != 1)
              {
                (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v8, v35, v4);
                v39 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
                sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
                v40 = sub_1BB872958();
                v41 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
                v41(v8, v4);
                sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, v39);
                sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v39);
                v41(v15, v4);
                sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3C47E8, v39);
                return (v40 & 1) != 0;
              }
              v38 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
              sub_1BA502AD0((uint64_t)v18, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
              sub_1BA502AD0((uint64_t)v21, (unint64_t *)&qword_1ED3C47E8, v38);
              (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
            }
            sub_1BA896B7C((uint64_t)v12, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            return 0;
          }
        }
      }
    }
  }
  return result;
}

void _s8NewsFeed22FormatCompilerPropertyO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD v42[16];
  uint64_t v43;
  uint64_t v44;

  v43 = a2;
  v44 = a1;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v2);
  v42[10] = (char *)v42 - v3;
  sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v4);
  v42[9] = (char *)v42 - v5;
  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3CD5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v6);
  v42[8] = (char *)v42 - v7;
  sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v8);
  v42[7] = (char *)v42 - v9;
  sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v10);
  v42[6] = (char *)v42 - v11;
  sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v12);
  v42[5] = (char *)v42 - v13;
  v14 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1E0C80A78](v14);
  v42[4] = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3CD600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v16);
  v42[3] = (char *)v42 - v17;
  sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v18);
  v42[2] = (char *)v42 - v19;
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v20);
  v42[1] = (char *)v42 - v21;
  v22 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1E0C80A78](v22);
  v42[15] = (char *)v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v42[14] = (char *)v42 - v25;
  MEMORY[0x1E0C80A78](v26);
  v42[13] = (char *)v42 - v27;
  MEMORY[0x1E0C80A78](v28);
  v42[12] = (char *)v42 - v29;
  MEMORY[0x1E0C80A78](v30);
  v42[11] = (char *)v42 - v31;
  MEMORY[0x1E0C80A78](v32);
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  MEMORY[0x1E0C80A78](v35);
  MEMORY[0x1E0C80A78](v36);
  sub_1BB6EB8D4();
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)v42 + *(int *)(v39 + 48) - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v44, (uint64_t)v42 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FormatCompilerProperty);
  sub_1BA4C2DD8(v43, (uint64_t)v40, type metadata accessor for FormatCompilerProperty);
  v41 = (char *)sub_1BB6E7834 + 4 * word_1BB9403B2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_1BB6E7834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;

  sub_1BA4C2DD8(v2, v1, type metadata accessor for FormatCompilerProperty);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BB6E17DC(v1, (uint64_t)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
    v4 = 0;
    v5 = (uint64_t (*)(_QWORD))sub_1BB6EB8D4;
  }
  else
  {
    v6 = MEMORY[0x1E0DEAFA0];
    v7 = *(_QWORD *)(v3 - 216);
    sub_1BB6E1780(v0, v7, (uint64_t)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
    v4 = sub_1BB6E2F40(v1, v7);
    sub_1BB6E17DC(v7, (uint64_t)&unk_1ED3CD660, v6, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
    sub_1BB6E17DC(v1, (uint64_t)&unk_1ED3CD660, v6, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BA50CAA8);
    v5 = type metadata accessor for FormatCompilerProperty;
  }
  sub_1BA4A2E80(v2, v5);
  return v4;
}

uint64_t sub_1BB6E7F60(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2CAC80, type metadata accessor for FormatCompilerProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerProperty);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB6E7F9C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3B6A00, type metadata accessor for FormatCompilerProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerProperty);
  a1[2] = sub_1BA4A2870(&qword_1ED3B0128, type metadata accessor for FormatCompilerProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerProperty);
  result = sub_1BA4A2870(&qword_1EF2CAC88, type metadata accessor for FormatCompilerProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerProperty);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB6E8014(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB6E8040(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>);
  a1[2] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, a2);
  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, a2);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB6E8098(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2CAC90, type metadata accessor for FormatCompilerEnumProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerEnumProperty);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB6E80D4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3BF5A0, type metadata accessor for FormatCompilerEnumProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerEnumProperty);
  a1[2] = sub_1BA4A2870(&qword_1ED3A04A8, type metadata accessor for FormatCompilerEnumProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerEnumProperty);
  result = sub_1BA4A2870(&qword_1EF2CAC98, type metadata accessor for FormatCompilerEnumProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerEnumProperty);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB6E8154()
{
  return 16;
}

__n128 sub_1BB6E8160(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BB6E816C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = FormatCompilerPrimitiveProperty.required.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BB6E8198(unsigned __int8 *a1)
{
  return FormatCompilerPrimitiveProperty.required.setter(*a1);
}

uint64_t sub_1BB6E81BC()
{
  return 16;
}

__n128 sub_1BB6E81C8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BB6E81D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = type metadata accessor for FormatCompilerPrimitiveProperty(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  result = FormatCompilerPrimitiveProperty.deprecated.getter(v5);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1BB6E8210(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = type metadata accessor for FormatCompilerPrimitiveProperty(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  return FormatCompilerPrimitiveProperty.deprecated.setter(v4, v5);
}

uint64_t sub_1BB6E824C()
{
  return 16;
}

__n128 sub_1BB6E8258(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BB6E826C()
{
  return 16;
}

__n128 sub_1BB6E8278(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BB6E8284@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6E8290(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 48) = v4;
  *(_QWORD *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1BB6E82D0@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 64);
  return result;
}

_BYTE *sub_1BB6E82DC(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 64) = *result;
  return result;
}

uint64_t sub_1BB6E82E8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 88);
  return result;
}

_BYTE *sub_1BB6E82F4(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 88) = *result;
  return result;
}

uint64_t sub_1BB6E8300@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6E830C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 96) = v3;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatCompilerProperty(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BB6E83AC + 4 * word_1BB9403C6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t assignWithCopy for FormatCompilerProperty(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, type metadata accessor for FormatCompilerProperty);
    v2 = (char *)&loc_1BB6E913C + 4 * word_1BB9403F8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for FormatCompilerProperty()
{
  char *v0;

  v0 = (char *)sub_1BB6E9B58 + 4 * byte_1BB94040C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB6E9B58()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v2;
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 32);
  *(_BYTE *)(v0 + 48) = *(_BYTE *)(v1 + 48);
  *(_WORD *)(v0 + 49) = *(_WORD *)(v1 + 49);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 56);
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  v4 = *(int *)(v3 + 60);
  v5 = (void *)(v0 + v4);
  v6 = (const void *)(v1 + v4);
  v7 = sub_1BB86E710();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for FormatCompilerProperty(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, type metadata accessor for FormatCompilerProperty);
    v2 = (char *)&loc_1BB6EA04C + 4 * byte_1BB940416[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t *sub_1BB6EA4D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  const void *v22;
  unsigned int (*v23)(const void *, uint64_t, uint64_t);
  unint64_t v24;
  unint64_t v25;
  void *v26;
  const void *v27;
  unsigned int (*v28)(const void *, uint64_t, uint64_t);
  size_t __n;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v33 = sub_1BB86E710();
  v9 = *(_QWORD *)(v33 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84))
    ++v11;
  if ((v10 | (unint64_t)v7) > 7
    || ((*(_DWORD *)(v9 + 80) | v7) & 0x100000) != 0
    || ((v10
       + ((((v7 + 49) & ~(unint64_t)v7) + v8) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v10)
     + v11 > 0x18)
  {
    v14 = *a2;
    *a1 = *a2;
    v15 = v14 + (((v10 | v7) & 0xF8 ^ 0x1F8) & ((v10 | v7) + 16));
    swift_retain();
  }
  else
  {
    __n = v11;
    v31 = ~v10;
    v16 = a2[1];
    *a1 = *a2;
    a1[1] = v16;
    v32 = a1;
    v17 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v17 = *v18;
    v17[1] = v18[1];
    v19 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
    v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
    *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
    v21 = (void *)((v19 + v7 + 17) & ~(unint64_t)v7);
    v22 = (const void *)((v20 + v7 + 17) & ~(unint64_t)v7);
    v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v22, 1, v5))
    {
      memcpy(v21, v22, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v21, v22, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v5);
    }
    *((_BYTE *)v21 + v8) = *((_BYTE *)v22 + v8);
    v24 = ((unint64_t)v21 + v8) & 0xFFFFFFFFFFFFFFF8;
    v25 = ((unint64_t)v22 + v8) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
    v26 = (void *)((v24 + v10 + 16) & v31);
    v27 = (const void *)((v25 + v10 + 16) & v31);
    v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    if (v28(v27, 1, v33))
    {
      memcpy(v26, v27, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v26, v27, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v26, 0, 1, v33);
    }
    return v32;
  }
  return (uint64_t *)v15;
}

_QWORD *sub_1BB6EA744(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  unsigned int (*v28)(const void *, uint64_t, uint64_t);
  size_t v29;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  v7 = ((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (char *)((v11 + 17 + v7) & ~v11);
  v13 = (char *)((v11 + 17 + v8) & ~v11);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v13, 1, v9))
  {
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
    if (v15)
      v17 = *(_QWORD *)(v10 + 64);
    else
      v17 = v16 + 1;
    memcpy(v12, v13, v17);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v13, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  v19 = (unint64_t)&v12[v18];
  v20 = (unint64_t)&v13[v18];
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v21 = v19 & 0xFFFFFFFFFFFFFFF8;
  v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8);
  v23 = sub_1BB86E710();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (void *)((v25 + 16 + v21) & ~v25);
  v27 = (const void *)((v25 + 16 + v22) & ~v25);
  v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  if (v28(v27, 1, v23))
  {
    if (*(_DWORD *)(v24 + 84))
      v29 = *(_QWORD *)(v24 + 64);
    else
      v29 = *(_QWORD *)(v24 + 64) + 1;
    memcpy(v26, v27, v29);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v26, v27, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
  }
  return a1;
}

_QWORD *sub_1BB6EA928(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  size_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  size_t v30;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (char *)((v12 + 17 + v8) & ~v12);
  v14 = (char *)((v12 + 17 + v9) & ~v12);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v9) = v15(v13, 1, v10);
  v16 = v15(v14, 1, v10);
  if ((_DWORD)v9)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v14, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v13, v14, v10);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v17 = *(_QWORD *)(v11 + 64);
  else
    v17 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v13, v14, v17);
LABEL_10:
  if (*(_DWORD *)(v11 + 84))
    v18 = *(_QWORD *)(v11 + 64);
  else
    v18 = *(_QWORD *)(v11 + 64) + 1;
  v19 = (unint64_t)&v13[v18];
  v20 = (unint64_t)&v14[v18];
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v21 = v19 & 0xFFFFFFFFFFFFFFF8;
  v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = sub_1BB86E710();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (void *)((v25 + 16 + v21) & ~v25);
  v27 = (void *)((v25 + 16 + v22) & ~v25);
  v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v22) = v28(v26, 1, v23);
  v29 = v28(v27, 1, v23);
  if ((_DWORD)v22)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v26, v27, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
      return a1;
    }
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v26, v27, v23);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v26, v23);
  }
  if (*(_DWORD *)(v24 + 84))
    v30 = *(_QWORD *)(v24 + 64);
  else
    v30 = *(_QWORD *)(v24 + 64) + 1;
  memcpy(v26, v27, v30);
  return a1;
}

_OWORD *sub_1BB6EABC8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  size_t v26;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = ((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v6 = *(_OWORD *)v7;
  *(_BYTE *)(v6 + 16) = *(_BYTE *)(v7 + 16);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (char *)((v10 + 17 + v6) & ~v10);
  v12 = (char *)((v10 + 17 + v7) & ~v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v12, 1, v8))
  {
    v13 = *(_DWORD *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v12, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
    v13 = *(_DWORD *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  v17 = (unint64_t)&v11[v16];
  v18 = (unint64_t)&v12[v16];
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = v17 & 0xFFFFFFFFFFFFFFF8;
  v20 = v18 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFFF8) + 8);
  v21 = sub_1BB86E710();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (void *)((v23 + 16 + v19) & ~v23);
  v25 = (const void *)((v23 + 16 + v20) & ~v23);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v25, 1, v21))
  {
    if (*(_DWORD *)(v22 + 84))
      v26 = *(_QWORD *)(v22 + 64);
    else
      v26 = *(_QWORD *)(v22 + 64) + 1;
    memcpy(v24, v25, v26);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v24, v25, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v21);
  }
  return a1;
}

_QWORD *sub_1BB6EAD70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  size_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  size_t v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (char *)((v13 + 17 + v9) & ~v13);
  v15 = (char *)((v13 + 17 + v10) & ~v13);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(v9) = v16(v14, 1, v11);
  v17 = v16(v15, 1, v11);
  if ((_DWORD)v9)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v15, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v14, v15, v11);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v18 = *(_QWORD *)(v12 + 64);
  else
    v18 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v18);
LABEL_10:
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  v20 = (unint64_t)&v14[v19];
  v21 = (unint64_t)&v15[v19];
  *(_BYTE *)v20 = *(_BYTE *)v21;
  v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  v23 = v21 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  v24 = sub_1BB86E710();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = (void *)((v26 + 16 + v22) & ~v26);
  v28 = (void *)((v26 + 16 + v23) & ~v26);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  v30 = v29(v27, 1, v24);
  v31 = v29(v28, 1, v24);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v27, v28, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v24);
      return a1;
    }
  }
  else
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v27, v28, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v27, v24);
  }
  if (*(_DWORD *)(v25 + 84))
    v32 = *(_QWORD *)(v25 + 64);
  else
    v32 = *(_QWORD *)(v25 + 64) + 1;
  memcpy(v27, v28, v32);
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatCompilerEnumProperty(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  void *__dst;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    v8 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v8;
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    v9 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v9;
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    v10 = *(int *)(a3 + 48);
    __dst = (void *)(a1 + v10);
    v11 = (char *)a2 + v10;
    *(_QWORD *)(a1 + 96) = a2[12];
    v12 = sub_1BB86E710();
    v13 = *(_QWORD *)(v12 - 8);
    v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v11, 1, v12))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
  }
  return v3;
}

uint64_t initializeWithCopy for FormatCompilerEnumProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  void *__dst;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v9 = *(int *)(a3 + 48);
  __dst = (void *)(a1 + v9);
  v10 = (const void *)(a2 + v9);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v11 = sub_1BB86E710();
  v12 = *(_QWORD *)(v11 - 8);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v10, 1, v11))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for FormatCompilerEnumProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 48);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for FormatCompilerEnumProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  const void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v6 = *(int *)(a3 + 48);
  v7 = (const void *)(a2 + v6);
  v8 = (void *)(a1 + v6);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v8, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v8, v7, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithTake for FormatCompilerEnumProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 48);
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1BB6EB714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t sub_1BB6EB7A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB6EB824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5, type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1BB6EB880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  uint64_t v6;

  v6 = a4(0, a3, type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BB6EB8D4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2CACA0)
  {
    type metadata accessor for FormatCompilerProperty(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2CACA0);
  }
}

uint64_t static FormatCodingEmptyStringStrategy.defaultValue.getter()
{
  return 0;
}

BOOL static FormatCodingEmptyStringStrategy.shouldEncode(wrappedValue:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  return v2 != 0;
}

BOOL sub_1BB6EB95C(_QWORD *a1)
{
  unint64_t v1;
  uint64_t v2;

  v1 = a1[1];
  v2 = *a1 & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0)
    v2 = HIBYTE(v1) & 0xF;
  return v2 != 0;
}

ValueMetadata *type metadata accessor for FormatCodingEmptyStringStrategy()
{
  return &type metadata for FormatCodingEmptyStringStrategy;
}

id sub_1BB6EB98C(uint64_t a1)
{
  void *v1;
  id result;
  uint64_t v3;

  if (a1 == 1)
  {
    result = objc_msgSend(v1, sel_contentMode);
    if (result != (id)7)
    {
      result = objc_msgSend(v1, sel_contentMode);
      if (result != (id)4)
      {
        v3 = 8;
        return objc_msgSend(v1, sel_setContentMode_, v3);
      }
    }
  }
  else if (a1)
  {
    result = (id)sub_1BB873EAC();
    __break(1u);
  }
  else
  {
    result = objc_msgSend(v1, sel_contentMode);
    if (result != (id)7)
    {
      result = objc_msgSend(v1, sel_contentMode);
      if (result != (id)4)
      {
        v3 = 7;
        return objc_msgSend(v1, sel_setContentMode_, v3);
      }
    }
  }
  return result;
}

id sub_1BB6EBA84(uint64_t a1)
{
  return sub_1BB6EB98C(a1);
}

uint64_t FormatWebEmbedNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

unint64_t FormatWebEmbedNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 104);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

uint64_t FormatWebEmbedNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 96);
}

uint64_t FormatWebEmbedNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t FormatWebEmbedNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatWebEmbedNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatWebEmbedNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatWebEmbedNode.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatWebEmbedNode.contentFrameIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedNode.config.getter()
{
  return swift_retain();
}

unint64_t FormatWebEmbedNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 64);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatWebEmbedNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatWebEmbedNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatWebEmbedNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatWebEmbedNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatWebEmbedNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatWebEmbedNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t FormatWebEmbedNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v1 + 104) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatWebEmbedNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatWebEmbedNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatWebEmbedNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatWebEmbedNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 128);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 120);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatWebEmbedNode.location.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 152) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatWebEmbedNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatWebEmbedNode.__allocating_init(identifier:content:contentFrameIdentifier:config:size:resize:adjustments:style:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:location:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, char a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v21;

  v21 = swift_allocObject();
  FormatWebEmbedNode.init(identifier:content:contentFrameIdentifier:config:size:resize:adjustments:style:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:location:selectors:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
  return v21;
}

uint64_t FormatWebEmbedNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA719718(*(_QWORD *)(v0 + 64));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 104));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatWebEmbedNode.__deallocating_deinit()
{
  FormatWebEmbedNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB6EC0F4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB6EC1CC(&qword_1EF2CAD08, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB6EC128(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB6EC1CC(&qword_1ED3BE308, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNode);
  a1[2] = sub_1BB6EC1CC((unint64_t *)&unk_1ED39FE40, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNode);
  result = sub_1BB6EC1CC(&qword_1EF2CAD10, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB6EC18C(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed18FormatWebEmbedNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BB6EC198(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB6EC1CC(&qword_1EF2CAD18, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB6EC1CC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatWebEmbedNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB6EC208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;

  v54 = a5;
  v52 = a2;
  v51 = a1;
  v53 = a7;
  v18 = sub_1BB86C67C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  v23 = *(_QWORD **)(a4 + 16);
  v24 = *(_QWORD **)(a4 + 24);
  v25 = *(_QWORD **)(v22 + 40);
  if (v25)
  {
    v60 = *(_QWORD **)(v22 + 32);
    v61 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v26);
    sub_1BB872AFC(v27);
    swift_bridgeObjectRelease();
    v49 = v60;
    v48 = v61;
    v23 = *(_QWORD **)(a4 + 16);
    v24 = *(_QWORD **)(a4 + 24);
  }
  else
  {
    swift_bridgeObjectRetain();
    v49 = v23;
    v48 = v24;
  }
  v28 = *(_QWORD *)(a4 + 72);
  v50 = v23;
  if (v28)
  {
    v29 = *(_QWORD *)(v28 + 16);
    swift_retain();
  }
  else
  {
    v29 = 0;
  }
  v47 = swift_allocObject();
  v62 = v29;
  swift_beginAccess();
  v46 = *(_QWORD *)(a4 + 96);
  swift_beginAccess();
  v58 = *(_QWORD *)(a4 + 104);
  v30 = v58;
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v30);
  sub_1BA67C978(a3, &v59);
  sub_1BA6EEDB4(v30);
  swift_beginAccess();
  v45 = *(unsigned __int8 *)(a4 + 112);
  sub_1BB86DD80();
  v31 = v56;
  v32 = *(_QWORD *)(a4 + 48);
  v44 = *(_QWORD *)(a4 + 40);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a6 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url, v18);
  v33 = *(_QWORD *)(a4 + 120);
  v57 = *(_BYTE *)(a4 + 128);
  v55 = *(_QWORD *)(a4 + 64);
  v56 = v33;
  swift_bridgeObjectRetain();
  v34 = sub_1BB825C84();
  v36 = *(_QWORD *)(a4 + 136);
  v35 = *(_QWORD *)(a4 + 144);
  type metadata accessor for FormatWebEmbedNodeLayoutAttributes();
  swift_allocObject();
  v37 = (uint64_t)v21;
  v38 = v54;
  swift_retain();
  v39 = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40 = sub_1BB7E0A20(v51, v39, v49, v48, (uint64_t)v50, (uint64_t)v24, v38, &v62, a8, a9, a10, a11, v46, &v59, v45, v31, v44, v32, v37,
          &v56,
          v34 & 1,
          v36,
          v35);
  swift_release();
  result = swift_release();
  v42 = v47;
  *(_QWORD *)(v47 + 16) = v40;
  *v53 = v42 | 0x1000000000000004;
  return result;
}

uint64_t sub_1BB6EC5C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6EC60C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6EC658@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 96);
  return result;
}

uint64_t sub_1BB6EC69C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 96) = v2;
  return result;
}

unint64_t sub_1BB6EC6DC@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 104);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BB6EC728@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 112);
  return result;
}

uint64_t sub_1BB6EC76C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 112) = v2;
  return result;
}

uint64_t sub_1BB6EC7AC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 152);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatWebEmbedNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatWebEmbedNode.__allocating_init(identifier:content:contentFrameIdentifier:config:size:resize:adjustments:style:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:location:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1BB6EC844()
{
  swift_release();
  return swift_deallocObject();
}

Swift::Void __swiftcall FormatBlueprintViewSupplementaryViewProvider.register(in:)(UICollectionView *in)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[7];
  v4 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v3);
  (*(void (**)(UICollectionView *, uint64_t, uint64_t))(v4 + 8))(in, v3, v4);
}

uint64_t FormatBlueprintViewSupplementaryViewProvider.supplementaryView(section:layoutSection:view:supplementaryData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BA822894(0);
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB39C144();
  sub_1BB8705D0();
  sub_1BA5193C4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA822894);
  v14 = sub_1BB6EC9BC(*(_QWORD *)&v10[*(int *)(v8 + 28)], *(_QWORD *)&v10[*(int *)(v8 + 32)], a4, v4, a3);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA822894);
  return v14;
}

uint64_t sub_1BB6EC9BC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v51 = a5;
  v52 = a1;
  v49 = a2;
  v7 = type metadata accessor for FormatLayoutSectionDescriptor.Footer(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v48 = (uint64_t)&v47 - v12;
  v13 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v13);
  v50 = (uint64_t)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FormatLayoutSectionDescriptor.Header(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v47 - v20;
  v22 = sub_1BB870E88();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB870DD4();
  v26 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v25, v22);
  if (v26 == *MEMORY[0x1E0DBB2B8])
  {
    v27 = sub_1BB870DE0();
    if ((v27 & 0x8000000000000000) == 0)
    {
      if (v27 < *(_QWORD *)(v52 + 16))
      {
        sub_1BA4C2DD8(v52+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v27, (uint64_t)v21, type metadata accessor for FormatLayoutSectionDescriptor.Header);
        sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v18, type metadata accessor for FormatLayoutSectionDescriptor.Header);
        v28 = v50;
        sub_1BA5193C4((uint64_t)v18, v50, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        v29 = a4[7];
        v30 = a4[8];
        __swift_project_boxed_opaque_existential_1(a4 + 4, v29);
        v31 = swift_allocObject();
        swift_weakInit();
        v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v30 + 32);
        swift_retain();
        v33 = v32(v51, a3, v28, sub_1BB6ED164, v31, v29, v30);
        swift_release();
        sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        swift_release();
        v34 = (uint64_t)v21;
        v35 = type metadata accessor for FormatLayoutSectionDescriptor.Header;
LABEL_10:
        sub_1BA4A2E80(v34, v35);
        return v33;
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v26 == *MEMORY[0x1E0DBB2B0])
  {
    v36 = sub_1BB870DE0();
    v37 = *(_QWORD *)(v52 + 16);
    v38 = __OFSUB__(v36, v37);
    v39 = v36 - v37;
    if (!v38)
    {
      if ((v39 & 0x8000000000000000) == 0)
      {
        if (v39 < *(_QWORD *)(v49 + 16))
        {
          v40 = v48;
          sub_1BA4C2DD8(v49+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v39, v48, type metadata accessor for FormatLayoutSectionDescriptor.Footer);
          sub_1BA4C2DD8(v40, (uint64_t)v10, type metadata accessor for FormatLayoutSectionDescriptor.Footer);
          v41 = v50;
          sub_1BA5193C4((uint64_t)v10, v50, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
          v42 = a4[7];
          v43 = a4[8];
          __swift_project_boxed_opaque_existential_1(a4 + 4, v42);
          v44 = swift_allocObject();
          swift_weakInit();
          v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v43 + 32);
          swift_retain();
          v33 = v45(v51, a3, v41, sub_1BB6ED164, v44, v42, v43);
          swift_release();
          sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
          swift_release();
          v34 = v40;
          v35 = type metadata accessor for FormatLayoutSectionDescriptor.Footer;
          goto LABEL_10;
        }
        goto LABEL_15;
      }
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_16:
  result = sub_1BB873EAC();
  __break(1u);
  return result;
}

uint64_t FormatBlueprintViewSupplementaryViewProvider.deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return v0;
}

uint64_t FormatBlueprintViewSupplementaryViewProvider.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB6ECE40()
{
  return sub_1BA4A2870((unint64_t *)&qword_1ED3D4E30, type metadata accessor for FormatLayoutSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatLayoutSectionDescriptor);
}

uint64_t sub_1BB6ECE6C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 32), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(v2, v3, v4);
}

uint64_t sub_1BB6ECEBC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD **v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  sub_1BA822894(0);
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a3;
  v15 = *v4;
  sub_1BB39C144();
  sub_1BB8705D0();
  sub_1BA5193C4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA822894);
  v16 = sub_1BB6EC9BC(*(_QWORD *)&v10[*(int *)(v8 + 28)], *(_QWORD *)&v10[*(int *)(v8 + 32)], a4, v15, v14);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA822894);
  return v16;
}

uint64_t type metadata accessor for FormatBlueprintViewSupplementaryViewProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatBlueprintViewSupplementaryViewProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB6ED004()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB6ED028(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = MEMORY[0x1BCCE5D40](result + 16);
    if (v3)
    {
      v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
      v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
      result = swift_beginAccess();
      v6 = v5[1];
      if (v6)
      {
        v7 = *v5;
        if (MEMORY[0x1BCCE5D40](v4 + 32))
        {
          v8 = *(_QWORD *)(v4 + 40);
          ObjectType = swift_getObjectType();
          v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24);
          swift_bridgeObjectRetain();
          v10(a1, v7, v6, ObjectType, v8);
          swift_release();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
        return swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BB6ED164(uint64_t a1)
{
  return sub_1BB6ED028(a1);
}

void __swiftcall GroupLayoutAttributes.init(frame:feedItemLayoutAttributes:feedItemSupplementaryAttributes:)(NewsFeed::GroupLayoutAttributes *__return_ptr retstr, __C::CGRect frame, Swift::OpaquePointer feedItemLayoutAttributes, Swift::OpaquePointer feedItemSupplementaryAttributes)
{
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  void *v10;

  height = frame.size.height;
  width = frame.size.width;
  y = frame.origin.y;
  x = frame.origin.x;
  sub_1BB2C0284();
  sub_1BA6B39E4();
  sub_1BA6B39A0();
  v10 = (void *)sub_1BB872BBC();
  swift_bridgeObjectRelease();
  retstr->kind = NewsFeed_GroupLayoutAttributes_Kind_layout;
  retstr->frame.origin.x = x;
  retstr->frame.origin.y = y;
  retstr->frame.size.width = width;
  retstr->frame.size.height = height;
  retstr->feedItemLayoutAttributes._rawValue = v10;
  retstr->feedItemSupplementaryAttributes = feedItemSupplementaryAttributes;
}

void GroupLayoutAttributes.kind.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

double GroupLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t GroupLayoutAttributes.feedItemLayoutAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupLayoutAttributes.feedItemSupplementaryAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL static GroupLayoutAttributes.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GroupLayoutAttributes.Kind.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t GroupLayoutAttributes.Kind.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB6ED2D4()
{
  unint64_t result;

  result = qword_1EF2CAD20;
  if (!qword_1EF2CAD20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GroupLayoutAttributes.Kind, &type metadata for GroupLayoutAttributes.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD20);
  }
  return result;
}

uint64_t destroy for GroupLayoutAttributes()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupLayoutAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupLayoutAttributes()
{
  return &type metadata for GroupLayoutAttributes;
}

uint64_t storeEnumTagSinglePayload for GroupLayoutAttributes.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB6ED554 + 4 * byte_1BB940B05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB6ED588 + 4 * byte_1BB940B00[v4]))();
}

uint64_t sub_1BB6ED588(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6ED590(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6ED598);
  return result;
}

uint64_t sub_1BB6ED5A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6ED5ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB6ED5B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6ED5B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroupLayoutAttributes.Kind()
{
  return &type metadata for GroupLayoutAttributes.Kind;
}

uint64_t sub_1BB6ED5D4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB872FDC();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB872FDC();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  if ((sub_1BB86DC30() & 1) == 0)
    sub_1BB872FDC();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v5);
  if ((sub_1BB86DC30() & 1) == 0)
    sub_1BB872FDC();
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  return 40;
}

BOOL static CGRect.< infix(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  if (a2 == a6)
    return a1 <= a5;
  else
    return a2 < a6;
}

double CGRect.area.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double Width;
  CGRect v10;

  Width = CGRectGetWidth(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  return Width * CGRectGetHeight(v10);
}

unint64_t sub_1BB6ED7B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2CAD28;
  if (!qword_1EF2CAD28)
  {
    type metadata accessor for CGRect(255);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0C9B9D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD28);
  }
  return result;
}

BOOL sub_1BB6ED7FC(double *a1, double *a2)
{
  double v2;
  double v3;

  v2 = a1[1];
  v3 = a2[1];
  if (v2 == v3)
    return *a1 <= *a2;
  else
    return v2 < v3;
}

BOOL sub_1BB6ED81C(double *a1, double *a2)
{
  double v2;
  double v3;

  v2 = a1[1];
  v3 = a2[1];
  if (v3 == v2)
    return *a2 > *a1;
  else
    return v3 >= v2;
}

BOOL sub_1BB6ED83C(double *a1, double *a2)
{
  double v2;
  double v3;

  v2 = a1[1];
  v3 = a2[1];
  if (v2 == v3)
    return *a1 > *a2;
  else
    return v2 >= v3;
}

BOOL sub_1BB6ED85C(double *a1, double *a2)
{
  double v2;
  double v3;

  v2 = a1[1];
  v3 = a2[1];
  if (v3 == v2)
    return *a2 <= *a1;
  else
    return v3 < v2;
}

uint64_t static FormatContentSubgroupFilterSelector.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BB874398();
}

uint64_t sub_1BB6ED8AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v14[2];

  v2 = *v0;
  v1 = v0[1];
  v3 = sub_1BB37FA94();
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v14[0] = v2;
  v14[1] = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1BA6E583C(v14);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
LABEL_10:
    v12 = 0;
    goto LABEL_11;
  }
  v6 = (uint64_t *)(v4 + 64);
  while (1)
  {
    v7 = *(v6 - 1);
    v8 = *v6;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1BA71D208(v3, v7);
    v10 = sub_1BA6EB330(v9, v7);
    swift_release();
    if ((v10 & 1) != 0)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    v6 += 5;
    if (!--v5)
      goto LABEL_10;
  }
  v11 = sub_1BA6EBD20(v3, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
    goto LABEL_6;
  v12 = 1;
LABEL_11:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t FormatContentSubgroupFilterSelector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB6EDA24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB6EDAB8()
{
  sub_1BA817B58();
  return sub_1BB874710();
}

uint64_t sub_1BB6EDAE0()
{
  sub_1BA817B58();
  return sub_1BB87471C();
}

unint64_t sub_1BB6EDB08(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA820220();
  a1[2] = sub_1BA820264();
  result = sub_1BB6EDB3C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6EDB3C()
{
  unint64_t result;

  result = qword_1EF2CAD30;
  if (!qword_1EF2CAD30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterSelector, &type metadata for FormatContentSubgroupFilterSelector);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD30);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterSelector()
{
  return &type metadata for FormatContentSubgroupFilterSelector;
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroupFilterSelector.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB6EDBD0 + 4 * byte_1BB940C10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB6EDBF0 + 4 * byte_1BB940C15[v4]))();
}

_BYTE *sub_1BB6EDBD0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB6EDBF0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6EDBF8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6EDC00(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6EDC08(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6EDC10(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterSelector.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterSelector.CodingKeys;
}

unint64_t sub_1BB6EDC30()
{
  unint64_t result;

  result = qword_1EF2CAD38;
  if (!qword_1EF2CAD38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB940D90, &type metadata for FormatContentSubgroupFilterSelector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD38);
  }
  return result;
}

_QWORD *sub_1BB6EDC74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t *, uint64_t, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  int *v52;
  int EnumCaseMultiPayload;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  id v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  id v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  id v105;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  int *v115;
  unsigned int (*v117)(_QWORD *, uint64_t, int *);
  char *v118;
  int *v119;
  _QWORD *__dst;
  _QWORD *v121;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    v20 = (_QWORD *)(v22 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = (int *)type metadata accessor for FormatContent.Resolved();
    v7 = v6[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86C8B0();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
    *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
    *(_QWORD *)((char *)a1 + v6[10]) = *(_QWORD *)((char *)a2 + v6[10]);
    *(_QWORD *)((char *)a1 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
    v12 = v6[12];
    v13 = a1;
    v14 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)v13 + v12) = v14;
    *(_QWORD *)((char *)v13 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
    v114 = v13;
    v115 = v6;
    v15 = v6[14];
    __dst = (_QWORD *)((char *)v13 + v15);
    v121 = (_QWORD *)((char *)a2 + v15);
    v16 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
    v17 = *((_QWORD *)v16 - 1);
    v117 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v18 = v14;
    swift_unknownObjectRetain();
    if (v117(v121, 1, v16))
    {
      sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v121, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      v20 = v114;
      v21 = v115;
    }
    else
    {
      v111 = v17;
      v23 = v121[1];
      *__dst = *v121;
      __dst[1] = v23;
      v24 = v16[5];
      v25 = (_QWORD *)((char *)__dst + v24);
      v26 = (char *)v121 + v24;
      v27 = *(_QWORD *)((char *)v121 + v24 + 8);
      *v25 = *(_QWORD *)((char *)v121 + v24);
      v25[1] = v27;
      v28 = (int *)type metadata accessor for FormatWebEmbed();
      v29 = v28[5];
      v118 = (char *)v25 + v29;
      v112 = &v26[v29];
      v30 = sub_1BB86C67C();
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      v33 = v32;
      swift_bridgeObjectRetain();
      v32(v118, v112, v30);
      v34 = v28[6];
      v35 = (char *)v25 + v34;
      v36 = &v26[v34];
      v107 = v33;
      v108 = v30;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&v26[v34], 1, v30))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v33(v35, v36, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v35, 0, 1, v30);
      }
      v20 = v114;
      *(_QWORD *)((char *)v25 + v28[7]) = *(_QWORD *)&v26[v28[7]];
      v38 = v28[8];
      v39 = (_QWORD *)((char *)v25 + v38);
      v40 = &v26[v38];
      v113 = *((_QWORD *)v40 + 1);
      *v39 = *(_QWORD *)v40;
      v39[1] = v113;
      v41 = v28[9];
      v42 = (_QWORD *)((char *)v25 + v41);
      v43 = &v26[v41];
      v44 = *((_QWORD *)v43 + 1);
      *v42 = *(_QWORD *)v43;
      v42[1] = v44;
      *(_QWORD *)((char *)v25 + v28[10]) = *(_QWORD *)&v26[v28[10]];
      *(_QWORD *)((char *)v25 + v28[11]) = *(_QWORD *)&v26[v28[11]];
      *(_QWORD *)((char *)v25 + v28[12]) = *(_QWORD *)&v26[v28[12]];
      v45 = v121;
      *(_QWORD *)((char *)__dst + v16[6]) = *(_QWORD *)((char *)v121 + v16[6]);
      *(_QWORD *)((char *)__dst + v16[7]) = *(_QWORD *)((char *)v121 + v16[7]);
      v119 = v16;
      v46 = v16[8];
      v110 = (_QWORD *)((char *)__dst + v46);
      v47 = (_QWORD *)((char *)v121 + v46);
      v48 = type metadata accessor for WebEmbedDataVisualization();
      v109 = *(_QWORD *)(v48 - 8);
      v49 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v109 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v49(v47, 1, v48))
      {
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v110, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        v52 = v119;
        v51 = __dst;
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v54 = *v47;
        v52 = v119;
        v51 = __dst;
        v55 = v109;
        if (EnumCaseMultiPayload == 1)
        {
          v56 = v47;
          v57 = v47[1];
          *v110 = v54;
          v110[1] = v57;
          v58 = type metadata accessor for GenericDataVisualization();
          v59 = *(int *)(v58 + 20);
          v60 = (char *)v110 + v59;
          v61 = (char *)v47 + v59;
          swift_bridgeObjectRetain();
          v45 = v121;
          v107(v60, v61, v108);
          v62 = *(int *)(v58 + 24);
          v55 = v109;
          *(_QWORD *)((char *)v110 + v62) = *(uint64_t *)((char *)v56 + v62);
          swift_bridgeObjectRetain();
        }
        else
        {
          *v110 = v54;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v110, 0, 1, v48);
      }
      v63 = v52[9];
      v64 = (char *)v51 + v63;
      v65 = (char *)v45 + v63;
      sub_1BA6C5A68();
      v67 = v66;
      v68 = *(_QWORD *)(v66 - 8);
      v69 = v51;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v65, 1, v66))
      {
        sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v64, v65, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v64, 0, 1, v67);
      }
      v21 = v115;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v111 + 56))(v69, 0, 1, v119);
    }
    v71 = v21[15];
    v72 = *(void **)((char *)a2 + v71);
    *(_QWORD *)((char *)v20 + v71) = v72;
    *((_BYTE *)v20 + v21[16]) = *((_BYTE *)a2 + v21[16]);
    *(_QWORD *)((char *)v20 + v21[17]) = *(_QWORD *)((char *)a2 + v21[17]);
    v73 = v21[18];
    v74 = (char *)v20 + v73;
    v75 = (char *)a2 + v73;
    v76 = sub_1BB871E24();
    v77 = *(_QWORD *)(v76 - 8);
    v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
    v79 = v72;
    swift_bridgeObjectRetain();
    if (v78(v75, 1, v76))
    {
      sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v74, v75, v76);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
    }
    v81 = (int *)type metadata accessor for FormatPluginData();
    v82 = v81[5];
    v83 = (uint64_t)v20 + v82;
    v84 = (char *)a2 + v82;
    v85 = *(void **)((char *)a2 + v82);
    *(_QWORD *)v83 = v85;
    *(_DWORD *)(v83 + 8) = *((_DWORD *)v84 + 2);
    v86 = *((_QWORD *)v84 + 3);
    *(_QWORD *)(v83 + 16) = *((_QWORD *)v84 + 2);
    *(_QWORD *)(v83 + 24) = v86;
    v87 = v84 + 32;
    v88 = *((_QWORD *)v84 + 5);
    v89 = v85;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v88 - 1) >= 3)
    {
      *(_QWORD *)(v83 + 32) = *v87;
      *(_QWORD *)(v83 + 40) = v88;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v83 + 32) = *(_OWORD *)v87;
    }
    *(_BYTE *)(v83 + 48) = v84[48];
    v90 = (void *)*((_QWORD *)v84 + 7);
    v91 = *((_QWORD *)v84 + 8);
    *(_QWORD *)(v83 + 56) = v90;
    *(_QWORD *)(v83 + 64) = v91;
    *(_QWORD *)(v83 + 72) = *((_QWORD *)v84 + 9);
    v92 = v81[6];
    v93 = (uint64_t)v20 + v92;
    v94 = (char *)a2 + v92;
    v95 = *(_QWORD *)((char *)a2 + v92 + 24);
    v96 = v90;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v95)
    {
      v97 = *((_QWORD *)v94 + 4);
      *(_QWORD *)(v93 + 24) = v95;
      *(_QWORD *)(v93 + 32) = v97;
      (**(void (***)(uint64_t, char *, uint64_t))(v95 - 8))(v93, v94, v95);
    }
    else
    {
      v98 = *((_OWORD *)v94 + 1);
      *(_OWORD *)v93 = *(_OWORD *)v94;
      *(_OWORD *)(v93 + 16) = v98;
      *(_QWORD *)(v93 + 32) = *((_QWORD *)v94 + 4);
    }
    *((_BYTE *)v20 + v81[7]) = *((_BYTE *)a2 + v81[7]);
    v99 = v81[8];
    v100 = *(void **)((char *)a2 + v99);
    *(_QWORD *)((char *)v20 + v99) = v100;
    *(_QWORD *)((char *)v20 + v81[9]) = *(_QWORD *)((char *)a2 + v81[9]);
    v101 = v81[10];
    v102 = (uint64_t)v20 + v101;
    v103 = (char *)a2 + v101;
    v104 = *(_QWORD *)v103;
    LOBYTE(v103) = v103[8];
    *(_QWORD *)v102 = v104;
    *(_BYTE *)(v102 + 8) = (_BYTE)v103;
    *((_BYTE *)v20 + v81[11]) = *((_BYTE *)a2 + v81[11]);
    *((_BYTE *)v20 + v81[12]) = *((_BYTE *)a2 + v81[12]);
    *(_QWORD *)((char *)v20 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
    v105 = v100;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v20;
}

uint64_t sub_1BB6EE478(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;

  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for FormatContent.Resolved();
  v3 = a1 + v2[5];
  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v5 = a1 + v2[14];
  v6 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    v7 = v5 + v6[5];
    swift_bridgeObjectRelease();
    v8 = type metadata accessor for FormatWebEmbed();
    v9 = v7 + *(int *)(v8 + 20);
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v12(v9, v10);
    v13 = v7 + *(int *)(v8 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10))
      v12(v13, v10);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v14 = v5 + v6[8];
    v15 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for GenericDataVisualization();
        v12(v14 + *(int *)(v16 + 20), v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v17 = v5 + v6[9];
    sub_1BA6C5A68();
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  }

  swift_bridgeObjectRelease();
  v21 = a1 + v2[18];
  v22 = sub_1BB871E24();
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v24 = (int *)type metadata accessor for FormatPluginData();
  v25 = a1 + v24[5];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v25 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = a1 + v24[6];
  if (*(_QWORD *)(v26 + 24))
    __swift_destroy_boxed_opaque_existential_1(v26);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BB6EE818(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  int *v50;
  _QWORD *v51;
  int EnumCaseMultiPayload;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  id v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  id v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  id v102;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  _QWORD *__dst;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;
  unsigned int (*v113)(_QWORD *, uint64_t, uint64_t);
  char *v114;
  void *v115;
  _QWORD *v116;
  int *v117;
  _QWORD *v118;

  v3 = a2;
  v4 = a1;
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = (int *)type metadata accessor for FormatContent.Resolved();
  v7 = v6[5];
  v8 = (char *)v4 + v7;
  v9 = (char *)v3 + v7;
  v10 = sub_1BB86C8B0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_QWORD *)((char *)v4 + v6[6]) = *(_QWORD *)((char *)v3 + v6[6]);
  *(_QWORD *)((char *)v4 + v6[7]) = *(_QWORD *)((char *)v3 + v6[7]);
  *(_QWORD *)((char *)v4 + v6[8]) = *(_QWORD *)((char *)v3 + v6[8]);
  *(_QWORD *)((char *)v4 + v6[9]) = *(_QWORD *)((char *)v3 + v6[9]);
  *(_QWORD *)((char *)v4 + v6[10]) = *(_QWORD *)((char *)v3 + v6[10]);
  *(_QWORD *)((char *)v4 + v6[11]) = *(_QWORD *)((char *)v3 + v6[11]);
  v12 = v6[12];
  v115 = *(void **)((char *)v3 + v12);
  *(_QWORD *)((char *)v4 + v12) = v115;
  *(_QWORD *)((char *)v4 + v6[13]) = *(_QWORD *)((char *)v3 + v6[13]);
  v111 = v6;
  v13 = v6[14];
  v118 = (_QWORD *)((char *)v4 + v13);
  v14 = (_QWORD *)((char *)v3 + v13);
  v15 = type metadata accessor for FormatWebEmbed.Resolved();
  v110 = *(_QWORD *)(v15 - 8);
  v113 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v110 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v16 = v115;
  swift_unknownObjectRetain();
  if (v113(v14, 1, v15))
  {
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v118, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    v18 = v111;
  }
  else
  {
    v107 = v3;
    v108 = v4;
    v19 = v14[1];
    *v118 = *v14;
    v118[1] = v19;
    v116 = v14;
    v117 = (int *)v15;
    v20 = *(int *)(v15 + 20);
    v21 = (_QWORD *)((char *)v118 + v20);
    v22 = (char *)v14 + v20;
    v23 = *(_QWORD *)((char *)v14 + v20 + 8);
    *v21 = *(_QWORD *)((char *)v14 + v20);
    v21[1] = v23;
    v24 = (int *)type metadata accessor for FormatWebEmbed();
    v25 = v24[5];
    v114 = (char *)v21 + v25;
    v26 = &v22[v25];
    v27 = sub_1BB86C67C();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v105 = v29;
    v29(v114, v26, v27);
    v30 = v24[6];
    v31 = (char *)v21 + v30;
    v32 = &v22[v30];
    v104 = v27;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(&v22[v30], 1, v27))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v29(v31, v32, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
    }
    *(_QWORD *)((char *)v21 + v24[7]) = *(_QWORD *)&v22[v24[7]];
    v34 = v24[8];
    v35 = (_QWORD *)((char *)v21 + v34);
    v36 = &v22[v34];
    v109 = *((_QWORD *)v36 + 1);
    *v35 = *(_QWORD *)v36;
    v35[1] = v109;
    v37 = v24[9];
    v38 = (_QWORD *)((char *)v21 + v37);
    v39 = &v22[v37];
    v40 = *((_QWORD *)v39 + 1);
    *v38 = *(_QWORD *)v39;
    v38[1] = v40;
    *(_QWORD *)((char *)v21 + v24[10]) = *(_QWORD *)&v22[v24[10]];
    *(_QWORD *)((char *)v21 + v24[11]) = *(_QWORD *)&v22[v24[11]];
    *(_QWORD *)((char *)v21 + v24[12]) = *(_QWORD *)&v22[v24[12]];
    v41 = v116;
    *(_QWORD *)((char *)v118 + v117[6]) = *(_QWORD *)((char *)v116 + v117[6]);
    *(_QWORD *)((char *)v118 + v117[7]) = *(_QWORD *)((char *)v116 + v117[7]);
    v42 = v117[8];
    __dst = (_QWORD *)((char *)v118 + v42);
    v43 = (_QWORD *)((char *)v116 + v42);
    v44 = type metadata accessor for WebEmbedDataVisualization();
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v45 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47 = v43;
    swift_retain();
    swift_retain();
    if (v46(v43, 1, v44))
    {
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      v49 = v118;
      v50 = v117;
      v51 = v107;
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v53 = *v43;
      v49 = v118;
      v51 = v107;
      if (EnumCaseMultiPayload == 1)
      {
        v54 = v47[1];
        *__dst = v53;
        __dst[1] = v54;
        v55 = type metadata accessor for GenericDataVisualization();
        v56 = *(int *)(v55 + 20);
        v57 = (char *)__dst + v56;
        v58 = (char *)v47 + v56;
        swift_bridgeObjectRetain();
        v59 = v58;
        v41 = v116;
        v105(v57, v59, v104);
        *(_QWORD *)((char *)__dst + *(int *)(v55 + 24)) = *(_QWORD *)((char *)v47 + *(int *)(v55 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        *__dst = v53;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
      v50 = v117;
    }
    v60 = v50[9];
    v61 = (char *)v49 + v60;
    v62 = (char *)v41 + v60;
    sub_1BA6C5A68();
    v64 = v63;
    v65 = *(_QWORD *)(v63 - 8);
    v4 = v108;
    v3 = v51;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v62, 1, v63))
    {
      sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v61, v62, v64);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v61, 0, 1, v64);
    }
    v18 = v111;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v110 + 56))(v118, 0, 1, v50);
  }
  v67 = v18[15];
  v68 = *(void **)((char *)v3 + v67);
  *(_QWORD *)((char *)v4 + v67) = v68;
  *((_BYTE *)v4 + v18[16]) = *((_BYTE *)v3 + v18[16]);
  *(_QWORD *)((char *)v4 + v18[17]) = *(_QWORD *)((char *)v3 + v18[17]);
  v69 = v18[18];
  v70 = v4;
  v71 = (char *)v4 + v69;
  v72 = (char *)v3 + v69;
  v73 = sub_1BB871E24();
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  v76 = v68;
  swift_bridgeObjectRetain();
  if (v75(v72, 1, v73))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  v78 = (int *)type metadata accessor for FormatPluginData();
  v79 = v78[5];
  v80 = (uint64_t)v70 + v79;
  v81 = (char *)v3 + v79;
  v82 = *(void **)((char *)v3 + v79);
  *(_QWORD *)v80 = v82;
  *(_DWORD *)(v80 + 8) = *((_DWORD *)v81 + 2);
  v83 = *((_QWORD *)v81 + 3);
  *(_QWORD *)(v80 + 16) = *((_QWORD *)v81 + 2);
  *(_QWORD *)(v80 + 24) = v83;
  v84 = v81 + 32;
  v85 = *((_QWORD *)v81 + 5);
  v86 = v82;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)(v85 - 1) >= 3)
  {
    *(_QWORD *)(v80 + 32) = *v84;
    *(_QWORD *)(v80 + 40) = v85;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v80 + 32) = *(_OWORD *)v84;
  }
  *(_BYTE *)(v80 + 48) = v81[48];
  v87 = (void *)*((_QWORD *)v81 + 7);
  v88 = *((_QWORD *)v81 + 8);
  *(_QWORD *)(v80 + 56) = v87;
  *(_QWORD *)(v80 + 64) = v88;
  *(_QWORD *)(v80 + 72) = *((_QWORD *)v81 + 9);
  v89 = v78[6];
  v90 = (uint64_t)v70 + v89;
  v91 = (char *)v3 + v89;
  v92 = *(_QWORD *)((char *)v3 + v89 + 24);
  v93 = v87;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v92)
  {
    v94 = *((_QWORD *)v91 + 4);
    *(_QWORD *)(v90 + 24) = v92;
    *(_QWORD *)(v90 + 32) = v94;
    (**(void (***)(uint64_t, char *, uint64_t))(v92 - 8))(v90, v91, v92);
  }
  else
  {
    v95 = *((_OWORD *)v91 + 1);
    *(_OWORD *)v90 = *(_OWORD *)v91;
    *(_OWORD *)(v90 + 16) = v95;
    *(_QWORD *)(v90 + 32) = *((_QWORD *)v91 + 4);
  }
  *((_BYTE *)v70 + v78[7]) = *((_BYTE *)v3 + v78[7]);
  v96 = v78[8];
  v97 = *(void **)((char *)v3 + v96);
  *(_QWORD *)((char *)v70 + v96) = v97;
  *(_QWORD *)((char *)v70 + v78[9]) = *(_QWORD *)((char *)v3 + v78[9]);
  v98 = v78[10];
  v99 = (uint64_t)v70 + v98;
  v100 = (char *)v3 + v98;
  v101 = *(_QWORD *)v100;
  LOBYTE(v100) = v100[8];
  *(_QWORD *)v99 = v101;
  *(_BYTE *)(v99 + 8) = (_BYTE)v100;
  *((_BYTE *)v70 + v78[11]) = *((_BYTE *)v3 + v78[11]);
  *((_BYTE *)v70 + v78[12]) = *((_BYTE *)v3 + v78[12]);
  *(_QWORD *)((char *)v70 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)v3 + *(int *)(a3 + 20));
  v102 = v97;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v70;
}

_QWORD *sub_1BB6EEFD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD *, uint64_t, uint64_t);
  int v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t (*v47)(void);
  int v48;
  uint64_t v49;
  size_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  int *v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(_QWORD *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  int EnumCaseMultiPayload;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  int v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(char *, uint64_t, uint64_t);
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  void *v119;
  id v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(char *, uint64_t, uint64_t);
  int v127;
  int v128;
  uint64_t v129;
  int *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  void *v134;
  void *v135;
  id v136;
  unint64_t v137;
  void *v138;
  void *v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  void *v148;
  void *v149;
  id v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v156;
  void (*v157)(char *, char *, uint64_t);
  uint64_t v158;
  uint64_t v159;
  void (*__dst)(char *, char *, uint64_t);
  _QWORD *__dsta;
  char *__dstb;
  char *__dstc;
  uint64_t v164;
  _QWORD *v165;
  int *v166;
  uint64_t v167;
  unsigned int (*v168)(_QWORD *, uint64_t, uint64_t);
  char *v169;
  char *v170;
  char *v171;
  char *v172;
  char *__srca;
  void *__src;
  int *__srcb;
  int *__srcc;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  _QWORD *v180;
  _QWORD *v181;
  _QWORD *v182;
  int *v183;
  int *v184;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for FormatContent.Resolved();
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[10]) = *(_QWORD *)((char *)a2 + v6[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v11 = v6[12];
  v12 = *(void **)((char *)a1 + v11);
  v13 = *(void **)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = v13;
  v14 = v13;

  *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v15 = v6[14];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = type metadata accessor for FormatWebEmbed.Resolved();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v12) = v20(v16, 1, v18);
  v21 = v20(v17, 1, v18);
  if (!(_DWORD)v12)
  {
    if (v21)
    {
      sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_6;
    }
    v178 = a3;
    *v16 = *v17;
    v16[1] = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v184 = (int *)v18;
    v36 = *(int *)(v18 + 20);
    v180 = v16;
    v182 = v17;
    v37 = (_QWORD *)((char *)v16 + v36);
    v38 = (char *)v17 + v36;
    *v37 = *(_QWORD *)((char *)v17 + v36);
    v37[1] = *(_QWORD *)((char *)v17 + v36 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v39 = (int *)type metadata accessor for FormatWebEmbed();
    v40 = v39[5];
    v41 = (char *)v37 + v40;
    v42 = &v38[v40];
    v43 = sub_1BB86C67C();
    v44 = *(_QWORD *)(v43 - 8);
    __dst = *(void (**)(char *, char *, uint64_t))(v44 + 24);
    __dst(v41, v42, v43);
    v45 = v39[6];
    v46 = &v38[v45];
    v164 = v44;
    v47 = *(uint64_t (**)(void))(v44 + 48);
    v170 = (char *)v37 + v45;
    LODWORD(v44) = v47();
    v167 = v43;
    v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v47)(v46, 1, v43);
    if ((_DWORD)v44)
    {
      if (v48)
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v50 = *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64);
        v51 = v170;
LABEL_19:
        memcpy(v51, v46, v50);
        goto LABEL_28;
      }
      (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v170, v46, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v170, 0, 1, v43);
    }
    else
    {
      if (v48)
      {
        (*(void (**)(char *, uint64_t))(v164 + 8))(v170, v43);
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v50 = *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64);
        v51 = v170;
        goto LABEL_19;
      }
      __dst(v170, v46, v43);
    }
LABEL_28:
    *(_QWORD *)((char *)v37 + v39[7]) = *(_QWORD *)&v38[v39[7]];
    swift_retain();
    swift_release();
    v81 = v39[8];
    v82 = (_QWORD *)((char *)v37 + v81);
    v83 = &v38[v81];
    *v82 = *(_QWORD *)v83;
    v82[1] = *((_QWORD *)v83 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v84 = v39[9];
    v85 = (_QWORD *)((char *)v37 + v84);
    v86 = &v38[v84];
    *v85 = *(_QWORD *)v86;
    v85[1] = *((_QWORD *)v86 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v37 + v39[10]) = *(_QWORD *)&v38[v39[10]];
    *(_QWORD *)((char *)v37 + v39[11]) = *(_QWORD *)&v38[v39[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v37 + v39[12]) = *(_QWORD *)&v38[v39[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v180 + v184[6]) = *(_QWORD *)((char *)v182 + v184[6]);
    swift_retain();
    swift_release();
    *(_QWORD *)((char *)v180 + v184[7]) = *(_QWORD *)((char *)v182 + v184[7]);
    swift_retain();
    swift_release();
    v87 = v184[8];
    v88 = (_QWORD *)((char *)v180 + v87);
    v89 = (_QWORD *)((char *)v182 + v87);
    v90 = type metadata accessor for WebEmbedDataVisualization();
    v91 = *(_QWORD *)(v90 - 8);
    v92 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v91 + 48);
    v93 = v92(v88, 1, v90);
    v94 = v92(v89, 1, v90);
    if (v93)
    {
      if (v94)
      {
        v95 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_33:
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v95);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        v97 = v180;
        v98 = v182;
        goto LABEL_42;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v88 = *v89;
      if (EnumCaseMultiPayload == 1)
      {
        v88[1] = v89[1];
        v100 = type metadata accessor for GenericDataVisualization();
        v101 = *(int *)(v100 + 20);
        v171 = (char *)v88 + v101;
        __srcb = (int *)v100;
        __dstb = (char *)v89 + v101;
        v102 = *(void (**)(char *, char *, uint64_t))(v164 + 16);
        swift_bridgeObjectRetain();
        v102(v171, __dstb, v167);
        *(_QWORD *)((char *)v88 + __srcb[6]) = *(_QWORD *)((char *)v89 + __srcb[6]);
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_retain();
      }
      v98 = v182;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
      v97 = v180;
    }
    else
    {
      if (v94)
      {
        sub_1BA4A2E80((uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        v95 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
        goto LABEL_33;
      }
      v97 = v180;
      v98 = v182;
      if (a1 != a2)
      {
        sub_1BA4A2E80((uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        v103 = swift_getEnumCaseMultiPayload();
        *v88 = *v89;
        if (v103 == 1)
        {
          v88[1] = v89[1];
          v104 = type metadata accessor for GenericDataVisualization();
          v105 = *(int *)(v104 + 20);
          v172 = (char *)v88 + v105;
          __srcc = (int *)v104;
          __dstc = (char *)v89 + v105;
          v106 = *(void (**)(char *, char *, uint64_t))(v164 + 16);
          v98 = v182;
          swift_bridgeObjectRetain();
          v106(v172, __dstc, v167);
          *(_QWORD *)((char *)v88 + __srcc[6]) = *(_QWORD *)((char *)v89 + __srcc[6]);
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
      }
    }
LABEL_42:
    v107 = v184[9];
    v108 = (char *)v97 + v107;
    v109 = (char *)v98 + v107;
    sub_1BA6C5A68();
    v111 = v110;
    v112 = *(_QWORD *)(v110 - 8);
    v113 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
    v114 = v113(v108, 1, v110);
    v115 = v113(v109, 1, v111);
    if (v114)
    {
      if (!v115)
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v108, v109, v111);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v108, 0, 1, v111);
LABEL_48:
        a3 = v178;
        goto LABEL_49;
      }
    }
    else
    {
      if (!v115)
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v108, v109, v111);
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v112 + 8))(v108, v111);
    }
    sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
    goto LABEL_48;
  }
  if (v21)
  {
    v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v22);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_49;
  }
  v166 = v6;
  v159 = v19;
  v177 = a3;
  *v16 = *v17;
  v16[1] = v17[1];
  v183 = (int *)v18;
  v24 = *(int *)(v18 + 20);
  v179 = v16;
  v181 = v17;
  v25 = (_QWORD *)((char *)v16 + v24);
  v26 = (char *)v17 + v24;
  *v25 = *(_QWORD *)v26;
  v25[1] = *((_QWORD *)v26 + 1);
  v27 = (int *)type metadata accessor for FormatWebEmbed();
  v28 = v27[5];
  v169 = &v26[v28];
  __srca = (char *)v25 + v28;
  v29 = sub_1BB86C67C();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31(__srca, v169, v29);
  v32 = v27[6];
  v33 = (char *)v25 + v32;
  v34 = &v26[v32];
  v157 = v31;
  v158 = v29;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(&v26[v32], 1, v29))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v31(v33, v34, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
  }
  v6 = v166;
  *(_QWORD *)((char *)v25 + v27[7]) = *(_QWORD *)&v26[v27[7]];
  v52 = v27[8];
  v53 = (_QWORD *)((char *)v25 + v52);
  v54 = &v26[v52];
  *v53 = *(_QWORD *)v54;
  v53[1] = *((_QWORD *)v54 + 1);
  v55 = v27[9];
  v56 = (_QWORD *)((char *)v25 + v55);
  v57 = &v26[v55];
  *v56 = *(_QWORD *)v57;
  v56[1] = *((_QWORD *)v57 + 1);
  *(_QWORD *)((char *)v25 + v27[10]) = *(_QWORD *)&v26[v27[10]];
  *(_QWORD *)((char *)v25 + v27[11]) = *(_QWORD *)&v26[v27[11]];
  *(_QWORD *)((char *)v25 + v27[12]) = *(_QWORD *)&v26[v27[12]];
  *(_QWORD *)((char *)v179 + v183[6]) = *(_QWORD *)((char *)v181 + v183[6]);
  *(_QWORD *)((char *)v179 + v183[7]) = *(_QWORD *)((char *)v181 + v183[7]);
  v58 = v183[8];
  __dsta = (_QWORD *)((char *)v179 + v58);
  v165 = (_QWORD *)((char *)v181 + v58);
  v59 = type metadata accessor for WebEmbedDataVisualization();
  v60 = *(_QWORD **)(v59 - 8);
  v168 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v60[6];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v168(v165, 1, v59))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dsta, v165, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    a3 = v177;
    v62 = v179;
    v63 = v183;
    v64 = v181;
    v65 = v159;
  }
  else
  {
    __src = v60;
    v66 = __dsta;
    v67 = swift_getEnumCaseMultiPayload();
    v156 = v59;
    *__dsta = *v165;
    if (v67 == 1)
    {
      __dsta[1] = v165[1];
      v68 = type metadata accessor for GenericDataVisualization();
      v69 = *(int *)(v68 + 20);
      v70 = (char *)__dsta + v69;
      v71 = (char *)v165 + v69;
      swift_bridgeObjectRetain();
      v157(v70, v71, v158);
      v72 = *(int *)(v68 + 24);
      v66 = __dsta;
      *(_QWORD *)((char *)__dsta + v72) = *(_QWORD *)((char *)v165 + v72);
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    a3 = v177;
    v62 = v179;
    v63 = v183;
    v65 = v159;
    swift_storeEnumTagMultiPayload();
    (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__src + 7))(v66, 0, 1, v156);
    v64 = v181;
  }
  v74 = v63[9];
  v75 = (char *)v62 + v74;
  v76 = (char *)v64 + v74;
  sub_1BA6C5A68();
  v78 = v77;
  v79 = *(_QWORD *)(v77 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v76, 1, v77))
  {
    sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v75, v76, v78);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v75, 0, 1, v78);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v65 + 56))(v62, 0, 1, v183);
LABEL_49:
  v117 = v6[15];
  v118 = *(void **)((char *)a1 + v117);
  v119 = *(void **)((char *)a2 + v117);
  *(_QWORD *)((char *)a1 + v117) = v119;
  v120 = v119;

  *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121 = v6[18];
  v122 = (char *)a1 + v121;
  v123 = (char *)a2 + v121;
  v124 = sub_1BB871E24();
  v125 = *(_QWORD *)(v124 - 8);
  v126 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v125 + 48);
  v127 = v126(v122, 1, v124);
  v128 = v126(v123, 1, v124);
  if (v127)
  {
    if (!v128)
    {
      (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v122, v123, v124);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v122, 0, 1, v124);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v128)
  {
    (*(void (**)(char *, uint64_t))(v125 + 8))(v122, v124);
LABEL_54:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v125 + 24))(v122, v123, v124);
LABEL_55:
  v130 = (int *)type metadata accessor for FormatPluginData();
  v131 = v130[5];
  v132 = (char *)a1 + v131;
  v133 = (char *)a2 + v131;
  v134 = *(void **)((char *)a2 + v131);
  v135 = *(void **)v132;
  *(_QWORD *)v132 = v134;
  v136 = v134;

  v132[8] = v133[8];
  v132[9] = v133[9];
  v132[10] = v133[10];
  v132[11] = v133[11];
  *((_QWORD *)v132 + 2) = *((_QWORD *)v133 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v132 + 3) = *((_QWORD *)v133 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v137 = *((_QWORD *)v133 + 5) - 1;
  if ((unint64_t)(*((_QWORD *)v132 + 5) - 1) < 3)
  {
    if (v137 >= 3)
    {
      *((_QWORD *)v132 + 4) = *((_QWORD *)v133 + 4);
      *((_QWORD *)v132 + 5) = *((_QWORD *)v133 + 5);
      swift_bridgeObjectRetain();
      goto LABEL_62;
    }
    goto LABEL_60;
  }
  if (v137 < 3)
  {
    sub_1BA4A2E80((uint64_t)(v132 + 32), (uint64_t (*)(_QWORD))sub_1BA76D834);
LABEL_60:
    *((_OWORD *)v132 + 2) = *((_OWORD *)v133 + 2);
    goto LABEL_62;
  }
  *((_QWORD *)v132 + 4) = *((_QWORD *)v133 + 4);
  *((_QWORD *)v132 + 5) = *((_QWORD *)v133 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_62:
  v132[48] = v133[48];
  v138 = (void *)*((_QWORD *)v132 + 7);
  v139 = (void *)*((_QWORD *)v133 + 7);
  *((_QWORD *)v132 + 7) = v139;
  v140 = v139;

  *((_QWORD *)v132 + 8) = *((_QWORD *)v133 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v132 + 9) = *((_QWORD *)v133 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v141 = v130[6];
  v142 = (uint64_t)a1 + v141;
  v143 = (char *)a2 + v141;
  v144 = *(_QWORD *)((char *)a2 + v141 + 24);
  if (!*(_QWORD *)((char *)a1 + v141 + 24))
  {
    if (v144)
    {
      *(_QWORD *)(v142 + 24) = v144;
      *(_QWORD *)(v142 + 32) = *((_QWORD *)v143 + 4);
      (**(void (***)(uint64_t, char *))(v144 - 8))(v142, v143);
      goto LABEL_69;
    }
LABEL_68:
    v145 = *(_OWORD *)v143;
    v146 = *((_OWORD *)v143 + 1);
    *(_QWORD *)(v142 + 32) = *((_QWORD *)v143 + 4);
    *(_OWORD *)v142 = v145;
    *(_OWORD *)(v142 + 16) = v146;
    goto LABEL_69;
  }
  if (!v144)
  {
    __swift_destroy_boxed_opaque_existential_1(v142);
    goto LABEL_68;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v142, (uint64_t *)v143);
LABEL_69:
  *((_BYTE *)a1 + v130[7]) = *((_BYTE *)a2 + v130[7]);
  v147 = v130[8];
  v148 = *(void **)((char *)a1 + v147);
  v149 = *(void **)((char *)a2 + v147);
  *(_QWORD *)((char *)a1 + v147) = v149;
  v150 = v149;

  *(_QWORD *)((char *)a1 + v130[9]) = *(_QWORD *)((char *)a2 + v130[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v151 = v130[10];
  v152 = (char *)a1 + v151;
  v153 = (char *)a2 + v151;
  v154 = *(_QWORD *)v153;
  LOBYTE(v153) = v153[8];
  *(_QWORD *)v152 = v154;
  v152[8] = (char)v153;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v130[11]) = *((_BYTE *)a2 + v130[11]);
  *((_BYTE *)a1 + v130[12]) = *((_BYTE *)a2 + v130[12]);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1BB6EFF28(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  void (*v63)(char *, char *, uint64_t);
  _OWORD *v64;
  uint64_t v65;
  _OWORD *v66;
  uint64_t v67;
  char *__dsta;
  char *__dst;
  int *v70;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for FormatContent.Resolved();
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
  *(_QWORD *)((char *)a1 + v6[10]) = *(_QWORD *)((char *)a2 + v6[10]);
  *(_QWORD *)((char *)a1 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
  *(_QWORD *)((char *)a1 + v6[12]) = *(_QWORD *)((char *)a2 + v6[12]);
  *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
  v11 = v6[14];
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for FormatWebEmbed.Resolved();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v65 = v15;
    v66 = v12;
    v67 = a3;
    *v12 = *v13;
    v70 = (int *)v14;
    v17 = *(int *)(v14 + 20);
    v18 = (char *)v12 + v17;
    v64 = v13;
    v19 = (char *)v13 + v17;
    *(_OWORD *)((char *)v12 + v17) = *(_OWORD *)((char *)v13 + v17);
    v20 = (int *)type metadata accessor for FormatWebEmbed();
    v21 = v20[5];
    __dsta = &v18[v21];
    v22 = &v19[v21];
    v23 = sub_1BB86C67C();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v25(__dsta, v22, v23);
    v26 = v20[6];
    __dst = &v18[v26];
    v27 = &v19[v26];
    v63 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(&v19[v26], 1, v23))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v25(__dst, v27, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    *(_QWORD *)&v18[v20[7]] = *(_QWORD *)&v19[v20[7]];
    *(_OWORD *)&v18[v20[8]] = *(_OWORD *)&v19[v20[8]];
    *(_OWORD *)&v18[v20[9]] = *(_OWORD *)&v19[v20[9]];
    *(_QWORD *)&v18[v20[10]] = *(_QWORD *)&v19[v20[10]];
    *(_QWORD *)&v18[v20[11]] = *(_QWORD *)&v19[v20[11]];
    *(_QWORD *)&v18[v20[12]] = *(_QWORD *)&v19[v20[12]];
    *(_QWORD *)((char *)v66 + v70[6]) = *(_QWORD *)((char *)v64 + v70[6]);
    *(_QWORD *)((char *)v66 + v70[7]) = *(_QWORD *)((char *)v64 + v70[7]);
    v29 = v70[8];
    v30 = (_OWORD *)((char *)v66 + v29);
    v31 = (_OWORD *)((char *)v64 + v29);
    v32 = type metadata accessor for WebEmbedDataVisualization();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v30 = *v31;
        v35 = type metadata accessor for GenericDataVisualization();
        v63((char *)v30 + *(int *)(v35 + 20), (char *)v31 + *(int *)(v35 + 20), v23);
        *(_QWORD *)((char *)v30 + *(int *)(v35 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v35 + 24));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v30, v31, *(_QWORD *)(v33 + 64));
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v36 = v70[9];
    v37 = (char *)v66 + v36;
    v38 = (char *)v64 + v36;
    sub_1BA6C5A68();
    v40 = v39;
    v41 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v38, 1, v39))
    {
      sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v37, v38, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v40);
    }
    a3 = v67;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v65 + 56))(v66, 0, 1, v70);
  }
  *(_QWORD *)((char *)a1 + v6[15]) = *(_QWORD *)((char *)a2 + v6[15]);
  *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  v43 = v6[18];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = sub_1BB871E24();
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  v49 = (int *)type metadata accessor for FormatPluginData();
  v50 = v49[5];
  v51 = (_OWORD *)((char *)a1 + v50);
  v52 = (_OWORD *)((char *)a2 + v50);
  v53 = v52[3];
  v51[2] = v52[2];
  v51[3] = v53;
  v51[4] = v52[4];
  v54 = v52[1];
  *v51 = *v52;
  v51[1] = v54;
  v55 = v49[6];
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  v58 = *((_OWORD *)v57 + 1);
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *((_OWORD *)v56 + 1) = v58;
  *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
  *((_BYTE *)a1 + v49[7]) = *((_BYTE *)a2 + v49[7]);
  *(_QWORD *)((char *)a1 + v49[8]) = *(_QWORD *)((char *)a2 + v49[8]);
  *(_QWORD *)((char *)a1 + v49[9]) = *(_QWORD *)((char *)a2 + v49[9]);
  v59 = v49[10];
  v60 = (char *)a1 + v59;
  v61 = (char *)a2 + v59;
  *(_QWORD *)v60 = *(_QWORD *)v61;
  v60[8] = v61[8];
  *((_BYTE *)a1 + v49[11]) = *((_BYTE *)a2 + v49[11]);
  *((_BYTE *)a1 + v49[12]) = *((_BYTE *)a2 + v49[12]);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_1BB6F04FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *, uint64_t, int *);
  int v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  _OWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(_OWORD *, uint64_t, uint64_t);
  int v74;
  int v75;
  uint64_t (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t, uint64_t);
  int v106;
  int v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  void *v113;
  _OWORD *v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  char *v118;
  __int128 v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  void (*v127)(char *, char *, uint64_t);
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  int *v130;
  uint64_t v131;
  uint64_t v132;
  int *v133;
  char *__dstb;
  char *__dst;
  char *__dstc;
  char *__dsta;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  _QWORD *v142;
  _QWORD *v143;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for FormatContent.Resolved();
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[10]) = *(_QWORD *)((char *)a2 + v7[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[11]) = *(_QWORD *)((char *)a2 + v7[11]);
  swift_unknownObjectRelease();
  v12 = v7[12];
  v13 = *(void **)((char *)a1 + v12);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);

  *(_QWORD *)((char *)a1 + v7[13]) = *(_QWORD *)((char *)a2 + v7[13]);
  swift_unknownObjectRelease();
  v14 = v7[14];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v18 + 48);
  LODWORD(v9) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if (!(_DWORD)v9)
  {
    if (v20)
    {
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_6;
    }
    v139 = a3;
    v35 = v16[1];
    *v15 = *v16;
    v15[1] = v35;
    swift_bridgeObjectRelease();
    v36 = v17[5];
    v141 = v16;
    v143 = v15;
    v37 = (char *)v15 + v36;
    v38 = (char *)v16 + v36;
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    swift_bridgeObjectRelease();
    v40 = type metadata accessor for FormatWebEmbed();
    v41 = *(int *)(v40 + 20);
    __dstc = &v37[v41];
    v42 = &v38[v41];
    v43 = sub_1BB86C67C();
    v44 = *(_QWORD *)(v43 - 8);
    v128 = *(void (**)(char *, char *, uint64_t))(v44 + 40);
    v128(__dstc, v42, v43);
    v133 = (int *)v40;
    __dsta = v38;
    v45 = *(int *)(v40 + 24);
    v46 = &v37[v45];
    v47 = &v38[v45];
    v129 = v44;
    v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
    LODWORD(v38) = v48(&v37[v45], 1, v43);
    v131 = v43;
    v49 = v48(v47, 1, v43);
    if ((_DWORD)v38)
    {
      if (!v49)
      {
        (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v46, v47, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v46, 0, 1, v43);
        goto LABEL_20;
      }
    }
    else
    {
      if (!v49)
      {
        v128(v46, v47, v43);
LABEL_20:
        *(_QWORD *)&v37[v133[7]] = *(_QWORD *)&__dsta[v133[7]];
        swift_release();
        v58 = v133[8];
        v59 = &v37[v58];
        v60 = &__dsta[v58];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        *(_QWORD *)v59 = v62;
        *((_QWORD *)v59 + 1) = v61;
        swift_bridgeObjectRelease();
        v63 = v133[9];
        v64 = &v37[v63];
        v65 = &__dsta[v63];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        *(_QWORD *)v64 = v67;
        *((_QWORD *)v64 + 1) = v66;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v37[v133[10]] = *(_QWORD *)&__dsta[v133[10]];
        *(_QWORD *)&v37[v133[11]] = *(_QWORD *)&__dsta[v133[11]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&v37[v133[12]] = *(_QWORD *)&__dsta[v133[12]];
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v143 + v17[6]) = *(_QWORD *)((char *)v141 + v17[6]);
        swift_release();
        *(_QWORD *)((char *)v143 + v17[7]) = *(_QWORD *)((char *)v141 + v17[7]);
        swift_release();
        v68 = v17[8];
        v69 = (_OWORD *)((char *)v143 + v68);
        v70 = (_OWORD *)((char *)v141 + v68);
        v71 = type metadata accessor for WebEmbedDataVisualization();
        v72 = *(_QWORD *)(v71 - 8);
        v73 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v72 + 48);
        v74 = v73(v69, 1, v71);
        v75 = v73(v70, 1, v71);
        if (v74)
        {
          if (v75)
          {
            v76 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_25:
            sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v76);
            memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
            v78 = v141;
            goto LABEL_40;
          }
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *v69 = *v70;
            v86 = type metadata accessor for GenericDataVisualization();
            (*(void (**)(char *, char *, uint64_t))(v129 + 32))((char *)v69 + *(int *)(v86 + 20), (char *)v70 + *(int *)(v86 + 20), v131);
            *(_QWORD *)((char *)v69 + *(int *)(v86 + 24)) = *(_QWORD *)((char *)v70 + *(int *)(v86 + 24));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v69, v70, *(_QWORD *)(v72 + 64));
          }
          v78 = v141;
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
        }
        else
        {
          if (v75)
          {
            sub_1BA4A2E80((uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            v76 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
            goto LABEL_25;
          }
          v78 = v141;
          if (a1 != a2)
          {
            sub_1BA4A2E80((uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *v69 = *v70;
              v87 = type metadata accessor for GenericDataVisualization();
              (*(void (**)(char *, char *, uint64_t))(v129 + 32))((char *)v69 + *(int *)(v87 + 20), (char *)v70 + *(int *)(v87 + 20), v131);
              v78 = v141;
              *(_QWORD *)((char *)v69 + *(int *)(v87 + 24)) = *(_QWORD *)((char *)v70 + *(int *)(v87 + 24));
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v69, v70, *(_QWORD *)(v72 + 64));
            }
          }
        }
LABEL_40:
        v88 = v17[9];
        v89 = (char *)v143 + v88;
        v90 = (char *)v78 + v88;
        sub_1BA6C5A68();
        v92 = v91;
        v93 = *(_QWORD *)(v91 - 8);
        v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
        v95 = v94(v89, 1, v91);
        v96 = v94(v90, 1, v92);
        if (v95)
        {
          if (!v96)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v89, v90, v92);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v89, 0, 1, v92);
LABEL_46:
            a3 = v139;
            goto LABEL_47;
          }
        }
        else
        {
          if (!v96)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 40))(v89, v90, v92);
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v93 + 8))(v89, v92);
        }
        sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v129 + 8))(v46, v43);
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_20;
  }
  if (v20)
  {
    v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v21);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_47;
  }
  v130 = v17;
  v132 = v18;
  v138 = a3;
  v140 = v16;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v23 = v17[5];
  v142 = v15;
  v24 = (_OWORD *)((char *)v15 + v23);
  v25 = (char *)v16 + v23;
  *v24 = *(_OWORD *)v25;
  v26 = (int *)type metadata accessor for FormatWebEmbed();
  v27 = v26[5];
  __dstb = (char *)v24 + v27;
  v28 = &v25[v27];
  v29 = sub_1BB86C67C();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v31(__dstb, v28, v29);
  v32 = v26[6];
  __dst = (char *)v24 + v32;
  v33 = &v25[v32];
  v127 = v31;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(&v25[v32], 1, v29))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v31(__dst, v33, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
  }
  *(_QWORD *)((char *)v24 + v26[7]) = *(_QWORD *)&v25[v26[7]];
  *(_OWORD *)((char *)v24 + v26[8]) = *(_OWORD *)&v25[v26[8]];
  *(_OWORD *)((char *)v24 + v26[9]) = *(_OWORD *)&v25[v26[9]];
  *(_QWORD *)((char *)v24 + v26[10]) = *(_QWORD *)&v25[v26[10]];
  *(_QWORD *)((char *)v24 + v26[11]) = *(_QWORD *)&v25[v26[11]];
  *(_QWORD *)((char *)v24 + v26[12]) = *(_QWORD *)&v25[v26[12]];
  *(_QWORD *)((char *)v142 + v130[6]) = *(_QWORD *)((char *)v140 + v130[6]);
  *(_QWORD *)((char *)v142 + v130[7]) = *(_QWORD *)((char *)v140 + v130[7]);
  v50 = v130[8];
  v51 = (_OWORD *)((char *)v142 + v50);
  v52 = (_OWORD *)((char *)v140 + v50);
  v53 = type metadata accessor for WebEmbedDataVisualization();
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    a3 = v138;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v51 = *v52;
      v56 = type metadata accessor for GenericDataVisualization();
      v127((char *)v51 + *(int *)(v56 + 20), (char *)v52 + *(int *)(v56 + 20), v29);
      *(_QWORD *)((char *)v51 + *(int *)(v56 + 24)) = *(_QWORD *)((char *)v52 + *(int *)(v56 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v51, v52, *(_QWORD *)(v54 + 64));
    }
    a3 = v138;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  v79 = v130[9];
  v80 = (char *)v142 + v79;
  v81 = (char *)v140 + v79;
  sub_1BA6C5A68();
  v83 = v82;
  v84 = *(_QWORD *)(v82 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v82))
  {
    sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v80, v81, v83);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v80, 0, 1, v83);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v132 + 56))(v142, 0, 1, v130);
LABEL_47:
  v98 = v7[15];
  v99 = *(void **)((char *)a1 + v98);
  *(_QWORD *)((char *)a1 + v98) = *(_QWORD *)((char *)a2 + v98);

  *((_BYTE *)a1 + v7[16]) = *((_BYTE *)a2 + v7[16]);
  *(_QWORD *)((char *)a1 + v7[17]) = *(_QWORD *)((char *)a2 + v7[17]);
  swift_bridgeObjectRelease();
  v100 = v7[18];
  v101 = (char *)a1 + v100;
  v102 = (char *)a2 + v100;
  v103 = sub_1BB871E24();
  v104 = *(_QWORD *)(v103 - 8);
  v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
  v106 = v105(v101, 1, v103);
  v107 = v105(v102, 1, v103);
  if (v106)
  {
    if (!v107)
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v101, v102, v103);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v107)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v101, v103);
LABEL_52:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v104 + 40))(v101, v102, v103);
LABEL_53:
  v109 = (int *)type metadata accessor for FormatPluginData();
  v110 = v109[5];
  v111 = (char *)a1 + v110;
  v112 = (char *)a2 + v110;
  v113 = *(void **)((char *)a1 + v110);
  *(_QWORD *)((char *)a1 + v110) = *(_QWORD *)((char *)a2 + v110);

  v111[8] = v112[8];
  v111[9] = v112[9];
  v111[10] = v112[10];
  v111[11] = v112[11];
  *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
  swift_bridgeObjectRelease();
  *((_QWORD *)v111 + 3) = *((_QWORD *)v112 + 3);
  swift_bridgeObjectRelease();
  v114 = v112 + 32;
  if ((unint64_t)(*((_QWORD *)v111 + 5) - 1) < 3)
  {
LABEL_56:
    *((_OWORD *)v111 + 2) = *v114;
    goto LABEL_58;
  }
  v115 = *((_QWORD *)v112 + 5);
  if ((unint64_t)(v115 - 1) < 3)
  {
    sub_1BA4A2E80((uint64_t)(v111 + 32), (uint64_t (*)(_QWORD))sub_1BA76D834);
    goto LABEL_56;
  }
  *((_QWORD *)v111 + 4) = *(_QWORD *)v114;
  *((_QWORD *)v111 + 5) = v115;
  swift_bridgeObjectRelease();
LABEL_58:
  v111[48] = v112[48];
  v116 = (void *)*((_QWORD *)v111 + 7);
  *((_QWORD *)v111 + 7) = *((_QWORD *)v112 + 7);

  *((_QWORD *)v111 + 8) = *((_QWORD *)v112 + 8);
  swift_bridgeObjectRelease();
  *((_QWORD *)v111 + 9) = *((_QWORD *)v112 + 9);
  swift_bridgeObjectRelease();
  v117 = v109[6];
  v118 = (char *)a1 + v117;
  if (*(_QWORD *)((char *)a1 + v117 + 24))
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v117);
  v119 = *(_OWORD *)((char *)a2 + v117 + 16);
  *(_OWORD *)v118 = *(_OWORD *)((char *)a2 + v117);
  *((_OWORD *)v118 + 1) = v119;
  *((_QWORD *)v118 + 4) = *(_QWORD *)((char *)a2 + v117 + 32);
  *((_BYTE *)a1 + v109[7]) = *((_BYTE *)a2 + v109[7]);
  v120 = v109[8];
  v121 = *(void **)((char *)a1 + v120);
  *(_QWORD *)((char *)a1 + v120) = *(_QWORD *)((char *)a2 + v120);

  *(_QWORD *)((char *)a1 + v109[9]) = *(_QWORD *)((char *)a2 + v109[9]);
  swift_bridgeObjectRelease();
  v122 = v109[10];
  v123 = (char *)a1 + v122;
  v124 = (char *)a2 + v122;
  v125 = *(_QWORD *)v124;
  LOBYTE(v124) = v124[8];
  *(_QWORD *)v123 = v125;
  v123[8] = (char)v124;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v109[11]) = *((_BYTE *)a2 + v109[11]);
  *((_BYTE *)a1 + v109[12]) = *((_BYTE *)a2 + v109[12]);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB6F1174()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6F1180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for FormatPluginData();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BB6F11FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6F1208(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatPluginData();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for FormatSection()
{
  uint64_t result;

  result = qword_1ED3A5788;
  if (!qword_1ED3A5788)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB6F12BC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatPluginData();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of FeedAdLayoutProviding.adFrame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedAdLayoutProviding.prerollPlacements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void SportsDataVisualizationResponseEventStatus.isFinalized.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA4C2DD8(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1BB6F13D0 + 4 * byte_1BB940E40[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB6F13D0()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, type metadata accessor for StartTimeEndTime);
  return 1;
}

uint64_t type metadata accessor for SportsDataVisualizationResponseEventStatus(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3CF388);
}

uint64_t type metadata accessor for StartTime(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3AAB80);
}

uint64_t type metadata accessor for StartTimeEndTime(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3C4CC8);
}

uint64_t SportsDataVisualizationResponseEventStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t started;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _QWORD v35[10];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v43;

  v40 = a2;
  started = type metadata accessor for StartTimeEndTime(0);
  MEMORY[0x1E0C80A78](started);
  v35[7] = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v35[6] = (char *)v35 - v6;
  sub_1BA4CDF6C(0, &qword_1ED3AB5A0, (uint64_t (*)(void))sub_1BB6F1AB8, (uint64_t)&type metadata for SportsDataVisualizationResponseEventStatus.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v39 = v7;
  v37 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v35 - v8;
  v36 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1E0C80A78](v36);
  v35[5] = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v35[4] = (char *)v35 - v12;
  MEMORY[0x1E0C80A78](v13);
  v35[9] = (char *)v35 - v14;
  MEMORY[0x1E0C80A78](v15);
  v35[8] = (char *)v35 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v35 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v35 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v35 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v35 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v35 - v30;
  v32 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_1BB6F1AB8();
  v38 = v9;
  v33 = v43;
  sub_1BB87468C();
  if (!v33)
  {
    v35[0] = v28;
    v35[1] = v25;
    v35[2] = v22;
    v35[3] = v19;
    v43 = v31;
    sub_1BB6F1AFC();
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

unint64_t sub_1BB6F1AB8()
{
  unint64_t result;

  result = qword_1ED3AA960;
  if (!qword_1ED3AA960)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94148C, &type metadata for SportsDataVisualizationResponseEventStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA960);
  }
  return result;
}

unint64_t sub_1BB6F1AFC()
{
  unint64_t result;

  result = qword_1ED3AA958;
  if (!qword_1ED3AA958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941464, &type metadata for SportsDataVisualizationResponseEventStatus.EventStatusType);
    atomic_store(result, (unint64_t *)&qword_1ED3AA958);
  }
  return result;
}

uint64_t StartTime.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t started;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;

  v30 = a2;
  v3 = sub_1BB86C8B0();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v27 - v6;
  MEMORY[0x1E0C80A78](v7);
  v35 = (uint64_t)&v27 - v8;
  sub_1BA4CDF6C(0, &qword_1ED3AB5D8, (uint64_t (*)(void))sub_1BB6F2380, (uint64_t)&type metadata for StartTime.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - v12;
  started = type metadata accessor for StartTime(0);
  MEMORY[0x1E0C80A78](started);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6F2380();
  v17 = v36;
  sub_1BB87468C();
  if (!v17)
  {
    v28 = v16;
    v29 = started;
    v36 = v11;
    v18 = v33;
    v19 = v34;
    v38 = 0;
    v20 = v13;
    sub_1BB8740C8();
    sub_1BB86C850();
    v21 = v19;
    v37 = 1;
    v22 = sub_1BB874038();
    v23 = (uint64_t)v31;
    v24 = (uint64_t)v28;
    v28[*(int *)(v29 + 20)] = v22 & 1;
    v25 = v35;
    sub_1BB6F3650(v35, v22 & 1, v23);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v25, v21);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v24, v23, v21);
    sub_1BA5193C4(v24, v30, type metadata accessor for StartTime);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t StartTimeEndTime.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t started;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;

  v42 = a2;
  v39 = sub_1BB86CAD8();
  v41 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v40 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v36 - v5;
  v48 = sub_1BB86C8B0();
  v45 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v46 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v36 - v8;
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v36 - v10;
  sub_1BA4CDF6C(0, &qword_1ED3AB3A0, (uint64_t (*)(void))sub_1BB6F3B78, (uint64_t)&type metadata for StartTimeEndTime.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v36 - v14;
  started = type metadata accessor for StartTimeEndTime(0);
  MEMORY[0x1E0C80A78](started);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6F3B78();
  v19 = v49;
  sub_1BB87468C();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v49 = v13;
  v37 = started;
  v38 = a1;
  v21 = v48;
  v52 = 0;
  v22 = v15;
  sub_1BB8740C8();
  sub_1BB86C850();
  v23 = v45;
  v24 = v49;
  v51 = 1;
  v25 = v12;
  sub_1BB874050();
  v26 = v37;
  v27 = v46;
  if ((v28 & 1) != 0)
  {
    v29 = (uint64_t)v44;
    v50 = 1;
    sub_1BA629A0C(&qword_1ED3B0528, MEMORY[0x1E0CB08C0]);
    sub_1BB874068();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v29, 1, v21) == 1)
    {
      v30 = v40;
      sub_1BB86CA90();
      sub_1BB86C778();
      v31 = v30;
      v32 = v37;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v39);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v25);
      sub_1BA502AD0(v29, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v18[*(int *)(v32 + 20)], v43, v21);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v25);
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 32);
      v34 = v43;
      v33(v43, v29, v21);
      v33(&v18[*(int *)(v26 + 20)], (uint64_t)v34, v21);
    }
  }
  else
  {
    sub_1BB86C850();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v25);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v18[*(int *)(v26 + 20)], v27, v21);
  }
  v35 = (uint64_t)v38;
  sub_1BA4C2DD8((uint64_t)v18, v42, type metadata accessor for StartTimeEndTime);
  __swift_destroy_boxed_opaque_existential_1(v35);
  return sub_1BA4A2E80((uint64_t)v18, type metadata accessor for StartTimeEndTime);
}

unint64_t sub_1BB6F2380()
{
  unint64_t result;

  result = qword_1ED3AAB68;
  if (!qword_1ED3AAB68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941414, &type metadata for StartTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AAB68);
  }
  return result;
}

void SportsDataVisualizationResponseEventStatus.encode(to:)(_QWORD *a1)
{
  uint64_t started;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD v44[19];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  started = type metadata accessor for StartTimeEndTime(0);
  MEMORY[0x1E0C80A78](started);
  v44[18] = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v44[17] = (char *)v44 - v5;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BA4CDF6C(0, &qword_1ED3AC5F0, (uint64_t (*)(void))sub_1BB6F2380, (uint64_t)&type metadata for StartTime.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  MEMORY[0x1E0C80A78](v7);
  v44[8] = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v44[7] = (char *)v44 - v10;
  MEMORY[0x1E0C80A78](v11);
  v44[6] = (char *)v44 - v12;
  MEMORY[0x1E0C80A78](v13);
  v44[5] = (char *)v44 - v14;
  MEMORY[0x1E0C80A78](v15);
  v44[4] = (char *)v44 - v16;
  MEMORY[0x1E0C80A78](v17);
  v44[3] = (char *)v44 - v18;
  MEMORY[0x1E0C80A78](v19);
  v44[2] = (char *)v44 - v20;
  MEMORY[0x1E0C80A78](v21);
  v44[1] = (char *)v44 - v22;
  v45 = type metadata accessor for StartTime(0);
  MEMORY[0x1E0C80A78](v45);
  v44[16] = (char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v44[15] = (char *)v44 - v25;
  MEMORY[0x1E0C80A78](v26);
  v44[14] = (char *)v44 - v27;
  MEMORY[0x1E0C80A78](v28);
  v44[13] = (char *)v44 - v29;
  MEMORY[0x1E0C80A78](v30);
  v44[12] = (char *)v44 - v31;
  MEMORY[0x1E0C80A78](v32);
  v44[11] = (char *)v44 - v33;
  MEMORY[0x1E0C80A78](v34);
  v44[10] = (char *)v44 - v35;
  MEMORY[0x1E0C80A78](v36);
  v44[9] = (char *)v44 - v37;
  v38 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)v44 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3AC5E8, (uint64_t (*)(void))sub_1BB6F1AB8, (uint64_t)&type metadata for SportsDataVisualizationResponseEventStatus.CodingKeys, v6);
  v50 = v41;
  v49 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v42 = a1[3];
  v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v42);
  sub_1BB6F1AB8();
  sub_1BB8746C8();
  sub_1BA4C2DD8(v51, (uint64_t)v40, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  v43 = (char *)sub_1BB6F27C4 + 4 * word_1BB940E56[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB6F27C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v2 - 232);
  sub_1BA5193C4(v0, v3, type metadata accessor for StartTime);
  v4 = *(_QWORD *)(v2 - 112);
  v5 = *(_QWORD *)(v2 - 104);
  sub_1BB87417C();
  if (!v4)
  {
    __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v2 - 128), *(_QWORD *)(*(_QWORD *)(v2 - 128) + 24));
    sub_1BB6F2380();
    v6 = *(_QWORD *)(v2 - 296);
    sub_1BB8746C8();
    *(_BYTE *)(v2 - 65) = 0;
    sub_1BB86C8B0();
    sub_1BA629A0C((unint64_t *)&unk_1ED3B0510, MEMORY[0x1E0CB0890]);
    v7 = *(_QWORD *)(v2 - 136);
    sub_1BB8741AC();
    *(_BYTE *)(v2 - 65) = 1;
    sub_1BB874188();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v6, v7);
  }
  sub_1BA4A2E80(v3, type metadata accessor for StartTime);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v1, v5);
}

void sub_1BB6F2AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BA5193C4(v0, *(_QWORD *)(v1 - 192), type metadata accessor for StartTime);
  v2 = *(_QWORD *)(v1 - 112);
  sub_1BB87417C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v1 - 128), *(_QWORD *)(*(_QWORD *)(v1 - 128) + 24));
    sub_1BB6F2380();
    JUMPOUT(0x1BB6F2A0CLL);
  }
  JUMPOUT(0x1BB6F2AB0);
}

void sub_1BB6F2B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BA5193C4(v0, *(_QWORD *)(v1 - 184), type metadata accessor for StartTime);
  v2 = *(_QWORD *)(v1 - 112);
  sub_1BB87417C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v1 - 128), *(_QWORD *)(*(_QWORD *)(v1 - 128) + 24));
    sub_1BB6F2380();
    JUMPOUT(0x1BB6F2A0CLL);
  }
  JUMPOUT(0x1BB6F2AB0);
}

void sub_1BB6F2BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BA5193C4(v0, *(_QWORD *)(v1 - 176), type metadata accessor for StartTime);
  v2 = *(_QWORD *)(v1 - 112);
  sub_1BB87417C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v1 - 128), *(_QWORD *)(*(_QWORD *)(v1 - 128) + 24));
    sub_1BB6F2380();
    JUMPOUT(0x1BB6F2A0CLL);
  }
  JUMPOUT(0x1BB6F2AB0);
}

void sub_1BB6F2C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BA5193C4(v0, *(_QWORD *)(v1 - 168), type metadata accessor for StartTimeEndTime);
  v2 = *(_QWORD *)(v1 - 112);
  sub_1BB87417C();
  if (!v2)
    StartTimeEndTime.encode(to:)(*(_QWORD **)(v1 - 128));
  JUMPOUT(0x1BB6F2ABCLL);
}

void sub_1BB6F2CF4()
{
  sub_1BB87417C();
  JUMPOUT(0x1BB6F2AC0);
}

uint64_t sub_1BB6F2D24(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB6F2D58 + 4 * byte_1BB940E6C[a1]))(0x656D6147657250, 0xE700000000000000);
}

uint64_t sub_1BB6F2D58()
{
  return 0x6576694C7261654ELL;
}

uint64_t sub_1BB6F2D70()
{
  return 0x6572676F72506E49;
}

uint64_t sub_1BB6F2D8C()
{
  return 0x6B61657242;
}

uint64_t sub_1BB6F2DA0()
{
  return 0x656E6F7074736F50;
}

uint64_t sub_1BB6F2DE4()
{
  return 0x646579616C6544;
}

uint64_t sub_1BB6F2DF8()
{
  return 0x74696566726F46;
}

uint64_t sub_1BB6F2E0C()
{
  return 0x6E776F6E6B6E55;
}

uint64_t sub_1BB6F2E20()
{
  return 0x6C616E6946;
}

uint64_t StartTime.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;

  sub_1BA4CDF6C(0, &qword_1ED3AC5F0, (uint64_t (*)(void))sub_1BB6F2380, (uint64_t)&type metadata for StartTime.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6F2380();
  sub_1BB8746C8();
  v11 = 0;
  sub_1BB86C8B0();
  sub_1BA629A0C((unint64_t *)&unk_1ED3B0510, MEMORY[0x1E0CB0890]);
  sub_1BB8741AC();
  if (!v1)
  {
    type metadata accessor for StartTime(0);
    v10 = 1;
    sub_1BB874188();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StartTimeEndTime.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;

  sub_1BA4CDF6C(0, &qword_1ED3AC5E0, (uint64_t (*)(void))sub_1BB6F3B78, (uint64_t)&type metadata for StartTimeEndTime.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6F3B78();
  sub_1BB8746C8();
  v11 = 0;
  sub_1BB86C8B0();
  sub_1BA629A0C((unint64_t *)&unk_1ED3B0510, MEMORY[0x1E0CB0890]);
  sub_1BB8741AC();
  if (!v1)
  {
    type metadata accessor for StartTimeEndTime(0);
    v10 = 1;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB6F3108@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsDataVisualizationResponseEventStatus.init(from:)(a1, a2);
}

void sub_1BB6F311C(_QWORD *a1)
{
  SportsDataVisualizationResponseEventStatus.encode(to:)(a1);
}

uint64_t sub_1BB6F3130()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB6F317C()
{
  return sub_1BB872A90();
}

uint64_t sub_1BB6F3190()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB6F31D8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BB6F3228(_QWORD *a1@<X8>)
{
  *a1 = 0x737574617473;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1BB6F3240()
{
  return 0x737574617473;
}

uint64_t sub_1BB6F3254@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BB6F32A8()
{
  sub_1BB6F1AB8();
  return sub_1BB874710();
}

uint64_t sub_1BB6F32D0()
{
  sub_1BB6F1AB8();
  return sub_1BB87471C();
}

uint64_t sub_1BB6F32F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB6F2D24(*a1);
  v5 = v4;
  if (v3 == sub_1BB6F2D24(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB6F3380()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB6F2D24(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB6F33E0()
{
  unsigned __int8 *v0;

  sub_1BB6F2D24(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB6F3420()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB6F2D24(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB6F347C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB6F5CE0();
  *a1 = result;
  return result;
}

uint64_t sub_1BB6F34A8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB6F2D24(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB6F34D0()
{
  sub_1BB6F5C9C();
  return sub_1BB872D60();
}

uint64_t sub_1BB6F352C()
{
  sub_1BB6F5C9C();
  return sub_1BB872D0C();
}

uint64_t StartTime.isTbd.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StartTime(0) + 20));
}

uint64_t StartTime.init(startTime:isTbd:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB6F3650(a1, a2, (uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
  result = type metadata accessor for StartTime(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_1BB6F3650@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  LODWORD(v62) = a2;
  v63 = a1;
  v60 = a3;
  v61 = sub_1BB86C8B0();
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v56 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, v4);
  MEMORY[0x1E0C80A78](v5);
  v55 = (char *)&v48 - v6;
  sub_1BA4A3FB4(0, &qword_1ED39C238, (void (*)(uint64_t))MEMORY[0x1E0CB11F0]);
  MEMORY[0x1E0C80A78](v7);
  v57 = (char *)&v48 - v8;
  v9 = sub_1BB86CAD8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86C0E8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v48 - v18;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0558, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v48 - v24;
  v26 = sub_1BB86CB50();
  v58 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v48 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v62 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v59 + 16))(v60, v63, v61, v27);
  v49 = v9;
  v50 = v22;
  v53 = v14;
  v54 = v29;
  v51 = v19;
  v52 = v16;
  v62 = v13;
  v30 = v57;
  sub_1BB86CB20();
  v31 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v25, 1, v26) == 1)
  {
    sub_1BA502AD0((uint64_t)v25, (unint64_t *)&qword_1ED3B0558, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v60, v63, v61);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v54, v25, v26);
    sub_1BB86CA90();
    v33 = v51;
    sub_1BB86CA24();
    v34 = *(void (**)(char *, uint64_t))(v10 + 8);
    v35 = v49;
    v34(v12, v49);
    sub_1BB86CA90();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v30, 0, 1, v35);
    sub_1BB86CA90();
    v36 = v50;
    sub_1BB86CAA8();
    v34(v12, v35);
    v37 = v58;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v36, 0, 1, v31);
    v49 = sub_1BB86C0A0();
    sub_1BB86C0AC();
    sub_1BB86C07C();
    v38 = v52;
    sub_1BB86C0DC();
    v39 = (uint64_t)v55;
    sub_1BB86C088();
    v40 = *(void (**)(char *, uint64_t))(v53 + 8);
    v41 = v38;
    v42 = v62;
    v40(v41, v62);
    v40(v33, v42);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v54, v31);
    v43 = v59;
    v44 = v56;
    v45 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v56, v63, v61);
    v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v39, 1, v45);
    v47 = v60;
    if (v46 == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v60, v44, v45);
      return sub_1BA502AD0(v39, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v47, v39, v45);
    }
  }
}

unint64_t sub_1BB6F3B78()
{
  unint64_t result;

  result = qword_1ED3A4218;
  if (!qword_1ED3A4218)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9413C4, &type metadata for StartTimeEndTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A4218);
  }
  return result;
}

uint64_t sub_1BB6F3BBC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6462547369;
  else
    return 0x6D69547472617473;
}

uint64_t sub_1BB6F3BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB6F5D28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB6F3C1C()
{
  sub_1BB6F2380();
  return sub_1BB874710();
}

uint64_t sub_1BB6F3C44()
{
  sub_1BB6F2380();
  return sub_1BB87471C();
}

uint64_t sub_1BB6F3C6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StartTime.init(from:)(a1, a2);
}

uint64_t sub_1BB6F3C80(_QWORD *a1)
{
  return StartTime.encode(to:)(a1);
}

uint64_t _s8NewsFeed9StartTimeV05startD010Foundation4DateVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StartTimeEndTime.endTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StartTimeEndTime.init(startTime:endTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BB86C8B0();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v9(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v7, a2, v6);
}

uint64_t sub_1BB6F3D94()
{
  sub_1BB6F3B78();
  return sub_1BB874710();
}

uint64_t sub_1BB6F3DBC()
{
  sub_1BB6F3B78();
  return sub_1BB87471C();
}

uint64_t sub_1BB6F3DE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StartTimeEndTime.init(from:)(a1, a2);
}

uint64_t sub_1BB6F3DF8(_QWORD *a1)
{
  return StartTimeEndTime.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for SportsDataVisualizationResponseEventStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t started;
  uint64_t v9;
  uint64_t v11;
  void (*v12)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v7 = sub_1BB86C8B0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        started = type metadata accessor for StartTime(0);
        *((_BYTE *)a1 + *(int *)(started + 20)) = *((_BYTE *)a2 + *(int *)(started + 20));
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
      case 9u:
        v11 = sub_1BB86C8B0();
        v12 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        v12(a1, a2, v11);
        v13 = type metadata accessor for StartTimeEndTime(0);
        v12((_QWORD *)((char *)a1 + *(int *)(v13 + 20)), (_QWORD *)((char *)a2 + *(int *)(v13 + 20)), v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SportsDataVisualizationResponseEventStatus(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      v3 = sub_1BB86C8B0();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 8:
    case 9:
      v4 = sub_1BB86C8B0();
      v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v6(a1, v4);
      v5 = a1 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
      result = ((uint64_t (*)(uint64_t, uint64_t))v6)(v5, v4);
      break;
    default:
      return result;
  }
  return result;
}

_BYTE *initializeWithCopy for SportsDataVisualizationResponseEventStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t started;
  uint64_t v8;
  void (*v9)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v10;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      v6 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      started = type metadata accessor for StartTime(0);
      a1[*(int *)(started + 20)] = a2[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      v8 = sub_1BB86C8B0();
      v9 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      v10 = type metadata accessor for StartTimeEndTime(0);
      v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_BYTE *assignWithCopy for SportsDataVisualizationResponseEventStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t started;
  uint64_t v8;
  void (*v9)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v6 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        started = type metadata accessor for StartTime(0);
        a1[*(int *)(started + 20)] = a2[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        v8 = sub_1BB86C8B0();
        v9 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
        v9(a1, a2, v8);
        v10 = type metadata accessor for StartTimeEndTime(0);
        v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_BYTE *initializeWithTake for SportsDataVisualizationResponseEventStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t started;
  uint64_t v8;
  void (*v9)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v10;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      v6 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      started = type metadata accessor for StartTime(0);
      a1[*(int *)(started + 20)] = a2[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      v8 = sub_1BB86C8B0();
      v9 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
      v9(a1, a2, v8);
      v10 = type metadata accessor for StartTimeEndTime(0);
      v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_BYTE *assignWithTake for SportsDataVisualizationResponseEventStatus(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t started;
  uint64_t v8;
  void (*v9)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        v6 = sub_1BB86C8B0();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        started = type metadata accessor for StartTime(0);
        a1[*(int *)(started + 20)] = a2[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        v8 = sub_1BB86C8B0();
        v9 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
        v9(a1, a2, v8);
        v10 = type metadata accessor for StartTimeEndTime(0);
        v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB6F4F80()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for StartTime(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for StartTimeEndTime(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StartTime(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C8B0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for StartTime(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for StartTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for StartTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for StartTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for StartTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for StartTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6F5244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1BB86C8B0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StartTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6F52DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BB86C8B0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1BB6F5354()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StartTimeEndTime(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C8B0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for StartTimeEndTime(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1BB86C8B0();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for StartTimeEndTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BB86C8B0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for StartTimeEndTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BB86C8B0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for StartTimeEndTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BB86C8B0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for StartTimeEndTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BB86C8B0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartTimeEndTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6F5694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for StartTimeEndTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6F56DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BB6F571C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StartTimeEndTime.CodingKeys()
{
  return &type metadata for StartTimeEndTime.CodingKeys;
}

uint64_t _s8NewsFeed16StartTimeEndTimeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB6F57E4 + 4 * byte_1BB940EB8[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB6F5818 + 4 * byte_1BB940EB3[v4]))();
}

uint64_t sub_1BB6F5818(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6F5820(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6F5828);
  return result;
}

uint64_t sub_1BB6F5834(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6F583CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB6F5840(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6F5848(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartTime.CodingKeys()
{
  return &type metadata for StartTime.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseEventStatus.EventStatusType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BB6F58B0 + 4 * byte_1BB940EC2[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BB6F58E4 + 4 * byte_1BB940EBD[v4]))();
}

uint64_t sub_1BB6F58E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6F58EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6F58F4);
  return result;
}

uint64_t sub_1BB6F5900(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6F5908);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BB6F590C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6F5914(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseEventStatus.EventStatusType()
{
  return &type metadata for SportsDataVisualizationResponseEventStatus.EventStatusType;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseEventStatus.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB6F5970 + 4 * byte_1BB940EC7[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB6F5990 + 4 * byte_1BB940ECC[v4]))();
}

_BYTE *sub_1BB6F5970(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB6F5990(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6F5998(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6F59A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB6F59A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB6F59B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseEventStatus.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseEventStatus.CodingKeys;
}

unint64_t sub_1BB6F59D0()
{
  unint64_t result;

  result = qword_1EF2CAD40;
  if (!qword_1EF2CAD40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941164, &type metadata for SportsDataVisualizationResponseEventStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD40);
  }
  return result;
}

unint64_t sub_1BB6F5A18()
{
  unint64_t result;

  result = qword_1EF2CAD48;
  if (!qword_1EF2CAD48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94122C, &type metadata for SportsDataVisualizationResponseEventStatus.EventStatusType);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD48);
  }
  return result;
}

unint64_t sub_1BB6F5A60()
{
  unint64_t result;

  result = qword_1EF2CAD50;
  if (!qword_1EF2CAD50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9412E4, &type metadata for StartTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD50);
  }
  return result;
}

unint64_t sub_1BB6F5AA8()
{
  unint64_t result;

  result = qword_1EF2CAD58;
  if (!qword_1EF2CAD58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94139C, &type metadata for StartTimeEndTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD58);
  }
  return result;
}

unint64_t sub_1BB6F5AF0()
{
  unint64_t result;

  result = qword_1ED3A4228;
  if (!qword_1ED3A4228)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94130C, &type metadata for StartTimeEndTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A4228);
  }
  return result;
}

unint64_t sub_1BB6F5B38()
{
  unint64_t result;

  result = qword_1ED3A4220;
  if (!qword_1ED3A4220)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941334, &type metadata for StartTimeEndTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A4220);
  }
  return result;
}

unint64_t sub_1BB6F5B80()
{
  unint64_t result;

  result = qword_1ED3AAB78;
  if (!qword_1ED3AAB78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941254, &type metadata for StartTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AAB78);
  }
  return result;
}

unint64_t sub_1BB6F5BC8()
{
  unint64_t result;

  result = qword_1ED3AAB70;
  if (!qword_1ED3AAB70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94127C, &type metadata for StartTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AAB70);
  }
  return result;
}

unint64_t sub_1BB6F5C10()
{
  unint64_t result;

  result = qword_1ED3AA970;
  if (!qword_1ED3AA970)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94109C, &type metadata for SportsDataVisualizationResponseEventStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA970);
  }
  return result;
}

unint64_t sub_1BB6F5C58()
{
  unint64_t result;

  result = qword_1ED3AA968;
  if (!qword_1ED3AA968)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9410C4, &type metadata for SportsDataVisualizationResponseEventStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA968);
  }
  return result;
}

unint64_t sub_1BB6F5C9C()
{
  unint64_t result;

  result = qword_1ED3AA950;
  if (!qword_1ED3AA950)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9411B4, &type metadata for SportsDataVisualizationResponseEventStatus.EventStatusType);
    atomic_store(result, (unint64_t *)&qword_1ED3AA950);
  }
  return result;
}

uint64_t sub_1BB6F5CE0()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t sub_1BB6F5D28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6462547369 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t FormatSourceMap.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  swift_bridgeObjectRetain();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB87420C();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  return 47;
}

uint64_t sub_1BB6F5EC0()
{
  _QWORD *v0;

  swift_bridgeObjectRetain();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  return 47;
}

uint64_t FormatSourceMap.filePath.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSourceMap.line.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t FormatSourceMap.column.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t FormatSourceMap.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  sub_1BB8745D8();
  return sub_1BB8745D8();
}

uint64_t FormatSourceMap.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745D8();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB6F603C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745D8();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB6F60B0()
{
  sub_1BB872A90();
  sub_1BB8745D8();
  return sub_1BB8745D8();
}

uint64_t sub_1BB6F60F4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745D8();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB6F6164@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatSourceMap.init(from:)(a1, a2);
}

uint64_t sub_1BB6F6178(_QWORD *a1)
{
  return FormatSourceMap.encode(to:)(a1);
}

uint64_t sub_1BB6F618C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  swift_bridgeObjectRetain();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB87420C();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  return 47;
}

uint64_t sub_1BB6F6230(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB6F6254(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB64A1A8);
}

uint64_t sub_1BB6F623C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB6F6254(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB64A9B8);
}

uint64_t sub_1BB6F6248(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB6F6254(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB649990);
}

uint64_t sub_1BB6F6254(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

BOOL _s8NewsFeed15FormatSourceMapV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  _BOOL8 result;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    if (v2 != v5)
      return 0;
    return v3 == v4;
  }
  v7 = sub_1BB874398();
  result = 0;
  if ((v7 & 1) != 0 && v2 == v5)
    return v3 == v4;
  return result;
}

uint64_t _s8NewsFeed15FormatSourceMapV1loiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_1BB874398() & 1) == 0)
    return sub_1BB874398();
  if (v2 == v4)
    return v3 < v5;
  return v2 < v4;
}

unint64_t sub_1BB6F63A0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6F63C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6F63C4()
{
  unint64_t result;

  result = qword_1EF2CAD60;
  if (!qword_1EF2CAD60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceMap, &type metadata for FormatSourceMap);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD60);
  }
  return result;
}

unint64_t sub_1BB6F640C()
{
  unint64_t result;

  result = qword_1EF2CAD68;
  if (!qword_1EF2CAD68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceMap, &type metadata for FormatSourceMap);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD68);
  }
  return result;
}

unint64_t sub_1BB6F6450(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6B5EF0();
  a1[2] = sub_1BB3DB36C();
  result = sub_1BB6F640C();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatSourceMap()
{
  return &type metadata for FormatSourceMap;
}

uint64_t FormatAdMetricsNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:privacyMarkerFrameIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t *a14, char a15, __int128 a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;

  v17 = *a7;
  v18 = *a14;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(double *)(a9 + 48) = a10;
  *(double *)(a9 + 56) = a11;
  *(double *)(a9 + 64) = a12;
  *(double *)(a9 + 72) = a13;
  *(_QWORD *)(a9 + 80) = v17;
  *(_QWORD *)(a9 + 88) = a8;
  *(_QWORD *)(a9 + 96) = v18;
  *(_BYTE *)(a9 + 104) = a15;
  *(_OWORD *)(a9 + 112) = a16;
  *(_QWORD *)(a9 + 128) = a17;
  return result;
}

uint64_t FormatAdMetricsNodeLayoutAttributes.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatAdMetricsNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatAdMetricsNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatAdMetricsNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

uint64_t FormatAdMetricsNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 80);
  return swift_retain();
}

uint64_t FormatAdMetricsNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

unint64_t FormatAdMetricsNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 96);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatAdMetricsNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t FormatAdMetricsNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatAdMetricsNodeLayoutAttributes.privacyMarkerFrameIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB6F65C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB6F65FC + 4 * a9_2[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BB6F65FC()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB6F6618()
{
  return 0x6E65644965646F6ELL;
}

uint64_t sub_1BB6F663C()
{
  return 0x656D617266;
}

uint64_t sub_1BB6F6650()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB6F6668()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB6F667C()
{
  return 0x696C696269736976;
}

unint64_t sub_1BB6F6694()
{
  return 0xD000000000000018;
}

uint64_t sub_1BB6F66E4()
{
  unsigned __int8 *v0;

  return sub_1BB6F65C4(*v0);
}

uint64_t sub_1BB6F66EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB6F7810(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB6F6710()
{
  sub_1BB6F6AA8();
  return sub_1BB874710();
}

uint64_t sub_1BB6F6738()
{
  sub_1BB6F6AA8();
  return sub_1BB87471C();
}

uint64_t FormatAdMetricsNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;

  sub_1BB6F7208(0, &qword_1EF2CAD70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v21 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v28 = *(_QWORD *)(v1 + 24);
  v29 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v26 = *(_QWORD *)(v1 + 40);
  v27 = v9;
  v10 = *(_QWORD *)(v1 + 48);
  v11 = *(_QWORD *)(v1 + 56);
  v12 = *(_QWORD *)(v1 + 64);
  v13 = *(_QWORD *)(v1 + 72);
  v14 = *(_QWORD *)(v1 + 80);
  v24 = *(_QWORD *)(v1 + 88);
  v25 = v14;
  v15 = *(_QWORD *)(v1 + 96);
  v35 = *(unsigned __int8 *)(v1 + 104);
  v22 = *(_QWORD *)(v1 + 112);
  v23 = v15;
  v16 = *(_QWORD *)(v1 + 120);
  v21[0] = *(_QWORD *)(v1 + 128);
  v21[1] = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6F6AA8();
  sub_1BB8746C8();
  LOBYTE(v31) = 0;
  v17 = v30;
  sub_1BB87417C();
  if (!v17)
  {
    v18 = v25;
    v19 = v23;
    LOBYTE(v31) = 1;
    sub_1BB87417C();
    LOBYTE(v31) = 2;
    sub_1BB87417C();
    v31 = v10;
    v32 = v11;
    v33 = v12;
    v34 = v13;
    v36 = 3;
    type metadata accessor for CGRect(0);
    sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
    sub_1BB8741AC();
    v31 = v18;
    v36 = 4;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v31) = 5;
    sub_1BB8741A0();
    v31 = v19;
    v36 = 6;
    sub_1BA84B088();
    sub_1BB8741AC();
    LOBYTE(v31) = 7;
    sub_1BB874188();
    v31 = v22;
    v36 = 8;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA4A2870(&qword_1EF2AC0C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    LOBYTE(v31) = 9;
    sub_1BB87411C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB6F6AA8()
{
  unint64_t result;

  result = qword_1EF2CAD78;
  if (!qword_1EF2CAD78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941898, &type metadata for FormatAdMetricsNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD78);
  }
  return result;
}

uint64_t FormatAdMetricsNodeLayoutAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  _BYTE v74[7];
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  _DWORD v79[3];
  _QWORD *v80;

  sub_1BB6F7208(0, &qword_1EF2CAD80, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v39 - v8;
  v10 = a1[3];
  v80 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BB6F6AA8();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  v11 = v7;
  v48 = a2;
  LOBYTE(v60) = 0;
  v12 = sub_1BB874098();
  v14 = v13;
  LOBYTE(v60) = 1;
  swift_bridgeObjectRetain();
  v47 = sub_1BB874098();
  LOBYTE(v60) = 2;
  v16 = v15;
  swift_bridgeObjectRetain();
  v17 = sub_1BB874098();
  v50 = v16;
  v46 = v17;
  v19 = v18;
  type metadata accessor for CGRect(0);
  LOBYTE(v51) = 3;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v49 = v19;
  v20 = v60;
  v21 = v61;
  v22 = v62;
  v23 = v63;
  LOBYTE(v51) = 4;
  sub_1BA995268();
  sub_1BB874068();
  v24 = v60;
  LOBYTE(v60) = 5;
  swift_retain();
  v44 = sub_1BB8740C8();
  LOBYTE(v51) = 6;
  sub_1BA651250();
  sub_1BB8740D4();
  v25 = v60;
  LOBYTE(v60) = 7;
  v45 = v25;
  sub_1BA67D3F4(v25);
  v43 = 0;
  v42 = sub_1BB8740A4();
  type metadata accessor for FormatContextLayoutOptions();
  LOBYTE(v51) = 8;
  sub_1BA4A2870(&qword_1EF2AC0F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
  sub_1BB8740D4();
  v41 = v24;
  v26 = v60;
  v78 = 9;
  swift_retain();
  v39 = sub_1BB87402C();
  v40 = v27;
  v28 = v42 & 1;
  LODWORD(v43) = v42 & 1;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v6);
  *(_QWORD *)&v51 = v12;
  *((_QWORD *)&v51 + 1) = v14;
  v30 = v49;
  v29 = v50;
  *(_QWORD *)&v52 = v47;
  *((_QWORD *)&v52 + 1) = v50;
  v31 = v45;
  *(_QWORD *)&v53 = v46;
  *((_QWORD *)&v53 + 1) = v49;
  *(_QWORD *)&v54 = v20;
  *((_QWORD *)&v54 + 1) = v21;
  *(_QWORD *)&v55 = v22;
  *((_QWORD *)&v55 + 1) = v23;
  *(_QWORD *)&v56 = v41;
  *((_QWORD *)&v56 + 1) = v44;
  *(_QWORD *)&v57 = v45;
  BYTE8(v57) = v28;
  *(_QWORD *)&v58 = v26;
  *((_QWORD *)&v58 + 1) = v39;
  v59 = v40;
  sub_1BAB4720C((uint64_t)&v51);
  swift_release();
  sub_1BA6EEDB4(v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32 = v41;
  swift_release();
  v33 = v58;
  v34 = v48;
  *(_OWORD *)(v48 + 96) = v57;
  *(_OWORD *)(v34 + 112) = v33;
  *(_QWORD *)(v34 + 128) = v59;
  v35 = v54;
  *(_OWORD *)(v34 + 32) = v53;
  *(_OWORD *)(v34 + 48) = v35;
  v36 = v56;
  *(_OWORD *)(v34 + 64) = v55;
  *(_OWORD *)(v34 + 80) = v36;
  v37 = v52;
  *(_OWORD *)v34 = v51;
  *(_OWORD *)(v34 + 16) = v37;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  v60 = v12;
  v61 = v14;
  v62 = v47;
  v63 = v29;
  v64 = v46;
  v65 = v30;
  v66 = v20;
  v67 = v21;
  v68 = v22;
  v69 = v23;
  v70 = v32;
  v71 = v44;
  v72 = v31;
  v73 = v43;
  *(_DWORD *)v74 = v79[0];
  *(_DWORD *)&v74[3] = *(_DWORD *)((char *)v79 + 3);
  v75 = v26;
  v76 = v39;
  v77 = v40;
  return sub_1BAB47294((uint64_t)&v60);
}

void sub_1BB6F7208(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB6F6AA8();
    v7 = a3(a1, &type metadata for FormatAdMetricsNodeLayoutAttributes.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB6F7268()
{
  unint64_t result;

  result = qword_1EF2CAD88;
  if (!qword_1EF2CAD88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAdMetricsNodeLayoutAttributes, &type metadata for FormatAdMetricsNodeLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD88);
  }
  return result;
}

double sub_1BB6F72AC()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

unint64_t sub_1BB6F72C4()
{
  unint64_t result;

  result = qword_1EF2CAD90;
  if (!qword_1EF2CAD90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAdMetricsNodeLayoutAttributes, &type metadata for FormatAdMetricsNodeLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD90);
  }
  return result;
}

uint64_t sub_1BB6F7308@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAdMetricsNodeLayoutAttributes.init(from:)(a1, a2);
}

uint64_t sub_1BB6F731C(_QWORD *a1)
{
  return FormatAdMetricsNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BB6F7330()
{
  sub_1BB3E705C();
  return sub_1BB86D96C();
}

uint64_t destroy for FormatAdMetricsNodeLayoutAttributes(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(a1 + 96));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatAdMetricsNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BA67D3F4(v9);
  *(_QWORD *)(a1 + 96) = v9;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatAdMetricsNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v4 = *(_QWORD *)(a2 + 96);
  sub_1BA67D3F4(v4);
  v5 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v4;
  sub_1BA6EEDB4(v5);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatAdMetricsNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  v8 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_1BA6EEDB4(v8);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatAdMetricsNodeLayoutAttributes()
{
  return &type metadata for FormatAdMetricsNodeLayoutAttributes;
}

uint64_t storeEnumTagSinglePayload for FormatAdMetricsNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1BB6F76B8 + 4 * byte_1BB94166F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1BB6F76EC + 4 * byte_1BB94166A[v4]))();
}

uint64_t sub_1BB6F76EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6F76F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6F76FCLL);
  return result;
}

uint64_t sub_1BB6F7708(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6F7710);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1BB6F7714(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6F771C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatAdMetricsNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatAdMetricsNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB6F773C()
{
  unint64_t result;

  result = qword_1EF2CAD98;
  if (!qword_1EF2CAD98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941870, &type metadata for FormatAdMetricsNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CAD98);
  }
  return result;
}

unint64_t sub_1BB6F7784()
{
  unint64_t result;

  result = qword_1EF2CADA0;
  if (!qword_1EF2CADA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9417E0, &type metadata for FormatAdMetricsNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CADA0);
  }
  return result;
}

unint64_t sub_1BB6F77CC()
{
  unint64_t result;

  result = qword_1EF2CADA8;
  if (!qword_1EF2CADA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941808, &type metadata for FormatAdMetricsNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CADA8);
  }
  return result;
}

uint64_t sub_1BB6F7810(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB961EB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001BB959E80)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1BB6F7C18(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  char v14;
  char v15;

  v13[0] = a4;
  v13[1] = a5;
  sub_1BB6F8138(0, &qword_1EF2CADC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6F80F4();
  sub_1BB8746C8();
  v15 = 0;
  sub_1BB87417C();
  if (!v5)
  {
    v14 = 1;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BB6F7D48()
{
  sub_1BB6F80F4();
  return sub_1BB874710();
}

uint64_t sub_1BB6F7D70()
{
  sub_1BB6F80F4();
  return sub_1BB87471C();
}

uint64_t sub_1BB6F7D98@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1BB6F7F40(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1BB6F7DC4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BB6F7C18(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1BB6F7DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C2450, (uint64_t (*)(uint64_t))sub_1BAA85C90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BAFD3CA0();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v11 + 32) = 0x696669746E656449;
  *(_QWORD *)(v11 + 40) = 0xEA00000000007265;
  v12 = MEMORY[0x1E0DEA968];
  v13 = MEMORY[0x1E0DEA9D8];
  *(_QWORD *)(v11 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 80) = v13;
  *(_QWORD *)(v11 + 48) = a1;
  *(_QWORD *)(v11 + 56) = a2;
  *(_BYTE *)(v11 + 88) = 0;
  *(_QWORD *)(v11 + 96) = 1701667150;
  *(_QWORD *)(v11 + 104) = 0xE400000000000000;
  *(_QWORD *)(v11 + 136) = v12;
  *(_QWORD *)(v11 + 144) = v13;
  *(_QWORD *)(v11 + 112) = a3;
  *(_QWORD *)(v11 + 120) = a4;
  *(_BYTE *)(v11 + 152) = 0;
  *(_QWORD *)(inited + 56) = &type metadata for DebugInspectionDataSection;
  *(_QWORD *)(inited + 64) = &off_1E728C9C8;
  *(_QWORD *)(inited + 32) = 0x7954656C7A7A7550;
  *(_QWORD *)(inited + 40) = 0xEA00000000006570;
  *(_QWORD *)(inited + 48) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1BAA85898(inited);
  a5[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a5[4] = (uint64_t)&off_1E728CA90;
  *a5 = result;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionPuzzleType()
{
  return &type metadata for DebugInspectionPuzzleType;
}

uint64_t sub_1BB6F7F40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1BB6F8138(0, &qword_1EF2CADB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB6F80F4();
  sub_1BB87468C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_1BB874098();
    v11 = 1;
    swift_bridgeObjectRetain();
    sub_1BB874098();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1BB6F80F4()
{
  unint64_t result;

  result = qword_1EF2CADB8;
  if (!qword_1EF2CADB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941A30, &type metadata for DebugInspectionPuzzleType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CADB8);
  }
  return result;
}

void sub_1BB6F8138(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB6F80F4();
    v7 = a3(a1, &type metadata for DebugInspectionPuzzleType.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for DebugInspectionPuzzleType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB6F81E0 + 4 * byte_1BB9418F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB6F8214 + 4 * byte_1BB9418F0[v4]))();
}

uint64_t sub_1BB6F8214(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6F821C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6F8224);
  return result;
}

uint64_t sub_1BB6F8230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6F8238);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB6F823C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6F8244(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionPuzzleType.CodingKeys()
{
  return &type metadata for DebugInspectionPuzzleType.CodingKeys;
}

unint64_t sub_1BB6F8264()
{
  unint64_t result;

  result = qword_1EF2CADC8;
  if (!qword_1EF2CADC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941A08, &type metadata for DebugInspectionPuzzleType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CADC8);
  }
  return result;
}

unint64_t sub_1BB6F82AC()
{
  unint64_t result;

  result = qword_1EF2CADD0;
  if (!qword_1EF2CADD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941978, &type metadata for DebugInspectionPuzzleType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CADD0);
  }
  return result;
}

unint64_t sub_1BB6F82F4()
{
  unint64_t result;

  result = qword_1EF2CADD8;
  if (!qword_1EF2CADD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9419A0, &type metadata for DebugInspectionPuzzleType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CADD8);
  }
  return result;
}

uint64_t *sub_1BB6F8338(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    sub_1BB6F88B0(0, (unint64_t *)&qword_1EF2C2F00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_1BB87225C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

uint64_t sub_1BB6F8428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  sub_1BB6F88B0(0, (unint64_t *)&qword_1EF2C2F00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_1BB87225C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1BB6F84AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  sub_1BB6F88B0(0, (unint64_t *)&qword_1EF2C2F00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1BB87225C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1BB6F856C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_1BB6F8644((uint64_t)a1 + v6);
    sub_1BB6F88B0(0, (unint64_t *)&qword_1EF2C2F00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_1BB87225C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB6F8644(uint64_t a1)
{
  uint64_t v2;

  sub_1BB6F88B0(0, (unint64_t *)&qword_1EF2C2F00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1BB6F8690(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  sub_1BB6F88B0(0, (unint64_t *)&qword_1EF2C2F00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_1BB87225C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1BB6F8744(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BB6F8644((uint64_t)a1 + v6);
    sub_1BB6F88B0(0, (unint64_t *)&qword_1EF2C2F00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
    v10 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_1BB87225C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BB6F8818()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB6F8824(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BB6F88B0(0, qword_1EF2CADE0, MEMORY[0x1E0CD87E8]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

void sub_1BB6F88B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB87225C();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB6F8908()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB6F8914(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1BB6F88B0(0, qword_1EF2CADE0, MEMORY[0x1E0CD87E8]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DebugTaxtAttachementList()
{
  uint64_t result;

  result = qword_1EF2CAE40;
  if (!qword_1EF2CAE40)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB6F89D4()
{
  unint64_t v0;

  sub_1BB6F88B0(319, (unint64_t *)&qword_1EF2C2F00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BB6F8A5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BB6F8A6C@<X0>(ValueMetadata **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  ValueMetadata *v6;
  ValueMetadata *v7;
  void (**Description)(char *, ValueMetadata *);
  uint64_t v9;
  char *v10;
  ValueMetadata *v11;
  ValueMetadata *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  ValueMetadata *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  ValueMetadata *v22;
  ValueMetadata *v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  ValueMetadata *v32;
  ValueMetadata *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  ValueMetadata **v40;
  char *v41;
  void (**v42)(char *, ValueMetadata *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  ValueMetadata **v49;
  ValueMetadata **v50;
  uint64_t (*v51)(__int128 *);
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;

  v48 = a2;
  v3 = type metadata accessor for DebugTaxtAttachementList();
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v4;
  MEMORY[0x1E0C80A78](v3);
  v43 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB6F99C4();
  v7 = v6;
  Description = (void (**)(char *, ValueMetadata *))v6[-1].Description;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB6F98D0(0);
  v12 = v11;
  v42 = (void (**)(char *, ValueMetadata *))v11[-1].Description;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB6F97B8(0);
  v16 = *(_QWORD *)(v15 - 8);
  v46 = v15;
  v47 = v16;
  MEMORY[0x1E0C80A78](v15);
  v41 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  v40 = a1;
  v52 = 0;
  v53 = v18;
  v50 = &v53;
  v51 = sub_1BB6F8E84;
  sub_1BB6F9A40();
  sub_1BB6F9BB8();
  swift_bridgeObjectRetain();
  sub_1BB8724A8();
  swift_bridgeObjectRelease();
  v49 = a1;
  sub_1BB6F9C30(0);
  v20 = v19;
  v21 = sub_1BA4A2870(&qword_1EF2CAEF0, (uint64_t (*)(uint64_t))sub_1BB6F99C4, MEMORY[0x1E0CDD950]);
  sub_1BB6F9CBC();
  v23 = v22;
  v24 = sub_1BA4A2870(&qword_1EF2CAEE8, (uint64_t (*)(uint64_t))sub_1BB6F9CBC, MEMORY[0x1E0CDA158]);
  v53 = v23;
  v54 = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1BB872568();
  Description[1](v10, v7);
  sub_1BB872364();
  v53 = v7;
  v54 = v20;
  v26 = v20;
  v55 = v21;
  v56 = OpaqueTypeConformance2;
  v27 = swift_getOpaqueTypeConformance2();
  v28 = v41;
  sub_1BB872538();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42[1](v14, v12);
  v29 = v43;
  sub_1BB6FA5A8((uint64_t)v40, v43);
  v30 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v31 = swift_allocObject();
  sub_1BB6FA5F0(v29, v31 + v30);
  sub_1BB6F9D90(0);
  v53 = v12;
  v54 = v27;
  swift_getOpaqueTypeConformance2();
  sub_1BB6F9F64();
  sub_1BB6F9E9C(255);
  v33 = v32;
  v34 = sub_1BB6F9F20();
  v35 = sub_1BA7114A0();
  v53 = &type metadata for AttachmentTextView;
  v54 = MEMORY[0x1E0DEA968];
  v55 = v34;
  v56 = v35;
  v36 = swift_getOpaqueTypeConformance2();
  v53 = v33;
  v54 = v26;
  v55 = v36;
  v56 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v37 = v46;
  sub_1BB87255C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v28, v37);
}

uint64_t sub_1BB6F8E84(__int128 *a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  v5 = v2;
  v6 = v3;
  sub_1BA739BF4((uint64_t)&v4);
  sub_1BA739BF4((uint64_t)&v5);
  sub_1BA739BF4((uint64_t)&v6);
  sub_1BB6F9F64();
  return sub_1BB872268();
}

uint64_t sub_1BB6F8F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1BA7114A0();
  swift_bridgeObjectRetain();
  result = sub_1BB8724FC();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1BB6F8F90(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  ValueMetadata *v17;
  uint64_t v18;
  _BYTE v20[16];
  uint64_t v21;
  ValueMetadata *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1BB6F9E9C(0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = a1[2];
  v10 = a1[3];
  v11 = a1[5];
  v12 = *MEMORY[0x1E0DC4A88];
  v22 = (ValueMetadata *)a1[4];
  v23 = v11;
  v24 = v12;
  v26 = v9;
  v27 = v10;
  v13 = sub_1BB6F9F20();
  v14 = sub_1BA7114A0();
  v15 = MEMORY[0x1E0DEA968];
  sub_1BB872544();
  v21 = a2;
  sub_1BB6F9C30(0);
  v22 = &type metadata for AttachmentTextView;
  v23 = v15;
  v24 = v13;
  v25 = v14;
  swift_getOpaqueTypeConformance2();
  sub_1BB6F9CBC();
  v17 = v16;
  v18 = sub_1BA4A2870(&qword_1EF2CAEE8, (uint64_t (*)(uint64_t))sub_1BB6F9CBC, MEMORY[0x1E0CDA158]);
  v22 = v17;
  v23 = v18;
  swift_getOpaqueTypeConformance2();
  sub_1BB872568();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB6F911C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;

  v2 = sub_1BB872430();
  MEMORY[0x1E0C80A78](v2);
  sub_1BB6F9CBC();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB872424();
  v11 = a1;
  sub_1BB6F9D34();
  sub_1BA4A2870(&qword_1EF2CAEE0, (uint64_t (*)(uint64_t))sub_1BB6F9D34, MEMORY[0x1E0CDFA58]);
  sub_1BB872304();
  v8 = sub_1BA4A2870(&qword_1EF2CAEE8, (uint64_t (*)(uint64_t))sub_1BB6F9CBC, MEMORY[0x1E0CDA158]);
  MEMORY[0x1BCCE2D58](v7, v4, v8);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB6F9260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v10[1] = a3;
  v4 = type metadata accessor for DebugTaxtAttachementList();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  sub_1BB872364();
  sub_1BB6FA5A8(a1, (uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  sub_1BB6FA5F0((uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  return sub_1BB8725BC();
}

uint64_t sub_1BB6F935C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1BB87225C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DebugTaxtAttachementList();
  sub_1BB6FA21C((uint64_t)v3);
  sub_1BB872250();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BB6F93FC()
{
  sub_1BB6F95E0(0);
  sub_1BB6F97B8(255);
  sub_1BB6F9D90(255);
  sub_1BB6F98D0(255);
  sub_1BB6F99C4();
  sub_1BB6F9C30(255);
  sub_1BA4A2870(&qword_1EF2CAEF0, (uint64_t (*)(uint64_t))sub_1BB6F99C4, MEMORY[0x1E0CDD950]);
  sub_1BB6F9CBC();
  sub_1BA4A2870(&qword_1EF2CAEE8, (uint64_t (*)(uint64_t))sub_1BB6F9CBC, MEMORY[0x1E0CDA158]);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  sub_1BB6F9F64();
  sub_1BB6F9E9C(255);
  sub_1BB6F9F20();
  sub_1BA7114A0();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return sub_1BB8722EC();
}

uint64_t sub_1BB6F95D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB6F8A6C(*(ValueMetadata ***)(v1 + 16), a1);
}

void sub_1BB6F95E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD v10[6];

  if (!qword_1EF2CAE78)
  {
    sub_1BB6F97B8(255);
    v3 = v2;
    sub_1BB6F9D90(255);
    v5 = v4;
    sub_1BB6F98D0(255);
    sub_1BB6F99C4();
    sub_1BB6F9C30(255);
    sub_1BA4A2870(&qword_1EF2CAEF0, (uint64_t (*)(uint64_t))sub_1BB6F99C4, MEMORY[0x1E0CDD950]);
    sub_1BB6F9CBC();
    sub_1BA4A2870(&qword_1EF2CAEE8, (uint64_t (*)(uint64_t))sub_1BB6F9CBC, MEMORY[0x1E0CDA158]);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v7 = sub_1BB6F9F64();
    sub_1BB6F9E9C(255);
    sub_1BB6F9F20();
    sub_1BA7114A0();
    swift_getOpaqueTypeConformance2();
    v10[0] = v3;
    v10[1] = &type metadata for DebugTextAttachment;
    v10[2] = v5;
    v10[3] = OpaqueTypeConformance2;
    v10[4] = v7;
    v10[5] = swift_getOpaqueTypeConformance2();
    v8 = MEMORY[0x1BCCE5AC4](a1, v10, MEMORY[0x1E0CDEB68], 0);
    if (!v9)
      atomic_store(v8, (unint64_t *)&qword_1EF2CAE78);
  }
}

void sub_1BB6F97B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_1EF2CAE80)
  {
    sub_1BB6F98D0(255);
    v3 = v2;
    sub_1BB6F99C4();
    sub_1BB6F9C30(255);
    v4 = sub_1BA4A2870(&qword_1EF2CAEF0, (uint64_t (*)(uint64_t))sub_1BB6F99C4, MEMORY[0x1E0CDD950]);
    sub_1BB6F9CBC();
    sub_1BA4A2870(&qword_1EF2CAEE8, (uint64_t (*)(uint64_t))sub_1BB6F9CBC, MEMORY[0x1E0CDA158]);
    v7[2] = v4;
    v7[3] = swift_getOpaqueTypeConformance2();
    v7[0] = v3;
    v7[1] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x1BCCE5AC4](a1, v7, MEMORY[0x1E0CDE578], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF2CAE80);
  }
}

void sub_1BB6F98D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_1EF2CAE88)
  {
    sub_1BB6F99C4();
    v3 = v2;
    sub_1BB6F9C30(255);
    v5 = v4;
    v6 = sub_1BA4A2870(&qword_1EF2CAEF0, (uint64_t (*)(uint64_t))sub_1BB6F99C4, MEMORY[0x1E0CDD950]);
    sub_1BB6F9CBC();
    sub_1BA4A2870(&qword_1EF2CAEE8, (uint64_t (*)(uint64_t))sub_1BB6F9CBC, MEMORY[0x1E0CDA158]);
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = v6;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x1BCCE5AC4](a1, v9, MEMORY[0x1E0CDF0E8], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_1EF2CAE88);
  }
}

void sub_1BB6F99C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CAE90)
  {
    sub_1BB6F9A40();
    sub_1BB6F9BB8();
    v0 = sub_1BB8724B4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CAE90);
  }
}

void sub_1BB6F9A40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CAE98)
  {
    sub_1BB6F9AF0();
    sub_1BB6F9B44();
    sub_1BA4A2870(&qword_1EF2CAEB0, (uint64_t (*)(uint64_t))sub_1BB6F9AF0, MEMORY[0x1E0DEAF48]);
    v0 = sub_1BB8725F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CAE98);
  }
}

void sub_1BB6F9AF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CAEA0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CAEA0);
  }
}

void sub_1BB6F9B44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CAEA8)
  {
    v0 = sub_1BB872274();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CAEA8);
  }
}

unint64_t sub_1BB6F9BB8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2CAEB8;
  if (!qword_1EF2CAEB8)
  {
    sub_1BB6F9A40();
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1EF2CAEC0, (uint64_t (*)(uint64_t))sub_1BB6F9B44, MEMORY[0x1E0CD9468]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CDFEE8], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2CAEB8);
  }
  return result;
}

void sub_1BB6F9C30(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_1EF2CAEC8)
  {
    sub_1BB6F9CBC();
    v5[0] = v2;
    v5[1] = sub_1BA4A2870(&qword_1EF2CAEE8, (uint64_t (*)(uint64_t))sub_1BB6F9CBC, MEMORY[0x1E0CDA158]);
    v3 = MEMORY[0x1BCCE5AC4](a1, v5, MEMORY[0x1E0CDBE10], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1EF2CAEC8);
  }
}

void sub_1BB6F9CBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CAED0)
  {
    sub_1BB6F9D34();
    sub_1BA4A2870(&qword_1EF2CAEE0, (uint64_t (*)(uint64_t))sub_1BB6F9D34, MEMORY[0x1E0CDFA58]);
    v0 = sub_1BB872310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CAED0);
  }
}

void sub_1BB6F9D34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CAED8)
  {
    v0 = sub_1BB8725C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CAED8);
  }
}

void sub_1BB6F9D90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_1EF2CAEF8)
  {
    sub_1BB6F9E9C(255);
    v3 = v2;
    sub_1BB6F9C30(255);
    v5 = v4;
    sub_1BB6F9F20();
    sub_1BA7114A0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1BB6F9CBC();
    sub_1BA4A2870(&qword_1EF2CAEE8, (uint64_t (*)(uint64_t))sub_1BB6F9CBC, MEMORY[0x1E0CDA158]);
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = OpaqueTypeConformance2;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x1BCCE5AC4](a1, v9, MEMORY[0x1E0CDF0E8], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_1EF2CAEF8);
  }
}

void sub_1BB6F9E9C(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_1EF2CAF00)
  {
    v2 = sub_1BB6F9F20();
    v3 = sub_1BA7114A0();
    v6[0] = &type metadata for AttachmentTextView;
    v6[1] = MEMORY[0x1E0DEA968];
    v6[2] = v2;
    v6[3] = v3;
    v4 = MEMORY[0x1BCCE5AC4](a1, v6, MEMORY[0x1E0CDE598], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF2CAF00);
  }
}

unint64_t sub_1BB6F9F20()
{
  unint64_t result;

  result = qword_1EF2CAF08;
  if (!qword_1EF2CAF08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941B94, &type metadata for AttachmentTextView);
    atomic_store(result, (unint64_t *)&qword_1EF2CAF08);
  }
  return result;
}

unint64_t sub_1BB6F9F64()
{
  unint64_t result;

  result = qword_1EF2CAF10;
  if (!qword_1EF2CAF10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F49D4, &type metadata for DebugTextAttachment);
    atomic_store(result, (unint64_t *)&qword_1EF2CAF10);
  }
  return result;
}

id sub_1BB6F9FA8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3E50]), sel_init);
  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, v1);
  objc_msgSend(v2, sel_setFont_, v3);

  objc_msgSend(v2, sel_setAutocapitalizationType_, 2);
  objc_msgSend(v2, sel_setSelectable_, 1);
  objc_msgSend(v2, sel_setUserInteractionEnabled_, 1);
  objc_msgSend(v2, sel_setEditable_, 0);
  return v2;
}

void sub_1BB6FA074(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = (void *)sub_1BB872970();
  objc_msgSend(a1, sel_setText_, v4);

  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, v3);
  objc_msgSend(a1, sel_setFont_, v5);

}

uint64_t sub_1BB6FA118()
{
  return sub_1BB8723A0();
}

uint64_t sub_1BB6FA158()
{
  sub_1BB6FAB7C();
  return sub_1BB872400();
}

uint64_t sub_1BB6FA1A8()
{
  sub_1BB6FAB7C();
  return sub_1BB8723AC();
}

void sub_1BB6FA1F8()
{
  sub_1BB6FAB7C();
  sub_1BB8723F4();
  __break(1u);
}

uint64_t sub_1BB6FA21C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v2 = v1;
  v4 = sub_1BB87234C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB6F88B0(0, (unint64_t *)&qword_1EF2C2F00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - v9;
  sub_1BB6FA6D0(v2, (uint64_t)v19 - v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_1BB87225C();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    v13 = sub_1BB873300();
    v14 = sub_1BB872478();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19[1] = a1;
      v18 = v17;
      v20 = v17;
      *(_DWORD *)v16 = 136315138;
      v19[2] = sub_1BA5D2E14(0x417373696D736944, 0xED00006E6F697463, &v20);
      sub_1BB873A8C();
      _os_log_impl(&dword_1BA493000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v18, -1, -1);
      MEMORY[0x1BCCE5C38](v16, -1, -1);
    }

    sub_1BB872340();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1BB6FA460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  sub_1BB6F9AF0();
  sub_1BB6F9B44();
  sub_1BA4A2870(&qword_1EF2CAEB0, (uint64_t (*)(uint64_t))sub_1BB6F9AF0, MEMORY[0x1E0DEAF48]);
  sub_1BA4A2870(&qword_1EF2CAEC0, (uint64_t (*)(uint64_t))sub_1BB6F9B44, MEMORY[0x1E0CD9468]);
  sub_1BB6FA7E0();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BB8725EC();
}

uint64_t sub_1BB6FA57C()
{
  uint64_t *v0;

  return sub_1BB6FA460(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BB6FA588()
{
  uint64_t v0;

  return sub_1BB6F911C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BB6FA5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugTaxtAttachementList();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB6FA5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugTaxtAttachementList();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB6FA634(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugTaxtAttachementList() - 8) + 80);
  return sub_1BB6F8F90(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1BB6FA680()
{
  uint64_t v0;

  return sub_1BB6F911C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BB6FA6A0()
{
  uint64_t v0;

  return sub_1BB6F9260(*(_QWORD *)(v0 + 16), (uint64_t)&unk_1E7336E50, (uint64_t)sub_1BB6FA6CC);
}

uint64_t sub_1BB6FA6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB6F88B0(0, (unint64_t *)&qword_1EF2C2F00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB6FA724()
{
  uint64_t v0;

  return sub_1BB6F9260(*(_QWORD *)(v0 + 16), (uint64_t)&unk_1E7336E78, (uint64_t)sub_1BB6FA6CC);
}

uint64_t sub_1BB6FA750()
{
  type metadata accessor for DebugTaxtAttachementList();
  return sub_1BB6F935C();
}

uint64_t sub_1BB6FA780()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB6FA7A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_OWORD *);
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD v7[2];
  uint64_t v8;
  uint64_t v9;

  v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v8 = v4;
  v9 = v5;
  return v2(v7);
}

unint64_t sub_1BB6FA7E0()
{
  unint64_t result;

  result = qword_1EF2CAF18;
  if (!qword_1EF2CAF18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F499C, &type metadata for DebugTextAttachment);
    atomic_store(result, (unint64_t *)&qword_1EF2CAF18);
  }
  return result;
}

uint64_t sub_1BB6FA824@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB6F8F28(a1);
}

void destroy for AttachmentTextView(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s8NewsFeed18AttachmentTextViewVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for AttachmentTextView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for AttachmentTextView(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for AttachmentTextView()
{
  return &type metadata for AttachmentTextView;
}

uint64_t sub_1BB6FA944()
{
  return sub_1BA4A2870(&qword_1EF2CAF20, (uint64_t (*)(uint64_t))sub_1BB6FA970, MEMORY[0x1E0CD9C70]);
}

void sub_1BB6FA970()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CAF28)
  {
    sub_1BB872280();
    sub_1BB6F95E0(255);
    sub_1BB6F97B8(255);
    sub_1BB6F9D90(255);
    sub_1BB6F98D0(255);
    sub_1BB6F99C4();
    sub_1BB6F9C30(255);
    sub_1BA4A2870(&qword_1EF2CAEF0, (uint64_t (*)(uint64_t))sub_1BB6F99C4, MEMORY[0x1E0CDD950]);
    sub_1BB6F9CBC();
    sub_1BA4A2870(&qword_1EF2CAEE8, (uint64_t (*)(uint64_t))sub_1BB6F9CBC, MEMORY[0x1E0CDA158]);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1BB6F9F64();
    sub_1BB6F9E9C(255);
    sub_1BB6F9F20();
    sub_1BA7114A0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    v0 = sub_1BB8722F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CAF28);
  }
}

uint64_t sub_1BB6FAB70()
{
  return MEMORY[0x1E0CE0788];
}

unint64_t sub_1BB6FAB7C()
{
  unint64_t result;

  result = qword_1EF2CAF30;
  if (!qword_1EF2CAF30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB941B04, &type metadata for AttachmentTextView);
    atomic_store(result, (unint64_t *)&qword_1EF2CAF30);
  }
  return result;
}

void sub_1BB6FABC4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned int v9;
  id v10;
  _QWORD *v11;
  _QWORD v12[3];
  _BYTE v13[16];
  id v14;

  v6 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  if (v9 >> 6)
  {
    if (v9 >> 6 == 1)
    {
      sub_1BB311338(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v13);
      if (!v3)
      {
        v12[1] = 0x3A3A776F6C6C6F66;
        v12[2] = 0xE800000000000000;
        v10 = objc_msgSend(v14, sel_identifier);
        sub_1BB8729A0();

        sub_1BB872AFC(v11);
        swift_bridgeObjectRelease();
        sub_1BB871794();
        sub_1BA6A94C4((uint64_t)v13);
      }
    }
    else
    {
      sub_1BA758A00(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v8);
      if (!v3)
      {
        FormatWebEmbedBinding.SourceItemTip.tipSource(from:)((uint64_t)v8, a2);
        sub_1BA9045E0((uint64_t)v8);
      }
    }
  }
  else
  {
    v13[0] = *v2;
    FormatGroupBinding.SourceItemTip.tipSource(from:)(a1, a2);
  }
}

uint64_t static FormatSourceItemTipBinding.== infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v2 = *a1;
  v3 = *a2;
  v4 = v2 >> 6;
  if (v2 >> 6)
  {
    v5 = v3 & 0xC0;
    v6 = v5 == 64;
    v7 = v5 == 128;
    if (v4 == 1)
      return v6;
    else
      return v7;
  }
  else
  {
    if (v3 <= 0x3F)
    {
      if (*a1)
      {
        if (v2 == 1)
        {
          if (v3 == 1)
            return 1;
        }
        else if (v3 == 2)
        {
          return 1;
        }
      }
      else if (!*a2)
      {
        return 1;
      }
    }
    return 0;
  }
}

unint64_t sub_1BB6FADBC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6FADE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6FADE0()
{
  unint64_t result;

  result = qword_1EF2CAF38;
  if (!qword_1EF2CAF38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipBinding, &type metadata for FormatSourceItemTipBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2CAF38);
  }
  return result;
}

unint64_t sub_1BB6FAE24(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEBBBA0();
  a1[2] = sub_1BAEEBA9C();
  result = sub_1BB6FAE58();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6FAE58()
{
  unint64_t result;

  result = qword_1EF2CAF40;
  if (!qword_1EF2CAF40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipBinding, &type metadata for FormatSourceItemTipBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2CAF40);
  }
  return result;
}

uint64_t sub_1BB6FAE9C@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return FormatSourceItemTipBinding.init(from:)(a1, a2);
}

uint64_t sub_1BB6FAEB0(_QWORD *a1)
{
  return FormatSourceItemTipBinding.encode(to:)(a1);
}

uint64_t sub_1BB6FAEC4(_BYTE *a1, _BYTE *a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v2 = *a1;
  v3 = *a2;
  v4 = v2 >> 6;
  if (!(v2 >> 6))
  {
    if (v3 <= 0x3F)
    {
      if (*a1)
      {
        if (v2 == 1)
        {
          if (v3 == 1)
            return 1;
        }
        else if (v3 == 2)
        {
          return 1;
        }
      }
      else if (!*a2)
      {
        return 1;
      }
    }
    return 0;
  }
  v5 = v3 & 0xC0;
  v6 = v5 == 64;
  v7 = v5 == 128;
  if (v4 == 1)
    return v6;
  else
    return v7;
}

uint64_t storeEnumTagSinglePayload for FormatSourceItemTipBinding(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 194 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 194) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3D)
    return ((uint64_t (*)(void))((char *)&loc_1BB6FAF7C + 4 * byte_1BB941BF5[v4]))();
  *a1 = a2 - 62;
  return ((uint64_t (*)(void))((char *)sub_1BB6FAFB0 + 4 * byte_1BB941BF0[v4]))();
}

uint64_t sub_1BB6FAFB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6FAFB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB6FAFC0);
  return result;
}

uint64_t sub_1BB6FAFD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB6FAFE0);
  *(_BYTE *)result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1BB6FAFE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB6FAFEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1BB6FAFF8(_BYTE *result, char a2)
{
  *result = *result & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for FormatSourceItemTipBinding()
{
  return &type metadata for FormatSourceItemTipBinding;
}

uint64_t dispatch thunk of FeedBackgroundProviding.background.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FeedItemRepresentable.feedContextIdentifier.getter()
{
  return 0;
}

uint64_t dispatch thunk of FeedItemRepresentable.feedItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedItemRepresentable.feedContextIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedConfigType.publishDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedConfigType.groups.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedConfigType.allowedGroups(context:isSubscribed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of FeedConfigType.replacing(groups:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

ValueMetadata *type metadata accessor for DebugFormatVersioningModeSection()
{
  return &type metadata for DebugFormatVersioningModeSection;
}

uint64_t *sub_1BB6FB070(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      v18 = a2[3];
      a1[2] = a2[2];
      a1[3] = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = type metadata accessor for FormatVersioningModeSelection(0);
      v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 2)
      {
        v19 = sub_1BB86EB84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        swift_storeEnumTagMultiPayload();
      }
      else if (v9 > 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        v11 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_1BB86EB84();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_12;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_1BB6FB270(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!(_DWORD)result)
  {
    type metadata accessor for FormatVersioningModeSelection(0);
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 2)
    {
LABEL_6:
      v3 = sub_1BB86EB84();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    }
    if (result <= 1)
    {
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
      goto LABEL_6;
    }
  }
  return result;
}

_QWORD *sub_1BB6FB318(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    v16 = a2[3];
    a1[2] = a2[2];
    a1[3] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for FormatVersioningModeSelection(0);
    v8 = swift_getEnumCaseMultiPayload();
    if (v8 == 2)
    {
      v17 = sub_1BB86EB84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      swift_storeEnumTagMultiPayload();
    }
    else if (v8 > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1BB86EB84();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    goto LABEL_10;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_1BB6FB4F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  if (a1 != a2)
  {
    sub_1BB6FB6F8((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for FormatVersioningModeSelection(0);
      v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 2)
      {
        v14 = sub_1BB86EB84();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
      }
      else if (v8 > 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        v9 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_1BB86EB84();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_11;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1BB6FB6F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatVersioningModeItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatVersioningModeItem()
{
  uint64_t result;

  result = qword_1EF2CAFB8;
  if (!qword_1EF2CAFB8)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *sub_1BB6FB770(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for FormatVersioningModeSelection(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = sub_1BB86EB84();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1BB6FB8F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1BB6FB6F8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for FormatVersioningModeSelection(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v12 = sub_1BB86EB84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload > 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v8 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BB6FBA88()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatVersioningModeSelection(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t static FormatShineAlphaProcessor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) != 1)
    return (v4 & 1) == 0 && v2 == v3;
  v5 = *(_QWORD *)&v3 == 0;
  if (v3 == 0.0)
    v6 = *(unsigned __int8 *)(a2 + 8);
  else
    v6 = 0;
  if (v5)
    v4 = 0;
  if (v2 == 0.0)
    return v6;
  else
    return v4;
}

unint64_t sub_1BB6FBB48(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB6FBB6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB6FBB6C()
{
  unint64_t result;

  result = qword_1EF2CAFF0;
  if (!qword_1EF2CAFF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineAlphaProcessor, &type metadata for FormatShineAlphaProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2CAFF0);
  }
  return result;
}

unint64_t sub_1BB6FBBB0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE78D08();
  a1[2] = sub_1BAEF9100();
  result = sub_1BB6FBBE4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB6FBBE4()
{
  unint64_t result;

  result = qword_1EF2CAFF8;
  if (!qword_1EF2CAFF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineAlphaProcessor, &type metadata for FormatShineAlphaProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2CAFF8);
  }
  return result;
}

uint64_t sub_1BB6FBC28@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatShineAlphaProcessor.init(from:)(a1, a2);
}

uint64_t sub_1BB6FBC3C(_QWORD *a1)
{
  return FormatShineAlphaProcessor.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatShineAlphaProcessor()
{
  return &type metadata for FormatShineAlphaProcessor;
}

uint64_t sub_1BB6FBC60(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_1BA7447E8(v7 > 1, v8 + 1, 1);
      v4 += 6;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB6FBD34(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1BB6FBD78(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BB6FC14C);
}

uint64_t sub_1BB6FBD78(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v59;
  uint64_t v60;
  char v64[8];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[11];
  uint64_t v76;

  sub_1BA561D1C((uint64_t)a1, (uint64_t)v64);
  sub_1BA561D1C((uint64_t)a1, (uint64_t)&v65);
  if ((v69 & 0x8000000000000000) == 0)
  {
    v76 = v65;
    v59 = v66;
    v53 = v69;
    v24 = v67;
    v56 = v68;
    v25 = v70;
    v26 = v71;
    v28 = v72;
    v27 = v73;
    v29 = v74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v30 = v28;
    swift_bridgeObjectRetain();
    v31 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = v24;
    v33 = v53;
    v34 = a7;
    v35 = v59;
    v36 = a3;
    v37 = a4;
    v38 = a5;
    v39 = a6;
    v40 = a8;
LABEL_9:
    v75[0] = v76;
    v75[1] = v35;
    v75[2] = v32;
    v75[3] = v56;
    v75[4] = v33;
    v75[5] = v31;
    v75[6] = v26;
    v75[7] = v30;
    v75[8] = v27;
    v75[9] = v29;
    v46 = a22(v39, v75, v36, v37, v34, v40 & 1, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v46;
  }
  v33 = v69 & 0x7FFFFFFFFFFFFFFFLL;
  v69 &= ~0x8000000000000000;
  v76 = v65;
  v60 = v66;
  v56 = v68;
  v51 = v71;
  v52 = v70;
  v48 = v72;
  v49 = v67;
  v54 = v73;
  v50 = v74;
  v75[0] = a2;
  v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A07F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB70E664();
  sub_1BA4A2870((unint64_t *)&qword_1ED39EE50, v41, MEMORY[0x1E0DB6AD8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v42 = sub_1BB872BBC();
  if (!*(_QWORD *)(v42 + 16))
  {
    swift_bridgeObjectRelease();
    v36 = a3;
    v37 = a4;
    v38 = a5;
    v39 = a6;
    v34 = a7;
    v35 = v60;
    v40 = a8;
    v31 = v52;
    v30 = v48;
    v27 = v54;
LABEL_8:
    v29 = v50;
    v26 = v51;
    v32 = v49;
    goto LABEL_9;
  }
  v27 = v54;
  v35 = v60;
  swift_bridgeObjectRetain();
  v43 = sub_1BA6E35A8(v76, v60);
  if ((v44 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = a3;
    v37 = a4;
    v38 = a5;
    v39 = a6;
    v34 = a7;
    v40 = a8;
    v31 = v52;
    v30 = v48;
    goto LABEL_8;
  }
  v45 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v43);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6A4404(a5, (uint64_t)v75, qword_1ED3B1AB0, (unint64_t *)&qword_1ED3B1AA0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  type metadata accessor for FeedGroupRegion();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v46 = FeedGroupRegion.init(groupIdentifier:pluginModel:feedGroupDebug:)(a3, a4, v45, (uint64_t)v75);
  sub_1BA8C8E10(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA7F4208);
  return v46;
}

uint64_t sub_1BB6FC14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  void (*v31)(__int128 *, _QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, unint64_t, uint64_t);
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  _OWORD *v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  void *v91;
  uint64_t v92;
  _OWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  __int128 v101;
  __int128 v102;
  _UNKNOWN **v103;
  uint64_t v104;
  _BYTE v105[24];

  v91 = a8;
  v90 = a6;
  v94 = a3;
  v95 = a4;
  v93 = (_OWORD *)a2;
  v96 = a1;
  v92 = type metadata accessor for FormatContent.Resolved();
  v87 = *(_QWORD *)(v92 - 8);
  v21 = *(_QWORD *)(v87 + 64);
  MEMORY[0x1E0C80A78](v92);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v23 = v22;
  v97 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v83 - v24;
  sub_1BB439520();
  v27 = v26;
  sub_1BA4A2870(&qword_1EF2CB060, (uint64_t (*)(uint64_t))sub_1BB439520, MEMORY[0x1E0DB3DC0]);
  v28 = sub_1BB8730FC();
  v99 = a5;
  v89 = (uint64_t)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v21;
  v86 = a7;
  if (v28)
  {
    v29 = v28;
    v104 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v28 & ~(v28 >> 63), 0);
    v98 = v27;
    result = sub_1BB8730D8();
    if (v29 < 0)
    {
      __break(1u);
      goto LABEL_33;
    }
    do
    {
      v31 = (void (*)(__int128 *, _QWORD))sub_1BB873198();
      v32 = v97;
      (*(void (**)(char *))(v97 + 16))(v25);
      v31(&v101, 0);
      v33 = sub_1BB86F754();
      v35 = v34;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v23);
      v36 = v104;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v36 + 16) + 1, 1);
        v36 = v104;
      }
      v38 = *(_QWORD *)(v36 + 16);
      v37 = *(_QWORD *)(v36 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1BA7447E8(v37 > 1, v38 + 1, 1);
        v36 = v104;
      }
      *(_QWORD *)(v36 + 16) = v38 + 1;
      v39 = v36 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v33;
      *(_QWORD *)(v39 + 40) = v35;
      sub_1BB873120();
      --v29;
    }
    while (v29);
  }
  else
  {
    v36 = MEMORY[0x1E0DEE9D8];
  }
  v40 = sub_1BA6E43EC(v36);
  swift_bridgeObjectRelease();
  v41 = (uint64_t)v93;
  v42 = v99;
  v98 = sub_1BB6FD280(v96, (uint64_t)v93, v91, a9, a10, a11, v99);
  v43 = v94;
  v44 = v95;
  v45 = sub_1BB6FF9B0(v94, v95, v41, v42, v40, a16, a17, a18, a19, (uint64_t (*)(_QWORD))sub_1BB439520, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1BB70CDB0);
  swift_bridgeObjectRetain();
  sub_1BA6CAB7C(a16, a17);
  swift_bridgeObjectRetain();
  v46 = swift_bridgeObjectRetain();
  v99 = v45;
  v47 = sub_1BB70C790(v46, v43, v44, v45, a16, a17, a18, a19, v40, (uint64_t)v105, (uint64_t)sub_1BB70C090);
  swift_bridgeObjectRelease();
  v48 = v96;
  sub_1BA6CABAC(a16, a17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v49 = *(void (**)(char *, unint64_t, uint64_t))(v48 + 8);
  v91 = *(void **)v48;
  *(_QWORD *)&v101 = v91;
  *((_QWORD *)&v101 + 1) = v49;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v50);
  v84 = *((_QWORD *)&v101 + 1);
  v51 = v101;
  if (qword_1ED3CC218 != -1)
    swift_once();
  v52 = *(_QWORD *)(v48 + *(int *)(v92 + 28));
  v53 = (uint64_t *)(*(_QWORD *)(v41 + 32) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
  swift_beginAccess();
  v54 = *v53;
  *(_QWORD *)&v101 = MEMORY[0x1E0DEE9D8];
  v97 = v47;
  v85 = v51;
  if (v52 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v55 = result;
    if (!result)
      goto LABEL_21;
  }
  else
  {
    v55 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (!v55)
      goto LABEL_21;
  }
  if (v55 < 1)
  {
LABEL_33:
    __break(1u);
    return result;
  }
  if ((v52 & 0xC000000000000001) != 0)
  {
    v56 = 0;
    do
    {
      v57 = MEMORY[0x1BCCE4630](v56++, v52);
      v58 = (uint64_t *)(v57 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
      swift_beginAccess();
      v59 = *v58;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BA6C2884(v59);
    }
    while (v55 != v56);
  }
  else
  {
    v60 = 0;
    do
    {
      ++v60;
      swift_beginAccess();
      v61 = swift_bridgeObjectRetain();
      sub_1BA6C2884(v61);
    }
    while (v55 != v60);
  }
LABEL_21:
  swift_bridgeObjectRelease();
  v62 = v101;
  *(_QWORD *)&v101 = v54;
  sub_1BA6C2884(v62);
  v63 = sub_1BA6C2B2C(v101);
  if (v63)
  {
    v64 = v63;
    v100 = v63;
    swift_bridgeObjectRetain();
    sub_1BB86E7D0();
    swift_bridgeObjectRelease();
    v65 = v101;
    if ((_QWORD)v101)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v65 = FormatPackageInventory.merging(with:)(v52);
      v100 = v64;
      *(_QWORD *)&v101 = v65;
      swift_retain();
      sub_1BB86E7DC();
    }
  }
  else
  {
    v65 = FormatPackageInventory.merging(with:)(v52);
  }
  v83 = a12;
  sub_1BA6A4404(v86, (uint64_t)&v101, qword_1ED3B1AB0, (unint64_t *)&qword_1ED3B1AA0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  v66 = v89;
  sub_1BA4C2DD8(v96, v89, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v67 = (*(unsigned __int8 *)(v87 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  v68 = (v88 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  v69 = swift_allocObject();
  sub_1BA5193C4(v66, v69 + v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v70 = (_OWORD *)(v69 + v68);
  v71 = v93;
  v72 = v93[3];
  v70[2] = v93[2];
  v70[3] = v72;
  v70[4] = v71[4];
  v73 = v71[1];
  *v70 = *v71;
  v70[1] = v73;
  v74 = type metadata accessor for FeedGroupDebug();
  v75 = swift_allocObject();
  v76 = v75;
  if (*((_QWORD *)&v102 + 1))
  {
    sub_1BA4CECCC(&v101, v75 + 16);
    *(_QWORD *)(v76 + 56) = sub_1BA54EDF0;
    *(_QWORD *)(v76 + 64) = v69;
    *((_QWORD *)&v102 + 1) = v74;
    v103 = &protocol witness table for FeedGroupDebug;
    *(_QWORD *)&v101 = v76;
    swift_bridgeObjectRetain();
    sub_1BA6C2898((uint64_t)v71);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA6C2898((uint64_t)v71);
    swift_release();
    sub_1BA65DBBC((uint64_t)&v101, qword_1ED3B1AB0, (unint64_t *)&qword_1ED3B1AA0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
    swift_deallocPartialClassInstance();
    v101 = 0u;
    v102 = 0u;
    v103 = 0;
  }
  v77 = v90 & 1;
  v78 = *(_QWORD *)(v96 + *(int *)(v92 + 40));
  swift_bridgeObjectRetain();
  v79 = swift_bridgeObjectRetain();
  v80 = (char *)sub_1BA6E4124(v79, v78);
  type metadata accessor for FeedGroupRegion();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v81 = v95;
  swift_bridgeObjectRetain();
  v82 = sub_1BB70D1F8(v99, v94, v81, v98, v85, v84, v65, (uint64_t)v91, v49, v97, v77, (uint64_t)&v101, v83, v80, a13, a14, a15);
  swift_bridgeObjectRelease();
  return v82;
}

uint64_t sub_1BB6FC9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), int a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _QWORD *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  void (*v31)(__int128 *, _QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  _OWORD *v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(_BYTE *, unint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  void *v91;
  uint64_t v92;
  _OWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t);
  unint64_t v100;
  __int128 v101;
  __int128 v102;
  _UNKNOWN **v103;
  uint64_t v104;
  _BYTE v105[24];

  v91 = a8;
  v90 = a6;
  v94 = a3;
  v95 = a4;
  v93 = (_OWORD *)a2;
  v96 = a1;
  v92 = type metadata accessor for FormatContent.Resolved();
  v87 = *(_QWORD *)(v92 - 8);
  v21 = *(_QWORD *)(v87 + 64);
  MEMORY[0x1E0C80A78](v92);
  sub_1BA8676E0();
  v23 = v22;
  v97 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA867758();
  v27 = v26;
  sub_1BA4A2870(&qword_1ED3A3998, (uint64_t (*)(uint64_t))sub_1BA867758, MEMORY[0x1E0DB3DC0]);
  v28 = sub_1BB8730FC();
  v99 = a5;
  v89 = (uint64_t)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v21;
  v86 = a7;
  if (v28)
  {
    v29 = v28;
    v104 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v28 & ~(v28 >> 63), 0);
    v98 = v27;
    result = sub_1BB8730D8();
    if (v29 < 0)
    {
      __break(1u);
      goto LABEL_33;
    }
    do
    {
      v31 = (void (*)(__int128 *, _QWORD))sub_1BB873198();
      v32 = v97;
      (*(void (**)(char *))(v97 + 16))(v25);
      v31(&v101, 0);
      v33 = sub_1BB86F754();
      v35 = v34;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v23);
      v36 = v104;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v36 + 16) + 1, 1);
        v36 = v104;
      }
      v38 = *(_QWORD *)(v36 + 16);
      v37 = *(_QWORD *)(v36 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1BA7447E8(v37 > 1, v38 + 1, 1);
        v36 = v104;
      }
      *(_QWORD *)(v36 + 16) = v38 + 1;
      v39 = v36 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v33;
      *(_QWORD *)(v39 + 40) = v35;
      sub_1BB873120();
      --v29;
    }
    while (v29);
  }
  else
  {
    v36 = MEMORY[0x1E0DEE9D8];
  }
  v40 = sub_1BA6E43EC(v36);
  swift_bridgeObjectRelease();
  v41 = (uint64_t)v93;
  v42 = v99;
  v98 = sub_1BB6FE650(v96, (uint64_t)v93, v91, a9, a10, a11, v99);
  v43 = v94;
  v44 = v95;
  v45 = (void (*)(uint64_t))sub_1BB6FF9B0(v94, v95, v41, (uint64_t)v42, v40, a16, a17, a18, a19, (uint64_t (*)(_QWORD))sub_1BA867758, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1BB70D784);
  swift_bridgeObjectRetain();
  sub_1BA6CAB7C(a16, a17);
  swift_bridgeObjectRetain();
  v46 = swift_bridgeObjectRetain();
  v99 = v45;
  v47 = sub_1BB70C790(v46, v43, v44, (uint64_t)v45, a16, a17, a18, a19, v40, (uint64_t)v105, (uint64_t)sub_1BB70C440);
  swift_bridgeObjectRelease();
  v48 = v96;
  sub_1BA6CABAC(a16, a17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v49 = *(_QWORD *)(v48 + 8);
  v91 = *(void **)v48;
  *(_QWORD *)&v101 = v91;
  *((_QWORD *)&v101 + 1) = v49;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v50);
  v84 = *((_QWORD *)&v101 + 1);
  v51 = v101;
  if (qword_1ED3CC218 != -1)
    swift_once();
  v52 = *(_QWORD *)(v48 + *(int *)(v92 + 28));
  v53 = (uint64_t *)(*(_QWORD *)(v41 + 32) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
  swift_beginAccess();
  v54 = *v53;
  *(_QWORD *)&v101 = MEMORY[0x1E0DEE9D8];
  v97 = v47;
  v85 = v51;
  if (v52 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v55 = result;
    if (!result)
      goto LABEL_21;
  }
  else
  {
    v55 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (!v55)
      goto LABEL_21;
  }
  if (v55 < 1)
  {
LABEL_33:
    __break(1u);
    return result;
  }
  if ((v52 & 0xC000000000000001) != 0)
  {
    v56 = 0;
    do
    {
      v57 = MEMORY[0x1BCCE4630](v56++, v52);
      v58 = (uint64_t *)(v57 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
      swift_beginAccess();
      v59 = *v58;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BA6C2884(v59);
    }
    while (v55 != v56);
  }
  else
  {
    v60 = 0;
    do
    {
      ++v60;
      swift_beginAccess();
      v61 = swift_bridgeObjectRetain();
      sub_1BA6C2884(v61);
    }
    while (v55 != v60);
  }
LABEL_21:
  swift_bridgeObjectRelease();
  v62 = v101;
  *(_QWORD *)&v101 = v54;
  sub_1BA6C2884(v62);
  v63 = sub_1BA6C2B2C(v101);
  if (v63)
  {
    v64 = v63;
    v100 = v63;
    swift_bridgeObjectRetain();
    sub_1BB86E7D0();
    swift_bridgeObjectRelease();
    v65 = v101;
    if ((_QWORD)v101)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v65 = FormatPackageInventory.merging(with:)(v52);
      v100 = v64;
      *(_QWORD *)&v101 = v65;
      swift_retain();
      sub_1BB86E7DC();
    }
  }
  else
  {
    v65 = FormatPackageInventory.merging(with:)(v52);
  }
  v83 = a12;
  sub_1BA6A4404(v86, (uint64_t)&v101, qword_1ED3B1AB0, (unint64_t *)&qword_1ED3B1AA0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  v66 = v89;
  sub_1BA4C2DD8(v96, v89, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v67 = (*(unsigned __int8 *)(v87 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  v68 = (v88 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  v69 = swift_allocObject();
  sub_1BA5193C4(v66, v69 + v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v70 = (_OWORD *)(v69 + v68);
  v71 = v93;
  v72 = v93[3];
  v70[2] = v93[2];
  v70[3] = v72;
  v70[4] = v71[4];
  v73 = v71[1];
  *v70 = *v71;
  v70[1] = v73;
  v74 = type metadata accessor for FeedGroupDebug();
  v75 = swift_allocObject();
  v76 = v75;
  if (*((_QWORD *)&v102 + 1))
  {
    sub_1BA4CECCC(&v101, v75 + 16);
    *(_QWORD *)(v76 + 56) = sub_1BA54EDF0;
    *(_QWORD *)(v76 + 64) = v69;
    *((_QWORD *)&v102 + 1) = v74;
    v103 = &protocol witness table for FeedGroupDebug;
    *(_QWORD *)&v101 = v76;
    swift_bridgeObjectRetain();
    sub_1BA6C2898((uint64_t)v71);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA6C2898((uint64_t)v71);
    swift_release();
    sub_1BA65DBBC((uint64_t)&v101, qword_1ED3B1AB0, (unint64_t *)&qword_1ED3B1AA0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
    swift_deallocPartialClassInstance();
    v101 = 0u;
    v102 = 0u;
    v103 = 0;
  }
  v77 = v90 & 1;
  v78 = *(_QWORD *)(v96 + *(int *)(v92 + 40));
  swift_bridgeObjectRetain();
  v79 = swift_bridgeObjectRetain();
  v80 = (void (*)(_BYTE *, unint64_t, uint64_t))sub_1BA6E4124(v79, v78);
  type metadata accessor for FeedGroupRegion();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v81 = v95;
  swift_bridgeObjectRetain();
  v82 = sub_1BB70DB4C((uint64_t)v99, v94, v81, v98, v85, v84, v65, (uint64_t)v91, v49, v97, v77, (uint64_t)&v101, v83, v80, a13, a14, a15);
  swift_bridgeObjectRelease();
  return v82;
}

uint64_t sub_1BB6FD280(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  void (*v69)(_QWORD);
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, void (*)(_QWORD));
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char v81;
  id v82;
  void *v83;
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  id v98;
  char v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (**v113)@<X0>(uint64_t@<X8>);
  uint64_t v114;
  char *v115;
  char *v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  _WORD *v120;
  uint64_t v121;
  void *v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  id v128;
  id v129;
  char v130;
  id v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t (*v136)@<X0>(uint64_t@<X8>);
  void (*v137)(void **, _QWORD);
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int *v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  int *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(_QWORD);
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __int128 v212;
  uint64_t v213;
  char v214;
  void *v215;
  char v216;
  void *v217;
  uint64_t v218;

  v204 = a7;
  v196 = a6;
  v197 = a4;
  v198 = a3;
  v195 = a2;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v172 - v11;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v9);
  MEMORY[0x1E0C80A78](v13);
  v184 = (uint64_t)&v172 - v14;
  v181 = sub_1BB86C67C();
  v180 = *(_QWORD *)(v181 - 8);
  MEMORY[0x1E0C80A78](v181);
  v182 = (char *)&v172 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v9);
  MEMORY[0x1E0C80A78](v16);
  v200 = (uint64_t)&v172 - v17;
  v201 = type metadata accessor for FormatWebEmbed.Resolved();
  v199 = *(_QWORD *)(v201 - 8);
  MEMORY[0x1E0C80A78](v201);
  v183 = (uint64_t *)((char *)&v172 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], v9);
  MEMORY[0x1E0C80A78](v19);
  v192 = (char *)&v172 - v20;
  v179 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v179);
  v191 = (uint64_t)&v172 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v178 = (uint64_t)&v172 - v23;
  MEMORY[0x1E0C80A78](v24);
  v193 = (char *)&v172 - v25;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v176 = v26;
  v175 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v174 = (char *)&v172 - v27;
  v190 = type metadata accessor for FeedHeadline(0);
  v189 = *(_QWORD *)(v190 - 8);
  MEMORY[0x1E0C80A78](v190);
  v177 = (char *)&v172 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB70EFAC();
  MEMORY[0x1E0C80A78](v29);
  v187 = (char *)&v172 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB70F024(0);
  v186 = v31;
  MEMORY[0x1E0C80A78](v31);
  v202 = (char *)&v172 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v9);
  MEMORY[0x1E0C80A78](v33);
  v188 = (uint64_t)&v172 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v173 = (char *)&v172 - v36;
  MEMORY[0x1E0C80A78](v37);
  v194 = (uint64_t)&v172 - v38;
  MEMORY[0x1E0C80A78](v39);
  v203 = (uint64_t)&v172 - v40;
  v41 = v9;
  v42 = a5;
  v43 = a1;
  sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v41);
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)&v172 - v45;
  v205 = (void (*)(_QWORD))sub_1BB871E24();
  v47 = *((_QWORD *)v205 - 1);
  MEMORY[0x1E0C80A78](v205);
  v49 = (char *)&v172 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9D70, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v51 = v50;
  v209 = type metadata accessor for FeedGroupItem();
  v210 = v51;
  v52 = *(_QWORD *)(v209 - 8);
  v53 = *(_QWORD *)(v52 + 72);
  v54 = *(unsigned __int8 *)(v52 + 80);
  v55 = (v54 + 32) & ~v54;
  v206 = v55 + v53;
  v208 = v54 | 7;
  v56 = swift_allocObject();
  v212 = xmmword_1BB87CE70;
  *(_OWORD *)(v56 + 16) = xmmword_1BB87CE70;
  v211 = v55;
  v57 = (_QWORD *)(v56 + v55);
  v207 = type metadata accessor for FormatContent.Resolved();
  v58 = *(int *)(v207 + 36);
  v213 = v43;
  v59 = *(void **)(v43 + v58);
  v185 = v12;
  if (v42)
  {
    swift_bridgeObjectRetain();
    v60 = v42;
  }
  else
  {
    v60 = MEMORY[0x1E0DEE9D8];
  }
  v61 = v196;
  v62 = v47;
  v215 = v59;
  swift_bridgeObjectRetain();
  sub_1BA6D3834(v60);
  v63 = v215;
  if (v42)
    swift_bridgeObjectRetain();
  else
    v61 = MEMORY[0x1E0DEE9D8];
  v64 = v197;
  v215 = *(void **)(v195 + 40);
  swift_bridgeObjectRetain();
  sub_1BA6D3834(v61);
  v65 = v215;
  *v57 = v63;
  v57[1] = v65;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v66 = sub_1BA6CAB68(v56, v64);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v218 = v66;
  v67 = (int *)v207;
  sub_1BA5E01A4(v213 + *(int *)(v207 + 72), (uint64_t)v46, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40]);
  if ((*(unsigned int (**)(char *, uint64_t, void (*)(_QWORD)))(v62 + 48))(v46, 1, v205) == 1)
  {
    sub_1BA6ED6EC((uint64_t)v46, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v68 = v211;
  }
  else
  {
    v69 = v205;
    (*(void (**)(char *, char *, void (*)(_QWORD)))(v62 + 32))(v49, v46, v205);
    v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = v212;
    v71 = (uint64_t *)(v70 + v211);
    v72 = sub_1BB871DAC();
    v74 = v73;
    v75 = type metadata accessor for FeedSponsorshipBannerAd();
    (*(void (**)(char *, char *, void (*)(_QWORD)))(v62 + 16))((char *)v71 + *(int *)(v75 + 20), v49, v69);
    *v71 = v72;
    v71[1] = v74;
    v67 = (int *)v207;
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v70);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v76 = *(void (**)(char *, void (*)(_QWORD)))(v62 + 8);
    v68 = v211;
    v76(v49, v69);
  }
  v77 = *(_QWORD *)(v213 + v67[11]);
  if (v77)
  {
    v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = v212;
    v79 = *(void **)(v213 + v67[15]);
    v80 = v78 + v68;
    v81 = *(_BYTE *)(v213 + v67[16]);
    *(_QWORD *)v80 = v77;
    *(_QWORD *)(v80 + 8) = v79;
    *(_BYTE *)(v80 + 16) = v81;
    swift_storeEnumTagMultiPayload();
    v82 = v79;
    swift_unknownObjectRetain();
    sub_1BA6D1168(v78);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  v83 = v198;
  if (v198)
  {
    v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = v212;
    *(_QWORD *)(v84 + v68) = v83;
    swift_storeEnumTagMultiPayload();
    v85 = v83;
    sub_1BA6D1168(v84);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v86 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSportsEvent);
    swift_unknownObjectRelease();
    if (v86)
    {
      v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = v212;
      v88 = v87 + v211;
      v89 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      v90 = sub_1BB8729A0();
      v92 = v91;

      *(_QWORD *)v88 = v90;
      *(_QWORD *)(v88 + 8) = v92;
      *(_QWORD *)(v88 + 16) = v86;
      *(_QWORD *)(v88 + 24) = 0;
      *(_BYTE *)(v88 + 32) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1BA6D1168(v87);
      swift_setDeallocating();
      v68 = v211;
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
    }

  }
  v93 = *(void **)(v213 + v67[12]);
  if (v93)
  {
    v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = v212;
    v95 = v94 + v68;
    v96 = objc_allocWithZone(MEMORY[0x1E0D58B48]);
    v97 = v93;
    v98 = objc_msgSend(v96, sel_init);
    sub_1BB7001B8(v97, v204, &v215);
    v99 = (char)v215;
    v100 = v97;
    v101 = objc_msgSend(v100, sel_identifier);
    v102 = sub_1BB8729A0();
    v104 = v103;

    LOBYTE(v217) = 0;
    *(_QWORD *)v95 = v100;
    *(_QWORD *)(v95 + 8) = v102;
    *(_QWORD *)(v95 + 16) = v104;
    *(_WORD *)(v95 + 24) = 0;
    *(_QWORD *)(v95 + 32) = 0;
    *(_BYTE *)(v95 + 40) = 0;
    *(_QWORD *)(v95 + 48) = 1;
    *(_QWORD *)(v95 + 56) = v98;
    v67 = (int *)v207;
    *(_BYTE *)(v95 + 64) = 0;
    *(_OWORD *)(v95 + 72) = xmmword_1BB87FC90;
    *(_OWORD *)(v95 + 88) = 0u;
    *(_OWORD *)(v95 + 104) = 0u;
    *(_QWORD *)(v95 + 120) = 0;
    *(_QWORD *)(v95 + 128) = 5;
    *(_BYTE *)(v95 + 136) = v99;
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v94);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();

    v105 = v202;
  }
  else
  {
    v122 = *(void **)(v213 + v67[13]);
    v105 = v202;
    if (v122)
    {
      if ((objc_msgSend(v122, sel_respondsToSelector_, sel_parentIssue) & 1) != 0)
      {
        v123 = objc_msgSend(v122, sel_parentIssue);
        if (v123)
        {
          v124 = v123;
          v125 = swift_allocObject();
          *(_OWORD *)(v125 + 16) = v212;
          v126 = v125 + v211;
          v127 = objc_allocWithZone(MEMORY[0x1E0D58B48]);
          v128 = v124;
          v129 = objc_msgSend(v127, sel_init);
          sub_1BB7001B8(v128, v204, &v215);
          v130 = (char)v215;
          v131 = v128;
          v132 = objc_msgSend(v131, sel_identifier);
          v133 = sub_1BB8729A0();
          v135 = v134;

          LOBYTE(v217) = 0;
          *(_QWORD *)v126 = v131;
          *(_QWORD *)(v126 + 8) = v133;
          *(_QWORD *)(v126 + 16) = v135;
          v105 = v202;
          *(_WORD *)(v126 + 24) = 0;
          *(_QWORD *)(v126 + 32) = 0;
          *(_BYTE *)(v126 + 40) = 0;
          *(_QWORD *)(v126 + 48) = 1;
          *(_QWORD *)(v126 + 56) = v129;
          v67 = (int *)v207;
          *(_BYTE *)(v126 + 64) = 0;
          *(_OWORD *)(v126 + 72) = xmmword_1BB87FC90;
          *(_OWORD *)(v126 + 88) = 0u;
          *(_OWORD *)(v126 + 104) = 0u;
          *(_QWORD *)(v126 + 120) = 0;
          *(_QWORD *)(v126 + 128) = 5;
          *(_BYTE *)(v126 + 136) = v130;
          swift_storeEnumTagMultiPayload();
          sub_1BA6D1168(v125);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();

        }
      }
    }
  }
  v106 = *(void **)(v213 + v67[13]);
  if (v106)
  {
    sub_1BB439520();
    v108 = v107;
    v109 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
    v110 = (uint64_t)v187;
    v109(v187, v204, v107);
    v111 = swift_allocObject();
    *(_QWORD *)(v111 + 16) = v106;
    v109(v105, v110, v108);
    sub_1BB70F148(0);
    v113 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v105[*(int *)(v112 + 44)];
    *v113 = sub_1BB70F20C;
    v113[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v111;
    sub_1BB70F0D0();
    v115 = &v105[*(int *)(v114 + 36)];
    *(_QWORD *)v115 = sub_1BB70AA84;
    *((_QWORD *)v115 + 1) = 0;
    v116 = &v105[*(int *)(v186 + 44)];
    *(_QWORD *)v116 = sub_1BB70AACC;
    *((_QWORD *)v116 + 1) = 0;
    swift_unknownObjectRetain_n();
    sub_1BA4A2E80(v110, (uint64_t (*)(_QWORD))sub_1BB70EFAC);
    v117 = (void *)sub_1BB70ABA8();
    sub_1BA4A2870(&qword_1EF2CB060, (uint64_t (*)(uint64_t))sub_1BB439520, MEMORY[0x1E0DB3DC0]);
    sub_1BB873114();
    v118 = (uint64_t)v105;
    if (v117 == v215)
    {
      v119 = 1;
      v120 = v193;
      v121 = v203;
    }
    else
    {
      v205 = *(void (**)(_QWORD))v116;
      v217 = v117;
      v136 = *v113;
      v137 = (void (*)(void **, _QWORD))sub_1BB873198();
      v138 = v175;
      v139 = v174;
      v140 = v176;
      (*(void (**)(char *))(v175 + 16))(v174);
      v137(&v215, 0);
      v141 = (uint64_t)v173;
      ((void (*)(char *))v136)(v139);
      v67 = (int *)v207;
      (*(void (**)(char *, uint64_t))(v138 + 8))(v139, v140);
      v142 = v194;
      sub_1BA646EFC(v141, v194, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
      v143 = (uint64_t)v177;
      v205(v142);
      sub_1BA6ED6EC(v142, (uint64_t)&unk_1ED3B2DB0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      v121 = v203;
      sub_1BA5193C4(v143, v203, type metadata accessor for FeedHeadline);
      v119 = 0;
      v120 = v193;
    }
    v144 = v189;
    v145 = v190;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v189 + 56))(v121, v119, 1, v190);
    sub_1BA4A2E80(v118, (uint64_t (*)(_QWORD))sub_1BB70F024);
    v146 = v121;
    v147 = v188;
    sub_1BA5E01A4(v146, v188, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v147, 1, v145) == 1)
    {
      sub_1BA6ED6EC(v147, (uint64_t)&unk_1ED3B2DB0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      v148 = (int *)v179;
      v149 = (char *)v120 + *(int *)(v179 + 24);
      v150 = type metadata accessor for SharedItem();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 56))(v149, 1, 1, v150);
      *v120 = 258;
      *((_BYTE *)v120 + v148[7]) = 1;
      *((_BYTE *)v120 + v148[8]) = 0;
      *((_BYTE *)v120 + v148[9]) = 0;
      *((_BYTE *)v120 + v148[10]) = 0;
    }
    else
    {
      v151 = v178;
      sub_1BA4C2DD8(v147 + *(int *)(v145 + 40), v178, type metadata accessor for FeedHeadline.State);
      sub_1BA4A2E80(v147, type metadata accessor for FeedHeadline);
      sub_1BA5193C4(v151, (uint64_t)v120, type metadata accessor for FeedHeadline.State);
    }
    v152 = swift_allocObject();
    *(_OWORD *)(v152 + 16) = v212;
    v153 = v152 + v211;
    v154 = sub_1BB871B24();
    v155 = (uint64_t)v192;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 56))(v192, 1, 1, v154);
    v156 = v191;
    sub_1BA4C2DD8((uint64_t)v120, v191, type metadata accessor for FeedHeadline.State);
    v217 = 0;
    v215 = 0;
    v216 = 1;
    v214 = 0;
    swift_unknownObjectRetain();
    FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v106, 0, &v214, v155, v156, &v217, v153, (uint64_t)&v215);
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v152);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_unknownObjectRelease();
    sub_1BA4A2E80((uint64_t)v120, type metadata accessor for FeedHeadline.State);
    sub_1BA6ED6EC(v203, (uint64_t)&unk_1ED3B2DB0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  }
  v157 = v200;
  sub_1BA5E01A4(v213 + v67[14], v200, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
  v158 = (int *)v201;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v199 + 48))(v157, 1, v201) == 1)
  {
    sub_1BA6ED6EC(v157, (uint64_t)&qword_1ED3D54C0, (uint64_t)type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  }
  else
  {
    v159 = v183;
    sub_1BA5193C4(v157, (uint64_t)v183, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
    v160 = swift_allocObject();
    *(_OWORD *)(v160 + 16) = v212;
    *(_QWORD *)&v212 = v160 + v211;
    v161 = v159[1];
    v213 = *v159;
    v211 = v161;
    v162 = (char *)v159 + v158[5];
    v163 = (int *)type metadata accessor for FormatWebEmbed();
    v164 = (uint64_t)v182;
    (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v182, &v162[v163[5]], v181);
    v165 = v184;
    sub_1BA5E01A4((uint64_t)&v162[v163[6]], v184, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v166 = *(uint64_t *)((char *)v159 + v158[6]);
    v167 = *(uint64_t *)((char *)v159 + v158[7]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v168 = v194;
    sub_1BA90EC18((uint64_t)v159, v194);
    v169 = (uint64_t)v159 + v158[8];
    v170 = (uint64_t)v185;
    sub_1BA5E01A4(v169, (uint64_t)v185, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v213, v211, v164, v165, v166, v167, v168, v170, v212, v162[v163[10]] & 1);
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v160);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1BA4A2E80((uint64_t)v159, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
  }
  return v218;
}

uint64_t sub_1BB6FE650(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t))
{
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char v81;
  id v82;
  void *v83;
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  id v98;
  char v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, void (*)(uint64_t), uint64_t);
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t (**v113)@<X0>(uint64_t@<X8>);
  uint64_t v114;
  char *v115;
  char *v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  _WORD *v120;
  uint64_t v121;
  void *v122;
  id v123;
  void *v124;
  uint64_t v125;
  id v126;
  id v127;
  id v128;
  char v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)@<X0>(uint64_t@<X8>);
  void (*v135)(void **, _QWORD);
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int *v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  int *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void (*v202)(uint64_t);
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  __int128 v209;
  uint64_t v210;
  char v211;
  void *v212;
  char v213;
  void *v214;
  uint64_t v215;

  v202 = a7;
  v196 = a6;
  v197 = a4;
  v198 = a3;
  v195 = a2;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v169 - v11;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v9);
  MEMORY[0x1E0C80A78](v13);
  v182 = (uint64_t)&v169 - v14;
  v180 = sub_1BB86C67C();
  v178 = *(_QWORD *)(v180 - 8);
  MEMORY[0x1E0C80A78](v180);
  v181 = (char *)&v169 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v9);
  MEMORY[0x1E0C80A78](v16);
  v200 = (uint64_t)&v169 - v17;
  v201 = type metadata accessor for FormatWebEmbed.Resolved();
  v199 = *(_QWORD *)(v201 - 8);
  MEMORY[0x1E0C80A78](v201);
  v179 = (uint64_t *)((char *)&v169 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], v9);
  MEMORY[0x1E0C80A78](v19);
  v192 = (char *)&v169 - v20;
  v176 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v176);
  v191 = (uint64_t)&v169 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v169 - v23;
  MEMORY[0x1E0C80A78](v25);
  v193 = (char *)&v169 - v26;
  sub_1BA8676E0();
  v173 = v27;
  v172 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v171 = (char *)&v169 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = type metadata accessor for FeedHeadline(0);
  v188 = *(_QWORD *)(v189 - 8);
  MEMORY[0x1E0C80A78](v189);
  v174 = (char *)&v169 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB70E824();
  MEMORY[0x1E0C80A78](v30);
  v185 = (char *)&v169 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB70E89C(0);
  v184 = v32;
  MEMORY[0x1E0C80A78](v32);
  v186 = (char *)&v169 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v9);
  MEMORY[0x1E0C80A78](v34);
  v187 = (uint64_t)&v169 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v170 = (char *)&v169 - v37;
  MEMORY[0x1E0C80A78](v38);
  v194 = (uint64_t)&v169 - v39;
  MEMORY[0x1E0C80A78](v40);
  v190 = (uint64_t)&v169 - v41;
  sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], v9);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v169 - v43;
  v45 = sub_1BB871E24();
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v177 = (char *)&v169 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9D70, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v49 = v48;
  v204 = type metadata accessor for FeedGroupItem();
  v50 = *(_QWORD *)(v204 - 8);
  v51 = *(_QWORD *)(v50 + 72);
  v52 = *(unsigned __int8 *)(v50 + 80);
  v53 = (v52 + 32) & ~v52;
  v210 = v49;
  v205 = v53 + v51;
  v206 = v52 | 7;
  v54 = swift_allocObject();
  v209 = xmmword_1BB87CE70;
  *(_OWORD *)(v54 + 16) = xmmword_1BB87CE70;
  v203 = v53;
  v55 = (_QWORD *)(v54 + v53);
  v207 = type metadata accessor for FormatContent.Resolved();
  v208 = a1;
  v56 = *(void **)(a1 + *(int *)(v207 + 36));
  v183 = v12;
  if (a5)
  {
    swift_bridgeObjectRetain();
    v57 = a5;
  }
  else
  {
    v57 = MEMORY[0x1E0DEE9D8];
  }
  v58 = v196;
  v212 = v56;
  swift_bridgeObjectRetain();
  sub_1BA6D3834(v57);
  v59 = v212;
  if (a5)
    swift_bridgeObjectRetain();
  else
    v58 = MEMORY[0x1E0DEE9D8];
  v60 = v197;
  v212 = *(void **)(v195 + 40);
  swift_bridgeObjectRetain();
  sub_1BA6D3834(v58);
  v61 = v212;
  *v55 = v59;
  v55[1] = v61;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v62 = sub_1BA6CAB68(v54, v60);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v215 = v62;
  v63 = (int *)v207;
  sub_1BA5E01A4(v208 + *(int *)(v207 + 72), (uint64_t)v44, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40]);
  v64 = v45;
  v65 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45);
  v175 = v24;
  if (v65 == 1)
  {
    sub_1BA6ED6EC((uint64_t)v44, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v66 = v203;
  }
  else
  {
    v67 = v177;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v177, v44, v64);
    v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = v209;
    v69 = v203;
    v70 = (uint64_t *)(v68 + v203);
    v71 = v64;
    v72 = sub_1BB871DAC();
    v74 = v73;
    v75 = type metadata accessor for FeedSponsorshipBannerAd();
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))((char *)v70 + *(int *)(v75 + 20), v67, v71);
    *v70 = v72;
    v70[1] = v74;
    v63 = (int *)v207;
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v68);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v67, v71);
    v66 = v69;
  }
  v76 = v208;
  v77 = *(_QWORD *)(v208 + v63[11]);
  if (v77)
  {
    v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = v209;
    v79 = *(void **)(v76 + v63[15]);
    v80 = v78 + v66;
    v81 = *(_BYTE *)(v76 + v63[16]);
    *(_QWORD *)v80 = v77;
    *(_QWORD *)(v80 + 8) = v79;
    *(_BYTE *)(v80 + 16) = v81;
    swift_storeEnumTagMultiPayload();
    v82 = v79;
    swift_unknownObjectRetain();
    sub_1BA6D1168(v78);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  v83 = v198;
  if (v198)
  {
    v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = v209;
    *(_QWORD *)(v84 + v66) = v83;
    swift_storeEnumTagMultiPayload();
    v85 = v83;
    sub_1BA6D1168(v84);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v86 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSportsEvent);
    swift_unknownObjectRelease();
    if (v86)
    {
      v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = v209;
      v88 = v87 + v66;
      v89 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      v90 = sub_1BB8729A0();
      v92 = v91;

      *(_QWORD *)v88 = v90;
      *(_QWORD *)(v88 + 8) = v92;
      v63 = (int *)v207;
      v76 = v208;
      *(_QWORD *)(v88 + 16) = v86;
      *(_QWORD *)(v88 + 24) = 0;
      *(_BYTE *)(v88 + 32) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1BA6D1168(v87);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
    }

  }
  v93 = *(void **)(v76 + v63[12]);
  if (v93)
  {
    v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = v209;
    v95 = v94 + v66;
    v96 = objc_allocWithZone(MEMORY[0x1E0D58B48]);
    v97 = v93;
    v98 = objc_msgSend(v96, sel_init);
    sub_1BB7004E4(v97, (uint64_t)v202, &v212);
    v99 = (char)v212;
    v100 = v97;
    v101 = objc_msgSend(v100, sel_identifier);
    v102 = sub_1BB8729A0();
    v104 = v103;

    LOBYTE(v214) = 0;
    *(_QWORD *)v95 = v100;
    *(_QWORD *)(v95 + 8) = v102;
    *(_QWORD *)(v95 + 16) = v104;
    *(_WORD *)(v95 + 24) = 0;
    *(_QWORD *)(v95 + 32) = 0;
    *(_BYTE *)(v95 + 40) = 0;
    *(_QWORD *)(v95 + 48) = 1;
    *(_QWORD *)(v95 + 56) = v98;
    v63 = (int *)v207;
    v76 = v208;
    *(_BYTE *)(v95 + 64) = 0;
    *(_OWORD *)(v95 + 72) = xmmword_1BB87FC90;
    *(_OWORD *)(v95 + 88) = 0u;
    *(_OWORD *)(v95 + 104) = 0u;
    *(_QWORD *)(v95 + 120) = 0;
    *(_QWORD *)(v95 + 128) = 5;
    *(_BYTE *)(v95 + 136) = v99;
LABEL_18:
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v94);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();

    goto LABEL_19;
  }
  v122 = *(void **)(v76 + v63[13]);
  if (v122)
  {
    if ((objc_msgSend(v122, sel_respondsToSelector_, sel_parentIssue) & 1) != 0)
    {
      v123 = objc_msgSend(v122, sel_parentIssue);
      if (v123)
      {
        v124 = v123;
        v94 = swift_allocObject();
        *(_OWORD *)(v94 + 16) = v209;
        v125 = v94 + v66;
        v126 = objc_allocWithZone(MEMORY[0x1E0D58B48]);
        v127 = v124;
        v128 = objc_msgSend(v126, sel_init);
        sub_1BB7004E4(v127, (uint64_t)v202, &v212);
        v129 = (char)v212;
        v100 = v127;
        v130 = objc_msgSend(v100, sel_identifier);
        v131 = sub_1BB8729A0();
        v133 = v132;

        LOBYTE(v214) = 0;
        *(_QWORD *)v125 = v100;
        *(_QWORD *)(v125 + 8) = v131;
        *(_QWORD *)(v125 + 16) = v133;
        *(_WORD *)(v125 + 24) = 0;
        *(_QWORD *)(v125 + 32) = 0;
        *(_BYTE *)(v125 + 40) = 0;
        *(_QWORD *)(v125 + 48) = 1;
        *(_QWORD *)(v125 + 56) = v128;
        *(_BYTE *)(v125 + 64) = 0;
        *(_OWORD *)(v125 + 72) = xmmword_1BB87FC90;
        *(_OWORD *)(v125 + 88) = 0u;
        *(_OWORD *)(v125 + 104) = 0u;
        *(_QWORD *)(v125 + 120) = 0;
        *(_QWORD *)(v125 + 128) = 5;
        *(_BYTE *)(v125 + 136) = v129;
        v63 = (int *)v207;
        v76 = v208;
        goto LABEL_18;
      }
    }
  }
LABEL_19:
  v105 = *(void **)(v76 + v63[13]);
  if (v105)
  {
    sub_1BA867758();
    v107 = v106;
    v108 = *(void (**)(char *, void (*)(uint64_t), uint64_t))(*(_QWORD *)(v106 - 8) + 16);
    v109 = (uint64_t)v185;
    v108(v185, v202, v106);
    v110 = swift_allocObject();
    *(_QWORD *)(v110 + 16) = v105;
    v111 = v186;
    v108(v186, (void (*)(uint64_t))v109, v107);
    sub_1BB70E930(0);
    v113 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v111[*(int *)(v112 + 44)];
    *v113 = sub_1BB70E970;
    v113[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v110;
    sub_1BB70E8B8();
    v115 = &v111[*(int *)(v114 + 36)];
    *(_QWORD *)v115 = sub_1BB70AA84;
    *((_QWORD *)v115 + 1) = 0;
    v116 = &v111[*(int *)(v184 + 44)];
    *(_QWORD *)v116 = sub_1BB70AACC;
    *((_QWORD *)v116 + 1) = 0;
    swift_unknownObjectRetain_n();
    sub_1BA4A2E80(v109, (uint64_t (*)(_QWORD))sub_1BB70E824);
    v117 = (void *)sub_1BB70B1C4();
    sub_1BA4A2870(&qword_1ED3A3998, (uint64_t (*)(uint64_t))sub_1BA867758, MEMORY[0x1E0DB3DC0]);
    sub_1BB873114();
    if (v117 == v212)
    {
      v118 = 1;
      v119 = (uint64_t)v111;
      v120 = v193;
      v121 = v190;
    }
    else
    {
      v202 = *(void (**)(uint64_t))v116;
      v214 = v117;
      v134 = *v113;
      v135 = (void (*)(void **, _QWORD))sub_1BB873198();
      v136 = v172;
      v137 = v171;
      v138 = v173;
      (*(void (**)(char *))(v172 + 16))(v171);
      v135(&v212, 0);
      v139 = (uint64_t)v170;
      ((void (*)(char *))v134)(v137);
      (*(void (**)(char *, uint64_t))(v136 + 8))(v137, v138);
      v140 = v194;
      sub_1BA646EFC(v139, v194, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
      v119 = (uint64_t)v111;
      v141 = (uint64_t)v174;
      v202(v140);
      sub_1BA6ED6EC(v140, (uint64_t)&unk_1ED3B2DB0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      v121 = v190;
      sub_1BA5193C4(v141, v190, type metadata accessor for FeedHeadline);
      v118 = 0;
      v120 = v193;
    }
    v142 = v189;
    v143 = v188;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v188 + 56))(v121, v118, 1, v189);
    sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))sub_1BB70E89C);
    v144 = v187;
    sub_1BA5E01A4(v121, v187, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(v144, 1, v142) == 1)
    {
      sub_1BA6ED6EC(v144, (uint64_t)&unk_1ED3B2DB0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      v145 = (int *)v176;
      v146 = (char *)v120 + *(int *)(v176 + 24);
      v147 = type metadata accessor for SharedItem();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 56))(v146, 1, 1, v147);
      *v120 = 258;
      *((_BYTE *)v120 + v145[7]) = 1;
      *((_BYTE *)v120 + v145[8]) = 0;
      *((_BYTE *)v120 + v145[9]) = 0;
      *((_BYTE *)v120 + v145[10]) = 0;
    }
    else
    {
      v148 = (uint64_t)v175;
      sub_1BA4C2DD8(v144 + *(int *)(v142 + 40), (uint64_t)v175, type metadata accessor for FeedHeadline.State);
      sub_1BA4A2E80(v144, type metadata accessor for FeedHeadline);
      sub_1BA5193C4(v148, (uint64_t)v120, type metadata accessor for FeedHeadline.State);
    }
    v149 = swift_allocObject();
    *(_OWORD *)(v149 + 16) = v209;
    v150 = v149 + v203;
    v151 = sub_1BB871B24();
    v152 = (uint64_t)v192;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 56))(v192, 1, 1, v151);
    v153 = v191;
    sub_1BA4C2DD8((uint64_t)v120, v191, type metadata accessor for FeedHeadline.State);
    v214 = 0;
    v212 = 0;
    v213 = 1;
    v211 = 0;
    swift_unknownObjectRetain();
    FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v105, 0, &v211, v152, v153, &v214, v150, (uint64_t)&v212);
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v149);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_unknownObjectRelease();
    sub_1BA4A2E80((uint64_t)v120, type metadata accessor for FeedHeadline.State);
    sub_1BA6ED6EC(v121, (uint64_t)&unk_1ED3B2DB0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v63 = (int *)v207;
    v76 = v208;
  }
  v154 = v200;
  sub_1BA5E01A4(v76 + v63[14], v200, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
  v155 = (int *)v201;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v199 + 48))(v154, 1, v201) == 1)
  {
    sub_1BA6ED6EC(v154, (uint64_t)&qword_1ED3D54C0, (uint64_t)type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  }
  else
  {
    v156 = v179;
    sub_1BA5193C4(v154, (uint64_t)v179, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
    v157 = swift_allocObject();
    *(_OWORD *)(v157 + 16) = v209;
    *(_QWORD *)&v209 = v157 + v203;
    v158 = v156[1];
    v210 = *v156;
    v208 = v158;
    v159 = (char *)v156 + v155[5];
    v160 = (int *)type metadata accessor for FormatWebEmbed();
    v161 = (uint64_t)v181;
    (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v181, &v159[v160[5]], v180);
    v162 = v182;
    sub_1BA5E01A4((uint64_t)&v159[v160[6]], v182, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v163 = *(uint64_t *)((char *)v156 + v155[6]);
    v164 = *(uint64_t *)((char *)v156 + v155[7]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v165 = v194;
    sub_1BA90EC18((uint64_t)v156, v194);
    v166 = (uint64_t)v156 + v155[8];
    v167 = (uint64_t)v183;
    sub_1BA5E01A4(v166, (uint64_t)v183, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v210, v208, v161, v162, v163, v164, v165, v167, v209, v159[v160[10]] & 1);
    swift_storeEnumTagMultiPayload();
    sub_1BA6D1168(v157);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1BA4A2E80((uint64_t)v156, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
  }
  return v215;
}

uint64_t sub_1BB6FF9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(_QWORD), uint64_t (*a11)(char *, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[64];
  __int128 v55;
  uint64_t v56;

  v47 = a7;
  v48 = a8;
  v46 = a5;
  v52 = a4;
  v45 = a2;
  v53 = a1;
  v13 = a10(0);
  v50 = *(_QWORD *)(v13 - 8);
  v51 = v13;
  MEMORY[0x1E0C80A78](v13);
  v49 = (char *)&v43 - v14;
  v15 = *(_QWORD *)(a3 + 56);
  sub_1BA6C2898(a3);
  sub_1BA6C2898(a3);
  v16 = swift_bridgeObjectRetain();
  v17 = sub_1BB4A4184(v16);
  swift_bridgeObjectRelease();
  *(_QWORD *)v54 = v15;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v17);
  sub_1BB70E724(a3);
  v18 = *(_QWORD *)v54;
  v56 = MEMORY[0x1E0DEE9D8];
  v19 = *(_QWORD *)(*(_QWORD *)v54 + 16);
  v44 = a11;
  if (v19)
  {
    swift_bridgeObjectRetain();
    v20 = (__int128 *)(v18 + 56);
    do
    {
      v21 = *((_QWORD *)v20 + 4);
      *(_QWORD *)v54 = *((_QWORD *)v20 - 3);
      *(_OWORD *)&v54[8] = *(v20 - 1);
      v22 = *v20;
      v23 = v20[1];
      v20 += 4;
      *(_OWORD *)&v54[24] = v22;
      *(_OWORD *)&v54[40] = v23;
      *(_QWORD *)&v54[56] = v21;
      v24 = FormatContentSlot.Resolved.feedItemIdentifiers.getter();
      sub_1BA67FB48(v24);
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease_n();
    v25 = v56;
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x1E0DEE9D8];
  }
  v26 = sub_1BA6E43EC(v25);
  swift_bridgeObjectRelease();
  sub_1BB70E724(a3);
  v27 = a6;
  v28 = a6;
  v29 = v47;
  v30 = v48;
  sub_1BA6CAB7C(v27, v47);
  v31 = v46;
  swift_bridgeObjectRetain();
  v32 = v45;
  swift_bridgeObjectRetain();
  v33 = sub_1BB70BB34(v26, v28, v29, v30, a9, v31, v53, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6CABAC(v28, v29);
  swift_bridgeObjectRelease();
  v34 = sub_1BA6E43EC(v33);
  swift_bridgeObjectRelease();
  v35 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)&v54[32] = *(_OWORD *)(a3 + 32);
  *(_OWORD *)&v54[48] = v35;
  v55 = *(_OWORD *)(a3 + 64);
  v36 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v54 = *(_OWORD *)a3;
  *(_OWORD *)&v54[16] = v36;
  v37 = FormatContentSubgroup.Resolved.placeholderIdentifiers.getter();
  swift_bridgeObjectRetain();
  v38 = sub_1BB70BE3C(v37, v53, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v39 = sub_1BA6E43EC(v38);
  swift_bridgeObjectRelease();
  v40 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v52, v51);
  v41 = v44(v40, v34, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v41;
}

void sub_1BB6FFCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  char *v15;
  _QWORD v16[6];

  v16[3] = a2;
  v16[1] = a11;
  v16[2] = a4;
  v16[5] = a10;
  v12 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v12);
  sub_1BA4C2DD8(a1, (uint64_t)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  v15 = (char *)sub_1BB6FFD70 + 4 * byte_1BB941EC0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB6FFD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  swift_unknownObjectRelease();
  if (!v5)
    goto LABEL_8;
  FormatContentSlotItemObject.Resolved.identifier.getter();
  if (v8 == v2 && v7 == v5)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1BA761FE4(v4, v3, v0);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3C0540, (uint64_t)&type metadata for SlotReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v11 + 32) = v4;
    *(_QWORD *)(v11 + 40) = v3;
    v12 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v11 + 48) = MEMORY[0x1E0DEE9E8];
    *(_QWORD *)(v11 + 56) = v12;
    *(_QWORD *)(v11 + 64) = 0;
    *(_QWORD *)(v11 + 72) = 0;
    swift_bridgeObjectRetain();
    return v11;
  }
LABEL_8:
  v13 = MEMORY[0x1E0DED1E8];
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3C0540, (uint64_t)&type metadata for SlotReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
  v14 = MEMORY[0x1E0DEA968];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))v13);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v6 - 104);
  *(_QWORD *)(v15 + 40) = v1;
  swift_bridgeObjectRetain();
  FormatContentSlotItemObject.Resolved.identifier.getter();
  *(_QWORD *)(v15 + 48) = v16;
  *(_QWORD *)(v15 + 56) = v17;
  *(_QWORD *)(v6 - 72) = v15;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v14, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, v14, MEMORY[0x1E0DEAF20]);
  v18 = sub_1BB872904();
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(*(_QWORD *)(v6 - 88) + 40);
  FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(_QWORD *)(v21 + 16) && (v24 = sub_1BA6E35A8(v22, v23), (v25 & 1) != 0))
  {
    v26 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v24);
    swift_bridgeObjectRetain();
  }
  else
  {
    v26 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(*(_QWORD *)(v6 - 88) + 48);
  FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(_QWORD *)(v27 + 16) && (v30 = sub_1BA6E35A8(v28, v29), (v31 & 1) != 0))
  {
    v32 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v30);
    swift_bridgeObjectRetain();
  }
  else
  {
    v32 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v33 = *(_QWORD *)(*(_QWORD *)(v6 - 88) + 56);
  FormatContentSlotItemObject.Resolved.identifier.getter();
  if (*(_QWORD *)(v33 + 16) && (v36 = sub_1BA6E35A8(v34, v35), (v37 & 1) != 0))
  {
    v38 = (uint64_t *)(*(_QWORD *)(v33 + 56) + 16 * v36);
    v39 = *v38;
    v40 = v38[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v39 = 0;
    v40 = 0;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 32) = v18;
  *(_QWORD *)(v11 + 40) = v20;
  *(_QWORD *)(v11 + 48) = v26;
  *(_QWORD *)(v11 + 56) = v32;
  *(_QWORD *)(v11 + 64) = v39;
  *(_QWORD *)(v11 + 72) = v40;
  return v11;
}

void sub_1BB7000BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *v0;
  v4 = v0[1];
  v5 = MEMORY[0x1E0DEA968];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(v2 - 104);
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v3;
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)(v2 - 72) = v6;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, v5, MEMORY[0x1E0DEAF20]);
  swift_bridgeObjectRetain();
  v7 = sub_1BB872904();
  v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 - 120))(*(_QWORD *)(v2 - 112), v7, v9);
  swift_bridgeObjectRelease_n();
  JUMPOUT(0x1BB700094);
}

uint64_t sub_1BB7001B8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)@<X0>(uint64_t@<X8>);
  uint64_t v22;
  char *v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  char v28;
  void (*v29)(_OWORD *__return_ptr, _OWORD *);
  uint64_t (*v30)@<X0>(uint64_t@<X8>);
  void (*v31)(_OWORD *, _QWORD);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_OWORD *__return_ptr, _OWORD *);
  uint64_t v35;
  _BYTE *v36;
  _OWORD v37[7];
  _OWORD v38[2];
  _BYTE v39[144];
  _OWORD v40[7];
  _BYTE v41[25];

  v36 = a3;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v35 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - v7;
  sub_1BB70EFAC();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB70F214(0);
  v13 = v12;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB439520();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v18(v11, a2, v16);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  v18(v15, (uint64_t)v11, v17);
  sub_1BB70F330(0);
  v21 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v15[*(int *)(v20 + 44)];
  *v21 = sub_1BB70F34C;
  v21[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v19;
  sub_1BB70F2B8();
  v23 = &v15[*(int *)(v22 + 36)];
  *(_QWORD *)v23 = sub_1BB70B7A8;
  *((_QWORD *)v23 + 1) = 0;
  v24 = &v15[*(int *)(v13 + 44)];
  *(_QWORD *)v24 = sub_1BB70B7AC;
  *((_QWORD *)v24 + 1) = 0;
  v25 = a1;
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB70EFAC);
  v26 = sub_1BB70AEE4();
  sub_1BA4A2870(&qword_1EF2CB060, (uint64_t (*)(uint64_t))sub_1BB439520, MEMORY[0x1E0DB3DC0]);
  sub_1BB873114();
  if (v26 == *(_QWORD *)&v40[0])
  {
    result = sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BB70F214);
    v28 = 0;
  }
  else
  {
    v29 = *(void (**)(_OWORD *__return_ptr, _OWORD *))v24;
    v33 = *((_QWORD *)v24 + 1);
    v34 = v29;
    *(_QWORD *)&v37[0] = v26;
    v30 = *v21;
    v31 = (void (*)(_OWORD *, _QWORD))sub_1BB873198();
    v32 = v35;
    (*(void (**)(char *))(v6 + 16))(v8);
    v31(v40, 0);
    ((void (*)(_OWORD *__return_ptr, char *))v30)(v40, v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v32);
    sub_1BA6A09F0((uint64_t)v40, (uint64_t)v39, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
    sub_1BA6A09F0((uint64_t)v39, (uint64_t)v40, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
    v34(v37, v40);
    sub_1BA90EECC((uint64_t)v39);
    v40[6] = v37[6];
    *(_OWORD *)v41 = v38[0];
    *(_OWORD *)&v41[9] = *(_OWORD *)((char *)v38 + 9);
    v40[2] = v37[2];
    v40[3] = v37[3];
    v40[4] = v37[4];
    v40[5] = v37[5];
    v40[0] = v37[0];
    v40[1] = v37[1];
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BB70F214);
    result = sub_1BA8D1FE4((uint64_t)v40);
    v28 = v41[24];
  }
  *v36 = v28;
  return result;
}

uint64_t sub_1BB7004E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)@<X0>(uint64_t@<X8>);
  uint64_t v22;
  char *v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  char v28;
  void (*v29)(_OWORD *__return_ptr, _OWORD *);
  uint64_t (*v30)@<X0>(uint64_t@<X8>);
  void (*v31)(_OWORD *, _QWORD);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_OWORD *__return_ptr, _OWORD *);
  uint64_t v35;
  _BYTE *v36;
  _OWORD v37[7];
  _OWORD v38[2];
  _BYTE v39[144];
  _OWORD v40[7];
  _BYTE v41[25];

  v36 = a3;
  sub_1BA8676E0();
  v35 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB70E824();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB70E978(0);
  v13 = v12;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA867758();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v18(v11, a2, v16);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  v18(v15, (uint64_t)v11, v17);
  sub_1BB70EA0C(0);
  v21 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v15[*(int *)(v20 + 44)];
  *v21 = sub_1BB70EAF4;
  v21[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v19;
  sub_1BB70E994();
  v23 = &v15[*(int *)(v22 + 36)];
  *(_QWORD *)v23 = sub_1BB70B7A8;
  *((_QWORD *)v23 + 1) = 0;
  v24 = &v15[*(int *)(v13 + 44)];
  *(_QWORD *)v24 = sub_1BB70B7AC;
  *((_QWORD *)v24 + 1) = 0;
  v25 = a1;
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB70E824);
  v26 = sub_1BB70B4E4();
  sub_1BA4A2870(&qword_1ED3A3998, (uint64_t (*)(uint64_t))sub_1BA867758, MEMORY[0x1E0DB3DC0]);
  sub_1BB873114();
  if (v26 == *(_QWORD *)&v40[0])
  {
    result = sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BB70E978);
    v28 = 0;
  }
  else
  {
    v29 = *(void (**)(_OWORD *__return_ptr, _OWORD *))v24;
    v33 = *((_QWORD *)v24 + 1);
    v34 = v29;
    *(_QWORD *)&v37[0] = v26;
    v30 = *v21;
    v31 = (void (*)(_OWORD *, _QWORD))sub_1BB873198();
    v32 = v35;
    (*(void (**)(char *))(v6 + 16))(v8);
    v31(v40, 0);
    ((void (*)(_OWORD *__return_ptr, char *))v30)(v40, v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v32);
    sub_1BA6A09F0((uint64_t)v40, (uint64_t)v39, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
    sub_1BA6A09F0((uint64_t)v39, (uint64_t)v40, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
    v34(v37, v40);
    sub_1BA90EECC((uint64_t)v39);
    v40[6] = v37[6];
    *(_OWORD *)v41 = v38[0];
    *(_OWORD *)&v41[9] = *(_OWORD *)((char *)v38 + 9);
    v40[2] = v37[2];
    v40[3] = v37[3];
    v40[4] = v37[4];
    v40[5] = v37[5];
    v40[0] = v37[0];
    v40[1] = v37[1];
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BB70E978);
    result = sub_1BA8D1FE4((uint64_t)v40);
    v28 = v41[24];
  }
  *v36 = v28;
  return result;
}

uint64_t sub_1BB7007F4@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD v17[7];
  _OWORD v18[2];
  _BYTE v19[144];
  _OWORD v20[7];
  _OWORD v21[2];

  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  sub_1BB86F76C();
  swift_storeEnumTagMultiPayload();
  FeedItem.feedIssue.getter((uint64_t)v17);
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedItem);
  sub_1BA6A09F0((uint64_t)v17, (uint64_t)v19, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  sub_1BA6A09F0((uint64_t)v19, (uint64_t)v20, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  if (sub_1BA84DAF0((uint64_t *)v20) == 1)
    goto LABEL_8;
  v7 = objc_msgSend(*(id *)&v20[0], sel_identifier);
  v8 = sub_1BB8729A0();
  v10 = v9;

  v11 = objc_msgSend(a1, sel_identifier);
  v12 = sub_1BB8729A0();
  v14 = v13;

  if (v8 != v12 || v10 != v14)
  {
    v15 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
      goto LABEL_6;
    sub_1BA90EECC((uint64_t)v19);
LABEL_8:
    sub_1BA90EFB8(v17);
    return sub_1BA6A09F0((uint64_t)v17, a2, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  }
  swift_bridgeObjectRelease_n();
LABEL_6:
  v17[6] = v20[6];
  v18[0] = v21[0];
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v21 + 9);
  v17[2] = v20[2];
  v17[3] = v20[3];
  v17[4] = v20[4];
  v17[5] = v20[5];
  v17[0] = v20[0];
  v17[1] = v20[1];
  nullsub_1();
  return sub_1BA6A09F0((uint64_t)v17, a2, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
}

uint64_t sub_1BB700A1C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _OWORD v25[7];
  _OWORD v26[2];
  _BYTE v27[144];
  _OWORD v28[7];
  _OWORD v29[2];

  v4 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v25 - v8;
  v10 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8676E0();
  sub_1BB86F76C();
  sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
  sub_1BB1C32F8();
  v14 = (uint64_t)&v6[*(int *)(v13 + 48)];
  sub_1BA5193C4((uint64_t)v6, (uint64_t)v12, type metadata accessor for FeedItem);
  sub_1BB1C3360(v14);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
  FeedItem.feedIssue.getter((uint64_t)v25);
  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FeedItem);
  sub_1BA6A09F0((uint64_t)v25, (uint64_t)v27, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  sub_1BA6A09F0((uint64_t)v27, (uint64_t)v28, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  if (sub_1BA84DAF0((uint64_t *)v28) == 1)
    goto LABEL_8;
  v15 = objc_msgSend(*(id *)&v28[0], sel_identifier);
  v16 = sub_1BB8729A0();
  v18 = v17;

  v19 = objc_msgSend(a1, sel_identifier);
  v20 = sub_1BB8729A0();
  v22 = v21;

  if (v16 != v20 || v18 != v22)
  {
    v23 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
      goto LABEL_6;
    sub_1BA90EECC((uint64_t)v27);
LABEL_8:
    sub_1BA90EFB8(v25);
    return sub_1BA6A09F0((uint64_t)v25, a2, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  }
  swift_bridgeObjectRelease_n();
LABEL_6:
  v25[6] = v28[6];
  v26[0] = v29[0];
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)v29 + 9);
  v25[2] = v28[2];
  v25[3] = v28[3];
  v25[4] = v28[4];
  v25[5] = v28[5];
  v25[0] = v28[0];
  v25[1] = v28[1];
  nullsub_1();
  return sub_1BA6A09F0((uint64_t)v25, a2, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
}

uint64_t sub_1BB700CB8@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v26;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - v5;
  v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FeedHeadline(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (id *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  sub_1BB86F76C();
  swift_storeEnumTagMultiPayload();
  FeedItem.feedHeadline.getter((uint64_t)v6);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FeedItem);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) != 1)
  {
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v13, type metadata accessor for FeedHeadline);
    v14 = objc_msgSend(v13[5], sel_identifier);
    v15 = sub_1BB8729A0();
    v17 = v16;

    v18 = objc_msgSend(a1, sel_identifier);
    v19 = sub_1BB8729A0();
    v21 = v20;

    if (v15 == v19 && v17 == v21)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v23 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FeedHeadline);
        goto LABEL_9;
      }
    }
    sub_1BA5193C4((uint64_t)v13, a2, type metadata accessor for FeedHeadline);
    v24 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v24, 1, v10);
  }
  sub_1BA6ED6EC((uint64_t)v6, (uint64_t)&unk_1ED3B2DB0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
LABEL_9:
  v24 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v24, 1, v10);
}

uint64_t sub_1BB700F48@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  id v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - v3;
  v5 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - v9;
  v11 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FeedHeadline(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (id *)((char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA8676E0();
  sub_1BB86F76C();
  sub_1BA4C2DD8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
  sub_1BB1C32F8();
  v19 = (uint64_t)&v7[*(int *)(v18 + 48)];
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v13, type metadata accessor for FeedItem);
  sub_1BB1C3360(v19);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
  FeedItem.feedHeadline.getter((uint64_t)v4);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FeedItem);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v14) == 1)
  {
    sub_1BA6ED6EC((uint64_t)v4, (uint64_t)&unk_1ED3B2DB0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
LABEL_9:
    v30 = 1;
    v29 = v33;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v29, v30, 1, v14);
  }
  sub_1BA5193C4((uint64_t)v4, (uint64_t)v17, type metadata accessor for FeedHeadline);
  v20 = objc_msgSend(v17[5], sel_identifier);
  v21 = sub_1BB8729A0();
  v23 = v22;

  v24 = objc_msgSend(v32, sel_identifier);
  v25 = sub_1BB8729A0();
  v27 = v26;

  if (v21 == v25 && v23 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v28 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
    {
      sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FeedHeadline);
      goto LABEL_9;
    }
  }
  v29 = v33;
  sub_1BA5193C4((uint64_t)v17, v33, type metadata accessor for FeedHeadline);
  v30 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v29, v30, 1, v14);
}

uint64_t sub_1BB701254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  char v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v29 = a1;
  sub_1BB86F76C();
  v28 = v7;
  swift_storeEnumTagMultiPayload();
  FeedItem.identifier.getter();
  v11 = v10;
  v13 = v12;
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FeedItem);
  LOBYTE(v11) = sub_1BA761FE4(v11, v13, a2);
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    return 1;
  v15 = *(_QWORD *)(a3 + 56);
  v25 = v3;
  v26 = a3 + 56;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v27 = (unint64_t)(v16 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  while (v18)
  {
    v18 &= v18 - 1;
LABEL_7:
    swift_bridgeObjectRetain();
    sub_1BB86F76C();
    swift_storeEnumTagMultiPayload();
    FeedItem.identifier.getter();
    sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FeedItem);
    v21 = sub_1BB872B5C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      v14 = 1;
LABEL_27:
      swift_release();
      return v14;
    }
  }
  v22 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  result = a3;
  if (v22 >= v27)
    goto LABEL_26;
  v23 = *(_QWORD *)(v26 + 8 * v22);
  ++v20;
  if (v23)
    goto LABEL_24;
  v20 = v22 + 1;
  if (v22 + 1 >= v27)
    goto LABEL_26;
  v23 = *(_QWORD *)(v26 + 8 * v20);
  if (v23)
    goto LABEL_24;
  v20 = v22 + 2;
  if (v22 + 2 >= v27)
    goto LABEL_26;
  v23 = *(_QWORD *)(v26 + 8 * v20);
  if (v23)
    goto LABEL_24;
  v20 = v22 + 3;
  if (v22 + 3 >= v27)
    goto LABEL_26;
  v23 = *(_QWORD *)(v26 + 8 * v20);
  if (v23)
  {
LABEL_24:
    v18 = (v23 - 1) & v23;
    goto LABEL_7;
  }
  v24 = v22 + 4;
  if (v24 >= v27)
  {
LABEL_26:
    v14 = 0;
    goto LABEL_27;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v20 = v24;
    goto LABEL_24;
  }
  while (1)
  {
    v20 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v20 >= v27)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v20);
    ++v24;
    if (v23)
      goto LABEL_24;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BB701558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t result;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v34 - v10;
  v12 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8676E0();
  v40 = v15;
  v41 = a1;
  sub_1BB86F76C();
  sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
  sub_1BB1C32F8();
  v38 = v8;
  v39 = v16;
  v17 = (uint64_t)&v8[*(int *)(v16 + 48)];
  sub_1BA5193C4((uint64_t)v8, (uint64_t)v14, type metadata accessor for FeedItem);
  sub_1BB1C3360(v17);
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
  FeedItem.identifier.getter();
  v19 = v18;
  v21 = v20;
  sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FeedItem);
  LOBYTE(v19) = sub_1BA761FE4(v19, v21, a2);
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    return 1;
  v23 = *(_QWORD *)(a3 + 56);
  v35 = a3 + 56;
  v24 = 1 << *(_BYTE *)(a3 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v36 = (unint64_t)(v24 + 63) >> 6;
  v37 = a3;
  swift_bridgeObjectRetain();
  v27 = 0;
  while (v26)
  {
    v26 &= v26 - 1;
LABEL_7:
    swift_bridgeObjectRetain();
    sub_1BB86F76C();
    v28 = (uint64_t)v38;
    sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
    v29 = v28 + *(int *)(v39 + 48);
    sub_1BA5193C4(v28, (uint64_t)v14, type metadata accessor for FeedItem);
    sub_1BB1C3360(v29);
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
    FeedItem.identifier.getter();
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FeedItem);
    LOBYTE(v29) = sub_1BB872B5C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
    {
      v22 = 1;
LABEL_27:
      swift_release();
      return v22;
    }
  }
  v30 = v27 + 1;
  result = v37;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v30 >= v36)
    goto LABEL_26;
  v32 = *(_QWORD *)(v35 + 8 * v30);
  ++v27;
  if (v32)
    goto LABEL_24;
  v27 = v30 + 1;
  if (v30 + 1 >= v36)
    goto LABEL_26;
  v32 = *(_QWORD *)(v35 + 8 * v27);
  if (v32)
    goto LABEL_24;
  v27 = v30 + 2;
  if (v30 + 2 >= v36)
    goto LABEL_26;
  v32 = *(_QWORD *)(v35 + 8 * v27);
  if (v32)
    goto LABEL_24;
  v27 = v30 + 3;
  if (v30 + 3 >= v36)
    goto LABEL_26;
  v32 = *(_QWORD *)(v35 + 8 * v27);
  if (v32)
  {
LABEL_24:
    v26 = (v32 - 1) & v32;
    goto LABEL_7;
  }
  v33 = v30 + 4;
  if (v33 >= v36)
  {
LABEL_26:
    v22 = 0;
    goto LABEL_27;
  }
  v32 = *(_QWORD *)(v35 + 8 * v33);
  if (v32)
  {
    v27 = v33;
    goto LABEL_24;
  }
  while (1)
  {
    v27 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v27 >= v36)
      goto LABEL_26;
    v32 = *(_QWORD *)(v35 + 8 * v27);
    ++v33;
    if (v32)
      goto LABEL_24;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BB701904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  char v18;

  v3 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v16[1] = a1;
    v9 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    v11 = 0;
    v12 = 1;
    do
    {
      v13 = v12;
      v14 = v11;
      sub_1BA4C2DD8(v9, (uint64_t)v6, type metadata accessor for FeedItem);
      FeedItem.layoutDirection.getter((uint64_t)&v17);
      if (!v18)
        v11 = v17;
      v12 &= v18;
      if ((v18 & 1) == 0 && (v13 & 1) == 0)
      {
        if (v14 != v17)
        {
          swift_bridgeObjectRelease();
          sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedItem);
          return 0;
        }
        v12 = 0;
        v11 = v14;
      }
      sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedItem);
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      return v11;
  }
  return sub_1BB86D72C();
}

uint64_t sub_1BB701A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t result;
  _QWORD v49[3];
  void (*v50)(char *, uint64_t, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char v61[16];
  char *v62;
  uint64_t v63;

  v6 = type metadata accessor for FormatLayoutSectionDescriptor.Header(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FeedItemSupplementaryAttributes();
  v58 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FormatLayoutSectionDescriptor.Footer(0);
  v59 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB870E88();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = a1;
  sub_1BA4C2DD8(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v20 = *MEMORY[0x1E0DBB2B8];
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 104);
  v50(v19, v20, v16);
  v55 = a2;
  v21 = *(_QWORD *)(a2 + 40);
  v62 = v19;
  swift_bridgeObjectRetain();
  v52 = v21;
  sub_1BA6A9700((uint64_t (*)(char *))sub_1BA6A9724, (uint64_t)v61, v21);
  v49[2] = 0;
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v17 + 8);
  v53 = v19;
  v54 = v16;
  v51 = v24;
  v24(v19, v16);
  v25 = *(_QWORD *)(v23 + 16);
  v60 = v15;
  v57 = a3;
  if (v25)
  {
    v63 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B318(0, v25, 0);
    v26 = *(unsigned __int8 *)(v58 + 80);
    v49[1] = v23;
    v27 = v23 + ((v26 + 32) & ~v26);
    v28 = *(_QWORD *)(v58 + 72);
    v29 = v63;
    do
    {
      sub_1BA4C2DD8(v27, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B318(0, *(_QWORD *)(v29 + 16) + 1, 1);
        v29 = v63;
      }
      v31 = *(_QWORD *)(v29 + 16);
      v30 = *(_QWORD *)(v29 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1BAC7B318(v30 > 1, v31 + 1, 1);
        v29 = v63;
      }
      *(_QWORD *)(v29 + 16) = v31 + 1;
      sub_1BA5193C4((uint64_t)v9, v29+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v31, type metadata accessor for FormatLayoutSectionDescriptor.Header);
      v27 += v28;
      --v25;
      v15 = v60;
    }
    while (v25);
    swift_bridgeObjectRelease();
    a3 = v57;
  }
  else
  {
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9D8];
  }
  v32 = v58;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3D4E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatContent.Resolved, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatLayoutSectionDescriptor.Data);
  v34 = v33;
  *(_QWORD *)(a3 + *(int *)(v33 + 28)) = v29;
  v36 = v53;
  v35 = v54;
  v37 = ((uint64_t (*)(char *, _QWORD, uint64_t))v50)(v53, *MEMORY[0x1E0DBB2B0], v54);
  MEMORY[0x1E0C80A78](v37);
  v49[-2] = v36;
  v38 = v52;
  swift_bridgeObjectRetain();
  sub_1BA6A9700((uint64_t (*)(char *))sub_1BB295204, (uint64_t)&v49[-4], v38);
  v40 = v39;
  v51(v36, v35);
  sub_1BB70E510(v55);
  v41 = *(_QWORD *)(v40 + 16);
  v42 = MEMORY[0x1E0DEE9D8];
  if (v41)
  {
    v58 = v34;
    v63 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B2EC(0, v41, 0);
    v43 = v40 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    v44 = *(_QWORD *)(v32 + 72);
    v42 = v63;
    do
    {
      sub_1BA4C2DD8(v43, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B2EC(0, *(_QWORD *)(v42 + 16) + 1, 1);
        v42 = v63;
      }
      v46 = *(_QWORD *)(v42 + 16);
      v45 = *(_QWORD *)(v42 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_1BAC7B2EC(v45 > 1, v46 + 1, 1);
        v42 = v63;
      }
      *(_QWORD *)(v42 + 16) = v46 + 1;
      v47 = v42
          + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))
          + *(_QWORD *)(v59 + 72) * v46;
      v15 = v60;
      sub_1BA5193C4((uint64_t)v60, v47, type metadata accessor for FormatLayoutSectionDescriptor.Footer);
      v43 += v44;
      --v41;
    }
    while (v41);
    a3 = v57;
    v34 = v58;
  }
  sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + *(int *)(v34 + 32)) = v42;
  return result;
}

uint64_t sub_1BB701F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;

  v53 = a1;
  v54 = a2;
  v12 = type metadata accessor for FeedItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)a7 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(a7 + 8) = v16;
  v17 = *(_QWORD *)(a3 + 40);
  *(_QWORD *)(a7 + 16) = *(_QWORD *)(a3 + 32);
  *(_QWORD *)(a7 + 24) = v17;
  v18 = *(_QWORD *)(a3 + 96);
  v56 = *(_OWORD *)(a3 + 80);
  v57 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)(a7 + 32) = FeedGroupKind.identifier.getter();
  *(_QWORD *)(a7 + 40) = v19;
  v20 = *(_QWORD *)(a3 + 112);
  *(_QWORD *)(a7 + 80) = *(_QWORD *)(a3 + 104);
  *(_QWORD *)(a7 + 88) = v20;
  v21 = *(_QWORD *)(a3 + 64);
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v48 = a5;
    v49 = a4;
    v50 = a3;
    v51 = a7;
    v52 = a6;
    *(_QWORD *)&v56 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v22, 0);
    v23 = *(unsigned __int8 *)(v13 + 80);
    v47[1] = v21;
    v24 = v21 + ((v23 + 32) & ~v23);
    v55 = *(_QWORD *)(v13 + 72);
    v25 = v56;
    do
    {
      sub_1BA4C2DD8(v24, (uint64_t)v15, type metadata accessor for FeedItem);
      FeedItem.identifier.getter();
      v27 = v26;
      v29 = v28;
      sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FeedItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v56;
      }
      v31 = *(_QWORD *)(v25 + 16);
      v30 = *(_QWORD *)(v25 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1BA7447E8(v30 > 1, v31 + 1, 1);
        v25 = v56;
      }
      *(_QWORD *)(v25 + 16) = v31 + 1;
      v32 = v25 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v27;
      *(_QWORD *)(v32 + 40) = v29;
      v24 += v55;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    a7 = v51;
    a6 = v52;
    a4 = v49;
    a3 = v50;
    a5 = v48;
  }
  else
  {
    swift_bridgeObjectRetain();
    v25 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(a7 + 48) = v25;
  *(_BYTE *)(a7 + 56) = *(_QWORD *)(a3 + 80) > 0xAuLL;
  v33 = v54;
  *(_QWORD *)(a7 + 64) = v53;
  *(_QWORD *)(a7 + 72) = v33;
  *(_QWORD *)(a7 + 96) = sub_1BB86D63C();
  sub_1BB86D780();
  *(_QWORD *)(a7 + 128) = v34;
  *(_QWORD *)(a7 + 136) = v35;
  sub_1BB86D6FC();
  *(_QWORD *)(a7 + 144) = v36;
  *(_QWORD *)(a7 + 152) = v37;
  sub_1BB86D708();
  *(_QWORD *)(a7 + 160) = v38;
  *(_QWORD *)(a7 + 168) = v39;
  v40 = (void *)sub_1BB86D738();
  v41 = objc_msgSend(v40, sel_preferredContentSizeCategory);

  *(_QWORD *)(a7 + 104) = v41;
  type metadata accessor for FeedLayoutCacheKey();
  sub_1BB86D750();
  *(_BYTE *)(a7 + 112) = UIAccessibilityIsInvertColorsEnabled();
  v42 = (void *)sub_1BB86D738();
  v43 = objc_msgSend(v42, sel_legibilityWeight);

  if ((unint64_t)v43 >= 2)
    LOBYTE(v43) = UIAccessibilityIsBoldTextEnabled();
  v44 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(a5, v44);
  v45 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(a4, v45);
  result = swift_release();
  *(_BYTE *)(a7 + 113) = (_BYTE)v43;
  *(_QWORD *)(a7 + 120) = a6;
  return result;
}

uint64_t sub_1BB702254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[16];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  char v62[8];

  v43 = a8;
  v42 = a7;
  v41 = a6;
  v36 = a5;
  v40 = a4;
  v37 = a3;
  v34 = a2;
  v33 = a1;
  v39 = a10;
  v35 = a9;
  v38 = a11;
  v31 = a12;
  v12 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v29 - v19;
  sub_1BA867758();
  v32 = v21;
  v30 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8678F0(0, &qword_1ED3A3DB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v29 = sub_1BB86FCC4();
  v25 = v24;
  sub_1BB86FCD0();
  sub_1BB86FCB8();
  sub_1BA4C2DD8((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BB86FCB8();
  sub_1BA4C2DD8((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BA5193C4((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA6A4404((uint64_t)&v14[*(int *)(v12 + 24)], (uint64_t)v62, qword_1ED3B1AB0, (unint64_t *)&qword_1ED3B1AA0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  v26 = *(_QWORD *)(v33 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  v45 = v31;
  v46 = v29;
  v47 = v25;
  v48 = v62;
  v49 = v33;
  v50 = v23;
  v51 = 1;
  v52 = v36;
  v53 = v34;
  v54 = v37;
  v55 = v40;
  v56 = v41;
  v57 = v42;
  v58 = v43;
  v59 = v35;
  v60 = v39;
  v61 = v38;
  swift_bridgeObjectRetain();
  v27 = sub_1BA8A1C10((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB70E608, (uint64_t)v44, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA65DBBC((uint64_t)v62, qword_1ED3B1AB0, (unint64_t *)&qword_1ED3B1AA0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v32);
  return v27;
}

uint64_t sub_1BB702600(uint64_t a1, unint64_t a2, void *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, unint64_t, id, uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t ObjectType;
  char v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  int v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70[2];
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76[2];
  __int128 v77[2];
  _BYTE v78[64];
  _QWORD v79[10];
  uint64_t v80[10];
  _OWORD v81[6];

  v9 = v8;
  v62 = (_QWORD *)a5;
  sub_1BA6A09F0(a5, (uint64_t)v79, &qword_1ED3A5278, (uint64_t)&type metadata for FeedContext);
  v46 = v79[0];
  v47 = v79[1];
  v50 = v79[3];
  v51 = v79[2];
  v48 = v79[5];
  v49 = v79[4];
  v54 = v79[8];
  v55 = v79[7];
  v52 = v79[6];
  v53 = v79[9];
  v16 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1E0C80A78](v16);
  v63 = (uint64_t)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BB86D7A4();
  v56 = *(_QWORD *)(v18 - 8);
  v57 = v18;
  MEMORY[0x1E0C80A78](v18);
  v69 = (uint64_t)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1BB86D660();
  v68 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v67 = (uint64_t)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v45 - v22;
  v60 = a7;
  sub_1BB86D66C();
  if (a2)
    v24 = a1;
  else
    v24 = 0x746C7561666564;
  v25 = 0xE700000000000000;
  if (a2)
    v25 = a2;
  v65 = v25;
  v66 = v24;
  v64 = a4;
  v58 = a8;
  if (a3)
  {
    swift_bridgeObjectRetain();
    v26 = a3;
  }
  else
  {
    v27 = qword_1ED3BA7F8;
    swift_bridgeObjectRetain();
    if (v27 != -1)
      swift_once();
    v26 = (id)qword_1ED476860;
  }
  v29 = v9[12];
  v28 = v9[13];
  __swift_project_boxed_opaque_existential_1(v9 + 9, v29);
  v30 = *(void (**)(uint64_t, unint64_t, id, uint64_t, uint64_t))(v28 + 8);
  v31 = a3;
  v59 = (uint64_t)v26;
  v30(v66, v65, v26, v29, v28);
  sub_1BACD457C((uint64_t)(v9 + 2), (uint64_t)v78);
  sub_1BA4C010C((uint64_t)(v9 + 9), (uint64_t)v77);
  v32 = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v67, v23, v61);
  v33 = v60;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v69, v60, v57);
  v34 = v63;
  sub_1BA4C2DD8(v58, v63, type metadata accessor for FeedLayoutSolverOptions);
  v35 = v9[17];
  v36 = v9[18];
  __swift_project_boxed_opaque_existential_1(v9 + 14, v35);
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 8))(v23, v33, v35, v36);
  sub_1BA4C010C((uint64_t)(v9 + 19), (uint64_t)v76);
  v38 = v62;
  sub_1BA6A09F0((uint64_t)v62, (uint64_t)v80, &qword_1ED3A5278, (uint64_t)&type metadata for FeedContext);
  if (v80[0])
  {
    *(_QWORD *)&v71 = v46;
    DWORD2(v71) = v47 & 0x1010101;
    *(_QWORD *)&v72 = v51;
    *((_QWORD *)&v72 + 1) = v50;
    *(_QWORD *)&v73 = v49;
    *((_QWORD *)&v73 + 1) = v48;
    LOBYTE(v74) = v52 & 1;
    *((_QWORD *)&v74 + 1) = v55;
    *(_QWORD *)&v75 = v54;
    *((_QWORD *)&v75 + 1) = v53;
  }
  else
  {
    v39 = v9[30];
    ObjectType = swift_getObjectType();
    FeedContextFactoryType.createFeedContext()(ObjectType, v39);
  }
  v41 = v64;
  v81[2] = v73;
  v81[3] = v74;
  v81[4] = v75;
  v81[0] = v71;
  v81[1] = v72;
  sub_1BA4C010C((uint64_t)(v9 + 24), (uint64_t)v70);
  sub_1BA8C8E10(v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA66B198);
  v42 = sub_1BA66B904(MEMORY[0x1E0DEE9D8]);
  sub_1BA50CAA8(0, &qword_1ED3A4A90, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver.Cursor);
  swift_allocObject();
  v43 = sub_1BB706A3C((uint64_t)v78, v77, v67, v69, v34, v37, v76, v59, v42, v41, v81, v70, v66, v65);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v23, v32);
  return v43;
}

uint64_t sub_1BB702AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v28 - v10;
  sub_1BB70EEC0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v30 = 0x6E6F697369766572;
    v31 = 0xE90000000000002DLL;
    v29 = a3;
    sub_1BB87420C();
    sub_1BB872AFC(v15);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v16);
    sub_1BB872AFC(v17);
  }
  else
  {
    v30 = 0x6E6F697369766572;
    v31 = 0xE90000000000002DLL;
    v29 = a3;
    sub_1BB87420C();
    sub_1BB872AFC(v18);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v19);
    v20 = *(_QWORD *)(a4 + 16);
    v28 = a4;
    if (v20)
    {
      v21 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v22 = *(_QWORD *)(v9 + 72);
      v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v23(v14, v21, v8);
        v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        v24(v14, 0, 1, v8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
        sub_1BB86F76C();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        v21 += v22;
        if (!--v20)
          goto LABEL_9;
      }
    }
    else
    {
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      swift_bridgeObjectRetain();
LABEL_9:
      v24(v14, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9D8];
    v25 = MEMORY[0x1E0DEA968];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C69E0((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, v25, MEMORY[0x1E0DEAF20]);
    sub_1BB872904();
    sub_1BB872AFC(v26);
    swift_bridgeObjectRelease();
  }
  return v30;
}

uint64_t sub_1BB702D94(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;

  v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v43 - v14;
  sub_1BA8676E0();
  v17 = v16;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v51 = 0x6E6F697369766572;
    v52 = 0xE90000000000002DLL;
    v50 = a3;
    sub_1BB87420C();
    sub_1BB872AFC(v21);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v22);
    sub_1BB872AFC(v23);
  }
  else
  {
    v47 = v9;
    v48 = v18;
    v46 = v12;
    v51 = 0x6E6F697369766572;
    v52 = 0xE90000000000002DLL;
    v50 = a3;
    sub_1BB87420C();
    sub_1BB872AFC(v24);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v25);
    v26 = *(_QWORD *)(a4 + 16);
    if (v26)
    {
      v27 = a4 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
      v28 = *(_QWORD *)(v48 + 72);
      v44 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
      v45 = v28;
      v43 = a4;
      swift_bridgeObjectRetain();
      v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v44(v20, v27, v17);
        sub_1BB86F76C();
        v30 = (uint64_t)v46;
        sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
        sub_1BB1C32F8();
        v32 = v30 + *(int *)(v31 + 48);
        v33 = (uint64_t)v47;
        sub_1BA5193C4(v30, (uint64_t)v47, type metadata accessor for FeedItem);
        v34 = FeedItem.externalContentCacheIdentifier.getter();
        v49 = v35;
        sub_1BA4A2E80(v33, type metadata accessor for FeedItem);
        sub_1BB1C3360(v32);
        sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v29 = sub_1BA6EA0D0(0, v29[2] + 1, 1, v29);
        v37 = v29[2];
        v36 = v29[3];
        if (v37 >= v36 >> 1)
          v29 = sub_1BA6EA0D0((_QWORD *)(v36 > 1), v37 + 1, 1, v29);
        v29[2] = v37 + 1;
        v38 = &v29[2 * v37];
        v39 = v49;
        v38[4] = v34;
        v38[5] = v39;
        v27 += v45;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v50 = v29;
    v40 = MEMORY[0x1E0DEA968];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C69E0((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, v40, MEMORY[0x1E0DEAF20]);
    sub_1BB872904();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v41);
    swift_bridgeObjectRelease();
  }
  return v51;
}

uint64_t sub_1BB70317C()
{
  uint64_t v0;

  swift_release();
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed28FormatBlueprintLayoutBuilder_pluginData, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB7031BC()
{
  return type metadata accessor for FormatBlueprintLayoutBuilder();
}

uint64_t type metadata accessor for FormatBlueprintLayoutBuilder()
{
  uint64_t result;

  result = qword_1ED3A8330;
  if (!qword_1ED3A8330)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB703200()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatPluginData();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BB70327C@<X0>(uint64_t (*a1)()@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t *v91;
  uint64_t v92;
  uint64_t (*v93)();
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  void (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t, uint64_t, uint64_t);
  void (*v112)(uint64_t, uint64_t);
  void (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  void (*v126)(uint64_t *, _QWORD);
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t *v133;
  uint64_t (*v134)(uint64_t *, uint64_t, uint64_t);
  int v135;
  uint64_t (*v136)();
  uint64_t *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  double v149;
  double v150;
  unint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(char *, unint64_t *);
  double v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  uint64_t v210;
  char *v211;
  char *v212;
  double v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t *v216;
  unint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  void (*v220)(uint64_t *, _QWORD);
  unint64_t v221;
  uint64_t v222;
  unint64_t *v223;
  void (*v224)(char *, char *, unint64_t *);
  unint64_t *v225;
  char *v226;
  unint64_t *v227;
  uint64_t v228;
  int v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  double v237;
  double v238;
  char *v239;
  unint64_t *v240;
  void (*v241)(char *, unint64_t *);
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  int64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  uint64_t *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v288;
  unint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void (*v292)(char *, char *, uint64_t);
  void (*v293)(uint64_t, uint64_t);
  __int128 v294;
  void (*v295)(uint64_t, uint64_t);
  _QWORD *v296;
  void (*v297)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v298;
  unsigned int v299;
  void (*v300)(unint64_t, _QWORD, uint64_t);
  unint64_t *v301;
  unint64_t v302;
  uint64_t (*v303)();
  uint64_t v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  int v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  char *v322;
  unint64_t *v323;
  unint64_t *v324;
  char *v325;
  uint64_t v326;
  unint64_t *v327;
  char *v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  void (*v335)(char *, uint64_t (*)(), uint64_t);
  uint64_t v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  _QWORD *i;
  uint64_t v342;
  uint64_t *v343;
  uint64_t v344;
  unint64_t v345;
  char *v346;
  uint64_t (*v347)();
  uint64_t (*v348)();
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t (*v356)(unint64_t *, uint64_t, uint64_t);
  uint64_t v357;
  char *v358;
  char *v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  double v363;
  uint64_t v364;
  char *v365;
  int v366;
  uint64_t v367;
  unint64_t v368;
  uint64_t v369;
  unint64_t *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  char *v387;
  char *v388;
  char *v389;
  char *v390;
  char *v391;
  char *v392;
  char *v393;
  char *v394;
  char *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  _OWORD v403[5];

  v348 = a1;
  v312 = a3;
  v309 = sub_1BB870948();
  v308 = *(_QWORD *)(v309 - 8);
  MEMORY[0x1E0C80A78](v309);
  v311 = (char *)&v288 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v307 = sub_1BB8705C4();
  v306 = *(_QWORD *)(v307 - 8);
  MEMORY[0x1E0C80A78](v307);
  v310 = (char *)&v288 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v6);
  v395 = (char *)&v288 - v7;
  sub_1BA4CDF6C(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v8);
  v394 = (char *)&v288 - v9;
  sub_1BA68E3E0(0);
  MEMORY[0x1E0C80A78](v10);
  v393 = (char *)&v288 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA50CAA8(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v12);
  v392 = (char *)&v288 - v13;
  sub_1BA50CAA8(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v14);
  v391 = (char *)&v288 - v15;
  sub_1BA4CDF6C(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v16);
  v390 = (char *)&v288 - v17;
  v18 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1E0C80A78](v18);
  v389 = (char *)&v288 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA68E458(0);
  MEMORY[0x1E0C80A78](v20);
  v388 = (char *)&v288 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v22);
  v387 = (char *)&v288 - v23;
  sub_1BA50CAA8(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1E0C80A78](v24);
  v386 = (char *)&v288 - v25;
  v398 = type metadata accessor for FormatCompilerProperty(0);
  v372 = *(_QWORD *)(v398 - 8);
  MEMORY[0x1E0C80A78](v398);
  v397 = (uint64_t)&v288 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v399 = (uint64_t)&v288 - v28;
  v338 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v338);
  v333 = (uint64_t)&v288 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v340 = (uint64_t)&v288 - v31;
  v32 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v32);
  v357 = (uint64_t)&v288 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v34);
  v332 = (uint64_t)&v288 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v339 = (uint64_t)&v288 - v37;
  MEMORY[0x1E0C80A78](v38);
  v350 = (uint64_t)&v288 - v39;
  MEMORY[0x1E0C80A78](v40);
  v362 = (uint64_t)&v288 - v41;
  sub_1BB39C144();
  v367 = v42;
  v364 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v321 = (uint64_t)&v288 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v44);
  v331 = (uint64_t)&v288 - v45;
  MEMORY[0x1E0C80A78](v46);
  v322 = (char *)&v288 - v47;
  MEMORY[0x1E0C80A78](v48);
  v360 = (char *)&v288 - v49;
  MEMORY[0x1E0C80A78](v50);
  v349 = (uint64_t)&v288 - v51;
  sub_1BB70B9B8();
  v355 = v52;
  v345 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v334 = (char *)&v288 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8678F0(0, &qword_1ED3A3DB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
  v370 = v54;
  v369 = *(v54 - 1);
  MEMORY[0x1E0C80A78](v54);
  v337 = (char *)&v288 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v56);
  v358 = (char *)&v288 - v57;
  MEMORY[0x1E0C80A78](v58);
  v320 = (char *)&v288 - v59;
  MEMORY[0x1E0C80A78](v60);
  v319 = (char *)&v288 - v61;
  MEMORY[0x1E0C80A78](v62);
  v359 = (char *)&v288 - v63;
  MEMORY[0x1E0C80A78](v64);
  v365 = (char *)&v288 - v65;
  MEMORY[0x1E0C80A78](v66);
  v329 = (char *)&v288 - v67;
  MEMORY[0x1E0C80A78](v68);
  v328 = (char *)&v288 - v69;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB180, (uint64_t (*)(uint64_t))sub_1BB70B9B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v70);
  v324 = (unint64_t *)((char *)&v288 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v72);
  v323 = (unint64_t *)((char *)&v288 - v73);
  MEMORY[0x1E0C80A78](v74);
  v344 = (uint64_t)&v288 - v75;
  MEMORY[0x1E0C80A78](v76);
  v343 = (uint64_t *)((char *)&v288 - v77);
  sub_1BB70BA30(0);
  v361 = v78;
  v336 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v346 = (char *)&v288 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB70BA44();
  MEMORY[0x1E0C80A78](v80);
  v317 = (char *)&v288 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB70BABC();
  v318 = v82;
  MEMORY[0x1E0C80A78](v82);
  v325 = (char *)&v288 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v84);
  v347 = (uint64_t (*)())((char *)&v288 - v85);
  v86 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1E0C80A78](v86);
  v88 = (char *)&v288 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1BB86D93C();
  MEMORY[0x1E0C80A78](v89);
  v91 = (unint64_t *)((char *)&v288 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0));
  v316 = sub_1BB86D7A4();
  v396 = *(_QWORD *)(v316 - 8);
  MEMORY[0x1E0C80A78](v316);
  v93 = (uint64_t (*)())((char *)&v288 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0));
  v94 = sub_1BB86D678();
  v95 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v97 = (unint64_t)&v288 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  v315 = *(_QWORD *)(v353 + 16);
  v351 = v32;
  v314 = *(unsigned __int8 *)(v353
                            + OBJC_IVAR____TtC8NewsFeed28FormatBlueprintLayoutBuilder_pluginData
                            + *(int *)(v32 + 28));
  memset(v403, 0, sizeof(v403));
  v98 = *(void (**)(_QWORD))(v95 + 104);
  v299 = *MEMORY[0x1E0DB5D88];
  v300 = (void (*)(unint64_t, _QWORD, uint64_t))v98;
  v98(v97);
  sub_1BB87051C();
  sub_1BB87360C();
  v385 = v99;
  v384 = v100;
  sub_1BB87051C();
  v383 = v101;
  v382 = v102;
  sub_1BB87054C();
  v381 = v103;
  v380 = v104;
  sub_1BB8704F8();
  v379 = v105;
  v378 = v106;
  sub_1BB870558();
  v376 = v107;
  v375 = v108;
  v377 = sub_1BB870540();
  sub_1BB870510();
  sub_1BB870534();
  sub_1BB870570();
  v354 = a2;
  sub_1BB870528();
  if (qword_1ED3BC390 != -1)
LABEL_85:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v301 = v91;
  sub_1BB86D6F0();
  v109 = &v88[*(int *)(v86 + 36)];
  v110 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v111 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56);
  v298 = v110;
  v297 = v111;
  ((void (*)(char *, uint64_t, uint64_t))v111)(v109, 1, 1);
  v294 = xmmword_1BB8A1A10;
  *(_OWORD *)v88 = xmmword_1BB8A1A10;
  v366 = 1;
  v88[16] = 1;
  *(_QWORD *)(v88 + 17) = 0;
  v296 = v88 + 17;
  *((_QWORD *)v88 + 3) = 0;
  v304 = v86;
  *(_QWORD *)&v88[*(int *)(v86 + 40)] = 0;
  v342 = sub_1BB702600(0, 0, 0, v314, (uint64_t)v403, v97, (uint64_t)v93, (uint64_t)v88);
  v305 = v88;
  sub_1BA4A2E80((uint64_t)v88, type metadata accessor for FeedLayoutSolverOptions);
  v112 = *(void (**)(uint64_t, uint64_t))(v396 + 8);
  v303 = v93;
  v295 = v112;
  v112((uint64_t)v93, v316);
  v113 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
  v313 = v94;
  v293 = v113;
  v113(v97, v94);
  v114 = v336;
  v115 = v317;
  v116 = v361;
  v335 = *(void (**)(char *, uint64_t (*)(), uint64_t))(v336 + 16);
  v335(v317, v348, v361);
  v292 = *(void (**)(char *, char *, uint64_t))(v114 + 32);
  v292(v346, v115, v116);
  v117 = sub_1BA4A2870(&qword_1ED3A4178, (uint64_t (*)(uint64_t))sub_1BB70BA30, MEMORY[0x1E0DBC7C0]);
  v93 = v347;
  v291 = v117;
  sub_1BB872BA4();
  v327 = (unint64_t *)*(int *)(v318 + 36);
  *(unint64_t *)((char *)v327 + (_QWORD)v93) = 0;
  sub_1BB1C3260();
  v290 = v118;
  v119 = (_QWORD *)((char *)v93 + *(int *)(v118 + 36));
  v120 = sub_1BA4A2870((unint64_t *)&unk_1ED3A4180, (uint64_t (*)(uint64_t))sub_1BB70BA30, MEMORY[0x1E0DBC7C8]);
  v95 = 0;
  LODWORD(v356) = 0;
  v363 = 0.0;
  v289 = (unint64_t)"epare first, id=";
  v326 = 0x80000001BB96D1A0;
  v368 = MEMORY[0x1E0DEE9D8];
  v352 = v120;
  v302 = v97;
  for (i = v119; ; v119 = i)
  {
    v121 = *v119;
    sub_1BB873114();
    v122 = v355;
    if (v121 == v402)
    {
      v123 = v345;
      v124 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v345 + 56);
      v125 = v344;
      v124(v344, 1, 1, v355);
      v88 = (char *)v370;
    }
    else
    {
      v126 = (void (*)(uint64_t *, _QWORD))sub_1BB873198();
      v127 = v369;
      v128 = v329;
      v88 = (char *)v370;
      (*(void (**)(char *))(v369 + 16))(v329);
      v126(&v402, 0);
      v129 = v346;
      v335(v346, v93, v116);
      sub_1BB873120();
      (*(void (**)(char *, uint64_t))(v336 + 8))(v129, v116);
      v97 = *(_QWORD *)(v127 + 32);
      v86 = (uint64_t)v328;
      ((void (*)(char *, char *, char *))v97)(v328, v128, v88);
      v130 = &v334[*(int *)(v122 + 48)];
      v94 = v122;
      v91 = v327;
      v131 = *(unint64_t *)((char *)v327 + (_QWORD)v93);
      ((void (*)(char *, uint64_t, char *))v97)(v130, v86, v88);
      if (__OFADD__(v131, 1))
      {
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
        goto LABEL_85;
      }
      *(unint64_t *)((char *)v91 + (_QWORD)v93) = v131 + 1;
      v125 = v344;
      v132 = (char *)(v344 + *(int *)(v94 + 48));
      *(_QWORD *)v344 = v131;
      ((void (*)(char *, char *, char *))v97)(v132, v130, v88);
      v123 = v345;
      v124 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v345 + 56);
      v124(v125, 0, 1, v94);
      v122 = v94;
      v116 = v361;
    }
    v133 = v343;
    sub_1BA646EFC(v125, (uint64_t)v343, (unint64_t *)&unk_1ED3AB180, (uint64_t (*)(uint64_t))sub_1BB70B9B8);
    v134 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v123 + 48);
    v135 = v134(v133, 1, v122);
    v136 = v348;
    if (v135 == 1)
      break;
    v137 = v133;
    v138 = *v133;
    v139 = v365;
    (*(void (**)(char *, char *, char *))(v369 + 32))(v365, (char *)v137 + *(int *)(v122 + 48), v88);
    v140 = v362;
    sub_1BB86FCB8();
    sub_1BB870510();
    v141 = sub_1BB70E1E0(v138);
    v142 = v350;
    sub_1BA4C2DD8(v140, v350, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
    v143 = v142;
    v144 = v357;
    sub_1BA5193C4(v143, v357, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
    v145 = *(_QWORD *)(v144 + *(int *)(v351 + 36));
    swift_bridgeObjectRetain();
    v146 = v349;
    v147 = (uint64_t)v139;
    v148 = v144;
    sub_1BB706490(v144, v147, v342, v145, v141, 0, 1, v349);
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v144, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
    swift_release();
    sub_1BA4A2E80(v140, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
    sub_1BB8705DC();
    v150 = v149;
    if (((v356 | v366) & 1) == 0)
      LODWORD(v356) = v149 != v363;
    v151 = v370;
    (*(void (**)(char *, char *, unint64_t *))(v369 + 16))(v359, v365, v370);
    if ((v95 & 1) != 0)
    {
      v95 = 1;
    }
    else
    {
      v152 = v339;
      sub_1BB86FCB8();
      v153 = v152;
      v154 = v362;
      sub_1BA4C2DD8(v153, v362, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
      sub_1BA5193C4(v154, v148, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
      v155 = v340;
      sub_1BA4C2DD8(v148, v340, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
      sub_1BA4A2E80(v148, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
      v156 = *(_QWORD *)(v155 + *(int *)(v338 + 32));
      v157 = MEMORY[0x1E0DEE9D8];
      v401 = MEMORY[0x1E0DEE9D8];
      v373 = *(_QWORD *)(v156 + 16);
      if (v373)
      {
        v371 = v156 + 32;
        v330 = v156;
        swift_bridgeObjectRetain_n();
        v158 = 0;
        do
        {
          v382 = v158;
          v159 = (uint64_t *)(v371 + 80 * v158);
          v160 = v159[4];
          v161 = v159[7];
          v163 = v159[8];
          v162 = v159[9];
          v164 = *(_QWORD *)(v160 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
          v165 = *v159;
          v166 = v159[1];
          v167 = v159[2];
          v168 = v159[3];
          v169 = v159[5];
          v385 = v159[6];
          sub_1BA6D78DC();
          v170 = v164;
          v171 = *(_QWORD *)(v164 + 16);
          v383 = v161;
          v381 = v165;
          v380 = v166;
          v379 = v167;
          v378 = v168;
          v377 = v160;
          v376 = v169;
          v375 = v163;
          v384 = v162;
          if (v171)
          {
            v374 = v170;
            sub_1BA6D78DC();
            sub_1BA6D78DC();
            v402 = MEMORY[0x1E0DEE9D8];
            v172 = v374;
            swift_bridgeObjectRetain();
            sub_1BA7447E8(0, v171, 0);
            v173 = v172
                 + ((*(unsigned __int8 *)(v372 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v372 + 80));
            v396 = *(_QWORD *)(v372 + 72);
            sub_1BA4C2DD8(v173, v399, type metadata accessor for FormatCompilerProperty);
            v174 = (char *)&loc_1BB7048EC + *((int *)qword_1BB706420 + swift_getEnumCaseMultiPayload());
            __asm { BR              X9 }
          }
          sub_1BA6D78DC();
          sub_1BA6D78DC();
          v175 = MEMORY[0x1E0DEE9D8];
          v400 = sub_1BB873060();
          v176 = *(_QWORD *)(v175 + 16);
          if (v176)
          {
            v177 = (uint64_t *)(v175 + 40);
            do
            {
              v178 = *(v177 - 1);
              v179 = *v177;
              swift_bridgeObjectRetain();
              sub_1BA6EE5AC(&v402, v178, v179);
              swift_bridgeObjectRelease();
              v177 += 2;
              --v176;
            }
            while (v176);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v158 = v382 + 1;
          sub_1BA7F4208();
          sub_1BA7F4208();
          sub_1BA67FB48(v400);
        }
        while (v158 != v373);
        swift_bridgeObjectRelease_n();
        v157 = v401;
        v146 = v349;
      }
      v180 = *(_QWORD *)(v157 + 16);
      v181 = sub_1BB873060();
      v401 = v181;
      if (v180)
      {
        v182 = (uint64_t *)(v157 + 40);
        do
        {
          v183 = *(v182 - 1);
          v184 = *v182;
          swift_bridgeObjectRetain();
          sub_1BA6EE5AC(&v402, v183, v184);
          swift_bridgeObjectRelease();
          v182 += 2;
          --v180;
        }
        while (v180);
        swift_bridgeObjectRelease();
        v185 = v401;
      }
      else
      {
        v185 = v181;
        swift_bridgeObjectRelease();
      }
      sub_1BA4A2E80(v340, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
      v95 = sub_1BA761FE4(0xD000000000000018, v326, v185);
      swift_bridgeObjectRelease();
      sub_1BA4A2E80(v339, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
      v151 = v370;
    }
    v186 = *(void (**)(char *, unint64_t *))(v369 + 8);
    v186(v359, v151);
    v187 = v363;
    if ((v366 & 1) != 0)
      v187 = 0.0;
    if (v187 > v150)
      v150 = v187;
    (*(void (**)(char *, uint64_t, uint64_t))(v364 + 16))(v360, v146, v367);
    v188 = v368;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v188 = sub_1BB394054(0, *(_QWORD *)(v188 + 16) + 1, 1, v188);
    v368 = v188;
    v190 = *(_QWORD *)(v188 + 16);
    v189 = *(_QWORD *)(v188 + 24);
    if (v190 >= v189 >> 1)
      v368 = sub_1BB394054(v189 > 1, v190 + 1, 1, v368);
    v363 = v150;
    v191 = v368;
    *(_QWORD *)(v368 + 16) = v190 + 1;
    v192 = v364;
    v193 = v367;
    (*(void (**)(unint64_t, char *, uint64_t))(v364 + 32))(v191+ ((*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80))+ *(_QWORD *)(v192 + 72) * v190, v360, v367);
    (*(void (**)(uint64_t, uint64_t))(v192 + 8))(v146, v193);
    v186(v365, v370);
    v366 = 0;
    v116 = v361;
    v93 = v347;
  }
  sub_1BA4A2E80((uint64_t)v347, (uint64_t (*)(_QWORD))sub_1BB70BABC);
  if ((v356 & v95 & 1) != 0)
  {
    v356 = (uint64_t (*)(unint64_t *, uint64_t, uint64_t))v134;
    v194 = v302;
    v300(v302, v299, v313);
    sub_1BB87051C();
    sub_1BB87360C();
    v399 = v195;
    v396 = v196;
    sub_1BB87051C();
    v385 = v197;
    v384 = v198;
    sub_1BB87054C();
    v383 = v199;
    v382 = v200;
    sub_1BB8704F8();
    v381 = v201;
    v380 = v202;
    sub_1BB870558();
    v379 = v203;
    v378 = v204;
    sub_1BB870540();
    sub_1BB870510();
    sub_1BB870534();
    sub_1BB870570();
    sub_1BB870528();
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    v205 = (char *)v124;
    v206 = (uint64_t)v303;
    sub_1BB86D6F0();
    v207 = v304;
    v208 = (uint64_t)v305;
    v297(&v305[*(int *)(v304 + 36)], 1, 1, v298);
    *(_OWORD *)v208 = v294;
    *(_BYTE *)(v208 + 16) = 1;
    v209 = v296;
    *v296 = 0;
    *(_QWORD *)((char *)v209 + 7) = 0;
    *(_QWORD *)(v208 + *(int *)(v207 + 40)) = 0;
    v349 = sub_1BB702600(0, 0, 0, v314, (uint64_t)v403, v194, v206, v208);
    sub_1BA4A2E80(v208, type metadata accessor for FeedLayoutSolverOptions);
    v210 = v206;
    v211 = v205;
    v295(v210, v316);
    v293(v194, v313);
    v212 = v317;
    v335(v317, v136, v116);
    v97 = (unint64_t)v346;
    v292(v346, v212, v116);
    v86 = (uint64_t)v325;
    sub_1BB872BA4();
    v344 = *(int *)(v318 + 36);
    *(_QWORD *)(v86 + v344) = 0;
    v93 = (uint64_t (*)())(v86 + *(int *)(v290 + 36));
    v213 = v363;
    LODWORD(v343) = v366 & 1;
    v345 = v289 | 0x8000000000000000;
    v348 = v93;
    while (1)
    {
      v214 = *(_QWORD *)v93;
      v95 = v361;
      v94 = v352;
      sub_1BB873114();
      v215 = v355;
      if (v214 == v402)
      {
        v216 = v324;
        v217 = v324;
        v218 = 1;
        v219 = v355;
      }
      else
      {
        v359 = v211;
        v220 = (void (*)(uint64_t *, _QWORD))sub_1BB873198();
        v221 = v97;
        v222 = v369;
        v88 = v320;
        v223 = v370;
        (*(void (**)(char *))(v369 + 16))(v320);
        v220(&v402, 0);
        v335((char *)v221, (uint64_t (*)())v86, v95);
        sub_1BB873120();
        (*(void (**)(unint64_t, uint64_t))(v336 + 8))(v221, v95);
        v224 = *(void (**)(char *, char *, unint64_t *))(v222 + 32);
        v95 = (uint64_t)v319;
        v224(v319, v88, v223);
        v91 = (unint64_t *)&v334[*(int *)(v215 + 48)];
        v94 = v344;
        v97 = *(_QWORD *)(v86 + v344);
        v224((char *)v91, (char *)v95, v223);
        if (__OFADD__(v97, 1))
          goto LABEL_83;
        *(_QWORD *)(v86 + v94) = v97 + 1;
        v225 = v324;
        v226 = (char *)v324 + *(int *)(v215 + 48);
        *v324 = v97;
        v227 = v91;
        v216 = v225;
        v224(v226, (char *)v227, v223);
        v217 = v216;
        v218 = 0;
        v219 = v215;
        v211 = v359;
      }
      ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))v211)(v217, v218, 1, v219);
      v88 = (char *)v86;
      v228 = (uint64_t)v216;
      v91 = v323;
      sub_1BA646EFC(v228, (uint64_t)v323, (unint64_t *)&unk_1ED3AB180, (uint64_t (*)(uint64_t))sub_1BB70B9B8);
      v229 = v356(v91, 1, v215);
      v230 = v368;
      v93 = type metadata accessor for FormatSectionDescriptor;
      v86 = v357;
      if (v229 == 1)
      {
        sub_1BA4A2E80((uint64_t)v88, (uint64_t (*)(_QWORD))sub_1BB70BABC);
        swift_release();
        break;
      }
      v97 = *v91;
      (*(void (**)(char *, char *, unint64_t *))(v369 + 32))(v358, (char *)v91 + *(int *)(v215 + 48), v370);
      if ((v97 & 0x8000000000000000) != 0)
        goto LABEL_80;
      v231 = v97;
      if (v97 >= *(_QWORD *)(v230 + 16))
        goto LABEL_81;
      v232 = v364;
      v365 = (char *)((*(unsigned __int8 *)(v232 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v232 + 80));
      v233 = *(_QWORD *)(v364 + 72);
      v371 = v231;
      v360 = (char *)(v233 * v231);
      v234 = &v365[v230 + v233 * v231];
      v235 = v322;
      v236 = v367;
      (*(void (**)(char *, char *, uint64_t))(v364 + 16))(v322, v234, v367);
      sub_1BB8705DC();
      v238 = v237;
      (*(void (**)(char *, uint64_t))(v232 + 8))(v235, v236);
      if ((v366 & 1) != 0)
      {
        (*(void (**)(char *, char *, unint64_t *))(v369 + 16))(v337, v358, v370);
      }
      else
      {
        v239 = v337;
        v240 = v370;
        (*(void (**)(char *, char *, unint64_t *))(v369 + 16))(v337, v358, v370);
        if (v238 == v213)
        {
          v95 = (uint64_t)v211;
          v241 = *(void (**)(char *, unint64_t *))(v369 + 8);
          v241(v239, v240);
          goto LABEL_73;
        }
      }
      v242 = v332;
      sub_1BB86FCB8();
      v243 = v242;
      v244 = v362;
      sub_1BA4C2DD8(v243, v362, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
      sub_1BA5193C4(v244, v86, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
      v245 = v333;
      sub_1BA4C2DD8(v86, v333, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
      sub_1BA4A2E80(v86, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
      v246 = *(_QWORD *)(v245 + *(int *)(v338 + 32));
      v247 = MEMORY[0x1E0DEE9D8];
      v401 = MEMORY[0x1E0DEE9D8];
      v374 = *(_QWORD *)(v246 + 16);
      if (v374)
      {
        v359 = v211;
        v373 = v246 + 32;
        v347 = (uint64_t (*)())v246;
        swift_bridgeObjectRetain_n();
        v248 = 0;
        do
        {
          v382 = v248;
          v249 = (uint64_t *)(v373 + 80 * v248);
          v251 = v249[8];
          v250 = v249[9];
          v252 = *(_QWORD *)(v249[4] + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
          v253 = *v249;
          v254 = v249[1];
          v255 = v249[2];
          v256 = v249[3];
          v257 = v249[4];
          v258 = v249[5];
          v259 = v249[6];
          v383 = v249[7];
          sub_1BA6D78DC();
          v260 = v252;
          v261 = *(_QWORD *)(v252 + 16);
          v381 = v253;
          v380 = v254;
          v379 = v255;
          v378 = v256;
          v384 = v257;
          v377 = v258;
          v376 = v259;
          v385 = v250;
          if (v261)
          {
            v375 = v260;
            sub_1BA6D78DC();
            sub_1BA6D78DC();
            v402 = MEMORY[0x1E0DEE9D8];
            v262 = v375;
            swift_bridgeObjectRetain();
            sub_1BA7447E8(0, v261, 0);
            v263 = v262
                 + ((*(unsigned __int8 *)(v372 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v372 + 80));
            v396 = *(_QWORD *)(v372 + 72);
            v399 = v251;
            sub_1BA4C2DD8(v263, v397, type metadata accessor for FormatCompilerProperty);
            v264 = (char *)&loc_1BB705A8C + *((int *)qword_1BB706448 + swift_getEnumCaseMultiPayload());
            __asm { BR              X9 }
          }
          sub_1BA6D78DC();
          sub_1BA6D78DC();
          v265 = MEMORY[0x1E0DEE9D8];
          v400 = sub_1BB873060();
          v266 = *(_QWORD *)(v265 + 16);
          if (v266)
          {
            v267 = (uint64_t *)(v265 + 40);
            do
            {
              v268 = *(v267 - 1);
              v269 = *v267;
              swift_bridgeObjectRetain();
              sub_1BA6EE5AC(&v402, v268, v269);
              swift_bridgeObjectRelease();
              v267 += 2;
              --v266;
            }
            while (v266);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v248 = v382 + 1;
          sub_1BA7F4208();
          sub_1BA7F4208();
          sub_1BA67FB48(v400);
        }
        while (v248 != v374);
        swift_bridgeObjectRelease_n();
        v247 = v401;
        v211 = v359;
        v93 = type metadata accessor for FormatSectionDescriptor;
      }
      v270 = *(_QWORD *)(v247 + 16);
      v271 = sub_1BB873060();
      v401 = v271;
      if (v270)
      {
        v272 = v211;
        v273 = (uint64_t *)(v247 + 40);
        do
        {
          v274 = *(v273 - 1);
          v275 = *v273;
          swift_bridgeObjectRetain();
          sub_1BA6EE5AC(&v402, v274, v275);
          swift_bridgeObjectRelease();
          v273 += 2;
          --v270;
        }
        while (v270);
        swift_bridgeObjectRelease();
        v276 = v401;
        v211 = v272;
        v93 = type metadata accessor for FormatSectionDescriptor;
      }
      else
      {
        v276 = v271;
        swift_bridgeObjectRelease();
      }
      sub_1BA4A2E80(v333, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
      v277 = sub_1BA761FE4(0xD000000000000018, v345, v276);
      swift_bridgeObjectRelease();
      sub_1BA4A2E80(v332, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
      v241 = *(void (**)(char *, unint64_t *))(v369 + 8);
      v241(v337, v370);
      v86 = v357;
      v95 = (uint64_t)v211;
      if ((v277 & 1) != 0)
      {
        v278 = v362;
        v88 = v358;
        sub_1BB86FCB8();
        sub_1BB870510();
        v279 = sub_1BB70E1E0(v371);
        v280 = v350;
        sub_1BA4C2DD8(v278, v350, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
        v94 = (uint64_t)type metadata accessor for FormatPluginData;
        sub_1BA5193C4(v280, v86, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
        v281 = *(_QWORD *)(v86 + *(int *)(v351 + 36));
        swift_bridgeObjectRetain();
        sub_1BB706490(v86, (uint64_t)v88, v349, v281, v279, *(uint64_t *)&v363, (char)v343, v321);
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v86, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
        swift_release();
        sub_1BA4A2E80(v278, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
        v282 = v368;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v282 = sub_1BAA67F64(v282);
        v97 = (unint64_t)v346;
        v91 = v370;
        v211 = (char *)v95;
        if (v371 >= *(_QWORD *)(v282 + 16))
          goto LABEL_84;
        goto LABEL_40;
      }
LABEL_73:
      v283 = v362;
      v88 = v358;
      sub_1BB86FCB8();
      sub_1BB870510();
      v284 = sub_1BB70E1E0(v371);
      v285 = v350;
      sub_1BA4C2DD8(v283, v350, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
      v94 = (uint64_t)type metadata accessor for FormatPluginData;
      sub_1BA5193C4(v285, v86, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
      v286 = *(_QWORD *)(v86 + *(int *)(v351 + 36));
      swift_bridgeObjectRetain();
      sub_1BB706490(v86, (uint64_t)v88, v349, v286, v284, 0, 1, v331);
      swift_bridgeObjectRelease();
      sub_1BA4A2E80(v86, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
      swift_release();
      sub_1BA4A2E80(v283, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
      v282 = v368;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v282 = sub_1BAA67F64(v282);
      v97 = (unint64_t)v346;
      v91 = v370;
      v211 = (char *)v95;
      if (v371 >= *(_QWORD *)(v282 + 16))
        goto LABEL_82;
LABEL_40:
      v368 = v282;
      (*(void (**)(char *))(v364 + 40))(&v365[v282 + (_QWORD)v360]);
      v241(v358, v91);
      v93 = v348;
      v86 = (uint64_t)v325;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v306 + 16))(v310, v354, v307);
  (*(void (**)(char *, _QWORD, uint64_t))(v308 + 104))(v311, *MEMORY[0x1E0DB9DD0], v309);
  type metadata accessor for FormatLayoutSectionDescriptor(0);
  sub_1BA4A2870(&qword_1ED3A88C0, type metadata accessor for FormatLayoutSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatLayoutSectionDescriptor);
  sub_1BB04CD3C();
  swift_bridgeObjectRetain();
  sub_1BB86FACC();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BB706470@<X0>(uint64_t (*a1)()@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB70327C(a1, a2, a3);
}

uint64_t sub_1BB706490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __int128 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD v58[2];
  _OWORD v59[2];
  __int128 v60;
  __int128 v61;
  _OWORD v62[2];
  _BYTE v63[57];
  char v64;

  v49 = a5;
  v47 = a4;
  v50 = a3;
  v48 = a2;
  v55 = a1;
  v57 = a8;
  v52 = sub_1BB871074();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v54 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for FormatLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v56);
  v53 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v46 - v17;
  v19 = MEMORY[0x1E0DEE9D8];
  v20 = MEMORY[0x1E0DEE9D8];
  if ((a7 & 1) == 0)
  {
    sub_1BA4B07F0(0, &qword_1ED3B9E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v21 = type metadata accessor for FormatOption();
    v22 = *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80);
    v23 = (v22 + 32) & ~v22;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
    v24 = (_QWORD *)(v20 + v23);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = a6;
    *(_QWORD *)(v25 + 24) = v19;
    *v24 = 0xD000000000000018;
    v24[1] = 0x80000001BB96D1A0;
    v24[2] = v25 | 0x3000000000000000;
    v24[3] = 1;
    v26 = (char *)v24 + *(int *)(v21 + 28);
    v27 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  }
  v28 = v8 + OBJC_IVAR____TtC8NewsFeed28FormatBlueprintLayoutBuilder_pluginData;
  v29 = *(_QWORD *)(v28 + *(int *)(type metadata accessor for FormatPluginData() + 32));
  memset(v63, 0, sizeof(v63));
  v64 = 1;
  *(_QWORD *)&v60 = a6;
  BYTE8(v60) = a7 & 1;
  sub_1BA4AD288(0, &qword_1ED3B0778, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v30 = sub_1BB872A00();
  v31 = v55;
  v33 = sub_1BB702254(v55, v47, v19, v20, v29, (uint64_t)v63, v30, v32, 0, 0, 0, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = swift_bridgeObjectRelease();
  *(_QWORD *)&v62[0] = 0;
  v60 = 0u;
  v61 = 0u;
  MEMORY[0x1E0C80A78](v34);
  v41 = v33;
  v42 = v49;
  v43 = 1;
  v44 = &v60;
  v45 = v50;
  sub_1BB709618(0, 0, 1, (void (*)(__int128 *))sub_1BB4397A8, (uint64_t)(&v46 - 8), (uint64_t)v58);
  swift_bridgeObjectRelease();
  sub_1BA65DBBC((uint64_t)&v60, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
  v60 = v58[0];
  v61 = v58[1];
  v62[0] = v59[0];
  *(_OWORD *)((char *)v62 + 9) = *(_OWORD *)((char *)v59 + 9);
  sub_1BA4C2DD8(v31, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BB70E4B0((uint64_t)&v60);
  sub_1BB701A68((uint64_t)v14, (uint64_t)&v60, (uint64_t)v18);
  sub_1BA4C2DD8((uint64_t)v18, v53, type metadata accessor for FormatLayoutSectionDescriptor);
  v35 = *MEMORY[0x1E0DBBA10];
  v36 = sub_1BB871068();
  v37 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v54, v35, v36);
  v38 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v51 + 104))(v37, *MEMORY[0x1E0DBBA20], v52);
  v39 = *(_QWORD *)&v62[0];
  MEMORY[0x1E0C80A78](v38);
  swift_bridgeObjectRetain();
  sub_1BA8A3E9C((void (*)(uint64_t *))sub_1BB70E4F4, (uint64_t)&v43, v39);
  sub_1BB70E510((uint64_t)&v60);
  swift_bridgeObjectRelease();
  sub_1BA4A2870(&qword_1ED3A88C0, type metadata accessor for FormatLayoutSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatLayoutSectionDescriptor);
  sub_1BB04CD3C();
  sub_1BB8705F4();
  return sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatLayoutSectionDescriptor);
}

uint64_t sub_1BB7069C4()
{
  sub_1BA83171C();
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1BB870264();
}

uint64_t sub_1BB706A3C(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int128 *a7, uint64_t a8, uint64_t a9, char a10, _OWORD *a11, __int128 *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 32) = v20;
  v21 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v14 + 64) = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(v14 + 48) = v21;
  sub_1BA4CECCC(a2, v14 + 72);
  v22 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 112);
  v23 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a3, v23);
  v24 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 120);
  v25 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a4, v25);
  *(_QWORD *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 136)) = a6;
  sub_1BA4C2DD8(a5, v14 + *(_QWORD *)(*(_QWORD *)v14 + 128), type metadata accessor for FeedLayoutSolverOptions);
  sub_1BA4CECCC(a7, v14 + *(_QWORD *)(*(_QWORD *)v14 + 144));
  *(_QWORD *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 168)) = a8;
  *(_QWORD *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 160)) = a9;
  *(_BYTE *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 176)) = a10;
  v26 = (_OWORD *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 184));
  v27 = a11[4];
  v28 = a11[2];
  v26[3] = a11[3];
  v26[4] = v27;
  v29 = a11[1];
  *v26 = *a11;
  v26[1] = v29;
  v26[2] = v28;
  sub_1BA4CECCC(a12, v14 + *(_QWORD *)(*(_QWORD *)v14 + 192));
  v30 = (_QWORD *)(v14 + *(_QWORD *)(*(_QWORD *)v14 + 200));
  *v30 = a13;
  v30[1] = a14;
  v31 = *(_QWORD *)a5;
  v32 = *(_QWORD *)(a5 + 8);
  LODWORD(a7) = *(unsigned __int8 *)(a5 + 16);
  sub_1BA4A2E80(a5, type metadata accessor for FeedLayoutSolverOptions);
  if ((_DWORD)a7 == 1)
  {
    v33 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 152);
    *(_QWORD *)v33 = 0;
    *(_QWORD *)(v33 + 8) = 0;
    if (v31 | v32)
    {
      *(_BYTE *)(v33 + 24) = 0;
      *(_QWORD *)(v33 + 16) = 0;
    }
    else
    {
      *(_QWORD *)(v33 + 16) = 0;
      *(_BYTE *)(v33 + 24) = 1;
    }
  }
  else
  {
    v34 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 152);
    *(_QWORD *)v34 = v31;
    *(_QWORD *)(v34 + 8) = v32;
    *(_QWORD *)(v34 + 16) = 0;
    *(_BYTE *)(v34 + 24) = 0;
  }
  return v14;
}

uint64_t sub_1BB706C60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, CGFloat *a3@<X8>)
{
  _QWORD *v3;
  CGFloat v4;
  CGFloat v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(__int128 *);
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  void *v60;
  _BYTE *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  int *v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int64_t i;
  uint64_t v87;
  double v88;
  uint64_t v89;
  unint64_t v90;
  int64_t v91;
  unint64_t v92;
  int64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  char v101;
  char v102;
  char v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  void *v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 *v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  _BOOL8 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  _QWORD *v127;
  uint64_t *v128;
  uint64_t v129;
  double v130;
  uint64_t v131;
  uint64_t v132;
  BOOL v133;
  uint64_t v134;
  CGFloat v135;
  _BYTE *v136;
  void *v137;
  _QWORD *v138;
  char isUniquelyReferenced_nonNull_native;
  double *v140;
  double v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  CGFloat v145;
  CGFloat v146;
  CGFloat v147;
  double Height;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  __int128 *v152;
  double v153;
  CGFloat *v154;
  uint64_t result;
  __int128 *v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _BYTE *v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _BYTE *v168;
  uint64_t v169;
  _BYTE *v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  double v181;
  uint64_t v182;
  unint64_t v183;
  char v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  double v199;
  double v200;
  double v201;
  double v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t (*v210)(uint64_t, char *, uint64_t *, uint64_t, uint64_t, uint64_t, double, double, double, double);
  uint64_t v211;
  uint64_t v212;
  double *v213;
  uint64_t v214;
  void (*v215)(_QWORD, _QWORD, _QWORD);
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  double v219;
  uint64_t v220;
  uint64_t v221;
  _BYTE *v222;
  _BYTE *v223;
  _BYTE *v224;
  _BYTE *v225;
  uint64_t v226;
  int64_t v227;
  uint64_t v228;
  uint64_t v229;
  _BYTE *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  unint64_t v235;
  _BYTE *v236;
  _BOOL8 v237;
  uint64_t v238;
  uint64_t v239;
  double *v240;
  double v241;
  uint64_t v242;
  char v243;
  uint64_t v244;
  double v245;
  uint64_t v246;
  CGFloat *v247;
  _QWORD *v248;
  uint64_t v249;
  uint64_t v250;
  __int128 *v251;
  __int128 *v252;
  unint64_t v253;
  void *v254;
  uint64_t v255;
  uint64_t *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  double v261;
  uint64_t v262;
  char v263;
  uint64_t v264;
  double *v265;
  uint64_t v266;
  double v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  _BYTE *v271;
  uint64_t v272;
  _BYTE v273[4];
  int v274;
  _QWORD *v275;
  uint64_t v276;
  uint64_t v277;
  _BYTE *v278;
  _BYTE *v279;
  _BYTE *v280;
  uint64_t *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  _QWORD *v286;
  uint64_t v287;
  _BYTE *v288;
  _BYTE *v289;
  double *v290;
  uint64_t v291;
  char *v292;
  _BYTE *v293;
  CGFloat *v294;
  uint64_t v295;
  uint64_t v296;
  _BYTE *v297;
  uint64_t v298;
  _QWORD *v299;
  double *v300;
  _BYTE *v301;
  uint64_t v302;
  _BYTE *v303;
  _BYTE *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  unint64_t v308;
  uint64_t v309;
  int64_t v310;
  char *v311;
  _QWORD *v312;
  _QWORD *v313;
  uint64_t v314;
  uint64_t v315;
  int64_t v316;
  uint64_t v317;
  uint64_t v318;
  _BYTE *v319;
  id v320;
  uint64_t v321;
  void (*v322)(__int128 *__return_ptr, __int128 *, __int128 *, _QWORD *, uint64_t, _QWORD, uint64_t);
  unint64_t v323;
  uint64_t v324;
  _QWORD *v325;
  double v326;
  _BYTE v327[24];
  uint64_t v328;
  __int128 v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  uint64_t v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  uint64_t v340;
  void *v341;
  _BYTE *v342;
  uint64_t v343;
  _QWORD v344[9];
  __int128 *v345;
  CGRect v346;
  CGRect v347;
  CGRect v348;

  v6 = v3;
  v285 = a2;
  v294 = a3;
  v8 = sub_1BB86FC28();
  v282 = *(_QWORD *)(v8 - 8);
  v283 = v8;
  MEMORY[0x1E0C80A78](v8);
  v281 = (uint64_t *)&v273[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for FeedItem(0);
  v276 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v301 = &v273[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v277 = type metadata accessor for InternalErrorViewModel();
  MEMORY[0x1E0C80A78](v277);
  v280 = &v273[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v290 = (double *)&v273[-v14];
  v15 = sub_1BB86D8A0();
  MEMORY[0x1E0C80A78](v15);
  v288 = &v273[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v291 = sub_1BB86DA68();
  v287 = *(_QWORD *)(v291 - 8);
  MEMORY[0x1E0C80A78](v291);
  v289 = &v273[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v18);
  v279 = &v273[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v20);
  v293 = &v273[-v21];
  *(_QWORD *)v327 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](*(_QWORD *)v327);
  v278 = &v273[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v23);
  v297 = &v273[-v24];
  *(_QWORD *)&v327[8] = sub_1BB86D660();
  v25 = *(_QWORD *)(*(_QWORD *)&v327[8] - 8);
  MEMORY[0x1E0C80A78](*(_QWORD *)&v327[8]);
  v345 = (__int128 *)&v273[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = type metadata accessor for FeedLayoutCacheKey();
  MEMORY[0x1E0C80A78](v27);
  v304 = &v273[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v302 = sub_1BB86D7A4();
  v29 = *(_QWORD *)(v302 - 8);
  MEMORY[0x1E0C80A78](v302);
  v31 = &v273[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v32);
  v34 = &v273[-v33];
  v35 = (uint64_t)v6 + *(_QWORD *)(*v6 + 120);
  v313 = a1;
  sub_1BB701904(v35);
  v300 = (double *)((char *)v6 + *(_QWORD *)(*v6 + 152));
  v284 = v35;
  sub_1BB86D78C();
  v299 = v6;
  v36 = v6[2];
  swift_retain();
  v303 = v34;
  sub_1BB86D708();
  v38 = v37;
  v40 = v39;
  sub_1BB86DD20();
  swift_beginAccess();
  v41 = *(_QWORD *)(v36 + 24);
  v42 = *(_QWORD *)(v41 + 16);
  v286 = v6 + 2;
  if (v42 && (v43 = sub_1BB4AB454(v38, v40), (v44 & 1) != 0))
  {
    v45 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v43);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v45 = sub_1BA6A2E0C(MEMORY[0x1E0DEE9D8]);
  }
  type metadata accessor for FormatLayoutSizeSnapshot();
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = v45;
  sub_1BB86DD2C();
  swift_release();
  v47 = v299;
  v48 = (_QWORD *)((char *)v47 + *(_QWORD *)(*v47 + 200));
  v49 = *v48;
  v50 = v48[1];
  v51 = *(void (**)(__int128 *))(v25 + 16);
  v52 = (uint64_t)v345;
  v292 = (char *)v47 + *(_QWORD *)(*v47 + 112);
  v326 = *(double *)&v51;
  v51(v345);
  v295 = v29;
  v325 = *(_QWORD **)(v29 + 16);
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v325)(v31, v303, v302);
  swift_bridgeObjectRetain();
  v53 = (uint64_t)v313;
  swift_retain();
  swift_retain();
  v54 = v304;
  sub_1BB701F48(v49, v50, v53, v52, (uint64_t)v31, v46, (uint64_t)v304);
  v55 = v47[12];
  v56 = v47[13];
  __swift_project_boxed_opaque_existential_1(v47 + 9, v55);
  (*(void (**)(__int128 *__return_ptr, _BYTE *, uint64_t, uint64_t))(v56 + 16))(&v337, v54, v55, v56);
  v57 = *((_QWORD *)&v337 + 1);
  v296 = v46;
  if (*((_QWORD *)&v337 + 1))
  {
    v58 = v337;
    v345 = *((__int128 **)&v338 + 1);
    v59 = *(double *)&v338;
    v326 = *((double *)&v339 + 1);
    *(_QWORD *)v327 = v339;
    v325 = (_QWORD *)v340;
    v60 = v341;
    v61 = v342;
    LODWORD(v324) = v343;
    v62 = (char *)v47 + *(_QWORD *)(*v47 + 160);
    swift_beginAccess();
    v63 = *(_QWORD *)v62;
    v64 = *(_QWORD *)(*(_QWORD *)v62 + 16);
    *(_QWORD *)&v327[8] = v58;
    if (v64)
    {
      swift_bridgeObjectRetain();
      v65 = sub_1BA6E35A8(v58, v57);
      if ((v66 & 1) != 0)
        v67 = *(_QWORD *)(*(_QWORD *)(v63 + 56) + 8 * v65);
      else
        v67 = 0;
      v135 = v59;
      v136 = v61;
      swift_bridgeObjectRelease();
    }
    else
    {
      v67 = 0;
      v135 = v59;
      v136 = v61;
    }
    v137 = v60;
    swift_endAccess();
    v138 = v325;
    if (v67 != -1)
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v333 = *(_QWORD *)v62;
      *(_QWORD *)v62 = 0x8000000000000000;
      sub_1BA6A3E18(v67 + 1, *(uint64_t *)&v327[8], v57, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)v62 = v333;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      v140 = v300;
      v141 = v300[1];
      v142 = *((_QWORD *)v300 + 2);
      v143 = *((_BYTE *)v300 + 24);
      if ((v143 & 1) != 0)
      {
        v144 = *(_QWORD *)v300;
LABEL_56:
        *(_QWORD *)v140 = v144;
        v140[1] = v141;
        *((_QWORD *)v140 + 2) = v142;
        *((_BYTE *)v140 + 24) = v143;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        LOBYTE(v272) = v324;
        v271 = v136;
        v150 = *(_QWORD *)v327;
        v151 = v57;
        v152 = v345;
        v153 = v326;
        sub_1BA6A48D8(*(uint64_t *)&v327[8], v151);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v154 = v294;
        *v294 = v135;
        *((_QWORD *)v154 + 1) = v152;
        *((_QWORD *)v154 + 2) = v150;
        v154[3] = v153;
        *((_QWORD *)v154 + 4) = v138;
        *((_QWORD *)v154 + 5) = v137;
        *((_QWORD *)v154 + 6) = v136;
        *((_BYTE *)v154 + 56) = 2;
        sub_1BA4A2E80((uint64_t)v304, (uint64_t (*)(_QWORD))type metadata accessor for FeedLayoutCacheKey);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v295 + 8))(v303, v302);
      }
      v145 = *(double *)&v345;
      v147 = v326;
      v146 = *(double *)v327;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v346.origin.x = v135;
      v346.origin.y = v145;
      v346.size.width = v146;
      v346.size.height = v147;
      Height = CGRectGetHeight(v346);
      v149 = v138[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v133 = __OFADD__(v142, v149);
      v142 += v149;
      if (!v133)
      {
        v144 = 0;
        v141 = Height + v141;
        v140 = v300;
        goto LABEL_56;
      }
      goto LABEL_97;
    }
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    result = sub_1BB874560();
    __break(1u);
    return result;
  }
  v275 = v47 + 9;
  if (*((_BYTE *)v300 + 24))
    v68 = 0;
  else
    v68 = *((_QWORD *)v300 + 2);
  v69 = v297;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v325)(v297, v303, v302);
  v70 = *(int **)v327;
  (*(void (**)(_BYTE *, char *, _QWORD))&v326)(&v69[*(int *)(*(_QWORD *)v327 + 20)], v292, *(_QWORD *)&v327[8]);
  v71 = *(_QWORD *)((char *)v47 + *(_QWORD *)(*v47 + 136));
  sub_1BA4C2DD8((uint64_t)v47 + *(_QWORD *)(*v47 + 128), (uint64_t)&v69[v70[6]], type metadata accessor for FeedLayoutSolverOptions);
  swift_retain();
  sub_1BB86D5D0();
  v72 = *(_BYTE *)(v53 + 128);
  v73 = *v47;
  v74 = *((unsigned __int8 *)v47 + *(_QWORD *)(*v47 + 176));
  *(_QWORD *)&v69[v70[10]] = v71;
  *(_QWORD *)&v69[v70[7]] = v68;
  *(_QWORD *)&v69[v70[8]] = v75;
  v69[v70[9]] = v72;
  v76 = v70[11];
  v274 = v74;
  v69[v76] = v74;
  *(_QWORD *)&v69[v70[12]] = v46;
  v77 = *(_QWORD *)(v53 + 120);
  v78 = (_QWORD *)v53;
  v306 = *(_QWORD *)(v77 + 16);
  if (!v306)
  {
    swift_retain();
    v156 = (__int128 *)MEMORY[0x1E0DEE9E0];
    goto LABEL_59;
  }
  v79 = (_QWORD *)((char *)v47 + *(_QWORD *)(v73 + 192));
  v311 = (char *)v47 + *(_QWORD *)(v73 + 184);
  v312 = v79;
  v305 = v77 + 32;
  swift_retain();
  v307 = v77;
  swift_bridgeObjectRetain();
  v80 = 0;
  *(double *)&v345 = MEMORY[0x1E0DEE9E0];
  while (2)
  {
    if (v80 >= *(_QWORD *)(v307 + 16))
    {
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    v81 = *(_QWORD *)(v305 + (v80 << 6) + 40);
    v82 = *(_QWORD *)(v81 + 64);
    v308 = v80 + 1;
    v309 = v81 + 64;
    v83 = 1 << *(_BYTE *)(v81 + 32);
    if (v83 < 64)
      v84 = ~(-1 << v83);
    else
      v84 = -1;
    v85 = v84 & v82;
    v310 = (unint64_t)(v83 + 63) >> 6;
    v314 = v81;
    swift_bridgeObjectRetain();
    for (i = 0; ; i = v316)
    {
      if (v85)
      {
        v315 = (v85 - 1) & v85;
        v316 = i;
        v90 = __clz(__rbit64(v85)) | (i << 6);
        goto LABEL_38;
      }
      v91 = i + 1;
      if (__OFADD__(i, 1))
      {
        __break(1u);
LABEL_94:
        __break(1u);
        goto LABEL_95;
      }
      if (v91 >= v310)
        goto LABEL_14;
      v92 = *(_QWORD *)(v309 + 8 * v91);
      v93 = i + 1;
      if (!v92)
      {
        v93 = i + 2;
        if (i + 2 >= v310)
          goto LABEL_14;
        v92 = *(_QWORD *)(v309 + 8 * v93);
        if (!v92)
        {
          v93 = i + 3;
          if (i + 3 >= v310)
            goto LABEL_14;
          v92 = *(_QWORD *)(v309 + 8 * v93);
          if (!v92)
            break;
        }
      }
LABEL_37:
      v315 = (v92 - 1) & v92;
      v316 = v93;
      v90 = __clz(__rbit64(v92)) + (v93 << 6);
LABEL_38:
      v95 = 16 * v90;
      v96 = *(_QWORD *)(v314 + 56);
      v97 = *(_QWORD *)(v314 + 48) + v95;
      v98 = *(_QWORD *)(v97 + 8);
      v325 = *(_QWORD **)v97;
      v99 = v312[4];
      *(_QWORD *)v327 = v312[3];
      v321 = v99;
      *(_OWORD *)&v327[8] = *(_OWORD *)(v96 + v95);
      v326 = COERCE_DOUBLE(__swift_project_boxed_opaque_existential_1(v312, *(uint64_t *)v327));
      v329 = *(_OWORD *)&v327[8];
      v100 = *(void **)v311;
      v101 = v311[8];
      v102 = v311[9];
      v103 = v311[10];
      v104 = v311[11];
      v105 = *((_QWORD *)v311 + 2);
      v317 = *((_QWORD *)v311 + 3);
      v318 = v105;
      v107 = *((_QWORD *)v311 + 4);
      v106 = *((_QWORD *)v311 + 5);
      v108 = v311[48];
      v109 = (void *)*((_QWORD *)v311 + 7);
      v110 = (_BYTE *)*((_QWORD *)v311 + 8);
      v111 = *((_QWORD *)v311 + 9);
      *(_QWORD *)&v337 = v100;
      BYTE8(v337) = v101;
      BYTE9(v337) = v102;
      BYTE10(v337) = v103;
      BYTE11(v337) = v104;
      *(_QWORD *)&v338 = v105;
      *((_QWORD *)&v338 + 1) = v317;
      *(_QWORD *)&v339 = v107;
      *((_QWORD *)&v339 + 1) = v106;
      LOBYTE(v340) = v108;
      v341 = v109;
      v342 = v110;
      v319 = v110;
      v343 = v111;
      v322 = *(void (**)(__int128 *__return_ptr, __int128 *, __int128 *, _QWORD *, uint64_t, _QWORD, uint64_t))(v99 + 8);
      v323 = v98;
      swift_bridgeObjectRetain();
      v324 = *(_QWORD *)&v327[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v320 = v100;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA653B2C(v107, v106);
      *(_QWORD *)&v327[8] = v109;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v112 = (uint64_t)v325;
      v322(&v333, &v329, &v337, v325, v98, *(_QWORD *)v327, v321);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1BA6DB13C(v107, v106);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v113 = v333;
      v326 = *((double *)&v334 + 1);
      v324 = v334;
      *(_OWORD *)v327 = v335;
      v114 = v345;
      v115 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v337 = v114;
      v116 = v112;
      v117 = v323;
      v119 = sub_1BA6E35A8(v112, v323);
      v120 = *((_QWORD *)v114 + 2);
      v121 = (v118 & 1) == 0;
      v122 = v120 + v121;
      if (__OFADD__(v120, v121))
      {
        __break(1u);
        goto LABEL_79;
      }
      v123 = v118;
      if (*((_QWORD *)v114 + 3) >= v122)
      {
        if ((v115 & 1) == 0)
        {
          v114 = &v337;
          sub_1BB4C60FC();
        }
        v124 = v117;
      }
      else
      {
        sub_1BB4B495C(v122, v115);
        v114 = (__int128 *)v337;
        v124 = v117;
        v125 = sub_1BA6E35A8(v116, v117);
        if ((v123 & 1) != (v126 & 1))
          goto LABEL_101;
        v119 = v125;
      }
      v127 = (_QWORD *)v337;
      v345 = *(__int128 **)&v337;
      if ((v123 & 1) != 0)
      {
        v87 = *(_QWORD *)(v337 + 56) + 48 * v119;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_OWORD *)v87 = v113;
        v88 = v326;
        *(_QWORD *)(v87 + 16) = v324;
        *(double *)(v87 + 24) = v88;
        v89 = *(_QWORD *)&v327[8];
        *(_QWORD *)(v87 + 32) = *(_QWORD *)v327;
        *(_QWORD *)(v87 + 40) = v89;
      }
      else
      {
        *(_QWORD *)(v337 + 8 * (v119 >> 6) + 64) |= 1 << v119;
        v128 = (uint64_t *)(v127[6] + 16 * v119);
        *v128 = v116;
        v128[1] = v124;
        v129 = v127[7] + 48 * v119;
        *(_OWORD *)v129 = v113;
        v130 = v326;
        *(_QWORD *)(v129 + 16) = v324;
        *(double *)(v129 + 24) = v130;
        v131 = *(_QWORD *)&v327[8];
        *(_QWORD *)(v129 + 32) = *(_QWORD *)v327;
        *(_QWORD *)(v129 + 40) = v131;
        v132 = v127[2];
        v133 = __OFADD__(v132, 1);
        v134 = v132 + 1;
        if (v133)
        {
          __break(1u);
          goto LABEL_87;
        }
        v127[2] = v134;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v78 = v313;
      v85 = v315;
    }
    v94 = i + 4;
    if (i + 4 < v310)
    {
      v92 = *(_QWORD *)(v309 + 8 * v94);
      if (!v92)
      {
        while (1)
        {
          v93 = v94 + 1;
          if (__OFADD__(v94, 1))
            goto LABEL_94;
          if (v93 >= v310)
            goto LABEL_14;
          v92 = *(_QWORD *)(v309 + 8 * v93);
          ++v94;
          if (v92)
            goto LABEL_37;
        }
      }
      v93 = i + 4;
      goto LABEL_37;
    }
LABEL_14:
    swift_release();
    v80 = v308;
    if (v308 != v306)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  v156 = v345;
LABEL_59:
  v325 = (_QWORD *)type metadata accessor for FeedGroupRegion();
  *((_QWORD *)&v338 + 1) = v325;
  v324 = sub_1BA4A2870((unint64_t *)&qword_1ED3C5220, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupRegion, (uint64_t)&protocol conformance descriptor for FeedGroupRegion);
  *(_QWORD *)&v339 = v324;
  *(_QWORD *)&v337 = v78;
  v157 = (_QWORD *)((char *)v299 + *(_QWORD *)(*v299 + 160));
  swift_beginAccess();
  v326 = *(double *)&v157;
  v158 = *v157;
  swift_retain();
  swift_bridgeObjectRetain();
  v159 = (uint64_t)v289;
  sub_1BB86D624();
  v160 = (uint64_t)v288;
  sub_1BB86DA44();
  *(_QWORD *)&v327[8] = *(_QWORD *)(v287 + 8);
  (*(void (**)(uint64_t, uint64_t))&v327[8])(v159, v291);
  LOBYTE(v333) = 2;
  swift_bridgeObjectRetain();
  v161 = (uint64_t)v156;
  v162 = v293;
  v345 = (__int128 *)v161;
  sub_1BA6A4D08(&v337, v158, 0, v160, (unsigned __int8 *)&v333, v161, (uint64_t)v293);
  sub_1BB86D624();
  v163 = v78[10];
  v164 = v78[11];
  v165 = v78[12];
  *(_QWORD *)&v337 = v163;
  *((_QWORD *)&v337 + 1) = v164;
  *(_QWORD *)&v338 = v165;
  sub_1BA6A4928(v163);
  v166 = GroupLayoutInventory.layouts(column:kind:)(v159, (uint64_t *)&v337);
  v323 = v163;
  sub_1BA6A32E0(v163);
  v167 = v166;
  (*(void (**)(uint64_t, uint64_t))&v327[8])(v159, v291);
  v168 = v162;
  v169 = (uint64_t)v162;
  v170 = v297;
  sub_1BB709A14((uint64_t)v304, v166, v169, (uint64_t)v297, (uint64_t)&v337);
  *(_QWORD *)&v327[8] = v337;
  if ((_QWORD)v337)
  {
    v333 = v337;
    v334 = v338;
    v335 = v339;
    v336 = v340;
    *(_DWORD *)v327 = 1;
  }
  else
  {
    v171 = sub_1BA6ED6EC((uint64_t)&v337, (uint64_t)&qword_1ED3BC758, (uint64_t)&type metadata for FeedLayoutSolverResult, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
    *(_QWORD *)v327 = v273;
    MEMORY[0x1E0C80A78](v171);
    v271 = v170;
    v272 = 0;
    v172 = v298;
    v173 = sub_1BA7C139C((void (*)(__int128 *__return_ptr, uint64_t))sub_1BA7C1508, (uint64_t)&v273[-32], v166);
    v298 = v172;
    v174 = v164;
    v175 = sub_1BB709E8C(v173, (uint64_t)v293, (uint64_t)v170);
    v177 = v176;
    v168 = v293;
    swift_bridgeObjectRelease();
    sub_1BB70A840(v175, (uint64_t)&v334);
    *(_DWORD *)v327 = 0;
    *(_QWORD *)&v333 = v175;
    v164 = v174;
    *((_QWORD *)&v333 + 1) = v177;
  }
  sub_1BA6A4404((uint64_t)&v334, (uint64_t)&v337, &qword_1ED3B8010, (unint64_t *)&unk_1ED3B8000, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType);
  if (!*((_QWORD *)&v338 + 1))
  {
    sub_1BA65DBBC((uint64_t)&v337, &qword_1ED3B8010, (unint64_t *)&unk_1ED3B8000, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType);
    sub_1BB074B08();
    v213 = v290;
    v214 = (uint64_t)v290 + *(int *)(v212 + 80);
    v215 = *((void (**)(_QWORD, _QWORD, _QWORD))v313 + 5);
    *(_QWORD *)&v327[8] = v313[4];
    v326 = *(double *)&v215;
    *v290 = *(double *)&v327[8];
    v213[1] = *(double *)&v215;
    v216 = v323;
    *((_QWORD *)v213 + 2) = v323;
    *((_QWORD *)v213 + 3) = v164;
    *((_QWORD *)v213 + 4) = v165;
    *((_QWORD *)v213 + 5) = v167;
    v217 = *((_QWORD *)&v333 + 1);
    *((_QWORD *)v213 + 6) = v333;
    *((_QWORD *)v213 + 7) = v217;
    sub_1BA4C2DD8((uint64_t)v168, v214, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    swift_storeEnumTagMultiPayload();
    v218 = *(_QWORD *)((char *)v299 + *(_QWORD *)(*v299 + 168));
    sub_1BA6A4928(v216);
    v219 = v326;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v220 = sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v221 = swift_allocObject();
    *(_OWORD *)(v221 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v221 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v221 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v221 + 32) = *(_QWORD *)&v327[8];
    *(double *)(v221 + 40) = v219;
    swift_bridgeObjectRetain();
    sub_1BB86EF44("Failed to bind any layouts for group %{public}@", 47, 2, &dword_1BA493000, v218, v220, v221);
    swift_bridgeObjectRelease();
    v222 = v280;
    sub_1BA4C2DD8((uint64_t)v213, (uint64_t)v280, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewModel);
    v223 = v279;
    sub_1BA4C2DD8((uint64_t)v293, (uint64_t)v279, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    v224 = v297;
    v225 = v278;
    sub_1BA4C2DD8((uint64_t)v297, (uint64_t)v278, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    _s13InternalErrorCMa();
    swift_allocObject();
    v326 = COERCE_DOUBLE(sub_1BB691464((uint64_t)v222, (uint64_t)v223, (uint64_t)v225));
    sub_1BB690E1C((uint64_t)v224, (uint64_t)&v337);
    v114 = (__int128 *)v313;
    v38 = *((double *)&v337 + 1);
    v4 = *((double *)&v338 + 1);
    v40 = *(double *)&v338;
    v5 = *(double *)&v339;
    v123 = v340;
    v226 = v313[8];
    v227 = *(_QWORD *)(v226 + 16);
    v124 = MEMORY[0x1E0DEE9D8];
    if (v227)
    {
      v322 = (void (*)(__int128 *__return_ptr, __int128 *, __int128 *, _QWORD *, uint64_t, _QWORD, uint64_t))*((_QWORD *)&v339 + 1);
      v323 = v340;
      *(_QWORD *)&v337 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BA6A4CDC(0, v227, 0);
      v228 = *(unsigned __int8 *)(v276 + 80);
      v321 = v226;
      v229 = v226 + ((v228 + 32) & ~v228);
      *(_QWORD *)&v327[8] = *(_QWORD *)(v276 + 72);
      v117 = v337;
      do
      {
        v230 = v301;
        sub_1BA4C2DD8(v229, (uint64_t)v301, type metadata accessor for FeedItem);
        v231 = swift_allocObject();
        FeedItem.identifier.getter();
        *(_QWORD *)(v231 + 16) = v232;
        *(_QWORD *)(v231 + 24) = v233;
        sub_1BA4A2E80((uint64_t)v230, type metadata accessor for FeedItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA6A4CDC(0, *(_QWORD *)(v117 + 16) + 1, 1);
          v117 = v337;
        }
        v235 = *(_QWORD *)(v117 + 16);
        v234 = *(_QWORD *)(v117 + 24);
        if (v235 >= v234 >> 1)
        {
          sub_1BA6A4CDC(v234 > 1, v235 + 1, 1);
          v117 = v337;
        }
        *(_QWORD *)(v117 + 16) = v235 + 1;
        *(_QWORD *)(v117 + 8 * v235 + 32) = v231;
        v229 += *(_QWORD *)&v327[8];
        --v227;
      }
      while (v227);
LABEL_79:
      swift_bridgeObjectRelease();
      v114 = (__int128 *)v313;
      v123 = v323;
      v124 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
LABEL_87:
      v117 = v124;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v248 = (_QWORD *)((char *)v299 + *(_QWORD *)(*v299 + 144));
    v249 = v248[3];
    v250 = v248[4];
    *(_QWORD *)&v327[8] = __swift_project_boxed_opaque_existential_1(v248, v249);
    *(_QWORD *)&v339 = v324;
    *((_QWORD *)&v338 + 1) = v325;
    *(_QWORD *)&v337 = v114;
    sub_1BA50CAA8(0, &qword_1EF2CB008, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver.Errors);
    v252 = v251;
    v253 = sub_1BB70E578();
    v345 = v252;
    v325 = (_QWORD *)v253;
    v254 = (void *)swift_allocError();
    *(double *)v255 = v38;
    *(double *)(v255 + 8) = v40;
    *(CGFloat *)(v255 + 16) = v4;
    *(CGFloat *)(v255 + 24) = v5;
    *(_QWORD *)(v255 + 32) = v117;
    *(_QWORD *)(v255 + 40) = v123;
    *(_QWORD *)(v255 + 48) = v124;
    *(_BYTE *)(v255 + 56) = v327[0];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain();
    v256 = v281;
    sub_1BB77E2D0((uint64_t)v290, 0, v281);
    v257 = v123;
    v258 = sub_1BB78002C();
    v260 = v259;
    (*(void (**)(uint64_t *, uint64_t))(v282 + 8))(v256, v283);
    *(_QWORD *)&v329 = v254;
    *((_QWORD *)&v329 + 1) = v258;
    v330 = v260;
    (*(void (**)(__int128 *, __int128 *, uint64_t, uint64_t))(v250 + 8))(&v337, &v329, v249, v250);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v337);
    v261 = v300[1];
    v262 = *((_QWORD *)v300 + 2);
    v263 = *((_BYTE *)v300 + 24);
    if ((v263 & 1) != 0)
    {
      v264 = *(_QWORD *)v300;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v265 = v300;
      v266 = v302;
    }
    else
    {
      v348.origin.x = v38;
      v348.origin.y = v40;
      v348.size.width = v4;
      v348.size.height = v5;
      v267 = CGRectGetHeight(v348);
      v268 = *(_QWORD *)(v117 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v133 = __OFADD__(v262, v268);
      v262 += v268;
      v266 = v302;
      if (v133)
        goto LABEL_100;
      v264 = 0;
      v261 = v267 + v261;
      v265 = v300;
    }
    v269 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)v265 = v264;
    v265[1] = v261;
    *((_QWORD *)v265 + 2) = v262;
    *((_BYTE *)v265 + 24) = v263;
    swift_allocError();
    *(double *)v270 = v38;
    *(double *)(v270 + 8) = v40;
    *(CGFloat *)(v270 + 16) = v4;
    *(CGFloat *)(v270 + 24) = v5;
    *(_QWORD *)(v270 + 32) = v117;
    *(_QWORD *)(v270 + 40) = v257;
    *(_QWORD *)(v270 + 48) = v269;
    *(_BYTE *)(v270 + 56) = v327[0];
    swift_willThrow();
    swift_release();
    swift_release();
    sub_1BA4A2E80((uint64_t)v290, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewModel);
    sub_1BA6A6CAC((uint64_t)&v333);
    sub_1BA4A2E80((uint64_t)v293, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    sub_1BA4A2E80((uint64_t)v297, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA4A2E80((uint64_t)v304, (uint64_t (*)(_QWORD))type metadata accessor for FeedLayoutCacheKey);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v295 + 8))(v303, v266);
  }
  swift_bridgeObjectRelease();
  sub_1BA4CECCC(&v337, (uint64_t)&v329);
  __swift_project_boxed_opaque_existential_1(&v329, v331);
  v178 = sub_1BB86DEE8();
  v180 = v179;
  v181 = v326;
  swift_beginAccess();
  v182 = **(_QWORD **)&v181;
  if (*(_QWORD *)(**(_QWORD **)&v181 + 16) && (v183 = sub_1BA6E35A8(v178, v180), (v184 & 1) != 0))
    v185 = *(_QWORD *)(*(_QWORD *)(v182 + 56) + 8 * v183);
  else
    v185 = 0;
  swift_endAccess();
  if (v185 == -1)
    goto LABEL_98;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v186 = swift_isUniquelyReferenced_nonNull_native();
  v328 = **(_QWORD **)&v181;
  **(_QWORD **)&v181 = 0x8000000000000000;
  sub_1BA6A3E18(v185 + 1, v178, v180, v186);
  **(_QWORD **)&v181 = v328;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  v187 = *(_QWORD *)((char *)v299 + *(_QWORD *)(*v299 + 168));
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v188 = swift_allocObject();
  *(_OWORD *)(v188 + 16) = xmmword_1BB87A390;
  v189 = v313;
  v191 = v313[4];
  v190 = v313[5];
  v192 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v188 + 56) = MEMORY[0x1E0DEA968];
  v193 = sub_1BA6A2D8C();
  *(_QWORD *)(v188 + 64) = v193;
  *(_QWORD *)(v188 + 32) = v191;
  *(_QWORD *)(v188 + 40) = v190;
  __swift_project_boxed_opaque_existential_1(&v329, v331);
  swift_bridgeObjectRetain();
  v194 = sub_1BB86DEE8();
  *(_QWORD *)(v188 + 96) = v192;
  *(_QWORD *)(v188 + 104) = v193;
  *(_QWORD *)(v188 + 72) = v194;
  *(_QWORD *)(v188 + 80) = v195;
  v196 = sub_1BB87330C();
  sub_1BB86EF44("Best layout for group %{public}@, layout=%{public}@", 51, 2, &dword_1BA493000, v187, v196, v188);
  swift_bridgeObjectRelease();
  v197 = v331;
  v198 = v332;
  __swift_project_boxed_opaque_existential_1(&v329, v331);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v198 + 32))(v344, v197, v198);
  v199 = *(double *)&v344[1];
  v200 = *(double *)&v344[2];
  v201 = *(double *)&v344[3];
  v202 = *(double *)&v344[4];
  sub_1BA6A5B0C((uint64_t)v344);
  v203 = swift_bridgeObjectRetain();
  v204 = v298;
  v205 = sub_1BB70CBA0(v203, (uint64_t)v344);
  v298 = v204;
  sub_1BA6A4460((uint64_t)v344);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v206 = v344[6];
  sub_1BA6A4404(v285, (uint64_t)&v337, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
  v207 = *((_QWORD *)&v338 + 1);
  if (*((_QWORD *)&v338 + 1))
  {
    v208 = v339;
    __swift_project_boxed_opaque_existential_1(&v337, *((uint64_t *)&v338 + 1));
    LOBYTE(v328) = v274;
    v209 = v189[30];
    v210 = *(uint64_t (**)(uint64_t, char *, uint64_t *, uint64_t, uint64_t, uint64_t, double, double, double, double))(v208 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v211 = v210(v284, v292, &v328, v209, v207, v208, v199, v200, v201, v202);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v337);
    sub_1BA6A4460((uint64_t)v344);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA65DBBC((uint64_t)&v337, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
    sub_1BA6A4460((uint64_t)v344);
    v211 = MEMORY[0x1E0DEE9D8];
  }
  v236 = v303;
  v237 = *(_QWORD *)&v327[8] == 0;
  v238 = v299[12];
  v239 = v299[13];
  __swift_project_boxed_opaque_existential_1(v275, v238);
  *(double *)&v337 = v199;
  *((double *)&v337 + 1) = v200;
  *(double *)&v338 = v201;
  *((double *)&v338 + 1) = v202;
  *(_QWORD *)&v339 = v205;
  *((_QWORD *)&v339 + 1) = v206;
  v340 = v211;
  LOBYTE(v341) = v327[0];
  (*(void (**)(_BYTE *, __int128 *, __int128 *, _BOOL8, uint64_t, uint64_t))(v239 + 32))(v304, &v329, &v337, v237, v238, v239);
  v240 = v300;
  v241 = v300[1];
  v242 = *((_QWORD *)v300 + 2);
  v243 = *((_BYTE *)v300 + 24);
  if ((v243 & 1) != 0)
  {
    v244 = *(_QWORD *)v300;
    swift_release();
    goto LABEL_85;
  }
  v347.origin.x = v199;
  v347.origin.y = v200;
  v347.size.width = v201;
  v347.size.height = v202;
  v245 = CGRectGetHeight(v347);
  v246 = *(_QWORD *)(v205 + 16);
  swift_release();
  v133 = __OFADD__(v242, v246);
  v242 += v246;
  if (v133)
    goto LABEL_99;
  v244 = 0;
  v241 = v245 + v241;
  v240 = v300;
LABEL_85:
  sub_1BA6A6CAC((uint64_t)&v333);
  sub_1BA4A2E80((uint64_t)v293, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA4A2E80((uint64_t)v297, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4A2E80((uint64_t)v304, (uint64_t (*)(_QWORD))type metadata accessor for FeedLayoutCacheKey);
  (*(void (**)(_BYTE *, uint64_t))(v295 + 8))(v236, v302);
  *(_QWORD *)v240 = v244;
  v240[1] = v241;
  *((_QWORD *)v240 + 2) = v242;
  *((_BYTE *)v240 + 24) = v243;
  v247 = v294;
  *v294 = v199;
  v247[1] = v200;
  v247[2] = v201;
  v247[3] = v202;
  *((_QWORD *)v247 + 4) = v205;
  *((_QWORD *)v247 + 5) = v206;
  *((_QWORD *)v247 + 6) = v211;
  *((_BYTE *)v247 + 56) = v327[0];
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v329);
}

uint64_t sub_1BB708714@<X0>(unint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X5>, double *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  double *v16;
  double width;
  uint64_t v18;
  double height;
  double x;
  double y;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unsigned __int8 *v45;
  uint64_t v46;
  int v47;
  int v48;
  BOOL v49;
  unsigned int v50;
  double *v51;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  double *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;

  v8 = sub_1BB86D660();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v62 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86D7A4();
  v60 = *(_QWORD *)(v11 - 8);
  v61 = v11;
  MEMORY[0x1E0C80A78](v11);
  v59 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB708D1C(a1);
  v14 = v13;
  v15 = v13[2];
  v56 = a4;
  v57 = v9;
  v58 = v8;
  v55 = a3;
  if (v15)
  {
    v54 = a1;
    v16 = (double *)(v13 + 10);
    width = 0.0;
    v18 = v15;
    height = 0.0;
    x = 0.0;
    y = 0.0;
    do
    {
      v23 = *(v16 - 6);
      v22 = *(v16 - 5);
      v25 = *(v16 - 4);
      v24 = *(v16 - 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71.origin.x = 0.0;
      v71.origin.y = 0.0;
      v71.size.width = 0.0;
      v71.size.height = 0.0;
      v69.origin.x = x;
      v69.origin.y = y;
      v69.size.width = width;
      v69.size.height = height;
      if (CGRectEqualToRect(v69, v71))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        x = v23;
        y = v22;
        width = v25;
        height = v24;
      }
      else
      {
        v67.origin.x = x;
        v67.origin.y = y;
        v67.size.width = width;
        v67.size.height = height;
        v70.origin.x = v23;
        v70.origin.y = v22;
        v70.size.width = v25;
        v70.size.height = v24;
        v68 = CGRectUnion(v67, v70);
        x = v68.origin.x;
        y = v68.origin.y;
        width = v68.size.width;
        height = v68.size.height;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v16 += 8;
      --v18;
    }
    while (v18);
    v26 = a2;
    swift_bridgeObjectRetain();
    v27 = MEMORY[0x1E0DEE9D8];
    v28 = 64;
    v29 = v15;
    do
    {
      v64[0] = v27;
      swift_bridgeObjectRetain();
      v30 = swift_bridgeObjectRetain();
      sub_1BA66C470(v30);
      swift_bridgeObjectRelease();
      v27 = v64[0];
      v28 += 64;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v31 = MEMORY[0x1E0DEE9D8];
    v32 = 72;
    v33 = v15;
    v9 = v57;
    do
    {
      v64[0] = v31;
      swift_bridgeObjectRetain();
      v34 = swift_bridgeObjectRetain();
      sub_1BA66C45C(v34);
      swift_bridgeObjectRelease();
      v31 = v64[0];
      v32 += 64;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v8 = v58;
    a1 = v54;
  }
  else
  {
    v26 = a2;
    x = 0.0;
    v31 = MEMORY[0x1E0DEE9D8];
    v27 = MEMORY[0x1E0DEE9D8];
    y = 0.0;
    width = 0.0;
    height = 0.0;
  }
  sub_1BA6A4404(v26, (uint64_t)v64, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
  v35 = v65;
  if (!v65)
  {
    sub_1BA65DBBC((uint64_t)v64, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
    v41 = MEMORY[0x1E0DEE9D8];
    if (v15)
      goto LABEL_29;
    goto LABEL_23;
  }
  v53 = v66;
  v52 = __swift_project_boxed_opaque_existential_1(v64, v65);
  v36 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v36 + *(_QWORD *)(*(_QWORD *)v36 + 120), v61);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v62, v36 + *(_QWORD *)(*(_QWORD *)v36 + 112), v8);
  v63 = *(_BYTE *)(v36 + *(_QWORD *)(*(_QWORD *)v36 + 176));
  if (a1 >> 62)
  {
LABEL_49:
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v37 = result;
  }
  else
  {
    v37 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v54 = v35;
  if (!v37)
  {
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x1E0DEE9E8];
    goto LABEL_28;
  }
  if (v37 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v39 = 0;
      v35 = MEMORY[0x1E0DEE9E8];
      do
      {
        MEMORY[0x1BCCE4630](v39++, a1);
        swift_bridgeObjectRetain();
        v40 = swift_bridgeObjectRetain();
        v35 = sub_1BA6E4124(v40, v35);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      while (v37 != v39);
    }
    else
    {
      v42 = 0;
      v35 = MEMORY[0x1E0DEE9E8];
      do
      {
        ++v42;
        swift_bridgeObjectRetain();
        v43 = swift_bridgeObjectRetain();
        v35 = sub_1BA6E4124(v43, v35);
        swift_bridgeObjectRelease();
      }
      while (v37 != v42);
    }
    swift_bridgeObjectRelease();
    v9 = v57;
    v8 = v58;
LABEL_28:
    a1 = (unint64_t)v59;
    v44 = v62;
    v41 = (*(uint64_t (**)(char *, char *, char *, uint64_t, unint64_t, double, double, double, double))(v53 + 8))(v59, v62, &v63, v35, v54, x, y, width, height);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v44, v8);
    (*(void (**)(unint64_t, uint64_t))(v60 + 8))(a1, v61);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    if (v15)
    {
LABEL_29:
      v45 = (unsigned __int8 *)(v14 + 11);
      sub_1BA66CF04();
      LOBYTE(v8) = 2;
      v46 = 1;
      while (1)
      {
        v48 = *v45;
        v45 += 64;
        v47 = v48;
        v49 = v48 == 1 || v8 == 1;
        v50 = v49 ? 1 : 2;
        v8 = v47 ? v50 : 0;
        if (v15 == v46)
          goto LABEL_47;
        if (__OFADD__(v46, 1))
        {
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        ++v46;
        if (!v47)
        {
          while (v15 != v46)
          {
            if (__OFADD__(v46, 1))
              goto LABEL_48;
            ++v46;
          }
          LOBYTE(v8) = 0;
          goto LABEL_47;
        }
      }
    }
LABEL_23:
    LOBYTE(v8) = 2;
LABEL_47:
    result = swift_bridgeObjectRelease();
    v51 = v56;
    *v56 = x;
    v51[1] = y;
    v51[2] = width;
    v51[3] = height;
    *((_QWORD *)v51 + 4) = v27;
    *((_QWORD *)v51 + 5) = v31;
    *((_QWORD *)v51 + 6) = v41;
    *((_BYTE *)v51 + 56) = v8;
    return result;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB708D1C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  CGFloat *v17;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __int128 v22;
  _OWORD v23[2];
  uint64_t v24;
  CGFloat v25[4];
  __int128 v26;
  uint64_t v27;
  char v28;

  v2 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v2);
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v21 = a1 & 0xC000000000000001;
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v5 = 4;
      v20 = a1;
      v19 = v3;
      while (1)
      {
        v6 = v5 - 4;
        if (v21)
        {
          v7 = (_QWORD *)MEMORY[0x1BCCE4630](v5 - 4, a1);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_16;
        }
        else
        {
          v7 = *(_QWORD **)(a1 + 8 * v5);
          swift_retain();
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_16:
            __break(1u);
            __break(1u);
            goto LABEL_17;
          }
        }
        v24 = 0;
        memset(v23, 0, sizeof(v23));
        swift_retain();
        sub_1BB706C60(v7, (uint64_t)v23, v25);
        swift_release();
        sub_1BA65DBBC((uint64_t)v23, &qword_1ED3B2800, (unint64_t *)&unk_1ED3B27F0, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
        v9 = v25[0];
        v10 = v25[1];
        v11 = v25[2];
        v12 = v25[3];
        v22 = v26;
        v13 = v27;
        v14 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_1BA66CEF0(0, v4[2] + 1, 1, v4);
        v16 = v4[2];
        v15 = v4[3];
        if (v16 >= v15 >> 1)
          v4 = sub_1BA66CEF0((_QWORD *)(v15 > 1), v16 + 1, 1, v4);
        v4[2] = v16 + 1;
        v17 = (CGFloat *)&v4[8 * v16];
        v17[4] = v9;
        v17[5] = v10;
        v17[6] = v11;
        v17[7] = v12;
        *((_OWORD *)v17 + 4) = v22;
        *((_QWORD *)v17 + 10) = v13;
        *((_BYTE *)v17 + 88) = v14;
        swift_release();
        a1 = v20;
        ++v5;
        if (v8 == v19)
        {
          swift_bridgeObjectRelease();
          return v4;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB709618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void (*a4)(__int128 *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t *v40;
  uint64_t v41;
  _BYTE v43[4];
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(__int128 *);
  _BYTE *v53;
  __int128 v54[2];
  unsigned __int16 v55;
  char v56;
  __int128 v57[2];
  unsigned __int16 v58;
  unsigned __int16 v59;
  __int128 v60[2];
  _BYTE v61[56];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;

  v7 = v6;
  v51 = a5;
  v52 = a4;
  v44 = a3;
  v45 = a2;
  v46 = a1;
  v50 = a6;
  v49 = *(_QWORD *)v6;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v43[-v9];
  v11 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v53 = &v43[-v15];
  v16 = sub_1BB86D7A4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = &v43[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v47 = v19;
  v20 = sub_1BB86D660();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = &v43[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v48 = v23;
  sub_1BACD457C((uint64_t)(v7 + 16), (uint64_t)v61);
  sub_1BA4C010C((uint64_t)(v7 + 72), (uint64_t)v60);
  (*(void (**)(_BYTE *, char *, uint64_t))(v21 + 16))(v23, &v7[*(_QWORD *)(*(_QWORD *)v7 + 112)], v20);
  (*(void (**)(_BYTE *, char *, uint64_t))(v17 + 16))(v19, &v7[*(_QWORD *)(*(_QWORD *)v7 + 120)], v16);
  sub_1BA4C2DD8((uint64_t)&v7[*(_QWORD *)(*(_QWORD *)v7 + 128)], (uint64_t)v13, type metadata accessor for FeedLayoutSolverOptions);
  v24 = v45;
  v25 = v46;
  if ((v44 & 1) != 0)
  {
    v24 = 0;
    v25 = 0;
  }
  *(_QWORD *)&v62 = v25;
  *((_QWORD *)&v62 + 1) = v24;
  LOWORD(v63) = 0;
  v56 = 0;
  v55 = 2;
  v59 = 2;
  v58 = 2;
  *(_QWORD *)&v54[0] = 2;
  v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 1, 1, v26);
  *(_QWORD *)&v57[0] = 0;
  BYTE8(v57[0]) = 1;
  FeedLayoutSolverOptions.with(cursorTracking:headlineOptions:categoryOptions:coverOptions:issueStripOptions:pluginOptions:traits:)((uint64_t *)&v62, &v55, &v59, &v58, (unint64_t *)v54, (uint64_t)v10, (uint64_t)v57, (uint64_t)v53);
  sub_1BA6ED6EC((uint64_t)v10, (uint64_t)&qword_1ED3D24E0, (uint64_t)type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FeedLayoutSolverOptions);
  v27 = *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 136)];
  sub_1BA4C010C((uint64_t)&v7[*(_QWORD *)(*(_QWORD *)v7 + 144)], (uint64_t)v57);
  v28 = *(void **)&v7[*(_QWORD *)(*(_QWORD *)v7 + 168)];
  v29 = (uint64_t *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 160)];
  swift_beginAccess();
  v30 = *v29;
  v31 = *(_QWORD *)v7;
  v32 = *(_QWORD *)(*(_QWORD *)v7 + 184);
  v33 = v7[*(_QWORD *)(*(_QWORD *)v7 + 176)];
  v34 = *(_OWORD *)&v7[v32 + 48];
  v64 = *(_OWORD *)&v7[v32 + 32];
  v65 = v34;
  v66 = *(_OWORD *)&v7[v32 + 64];
  v35 = *(_OWORD *)&v7[v32 + 16];
  v62 = *(_OWORD *)&v7[v32];
  v63 = v35;
  sub_1BA4C010C((uint64_t)&v7[*(_QWORD *)(v31 + 192)], (uint64_t)v54);
  v36 = (uint64_t *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 200)];
  v38 = *v36;
  v37 = v36[1];
  swift_allocObject();
  swift_retain();
  v39 = v28;
  swift_bridgeObjectRetain();
  sub_1BA653910((uint64_t)&v62);
  swift_bridgeObjectRetain();
  *(_QWORD *)&v60[0] = sub_1BB706A3C((uint64_t)v61, v60, (uint64_t)v48, (uint64_t)v47, (uint64_t)v53, v27, v57, (uint64_t)v39, v30, v33, &v62, v54, v38, v37);
  v52(v60);
  v40 = (uint64_t *)(*(_QWORD *)&v60[0] + *(_QWORD *)(**(_QWORD **)&v60[0] + 160));
  swift_beginAccess();
  v41 = *v40;
  swift_bridgeObjectRetain();
  swift_release();
  *v29 = v41;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB709A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v6 = v5;
  v12 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v6[12];
  v16 = v6[13];
  __swift_project_boxed_opaque_existential_1(v6 + 9, v15);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(a1, v15, v16);
  if (v18)
  {
    v19 = v18;
    v40 = a4;
    *(_QWORD *)&v41 = v14;
    v20 = a3;
    v21 = *(_QWORD *)(a2 + 16);
    if (v21)
    {
      v22 = result;
      v23 = a2 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BA4C010C(v23, (uint64_t)&v42);
        __swift_project_boxed_opaque_existential_1(&v42, v43);
        if (sub_1BB86DEE8() == v22 && v19 == v24)
          break;
        v26 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v26 & 1) != 0)
          goto LABEL_13;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
        v23 += 40;
        if (!--v21)
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      sub_1BA4CECCC(&v42, (uint64_t)&v44);
    }
    else
    {
LABEL_11:
      v46 = 0;
      v44 = 0u;
      v45 = 0u;
    }
    swift_bridgeObjectRelease();
    v27 = v20;
    v28 = v41;
    if (*((_QWORD *)&v45 + 1))
    {
      sub_1BA4CECCC(&v44, (uint64_t)v47);
      v29 = *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 168));
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v30 = swift_allocObject();
      v41 = xmmword_1BB87CE70;
      *(_OWORD *)(v30 + 16) = xmmword_1BB87CE70;
      __swift_project_boxed_opaque_existential_1(v47, v48);
      v31 = sub_1BB86DEE8();
      v33 = v32;
      *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v30 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v30 + 32) = v31;
      *(_QWORD *)(v30 + 40) = v33;
      v34 = sub_1BB87330C();
      sub_1BB86EF44("Found layout for fast cache path, layout=%{public}@", 51, 2, &dword_1BA493000, v29, v34, v30);
      swift_bridgeObjectRelease();
      sub_1BA4C2DD8(v27, v28, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      v35 = v48;
      v36 = v49;
      __swift_project_boxed_opaque_existential_1(v47, v48);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 48))(&v44, v28, v40, v35, v36);
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3B9F60, (unint64_t *)&unk_1ED3B8000, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v41;
      sub_1BA4C010C((uint64_t)&v44, v37 + 32);
      sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      sub_1BA4CECCC(&v44, a5 + 16);
      v38 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)a5 = v37;
      *(_QWORD *)(a5 + 8) = v38;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    }
    result = sub_1BA65DBBC((uint64_t)&v44, (unint64_t *)&unk_1ED3B6FD0, (unint64_t *)&qword_1ED3B6FC0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType);
  }
  *(_QWORD *)(a5 + 48) = 0;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)a5 = 0u;
  return result;
}

uint64_t sub_1BB709E8C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t result;
  _QWORD v76[2];
  unint64_t v77;
  _QWORD *v78;
  char *v79;
  _QWORD *v80;
  unint64_t v81;
  _QWORD *v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88[2];
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  unsigned __int8 v92[24];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v86 = a3;
  v87 = a2;
  v95 = *MEMORY[0x1E0C80C00];
  v5 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[2];
  v79 = v7;
  if (v8)
  {
    *(_QWORD *)&v83 = v3;
    v84 = v5;
    v9 = (uint64_t)(a1 + 4);
    v82 = a1;
    swift_bridgeObjectRetain();
    v78 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v85 = xmmword_1BB87CE70;
    do
    {
      sub_1BA4C010C(v9, (uint64_t)&v89);
      v11 = v90;
      v12 = v91;
      __swift_project_boxed_opaque_existential_1(&v89, v90);
      (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(v12 + 32))(v92, v11, v12);
      v13 = v78;
      if (v78[2])
      {
        v14 = sub_1BA7C25B0(v92[0]);
        v15 = MEMORY[0x1E0DEE9D8];
        if ((v16 & 1) != 0)
        {
          v15 = *(_QWORD *)(v13[7] + 8 * v14);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        v15 = MEMORY[0x1E0DEE9D8];
      }
      v17 = v90;
      v18 = v91;
      __swift_project_boxed_opaque_existential_1(&v89, v90);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v18 + 32))(v88, v17, v18);
      v19 = LOBYTE(v88[0]);
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v85;
      sub_1BA4C010C((uint64_t)&v89, inited + 32);
      *(_QWORD *)v92 = v15;
      sub_1BA7C29F8(inited);
      v21 = *(_QWORD *)v92;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v92 = v13;
      v24 = sub_1BA7C25B0(v19);
      v25 = v13[2];
      v26 = (v23 & 1) == 0;
      v27 = v25 + v26;
      if (__OFADD__(v25, v26))
        goto LABEL_41;
      v28 = v23;
      if (v13[3] >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C9DC8();
      }
      else
      {
        sub_1BA7C2DF4(v27, isUniquelyReferenced_nonNull_native);
        v29 = sub_1BA7C25B0(v19);
        if ((v28 & 1) != (v30 & 1))
        {
          result = sub_1BB874560();
          __break(1u);
          return result;
        }
        v24 = v29;
      }
      v31 = *(_QWORD **)v92;
      v78 = *(_QWORD **)v92;
      if ((v28 & 1) != 0)
      {
        v10 = *(_QWORD *)(*(_QWORD *)v92 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v10 + 8 * v24) = v21;
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)v92 + 8 * (v24 >> 6) + 64) |= 1 << v24;
        *(_BYTE *)(v31[6] + v24) = v19;
        *(_QWORD *)(v31[7] + 8 * v24) = v21;
        v32 = v31[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_42;
        v31[2] = v34;
      }
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
      v9 += 40;
      --v8;
      v7 = v79;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v5 = v84;
    v3 = v83;
  }
  else
  {
    v78 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v35 = *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 168));
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v84 = v36;
  v37 = swift_allocObject();
  v83 = xmmword_1BB87FC80;
  *(_OWORD *)(v37 + 16) = xmmword_1BB87FC80;
  v38 = v87;
  v39 = *(_QWORD *)(v87 + 32);
  v82 = (_QWORD *)(v87 + 8);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v87 + 8), v39);
  v40 = sub_1BB86DEE8();
  v42 = v41;
  *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
  v81 = sub_1BA6A2D8C();
  *(_QWORD *)(v37 + 64) = v81;
  *(_QWORD *)(v37 + 32) = v40;
  *(_QWORD *)(v37 + 40) = v42;
  v43 = *(_QWORD *)(*(_QWORD *)(v38 + *(int *)(v5 + 56)) + 16);
  v44 = MEMORY[0x1E0DEB418];
  v45 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v37 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v37 + 104) = v45;
  *(_QWORD *)(v37 + 72) = v43;
  v46 = *(_QWORD *)(*(_QWORD *)(v38 + 64) + 16);
  *(_QWORD *)(v37 + 136) = v44;
  *(_QWORD *)(v37 + 144) = v45;
  *(_QWORD *)(v37 + 112) = v46;
  v47 = sub_1BB87330C();
  *(_QWORD *)&v85 = v35;
  sub_1BB86EF44("Layout %{public}@ binding to layouts with %ld item bindings and %ld group bindings", 82, 2, &dword_1BA493000, v35, v47, v37);
  swift_bridgeObjectRelease();
  v48 = 0;
  v49 = &unk_1E7271000;
  v50 = v78;
  while (1)
  {
    if (v48 >= v49[110])
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
    }
    if (v50[2])
    {
      v51 = sub_1BA7C25B0(*((unsigned __int8 *)&unk_1E7271360 + v48 + 32));
      if ((v52 & 1) != 0)
        break;
    }
LABEL_21:
    if (++v48 == 4)
    {
      v74 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      goto LABEL_39;
    }
  }
  v53 = *(_QWORD *)(v50[7] + 8 * v51);
  v54 = *(_QWORD *)(v53 + 16);
  if (v54)
  {
    v77 = v48;
    v55 = v53 + 32;
    v76[1] = v53;
    swift_bridgeObjectRetain();
    v80 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1BA4C010C(v55, (uint64_t)v92);
      sub_1BA4C2DD8(v38, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      v56 = v7;
      v57 = v93;
      v58 = v94;
      __swift_project_boxed_opaque_existential_1(v92, v93);
      (*(void (**)(__int128 *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v58 + 48))(&v89, v56, v86, v57, v58);
      sub_1BA4C010C((uint64_t)&v89, (uint64_t)v88);
      v59 = v80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v59 = sub_1BA7C2A14(0, v59[2] + 1, 1, v59);
      v61 = v59[2];
      v60 = v59[3];
      if (v61 >= v60 >> 1)
        v59 = sub_1BA7C2A14((_QWORD *)(v60 > 1), v61 + 1, 1, v59);
      v59[2] = v61 + 1;
      v80 = v59;
      sub_1BA4CECCC(v88, (uint64_t)&v59[5 * v61 + 4]);
      v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = v83;
      __swift_project_boxed_opaque_existential_1(v82, *(_QWORD *)(v38 + 32));
      v63 = sub_1BB86DEE8();
      v64 = MEMORY[0x1E0DEA968];
      v65 = v81;
      *(_QWORD *)(v62 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v62 + 64) = v65;
      *(_QWORD *)(v62 + 32) = v63;
      *(_QWORD *)(v62 + 40) = v66;
      v68 = v90;
      v67 = v91;
      __swift_project_boxed_opaque_existential_1(&v89, v90);
      v69 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v67 + 16))(v68, v67) + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v62 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v62 + 104) = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v62 + 72) = v69;
      __swift_project_boxed_opaque_existential_1(v92, v93);
      v38 = v87;
      v70 = sub_1BB86DEE8();
      *(_QWORD *)(v62 + 136) = v64;
      *(_QWORD *)(v62 + 144) = v65;
      *(_QWORD *)(v62 + 112) = v70;
      *(_QWORD *)(v62 + 120) = v71;
      v72 = sub_1BB87330C();
      sub_1BB86EF44("Layout %{public}@ successfully bound items(%ld) for %{public}@", 62, 2, &dword_1BA493000, (_QWORD)v85, v72, v62);
      swift_bridgeObjectRelease();
      v7 = v79;
      sub_1BA4A2E80((uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
      v55 += 40;
      --v54;
    }
    while (v54);
    swift_bridgeObjectRelease();
    v50 = v78;
    v48 = v77;
    v49 = (_QWORD *)&unk_1E7271000;
    v73 = v80;
  }
  else
  {
    v73 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if (!v73[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v74 = v73;
LABEL_39:
  swift_bridgeObjectRelease();
  return (uint64_t)v74;
}

uint64_t sub_1BB70A840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  if (*(_QWORD *)(a1 + 16) == 1)
    return sub_1BA4C010C(a1 + 32, a2);
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1ED3B8000);
  v4 = (_QWORD *)sub_1BB872DE4();
  sub_1BA7C0BC4((uint64_t)v4, v4);
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v6 = swift_bridgeObjectRetain();
  sub_1BA618D9C(v6, v5);
  swift_bridgeObjectRelease_n();
  v7 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 16))
  {
    sub_1BA4C010C(v7 + 32, (uint64_t)v8);
  }
  else
  {
    v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  swift_bridgeObjectRelease();
  return sub_1BB70E6C8((uint64_t)v8, a2, &qword_1ED3B8010, (unint64_t *)&unk_1ED3B8000, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType);
}

uint64_t sub_1BB70A9D4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v3 = sub_1BB86DEE8();
  v5 = v4;
  v6 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 160));
  swift_beginAccess();
  v7 = *v6;
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_1BA6E35A8(v3, v5), (v9 & 1) != 0))
    v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
  else
    v10 = 0;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v10;
}

BOOL sub_1BB70AA88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedHeadline(0);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2) != 1;
}

uint64_t sub_1BB70AAD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - v5;
  sub_1BA5E01A4(a1, (uint64_t)&v9 - v5, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
  v7 = type metadata accessor for FeedHeadline(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if ((_DWORD)result != 1)
    return sub_1BA5193C4((uint64_t)v6, a2, type metadata accessor for FeedHeadline);
  __break(1u);
  return result;
}

uint64_t sub_1BB70ABA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)();
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  char *v16;
  uint64_t v17;
  void (*v18)(char *);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)();
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *);
  uint64_t (*v42)(uint64_t);
  _QWORD v43[5];
  uint64_t v44;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  MEMORY[0x1E0C80A78](v1);
  v37 = (char *)&v31 - v2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v36 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v31 - v6;
  sub_1BB70F0D0();
  v34 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB439520();
  sub_1BA4A2870(&qword_1EF2CB060, (uint64_t (*)(uint64_t))sub_1BB439520, MEMORY[0x1E0DB3DC0]);
  sub_1BB8730D8();
  v10 = v43[0];
  v44 = v43[0];
  sub_1BB873114();
  v11 = v43[0];
  v33 = v0;
  sub_1BA4C2DD8(v0, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB70F0D0);
  if (v10 == v11)
  {
LABEL_5:
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB70F0D0);
  }
  else
  {
    sub_1BB70F148(0);
    v32 = v12;
    v13 = sub_1BB70F0D0;
    v14 = (uint64_t)v35;
    while (1)
    {
      v15 = *(uint64_t (**)(uint64_t))&v9[*(int *)(v34 + 36)];
      v43[4] = v10;
      v16 = &v9[*(int *)(v32 + 44)];
      v18 = *(void (**)(char *))v16;
      v17 = *((_QWORD *)v16 + 1);
      v41 = v18;
      v42 = v15;
      v40 = v17;
      swift_retain();
      v19 = sub_1BB873198();
      v20 = v9;
      v22 = v38;
      v21 = v39;
      v23 = v13;
      v24 = v37;
      (*(void (**)(char *))(v38 + 16))(v37);
      ((void (*)(_QWORD *, _QWORD))v19)(v43, 0);
      v41(v24);
      v25 = *(void (**)(char *, uint64_t))(v22 + 8);
      v9 = v20;
      v26 = v24;
      v13 = v23;
      v25(v26, v21);
      v27 = v36;
      sub_1BA646EFC(v14, v36, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))v23);
      LOBYTE(v19) = v42(v27);
      swift_release();
      sub_1BA6ED6EC(v27, (uint64_t)&unk_1ED3B2DB0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      if ((v19 & 1) != 0)
        break;
      v28 = v33;
      sub_1BB873120();
      v10 = v44;
      sub_1BB873114();
      v29 = v43[0];
      sub_1BA4C2DD8(v28, (uint64_t)v9, (uint64_t (*)(_QWORD))v13);
      if (v10 == v29)
        goto LABEL_5;
    }
  }
  return v44;
}

uint64_t sub_1BB70AEE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)();
  uint64_t (*v10)(_BYTE *);
  char *v11;
  uint64_t v12;
  void (*v13)(_QWORD *__return_ptr, char *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)();
  char *v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *__return_ptr, char *);
  uint64_t (*v33)(_BYTE *);
  _BYTE v34[144];
  _QWORD v35[19];
  _BYTE v36[144];
  _QWORD v37[18];
  uint64_t v38;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v29 = *(_QWORD *)(v1 - 8);
  v30 = v1;
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v25 - v2;
  sub_1BB70F2B8();
  v27 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB439520();
  sub_1BA4A2870(&qword_1EF2CB060, (uint64_t (*)(uint64_t))sub_1BB439520, MEMORY[0x1E0DB3DC0]);
  sub_1BB8730D8();
  v6 = v37[0];
  v38 = v37[0];
  sub_1BB873114();
  v7 = v37[0];
  v26 = v0;
  sub_1BA4C2DD8(v0, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BB70F2B8);
  if (v6 == v7)
  {
LABEL_5:
    sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BB70F2B8);
  }
  else
  {
    sub_1BB70F330(0);
    v25 = v8;
    v9 = sub_1BB70F2B8;
    while (1)
    {
      v10 = *(uint64_t (**)(_BYTE *))&v5[*(int *)(v27 + 36)];
      v35[18] = v6;
      v11 = &v5[*(int *)(v25 + 44)];
      v13 = *(void (**)(_QWORD *__return_ptr, char *))v11;
      v12 = *((_QWORD *)v11 + 1);
      v32 = v13;
      v33 = v10;
      v31 = v12;
      swift_retain();
      v14 = sub_1BB873198();
      v15 = (uint64_t)v5;
      v17 = v29;
      v16 = v30;
      v18 = v9;
      v19 = v28;
      (*(void (**)(char *))(v29 + 16))(v28);
      ((void (*)(_QWORD *, _QWORD))v14)(v35, 0);
      v32(v35, v19);
      v20 = *(void (**)(char *, uint64_t))(v17 + 8);
      v5 = (char *)v15;
      v21 = v19;
      v9 = v18;
      v20(v21, v16);
      sub_1BA6A09F0((uint64_t)v35, (uint64_t)v36, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
      sub_1BA6A09F0((uint64_t)v36, (uint64_t)v34, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
      sub_1BA4A2E80(v15, (uint64_t (*)(_QWORD))v18);
      LOBYTE(v14) = v33(v34);
      swift_release();
      sub_1BA6A09F0((uint64_t)v34, (uint64_t)v37, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
      sub_1BA90EECC((uint64_t)v37);
      if ((v14 & 1) != 0)
        break;
      v22 = v26;
      sub_1BB873120();
      v6 = v38;
      sub_1BB873114();
      v23 = v37[0];
      sub_1BA4C2DD8(v22, (uint64_t)v5, (uint64_t (*)(_QWORD))v9);
      if (v6 == v23)
        goto LABEL_5;
    }
  }
  return v38;
}

uint64_t sub_1BB70B1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)();
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  char *v16;
  uint64_t v17;
  void (*v18)(char *);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)();
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *);
  uint64_t (*v42)(uint64_t);
  _QWORD v43[5];
  uint64_t v44;

  sub_1BA8676E0();
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  MEMORY[0x1E0C80A78](v1);
  v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v36 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v31 - v6;
  sub_1BB70E8B8();
  v34 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA867758();
  sub_1BA4A2870(&qword_1ED3A3998, (uint64_t (*)(uint64_t))sub_1BA867758, MEMORY[0x1E0DB3DC0]);
  sub_1BB8730D8();
  v10 = v43[0];
  v44 = v43[0];
  sub_1BB873114();
  v11 = v43[0];
  v33 = v0;
  sub_1BA4C2DD8(v0, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB70E8B8);
  if (v10 == v11)
  {
LABEL_5:
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB70E8B8);
  }
  else
  {
    sub_1BB70E930(0);
    v32 = v12;
    v13 = sub_1BB70E8B8;
    v14 = (uint64_t)v35;
    while (1)
    {
      v15 = *(uint64_t (**)(uint64_t))&v9[*(int *)(v34 + 36)];
      v43[4] = v10;
      v16 = &v9[*(int *)(v32 + 44)];
      v18 = *(void (**)(char *))v16;
      v17 = *((_QWORD *)v16 + 1);
      v41 = v18;
      v42 = v15;
      v40 = v17;
      swift_retain();
      v19 = sub_1BB873198();
      v20 = v9;
      v22 = v38;
      v21 = v39;
      v23 = v13;
      v24 = v37;
      (*(void (**)(char *))(v38 + 16))(v37);
      ((void (*)(_QWORD *, _QWORD))v19)(v43, 0);
      v41(v24);
      v25 = *(void (**)(char *, uint64_t))(v22 + 8);
      v9 = v20;
      v26 = v24;
      v13 = v23;
      v25(v26, v21);
      v27 = v36;
      sub_1BA646EFC(v14, v36, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline);
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))v23);
      LOBYTE(v19) = v42(v27);
      swift_release();
      sub_1BA6ED6EC(v27, (uint64_t)&unk_1ED3B2DB0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      if ((v19 & 1) != 0)
        break;
      v28 = v33;
      sub_1BB873120();
      v10 = v44;
      sub_1BB873114();
      v29 = v43[0];
      sub_1BA4C2DD8(v28, (uint64_t)v9, (uint64_t (*)(_QWORD))v13);
      if (v10 == v29)
        goto LABEL_5;
    }
  }
  return v44;
}

uint64_t sub_1BB70B4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)();
  uint64_t (*v10)(_BYTE *);
  char *v11;
  uint64_t v12;
  void (*v13)(_QWORD *__return_ptr, char *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)();
  char *v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *__return_ptr, char *);
  uint64_t (*v33)(_BYTE *);
  _BYTE v34[144];
  _QWORD v35[19];
  _BYTE v36[144];
  _QWORD v37[18];
  uint64_t v38;

  sub_1BA8676E0();
  v29 = *(_QWORD *)(v1 - 8);
  v30 = v1;
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB70E994();
  v27 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA867758();
  sub_1BA4A2870(&qword_1ED3A3998, (uint64_t (*)(uint64_t))sub_1BA867758, MEMORY[0x1E0DB3DC0]);
  sub_1BB8730D8();
  v6 = v37[0];
  v38 = v37[0];
  sub_1BB873114();
  v7 = v37[0];
  v26 = v0;
  sub_1BA4C2DD8(v0, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BB70E994);
  if (v6 == v7)
  {
LABEL_5:
    sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BB70E994);
  }
  else
  {
    sub_1BB70EA0C(0);
    v25 = v8;
    v9 = sub_1BB70E994;
    while (1)
    {
      v10 = *(uint64_t (**)(_BYTE *))&v5[*(int *)(v27 + 36)];
      v35[18] = v6;
      v11 = &v5[*(int *)(v25 + 44)];
      v13 = *(void (**)(_QWORD *__return_ptr, char *))v11;
      v12 = *((_QWORD *)v11 + 1);
      v32 = v13;
      v33 = v10;
      v31 = v12;
      swift_retain();
      v14 = sub_1BB873198();
      v15 = (uint64_t)v5;
      v17 = v29;
      v16 = v30;
      v18 = v9;
      v19 = v28;
      (*(void (**)(char *))(v29 + 16))(v28);
      ((void (*)(_QWORD *, _QWORD))v14)(v35, 0);
      v32(v35, v19);
      v20 = *(void (**)(char *, uint64_t))(v17 + 8);
      v5 = (char *)v15;
      v21 = v19;
      v9 = v18;
      v20(v21, v16);
      sub_1BA6A09F0((uint64_t)v35, (uint64_t)v36, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
      sub_1BA6A09F0((uint64_t)v36, (uint64_t)v34, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
      sub_1BA4A2E80(v15, (uint64_t (*)(_QWORD))v18);
      LOBYTE(v14) = v33(v34);
      swift_release();
      sub_1BA6A09F0((uint64_t)v34, (uint64_t)v37, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
      sub_1BA90EECC((uint64_t)v37);
      if ((v14 & 1) != 0)
        break;
      v22 = v26;
      sub_1BB873120();
      v6 = v38;
      sub_1BB873114();
      v23 = v37[0];
      sub_1BA4C2DD8(v22, (uint64_t)v5, (uint64_t (*)(_QWORD))v9);
      if (v6 == v23)
        goto LABEL_5;
    }
  }
  return v38;
}

uint64_t sub_1BB70B7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  char v27;
  uint64_t result;
  uint64_t v30;
  _QWORD v31[11];
  _BYTE v32[8];

  v27 = a8 & 1;
  sub_1BA561D1C(a1, (uint64_t)v31);
  result = sub_1BB6FBD78(v31, a2, a3, a4, a5, a6, a7, v27, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             (uint64_t)v32,
             (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BB6FC9F4);
  if (!v30)
    *a9 = result;
  return result;
}

BOOL sub_1BB70B8B8(uint64_t a1)
{
  uint64_t v2[18];

  sub_1BA6A09F0(a1, (uint64_t)v2, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  return sub_1BA84DAF0(v2) == 0;
}

uint64_t sub_1BB70B8F8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[7];
  _OWORD v9[2];
  _BYTE v10[144];
  uint64_t v11[18];

  sub_1BA6A09F0(a1, (uint64_t)v10, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  sub_1BA6A09F0((uint64_t)v10, (uint64_t)v11, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  result = sub_1BA84DAF0(v11);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1BA6A09F0((uint64_t)v10, (uint64_t)v8, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
    v4 = v9[0];
    a2[6] = v8[6];
    a2[7] = v4;
    *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)v9 + 9);
    v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
    return sub_1BA8D1F08((uint64_t)v8);
  }
  return result;
}

void sub_1BB70B9B8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AB170)
  {
    sub_1BA8678F0(255, &qword_1ED3A3DB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB7B60]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AB170);
  }
}

void sub_1BB70BA30(uint64_t a1)
{
  sub_1BA8678F0(a1, &qword_1ED3A4190, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DBC790]);
}

void sub_1BB70BA44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB280)
  {
    sub_1BB70BA30(255);
    sub_1BA4A2870(&qword_1ED3A4178, (uint64_t (*)(uint64_t))sub_1BB70BA30, MEMORY[0x1E0DBC7C0]);
    v0 = sub_1BB873F0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB280);
  }
}

void sub_1BB70BABC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB270)
  {
    sub_1BB70BA30(255);
    sub_1BA4A2870(&qword_1ED3A4178, (uint64_t (*)(uint64_t))sub_1BB70BA30, MEMORY[0x1E0DBC7C0]);
    v0 = sub_1BB873F00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB270);
  }
}

uint64_t sub_1BB70BB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  char v46;
  uint64_t v47;

  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v8)
    return v9;
  v11 = a1;
  v47 = MEMORY[0x1E0DEE9D8];
  sub_1BA7447E8(0, v8, 0);
  v9 = v47;
  result = sub_1BA580CE4(v11);
  v13 = result;
  v15 = v14;
  v17 = v16 & 1;
  v44 = v11 + 56;
  v42 = v11;
  v43 = a3;
  while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(_BYTE *)(v11 + 32))
  {
    if (((*(_QWORD *)(v44 + (((unint64_t)v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v11 + 36) != v15)
      goto LABEL_24;
    v18 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v13);
    v19 = *v18;
    v20 = v18[1];
    v46 = v17;
    if (!a3 || (v19 == a2 ? (v21 = v20 == a3) : (v21 = 0), !v21 && (sub_1BB874398() & 1) == 0))
    {
      swift_bridgeObjectRetain();
LABEL_16:
      v45 = v8;
      v25 = v15;
      v26 = v9;
      v27 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1BB87A390;
      *(_QWORD *)(v28 + 32) = a7;
      *(_QWORD *)(v28 + 40) = a8;
      *(_QWORD *)(v28 + 48) = v19;
      *(_QWORD *)(v28 + 56) = v20;
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v27, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v29 = v27;
      v9 = v26;
      v15 = v25;
      v8 = v45;
      sub_1BA5C69E0((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, v29, MEMORY[0x1E0DEAF20]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = sub_1BB872904();
      v23 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = sub_1BA761FE4(a4, a5, a6);
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      goto LABEL_16;
    v23 = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v24 = a4;
LABEL_17:
    v32 = *(_QWORD *)(v9 + 16);
    v31 = *(_QWORD *)(v9 + 24);
    if (v32 >= v31 >> 1)
      sub_1BA7447E8(v31 > 1, v32 + 1, 1);
    *(_QWORD *)(v9 + 16) = v32 + 1;
    v33 = v9 + 16 * v32;
    *(_QWORD *)(v33 + 32) = v24;
    *(_QWORD *)(v33 + 40) = v23;
    v11 = v42;
    result = sub_1BA57FFE8(v13, v15, v46 & 1, v42);
    v13 = result;
    v15 = v34;
    v17 = v35 & 1;
    --v8;
    a3 = v43;
    if (!v8)
    {
      sub_1BA8CA884(result, v34, v35 & 1);
      return v9;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1BB70BE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  char v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v27;
  int v28;
  uint64_t v29;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v3)
    return v4;
  v5 = a1;
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1BA7447E8(0, v3, 0);
  v4 = v29;
  result = sub_1BA580CE4(v5);
  v8 = result;
  v10 = v9 & 1;
  v24 = v5 + 56;
  v23 = v5;
  while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(_BYTE *)(v5 + 32))
  {
    if (((*(_QWORD *)(v24 + (((unint64_t)v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(v5 + 36) != (_DWORD)v7)
      goto LABEL_14;
    v27 = v10;
    v28 = v7;
    v11 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v8);
    v13 = *v11;
    v12 = v11[1];
    v14 = MEMORY[0x1E0DEA968];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BB87A390;
    *(_QWORD *)(v15 + 32) = a2;
    *(_QWORD *)(v15 + 40) = a3;
    *(_QWORD *)(v15 + 48) = v13;
    *(_QWORD *)(v15 + 56) = v12;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v14, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C69E0((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, v14, MEMORY[0x1E0DEAF20]);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v16 = sub_1BB872904();
    v18 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(v29 + 16);
    v19 = *(_QWORD *)(v29 + 24);
    if (v20 >= v19 >> 1)
      sub_1BA7447E8(v19 > 1, v20 + 1, 1);
    *(_QWORD *)(v29 + 16) = v20 + 1;
    v21 = v29 + 16 * v20;
    *(_QWORD *)(v21 + 32) = v16;
    *(_QWORD *)(v21 + 40) = v18;
    v5 = v23;
    result = sub_1BA57FFE8(v8, v28, v27 & 1, v23);
    v8 = result;
    v10 = v22 & 1;
    if (!--v3)
    {
      sub_1BA8CA884(result, v7, v10);
      return v4;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

_QWORD *sub_1BB70C090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v37[5];
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;

  v4 = v3;
  v45 = a2;
  v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v37 - v13;
  sub_1BB70EEC0();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (v18)
  {
    v41 = v9;
    v42 = v14;
    v19 = a1;
    v20 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v40 = *(_QWORD *)(v12 + 72);
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v37[1] = v19;
    v37[2] = v4;
    swift_bridgeObjectRetain();
    v46 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v37[3] = v7;
    v37[4] = a3;
    v21 = v12;
    v43 = v17;
    v39 = v12;
    v22 = v42;
    while (1)
    {
      v47 = v18;
      v44(v17, v20, v11);
      v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
      v38(v17, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v11) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v22, v17, v11);
      sub_1BB86F76C();
      v24 = (uint64_t)v41;
      swift_storeEnumTagMultiPayload();
      FeedItem.identifier.getter();
      sub_1BA4A2E80(v24, type metadata accessor for FeedItem);
      v25 = sub_1BB872B5C();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {
        sub_1BB86F76C();
        swift_storeEnumTagMultiPayload();
        FeedItem.identifier.getter();
        v27 = v26;
        v29 = v28;
        sub_1BA4A2E80(v24, type metadata accessor for FeedItem);
        v21 = v39;
        (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v46 = sub_1BB38F608(0, v46[2] + 1, 1, v46);
        v31 = v46[2];
        v30 = v46[3];
        v23 = v47;
        if (v31 >= v30 >> 1)
        {
          v34 = sub_1BB38F608((_QWORD *)(v30 > 1), v31 + 1, 1, v46);
          v23 = v47;
          v46 = v34;
        }
        v32 = v46;
        v46[2] = v31 + 1;
        v33 = &v32[6 * v31];
        v33[4] = v27;
        v33[5] = v29;
        v33[6] = MEMORY[0x1E0DEE9E8];
        v33[7] = MEMORY[0x1E0DEE9D8];
        v33[8] = 0;
        v33[9] = 0;
      }
      else
      {
        v21 = v39;
        (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v11);
        v23 = v47;
      }
      v20 += v40;
      v18 = v23 - 1;
      v17 = v43;
      if (!v18)
      {
        v38(v43, 1, 1, v11);
        break;
      }
    }
  }
  else
  {
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    swift_bridgeObjectRetain();
    v46 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v35(v17, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  return v46;
}

_QWORD *sub_1BB70C440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD v38[4];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;

  v41 = a2;
  v42 = a3;
  v5 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v38 - v9;
  v11 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v14)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v39 = v13;
  v38[2] = v3;
  sub_1BA8676E0();
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v40 = *(_QWORD *)(v18 + 72);
  v38[1] = a1;
  swift_bridgeObjectRetain();
  v44 = v15;
  v38[3] = v17;
  do
  {
    v45 = v14;
    sub_1BB86F76C();
    sub_1BA4C2DD8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
    sub_1BB1C32F8();
    v43 = v21;
    v22 = (uint64_t)&v7[*(int *)(v21 + 48)];
    v23 = (uint64_t)v39;
    sub_1BA5193C4((uint64_t)v7, (uint64_t)v39, type metadata accessor for FeedItem);
    sub_1BB1C3360(v22);
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
    FeedItem.identifier.getter();
    sub_1BA4A2E80(v23, type metadata accessor for FeedItem);
    LOBYTE(v22) = sub_1BB872B5C();
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
    {
      sub_1BB86F76C();
      sub_1BA4C2DD8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
      v24 = (uint64_t)&v7[*(int *)(v43 + 48)];
      v25 = v7;
      sub_1BA5193C4((uint64_t)v7, v23, type metadata accessor for FeedItem);
      sub_1BB1C3360(v24);
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
      FeedItem.identifier.getter();
      v27 = v26;
      v29 = v28;
      sub_1BA4A2E80(v23, type metadata accessor for FeedItem);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v43 = v29;
      v31 = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v7 = v25;
        v20 = v45;
        v32 = v44;
      }
      else
      {
        v32 = sub_1BB38F608(0, v44[2] + 1, 1, v44);
        v7 = v25;
        v20 = v45;
      }
      v34 = v32[2];
      v33 = v32[3];
      if (v34 >= v33 >> 1)
        v32 = sub_1BB38F608((_QWORD *)(v33 > 1), v34 + 1, 1, v32);
      v32[2] = v34 + 1;
      v44 = v32;
      v35 = &v32[6 * v34];
      v36 = v43;
      v35[4] = v31;
      v35[5] = v36;
      v35[6] = MEMORY[0x1E0DEE9E8];
      v35[7] = MEMORY[0x1E0DEE9D8];
      v35[8] = 0;
      v35[9] = 0;
    }
    else
    {
      v20 = v45;
    }
    v19 += v40;
    v14 = v20 - 1;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_1BB70C790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t result;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v11 = *(_QWORD *)(a1 + 16);
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v11)
    return MEMORY[0x1E0DEE9D8];
  v61 = MEMORY[0x1E0DEE9D8];
  sub_1BA6C2984(0, v11, 0);
  v14 = 0;
  result = v61;
  v47 = v11;
  v48 = a1 + 32;
  while (1)
  {
    v52 = result;
    v53 = v14;
    v16 = (__int128 *)(v48 + (v14 << 6));
    v17 = v16[3];
    v64 = v16[2];
    v65 = v17;
    v18 = v16[1];
    v62 = *v16;
    v63 = v18;
    v19 = v64;
    v66 = v64;
    v20 = *(_QWORD *)(v64 + 16);
    if (v20)
      break;
    sub_1BA79EDD0((uint64_t)&v62);
    v24 = v12;
LABEL_27:
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3C03A0, (uint64_t)&type metadata for SlotReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C69E0(&qword_1ED3C03B0, (unint64_t *)&unk_1ED3C03A0, (uint64_t)&type metadata for SlotReference, MEMORY[0x1E0DEAF38]);
    sub_1BA6C4384();
    v38 = sub_1BB872BBC();
    v39 = *((_QWORD *)&v62 + 1);
    v51 = v62;
    swift_bridgeObjectRetain();
    v40 = sub_1BB6FBC60((uint64_t)v24);
    swift_bridgeObjectRelease();
    v50 = sub_1BA6E43EC(v40);
    swift_bridgeObjectRelease();
    v49 = sub_1BA6C3B10(v38);
    v41 = sub_1BA6C3D30(v38);
    v42 = sub_1BA6C3F68(v38);
    swift_bridgeObjectRelease();
    v43 = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA79ED54((uint64_t)&v62);
    result = v52;
    v45 = *(_QWORD *)(v52 + 16);
    v44 = *(_QWORD *)(v52 + 24);
    if (v45 >= v44 >> 1)
    {
      sub_1BA6C2984(v44 > 1, v45 + 1, 1);
      result = v52;
    }
    v14 = v53 + 1;
    *(_QWORD *)(result + 16) = v45 + 1;
    v46 = result + (v45 << 6);
    *(_QWORD *)(v46 + 32) = v51;
    *(_QWORD *)(v46 + 40) = v39;
    *(_QWORD *)(v46 + 48) = v50;
    *(_QWORD *)(v46 + 56) = v49;
    *(_QWORD *)(v46 + 64) = v41;
    *(_QWORD *)(v46 + 72) = v42;
    *(_OWORD *)(v46 + 80) = v43;
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v53 + 1 == v47)
      return result;
  }
  v21 = *(_QWORD *)(type metadata accessor for FormatContentSlotItemObject.Resolved() - 8);
  v22 = v19 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  sub_1BA781758((uint64_t)&v66);
  sub_1BA79EDD0((uint64_t)&v62);
  sub_1BA781758((uint64_t)&v66);
  v23 = *(_QWORD *)(v21 + 72);
  v24 = v12;
  while (1)
  {
    sub_1BB6FFCB0(v22, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&v62, a11);
    v26 = *(_QWORD *)(v25 + 16);
    v27 = v24[2];
    v28 = v27 + v26;
    if (__OFADD__(v27, v26))
      break;
    v29 = v25;
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v28 <= v24[3] >> 1)
    {
      if (*(_QWORD *)(v29 + 16))
        goto LABEL_16;
    }
    else
    {
      if (v27 <= v28)
        v31 = v27 + v26;
      else
        v31 = v27;
      v24 = sub_1BB38F608(isUniquelyReferenced_nonNull_native, v31, 1, v24);
      if (*(_QWORD *)(v29 + 16))
      {
LABEL_16:
        v32 = v24[2];
        if ((v24[3] >> 1) - v32 < v26)
          goto LABEL_34;
        v33 = (unint64_t)&v24[6 * v32 + 4];
        if (v29 + 32 < v33 + 48 * v26 && v33 < v29 + 32 + 48 * v26)
          goto LABEL_36;
        swift_arrayInitWithCopy();
        if (v26)
        {
          v35 = v24[2];
          v36 = __OFADD__(v35, v26);
          v37 = v35 + v26;
          if (v36)
            goto LABEL_35;
          v24[2] = v37;
        }
        goto LABEL_6;
      }
    }
    if (v26)
      goto LABEL_33;
LABEL_6:
    swift_bridgeObjectRelease();
    v22 += v23;
    if (!--v20)
    {
      sub_1BA4F6CCC((uint64_t)&v66);
      sub_1BA4F6CCC((uint64_t)&v66);
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB70CBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  uint64_t v27;

  v5 = type metadata accessor for FeedItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v26[1] = v2;
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1BA6A4CDC(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v12 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      FeedItem.identifier.getter();
      if (!*(_QWORD *)(v12 + 16))
        break;
      v16 = sub_1BA6E35A8(v14, v15);
      if ((v17 & 1) == 0)
        break;
      v18 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v16);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1BA4C2DD8(v11, (uint64_t)v8, type metadata accessor for FeedItem);
      if ((~v18 & 0xF000000000000007) == 0)
        goto LABEL_8;
      sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedItem);
LABEL_9:
      v10 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA6A4CDC(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v27;
      }
      v24 = *(_QWORD *)(v10 + 16);
      v23 = *(_QWORD *)(v10 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1BA6A4CDC(v23 > 1, v24 + 1, 1);
        v10 = v27;
      }
      *(_QWORD *)(v10 + 16) = v24 + 1;
      *(_QWORD *)(v10 + 8 * v24 + 32) = v18;
      v11 += v13;
      if (!--v9)
        return v10;
    }
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8(v11, (uint64_t)v8, type metadata accessor for FeedItem);
LABEL_8:
    v18 = swift_allocObject();
    FeedItem.identifier.getter();
    v20 = v19;
    v22 = v21;
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedItem);
    *(_QWORD *)(v18 + 16) = v20;
    *(_QWORD *)(v18 + 24) = v22;
    goto LABEL_9;
  }
  return v10;
}

uint64_t sub_1BB70CDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *, _QWORD);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[4];
  uint64_t v48;

  v40 = a2;
  v41 = a3;
  sub_1BB439520();
  v4 = v3;
  v43 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v42 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB70EEC0();
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v45 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v38 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v39 = (char *)&v35 - v12;
  sub_1BB70EF34();
  v14 = v13;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870(&qword_1EF2CB078, (uint64_t (*)(uint64_t))sub_1BB439520, MEMORY[0x1E0DB3DB8]);
  sub_1BB872BA4();
  v17 = &v16[*(int *)(v14 + 36)];
  sub_1BA4A2870(&qword_1EF2CB060, (uint64_t (*)(uint64_t))sub_1BB439520, MEMORY[0x1E0DB3DC0]);
  v18 = *(_QWORD *)v17;
  sub_1BB873114();
  if (v18 == v47[0])
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
LABEL_16:
    v23 = (uint64_t)v44;
    v19(v44, 1, 1, v45);
  }
  else
  {
    v37 = v16;
    v20 = v45;
    while (1)
    {
      v22 = (void (*)(uint64_t *, _QWORD))sub_1BB873198();
      v23 = (uint64_t)v44;
      (*(void (**)(char *))(v9 + 16))(v44);
      v22(v47, 0);
      v24 = v42;
      v25 = v43;
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v42, v16, v4);
      sub_1BB873120();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v4);
      v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v26((char *)v23, 0, 1, v20);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v23, 1, v20) == 1)
        break;
      v36 = v26;
      v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
      v28 = (uint64_t)v39;
      v27(v39, v23, v20);
      v29 = v46;
      v30 = sub_1BB701254(v28, v40, v41);
      if (v29)
      {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v28, v20);
        sub_1BA4A2E80((uint64_t)v37, (uint64_t (*)(_QWORD))sub_1BB70EF34);
        return swift_release();
      }
      v46 = 0;
      if ((v30 & 1) != 0)
      {
        v27(v38, v28, v20);
        v31 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7B540(0, *(_QWORD *)(v31 + 16) + 1, 1);
          v31 = v48;
        }
        v33 = *(_QWORD *)(v31 + 16);
        v32 = *(_QWORD *)(v31 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_1BAC7B540(v32 > 1, v33 + 1, 1);
          v31 = v48;
        }
        *(_QWORD *)(v31 + 16) = v33 + 1;
        v27((char *)(v31+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v33), (uint64_t)v38, v45);
        v48 = v31;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v28, v20);
      }
      v21 = *(_QWORD *)v17;
      v16 = v37;
      sub_1BB873114();
      if (v21 == v47[0])
      {
        v19 = v36;
        goto LABEL_16;
      }
    }
  }
  sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BB70EF34);
  sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))sub_1BB70EEC0);
  return v48;
}

uint64_t sub_1BB70D1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(char *, unint64_t, uint64_t), uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, unint64_t, uint64_t);
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, unint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v18 = v17;
  v79 = a7;
  v80 = a8;
  v75 = a4;
  v72 = a17;
  v73 = a16;
  v71 = a15;
  v81 = a13;
  v76 = a12;
  v90 = type metadata accessor for FeedItem(0);
  v86 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v85 = (char *)&v70 - v27;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
  v89 = v28;
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v70 - v30;
  *(_OWORD *)(v18 + 176) = 0u;
  *(_OWORD *)(v18 + 217) = 0u;
  *(_OWORD *)(v18 + 192) = 0u;
  *(_OWORD *)(v18 + 208) = 0u;
  *(_BYTE *)(v18 + 233) = 1;
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  v74 = v18 + 176;
  v77 = a5;
  v78 = a6;
  v91 = a5;
  v92 = a6;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v32);
  v33 = *(_QWORD *)(a1 + 16);
  v34 = MEMORY[0x1E0DEE9D8];
  v87 = v29;
  v88 = v25;
  v82 = v18;
  if (v33)
  {
    v93 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v33, 0);
    v35 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v70 = a1;
    v36 = a1 + v35;
    v37 = *(_QWORD *)(v29 + 72);
    v83 = *(void (**)(char *, unint64_t, uint64_t))(v29 + 16);
    v84 = v37;
    v38 = v33;
    do
    {
      v39 = v89;
      v83(v31, v36, v89);
      sub_1BB86F76C();
      v40 = (uint64_t)v85;
      swift_storeEnumTagMultiPayload();
      FeedItem.identifier.getter();
      v42 = v41;
      v44 = v43;
      sub_1BA4A2E80(v40, type metadata accessor for FeedItem);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v31, v39);
      v34 = v93;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v34 = v93;
      }
      v46 = *(_QWORD *)(v34 + 16);
      v45 = *(_QWORD *)(v34 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_1BA7447E8(v45 > 1, v46 + 1, 1);
        v34 = v93;
      }
      *(_QWORD *)(v34 + 16) = v46 + 1;
      v47 = v34 + 16 * v46;
      *(_QWORD *)(v47 + 32) = v42;
      *(_QWORD *)(v47 + 40) = v44;
      v36 += v84;
      --v38;
    }
    while (v38);
    v18 = v82;
    a1 = v70;
  }
  v48 = v73;
  v85 = a14;
  LODWORD(v73) = a11;
  v83 = a9;
  v84 = a10;
  v93 = v34;
  v49 = MEMORY[0x1E0DEA968];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, v49, MEMORY[0x1E0DEAF20]);
  sub_1BB872904();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v50);
  swift_bridgeObjectRelease();
  v51 = v92;
  *(_QWORD *)(v18 + 32) = v91;
  *(_QWORD *)(v18 + 40) = v51;
  v52 = sub_1BB702AB4(v71, v48, v72, a1);
  v54 = v53;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 104) = v52;
  *(_QWORD *)(v18 + 112) = v54;
  v55 = MEMORY[0x1E0DEE9D8];
  if (v33)
  {
    v91 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AD0C(0, v33, 0);
    v56 = a1 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
    v57 = *(_QWORD *)(v87 + 72);
    v58 = v87;
    v59 = *(void (**)(char *, unint64_t, uint64_t))(v87 + 16);
    do
    {
      v60 = v89;
      v59(v31, v56, v89);
      sub_1BB86F76C();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v31, v60);
      v55 = v91;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AD0C(0, *(_QWORD *)(v55 + 16) + 1, 1);
        v55 = v91;
      }
      v62 = *(_QWORD *)(v55 + 16);
      v61 = *(_QWORD *)(v55 + 24);
      if (v62 >= v61 >> 1)
      {
        sub_1BAC7AD0C(v61 > 1, v62 + 1, 1);
        v55 = v91;
      }
      *(_QWORD *)(v55 + 16) = v62 + 1;
      sub_1BA5193C4((uint64_t)v88, v55+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(_QWORD *)(v86 + 72) * v62, type metadata accessor for FeedItem);
      v56 += v57;
      --v33;
    }
    while (v33);
    v18 = v82;
  }
  v63 = v73 & 1;
  v64 = v75;
  *(_QWORD *)(v18 + 64) = v55;
  *(_QWORD *)(v18 + 72) = v64;
  v65 = v76;
  v66 = v78;
  *(_QWORD *)(v18 + 48) = v77;
  *(_QWORD *)(v18 + 56) = v66;
  v67 = v80;
  *(_QWORD *)(v18 + 80) = v79;
  *(_QWORD *)(v18 + 88) = v67;
  *(_QWORD *)(v18 + 96) = v83;
  *(_QWORD *)(v18 + 120) = v84;
  *(_BYTE *)(v18 + 128) = v63;
  sub_1BB70E6C8(v65, v18 + 136, qword_1ED3B1AB0, (unint64_t *)&qword_1ED3B1AA0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  v68 = v74;
  swift_beginAccess();
  sub_1BA6A09F0(v81, v68, &qword_1ED3B23A0, (uint64_t)&type metadata for FeedGroupBindingOptions);
  *(_QWORD *)(v18 + 240) = v85;
  return v18;
}

uint64_t sub_1BB70D784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *, _QWORD);
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[4];
  uint64_t v52;

  v46 = a2;
  v47 = a3;
  sub_1BA867758();
  v4 = v3;
  v45 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8676E0();
  v50 = v6;
  v48 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)&v39 - v9;
  MEMORY[0x1E0C80A78](v10);
  v42 = (char *)&v39 - v11;
  sub_1BB70E7AC();
  v13 = v12;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870(&qword_1ED3A3990, (uint64_t (*)(uint64_t))sub_1BA867758, MEMORY[0x1E0DB3DB8]);
  sub_1BB872BA4();
  v16 = &v15[*(int *)(v13 + 36)];
  v17 = sub_1BA4A2870(&qword_1ED3A3998, (uint64_t (*)(uint64_t))sub_1BA867758, MEMORY[0x1E0DB3DC0]);
  v18 = *(_QWORD *)v16;
  sub_1BB873114();
  if (v18 == v51[0])
  {
LABEL_2:
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BB70E7AC);
    return v52;
  }
  else
  {
    v40 = v15;
    v20 = v50;
    while (1)
    {
      v22 = (void (*)(uint64_t *, _QWORD))sub_1BB873198();
      v23 = v48;
      v24 = v16;
      v25 = v15;
      v26 = v43;
      (*(void (**)(char *))(v48 + 16))(v43);
      v22(v51, 0);
      v27 = v44;
      v28 = v45;
      v29 = v25;
      v16 = v24;
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v44, v29, v4);
      v30 = v17;
      sub_1BB873120();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v4);
      v31 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v32 = (uint64_t)v42;
      v31(v42, v26, v20);
      v33 = v49;
      v34 = sub_1BB701558(v32, v46, v47);
      v49 = v33;
      if (v33)
        break;
      if ((v34 & 1) != 0)
      {
        v31(v41, (char *)v32, v50);
        v35 = v52;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v15 = v40;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BAC79EF0(0, *(_QWORD *)(v35 + 16) + 1, 1);
          v35 = v52;
        }
        v38 = *(_QWORD *)(v35 + 16);
        v37 = *(_QWORD *)(v35 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_1BAC79EF0(v37 > 1, v38 + 1, 1);
          v35 = v52;
        }
        *(_QWORD *)(v35 + 16) = v38 + 1;
        v31((char *)(v35+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v38), v41, v50);
        v52 = v35;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v32, v50);
        v15 = v40;
      }
      v21 = *(_QWORD *)v16;
      v17 = v30;
      sub_1BB873114();
      if (v21 == v51[0])
        goto LABEL_2;
    }
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v32, v50);
    sub_1BA4A2E80((uint64_t)v40, (uint64_t (*)(_QWORD))sub_1BB70E7AC);
    return swift_release();
  }
}

uint64_t sub_1BB70DB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, void (*a14)(_BYTE *, unint64_t, uint64_t), uint64_t a15, uint64_t a16, _QWORD *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _QWORD *v37;
  int64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(_BYTE *, unint64_t, uint64_t);
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE v81[12];
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  void (*v97)(_BYTE *, unint64_t, uint64_t);
  void (*v98)(_BYTE *, unint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v18 = v17;
  v92 = a7;
  v93 = a8;
  v88 = a4;
  v86 = a17;
  v24 = a16;
  v85 = a15;
  v94 = a13;
  v89 = a12;
  v25 = type metadata accessor for FormatModel();
  MEMORY[0x1E0C80A78](v25);
  v104 = &v81[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v27);
  v103 = &v81[-v28];
  v29 = type metadata accessor for FeedItem(0);
  v100 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v101 = &v81[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v31);
  v99 = (uint64_t)&v81[-v32];
  sub_1BA8676E0();
  v102 = v33;
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v36 = &v81[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_OWORD *)(v18 + 176) = 0u;
  *(_OWORD *)(v18 + 217) = 0u;
  *(_OWORD *)(v18 + 192) = 0u;
  *(_OWORD *)(v18 + 208) = 0u;
  *(_BYTE *)(v18 + 233) = 1;
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  v87 = v18 + 176;
  v90 = a5;
  v91 = a6;
  v106 = a5;
  v107 = a6;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v37);
  v38 = *(_QWORD *)(a1 + 16);
  v39 = MEMORY[0x1E0DEE9D8];
  v105 = v34;
  v95 = v18;
  if (v38)
  {
    v83 = a16;
    v108 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v38, 0);
    v40 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v84 = a1;
    v41 = a1 + v40;
    v42 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v34 + 72);
    v97 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v34 + 16);
    v98 = v42;
    v43 = v38;
    v96 = v38;
    do
    {
      v44 = v102;
      v97(v36, v41, v102);
      v45 = (uint64_t)v103;
      sub_1BB86F76C();
      v46 = v104;
      sub_1BA4C2DD8(v45, (uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
      sub_1BB1C32F8();
      v48 = (uint64_t)&v46[*(int *)(v47 + 48)];
      v49 = (uint64_t)v46;
      v50 = v99;
      sub_1BA5193C4(v49, v99, type metadata accessor for FeedItem);
      sub_1BB1C3360(v48);
      sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
      FeedItem.identifier.getter();
      v52 = v51;
      v54 = v53;
      sub_1BA4A2E80(v50, type metadata accessor for FeedItem);
      (*(void (**)(_BYTE *, uint64_t))(v105 + 8))(v36, v44);
      v39 = v108;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v39 + 16) + 1, 1);
        v39 = v108;
      }
      v56 = *(_QWORD *)(v39 + 16);
      v55 = *(_QWORD *)(v39 + 24);
      v38 = v96;
      if (v56 >= v55 >> 1)
      {
        sub_1BA7447E8(v55 > 1, v56 + 1, 1);
        v39 = v108;
      }
      *(_QWORD *)(v39 + 16) = v56 + 1;
      v57 = v39 + 16 * v56;
      *(_QWORD *)(v57 + 32) = v52;
      *(_QWORD *)(v57 + 40) = v54;
      v41 += (unint64_t)v98;
      --v43;
    }
    while (v43);
    v18 = v95;
    v34 = v105;
    a1 = v84;
    v24 = v83;
  }
  v97 = a14;
  v82 = a11;
  v84 = a10;
  v83 = a9;
  v108 = v39;
  v58 = MEMORY[0x1E0DEA968];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C69E0((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, v58, MEMORY[0x1E0DEAF20]);
  sub_1BB872904();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v59);
  swift_bridgeObjectRelease();
  v60 = v107;
  *(_QWORD *)(v18 + 32) = v106;
  *(_QWORD *)(v18 + 40) = v60;
  v61 = sub_1BB702D94(v85, v24, v86, a1);
  v63 = v62;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 104) = v61;
  *(_QWORD *)(v18 + 112) = v63;
  v64 = MEMORY[0x1E0DEE9D8];
  if (v38)
  {
    v106 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AD0C(0, v38, 0);
    v65 = a1 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
    v66 = *(_QWORD *)(v34 + 72);
    v98 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v34 + 16);
    v99 = v66;
    v67 = v101;
    v68 = v102;
    do
    {
      v98(v36, v65, v68);
      v69 = (uint64_t)v103;
      sub_1BB86F76C();
      v70 = v104;
      sub_1BA4C2DD8(v69, (uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
      sub_1BB1C32F8();
      v72 = (uint64_t)&v70[*(int *)(v71 + 48)];
      sub_1BA5193C4((uint64_t)v70, (uint64_t)v67, type metadata accessor for FeedItem);
      sub_1BB1C3360(v72);
      sub_1BA4A2E80(v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatModel);
      (*(void (**)(_BYTE *, uint64_t))(v105 + 8))(v36, v68);
      v64 = v106;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AD0C(0, *(_QWORD *)(v64 + 16) + 1, 1);
        v64 = v106;
      }
      v74 = *(_QWORD *)(v64 + 16);
      v73 = *(_QWORD *)(v64 + 24);
      if (v74 >= v73 >> 1)
      {
        sub_1BAC7AD0C(v73 > 1, v74 + 1, 1);
        v64 = v106;
      }
      *(_QWORD *)(v64 + 16) = v74 + 1;
      v67 = v101;
      sub_1BA5193C4((uint64_t)v101, v64+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(_QWORD *)(v100 + 72) * v74, type metadata accessor for FeedItem);
      v65 += v99;
      --v38;
    }
    while (v38);
    v18 = v95;
  }
  v75 = v82 & 1;
  v76 = v88;
  *(_QWORD *)(v18 + 64) = v64;
  *(_QWORD *)(v18 + 72) = v76;
  v77 = v91;
  *(_QWORD *)(v18 + 48) = v90;
  *(_QWORD *)(v18 + 56) = v77;
  v78 = v93;
  *(_QWORD *)(v18 + 80) = v92;
  *(_QWORD *)(v18 + 88) = v78;
  *(_QWORD *)(v18 + 96) = v83;
  *(_QWORD *)(v18 + 120) = v84;
  *(_BYTE *)(v18 + 128) = v75;
  sub_1BB70E6C8(v89, v18 + 136, qword_1ED3B1AB0, (unint64_t *)&qword_1ED3B1AA0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  v79 = v87;
  swift_beginAccess();
  sub_1BA6A09F0(v94, v79, &qword_1ED3B23A0, (uint64_t)&type metadata for FeedGroupBindingOptions);
  *(_QWORD *)(v18 + 240) = v97;
  return v18;
}

uint64_t sub_1BB70E1E0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  double v20;
  void (*v21)(double);
  uint64_t v22;
  void (*v23)(_BYTE *);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *, uint64_t);
  uint64_t v27;
  _BYTE v29[4];
  unsigned int v30;
  _BYTE *v31;

  v2 = sub_1BB86D9C0();
  v3 = *(_QWORD **)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)&v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)&v29[-v7];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C2200, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v29[-v14];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v29[-v17];
  v20 = MEMORY[0x1E0C80A78](v19);
  v21 = (void (*)(double))v3[7];
  v31 = &v29[-v22];
  v21(v20);
  if (a1 < 1)
  {
    v27 = 1;
    ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v21)(v18, 1, 1, v2);
    ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v21)(v15, 1, 1, v2);
  }
  else
  {
    v30 = *MEMORY[0x1E0DB6140];
    v23 = (void (*)(_BYTE *))v3[13];
    v23(v18);
    ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v21)(v18, 0, 1, v2);
    ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v21)(v15, 1, 1, v2);
    v24 = swift_allocObject();
    sub_1BB873294();
    *(_QWORD *)(v24 + 16) = v25;
    *v8 = v24;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v23)(v8, *MEMORY[0x1E0DB6138], v2);
    ((void (*)(uint64_t *, _QWORD, uint64_t))v23)(v5, v30, v2);
    sub_1BB86D954();
    v26 = (void (*)(uint64_t *, uint64_t))v3[1];
    v26(v5, v2);
    v26(v8, v2);
    v27 = 0;
  }
  ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v21)(v12, v27, 1, v2);
  sub_1BB86D990();
  swift_allocObject();
  return sub_1BB86D984();
}

uint64_t sub_1BB70E4B0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB70E4F4()
{
  return sub_1BB7069C4();
}

uint64_t sub_1BB70E510(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB70E554()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BB70E578()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2CB010;
  if (!qword_1EF2CB010)
  {
    sub_1BA50CAA8(255, &qword_1EF2CB008, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver.Errors);
    result = MEMORY[0x1BCCE5B24](&unk_1BB94E968, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2CB010);
  }
  return result;
}

uint64_t sub_1BB70E5E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BB70A9D4(a1, v2);
  *a2 = result;
  return result;
}

uint64_t sub_1BB70E608@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB70B7B0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64), a2, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144),
           *(_QWORD *)(v2 + 152),
           *(_QWORD *)(v2 + 160));
}

unint64_t sub_1BB70E664()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A0800;
  if (!qword_1ED3A0800)
  {
    sub_1BA4B07F0(255, (unint64_t *)&unk_1ED3A07F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6B18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A0800);
  }
  return result;
}

uint64_t sub_1BB70E6C8(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v7;

  sub_1BA5B089C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BB70E724(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BB70E7AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB258)
  {
    sub_1BA867758();
    sub_1BA4A2870(&qword_1ED3A3998, (uint64_t (*)(uint64_t))sub_1BA867758, MEMORY[0x1E0DB3DC0]);
    v0 = sub_1BB873E40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB258);
  }
}

void sub_1BB70E824()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB228)
  {
    sub_1BA867758();
    sub_1BA4A2870(&qword_1ED3A3990, (uint64_t (*)(uint64_t))sub_1BA867758, MEMORY[0x1E0DB3DB8]);
    v0 = sub_1BB873CD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB228);
  }
}

void sub_1BB70E89C(uint64_t a1)
{
  sub_1BB70F040(a1, &qword_1ED3AB250, (uint64_t (*)(uint64_t))sub_1BB70E8B8, (unint64_t *)&unk_1ED3AB288);
}

void sub_1BB70E8B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB298)
  {
    sub_1BB70E930(255);
    sub_1BA4A2870((unint64_t *)&unk_1ED3AB230, (uint64_t (*)(uint64_t))sub_1BB70E930, MEMORY[0x1E0DEC858]);
    v0 = sub_1BB873F18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB298);
  }
}

void sub_1BB70E930(uint64_t a1)
{
  sub_1BB70F164(a1, (unint64_t *)&unk_1ED3AB240, (uint64_t (*)(uint64_t))sub_1BA867758, &qword_1ED3A3990);
}

uint64_t sub_1BB70E94C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB70E970@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB700F48(*(void **)(v1 + 16), a1);
}

void sub_1BB70E978(uint64_t a1)
{
  sub_1BB70F230(a1, &qword_1EF2CB020, (uint64_t (*)(uint64_t))sub_1BB70E994, &qword_1EF2CB048);
}

void sub_1BB70E994()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CB028)
  {
    sub_1BB70EA0C(255);
    sub_1BA4A2870(&qword_1EF2CB040, (uint64_t (*)(uint64_t))sub_1BB70EA0C, MEMORY[0x1E0DEC858]);
    v0 = sub_1BB873F18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CB028);
  }
}

void sub_1BB70EA0C(uint64_t a1)
{
  sub_1BB70EA28(a1, (unint64_t *)&unk_1EF2CB030, (uint64_t (*)(uint64_t))sub_1BA867758, &qword_1ED3A3990);
}

void sub_1BB70EA28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA4A2870(a4, a3, MEMORY[0x1E0DB3DB8]);
    v7 = sub_1BB873E1C();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB70EAD0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB70EAF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB700A1C(*(void **)(v1 + 16), a1);
}

uint64_t sub_1BB70EAFC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_10()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for FormatContent.Resolved();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + v1[5];
  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v5 = v2 + v1[14];
  v6 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    v7 = v5 + v6[5];
    swift_bridgeObjectRelease();
    v8 = type metadata accessor for FormatWebEmbed();
    v9 = v7 + *(int *)(v8 + 20);
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    v24 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v24(v9, v10);
    v12 = v7 + *(int *)(v8 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10))
      v24(v12, v10);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v13 = v5 + v6[8];
    v14 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v15 = type metadata accessor for GenericDataVisualization();
        v24(v13 + *(int *)(v15 + 20), v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v16 = v5 + v6[9];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
    v18 = v17;
    v19 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }

  swift_bridgeObjectRelease();
  v20 = v2 + v1[18];
  v21 = sub_1BB871E24();
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB70EEC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CB068)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1EF2B1798, (uint64_t (*)(void))sub_1BAC883D8, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6EE8]);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CB068);
  }
}

void sub_1BB70EF34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CB070)
  {
    sub_1BB439520();
    sub_1BA4A2870(&qword_1EF2CB060, (uint64_t (*)(uint64_t))sub_1BB439520, MEMORY[0x1E0DB3DC0]);
    v0 = sub_1BB873E40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CB070);
  }
}

void sub_1BB70EFAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CB080)
  {
    sub_1BB439520();
    sub_1BA4A2870(&qword_1EF2CB078, (uint64_t (*)(uint64_t))sub_1BB439520, MEMORY[0x1E0DB3DB8]);
    v0 = sub_1BB873CD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CB080);
  }
}

void sub_1BB70F024(uint64_t a1)
{
  sub_1BB70F040(a1, &qword_1EF2CB088, (uint64_t (*)(uint64_t))sub_1BB70F0D0, &qword_1EF2CB0A8);
}

void sub_1BB70F040(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    type metadata accessor for FeedHeadline(255);
    sub_1BA4A2870(a4, a3, MEMORY[0x1E0DECCA8]);
    v7 = sub_1BB873E1C();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BB70F0D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CB090)
  {
    sub_1BB70F148(255);
    sub_1BA4A2870(&qword_1EF2CB0A0, (uint64_t (*)(uint64_t))sub_1BB70F148, MEMORY[0x1E0DEC858]);
    v0 = sub_1BB873F18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CB090);
  }
}

void sub_1BB70F148(uint64_t a1)
{
  sub_1BB70F164(a1, &qword_1EF2CB098, (uint64_t (*)(uint64_t))sub_1BB439520, &qword_1EF2CB078);
}

void sub_1BB70F164(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_1BA4B07F0(255, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA4A2870(a4, a3, MEMORY[0x1E0DB3DB8]);
    v7 = sub_1BB873E1C();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB70F20C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB700CB8(*(void **)(v1 + 16), a1);
}

void sub_1BB70F214(uint64_t a1)
{
  sub_1BB70F230(a1, &qword_1EF2CB0B0, (uint64_t (*)(uint64_t))sub_1BB70F2B8, (unint64_t *)&unk_1EF2CB0D0);
}

void sub_1BB70F230(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_1BA4A2870(a4, a3, MEMORY[0x1E0DECCA8]);
    v7 = sub_1BB873E1C();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BB70F2B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CB0B8)
  {
    sub_1BB70F330(255);
    sub_1BA4A2870(&qword_1EF2CB0C8, (uint64_t (*)(uint64_t))sub_1BB70F330, MEMORY[0x1E0DEC858]);
    v0 = sub_1BB873F18();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CB0B8);
  }
}

void sub_1BB70F330(uint64_t a1)
{
  sub_1BB70EA28(a1, &qword_1EF2CB0C0, (uint64_t (*)(uint64_t))sub_1BB439520, &qword_1EF2CB078);
}

uint64_t sub_1BB70F34C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB7007F4(*(void **)(v1 + 16), a1);
}

uint64_t sub_1BB70F360(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;

  v3 = sub_1BB86E008();
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED39A5C8, (uint64_t (*)(uint64_t))sub_1BB70FCD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)&v31 - v6;
  v35 = sub_1BB86DEAC();
  v32 = *(_QWORD *)(v35 - 8);
  v7 = MEMORY[0x1E0C80A78](v35);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(*(id *)(v1 + 16), sel_subscriptions, v7);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v12 = v10;
    sub_1BB70FCD0();
    v13 = sub_1BB872DB4();

  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v14 = swift_bridgeObjectRetain();
  v15 = (unint64_t)sub_1BB70FD98(v14, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15 >> 62)
    v16 = sub_1BB873F30();
  else
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16 == *(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRelease();
    if (v16)
    {
      v39 = v11;
      sub_1BA81C3B0(0, v16, 0);
      v17 = 0;
      v31 = v15 & 0xC000000000000001;
      v18 = v34;
      do
      {
        if (v31)
          v19 = (id)MEMORY[0x1BCCE4630](v17, v15);
        else
          v19 = *(id *)(v15 + 8 * v17 + 32);
        v38 = v19;
        v20 = qword_1ED39E308;
        v21 = v19;
        if (v20 != -1)
          swift_once();
        v22 = v37;
        v23 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED39A4C8);
        v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 16))(v18, v23, v22);
        MEMORY[0x1E0C80A78](v24);
        *(&v31 - 2) = sub_1BB70FCD0();
        swift_getKeyPath();
        sub_1BB86ED10();
        sub_1BB86DEA0();

        v25 = v39;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA81C3B0(0, *(_QWORD *)(v25 + 16) + 1, 1);
          v25 = v39;
        }
        v27 = *(_QWORD *)(v25 + 16);
        v26 = *(_QWORD *)(v25 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1BA81C3B0(v26 > 1, v27 + 1, 1);
          v25 = v39;
        }
        ++v17;
        *(_QWORD *)(v25 + 16) = v27 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v25+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v27, v9, v35);
        v39 = v25;
      }
      while (v16 != v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v25 = MEMORY[0x1E0DEE9D8];
    }
    v39 = v25;
    sub_1BA4B07F0(0, &qword_1ED39A590, (uint64_t (*)(uint64_t))sub_1BA81DD70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    v28 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v28);
    *(&v31 - 4) = v1;
    *(&v31 - 3) = v13;
    *(&v31 - 2) = a1;
    sub_1BA4B07F0(0, &qword_1ED39A590, (uint64_t (*)(uint64_t))sub_1BA81DD70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v29 = sub_1BB86EA58();
    swift_bridgeObjectRelease();
  }
  return v29;
}

void sub_1BB70F7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD v16[6];

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = *(void **)(a5 + 16);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a6;
  v14[3] = a7;
  v14[4] = sub_1BA573ED8;
  v14[5] = v12;
  v16[4] = sub_1BB70FD8C;
  v16[5] = v14;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1BB70FC50;
  v16[3] = &block_descriptor_104;
  v15 = _Block_copy(v16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v13, sel_subscriptionsWithCompletion_, v15);
  _Block_release(v15);
}

uint64_t sub_1BB70F8D0(unint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;

  v30 = a5;
  v31 = a4;
  v8 = sub_1BB86E008();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED39A5C8, (uint64_t (*)(uint64_t))sub_1BB70FCD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  MEMORY[0x1E0C80A78](v10);
  v34 = (char *)&v30 - v11;
  v36 = sub_1BB86DEAC();
  v12 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  if (!a1)
  {
    swift_bridgeObjectRetain();
    v15 = a2;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = (unint64_t)sub_1BB70FD98(v15, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
      goto LABEL_5;
LABEL_19:
    swift_bridgeObjectRelease();
    v27 = MEMORY[0x1E0DEE9D8];
LABEL_20:
    v31(v27);
    return swift_bridgeObjectRelease();
  }
  v17 = sub_1BB873F30();
  if (!v17)
    goto LABEL_19;
LABEL_5:
  v40 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA81C3B0(0, v17 & ~(v17 >> 63), 0);
  if ((v17 & 0x8000000000000000) == 0)
  {
    v19 = 0;
    v32 = v16 & 0xC000000000000001;
    v33 = v16;
    v20 = v35;
    do
    {
      if (v32)
        v21 = (id)MEMORY[0x1BCCE4630](v19, v16);
      else
        v21 = *(id *)(v16 + 8 * v19 + 32);
      v39 = v21;
      v22 = qword_1ED39E308;
      v23 = v21;
      if (v22 != -1)
        swift_once();
      v24 = v38;
      v25 = __swift_project_value_buffer(v38, (uint64_t)qword_1ED39A4C8);
      v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 16))(v20, v25, v24);
      MEMORY[0x1E0C80A78](v26);
      *(&v30 - 2) = sub_1BB70FCD0();
      swift_getKeyPath();
      sub_1BB86ED10();
      sub_1BB86DEA0();

      v27 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA81C3B0(0, *(_QWORD *)(v27 + 16) + 1, 1);
        v27 = v40;
      }
      v29 = *(_QWORD *)(v27 + 16);
      v28 = *(_QWORD *)(v27 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1BA81C3B0(v28 > 1, v29 + 1, 1);
        v27 = v40;
      }
      ++v19;
      *(_QWORD *)(v27 + 16) = v29 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v29, v14, v36);
      v40 = v27;
      v16 = v33;
    }
    while (v17 != v19);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB70FC50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = a2;
  v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_1BB70FCD0();
    v2 = sub_1BB872DB4();
  }
  swift_retain();
  v3(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB70FCB0(uint64_t a1)
{
  return sub_1BB70F360(a1);
}

unint64_t sub_1BB70FCD0()
{
  unint64_t result;

  result = qword_1ED39C000;
  if (!qword_1ED39C000)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED39C000);
  }
  return result;
}

void sub_1BB70FD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1BB70F7C4(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_1BB70FD1C()
{
  return 8;
}

_QWORD *sub_1BB70FD28(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BB70FD34()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB70FD58()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB70FD8C(unint64_t a1)
{
  uint64_t v1;

  return sub_1BB70F8D0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40));
}

id sub_1BB70FD98(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t i;
  id v5;
  void *v6;
  unint64_t v7;
  id result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
    return (id)MEMORY[0x1E0DEE9D8];
  }
LABEL_17:
  v3 = sub_1BB873F30();
  if (!v3)
    return (id)MEMORY[0x1E0DEE9D8];
LABEL_3:
  for (i = 0; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = (id)MEMORY[0x1BCCE4630](i, a1);
    }
    else
    {
      if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      v5 = *(id *)(a1 + 8 * i + 32);
    }
    v6 = v5;
    v7 = i + 1;
    if (__OFADD__(i, 1))
      goto LABEL_16;
    result = objc_msgSend(v5, sel_tagID);
    if (!result)
      break;
    v9 = result;
    v10 = sub_1BB8729A0();
    v12 = v11;

    LOBYTE(v9) = sub_1BA761FE4(v10, v12, a2);
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
    {
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
    }
    else
    {

    }
    if (v7 == v3)
      return (id)v14;
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of GapViewStylerType.style(activityIndicatorView:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void static FormatCodingVerticalDirectionStrategy.defaultValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

BOOL static FormatCodingVerticalDirectionStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1 != 4;
}

unint64_t sub_1BB70FF48(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB70FF6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB70FF6C()
{
  unint64_t result;

  result = qword_1EF2CB0E0;
  if (!qword_1EF2CB0E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingVerticalDirectionStrategy, &type metadata for FormatCodingVerticalDirectionStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2CB0E0);
  }
  return result;
}

BOOL sub_1BB70FFB8(unsigned __int8 *a1)
{
  return *a1 != 4;
}

ValueMetadata *type metadata accessor for FormatCodingVerticalDirectionStrategy()
{
  return &type metadata for FormatCodingVerticalDirectionStrategy;
}

uint64_t sub_1BB70FFD8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11)
{
  uint64_t v11;
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[88];

  sub_1BA739B78(a8, (uint64_t)v30);
  *(_QWORD *)(v11 + 40) = a2;
  *(_QWORD *)(v11 + 48) = a3;
  v22 = a5 & 1;
  if ((_DWORD)v22)
    v23 = 0;
  else
    v23 = a4;
  *(_QWORD *)(v11 + 96) = v23;
  *(double *)(v11 + 24) = a10;
  *(double *)(v11 + 32) = a11;
  *(double *)(v11 + 16) = a9;
  sub_1BA739A14(a7, v11 + 56);
  *(_QWORD *)(v11 + 104) = a6;
  sub_1BA4C010C((uint64_t)a1, v11 + 120);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FB8, (uint64_t (*)(uint64_t))sub_1BA81E240, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 7955819;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  sub_1BA4C010C((uint64_t)a1, inited + 48);
  swift_retain();
  swift_retain();
  v25 = a6;
  *(_QWORD *)(v11 + 112) = sub_1BA739C1C(inited);
  sub_1BA739B78((uint64_t)v30, v11 + 176);
  sub_1BA739BF4((uint64_t)v30);
  v26 = sub_1BA739E90(a2, v25, (uint64_t)v30, a1, a9, a10, a4, v22, a7);
  v28 = v27;
  swift_release();
  swift_release();

  sub_1BA73D624((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)(v11 + 160) = v26;
  *(_QWORD *)(v11 + 168) = v28;
  return v11;
}

uint64_t dispatch thunk of FormatImageRequestProviding.formatImageRequests(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1BB710184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - v4;
  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (int *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  sub_1BA57B488(v1 + *(int *)(v13 + 20), (uint64_t)v8, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BAA441BC((uint64_t)v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, 1, 1, v9);
  }
  result = sub_1BA8C88F0((uint64_t)v8, (uint64_t)v12);
  if ((*(_BYTE *)(v1 + 45) & 1) != 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    *v15 = 0xD000000000000033;
    v15[1] = 0x80000001BB997B20;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return sub_1BAA44288((uint64_t)v12);
  }
  v16 = *(unsigned __int8 *)(v1 + 44);
  v17 = *(unsigned int *)(v1 + 40);
  v19 = *(_QWORD *)(v1 + 24);
  v18 = *(_QWORD *)(v1 + 32);
  v20 = *(_QWORD *)(v1 + 16);
  if ((v20 & 0x100000000) == 0)
  {
    if ((v19 & 0x100000000) == 0)
      goto LABEL_7;
LABEL_14:
    if ((_DWORD)v19)
    {
      LODWORD(v19) = 0x7FFFFFFF;
      v21 = v17 | (v16 << 32);
      if ((v18 & 0x100000000) != 0)
        goto LABEL_18;
    }
    else
    {
      LODWORD(v19) = *v12;
      v21 = v17 | (v16 << 32);
      if ((v18 & 0x100000000) != 0)
        goto LABEL_18;
    }
LABEL_8:
    if ((v21 & 0x100000000) == 0)
      goto LABEL_25;
    goto LABEL_22;
  }
  if ((_DWORD)v20)
  {
    LODWORD(v20) = 0x7FFFFFFF;
    if ((v19 & 0x100000000) != 0)
      goto LABEL_14;
  }
  else
  {
    LODWORD(v20) = *v12;
    if ((v19 & 0x100000000) != 0)
      goto LABEL_14;
  }
LABEL_7:
  v21 = v17 | (v16 << 32);
  if ((v18 & 0x100000000) == 0)
    goto LABEL_8;
LABEL_18:
  if ((_DWORD)v18)
  {
    LODWORD(v18) = 0x7FFFFFFF;
    if ((v21 & 0x100000000) == 0)
      goto LABEL_25;
  }
  else
  {
    LODWORD(v18) = *v12;
    if ((v21 & 0x100000000) == 0)
      goto LABEL_25;
  }
LABEL_22:
  if ((_DWORD)v17)
    LODWORD(v17) = 0x7FFFFFFF;
  else
    LODWORD(v17) = *v12;
LABEL_25:
  if ((_DWORD)v18 == 0x7FFFFFFF)
  {
    if ((int)v17 <= (int)v20)
      v22 = v20;
    else
      v22 = v17;
LABEL_36:
    v25 = *((_QWORD *)v12 + 1);
    sub_1BA57B488((uint64_t)v12 + *(int *)(v9 + 36), (uint64_t)v5, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    swift_bridgeObjectRetain();
    sub_1BAA44288((uint64_t)v12);
    *(_DWORD *)a1 = v22;
    *(_DWORD *)(a1 + 4) = v19;
    v26 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(a1 + 8) = v25;
    *(_QWORD *)(a1 + 16) = v26;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    sub_1BA6E7324((uint64_t)v5, a1 + *(int *)(v9 + 36));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
  v23 = *v12 * (uint64_t)(int)v18;
  if (v23 == (int)v23)
  {
    v24 = v12[1] * (uint64_t)(int)v18;
    if (v24 == (int)v24)
    {
      if ((int)v23 <= (int)v20)
        v22 = v20;
      else
        v22 = v23;
      if ((int)v24 < (int)v19)
        LODWORD(v19) = v24;
      goto LABEL_36;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataBindingRepeatResult()
{
  uint64_t result;

  result = qword_1EF2CB1A0;
  if (!qword_1EF2CB1A0)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1BB7104E4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 30) = *(_OWORD *)((char *)a2 + 30);
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    v9 = type metadata accessor for FormatSlotDefinitionItemSet();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *v7 = *v8;
      v14 = v8[2];
      v7[1] = v8[1];
      v7[2] = v14;
      v15 = v8[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15)
      {
        v16 = v8[4];
        v7[3] = v15;
        v7[4] = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v7 + 3) = *(_OWORD *)(v8 + 3);
      }
      v17 = *(int *)(v9 + 36);
      v18 = (char *)v7 + v17;
      v19 = (char *)v8 + v17;
      v20 = sub_1BB86E710();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_1BB7106C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for FormatSlotDefinitionItemSet();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v7 = v4 + *(int *)(v5 + 36);
    v8 = sub_1BB86E710();
    v9 = *(_QWORD *)(v8 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  return result;
}

uint64_t sub_1BB710794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(_QWORD *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  v8 = type metadata accessor for FormatSlotDefinitionItemSet();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v6 = *v7;
    v12 = v7[2];
    v6[1] = v7[1];
    v6[2] = v12;
    v13 = v7[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13)
    {
      v14 = v7[4];
      v6[3] = v13;
      v6[4] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v6 + 3) = *(_OWORD *)(v7 + 3);
    }
    v15 = *(int *)(v8 + 36);
    v16 = (char *)v6 + v15;
    v17 = (char *)v7 + v15;
    v18 = sub_1BB86E710();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1BB710948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1BAA44288(v8);
      goto LABEL_7;
    }
    *(_DWORD *)v8 = *(_DWORD *)v9;
    *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(v9 + 24);
    if (*(_QWORD *)(v8 + 24))
    {
      if (v20)
      {
        *(_QWORD *)(v8 + 24) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_22:
        v28 = *(int *)(v10 + 36);
        v29 = (void *)(v8 + v28);
        v30 = (void *)(v9 + v28);
        v31 = sub_1BB86E710();
        v32 = *(_QWORD *)(v31 - 8);
        v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
        v34 = v33(v29, 1, v31);
        v35 = v33(v30, 1, v31);
        if (v34)
        {
          if (!v35)
          {
            (*(void (**)(void *, void *, uint64_t))(v32 + 16))(v29, v30, v31);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
            return a1;
          }
        }
        else
        {
          if (!v35)
          {
            (*(void (**)(void *, void *, uint64_t))(v32 + 24))(v29, v30, v31);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v17 = *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64);
        v18 = v29;
        v19 = v30;
        goto LABEL_8;
      }
      sub_1BAA44B5C(v8 + 24);
    }
    else if (v20)
    {
      *(_QWORD *)(v8 + 24) = v20;
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
    goto LABEL_22;
  }
  if (v14)
  {
LABEL_7:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
    v18 = (void *)v8;
    v19 = (const void *)v9;
LABEL_8:
    memcpy(v18, v19, v17);
    return a1;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  v15 = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    *(_QWORD *)(v8 + 24) = v15;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  }
  v21 = *(int *)(v10 + 36);
  v22 = (void *)(v8 + v21);
  v23 = (const void *)(v9 + v21);
  v24 = sub_1BB86E710();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

_OWORD *sub_1BB710CD0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  *(_OWORD *)((char *)a1 + 30) = *(_OWORD *)((char *)a2 + 30);
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for FormatSlotDefinitionItemSet();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v6 = *v7;
    *(_OWORD *)(v6 + 1) = *(_OWORD *)(v7 + 1);
    *(_OWORD *)(v6 + 3) = *(_OWORD *)(v7 + 3);
    v11 = *(int *)(v8 + 36);
    v12 = (char *)v6 + v11;
    v13 = (char *)v7 + v11;
    v14 = sub_1BB86E710();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1BB710E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1BAA44288((uint64_t)v8);
      goto LABEL_7;
    }
    *v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRelease();
    v8[2] = v9[2];
    swift_bridgeObjectRelease();
    v25 = v9[3];
    if (v8[3])
    {
      if (v25)
      {
        v8[3] = v25;
        swift_bridgeObjectRelease();
        v8[4] = v9[4];
        swift_bridgeObjectRelease();
LABEL_17:
        v27 = *(int *)(v10 + 36);
        v28 = (char *)v8 + v27;
        v29 = (char *)v9 + v27;
        v30 = sub_1BB86E710();
        v31 = *(_QWORD *)(v30 - 8);
        v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
        v33 = v32(v28, 1, v30);
        v34 = v32(v29, 1, v30);
        if (v33)
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
            return a1;
          }
        }
        else
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        v22 = *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64);
        v23 = v28;
        v24 = v29;
        goto LABEL_8;
      }
      sub_1BAA44B5C((uint64_t)(v8 + 3));
    }
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    goto LABEL_17;
  }
  if (v14)
  {
LABEL_7:
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    v22 = *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64);
    v23 = (char *)v8;
    v24 = (char *)v9;
LABEL_8:
    memcpy(v23, v24, v22);
    return a1;
  }
  *v8 = *v9;
  *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
  *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
  v15 = *(int *)(v10 + 36);
  v16 = (char *)v8 + v15;
  v17 = (char *)v9 + v15;
  v18 = sub_1BB86E710();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1BB711120()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB71112C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB7111B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB7111C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1BB711248()
{
  unint64_t v0;

  sub_1BA4A3FB4(319, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t dispatch thunk of FeedItemDebuggable.debugIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedItemDebuggable.debugSourceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedItemDebuggable.debugTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedItemDebuggable.debugAssetHandle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedItemDebuggable.debugKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedItemDebuggable.debugScoreProfile.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

void sub_1BB7112FC(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _QWORD v16[6];

  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
  if (v8)
  {
    v9 = (void *)v8;
    sub_1BA657D64();
    v10 = (void *)sub_1BB87345C();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v9;
    v11[3] = a1;
    v11[4] = a2;
    v11[5] = a3;
    v16[4] = sub_1BB64DADC;
    v16[5] = v11;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = sub_1BA4F1DD8;
    v16[3] = &block_descriptor_105;
    v12 = _Block_copy(v16);
    v13 = v9;
    v14 = a1;
    swift_retain();
    swift_release();
    v15 = objc_msgSend(v13, sel_downloadIfNeededWithCompletionQueue_completion_, v10, v12);
    _Block_release(v12);

    swift_unknownObjectRelease();
  }
  else
  {
    a2();
  }
}

void sub_1BB71142C(void *a1, void *a2, void (*a3)(void *))
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;

  v6 = sub_1BB87387C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_filePath, v8);
  if (v11)
  {
    v12 = v11;
    sub_1BB8729A0();

    v13 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
    v14 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v13, sel_initWithContentsOfFile_, v14);

    if (v15)
    {
      objc_msgSend(a2, sel_size);
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x1E0DBCED8], v6);
      v16 = (void *)sub_1BB873810();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      v17 = v16;
      a3(v16);

    }
  }
}

uint64_t sub_1BB7115AC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void IssueAutomation.init(issue:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;

  v4 = objc_msgSend(a1, sel_identifier);
  v17 = sub_1BB8729A0();
  v6 = v5;

  v7 = objc_msgSend(a1, sel_type);
  v8 = objc_msgSend(a1, sel_isPaid);
  v9 = objc_msgSend(a1, sel_isBundlePaid);
  v10 = objc_msgSend(a1, sel_sourceChannel);
  v11 = objc_msgSend(v10, sel_identifier);
  v12 = sub_1BB8729A0();
  v14 = v13;

  v15 = objc_msgSend(v10, sel_asChannel);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  if (v7 == (id)1)
    v16 = 1;
  else
    v16 = 2;
  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v6;
  if (!v7)
    v16 = 0;
  *(_BYTE *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 17) = v8;
  *(_BYTE *)(a2 + 18) = v9;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v14;
  *(_BYTE *)(a2 + 40) = v15 != 0;
}

uint64_t IssueAutomation.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void IssueAutomation.issueType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t IssueAutomation.isPaid.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t IssueAutomation.isBundlePaid.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t IssueAutomation.sourceChannel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t IssueAutomation.automationType.getter()
{
  return 0x6575737369;
}

NewsFeed::IssueAutomation::IssueType_optional __swiftcall IssueAutomation.IssueType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::IssueAutomation::IssueType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t IssueAutomation.IssueType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 6710384;
  if (*v0 != 1)
    v1 = 0x6E776F6E6B6E75;
  if (*v0)
    return v1;
  else
    return 6712929;
}

uint64_t sub_1BB711840(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB801754(*a1, *a2);
}

uint64_t sub_1BB71184C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB7118D8()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB711940()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::IssueAutomation::IssueType_optional sub_1BB7119C8(Swift::String *a1)
{
  return IssueAutomation.IssueType.init(rawValue:)(*a1);
}

void sub_1BB7119D4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = 6710384;
  v3 = 0xE300000000000000;
  if (*v1 != 1)
  {
    v2 = 0x6E776F6E6B6E75;
    v3 = 0xE700000000000000;
  }
  if (*v1)
  {
    v4 = v3;
  }
  else
  {
    v2 = 6712929;
    v4 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v4;
}

uint64_t sub_1BB711A20()
{
  sub_1BB7128E8();
  return sub_1BB872D60();
}

uint64_t sub_1BB711A7C()
{
  sub_1BB7128E8();
  return sub_1BB872D0C();
}

uint64_t sub_1BB711AC8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB711AFC + 4 * byte_1BB9421F4[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB711AFC()
{
  return 0x7079546575737369;
}

uint64_t sub_1BB711B18()
{
  return 0x646961507369;
}

uint64_t sub_1BB711B2C()
{
  return 0x656C646E75427369;
}

uint64_t sub_1BB711B4C()
{
  return 0x6843656372756F73;
}

uint64_t sub_1BB711B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB712680(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB711B94()
{
  sub_1BB711DF4();
  return sub_1BB874710();
}

uint64_t sub_1BB711BBC()
{
  sub_1BB711DF4();
  return sub_1BB87471C();
}

uint64_t IssueAutomation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  char v22;

  sub_1BB712108(0, &qword_1EF2CB1D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  v21 = *(unsigned __int8 *)(v1 + 16);
  v8 = *(unsigned __int8 *)(v1 + 17);
  v15 = *(unsigned __int8 *)(v1 + 18);
  v16 = v8;
  v14 = *(_QWORD *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 32);
  v13 = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB711DF4();
  sub_1BB8746C8();
  LOBYTE(v18) = 0;
  v9 = v17;
  sub_1BB87417C();
  if (!v9)
  {
    v10 = v14;
    LOBYTE(v18) = v21;
    v22 = 1;
    sub_1BB711E38();
    sub_1BB8741AC();
    LOBYTE(v18) = 2;
    sub_1BB874188();
    LOBYTE(v18) = 3;
    sub_1BB874188();
    v18 = v10;
    v19 = v12;
    v20 = v13;
    v22 = 4;
    sub_1BB3698E0();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB711DF4()
{
  unint64_t result;

  result = qword_1EF2CB1E0;
  if (!qword_1EF2CB1E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94248C, &type metadata for IssueAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CB1E0);
  }
  return result;
}

unint64_t sub_1BB711E38()
{
  unint64_t result;

  result = qword_1EF2CB1E8;
  if (!qword_1EF2CB1E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueAutomation.IssueType, &type metadata for IssueAutomation.IssueType);
    atomic_store(result, (unint64_t *)&qword_1EF2CB1E8);
  }
  return result;
}

uint64_t IssueAutomation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;

  sub_1BB712108(0, &qword_1EF2CB1F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB711DF4();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v19) = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v23 = 1;
  sub_1BB712164();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v22 = v19;
  LOBYTE(v19) = 2;
  v18 = sub_1BB8740A4();
  LOBYTE(v19) = 3;
  v17 = sub_1BB8740A4();
  v23 = 4;
  sub_1BB369898();
  sub_1BB8740D4();
  v17 &= 1u;
  v18 &= 1u;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = v19;
  v15 = v20;
  v16 = v21;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v22;
  *(_BYTE *)(a2 + 17) = v18;
  *(_BYTE *)(a2 + 18) = v17;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v15;
  *(_BYTE *)(a2 + 40) = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BB712108(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB711DF4();
    v7 = a3(a1, &type metadata for IssueAutomation.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB712164()
{
  unint64_t result;

  result = qword_1EF2CB1F8;
  if (!qword_1EF2CB1F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueAutomation.IssueType, &type metadata for IssueAutomation.IssueType);
    atomic_store(result, (unint64_t *)&qword_1EF2CB1F8);
  }
  return result;
}

unint64_t sub_1BB7121AC()
{
  unint64_t result;

  result = qword_1EF2CB200;
  if (!qword_1EF2CB200)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueAutomation.IssueType, &type metadata for IssueAutomation.IssueType);
    atomic_store(result, (unint64_t *)&qword_1EF2CB200);
  }
  return result;
}

unint64_t sub_1BB7121F4()
{
  unint64_t result;

  result = qword_1ED39CC08;
  if (!qword_1ED39CC08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueAutomation, &type metadata for IssueAutomation);
    atomic_store(result, (unint64_t *)&qword_1ED39CC08);
  }
  return result;
}

unint64_t sub_1BB71223C()
{
  unint64_t result;

  result = qword_1ED39CC00;
  if (!qword_1ED39CC00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueAutomation, &type metadata for IssueAutomation);
    atomic_store(result, (unint64_t *)&qword_1ED39CC00);
  }
  return result;
}

uint64_t sub_1BB712280()
{
  return 0x6575737369;
}

uint64_t sub_1BB712294@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IssueAutomation.init(from:)(a1, a2);
}

uint64_t sub_1BB7122A8(_QWORD *a1)
{
  return IssueAutomation.encode(to:)(a1);
}

uint64_t initializeWithCopy for IssueAutomation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IssueAutomation(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for IssueAutomation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for IssueAutomation()
{
  return &type metadata for IssueAutomation;
}

uint64_t storeEnumTagSinglePayload for IssueAutomation.IssueType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB71245C + 4 * byte_1BB9421FE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB712490 + 4 * byte_1BB9421F9[v4]))();
}

uint64_t sub_1BB712490(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB712498(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB7124A0);
  return result;
}

uint64_t sub_1BB7124AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB7124B4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB7124B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB7124C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueAutomation.IssueType()
{
  return &type metadata for IssueAutomation.IssueType;
}

uint64_t storeEnumTagSinglePayload for IssueAutomation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB712528 + 4 * byte_1BB942208[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB71255C + 4 * byte_1BB942203[v4]))();
}

uint64_t sub_1BB71255C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB712564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB71256CLL);
  return result;
}

uint64_t sub_1BB712578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB712580);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB712584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB71258C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueAutomation.CodingKeys()
{
  return &type metadata for IssueAutomation.CodingKeys;
}

unint64_t sub_1BB7125AC()
{
  unint64_t result;

  result = qword_1EF2CB208;
  if (!qword_1EF2CB208)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB942464, &type metadata for IssueAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CB208);
  }
  return result;
}

unint64_t sub_1BB7125F4()
{
  unint64_t result;

  result = qword_1EF2CB210;
  if (!qword_1EF2CB210)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9423D4, &type metadata for IssueAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CB210);
  }
  return result;
}

unint64_t sub_1BB71263C()
{
  unint64_t result;

  result = qword_1EF2CB218;
  if (!qword_1EF2CB218)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9423FC, &type metadata for IssueAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CB218);
  }
  return result;
}

uint64_t sub_1BB712680(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079546575737369 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646961507369 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C646E75427369 && a2 == 0xEC00000064696150 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6843656372756F73 && a2 == 0xED00006C656E6E61)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_1BB7128E8()
{
  unint64_t result;

  result = qword_1EF2CB220[0];
  if (!qword_1EF2CB220[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueAutomation.IssueType, &type metadata for IssueAutomation.IssueType);
    atomic_store(result, qword_1EF2CB220);
  }
  return result;
}

uint64_t *sub_1BB71292C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v6 + v9;
  v11 = *(_QWORD *)(v8 + 64) + 7;
  v12 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
  }
  else
  {
    v16 = AssociatedTypeWitness;
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
    v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v17, v18, v16);
    *(_QWORD *)((v11 + (((unint64_t)a1 + v10) & v17)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v11 + v18) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1BB712AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, v4);
  v6 = *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v10, v11, AssociatedTypeWitness);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BB712BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, v4);
  v6 = *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v11, AssociatedTypeWitness);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BB712CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, v4);
  v6 = *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v10, v11, AssociatedTypeWitness);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1BB712E20(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v11 = AssociatedTypeWitness;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  v14 = *(_QWORD *)(v8 + 64) + 7;
  if (v10 < a2)
  {
    if (((((v14 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v15 = 2;
    else
      v15 = a2 - v10 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    __asm { BR              X17 }
  }
  if ((_DWORD)v6 == v10)
  {
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v20 = a1;
    v9 = v6;
    v11 = v4;
    return v19(v20, v9, v11);
  }
  v20 = (v13 + a1) & ~v12;
  if ((_DWORD)v9 == v10)
  {
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v19(v20, v9, v11);
  }
  v21 = *(_QWORD *)((v14 + v20) & 0xFFFFFFFFFFFFF8);
  if (v21 >= 0xFFFFFFFF)
    LODWORD(v21) = -1;
  return (v21 + 1);
}

void sub_1BB713034(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(sub_1BB86C8B0() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (v9 >= a3)
  {
    v12 = 0u;
    if (a2 <= v9)
      goto LABEL_19;
  }
  else
  {
    if (((*(_DWORD *)(v8 + 64)
         + 7
         + ((*(_DWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~*(unsigned __int8 *)(v8 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v10 = a3 - v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    if (a2 <= v9)
LABEL_19:
      __asm { BR              X15 }
  }
  if (((*(_DWORD *)(v8 + 64)
       + 7
       + ((*(_DWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~*(unsigned __int8 *)(v8 + 80))) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v13 = ~v9 + a2;
    bzero(a1, ((*(_QWORD *)(v8 + 64)+ 7+ ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v13;
  }
  __asm { BR              X10 }
}

void sub_1BB7131D4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x1BB713270);
}

void sub_1BB7131DC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1BB7131E4);
  JUMPOUT(0x1BB713270);
}

void sub_1BB713238()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x1BB713270);
}

void sub_1BB713240()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x1BB713270);
}

uint64_t sub_1BB713248@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_WORD *)(v10 + v14) = 0;
  if (!(_DWORD)v11)
    JUMPOUT(0x1BB713270);
  if ((_DWORD)v13 == v7)
  {
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v4 = v10;
    v5 = v11;
    a1 = v13;
    a2 = v12;
  }
  else
  {
    v4 = (v8 + v10) & v9;
    if ((_DWORD)a1 != v7)
      JUMPOUT(0x1BB713254);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
    v5 = v11;
  }
  return v3(v4, v5, a1, a2);
}

uint64_t sub_1BB713290()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1BB86DEE8();
}

uint64_t sub_1BB713360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;

  if ((sub_1BB86C868() & 1) == 0)
    return 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for FeedDeferredCursorGroup(0, a3, a4, v6);
  swift_getAssociatedConformanceWitness();
  if ((sub_1BB872958() & 1) == 0)
    return 0;
  type metadata accessor for FeedDatabaseGroup(0, a3, a4, v7);
  return static FeedDatabaseGroup.== infix(_:_:)() & 1;
}

uint64_t sub_1BB7134AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB713360(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

_QWORD *FeedAdPipelineProcessor.__allocating_init(bannerAdRequester:prerollAdRequester:nativeAdManager:layoutEnvironmentProvider:rendererEnvironment:journal:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int128 *a5, uint64_t a6)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[3] = 0;
  swift_unknownObjectWeakInit();
  v12[4] = a1;
  v12[5] = a2;
  sub_1BA4CECCC(a3, (uint64_t)(v12 + 6));
  v12[11] = a4;
  sub_1BA4CECCC(a5, (uint64_t)(v12 + 12));
  v12[17] = a6;
  return v12;
}

_QWORD *FeedAdPipelineProcessor.init(bannerAdRequester:prerollAdRequester:nativeAdManager:layoutEnvironmentProvider:rendererEnvironment:journal:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int128 *a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = 0;
  swift_unknownObjectWeakInit();
  v6[4] = a1;
  v6[5] = a2;
  sub_1BA4CECCC(a3, (uint64_t)(v6 + 6));
  v6[11] = a4;
  sub_1BA4CECCC(a5, (uint64_t)(v6 + 12));
  v6[17] = a6;
  return v6;
}

_QWORD *sub_1BB7135D0(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_allocObject();
  return sub_1BB714CF0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1BB713670()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  _QWORD v50[6];
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v1 = (_QWORD *)*v0;
  sub_1BA6D5338();
  v50[3] = v2;
  v50[2] = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v50[1] = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v50[0] = (char *)v50 - v5;
  v6 = v1[11];
  v72 = v1[15];
  v7 = v72;
  v58 = sub_1BB86F778();
  v51 = sub_1BB873A2C();
  v50[5] = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v55 = (char *)v50 - v8;
  MEMORY[0x1E0C80A78](v9);
  v50[4] = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BC278, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53790], v11);
  MEMORY[0x1E0C80A78](v12);
  v54 = (char *)v50 - v13;
  v57 = sub_1BB8721C0();
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v52 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1BB871C50();
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v53 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v67 = (char *)v50 - v17;
  v82 = sub_1BB86CBE0();
  v95 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v76 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v1[14];
  v97 = v1[10];
  v19 = v97;
  v98 = v6;
  v99 = v20;
  v100 = v7;
  v21 = sub_1BB86FD0C();
  v81 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB7B98], v21);
  v22 = sub_1BB8728A4();
  v80 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v79 = (char *)v50 - v23;
  v91 = v21;
  v78 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v24);
  v65 = (char *)v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v75 = (char *)v50 - v27;
  v29 = MEMORY[0x1E0C80A78](v28);
  v87 = (char *)v50 - v30;
  v31 = MEMORY[0x1E0DEA228];
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA228], v22, v29);
  v59 = v22;
  v93 = sub_1BB873E40();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v77 = (char *)v50 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v60 = (char *)v50 - v34;
  v35 = v1[13];
  v36 = v1[16];
  v37 = v1[17];
  v85 = v1[12];
  v97 = v85;
  v98 = v35;
  v83 = v35;
  v84 = v36;
  v99 = v36;
  v100 = v37;
  v71 = v37;
  v38 = sub_1BB86FAD8();
  v62 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB7710], v38);
  v39 = sub_1BB8728A4();
  v64 = *(_QWORD *)(v39 - 8);
  v40 = MEMORY[0x1E0C80A78](v39);
  v63 = (char *)v50 - v41;
  MEMORY[0x1BCCE5B24](v31, v39, v40);
  v90 = v39;
  v88 = sub_1BB873E40();
  v89 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v61 = (char *)v50 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  v86 = sub_1BB870AC8();
  v96 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v66 = (char *)v50 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = v38;
  MEMORY[0x1E0C80A78](v45);
  v46 = v19;
  v97 = v19;
  v98 = v6;
  v47 = v6;
  v74 = v20;
  v99 = v20;
  v100 = v72;
  v94 = sub_1BB871680();
  MEMORY[0x1E0C80A78](v94);
  if (qword_1ED3BA7F0 != -1)
    swift_once();
  v48 = (id)qword_1ED476858;
  v49 = sub_1BB87330C();
  sub_1BB86EF44("Processing blueprint to create ad requests and build layout environment", 71, 2, &dword_1BA493000, v48, v49, MEMORY[0x1E0DEE9D8]);

  v97 = v46;
  v98 = v47;
  v70 = v46;
  v99 = v85;
  v100 = v83;
  v101 = v74;
  v102 = v72;
  v103 = v84;
  v104 = v71;
  type metadata accessor for FeedAdLayoutEnvironmentBuilder();
}

uint64_t FeedAdPipelineProcessor.deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  return v0;
}

uint64_t FeedAdPipelineProcessor.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  return swift_deallocClassInstance();
}

_QWORD *sub_1BB714CF0(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;

  v9[3] = 0;
  swift_unknownObjectWeakInit();
  v9[4] = a1;
  v9[5] = a2;
  sub_1BA4CECCC(a3, (uint64_t)(v9 + 6));
  v9[11] = a4;
  sub_1BA4CECCC(a5, (uint64_t)v9 + *(_QWORD *)(*v9 + 208));
  v9[12] = a6;
  v18 = (char *)v9 + *(_QWORD *)(*v9 + 192);
  v19 = sub_1BB871680();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a7, v19);
  v20 = (char *)v9 + *(_QWORD *)(*v9 + 200);
  v21 = sub_1BB86FAD8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a8, v21);
  v22 = (char *)v9 + *(_QWORD *)(*v9 + 216);
  v23 = sub_1BB870AC8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a9, v23);
  return v9;
}

uint64_t sub_1BB714E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;

  v53 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0C18, (uint64_t (*)(uint64_t))sub_1BA7EF0F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v54 = (char *)v42 - v4;
  v45 = sub_1BB8721C0();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6D5338();
  v9 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  v52 = v9;
  MEMORY[0x1E0C80A78](v8);
  v48 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v50 = (char *)v42 - v15;
  v16 = sub_1BB871E9C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BB871D7C();
  MEMORY[0x1E0C80A78](v20);
  v21 = sub_1BB871C2C();
  v46 = *(_QWORD *)(v21 - 8);
  v47 = v21;
  MEMORY[0x1E0C80A78](v21);
  v44 = (char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB872178();
  sub_1BB871D70();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0D52FD0], v16);
  sub_1BB871C20();
  v23 = sub_1BB872178();
  v25 = v24;
  v26 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v45);
  *(uint64_t *)((char *)v13 + v11[6]) = 0x2000;
  v27 = (char *)v13 + v11[7];
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  *(_OWORD *)((char *)v13 + v11[8]) = xmmword_1BB886E80;
  *v13 = v23;
  v13[1] = v25;
  v28 = v11[5];
  v42[1] = v11;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))((char *)v13 + v28, v7, v26);
  sub_1BA7EF0F8();
  v45 = v29;
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v43(v54, 1, 1, v29);
  v49 = sub_1BA4A2870(&qword_1ED3D35E0, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
  swift_retain();
  v30 = v48;
  sub_1BB871BB4();
  v31 = sub_1BB871B90();
  sub_1BA4A2870(qword_1EF2C18D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52848], MEMORY[0x1E0D52850]);
  v32 = (void *)swift_allocError();
  v34 = v33;
  sub_1BA4B07F0(0, &qword_1EF2CB2A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D529A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v35 = v46;
  v36 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1BB87CE70;
  v38 = v44;
  v39 = v47;
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 16))(v37 + v36, v44, v47);
  *v34 = v37;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v34, *MEMORY[0x1E0D52838], v31);
  v40 = v51;
  sub_1BB871BCC();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v40);

  v43(v54, 1, 1, v45);
  swift_retain();
  sub_1BB871BB4();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v38, v39);
}

BOOL sub_1BB715308(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _BOOL8 v11;
  _QWORD v13[4];

  v2 = *a2;
  v3 = *(_QWORD *)(*a2 + 88);
  v4 = *(_QWORD *)(*a2 + 120);
  v5 = sub_1BB86F778();
  v6 = sub_1BB873A2C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - v8;
  sub_1BB871F50();
  v10 = *(_QWORD *)(v2 + 112);
  v13[0] = *(_QWORD *)(v2 + 80);
  v13[1] = v3;
  v13[2] = v10;
  v13[3] = v4;
  sub_1BB871680();
  sub_1BB871614();
  swift_bridgeObjectRelease();
  v11 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v9, 1, v5) == 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

uint64_t sub_1BB715430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  _QWORD v20[6];

  v20[1] = a5;
  v7 = sub_1BB86FC70();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B0BC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53440], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v20 - v12;
  sub_1BA55BA78((uint64_t)v20 - v12);
  v14 = sub_1BB872034();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  sub_1BB8720D0();
  v20[4] = a1;
  v20[5] = a4 + 16;
  sub_1BA55BADC((void (*)(uint64_t))sub_1BB7159F4);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 208)), *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 208) + 24));
  sub_1BB870888();
  sub_1BB86FC4C();
  sub_1BA60B3C0(v15, v16, v17, v18);
  sub_1BB692D9C();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BB7155B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;

  result = MEMORY[0x1BCCE5D40](a2 + 16);
  if (result)
  {
    v7 = *(_QWORD *)(a2 + 24);
    ObjectType = swift_getObjectType();
    swift_beginAccess();
    v9 = *a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA55BB48(v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(a1, ObjectType, v7);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BB715674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BA8FD860(v0 + 16);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  swift_release();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 192);
  v2 = sub_1BB871680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 200);
  v4 = sub_1BB86FAD8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 208));
  v5 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 216);
  v6 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t sub_1BB71577C()
{
  sub_1BB715674();
  return swift_deallocClassInstance();
}

void type metadata accessor for FeedAdPipelineProcessorTask()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BB7157A8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB7157D4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB715800()
{
  uint64_t v0;

  return sub_1BA83A1B4(*(_QWORD *)(v0 + 16));
}

uint64_t method lookup function for FeedAdPipelineProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedAdPipelineProcessor.__allocating_init(bannerAdRequester:prerollAdRequester:nativeAdManager:layoutEnvironmentProvider:rendererEnvironment:journal:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of FeedAdPipelineProcessor.process<A, B, C, D>(blueprint:layoutBlueprint:layoutCollection:layoutOptions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1BB715838()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1BB871680();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86FAD8();
    if (v2 <= 0x3F)
    {
      result = sub_1BB870AC8();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1BB715920()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB715944(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BC278, (uint64_t (*)(uint64_t))MEMORY[0x1E0D53790], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1BB715998(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB715308(a1, v1);
}

uint64_t sub_1BB7159A0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB7159E4()
{
  uint64_t *v0;

  return sub_1BB715430(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1BB7159F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB7155B8(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t Array<A>.formatCompatible.getter()
{
  uint64_t v0;

  if (qword_1ED3BB468 != -1)
    swift_once();
  v0 = sub_1BB86EB84();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED3B8FC8);
  return Array<A>.formatCompatible(with:)();
}

uint64_t dispatch thunk of FormatVersionable.formatVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id sub_1BB715AE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PuzzleProcessTerminationPolicyDecider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PuzzleProcessTerminationPolicyDecider()
{
  return objc_opt_self();
}

uint64_t FormatAccessibilityLayoutValue.__allocating_init(identifier:value:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t result;
  char v7;

  result = swift_allocObject();
  v7 = *a3;
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_BYTE *)(result + 32) = v7;
  return result;
}

uint64_t FormatAccessibilityLayoutValue.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void FormatAccessibilityLayoutValue.value.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t FormatAccessibilityLayoutValue.init(identifier:value:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  char v4;

  v4 = *a3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 32) = v4;
  return v3;
}

uint64_t FormatAccessibilityLayoutValue.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BB715BE4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4AB028(&qword_1EF2CB2B8, (uint64_t)&protocol conformance descriptor for FormatAccessibilityLayoutValue);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB715C18(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4AB028(&qword_1ED3CCDA0, (uint64_t)&protocol conformance descriptor for FormatAccessibilityLayoutValue);
  a1[2] = sub_1BA4AB028(&qword_1ED3CCD98, (uint64_t)&protocol conformance descriptor for FormatAccessibilityLayoutValue);
  result = sub_1BA4AB028(&qword_1EF2CB2C0, (uint64_t)&protocol conformance descriptor for FormatAccessibilityLayoutValue);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB715C7C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BAE7EFCC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB715CA4(_QWORD *a1)
{
  return FormatAccessibilityLayoutValue.encode(to:)(a1);
}

uint64_t sub_1BB715CC4(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed30FormatAccessibilityLayoutValueC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t method lookup function for FormatAccessibilityLayoutValue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatAccessibilityLayoutValue.__allocating_init(identifier:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for DebugFormatUploadHiddenSection()
{
  return &type metadata for DebugFormatUploadHiddenSection;
}

void sub_1BB715CF8(uint64_t a1, unsigned __int8 *a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  v10 = a3;
  v9 = type metadata accessor for DebugFormatUploadHiddenReason();
  MEMORY[0x1E0C80A78](v9);
  v8 = type metadata accessor for DebugFormatUploadHiddenEntry();
  MEMORY[0x1E0C80A78](v8);
  v7[3] = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v11 = *a2;
  __asm { BR              X9 }
}

uint64_t sub_1BB715E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;

  v5 = 0x726564616568;
  swift_bridgeObjectRetain();
  v6 = sub_1BA689E44(0x726564616568, v3);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    *(_QWORD *)(v4 - 96) = v6;
    *(_QWORD *)(v4 - 88) = v8;
    sub_1BA7114A0();
    *(_QWORD *)(v4 - 152) = sub_1BB873ABC();
    *(_QWORD *)(v4 - 144) = v1;
    v9 = v0;
    v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v12 = sub_1BA9C0430(1uLL, 0x726564616568, v3);
    v14 = v13;
    v16 = v15;
    v18 = v17;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE334C](v12, v14, v16, v18);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 - 96) = *(_QWORD *)(v4 - 152);
    *(_QWORD *)(v4 - 88) = v11;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v19);
    swift_bridgeObjectRelease();
    v0 = v9;
    v1 = *(_QWORD *)(v4 - 144);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v4 - 96);
    v3 = *(_QWORD *)(v4 - 88);
  }
  *(_QWORD *)(v4 - 96) = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v0 + 16))
  {
    *(_QWORD *)(v4 - 160) = v3;
    *(_QWORD *)(v4 - 152) = v5;
    v20 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    *(_QWORD *)(v4 - 144) = v20;
    *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 104);
    sub_1BA4C2DD8(v0 + v20, v2, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatUploadHiddenEntry);
    __asm { BR              X9 }
  }
  return v5;
}

uint64_t sub_1BB71634C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatUploadHiddenEntry();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB716388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatUploadHiddenEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

NewsFeed::AlertShortcutsLimitReached __swiftcall AlertShortcutsLimitReached.init(shortcutLimit:)(NewsFeed::AlertShortcutsLimitReached shortcutLimit)
{
  uint64_t v1;

  *(_QWORD *)v1 = shortcutLimit.shortcutLimit.value;
  *(_BYTE *)(v1 + 8) = shortcutLimit.shortcutLimit.is_nil;
  return shortcutLimit;
}

uint64_t AlertShortcutsLimitReached.title.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

uint64_t AlertShortcutsLimitReached.message.getter()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v3 = sub_1BB86C340();

  }
  else
  {
    type metadata accessor for Localized();
    v4 = swift_getObjCClassFromMetadata();
    v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v4);
    sub_1BB86C340();

    sub_1BA7AA598();
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
    v7 = sub_1BB87420C();
    v9 = v8;
    *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v6 + 32) = v7;
    *(_QWORD *)(v6 + 40) = v9;
    v3 = sub_1BB8729D0();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t AlertShortcutsLimitReached.acceptButton.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

uint64_t sub_1BB716744()
{
  return AlertShortcutsLimitReached.title.getter();
}

uint64_t sub_1BB71677C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

ValueMetadata *type metadata accessor for AlertShortcutsLimitReached()
{
  return &type metadata for AlertShortcutsLimitReached;
}

uint64_t destroy for DebugFormatTestSection(uint64_t a1)
{
  return sub_1BB65FDA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for DebugFormatTestSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BB65FE10(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for DebugFormatTestSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BB65FE10(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BB65FDA0(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for DebugFormatTestSection(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1BB65FDA0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatTestSection(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 32) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 32) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DebugFormatTestSection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 126;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1BB716A30(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 32);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BB716A50(uint64_t result)
{
  *(_BYTE *)(result + 32) &= 0x3Fu;
  return result;
}

uint64_t sub_1BB716A60(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestSection()
{
  return &type metadata for DebugFormatTestSection;
}

void sub_1BB716AA0(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  sub_1BB716AD0(*a4);
}

uint64_t sub_1BB716AA8(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return sub_1BB716CD4(*a4) & 1;
}

void sub_1BB716AD0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - v7;
  v9 = objc_msgSend(a1, sel_identifier, v6);
  if (!v9)
  {
    sub_1BB8729A0();
    v9 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v10 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForIssueID_, v9);

  if (v10)
  {
    sub_1BB86C5EC();

    v11 = sub_1BB86C67C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 0, 1, v11);
  }
  else
  {
    v11 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  }
  sub_1BA5193C4((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BB86C67C();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
  {
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  }
  else
  {
    sub_1BB86C538();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    v13 = objc_msgSend((id)objc_opt_self(), sel_generalPasteboard);
    v14 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setString_, v14);

  }
}

uint64_t sub_1BB716CD4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  unint64_t v27;
  id v28;
  unsigned int v29;
  id v30;
  id v31;
  unsigned __int8 v32;
  uint64_t v33;
  id v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[24];
  uint64_t v38;

  v3 = sub_1BB86C67C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_identifier, v8);
  if (!v11)
  {
    sub_1BB8729A0();
    v11 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v12 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForIssueID_, v11);

  if (v12)
  {
    sub_1BB86C5EC();

    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v10, v6, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v10, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) != 1)
    {
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v13 = *(void **)(v1 + 16);
      v14 = objc_msgSend(a1, sel_sourceChannel);
      v15 = objc_msgSend(v13, sel_purchaseProvider);
      if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
      {
        v16 = objc_msgSend(v14, sel_asSection);
        if (!v16
          || (v17 = objc_msgSend(v16, sel_parentID),
              swift_unknownObjectRelease(),
              !v17))
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
      }
      else
      {
        v17 = objc_msgSend(v14, sel_identifier);
      }
      v19 = sub_1BB8729A0();
      v21 = v20;

      v22 = objc_msgSend(v15, sel_purchasedTagIDs);
      v23 = sub_1BB873030();

      LOBYTE(v22) = sub_1BA761FE4(v19, v21, v23);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
      {
        swift_unknownObjectRelease();
        return 1;
      }
LABEL_15:
      v24 = (char *)objc_msgSend(objc_msgSend(v13, sel_bundleSubscriptionProvider), sel_bundleSubscription);
      swift_unknownObjectRelease();
      if (objc_getAssociatedObject(v24, v24 + 1))
      {
        sub_1BB873B64();
        swift_unknownObjectRelease();
      }
      else
      {
        v35 = 0u;
        v36 = 0u;
      }
      sub_1BA5193C4((uint64_t)&v35, (uint64_t)v37, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
      if (v38)
      {
        sub_1BA78DE28();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v25 = v34;
          v26 = objc_msgSend(v34, sel_integerValue);
          if (v26 == (id)-1)
          {

            goto LABEL_35;
          }
          v27 = (unint64_t)v26;
LABEL_24:
          if (objc_getAssociatedObject(v24, (const void *)~v27))
          {
            sub_1BB873B64();
            swift_unknownObjectRelease();
          }
          else
          {
            v35 = 0u;
            v36 = 0u;
          }
          sub_1BA5193C4((uint64_t)&v35, (uint64_t)v37, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
          if (v38)
          {
            sub_1BA78DE28();
            if ((swift_dynamicCast() & 1) != 0)
            {
              v28 = v34;
              v29 = objc_msgSend(v28, sel_integerValue);

              if (((v29 ^ v27) & 1) != 0)
              {
LABEL_35:
                v30 = objc_msgSend(objc_msgSend(v13, sel_bundleSubscriptionProvider), sel_bundleSubscription);
                swift_unknownObjectRelease();
                v31 = objc_msgSend(v14, sel_identifier);
                if (!v31)
                {
                  sub_1BB8729A0();
                  v31 = (id)sub_1BB872970();
                  swift_bridgeObjectRelease();
                }
                v32 = objc_msgSend(v30, sel_containsTagID_, v31);
                swift_unknownObjectRelease();

                if ((v32 & 1) != 0)
                  return 1;
                return objc_msgSend(a1, sel_isPaid) ^ 1;
              }
LABEL_33:
              swift_unknownObjectRelease();
              return objc_msgSend(a1, sel_isPaid) ^ 1;
            }
          }
          else
          {
            sub_1BA4A2E80((uint64_t)v37, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
          }

          if ((v27 & 1) != 0)
            goto LABEL_35;
          goto LABEL_33;
        }
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v37, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
      }
      v25 = 0;
      v27 = 0;
      goto LABEL_24;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v10, 1, 1, v3);
  }
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  return 0;
}

uint64_t FeedGroupEmitterCursor.allGroups.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for FeedCursorGroup(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  return sub_1BB872E5C();
}

uint64_t FeedGroupEmitterCursor.feedMode.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return FeedServiceConfigType.feedMode.getter(*(_QWORD *)(*(_QWORD *)v1 + 80), *(_QWORD *)(*(_QWORD *)v1 + 88), a1);
}

uint64_t FeedGroupEmitterCursor.serviceConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
}

uint64_t FeedGroupEmitterCursor.priorServiceConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.nextServiceConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.cursorGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.databaseGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.priorGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.priorDatabaseGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.nextGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.nextDatabaseGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.pool.getter()
{
  return swift_retain();
}

uint64_t FeedGroupEmitterCursor.cursor.getter()
{
  return swift_retain();
}

uint64_t FeedGroupEmitterCursor.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;

  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 184);
  v3 = *(void **)v2;
  v4 = *(_BYTE *)(v2 + 8);
  v5 = *(_BYTE *)(v2 + 9);
  v6 = *(_BYTE *)(v2 + 10);
  v7 = *(_BYTE *)(v2 + 11);
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 40);
  v12 = *(_BYTE *)(v2 + 48);
  v14 = *(void **)(v2 + 56);
  v13 = *(_QWORD *)(v2 + 64);
  v15 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)a1 = *(_QWORD *)v2;
  *(_BYTE *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 9) = v5;
  *(_BYTE *)(a1 + 10) = v6;
  *(_BYTE *)(a1 + 11) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v15;
  v16 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v10, v11);
  v17 = v14;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void FeedGroupEmitterCursor.cachePolicy.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 192));
  v3 = *v2;
  LOBYTE(v2) = *((_BYTE *)v2 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = (_BYTE)v2;
}

void FeedGroupEmitterCursor.kind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 200));
}

uint64_t FeedGroupEmitterCursor.currentDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 208);
  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedGroupEmitterCursor.isLast.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 216));
}

uint64_t FeedGroupEmitterCursor.slots.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.gapPromise.getter()
{
  return swift_retain();
}

uint64_t FeedGroupEmitterCursor.tracker.getter()
{
  return swift_retain();
}

uint64_t FeedGroupEmitterCursor.sidecars.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.allDatabaseGroups.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for FeedDatabaseGroup(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  return sub_1BB872E5C();
}

uint64_t sub_1BB717564()
{
  return swift_deallocObject();
}

uint64_t FeedGroupEmitterCursor.unwrappedPool.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_getAssociatedTypeWitness();
  sub_1BB873A2C();
  sub_1BB86EC14();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (void *)sub_1BB86E854();
  v5 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_1BB717640(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1BB71786C(a1);
  if (!v1)
    return swift_retain();
  return result;
}

uint64_t sub_1BB717664()
{
  uint64_t v0;

  return sub_1BB717640(v0);
}

uint64_t sub_1BB71767C()
{
  return swift_deallocObject();
}

uint64_t LazyFeedGroupEmitterCursor.value.getter()
{
  uint64_t v1;

  sub_1BB86E71C();
  return v1;
}

uint64_t *LazyFeedGroupEmitterCursor.__allocating_init(promise:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;

  swift_allocObject();
  v4 = sub_1BA4FA308(a1, a2);
  swift_release();
  return v4;
}

uint64_t *LazyFeedGroupEmitterCursor.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;

  v2 = v1;
  swift_allocObject();
  v4 = sub_1BB71787C(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t *LazyFeedGroupEmitterCursor.init(value:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = sub_1BB71787C(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t sub_1BB7177BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86EAAC();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  result = sub_1BB86E9D4();
  *a3 = result;
  return result;
}

uint64_t LazyFeedGroupEmitterCursor.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1BB71786C(uint64_t a1)
{
  return *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 168));
}

uint64_t *sub_1BB71787C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = *v1;
  v4 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v4);
  v5 = *(_QWORD *)(v3 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v8);
  sub_1BB86EAAC();
  sub_1BB86E74C();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_1BA5D1A70();
  v1[2] = sub_1BB86E734();
  return v1;
}

uint64_t method lookup function for FeedGroupEmitterCursor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedGroupEmitterCursor.__allocating_init(serviceConfig:priorServiceConfigs:nextServiceConfigs:cursorGroups:priorGroups:nextGroups:databaseGroups:priorDatabaseGroups:nextDatabaseGroups:pool:cursor:context:cachePolicy:kind:tracker:currentDate:isLast:slots:gapPromise:sidecars:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t method lookup function for LazyFeedGroupEmitterCursor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LazyFeedGroupEmitterCursor.__allocating_init(promise:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of LazyFeedGroupEmitterCursor.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1BB717A34()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1BB717A8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1BB7177BC(v1 + ((v3 + 24) & ~v3), v2, a1);
}

uint64_t sub_1BB717AA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB717ACC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 24))();
  *a1 = result;
  return result;
}

uint64_t FormatWebEmbed.selectors.getter()
{
  type metadata accessor for FormatWebEmbed();
  return swift_bridgeObjectRetain();
}

uint64_t FormatWebEmbed.properties.getter()
{
  type metadata accessor for FormatWebEmbed();
  return swift_bridgeObjectRetain();
}

uint64_t FormatWebEmbed.init(url:identifier:actionUrl:article:webArchiveResourceID:dataResourceID:traits:selectors:properties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a7;
  v41 = a8;
  v38 = a5;
  v39 = a6;
  v42 = a13;
  v43 = a4;
  v37 = a10;
  v17 = sub_1BB86C67C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *a11;
  v35 = *((unsigned __int8 *)a11 + 8);
  v21 = (int *)type metadata accessor for FormatWebEmbed();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v22((char *)a9 + v21[5], a1, v17);
  v22(v20, a1, v17);
  if (!a3)
  {
    a2 = sub_1BB86C538();
    a3 = v23;
  }
  v24 = *(void (**)(char *, uint64_t))(v18 + 8);
  v24(v20, v17);
  *a9 = a2;
  a9[1] = a3;
  v25 = v43;
  sub_1BA7E8428(v43, (uint64_t)a9 + v21[6]);
  *(uint64_t *)((char *)a9 + v21[7]) = v38;
  v26 = (uint64_t *)((char *)a9 + v21[8]);
  v27 = v40;
  *v26 = v39;
  v26[1] = v27;
  v28 = (uint64_t *)((char *)a9 + v21[9]);
  v29 = v37;
  *v28 = v41;
  v28[1] = v29;
  v30 = v36;
  if (v35)
    v30 = 0;
  *(uint64_t *)((char *)a9 + v21[10]) = v30;
  v31 = MEMORY[0x1E0DEE9E8];
  if (a12)
    v31 = a12;
  *(uint64_t *)((char *)a9 + v21[11]) = v31;
  if (v42)
    v32 = v42;
  else
    v32 = MEMORY[0x1E0DEE9D8];
  sub_1BA7F0A80(v25);
  result = ((uint64_t (*)(uint64_t, uint64_t))v24)(a1, v17);
  *(uint64_t *)((char *)a9 + v21[12]) = v32;
  return result;
}

uint64_t FormatWebEmbed.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbed.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatWebEmbed() + 20);
  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FormatWebEmbed.actionUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatWebEmbed() + 24);
  return sub_1BA7E8428(v3, a1);
}

uint64_t FormatWebEmbed.article.getter()
{
  type metadata accessor for FormatWebEmbed();
  return swift_retain();
}

uint64_t FormatWebEmbed.webArchiveResourceID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatWebEmbed() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbed.dataResourceID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatWebEmbed() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbed.traits.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FormatWebEmbed();
  *a1 = *(_QWORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t sub_1BB717E54(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatWebEmbed() + 44);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatWebEmbed.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatWebEmbed() + 44);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatWebEmbed.selectors.modify())()
{
  type metadata accessor for FormatWebEmbed();
  return nullsub_1;
}

uint64_t sub_1BB717F04(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatWebEmbed() + 48);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatWebEmbed.properties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatWebEmbed() + 48);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatWebEmbed.properties.modify())()
{
  type metadata accessor for FormatWebEmbed();
  return nullsub_1;
}

NewsFeed::FormatWebEmbed::Traits __swiftcall FormatWebEmbed.Traits.init(rawValue:)(NewsFeed::FormatWebEmbed::Traits rawValue)
{
  NewsFeed::FormatWebEmbed::Traits *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FormatWebEmbed.Traits.liveUpdating.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FormatWebEmbed.Traits.TraitName.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t FormatWebEmbed.Traits.TraitName.rawValue.getter()
{
  return 0x616470556576696CLL;
}

uint64_t sub_1BB71803C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB718094()
{
  return sub_1BB872A90();
}

uint64_t sub_1BB7180B4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB718108@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BB718158(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "liveUpdating");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1BB71817C()
{
  sub_1BB71ADCC();
  return sub_1BB872D60();
}

uint64_t sub_1BB7181D8()
{
  sub_1BB71ADCC();
  return sub_1BB872D0C();
}

uint64_t FormatWebEmbed.Traits.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FormatWebEmbed.Traits.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  char v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874668();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v5 = sub_1BB87423C();
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((v5 & 1) == 0)
    {
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
        sub_1BB719770();
        sub_1BB874230();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1BB3921E8(0, v6[2] + 1, 1, v6);
        v8 = v6[2];
        v7 = v6[3];
        if (v8 >= v7 >> 1)
          v6 = sub_1BB3921E8((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
        v6[2] = v8 + 1;
        v6[v8 + 4] = 1;
        __swift_project_boxed_opaque_existential_1(v15, v16);
      }
      while ((sub_1BB87423C() & 1) == 0);
    }
    v9 = v6[2];
    if (v9)
    {
      v10 = 0;
      v11 = v6 + 4;
      do
      {
        v13 = *v11++;
        v12 = v13;
        if ((v13 & ~v10) == 0)
          v12 = 0;
        v10 |= v12;
        --v9;
      }
      while (v9);
    }
    else
    {
      v10 = 0;
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatWebEmbed.Traits.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _BYTE v6[24];
  uint64_t v7;

  v3 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746A4();
  while (v3)
  {
    v4 = __clz(__rbit64(v3));
    if (v4 < 0x40)
    {
      v3 ^= 1 << v4;
      if (!v4)
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
        sub_1BB7197B4();
        sub_1BB874248();
        if (v2)
          break;
      }
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_1BB71850C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatWebEmbed.Traits.init(from:)(a1, a2);
}

uint64_t sub_1BB718520(_QWORD *a1)
{
  return FormatWebEmbed.Traits.encode(to:)(a1);
}

uint64_t FormatWebEmbed.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  unsigned __int8 v77;
  uint64_t v78;

  v65 = a2;
  v67 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1E0C80A78](v67);
  v66 = (uint64_t *)((char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v4);
  v68 = (uint64_t)&v53 - v5;
  v70 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v69 = (char *)&v53 - v10;
  sub_1BB7198C4(0, &qword_1ED3AB410, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v53 - v17;
  v19 = a1[3];
  v71 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1BB7197F8();
  v20 = v72;
  sub_1BB87468C();
  if (!v20)
  {
    v72 = v15;
    v63 = v6;
    v64 = v13;
    v62 = v8;
    LOBYTE(v76) = 0;
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    sub_1BB8740D4();
    v21 = v12;
    LOBYTE(v76) = 1;
    v22 = sub_1BB87402C();
    v24 = v23;
    LOBYTE(v76) = 2;
    sub_1BB874068();
    type metadata accessor for FormatArticle();
    LOBYTE(v76) = 3;
    sub_1BA4A2870(&qword_1ED3B38F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle, (uint64_t)&protocol conformance descriptor for FormatArticle);
    sub_1BB874068();
    v26 = v78;
    LOBYTE(v76) = 4;
    v27 = sub_1BB87402C();
    v29 = v28;
    v59 = v27;
    v61 = v26;
    v30 = v64;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v72, v18, v12);
    if (v29)
    {
      v60 = v29;
      v58 = v22;
      v31 = v18;
      v32 = *(void (**)(char *, uint64_t))(v30 + 8);
      v32(v72, v12);
    }
    else
    {
      LOBYTE(v76) = 9;
      v33 = v72;
      v59 = sub_1BB87402C();
      v60 = v37;
      v58 = v22;
      v31 = v18;
      v32 = *(void (**)(char *, uint64_t))(v64 + 8);
      v32(v33, v12);
    }
    LOBYTE(v76) = 5;
    v34 = sub_1BB87402C();
    v36 = v35;
    LOBYTE(v75) = 6;
    sub_1BB71983C();
    sub_1BB874068();
    v72 = v76;
    LODWORD(v64) = v77;
    sub_1BA6BCC84();
    LOBYTE(v74) = 7;
    sub_1BA64D3D4((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    sub_1BB874068();
    v38 = v75;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9470, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v73 = 8;
    sub_1BA5DBC08((unint64_t *)&qword_1ED3B9478, (uint64_t (*)(void))sub_1BA8350B4, MEMORY[0x1E0DEAF40]);
    v57 = v21;
    v56 = v31;
    sub_1BB874068();
    v55 = v38;
    v54 = v74;
    v39 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
    v40 = v69;
    v41 = v70;
    v39((char *)v66 + *(int *)(v67 + 20), v69, v70);
    v39(v62, v40, v41);
    if (!v24)
    {
      v58 = sub_1BB86C538();
      v24 = v42;
    }
    v63 = *(_QWORD *)(v63 + 8);
    v43 = v70;
    ((void (*)(char *, uint64_t))v63)(v62, v70);
    v44 = (uint64_t)v66;
    v45 = (int *)v67;
    *v66 = v58;
    *(_QWORD *)(v44 + 8) = v24;
    v46 = v68;
    sub_1BA7E8428(v68, v44 + v45[6]);
    *(_QWORD *)(v44 + v45[7]) = v61;
    v47 = (uint64_t *)(v44 + v45[8]);
    v48 = v60;
    *v47 = v59;
    v47[1] = v48;
    v49 = (uint64_t *)(v44 + v45[9]);
    *v49 = v34;
    v49[1] = v36;
    v50 = v72;
    if ((_DWORD)v64)
      v50 = 0;
    *(_QWORD *)(v44 + v45[10]) = v50;
    v51 = MEMORY[0x1E0DEE9E8];
    if (v55)
      v51 = v55;
    *(_QWORD *)(v44 + v45[11]) = v51;
    if (v54)
      v52 = v54;
    else
      v52 = MEMORY[0x1E0DEE9D8];
    sub_1BA7F0A80(v46);
    ((void (*)(char *, uint64_t))v63)(v69, v43);
    *(_QWORD *)(v44 + v45[12]) = v52;
    sub_1BB719880(v44, v65);
    v32(v56, v57);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
}

uint64_t FormatWebEmbed.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 v12;
  char v13;

  v3 = v1;
  sub_1BB7198C4(0, &qword_1ED3AB650, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB7197F8();
  sub_1BB8746C8();
  v10 = (int *)type metadata accessor for FormatWebEmbed();
  LOBYTE(v12) = 0;
  sub_1BB86C67C();
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
  sub_1BB8741AC();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1BB87417C();
    LOBYTE(v12) = 2;
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BB719920();
    sub_1BB8741AC();
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + v10[7]);
    v13 = 3;
    sub_1BA4A3FB4(0, &qword_1ED39CBB8, (void (*)(uint64_t))type metadata accessor for FormatArticle);
    sub_1BB7199A8();
    sub_1BB8741AC();
    v12 = *(_OWORD *)(v3 + v10[8]);
    v13 = 4;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA6604A4();
    sub_1BB8741AC();
    v12 = *(_OWORD *)(v3 + v10[9]);
    v13 = 5;
    sub_1BB8741AC();
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + v10[10]);
    v13 = 6;
    sub_1BB719A30();
    sub_1BB8741AC();
    if (*(_QWORD *)(*(_QWORD *)(v3 + v10[11]) + 16))
    {
      *(_QWORD *)&v12 = *(_QWORD *)(v3 + v10[11]);
      v13 = 7;
      sub_1BA6BCC84();
      sub_1BA64D3D4((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
      sub_1BB8741AC();
    }
    if (*(_QWORD *)(*(_QWORD *)(v3 + v10[12]) + 16))
    {
      *(_QWORD *)&v12 = *(_QWORD *)(v3 + v10[12]);
      v13 = 8;
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9470, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5DBC08((unint64_t *)&qword_1ED39D9A0, (uint64_t (*)(void))sub_1BA89B7F8, MEMORY[0x1E0DEAF10]);
      sub_1BB8741AC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB719118(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB719144
                                                            + 4 * asc_1BB942BC0[a1]))(7107189, 0xE300000000000000);
}

uint64_t sub_1BB719144()
{
  return 0x696669746E656469;
}

uint64_t sub_1BB719160()
{
  return 0x72556E6F69746361;
}

uint64_t sub_1BB71917C()
{
  return 0x656C6369747261;
}

unint64_t sub_1BB719194()
{
  return 0xD000000000000014;
}

uint64_t sub_1BB719234()
{
  unsigned __int8 *v0;

  return sub_1BB719118(*v0);
}

uint64_t sub_1BB71923C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB71A9A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB719260()
{
  sub_1BB7197F8();
  return sub_1BB874710();
}

uint64_t sub_1BB719288()
{
  sub_1BB7197F8();
  return sub_1BB87471C();
}

uint64_t sub_1BB7192B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatWebEmbed.init(from:)(a1, a2);
}

uint64_t sub_1BB7192C4(_QWORD *a1)
{
  return FormatWebEmbed.encode(to:)(a1);
}

void FormatWebEmbed.feedItemTraits.getter(_QWORD *a1@<X8>)
{
  *a1 = 2048;
}

uint64_t _s8NewsFeed14FormatWebEmbedV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  _QWORD *v60;

  v4 = sub_1BB86C67C();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v58 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA842538();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, v5);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v57 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v57 - v19;
  v21 = *a1;
  v22 = a1[1];
  v59 = a1;
  v60 = a2;
  if (v21 != *a2 || v22 != a2[1])
  {
    LOBYTE(v23) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v23 & 1;
  }
  v24 = (int *)type metadata accessor for FormatWebEmbed();
  v26 = v59;
  v25 = v60;
  if ((MEMORY[0x1BCCDCEFC]((char *)v59 + v24[5], (char *)v60 + v24[5]) & 1) == 0)
  {
LABEL_11:
    LOBYTE(v23) = 0;
    return v23 & 1;
  }
  sub_1BA7E8428((uint64_t)v26 + v24[6], (uint64_t)v20);
  sub_1BA7E8428((uint64_t)v25 + v24[6], (uint64_t)v17);
  v27 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1BA7E8428((uint64_t)v20, (uint64_t)v11);
  sub_1BA7E8428((uint64_t)v17, v27);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v28((uint64_t)v11, 1, v4) == 1)
  {
    sub_1BA7F0A80((uint64_t)v17);
    sub_1BA7F0A80((uint64_t)v20);
    if (v28(v27, 1, v4) == 1)
    {
      sub_1BA7F0A80((uint64_t)v11);
      goto LABEL_14;
    }
LABEL_10:
    sub_1BA929DD8((uint64_t)v11);
    goto LABEL_11;
  }
  sub_1BA7E8428((uint64_t)v11, (uint64_t)v14);
  if (v28(v27, 1, v4) == 1)
  {
    sub_1BA7F0A80((uint64_t)v17);
    sub_1BA7F0A80((uint64_t)v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v4);
    goto LABEL_10;
  }
  v30 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v58, v27, v4);
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v31 = sub_1BB872958();
  v32 = *(void (**)(char *, uint64_t))(v6 + 8);
  v32(v30, v4);
  sub_1BA7F0A80((uint64_t)v17);
  sub_1BA7F0A80((uint64_t)v20);
  v32(v14, v4);
  sub_1BA7F0A80((uint64_t)v11);
  if ((v31 & 1) == 0)
    goto LABEL_11;
LABEL_14:
  v33 = v24[7];
  v35 = v59;
  v34 = v60;
  v23 = *(_QWORD *)((char *)v60 + v33);
  if (*(_QWORD *)((char *)v59 + v33))
  {
    if (!v23)
      return v23 & 1;
    type metadata accessor for FormatArticle();
    swift_retain();
    v36 = swift_retain();
    v37 = static FormatArticle.== infix(_:_:)(v36, v23);
    swift_release();
    swift_release();
    if ((v37 & 1) == 0)
      goto LABEL_11;
  }
  else if (v23)
  {
    goto LABEL_11;
  }
  v38 = v24[8];
  v39 = (_QWORD *)((char *)v35 + v38);
  v40 = *(_QWORD *)((char *)v35 + v38 + 8);
  v41 = (_QWORD *)((char *)v34 + v38);
  v42 = v41[1];
  if (v40)
  {
    if (!v42)
      goto LABEL_11;
    if (*v39 != *v41 || v40 != v42)
    {
      LOBYTE(v23) = 0;
      if ((sub_1BB874398() & 1) == 0)
        return v23 & 1;
    }
  }
  else if (v42)
  {
    goto LABEL_11;
  }
  v43 = v24[9];
  v44 = (_QWORD *)((char *)v59 + v43);
  v45 = *(_QWORD *)((char *)v59 + v43 + 8);
  v46 = (_QWORD *)((char *)v60 + v43);
  v47 = v46[1];
  if (!v45)
  {
    if (!v47)
      goto LABEL_33;
    goto LABEL_11;
  }
  if (!v47)
    goto LABEL_11;
  if (*v44 == *v46 && v45 == v47 || (LOBYTE(v23) = 0, (sub_1BB874398() & 1) != 0))
  {
LABEL_33:
    v49 = v59;
    v48 = v60;
    if (*(_QWORD *)((char *)v59 + v24[10]) == *(_QWORD *)((char *)v60 + v24[10]))
    {
      v50 = v24[11];
      v51 = *(_QWORD *)((char *)v59 + v50);
      v52 = *(_QWORD *)((char *)v60 + v50);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v53 = sub_1BA6EB330(v51, v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v53 & 1) != 0)
      {
        v54 = v24[12];
        v55 = *(_QWORD *)((char *)v49 + v54);
        v56 = *(_QWORD *)((char *)v48 + v54);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LOBYTE(v23) = sub_1BA8880B0(v55, v56);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v23 & 1;
      }
    }
    goto LABEL_11;
  }
  return v23 & 1;
}

unint64_t sub_1BB719770()
{
  unint64_t result;

  result = qword_1ED3A5880;
  if (!qword_1ED3A5880)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbed.Traits.TraitName, &type metadata for FormatWebEmbed.Traits.TraitName);
    atomic_store(result, (unint64_t *)&qword_1ED3A5880);
  }
  return result;
}

unint64_t sub_1BB7197B4()
{
  unint64_t result;

  result = qword_1ED3A29B0;
  if (!qword_1ED3A29B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbed.Traits.TraitName, &type metadata for FormatWebEmbed.Traits.TraitName);
    atomic_store(result, (unint64_t *)&qword_1ED3A29B0);
  }
  return result;
}

unint64_t sub_1BB7197F8()
{
  unint64_t result;

  result = qword_1ED3A5860;
  if (!qword_1ED3A5860)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB943114, &type metadata for FormatWebEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A5860);
  }
  return result;
}

unint64_t sub_1BB71983C()
{
  unint64_t result;

  result = qword_1ED39B228;
  if (!qword_1ED39B228)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbed.Traits, &type metadata for FormatWebEmbed.Traits);
    atomic_store(result, (unint64_t *)&qword_1ED39B228);
  }
  return result;
}

uint64_t sub_1BB719880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatWebEmbed();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BB7198C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB7197F8();
    v7 = a3(a1, &type metadata for FormatWebEmbed.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB719920()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = qword_1ED39A460;
  if (!qword_1ED39A460)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4A3FB4(255, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v3 = v2;
    v4 = sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, v1, MEMORY[0x1E0CB0010]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE988], v3, &v4);
    atomic_store(result, (unint64_t *)&qword_1ED39A460);
  }
  return result;
}

unint64_t sub_1BB7199A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED39CBC0;
  if (!qword_1ED39CBC0)
  {
    sub_1BA4A3FB4(255, &qword_1ED39CBB8, (void (*)(uint64_t))type metadata accessor for FormatArticle);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED39CBB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle, (uint64_t)&protocol conformance descriptor for FormatArticle);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39CBC0);
  }
  return result;
}

unint64_t sub_1BB719A30()
{
  unint64_t result;

  result = qword_1ED39B218;
  if (!qword_1ED39B218)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbed.Traits, &type metadata for FormatWebEmbed.Traits);
    atomic_store(result, (unint64_t *)&qword_1ED39B218);
  }
  return result;
}

unint64_t sub_1BB719A78()
{
  unint64_t result;

  result = qword_1EF2CB2C8;
  if (!qword_1EF2CB2C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbed.Traits.TraitName, &type metadata for FormatWebEmbed.Traits.TraitName);
    atomic_store(result, (unint64_t *)&qword_1EF2CB2C8);
  }
  return result;
}

uint64_t sub_1BB719ABC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BB719770, (uint64_t (*)(void))sub_1BB7197B4, (uint64_t (*)(void))sub_1BB719A78);
}

unint64_t sub_1BB719ADC()
{
  unint64_t result;

  result = qword_1EF2CB2D0;
  if (!qword_1EF2CB2D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbed.Traits, &type metadata for FormatWebEmbed.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2CB2D0);
  }
  return result;
}

unint64_t sub_1BB719B24()
{
  unint64_t result;

  result = qword_1EF2CB2D8;
  if (!qword_1EF2CB2D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbed.Traits, &type metadata for FormatWebEmbed.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2CB2D8);
  }
  return result;
}

uint64_t sub_1BB719B68(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BB71983C, (uint64_t (*)(void))sub_1BB719A30, (uint64_t (*)(void))sub_1BB719B84);
}

unint64_t sub_1BB719B84()
{
  unint64_t result;

  result = qword_1ED39B220;
  if (!qword_1ED39B220)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbed.Traits, &type metadata for FormatWebEmbed.Traits);
    atomic_store(result, (unint64_t *)&qword_1ED39B220);
  }
  return result;
}

unint64_t sub_1BB719BD0()
{
  unint64_t result;

  result = qword_1ED39B230;
  if (!qword_1ED39B230)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbed.Traits, &type metadata for FormatWebEmbed.Traits);
    atomic_store(result, (unint64_t *)&qword_1ED39B230);
  }
  return result;
}

uint64_t sub_1BB719C14(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED39B298, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed, (uint64_t)&protocol conformance descriptor for FormatWebEmbed);
  a1[2] = sub_1BA4A2870((unint64_t *)&unk_1ED39B288, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed, (uint64_t)&protocol conformance descriptor for FormatWebEmbed);
  result = sub_1BA4A2870(&qword_1EF2CB2E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed, (uint64_t)&protocol conformance descriptor for FormatWebEmbed);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB719C8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatWebEmbed() + 44));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB719CC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatWebEmbed() + 48));
  return swift_bridgeObjectRetain();
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatWebEmbed(_QWORD *a1, char *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *v4 = *(_QWORD *)a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *a1 = *(_QWORD *)a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = &a2[v8];
    v11 = sub_1BB86C67C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v14 = a3[6];
    v15 = (char *)v4 + v14;
    v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    v19 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)&a2[a3[7]];
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *v20 = *(_QWORD *)v21;
    v20[1] = v22;
    v23 = a3[9];
    v24 = a3[10];
    v25 = (_QWORD *)((char *)v4 + v23);
    v26 = &a2[v23];
    v27 = *((_QWORD *)v26 + 1);
    *v25 = *(_QWORD *)v26;
    v25[1] = v27;
    *(_QWORD *)((char *)v4 + v24) = *(_QWORD *)&a2[v24];
    v28 = a3[12];
    *(_QWORD *)((char *)v4 + a3[11]) = *(_QWORD *)&a2[a3[11]];
    *(_QWORD *)((char *)v4 + v28) = *(_QWORD *)&a2[v28];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FormatWebEmbed(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = a1 + *(int *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatWebEmbed(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v17 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = &a2[v17];
  v20 = *((_QWORD *)v19 + 1);
  *v18 = *(_QWORD *)v19;
  v18[1] = v20;
  v21 = a3[9];
  v22 = a3[10];
  v23 = (_QWORD *)((char *)a1 + v21);
  v24 = &a2[v21];
  v25 = *((_QWORD *)v24 + 1);
  *v23 = *(_QWORD *)v24;
  v23[1] = v25;
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)&a2[v22];
  v26 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)&a2[a3[11]];
  *(_QWORD *)((char *)a1 + v26) = *(_QWORD *)&a2[v26];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for FormatWebEmbed(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = (char *)a2 + v12;
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15(&a1[v12], 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = (_QWORD *)((char *)a2 + v19);
  *(_QWORD *)v20 = *v21;
  *((_QWORD *)v20 + 1) = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = &a1[v22];
  v24 = (_QWORD *)((char *)a2 + v22);
  *(_QWORD *)v23 = *v24;
  *((_QWORD *)v23 + 1) = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatWebEmbed(_OWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v16 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)&a2[v16];
  v17 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)&a2[a3[9]];
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)&a2[v17];
  v18 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)&a2[a3[11]];
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)&a2[v18];
  return a1;
}

char *assignWithTake for FormatWebEmbed(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = (char *)a2 + v13;
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(&a1[v13], 1, v10);
  v18 = v16(v15, 1, v10);
  if (!v17)
  {
    if (!v18)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_release();
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = (_QWORD *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = &a1[v25];
  v27 = (_QWORD *)((char *)a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *(_QWORD *)v26 = v29;
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  v30 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)&a1[v30] = *(_QWORD *)((char *)a2 + v30);
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatWebEmbed()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB71A5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatWebEmbed()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB71A6A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbed.Traits()
{
  return &type metadata for FormatWebEmbed.Traits;
}

uint64_t storeEnumTagSinglePayload for FormatWebEmbed.Traits.TraitName(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB71A7A4 + 4 * byte_1BB942BCA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB71A7C4 + 4 * byte_1BB942BCF[v4]))();
}

_BYTE *sub_1BB71A7A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB71A7C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB71A7CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB71A7D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB71A7DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB71A7E4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbed.Traits.TraitName()
{
  return &type metadata for FormatWebEmbed.Traits.TraitName;
}

uint64_t storeEnumTagSinglePayload for FormatWebEmbed.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1BB71A84C + 4 * byte_1BB942BD9[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1BB71A880 + 4 * byte_1BB942BD4[v4]))();
}

uint64_t sub_1BB71A880(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB71A888(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB71A890);
  return result;
}

uint64_t sub_1BB71A89C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB71A8A4);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1BB71A8A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB71A8B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbed.CodingKeys()
{
  return &type metadata for FormatWebEmbed.CodingKeys;
}

unint64_t sub_1BB71A8D0()
{
  unint64_t result;

  result = qword_1EF2CB2E8;
  if (!qword_1EF2CB2E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9430EC, &type metadata for FormatWebEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CB2E8);
  }
  return result;
}

unint64_t sub_1BB71A918()
{
  unint64_t result;

  result = qword_1ED3A5870;
  if (!qword_1ED3A5870)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94305C, &type metadata for FormatWebEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A5870);
  }
  return result;
}

unint64_t sub_1BB71A960()
{
  unint64_t result;

  result = qword_1ED3A5868;
  if (!qword_1ED3A5868)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB943084, &type metadata for FormatWebEmbed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A5868);
  }
  return result;
}

uint64_t sub_1BB71A9A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72556E6F69746361 && a2 == 0xE90000000000006CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C6369747261 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB998170 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F73655261746164 && a2 == 0xEE00444965637275 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x737469617274 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB998190)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

unint64_t sub_1BB71ADCC()
{
  unint64_t result;

  result = qword_1ED3A5878;
  if (!qword_1ED3A5878)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbed.Traits.TraitName, &type metadata for FormatWebEmbed.Traits.TraitName);
    atomic_store(result, (unint64_t *)&qword_1ED3A5878);
  }
  return result;
}

uint64_t static Commands.URL.openURL.getter()
{
  if (qword_1ED3BA8B8 != -1)
    swift_once();
  return swift_retain();
}

ValueMetadata *type metadata accessor for Commands.URL()
{
  return &type metadata for Commands.URL;
}

uint64_t destroy for DebugPersonalizationSection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugPersonalizationSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugPersonalizationSection(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugPersonalizationSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugPersonalizationSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugPersonalizationSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugPersonalizationSection()
{
  return &type metadata for DebugPersonalizationSection;
}

uint64_t sub_1BB71B0C4(char *a1, char *a2)
{
  return sub_1BB7F2BA4(*a1, *a2);
}

uint64_t sub_1BB71B0D0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB71B150()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB71B1AC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB71B228@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB71B284(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000014;
  if (*v1)
    v2 = 0x736D657469;
  v3 = 0x80000001BB95DAA0;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t storeEnumTagSinglePayload for DebugPersonalizationSection.Descriptor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB71B310 + 4 * byte_1BB943175[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB71B344 + 4 * asc_1BB943170[v4]))();
}

uint64_t sub_1BB71B344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB71B34C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB71B354);
  return result;
}

uint64_t sub_1BB71B360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB71B368);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB71B36C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB71B374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugPersonalizationSection.Descriptor()
{
  return &type metadata for DebugPersonalizationSection.Descriptor;
}

unint64_t sub_1BB71B394()
{
  unint64_t result;

  result = qword_1EF2CB2F0;
  if (!qword_1EF2CB2F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB943220, &type metadata for DebugPersonalizationSection.Descriptor);
    atomic_store(result, (unint64_t *)&qword_1EF2CB2F0);
  }
  return result;
}

uint64_t static FormatSportsEventBinding.DateTime.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1BB71B3E0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB71B434()
{
  return sub_1BB872A90();
}

uint64_t sub_1BB71B450()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB71B4A0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BB71B4F0(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x80000001BB95DEC0;
}

uint64_t sub_1BB71B510()
{
  sub_1BB71B8D0();
  return sub_1BB872D60();
}

uint64_t sub_1BB71B56C()
{
  sub_1BB71B8D0();
  return sub_1BB872D0C();
}

void sub_1BB71B5B8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252C60;
}

uint64_t FormatSportsEventBinding.DateTime.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatSportsEventBinding.DateTime.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB71B630()
{
  unint64_t result;

  result = qword_1EF2CB2F8;
  if (!qword_1EF2CB2F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.DateTime, &type metadata for FormatSportsEventBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2CB2F8);
  }
  return result;
}

unint64_t sub_1BB71B674(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB71B698();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB71B698()
{
  unint64_t result;

  result = qword_1EF2CB300;
  if (!qword_1EF2CB300)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.DateTime, &type metadata for FormatSportsEventBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2CB300);
  }
  return result;
}

unint64_t sub_1BB71B6DC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8EBCC();
  a1[2] = sub_1BAEF3ED8();
  result = sub_1BB71B630();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB71B710(_QWORD *a1)
{
  return FormatSportsEventBinding.DateTime.init(from:)(a1);
}

uint64_t sub_1BB71B724(_QWORD *a1)
{
  return FormatSportsEventBinding.DateTime.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.DateTime()
{
  return &type metadata for FormatSportsEventBinding.DateTime;
}

uint64_t _s8DateTimeOwst_2_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB71B78C + 4 * byte_1BB943248[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB71B7AC + 4 * byte_1BB94324D[v4]))();
}

_BYTE *sub_1BB71B78C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB71B7AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB71B7B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB71B7BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB71B7C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB71B7CC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s8DateTimeO10CodingTypeOMa_0()
{
  return &_s8DateTimeO10CodingTypeON_0;
}

unint64_t sub_1BB71B7EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2CB308;
  if (!qword_1EF2CB308)
  {
    sub_1BB71B834();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2CB308);
  }
  return result;
}

void sub_1BB71B834()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CB310)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CB310);
  }
}

unint64_t sub_1BB71B88C()
{
  unint64_t result;

  result = qword_1EF2CB318;
  if (!qword_1EF2CB318)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94344C, &_s8DateTimeO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2CB318);
  }
  return result;
}

unint64_t sub_1BB71B8D0()
{
  unint64_t result;

  result = qword_1EF2CB320[0];
  if (!qword_1EF2CB320[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9433D4, &_s8DateTimeO10CodingTypeON_0);
    atomic_store(result, qword_1EF2CB320);
  }
  return result;
}

void sub_1BB71B914()
{
  uint64_t v0;
  _BYTE v1[112];
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9D8];
  sub_1BA5B0E6C(v0 + 128, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1BB71B95C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  __int128 v9[4];
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1BA4CECCC(v9, (uint64_t)v10);
  v1 = v11;
  v2 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v2 + 88))(v9, v1, v2);
  if ((v9[0] & 0xFE) == 2)
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 15.0);
    v5 = (void *)sub_1BB872970();
    v6 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v5, v4);

    if (!v6)
    {
      __break(1u);
      JUMPOUT(0x1BB71BAF4);
    }
    v7 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v6);

    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)((*(_QWORD *)(v0 - 40) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 - 40) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
    v3 = *(_QWORD *)(v0 - 40);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v3;
}

uint64_t sub_1BB71BB10(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 257);
  if (v2 >= 7)
    v2 = *(_DWORD *)result + 7;
  switch(v2)
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v1 + 56))
        __swift_destroy_boxed_opaque_existential_1(v1 + 32);
      swift_bridgeObjectRelease();
      v3 = v1 + 128;
      switch(*(_BYTE *)(v1 + 192))
      {
        case 0:
        case 1:
        case 2:
          __swift_destroy_boxed_opaque_existential_1(v3);
          break;
        case 3:
          __swift_destroy_boxed_opaque_existential_1(v3);
          goto LABEL_11;
        case 4:
        case 5:
        case 6:
LABEL_11:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      if (*(_QWORD *)(v1 + 200))
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v1 + 208) >= 2uLL)
          swift_bridgeObjectRelease();
      }
      swift_release();
      goto LABEL_16;
    case 1u:
    case 2u:
LABEL_16:
      result = swift_bridgeObjectRelease();
      break;
    case 3u:
      swift_bridgeObjectRelease();
      result = __swift_destroy_boxed_opaque_existential_1(v1 + 16);
      break;
    case 4u:
    case 5u:
    case 6u:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1BB71BC3C(char *__dst, unsigned __int8 *__src)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *result;

  v4 = __src[257];
  if (v4 >= 7)
    v4 = *(_DWORD *)__src + 7;
  switch(v4)
  {
    case 0u:
      v5 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v5;
      v6 = *((_QWORD *)__src + 3);
      *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
      *((_QWORD *)__dst + 3) = v6;
      v7 = __src + 32;
      v8 = *((_QWORD *)__src + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8)
      {
        v9 = *((_QWORD *)__src + 8);
        *((_QWORD *)__dst + 7) = v8;
        *((_QWORD *)__dst + 8) = v9;
        (**(void (***)(char *, char *, uint64_t))(v8 - 8))(__dst + 32, (char *)__src + 32, v8);
      }
      else
      {
        v18 = *((_OWORD *)__src + 3);
        *((_OWORD *)__dst + 2) = *v7;
        *((_OWORD *)__dst + 3) = v18;
        *((_QWORD *)__dst + 8) = *((_QWORD *)__src + 8);
      }
      *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
      v19 = *((_OWORD *)__src + 6);
      *((_OWORD *)__dst + 5) = *((_OWORD *)__src + 5);
      *((_OWORD *)__dst + 6) = v19;
      *(_OWORD *)(__dst + 106) = *(_OWORD *)(__src + 106);
      v20 = __src[192];
      swift_bridgeObjectRetain();
      __asm { BR              X9 }
      return result;
    case 1u:
      v10 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v10;
      v11 = 1;
      goto LABEL_9;
    case 2u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v11 = 2;
LABEL_9:
      __dst[257] = v11;
      swift_bridgeObjectRetain();
      return __dst;
    case 3u:
      v12 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v12;
      v13 = (char *)(__src + 16);
      v14 = *(_OWORD *)(__src + 40);
      *(_OWORD *)(__dst + 40) = v14;
      v15 = v14;
      v16 = **(void (***)(char *, char *, uint64_t))(v14 - 8);
      swift_bridgeObjectRetain();
      v16(__dst + 16, v13, v15);
      __dst[257] = 3;
      return __dst;
    case 4u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v17 = 4;
      goto LABEL_14;
    case 5u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *(_OWORD *)(__dst + 8) = *(_OWORD *)(__src + 8);
      v17 = 5;
      goto LABEL_14;
    case 6u:
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v17 = 6;
LABEL_14:
      __dst[257] = v17;
      swift_retain();
      break;
    default:
      memcpy(__dst, __src, 0x102uLL);
      break;
  }
  return __dst;
}

unsigned __int8 *sub_1BB71BF78(unsigned __int8 *__dst, unsigned __int8 *__src)
{
  unsigned int v4;
  char *v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  char *v9;
  uint64_t v10;
  void (*v11)(unsigned __int8 *, char *, uint64_t);
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  unsigned __int8 *result;

  if (__dst != __src)
  {
    v4 = __dst[257];
    if (v4 >= 7)
      v4 = *(_DWORD *)__dst + 7;
    switch(v4)
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)__dst + 7))
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 32));
        swift_bridgeObjectRelease();
        v5 = (char *)(__dst + 128);
        switch(__dst[192])
        {
          case 0u:
          case 1u:
          case 2u:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
            break;
          case 3u:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
            goto LABEL_12;
          case 4u:
          case 5u:
          case 6u:
LABEL_12:
            swift_bridgeObjectRelease();
            break;
          default:
            break;
        }
        if (*((_QWORD *)__dst + 25))
        {
          swift_bridgeObjectRelease();
          if (*((_QWORD *)__dst + 26) >= 2uLL)
            swift_bridgeObjectRelease();
        }
        swift_release();
        goto LABEL_17;
      case 1u:
      case 2u:
LABEL_17:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 16));
        break;
      case 4u:
      case 5u:
      case 6u:
        swift_release();
        break;
      default:
        break;
    }
    v6 = __src[257];
    if (v6 >= 7)
      v6 = *(_DWORD *)__src + 7;
    switch(v6)
    {
      case 0u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
        *((_QWORD *)__dst + 3) = *((_QWORD *)__src + 3);
        v7 = *((_QWORD *)__src + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7)
        {
          *((_QWORD *)__dst + 7) = v7;
          *((_QWORD *)__dst + 8) = *((_QWORD *)__src + 8);
          (**(void (***)(char *, char *, uint64_t))(v7 - 8))((char *)__dst + 32, (char *)__src + 32, v7);
        }
        else
        {
          v13 = *((_OWORD *)__src + 2);
          v14 = *((_OWORD *)__src + 3);
          *((_QWORD *)__dst + 8) = *((_QWORD *)__src + 8);
          *((_OWORD *)__dst + 2) = v13;
          *((_OWORD *)__dst + 3) = v14;
        }
        *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
        v15 = *((_OWORD *)__src + 5);
        v16 = *((_OWORD *)__src + 6);
        *(_OWORD *)(__dst + 106) = *(_OWORD *)(__src + 106);
        *((_OWORD *)__dst + 5) = v15;
        *((_OWORD *)__dst + 6) = v16;
        v17 = __src[192];
        swift_bridgeObjectRetain();
        __asm { BR              X9 }
        return result;
      case 1u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        v8 = 1;
        goto LABEL_26;
      case 2u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v8 = 2;
LABEL_26:
        __dst[257] = v8;
        swift_bridgeObjectRetain();
        return __dst;
      case 3u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        v9 = (char *)(__src + 16);
        v10 = *((_QWORD *)__src + 5);
        *((_QWORD *)__dst + 5) = v10;
        *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
        v11 = **(void (***)(unsigned __int8 *, char *, uint64_t))(v10 - 8);
        swift_bridgeObjectRetain();
        v11(__dst + 16, v9, v10);
        __dst[257] = 3;
        return __dst;
      case 4u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v12 = 4;
        goto LABEL_31;
      case 5u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
        v12 = 5;
        goto LABEL_31;
      case 6u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v12 = 6;
LABEL_31:
        __dst[257] = v12;
        swift_retain();
        break;
      default:
        memcpy(__dst, __src, 0x102uLL);
        break;
    }
  }
  return __dst;
}

void *__swift_memcpy258_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x102uLL);
}

unsigned __int8 *sub_1BB71C430(unsigned __int8 *__dst, unsigned __int8 *__src)
{
  unsigned int v4;
  char *v5;
  unsigned int v6;
  char v7;
  __int128 v8;

  if (__dst != __src)
  {
    v4 = __dst[257];
    if (v4 >= 7)
      v4 = *(_DWORD *)__dst + 7;
    switch(v4)
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)__dst + 7))
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 32));
        swift_bridgeObjectRelease();
        v5 = (char *)(__dst + 128);
        switch(__dst[192])
        {
          case 0u:
          case 1u:
          case 2u:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
            break;
          case 3u:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
            goto LABEL_12;
          case 4u:
          case 5u:
          case 6u:
LABEL_12:
            swift_bridgeObjectRelease();
            break;
          default:
            break;
        }
        if (*((_QWORD *)__dst + 25))
        {
          swift_bridgeObjectRelease();
          if (*((_QWORD *)__dst + 26) >= 2uLL)
            swift_bridgeObjectRelease();
        }
        swift_release();
        goto LABEL_17;
      case 1u:
      case 2u:
LABEL_17:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 16));
        break;
      case 4u:
      case 5u:
      case 6u:
        swift_release();
        break;
      default:
        break;
    }
    v6 = __src[257];
    if (v6 >= 7)
      v6 = *(_DWORD *)__src + 7;
    switch(v6)
    {
      case 0u:
        memcpy(__dst, __src, 0x101uLL);
        __dst[257] = 0;
        return __dst;
      case 1u:
        *(_OWORD *)__dst = *(_OWORD *)__src;
        v7 = 1;
        goto LABEL_29;
      case 2u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v7 = 2;
        goto LABEL_29;
      case 3u:
        v8 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v8;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
        v7 = 3;
        goto LABEL_29;
      case 4u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v7 = 4;
        goto LABEL_29;
      case 5u:
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
        v7 = 5;
        goto LABEL_29;
      case 6u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        v7 = 6;
LABEL_29:
        __dst[257] = v7;
        break;
      default:
        memcpy(__dst, __src, 0x102uLL);
        break;
    }
  }
  return __dst;
}

uint64_t sub_1BB71C638(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 258))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 257);
  if (v3 >= 8)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1BB71C674(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_WORD *)(result + 256) = 0;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 258) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 258) = 0;
    if (a2)
      *(_BYTE *)(result + 257) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BB71C6DC(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 257);
  if (result >= 7)
    return (*(_DWORD *)a1 + 7);
  return result;
}

uint64_t sub_1BB71C6F8(uint64_t result, unsigned int a2)
{
  if (a2 > 6)
  {
    *(_BYTE *)(result + 256) = 0;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 7;
    LOBYTE(a2) = 7;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
  }
  *(_BYTE *)(result + 257) = a2;
  return result;
}

uint64_t type metadata accessor for DebugJournalItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugJournalItem);
}

ValueMetadata *type metadata accessor for FormatIssueCoverData()
{
  return &type metadata for FormatIssueCoverData;
}

_QWORD *sub_1BB71C758(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  int v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  _OWORD v44[2];
  uint64_t v45;

  v1 = *(_QWORD *)(a1 + 8);
  v43 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v40 = *(void **)(a1 + 16);
  v41 = *(void **)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v6);
  sub_1BA8C88C8(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87FC80;
  v42 = v12;
  v13 = (char *)(v12 + v11);
  switch(v5)
  {
    case 255:
      v23 = v1;
      v16 = 0;
      v21 = 0;
      goto LABEL_9;
    case 0:
      v37 = v10;
      v38 = v3;
      v39 = v4;
      v24 = v3;
      v22 = v41;
      sub_1BA8996DC(v43, v1, v40, v2, v4, v24, v41, 0);
      v25 = v43;
      v26 = v40;
      v27 = objc_msgSend(v25, sel_identifier);
      v16 = sub_1BB8729A0();
      v17 = v1;
      v18 = v40;
      v19 = v2;
      v21 = v28;

      sub_1BB71CC38(v43, v17, v40, v19, v39, v38, v41, 0);
      goto LABEL_7;
    case 1:
      v37 = v10;
      v38 = v3;
      v39 = v4;
      sub_1BB71CC4C(v43, v1, v40, v2, v4, v3, v41, 1);
      v14 = v43;
      swift_bridgeObjectRetain();
      v15 = objc_msgSend(v14, sel_identifier);
      v16 = sub_1BB8729A0();
      v17 = v1;
      v18 = v40;
      v19 = v2;
      v21 = v20;
      swift_bridgeObjectRelease();

      v22 = v41;
LABEL_7:
      v23 = v17;
      sub_1BB71CC38(v43, v17, v18, v19, v39, v38, v22, v5);
      v10 = v37;
      goto LABEL_9;
  }
  v23 = v1;
  v21 = 0xE400000000000000;
  v16 = 1701736302;
LABEL_9:
  sub_1BAAF7494(0x696669746E656449, 0xEA00000000007265, v16, v21, v13);
  v29 = type metadata accessor for FormatInspectionItem(0);
  v30 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v30(v13, 0, 1, v29);
  if (v5 == 255)
  {
    v32 = &v13[v10];
    sub_1BAAFFEB0(1684957515, 0xE400000000000000, 3u, &v13[v10]);
    v31 = 0;
  }
  else if (v5)
  {
    if (v5 == 1)
    {
      v31 = v23;
      v32 = &v13[v10];
      sub_1BAAFFEB0(1684957515, 0xE400000000000000, 1u, &v13[v10]);
    }
    else
    {
      v32 = &v13[v10];
      sub_1BAAFFEB0(1684957515, 0xE400000000000000, 2u, &v13[v10]);
      v31 = 0x3FE8000000000000;
    }
  }
  else
  {
    v32 = &v13[v10];
    sub_1BAAFFEB0(1684957515, 0xE400000000000000, 0, &v13[v10]);
    v31 = v23;
  }
  v30(v32, 0, 1, v29);
  sub_1BAAF3A18(0x5220746365707341, 0xEC0000006F697461, v31, v5 == 255, &v13[2 * v10]);
  v30(&v13[2 * v10], 0, 1, v29);
  sub_1BAF89090(0xD000000000000010, 0x80000001BB9981D0, 0, 0, v42, v44);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v33 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v33;
  *(_QWORD *)(v33 + 48) = v45;
  v34 = v44[1];
  *(_OWORD *)(v33 + 16) = v44[0];
  *(_OWORD *)(v33 + 32) = v34;
  v35 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v35;
}

uint64_t sub_1BB71CC04()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB71CC38(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, char a8)
{
  if (a8 != -1)
    sub_1BA899748(a1, a2, a3, a4, a5, a6, a7, a8);
}

id sub_1BB71CC4C(id result, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, char a8)
{
  if (a8 != -1)
    return sub_1BA8996DC(result, a2, a3, a4, a5, a6, a7, a8);
  return result;
}

uint64_t LayeredMediaViewModelRenderer.render(viewModel:options:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  void *v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v3 = v2;
  v5 = a2[1];
  v12 = *a2;
  v13 = v5;
  v14 = *((_QWORD *)a2 + 4);
  swift_retain();
  v6 = swift_bridgeObjectRetain();
  sub_1BB71D238(v6, v3, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for LayeredMediaRenderedViewModel();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  v8 = v13;
  *(_OWORD *)(v7 + 24) = v12;
  *(_OWORD *)(v7 + 40) = v8;
  *(_QWORD *)(v7 + 56) = v14;
  sub_1BA84125C();
  swift_retain();
  v9 = (void *)sub_1BB86E854();
  sub_1BA81DCAC();
  sub_1BA81DC64();
  v10 = sub_1BB86E920();
  swift_bridgeObjectRelease();

  *(_QWORD *)(v7 + 64) = v10;
  return v7;
}

void sub_1BB71CD70(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  char v22;
  int v23;
  id *v24;
  unint64_t *v25;
  unint64_t *v26;
  unint64_t *v27;
  int v28;
  id *v29;
  unint64_t *v30;
  unint64_t *v31;
  unint64_t *v32;
  id v33;
  int v34;
  id *v35;
  unint64_t *v36;
  unint64_t *v37;
  unint64_t *v38;
  id v39;
  id v40;
  _OWORD *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _BYTE v69[25];
  _BYTE v70[128];
  _BYTE v71[128];
  _BYTE v72[138];
  _OWORD v73[2];
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _BYTE v81[25];
  __int128 v82[8];
  _BYTE v83[144];
  _BYTE v84[144];

  sub_1BA8FB494(a1, (uint64_t)v83);
  sub_1BA8FB494((uint64_t)v83, (uint64_t)v84);
  if (sub_1BB101970((uint64_t)v84) == 1)
  {
    v5 = (_OWORD *)sub_1BB10197C((uint64_t)v84);
    v6 = v5[1];
    v7 = v5[2];
    v8 = v5[4];
    v77 = v5[3];
    v78 = v8;
    v9 = v5[5];
    v10 = v5[7];
    v80 = v5[6];
    *(_OWORD *)v81 = v10;
    *(_OWORD *)&v81[9] = *(_OWORD *)((char *)v5 + 121);
    v11 = (uint64_t)(v5 + 1);
    v79 = v9;
    v75 = v6;
    v76 = v7;
    sub_1BB71D3A8((uint64_t)&v75);
    sub_1BA8FB364(v11);
  }
  else
  {
    v12 = sub_1BB10197C((uint64_t)v84);
    v13 = *(_QWORD *)(v12 + 24);
    v14 = *(_BYTE *)(v12 + 32);
    v15 = *(_QWORD *)(v12 + 40);
    v16 = *(_BYTE *)(v12 + 48);
    v17 = *(_QWORD *)(v12 + 56);
    v18 = *(_BYTE *)(v12 + 112);
    v19 = *(_QWORD *)(v12 + 120);
    v20 = *(_BYTE *)(v12 + 128);
    *(_QWORD *)&v75 = *(_QWORD *)(v12 + 16);
    *((_QWORD *)&v75 + 1) = v13;
    LOBYTE(v76) = v14;
    *((_QWORD *)&v76 + 1) = v15;
    LOBYTE(v77) = v16;
    *((_QWORD *)&v77 + 1) = v17;
    v59 = *(_OWORD *)(v12 + 80);
    v78 = *(_OWORD *)(v12 + 64);
    v79 = v59;
    v80 = *(_OWORD *)(v12 + 96);
    v81[0] = v18;
    *(_QWORD *)&v81[8] = v19;
    v81[16] = v20;
    sub_1BB71D3BC((uint64_t)&v75);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_1BA8FB30C(&v75, (uint64_t)v82);
  sub_1BA8FB30C(v82, (uint64_t)&v75);
  v21 = *(_OWORD *)(a2 + 16);
  v73[0] = *(_OWORD *)a2;
  v73[1] = v21;
  v74 = *(_QWORD *)(a2 + 32);
  v22 = LayeredMediaLayerRenderer.shouldShow(_:for:)(&v75, (uint64_t)v73);
  sub_1BA8FB3B4((uint64_t)v82);
  if ((v22 & 1) != 0)
  {
    sub_1BA8FB494((uint64_t)v83, (uint64_t)&v75);
    v23 = sub_1BB101970((uint64_t)&v75);
    v24 = (id *)sub_1BB10197C((uint64_t)&v75);
    if (v23 == 1)
    {
      v25 = (unint64_t *)&unk_1ED3AC180;
      v26 = &qword_1ED39C3A8;
      v27 = (unint64_t *)&qword_1ED39DA68;
    }
    else
    {
      v25 = (unint64_t *)&unk_1EF2BB7A8;
      v26 = &qword_1ED39C3A0;
      v27 = &qword_1ED39DA58;
    }
    sub_1BB1019E4(v25, v26, v27);
    v33 = *v24;
    objc_msgSend(v33, sel_setHidden_, 0);

    sub_1BA8FB494((uint64_t)v83, (uint64_t)v73);
    v34 = sub_1BB101970((uint64_t)v73);
    v35 = (id *)sub_1BB10197C((uint64_t)v73);
    if (v34 == 1)
    {
      v36 = (unint64_t *)&unk_1ED3AC180;
      v37 = &qword_1ED39C3A8;
      v38 = (unint64_t *)&qword_1ED39DA68;
    }
    else
    {
      v36 = (unint64_t *)&unk_1EF2BB7A8;
      v37 = &qword_1ED39C3A0;
      v38 = &qword_1ED39DA58;
    }
    sub_1BB1019E4(v36, v37, v38);
    v40 = *v35;
    objc_msgSend(v40, sel_setFrame_, 0.0, 0.0, *(double *)(a2 + 16), *(double *)(a2 + 24));

    sub_1BA8FB494((uint64_t)v83, (uint64_t)v72);
    if (sub_1BB101970((uint64_t)v72) == 1)
    {
      v41 = (_OWORD *)sub_1BB10197C((uint64_t)v72);
      v42 = v41[1];
      v43 = v41[2];
      v44 = v41[4];
      v65 = v41[3];
      v66 = v44;
      v45 = v41[5];
      v46 = v41[7];
      v68 = v41[6];
      *(_OWORD *)v69 = v46;
      *(_OWORD *)&v69[9] = *(_OWORD *)((char *)v41 + 121);
      v47 = (uint64_t)(v41 + 1);
      v67 = v45;
      v63 = v42;
      v64 = v43;
      sub_1BB71D3A8((uint64_t)&v63);
      sub_1BA8FB364(v47);
    }
    else
    {
      v48 = sub_1BB10197C((uint64_t)v72);
      v49 = *(_QWORD *)(v48 + 24);
      v50 = *(_BYTE *)(v48 + 32);
      v51 = *(_QWORD *)(v48 + 40);
      v52 = *(_BYTE *)(v48 + 48);
      v53 = *(_QWORD *)(v48 + 56);
      v54 = *(_BYTE *)(v48 + 112);
      v55 = *(_QWORD *)(v48 + 120);
      v56 = *(_BYTE *)(v48 + 128);
      *(_QWORD *)&v63 = *(_QWORD *)(v48 + 16);
      *((_QWORD *)&v63 + 1) = v49;
      LOBYTE(v64) = v50;
      *((_QWORD *)&v64 + 1) = v51;
      LOBYTE(v65) = v52;
      *((_QWORD *)&v65 + 1) = v53;
      v60 = *(_OWORD *)(v48 + 80);
      v66 = *(_OWORD *)(v48 + 64);
      v67 = v60;
      v68 = *(_OWORD *)(v48 + 96);
      v69[0] = v54;
      *(_QWORD *)&v69[8] = v55;
      v69[16] = v56;
      sub_1BB71D3BC((uint64_t)&v63);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BA8FB30C(&v63, (uint64_t)v71);
    sub_1BA8FB494((uint64_t)v83, (uint64_t)&v63);
    v57 = *(_OWORD *)(a2 + 16);
    v61[0] = *(_OWORD *)a2;
    v61[1] = v57;
    v62 = *(_QWORD *)(a2 + 32);
    v58 = LayeredMediaLayerRenderer.offscreenRender(_:on:options:)((uint64_t)v70, (uint64_t)&v63, (uint64_t)v61);
    sub_1BA8FB3B4((uint64_t)v71);
    *a3 = v58;
  }
  else
  {
    sub_1BA8FB494((uint64_t)v83, (uint64_t)&v75);
    v28 = sub_1BB101970((uint64_t)&v75);
    v29 = (id *)sub_1BB10197C((uint64_t)&v75);
    if (v28 == 1)
    {
      v30 = (unint64_t *)&unk_1ED3AC180;
      v31 = &qword_1ED39C3A8;
      v32 = (unint64_t *)&qword_1ED39DA68;
    }
    else
    {
      v30 = (unint64_t *)&unk_1EF2BB7A8;
      v31 = &qword_1ED39C3A0;
      v32 = &qword_1ED39DA58;
    }
    sub_1BB1019E4(v30, v31, v32);
    v39 = *v29;
    objc_msgSend(v39, sel_setHidden_, 1);

    *a3 = 0;
  }
}

uint64_t LayeredMediaViewModelRenderer.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t LayeredMediaViewModelRenderer.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB71D238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[144];
  _BYTE v13[152];
  uint64_t v14;

  result = MEMORY[0x1E0DEE9D8];
  v14 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1BA8FB494(a1 + 32, (uint64_t)v13);
    v8 = a1 + 176;
    for (i = v6 - 1; ; --i)
    {
      sub_1BA8FB494((uint64_t)v13, (uint64_t)v12);
      sub_1BA8966F8((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BB63467C);
      sub_1BB71CD70((uint64_t)v12, a3, &v11);
      v10 = sub_1BA8966F8((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BB634700);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v11)
      {
        MEMORY[0x1BCCE36AC](v10);
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      if (!i)
        break;
      sub_1BA8FB494(v8, (uint64_t)v13);
      v8 += 144;
    }
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t method lookup function for LayeredMediaViewModelRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB71D3A8(uint64_t result)
{
  *(_BYTE *)(result + 120) = *(_BYTE *)(result + 120) & 1 | 0x80;
  return result;
}

uint64_t sub_1BB71D3BC(uint64_t result)
{
  *(_BYTE *)(result + 120) &= 1u;
  return result;
}

uint64_t FormatBlurEffectStyle.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BB71D400 + 4 * byte_1BB943590[*v0]))(0xD000000000000017, 0x80000001BB95D0A0);
}

uint64_t sub_1BB71D400(uint64_t a1)
{
  return a1 - 5;
}

NewsFeed::FormatBlurEffectStyle_optional __swiftcall FormatBlurEffectStyle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatBlurEffectStyle_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 15;
  if (v3 < 0xF)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BB71D54C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F9F08(*a1, *a2);
}

uint64_t sub_1BB71D558()
{
  sub_1BB8745CC();
  FormatBlurEffectStyle.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB71D5BC()
{
  FormatBlurEffectStyle.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB71D60C()
{
  sub_1BB8745CC();
  FormatBlurEffectStyle.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatBlurEffectStyle_optional sub_1BB71D66C(Swift::String *a1)
{
  return FormatBlurEffectStyle.init(rawValue:)(*a1);
}

uint64_t sub_1BB71D678@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatBlurEffectStyle.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BB71D69C()
{
  sub_1BB71D8EC();
  return sub_1BB872D60();
}

uint64_t sub_1BB71D6F8(_QWORD *a1)
{
  return FormatBlurEffectStyle.encode(to:)(a1);
}

uint64_t FormatBlurEffectStyle.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BB71D740 + 4 * byte_1BB94359F[*v0]))(0xD000000000000017, 0x80000001BB95D0A0);
}

uint64_t sub_1BB71D740(uint64_t a1)
{
  return a1 - 5;
}

unint64_t sub_1BB71D838()
{
  unint64_t result;

  result = qword_1EF2CB3A8;
  if (!qword_1EF2CB3A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlurEffectStyle, &type metadata for FormatBlurEffectStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2CB3A8);
  }
  return result;
}

unint64_t sub_1BB71D87C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB71D8A8();
  result = sub_1BB71D8EC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB71D8A8()
{
  unint64_t result;

  result = qword_1EF2CB3B0;
  if (!qword_1EF2CB3B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlurEffectStyle, &type metadata for FormatBlurEffectStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2CB3B0);
  }
  return result;
}

unint64_t sub_1BB71D8EC()
{
  unint64_t result;

  result = qword_1EF2CB3B8;
  if (!qword_1EF2CB3B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlurEffectStyle, &type metadata for FormatBlurEffectStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2CB3B8);
  }
  return result;
}

unint64_t sub_1BB71D930(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAED0148();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB71D954(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BB71D988();
  a1[2] = sub_1BB71D9CC();
  result = sub_1BB71D838();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB71D988()
{
  unint64_t result;

  result = qword_1EF2CB3C0;
  if (!qword_1EF2CB3C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlurEffectStyle, &type metadata for FormatBlurEffectStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2CB3C0);
  }
  return result;
}

unint64_t sub_1BB71D9CC()
{
  unint64_t result;

  result = qword_1EF2CB3C8;
  if (!qword_1EF2CB3C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlurEffectStyle, &type metadata for FormatBlurEffectStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2CB3C8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatBlurEffectStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1BB71DA60 + 4 * byte_1BB9435B3[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1BB71DA94 + 4 * byte_1BB9435AE[v4]))();
}

uint64_t sub_1BB71DA94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB71DA9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB71DAA4);
  return result;
}

uint64_t sub_1BB71DAB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB71DAB8);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1BB71DABC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB71DAC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatBlurEffectStyle()
{
  return &type metadata for FormatBlurEffectStyle;
}

uint64_t sub_1BB71DAE0(char *a1)
{
  return qword_1BB943788[*a1];
}

uint64_t FormatMetadata.isCompatible(appVersion:formatVersion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;

  v3 = v2;
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for FormatMetadata();
  sub_1BA6BF98C(v3 + *(int *)(v8 + 28), (uint64_t)v7);
  v11 = a2;
  LODWORD(a2) = sub_1BAF62460((void (*)(uint64_t *__return_ptr, char *))sub_1BA6C0CA0);
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  sub_1BA4A2870(&qword_1ED3B4098, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
  return sub_1BB86DE88() & ((a2 == 2) | a2) & 1;
}

uint64_t FormatMetadata.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s8NewsFeed14FormatMetadataV10minVersion13TeaFoundation0F0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatMetadata() + 20);
  v4 = sub_1BB86EB84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t _s8NewsFeed14FormatMetadataV10maxVersion13TeaFoundation0F0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatMetadata() + 24);
  v4 = sub_1BB86EB84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FormatMetadata.formatVersion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatMetadata() + 28);
  return sub_1BA6BF98C(v3, a1);
}

uint64_t FormatMetadata.allowedSegmentSetIds.getter()
{
  type metadata accessor for FormatMetadata();
  return swift_bridgeObjectRetain();
}

uint64_t FormatMetadata.blockedSegmentSetIds.getter()
{
  type metadata accessor for FormatMetadata();
  return swift_bridgeObjectRetain();
}

uint64_t FormatMetadata.allowedPlatforms.getter()
{
  type metadata accessor for FormatMetadata();
  return swift_bridgeObjectRetain();
}

uint64_t FormatMetadata.blockedPlatforms.getter()
{
  type metadata accessor for FormatMetadata();
  return swift_bridgeObjectRetain();
}

uint64_t FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10)
{
  int *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t result;

  *(_QWORD *)a9 = a1;
  *((_QWORD *)a9 + 1) = a2;
  v15 = (int *)type metadata accessor for FormatMetadata();
  v16 = &a9[v15[5]];
  v17 = sub_1BB86EB84();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v18(v16, a3, v17);
  v18(&a9[v15[6]], a4, v17);
  result = sub_1BA6BFD64(a5, (uint64_t)&a9[v15[7]]);
  *(_QWORD *)&a9[v15[8]] = a6;
  *(_QWORD *)&a9[v15[9]] = a7;
  *(_QWORD *)&a9[v15[10]] = a8;
  *(_QWORD *)&a9[v15[11]] = a10;
  return result;
}

uint64_t FormatMetadata.init(formatVersion:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86EB84();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - v12;
  sub_1BB86EB54();
  sub_1BB86EB48();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  v14 = (int *)type metadata accessor for FormatMetadata();
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v15 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v15(&a2[v14[5]], v13, v7);
  v15(&a2[v14[6]], v10, v7);
  result = sub_1BA6BFD64((uint64_t)v6, (uint64_t)&a2[v14[7]]);
  v17 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&a2[v14[8]] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&a2[v14[9]] = v17;
  *(_QWORD *)&a2[v14[10]] = v17;
  *(_QWORD *)&a2[v14[11]] = v17;
  return result;
}

uint64_t sub_1BB71DFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB71EB7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB71E018()
{
  sub_1BA637DB4();
  return sub_1BB874710();
}

uint64_t sub_1BB71E040()
{
  sub_1BA637DB4();
  return sub_1BB87471C();
}

uint64_t sub_1BB71E06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA6BF98C(v2 + *(int *)(a1 + 28), a2);
}

uint64_t _s8NewsFeed14FormatMetadataV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  char v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  void (*v23)(char *, uint64_t);
  _QWORD v25[2];

  v4 = sub_1BB86EB84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - v9;
  sub_1BA6C1CE8();
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(int *)(type metadata accessor for FormatMetadata() + 28);
  v25[1] = a1;
  v16 = a2 + v15;
  v17 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1BA6BF98C(a1 + v15, (uint64_t)v14);
  sub_1BA6BF98C(v16, v17);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  LODWORD(v16) = v18(v14, 1, v4);
  v19 = v18((char *)v17, 1, v4);
  if ((_DWORD)v16 == 1)
  {
    if (v19 == 1)
    {
      sub_1BB86EB3C();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
      v20 = sub_1BB87291C();
    }
    else
    {
      sub_1BA4A2E80(v17, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
      v20 = 0;
    }
  }
  else if (v19 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    v20 = 1;
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v22 = v10;
    v21(v10, v14, v4);
    v21(v7, (char *)v17, v4);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
    v20 = sub_1BB87291C();
    v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v7, v4);
    v23(v22, v4);
  }
  return v20 & 1;
}

uint64_t sub_1BB71E2F8()
{
  return sub_1BA4A2870(&qword_1EF2CB3D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
}

char *initializeBufferWithCopyOfBuffer for FormatMetadata(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1BB86EB84();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v13(&v4[a3[6]], &a2[a3[6]], v11);
    v14 = a3[7];
    v15 = &v4[v14];
    v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_1BA6BF9E8(0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    v19 = a3[9];
    *(_QWORD *)&v4[a3[8]] = *(_QWORD *)&a2[a3[8]];
    *(_QWORD *)&v4[v19] = *(_QWORD *)&a2[v19];
    v20 = a3[11];
    *(_QWORD *)&v4[a3[10]] = *(_QWORD *)&a2[a3[10]];
    *(_QWORD *)&v4[v20] = *(_QWORD *)&a2[v20];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

char *assignWithCopy for FormatMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BB86EB84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v11(&a1[a3[6]], &a2[a3[6]], v9);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15(&a1[v12], 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1BA6BF9E8(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for FormatMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BB86EB84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v11(&a1[a3[6]], &a2[a3[6]], v9);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    sub_1BA6BF9E8(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v16 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  v17 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  return a1;
}

char *assignWithTake for FormatMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1BB86EB84();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12(&a1[a3[6]], &a2[a3[6]], v10);
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(&a1[v13], 1, v10);
  v18 = v16(v15, 1, v10);
  if (!v17)
  {
    if (!v18)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1BA6BF9E8(0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB71E924(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_1BA6BF9E8(0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[8]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

void sub_1BB71E9C8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_1BB86EB84();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
LABEL_5:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
    return;
  }
  sub_1BA6BF9E8(0);
  v9 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v12;
    v11 = a4[7];
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
}

uint64_t storeEnumTagSinglePayload for FormatMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BB71EAB4 + 4 * byte_1BB94380D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BB71EAE8 + 4 * byte_1BB943808[v4]))();
}

uint64_t sub_1BB71EAE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB71EAF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB71EAF8);
  return result;
}

uint64_t sub_1BB71EB04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB71EB0CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BB71EB10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB71EB18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatMetadata.CodingKeys()
{
  return &type metadata for FormatMetadata.CodingKeys;
}

unint64_t sub_1BB71EB38()
{
  unint64_t result;

  result = qword_1EF2CB3D8;
  if (!qword_1EF2CB3D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB943A1C, &type metadata for FormatMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CB3D8);
  }
  return result;
}

uint64_t sub_1BB71EB7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x655674616D726F66 && a2 == 0xED00006E6F697372 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x567377654E6E696DLL && a2 == 0xEE006E6F69737265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x567377654E78616DLL && a2 == 0xEE006E6F69737265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB95A880 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB95A8A0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95A8C0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95A8E0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t dispatch thunk of static FeedGroupNativeAdTransformable.createNativeAdGroup(from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of static FeedGroupNativeAdTransformable.removeNativeAdGroup(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FeedGroupNativeAdTransformable.nativeAdGroup.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1BB71EF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, unint64_t a5@<X5>, unint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v28;

  v9 = *(_QWORD *)v6;
  v8 = *(_QWORD *)(v6 + 8);
  v10 = *(_QWORD *)(v6 + 16);
  v11 = *(_QWORD *)(v6 + 24);
  v12 = *(_BYTE *)(v6 + 32);
  sub_1BB71F854();
  sub_1BA4A2870(&qword_1ED3B9550, (uint64_t (*)(uint64_t))sub_1BB71F854, MEMORY[0x1E0DEAF38]);
  sub_1BB71F8A8();
  v13 = sub_1BB872BBC();
  if ((v12 & 1) != 0)
  {
    v28 = v9;
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
      v16 = qword_1ED39E3A8;
      v17 = v8;
      swift_bridgeObjectRetain();
      if (v16 != -1)
        swift_once();
      v18 = qword_1ED476410;
      sub_1BB86DD20();
      swift_beginAccess();
      v19 = *(_QWORD *)(v18 + 16);
      if (*(_QWORD *)(v19 + 16))
      {
        swift_bridgeObjectRetain();
        v20 = sub_1BA6E35A8(a2, a3);
        if ((v21 & 1) != 0)
        {
          v22 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 16 * v20 + 8);
          swift_bridgeObjectRetain();
        }
        else
        {
          v22 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v22 = 0;
      }
      swift_endAccess();
      sub_1BB86DD2C();
      if (v22)
        sub_1BA6C1F54(v28, v17, v10, v11, 1);
      sub_1BB1749D4();
      swift_allocObject();
      result = sub_1BB86DF90();
      a6[1] = 0;
      a6[2] = 0;
      *a6 = result | 0x8000000000000000;
    }
    else
    {
      sub_1BB1749D4();
      swift_allocObject();
      swift_bridgeObjectRetain();
      *a6 = sub_1BB86DF90() | 0x8000000000000000;
      a6[1] = a4;
      a6[2] = a5;
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA7261E0(v9, v8, v10, v11, 0);
    v15 = sub_1BB254B28(a1, v9, v8, v10, v11, v13);
    swift_bridgeObjectRelease();
    result = sub_1BA6C1F54(v9, v8, v10, v11, 0);
    if (!v7)
    {
      a6[1] = 0;
      a6[2] = 0;
      *a6 = (unint64_t)v15;
    }
  }
  return result;
}

uint64_t _s8NewsFeed23FormatStateMachineInputO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v25;
  char v26;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  v8 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(_BYTE *)(a2 + 32);
  if ((v6 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      v12 = v3 == v8 && v2 == v7;
      if (v12 || (sub_1BB874398() & 1) != 0)
      {
        if ((v5 & 1) != 0)
          v13 = 0x6F74656C676E6973;
        else
          v13 = 0x65636E6174736E69;
        if ((v5 & 1) != 0)
          v14 = 0xE90000000000006ELL;
        else
          v14 = 0xE800000000000000;
        if ((v10 & 1) != 0)
          v15 = 0x6F74656C676E6973;
        else
          v15 = 0x65636E6174736E69;
        if ((v10 & 1) != 0)
          v16 = 0xE90000000000006ELL;
        else
          v16 = 0xE800000000000000;
        if (v13 == v15 && v14 == v16)
        {
          v18 = 1;
          sub_1BA7261E0(v8, v7, v10, v9, 1);
          sub_1BA7261E0(v3, v2, v5, v4, 1);
          sub_1BA7261E0(v3, v2, v5, v4, 1);
          sub_1BA7261E0(v8, v7, v10, v9, 1);
          swift_bridgeObjectRelease_n();
          sub_1BA6C1F54(v3, v2, v5, v4, 1);
          sub_1BA6C1F54(v8, v7, v10, v9, 1);
          sub_1BA6C1F54(v8, v7, v10, v9, 1);
          sub_1BA6C1F54(v3, v2, v5, v4, 1);
          return v18;
        }
        v26 = sub_1BB874398();
        v18 = 1;
        sub_1BA7261E0(v8, v7, v10, v9, 1);
        sub_1BA7261E0(v3, v2, v5, v4, 1);
        sub_1BA7261E0(v3, v2, v5, v4, 1);
        sub_1BA7261E0(v8, v7, v10, v9, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6C1F54(v3, v2, v5, v4, 1);
        sub_1BA6C1F54(v8, v7, v10, v9, 1);
        sub_1BA6C1F54(v8, v7, v10, v9, 1);
        sub_1BA6C1F54(v3, v2, v5, v4, 1);
        if ((v26 & 1) != 0)
          return v18;
        return 0;
      }
      sub_1BA7261E0(v3, v2, v5, v4, 1);
      sub_1BA7261E0(v8, v7, v10, v9, 1);
      sub_1BA6C1F54(v3, v2, v5, v4, 1);
      v19 = v8;
      v20 = v7;
      v21 = v10;
      v22 = v9;
      v23 = 1;
LABEL_28:
      sub_1BA6C1F54(v19, v20, v21, v22, v23);
      return 0;
    }
LABEL_27:
    sub_1BA7261E0(*(_QWORD *)a1, v2, v5, v4, v6);
    sub_1BA7261E0(v8, v7, v10, v9, v11);
    sub_1BA6C1F54(v3, v2, v5, v4, v6);
    v19 = v8;
    v20 = v7;
    v21 = v10;
    v22 = v9;
    v23 = v11;
    goto LABEL_28;
  }
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    goto LABEL_27;
  sub_1BA7261E0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v10, v9, 0);
  sub_1BA7261E0(v3, v2, v5, v4, 0);
  sub_1BA7261E0(v3, v2, v5, v4, 0);
  sub_1BA7261E0(v8, v7, v10, v9, 0);
  v25 = sub_1BB641364(v3, v2, v5, v4, v8, v7, v10, v9);
  sub_1BA6C1F54(v3, v2, v5, v4, 0);
  sub_1BA6C1F54(v8, v7, v10, v9, 0);
  sub_1BA6C1F54(v8, v7, v10, v9, 0);
  sub_1BA6C1F54(v3, v2, v5, v4, 0);
  return v25 & 1;
}

unint64_t sub_1BB71F638(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB71F65C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB71F65C()
{
  unint64_t result;

  result = qword_1EF2CB3E0;
  if (!qword_1EF2CB3E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInput, &type metadata for FormatStateMachineInput);
    atomic_store(result, (unint64_t *)&qword_1EF2CB3E0);
  }
  return result;
}

unint64_t sub_1BB71F6A0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA612090();
  a1[2] = sub_1BA7E41A0();
  result = sub_1BB71F6D4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB71F6D4()
{
  unint64_t result;

  result = qword_1EF2CB3E8;
  if (!qword_1EF2CB3E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInput, &type metadata for FormatStateMachineInput);
    atomic_store(result, (unint64_t *)&qword_1EF2CB3E8);
  }
  return result;
}

uint64_t destroy for FormatStateMachineInput(uint64_t a1)
{
  return sub_1BA6C1F54(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for FormatStateMachineInput(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BA7261E0(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FormatStateMachineInput(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BA7261E0(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BA6C1F54(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FormatStateMachineInput(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_1BA6C1F54(v4, v6, v5, v7, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatStateMachineInput()
{
  return &type metadata for FormatStateMachineInput;
}

void sub_1BB71F854()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9548)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9548);
  }
}

unint64_t sub_1BB71F8A8()
{
  unint64_t result;

  result = qword_1ED3B7398;
  if (!qword_1ED3B7398)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineEvent, &type metadata for FormatStateMachineEvent);
    atomic_store(result, (unint64_t *)&qword_1ED3B7398);
  }
  return result;
}

uint64_t sub_1BB71F8EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t result;
  _QWORD v28[2];
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;

  sub_1BA89C564();
  v4 = v3;
  v5 = MEMORY[0x1E0C80A78](v3);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v5);
  sub_1BA4A2870(&qword_1EF2B0730, (uint64_t (*)(uint64_t))sub_1BA89C564, MEMORY[0x1E0DB4F60]);
  sub_1BB872BA4();
  v8 = v33;
  v9 = v34;
  v31 = v33 >> 62;
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v9 == v11)
      goto LABEL_3;
  }
  else if (v34 == *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_4:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
  v12 = v8 & 0xFFFFFFFFFFFFFF8;
  v29 = v8 & 0xFFFFFFFFFFFFFF8;
  v30 = v8 & 0xC000000000000001;
  if (v8 < 0)
    v12 = v8;
  v28[1] = v12;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (v30)
  {
    v14 = MEMORY[0x1BCCE4630](v9, v8);
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_38;
LABEL_18:
    v35 = v14;
    sub_1BB720944(&v35, &v32);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v10;
    }
    swift_release();
    v16 = v32;
    v17 = *(_QWORD *)(v32 + 16);
    v18 = v10[2];
    v19 = v18 + v17;
    if (__OFADD__(v18, v17))
      goto LABEL_39;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v19 <= v10[3] >> 1)
    {
      if (*(_QWORD *)(v16 + 16))
        goto LABEL_23;
    }
    else
    {
      if (v18 <= v19)
        v26 = v18 + v17;
      else
        v26 = v18;
      v10 = sub_1BB38C57C((_QWORD *)isUniquelyReferenced_nonNull_native, v26, 1, v10);
      if (*(_QWORD *)(v16 + 16))
      {
LABEL_23:
        v21 = v10[2];
        if ((v10[3] >> 1) - v21 < v17)
          goto LABEL_41;
        v22 = (unint64_t)&v10[v21 + 4];
        if (v16 + 32 < v22 + 8 * v17 && v22 < v16 + 32 + 8 * v17)
          goto LABEL_45;
        swift_arrayInitWithCopy();
        if (v17)
        {
          v23 = v10[2];
          v24 = __OFADD__(v23, v17);
          v25 = v23 + v17;
          if (v24)
            goto LABEL_42;
          v10[2] = v25;
        }
        goto LABEL_34;
      }
    }
    if (v17)
      goto LABEL_40;
LABEL_34:
    swift_bridgeObjectRelease();
    if (v31)
    {
      swift_bridgeObjectRetain();
      v13 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = *(_QWORD *)(v29 + 16);
    }
    ++v9;
    if (v15 == v13)
      goto LABEL_4;
  }
  if ((v9 & 0x8000000000000000) != 0)
    goto LABEL_43;
  if (v9 >= *(_QWORD *)(v29 + 16))
    goto LABEL_44;
  v14 = *(_QWORD *)(v8 + 8 * v9 + 32);
  swift_retain();
  v15 = v9 + 1;
  if (!__OFADD__(v9, 1))
    goto LABEL_18;
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t SportsBracketGroupDataVisualization.leagueTag.getter()
{
  uint64_t v0;
  uint64_t v2;

  sub_1BA89C564();
  sub_1BB86EC68();
  v0 = *(_QWORD *)(v2 + 56);
  swift_unknownObjectRetain();
  swift_release();
  return v0;
}

uint64_t SportsBracketGroupDataVisualization.championshipTag.getter()
{
  uint64_t v0;
  uint64_t v2;

  sub_1BA89C564();
  sub_1BB86EC68();
  v0 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRetain();
  swift_release();
  return v0;
}

uint64_t SportsBracketGroupDataVisualization.umcCanonicalId.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;

  sub_1BA89C564();
  sub_1BB86EC68();
  v0 = *(void **)(v5 + 64);
  swift_unknownObjectRetain();
  swift_release();
  if (v0
    && (v1 = objc_msgSend(v0, sel_asSports), swift_unknownObjectRelease(), v1)
    && (v2 = objc_msgSend(v1, sel_UMCCanonicalID), swift_unknownObjectRelease(), v2))
  {
    v3 = sub_1BB8729A0();

  }
  else
  {
    sub_1BB86EC68();
    v3 = *(_QWORD *)(v5 + 40);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v3;
}

uint64_t SportsBracketGroupDataVisualization.configure(with:data:pool:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  void (*v14)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v15;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BA89C564();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v17[-v12];
  v18 = a1;
  v19 = a2;
  v20 = a3;
  type metadata accessor for SportsBracketDataVisualization();
  sub_1BB86EC5C();
  v14 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32);
  v14(v10, v13, v7);
  v15 = swift_allocObject();
  v14((_BYTE *)(v15 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations), v10, v7);
  return v15;
}

uint64_t SportsBracketGroupDataVisualization.__allocating_init(visualizations:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations;
  sub_1BA89C564();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t SportsBracketGroupDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  sub_1BA89C564();
  sub_1BB86EC68();
  v2 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
  v3 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8);
  v4 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 16);
  v5 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 24);
  v6 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 32);
  v7 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 40);
  sub_1BA99178C(v2, v3);
  result = swift_release();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return result;
}

uint64_t SportsBracketGroupDataVisualization.routeTag.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1BA89C564();
  sub_1BB86EC68();
  v0 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
  v1 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8);
  v2 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 16);
  sub_1BA99178C(v0, v1);
  swift_release();
  if (!v1 || (swift_unknownObjectRetain(), sub_1BA993900(v0, v1), !v2))
  {
    sub_1BB86EC68();
    v2 = *(_QWORD *)(v4 + 64);
    swift_unknownObjectRetain();
    swift_release();
    if (!v2)
    {
      sub_1BB86EC68();
      v2 = *(_QWORD *)(v4 + 56);
      swift_unknownObjectRetain();
      swift_release();
    }
  }
  return v2;
}

uint64_t SportsBracketGroupDataVisualization.competitorTags.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1BA89C564();
  v2 = v1;
  v3 = MEMORY[0x1E0C80A78](v1);
  v16 = MEMORY[0x1E0DEE9D8];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v0 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations, v2, v3);
  sub_1BA4A2870(&qword_1EF2B0730, (uint64_t (*)(uint64_t))sub_1BA89C564, MEMORY[0x1E0DB4F60]);
  result = sub_1BB872BA4();
  v7 = v14;
  v8 = v15;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v8 == v10)
      goto LABEL_3;
    swift_bridgeObjectRetain();
    v9 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15 == v9)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  if (v8 >= v9)
    goto LABEL_16;
  while (1)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v11 = MEMORY[0x1BCCE4630](v8, v7);
      goto LABEL_9;
    }
    if (v8 < 0)
      break;
    if ((unint64_t)v8 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_15;
    v11 = *(_QWORD *)(v7 + 8 * v8 + 32);
    swift_retain();
LABEL_9:
    ++v8;
    v12 = *(_QWORD *)(v11 + 32);
    swift_bridgeObjectRetain();
    swift_release();
    result = sub_1BB383FE8(v12);
    if (v9 == v8)
      goto LABEL_3;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t SportsBracketGroupDataVisualization.leagueTags.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA89C564();
  v2 = v1;
  v3 = MEMORY[0x1E0C80A78](v1);
  v17 = MEMORY[0x1E0DEE9D8];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v0 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations, v2, v3);
  sub_1BA4A2870(&qword_1EF2B0730, (uint64_t (*)(uint64_t))sub_1BA89C564, MEMORY[0x1E0DB4F60]);
  result = sub_1BB872BA4();
  v7 = v15;
  v8 = v16;
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v8 == v10)
      goto LABEL_3;
    swift_bridgeObjectRetain();
    v9 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16 == v9)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      return v17;
    }
  }
  if (v8 >= v9)
    goto LABEL_21;
  while (1)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v11 = MEMORY[0x1BCCE4630](v8++, v7);
      v12 = *(_QWORD *)(v11 + 56);
      swift_unknownObjectRetain();
      result = swift_unknownObjectRelease();
      if (v12)
        goto LABEL_8;
      goto LABEL_11;
    }
    if (v8 < 0)
      break;
    if ((unint64_t)v8 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_20;
    v13 = *(_QWORD *)(v7 + 32 + 8 * v8++);
    if (*(_QWORD *)(v13 + 56))
    {
      swift_unknownObjectRetain();
LABEL_8:
      MEMORY[0x1BCCE36AC]();
      if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      result = sub_1BB872DCC();
    }
LABEL_11:
    if (v8 == v9)
      goto LABEL_3;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t SportsBracketGroupDataVisualization.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  sub_1BACC488C();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA89C564();
  sub_1BB86EC5C();
  sub_1BA603240((unint64_t *)&qword_1EF2B1CE0, (uint64_t (*)(uint64_t))sub_1BACC488C, (uint64_t (*)(void))sub_1BA6A0BA4, MEMORY[0x1E0DB4F58]);
  v5 = sub_1BB872904();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

uint64_t SportsBracketGroupDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB720628(&OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl, a1);
}

uint64_t SportsBracketGroupDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB720628(&OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_configuredEmbedUrl, a1);
}

uint64_t sub_1BB720628@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_1BA89C564();
  sub_1BB86EC68();
  v4 = v7 + *a1;
  v5 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
  return swift_release();
}

uint64_t SportsBracketGroupDataVisualization.urlDataSources.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1BA89C564();
  v2 = v1;
  v3 = MEMORY[0x1E0C80A78](v1);
  v16 = MEMORY[0x1E0DEE9D8];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v0 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations, v2, v3);
  sub_1BA4A2870(&qword_1EF2B0730, (uint64_t (*)(uint64_t))sub_1BA89C564, MEMORY[0x1E0DB4F60]);
  result = sub_1BB872BA4();
  v7 = v14;
  v8 = v15;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v8 == v10)
      goto LABEL_3;
    swift_bridgeObjectRetain();
    v9 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15 == v9)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  if (v8 >= v9)
    goto LABEL_16;
  while (1)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v11 = MEMORY[0x1BCCE4630](v8, v7);
      goto LABEL_9;
    }
    if (v8 < 0)
      break;
    if ((unint64_t)v8 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_15;
    v11 = *(_QWORD *)(v7 + 8 * v8 + 32);
    swift_retain();
LABEL_9:
    ++v8;
    v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources);
    swift_bridgeObjectRetain();
    swift_release();
    result = sub_1BB383A0C(v12);
    if (v9 == v8)
      goto LABEL_3;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t SportsBracketGroupDataVisualization.childVisualizations.getter()
{
  uint64_t v0;

  return sub_1BB71F8EC(v0 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations);
}

uint64_t SportsBracketGroupDataVisualization.visualizations.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations;
  sub_1BA89C564();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SportsBracketGroupDataVisualization.init(visualizations:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations;
  sub_1BA89C564();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_1BB720944@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v3 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events);
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_13:
    result = swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    *a2 = v7;
    return result;
  }
  swift_bridgeObjectRetain();
  v4 = sub_1BB873F30();
  if (!v4)
    goto LABEL_13;
LABEL_3:
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_1BAC79FC4(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v12 = a2;
    v6 = 0;
    v7 = v13;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x1BCCE4630](v6, v3);
      }
      else
      {
        v8 = *(_QWORD *)(v3 + 8 * v6 + 32);
        swift_retain();
      }
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = v8;
      v11 = *(_QWORD *)(v13 + 16);
      v10 = *(_QWORD *)(v13 + 24);
      if (v11 >= v10 >> 1)
        sub_1BAC79FC4(v10 > 1, v11 + 1, 1);
      ++v6;
      *(_QWORD *)(v13 + 16) = v11 + 1;
      *(_QWORD *)(v13 + 8 * v11 + 32) = v9;
    }
    while (v4 != v6);
    result = swift_bridgeObjectRelease();
    a2 = v12;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t SportsBracketGroupDataVisualization.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1BA89C564();
  sub_1BB86EC68();
  v2 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_metadata);
  sub_1BAF9A4C8(v2);
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1BB720B44@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t result;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t *v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59[6];
  uint64_t v60;

  v56 = a5;
  v60 = a4;
  v55 = a2;
  v7 = sub_1BB86C8E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v51 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*a1 + 56);
  v10 = *(_QWORD *)(*a1 + 64);
  v54 = *a1;
  swift_beginAccess();
  v12 = *(_QWORD *)(a3 + 48);
  swift_beginAccess();
  v50 = a3;
  v13 = *(_QWORD *)(a3 + 56);
  v59[0] = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(v13 + 16);
  v53 = v12;
  v52 = v10;
  if (!v14)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v30 = MEMORY[0x1E0DEE9D8];
    v31 = v11;
    goto LABEL_13;
  }
  v47 = v8;
  v48 = v7;
  v49 = v11;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46[1] = v13;
  v15 = (uint64_t *)(v13 + 48);
  v58 = xmmword_1BB87CE70;
  do
  {
    v24 = *(v15 - 2);
    v23 = *(v15 - 1);
    v25 = *v15;
    if ((~*v15 & 0xF000000000000007) != 0)
    {
      sub_1BA4B07F0(0, &qword_1ED3B9E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v16 = type metadata accessor for FormatOption();
      v17 = *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80);
      v18 = (v17 + 32) & ~v17;
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = v58;
      v20 = (uint64_t *)(v19 + v18);
      *v20 = v24;
      v20[1] = v23;
      v20[2] = v25;
      v20[3] = 1;
      v21 = v19 + v18 + *(int *)(v16 + 28);
      v22 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
    v26 = *(_QWORD *)(v60 + 72);
    if (*(_QWORD *)(v26 + 16))
    {
      swift_bridgeObjectRetain();
      v27 = sub_1BA6E35A8(v24, v23);
      if ((v28 & 1) != 0)
      {
        v29 = *(_QWORD *)(v26 + 56) + (v27 << 6);
        v57 = *(_QWORD *)(v29 + 8);
        v19 = *(_QWORD *)(v29 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      swift_bridgeObjectRelease();
    }
    v19 = MEMORY[0x1E0DEE9D8];
LABEL_4:
    v15 += 3;
    sub_1BA5E7FF4(v25);
    sub_1BA6D3834(v19);
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  v30 = v59[0];
  v31 = v49;
  v7 = v48;
  v8 = v47;
LABEL_13:
  v32 = v50;
  swift_beginAccess();
  v34 = *(_QWORD *)(v32 + 32);
  v33 = *(_QWORD *)(v32 + 40);
  swift_bridgeObjectRetain();
  v35 = sub_1BB3BBB70(v34, v33);
  swift_bridgeObjectRelease();
  v36 = v55;
  swift_unknownObjectRetain();
  v37 = v51;
  sub_1BB86C8D4();
  v38 = sub_1BB86C8C8();
  v40 = v39;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v37, v7);
  v41 = objc_msgSend(v36, sel_asSports);
  LOBYTE(v59[0]) = 3;
  v42 = sub_1BB0FAF14((uint64_t)v36, v30, (unsigned __int8 *)v59);
  swift_bridgeObjectRelease();
  LOBYTE(v59[0]) = 3;
  v43 = sub_1BB0FB700(v36, v31, v52, (uint64_t)v35, 0x64657461727563, 0xE700000000000000, 0, (unsigned __int8 *)v59);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v59[0] = v38;
  v59[1] = v40;
  v59[2] = (uint64_t)v41;
  v59[3] = v53;
  v59[4] = v42;
  v59[5] = (uint64_t)v43;
  v44 = SportsBracketDataVisualization.with(config:)(v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  result = swift_bridgeObjectRelease();
  *v56 = v44;
  return result;
}

uint64_t SportsBracketGroupDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SportsBracketGroupDataVisualization.init(from:)(a1);
  return v2;
}

uint64_t *SportsBracketGroupDataVisualization.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *v1;
  sub_1BA89C564();
  v16 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v15 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB7213B4(0, &qword_1EF2CB3F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v17 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB721204();
  sub_1BB87468C();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1BA603240(&qword_1EF2CB400, (uint64_t (*)(uint64_t))sub_1BA89C564, sub_1BB721248, MEMORY[0x1E0DB4F68]);
    v12 = v15;
    v11 = v16;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))((uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations, v12, v11);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

unint64_t sub_1BB721204()
{
  unint64_t result;

  result = qword_1EF2CB3F8;
  if (!qword_1EF2CB3F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB943D34, &type metadata for SportsBracketGroupDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CB3F8);
  }
  return result;
}

uint64_t sub_1BB721248()
{
  return sub_1BA603240(&qword_1EF2CB408, (uint64_t (*)(uint64_t))sub_1BA89C5C4, sub_1BB72126C, MEMORY[0x1E0DEAF40]);
}

uint64_t sub_1BB72126C()
{
  return sub_1BA4A2870(&qword_1EF2CB410, (uint64_t (*)(uint64_t))type metadata accessor for SportsBracketDataVisualization, (uint64_t)&protocol conformance descriptor for SportsBracketDataVisualization);
}

uint64_t SportsBracketGroupDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB7213B4(0, &qword_1EF2CB418, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB721204();
  sub_1BB8746C8();
  sub_1BA89C564();
  sub_1BA603240(&qword_1EF2CB420, (uint64_t (*)(uint64_t))sub_1BA89C564, sub_1BB721410, MEMORY[0x1E0DB4F50]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1BB7213B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB721204();
    v7 = a3(a1, &type metadata for SportsBracketGroupDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB721410()
{
  return sub_1BA603240(&qword_1EF2CB428, (uint64_t (*)(uint64_t))sub_1BA89C5C4, sub_1BB721434, MEMORY[0x1E0DEAF10]);
}

uint64_t sub_1BB721434()
{
  return sub_1BA4A2870(&qword_1EF2CB430, (uint64_t (*)(uint64_t))type metadata accessor for SportsBracketDataVisualization, (uint64_t)&protocol conformance descriptor for SportsBracketDataVisualization);
}

uint64_t sub_1BB721450()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB7214AC()
{
  return sub_1BB872A90();
}

uint64_t sub_1BB7214D0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB721528@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BB721578(char *a1@<X8>)
{
  strcpy(a1, "visualizations");
  a1[15] = -18;
}

uint64_t sub_1BB7215A0()
{
  return 0x7A696C6175736976;
}

uint64_t sub_1BB7215C4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BB721618()
{
  sub_1BB721204();
  return sub_1BB874710();
}

uint64_t sub_1BB721640()
{
  sub_1BB721204();
  return sub_1BB87471C();
}

uint64_t SportsBracketGroupDataVisualization.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations;
  sub_1BA89C564();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SportsBracketGroupDataVisualization.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations;
  sub_1BA89C564();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t *sub_1BB7216FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *result;

  v5 = swift_allocObject();
  result = SportsBracketGroupDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB721750(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB7213B4(0, &qword_1EF2CB418, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB721204();
  sub_1BB8746C8();
  sub_1BA89C564();
  sub_1BA603240(&qword_1EF2CB420, (uint64_t (*)(uint64_t))sub_1BA89C564, sub_1BB721410, MEMORY[0x1E0DB4F50]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BB721884()
{
  return type metadata accessor for SportsBracketGroupDataVisualization();
}

uint64_t type metadata accessor for SportsBracketGroupDataVisualization()
{
  uint64_t result;

  result = qword_1ED3AA0B8;
  if (!qword_1ED3AA0B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB7218C8()
{
  unint64_t v0;

  sub_1BA89C564();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SportsBracketGroupDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsBracketGroupDataVisualization.__allocating_init(visualizations:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SportsBracketGroupDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for SportsBracketGroupDataVisualization.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB7219A0 + 4 * byte_1BB943B90[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB7219C0 + 4 * byte_1BB943B95[v4]))();
}

_BYTE *sub_1BB7219A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB7219C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB7219C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB7219D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB7219D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB7219E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsBracketGroupDataVisualization.CodingKeys()
{
  return &type metadata for SportsBracketGroupDataVisualization.CodingKeys;
}

unint64_t sub_1BB721A00()
{
  unint64_t result;

  result = qword_1EF2CB438;
  if (!qword_1EF2CB438)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB943D0C, &type metadata for SportsBracketGroupDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CB438);
  }
  return result;
}

unint64_t sub_1BB721A48()
{
  unint64_t result;

  result = qword_1EF2CB440;
  if (!qword_1EF2CB440)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB943C44, &type metadata for SportsBracketGroupDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CB440);
  }
  return result;
}

unint64_t sub_1BB721A90()
{
  unint64_t result;

  result = qword_1EF2CB448;
  if (!qword_1EF2CB448)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB943C6C, &type metadata for SportsBracketGroupDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2CB448);
  }
  return result;
}

uint64_t sub_1BB721AD4@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  void (*v37)(uint64_t, _QWORD, uint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  void (*v90)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _UNKNOWN **v98;
  uint64_t v99;
  char *v100;
  uint64_t inited;
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  __int128 v105;
  _OWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD *v112;
  _QWORD *v113;
  _QWORD *v114;
  char *v115;
  __int128 v116;
  __int128 v117;
  unint64_t v118;
  __int128 v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v125)(char *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  __int128 v142;
  _UNKNOWN **v143;
  uint64_t v144;
  _QWORD v145[4];
  __int128 v146;
  uint64_t v147;
  _OWORD v148[2];
  uint64_t v149;
  void (*v150)(char *, _QWORD, uint64_t, uint64_t);

  v112 = a2;
  v3 = sub_1BB86C67C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v132 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v115 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v114 = (uint64_t *)((char *)&v107 - v8);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v4, v6);
  MEMORY[0x1E0C80A78](v9);
  v140 = (uint64_t)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v128 = (char *)&v107 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v107 - v14;
  v16 = *a1;
  *(_QWORD *)&v141 = 0x2074656B63617242;
  *((_QWORD *)&v141 + 1) = 0xE800000000000000;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v17);
  swift_bridgeObjectRelease();
  v110 = *((_QWORD *)&v141 + 1);
  v111 = v141;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = v18;
  sub_1BA8C88C8(0);
  v131 = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 72);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = (v23 + 32) & ~v23;
  v127 = v19;
  v126 = v23 | 7;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB8827B0;
  v109 = v25;
  v130 = v24;
  v26 = (_QWORD *)(v25 + v24);
  v27 = *(_QWORD *)(v16 + 40);
  v28 = *(_QWORD *)(v16 + 48);
  v29 = type metadata accessor for FormatInspectionItem(0);
  v30 = (char *)v26 + *(int *)(v29 + 24);
  *(_QWORD *)v30 = v27;
  *((_QWORD *)v30 + 1) = v28;
  v31 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v139 = v31;
  v138 = v32;
  v32(v30, 0, 1, v31);
  *v26 = 0xD000000000000010;
  v26[1] = 0x80000001BB9658C0;
  v26[2] = 0;
  v26[3] = 0;
  v33 = (char *)v26 + *(int *)(v29 + 28);
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  v33[16] = -1;
  v34 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v34(v26, 0, 1, v29);
  v113 = v26;
  v133 = v22;
  v35 = (_QWORD *)((char *)v26 + v22);
  v36 = v132;
  v125 = *(void (**)(char *, uint64_t, uint64_t))(v132 + 16);
  v125(v15, v16 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl, v3);
  v37 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56);
  v129 = v3;
  v124 = v37;
  v37((uint64_t)v15, 0, 1, v3);
  swift_bridgeObjectRetain();
  sub_1BAAF770C(0x5255206465626D45, 0xE90000000000004CLL, (uint64_t)v15, v35);
  v150 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v34;
  v34(v35, 0, 1, v29);
  v108 = v16;
  v38 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_urlDataSources);
  if (v38 >> 62)
    goto LABEL_26;
  v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v134 = v29;
    if (!v39)
      break;
    v147 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7A388(0, v39 & ~(v39 >> 63), 0);
    if (v39 < 0)
    {
      __break(1u);
      return result;
    }
    v41 = 0;
    v42 = v147;
    v121 = v38 & 0xC000000000000001;
    v29 = 2 * v133;
    v107 = 3 * v133;
    v120 = v130 + 3 * v133;
    v119 = xmmword_1BB87FC80;
    v117 = xmmword_1BB88A7F0;
    v116 = xmmword_1BB88A800;
    v118 = v38;
    v123 = v39;
    v122 = 2 * v133;
    while (v39 != v41)
    {
      v137 = v42;
      if (v121)
      {
        v43 = (_QWORD *)MEMORY[0x1BCCE4630](v41, v38);
      }
      else
      {
        v43 = *(_QWORD **)(v38 + 8 * v41 + 32);
        swift_retain();
      }
      v44 = v134;
      v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = v119;
      v136 = v45;
      v46 = (_QWORD *)(v45 + v130);
      v47 = v43[2];
      v48 = v43[3];
      sub_1BA993F8C(v47, v48);
      sub_1BAAF9A70(0x20746E65746E6F43, 0xEC00000065707954, v47, v48, (char *)v46);
      v150((char *)v46, 0, 1, v44);
      v49 = (char *)v46 + v133;
      v50 = v43[5];
      *(_QWORD *)&v146 = v43[4];
      *((_QWORD *)&v146 + 1) = v50;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
      swift_bridgeObjectRetain_n();
      v51 = MEMORY[0x1E0DEA968];
      v52 = swift_dynamicCast();
      v135 = v41;
      if (v52)
      {
        swift_bridgeObjectRelease();
        v53 = &v49[*(int *)(v44 + 24)];
        *(_QWORD *)v53 = v141;
        v54 = v139;
        swift_storeEnumTagMultiPayload();
        v138(v53, 0, 1, v54);
        *(_OWORD *)v49 = v117;
        *((_QWORD *)v49 + 2) = 0;
        *((_QWORD *)v49 + 3) = 0;
        v55 = &v49[*(int *)(v44 + 28)];
        *(_QWORD *)v55 = 0;
        *((_QWORD *)v55 + 1) = 0;
        v55[16] = -1;
      }
      else
      {
        *((_QWORD *)&v142 + 1) = v51;
        v143 = (_UNKNOWN **)MEMORY[0x1E0DEA9D8];
        v141 = v146;
        sub_1BA4CECCC(&v141, (uint64_t)v145);
        v56 = __swift_project_boxed_opaque_existential_1(v145, v145[3]);
        v57 = *v56;
        v58 = v56[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v59 = (uint64_t)v114;
        *v114 = v57;
        *(_QWORD *)(v59 + 8) = v58;
        v44 = v134;
        v60 = v139;
        swift_storeEnumTagMultiPayload();
        v138((char *)v59, 0, 1, v60);
        *(_OWORD *)v49 = v117;
        *((_QWORD *)v49 + 2) = 0;
        *((_QWORD *)v49 + 3) = 0;
        sub_1BA993F9C(v59, (uint64_t)&v49[*(int *)(v44 + 24)]);
        v61 = &v49[*(int *)(v44 + 28)];
        *(_QWORD *)v61 = 0;
        *((_QWORD *)v61 + 1) = 0;
        v61[16] = -1;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
      }
      swift_bridgeObjectRelease();
      v150(v49, 0, 1, v44);
      v62 = (char *)v46 + v29;
      v63 = (uint64_t)v128;
      v64 = v129;
      v65 = v125;
      v125(v128, (uint64_t)v43 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v129);
      v124(v63, 0, 1, v64);
      v66 = v140;
      sub_1BA7E8428(v63, v140);
      v67 = v132;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v66, 1, v64) == 1)
      {
        sub_1BA7F0A80(v63);
        v138(&v62[*(int *)(v44 + 24)], 1, 1, v139);
        *(_OWORD *)v62 = v116;
        *((_QWORD *)v62 + 2) = 0;
        *((_QWORD *)v62 + 3) = 0;
        v68 = &v62[*(int *)(v44 + 28)];
        *(_QWORD *)v68 = 0;
        *((_QWORD *)v68 + 1) = 0;
        v68[16] = -1;
      }
      else
      {
        v69 = v115;
        v65(v115, v140, v64);
        sub_1BA7F0A80(v63);
        v70 = &v62[*(int *)(v44 + 24)];
        (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v70, v69, v64);
        v71 = v139;
        swift_storeEnumTagMultiPayload();
        v138(v70, 0, 1, v71);
        *(_OWORD *)v62 = v116;
        *((_QWORD *)v62 + 2) = 0;
        *((_QWORD *)v62 + 3) = 0;
        v72 = &v62[*(int *)(v44 + 28)];
        *(_QWORD *)v72 = 0;
        *((_QWORD *)v72 + 1) = 0;
        v72[16] = -1;
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v140, v64);
      }
      v38 = v118;
      v73 = v135;
      v150(v62, 0, 1, v44);
      sub_1BAF89090(0, 0xE000000000000000, 0, 0, v136, v148);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *((_QWORD *)&v142 + 1) = &type metadata for FormatInspectionGroup;
      v143 = &off_1E72D2F60;
      v74 = swift_allocObject();
      *(_QWORD *)&v141 = v74;
      swift_release();
      *(_QWORD *)(v74 + 48) = v149;
      v75 = v148[1];
      *(_OWORD *)(v74 + 16) = v148[0];
      *(_OWORD *)(v74 + 32) = v75;
      v147 = v137;
      v77 = *(_QWORD *)(v137 + 16);
      v76 = *(_QWORD *)(v137 + 24);
      v29 = v122;
      if (v77 >= v76 >> 1)
        sub_1BAC7A388(v76 > 1, v77 + 1, 1);
      v41 = v73 + 1;
      v78 = *((_QWORD *)&v142 + 1);
      v79 = (uint64_t)v143;
      v80 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v141, *((uint64_t *)&v142 + 1));
      v81 = MEMORY[0x1E0C80A78](v80);
      v83 = (char *)&v107 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v84 + 16))(v83, v81);
      sub_1BA6AC628(v77, (uint64_t)v83, &v147, v78, v79);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v141);
      v42 = v147;
      v39 = v123;
      if (v123 == v41)
      {
        swift_bridgeObjectRelease();
        v85 = v107;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    v39 = sub_1BB873F30();
  }
  swift_bridgeObjectRelease();
  v29 = 2 * v133;
  v85 = 3 * v133;
  v42 = MEMORY[0x1E0DEE9D8];
LABEL_21:
  v86 = v113;
  v87 = sub_1BA9747FC(v42);
  swift_bridgeObjectRelease();
  v88 = sub_1BB6DF010(v87);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x756F532061746144, 0xEC00000073656372, (uint64_t)v88, 0, 0, (_QWORD *)((char *)v86 + v29));
  v89 = v134;
  v90 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v150;
  v150((char *)v86 + v29, 0, 1, v134);
  v91 = (_QWORD *)((char *)v86 + v85);
  v92 = v108;
  v93 = *(_QWORD *)(v108 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_events);
  swift_bridgeObjectRetain();
  sub_1BAB046B8(0x7365726F6353, 0xE600000000000000, v93, v91);
  v90(v91, 0, 1, v89);
  v95 = *(_QWORD *)(v92 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
  v94 = *(_QWORD *)(v92 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8);
  v96 = *(_QWORD *)(v92 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 16);
  v97 = *(_QWORD *)(v92 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 24);
  v98 = *(_UNKNOWN ***)(v92 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 32);
  v99 = *(_QWORD *)(v92 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 40);
  if (v94)
  {
    swift_bridgeObjectRetain();
    v140 = v95;
  }
  else
  {
    v140 = 0;
  }
  v100 = (_QWORD *)((char *)v113 + 4 * v133);
  sub_1BAC86ECC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)&v141 = v95;
  *((_QWORD *)&v141 + 1) = v94;
  *(_QWORD *)&v142 = v96;
  *((_QWORD *)&v142 + 1) = v97;
  v143 = v98;
  v144 = v99;
  v102 = sub_1BB0FD744((uint64_t *)&v141);
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 64) = &off_1E7335C38;
  *(_QWORD *)(inited + 32) = v102;
  v103 = sub_1BA9747FC(inited);
  swift_setDeallocating();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  v104 = sub_1BB6DF010(v103);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x6769666E6F43, 0xE600000000000000, (uint64_t)v104, v140, v94, (char *)v100);
  v150((char *)v100, 0, 1, v134);
  sub_1BAF89090(v111, v110, 0, 0, v109, &v141);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  v105 = v142;
  v106 = v112;
  *v112 = v141;
  v106[1] = v105;
  *((_QWORD *)v106 + 4) = v143;
  return result;
}

uint64_t sub_1BB7228AC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB7228E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t SportsScoreDataVisualization.with(config:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35[6];
  uint64_t v36;

  v3 = sub_1BB86C67C();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v6;
  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  v12 = a1[4];
  v11 = a1[5];
  v13 = v1[8];
  v27 = v1[4];
  v34 = v1[5];
  v14 = v1[6];
  v29 = v13;
  v30 = v14;
  v31 = v1[7];
  (*(void (**)(char *, uint64_t, double))(v15 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_embedUrl, v4);
  v28 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_urlDataSources);
  v16 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_eventStatus);
  v35[5] = v11;
  v36 = v16;
  v32 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_isFeatured);
  v26 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_metadata);
  v17 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_debugData);
  v35[0] = v8;
  v35[1] = v7;
  v35[2] = v9;
  v35[3] = v10;
  v35[4] = v12;
  v18 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v27;
  swift_bridgeObjectRetain();
  v20 = v29;
  swift_unknownObjectRetain();
  v21 = v30;
  swift_bridgeObjectRetain();
  v22 = v31;
  swift_unknownObjectRetain();
  v23 = v28;
  swift_bridgeObjectRetain();
  swift_retain();
  v24 = v26;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  SportsScoreDataVisualization.init(competitorTags:leagueTag:umcCanonicalId:event:embedUrl:urlDataSources:eventStatus:isFeatured:metadata:debugData:config:)(v19, v20, v34, v21, v22, (uint64_t)v33, v23, &v36, v32, v24, v17, v35);
  return v18;
}

uint64_t SportsScoreDataVisualization.__allocating_init(competitorTags:leagueTag:umcCanonicalId:event:embedUrl:urlDataSources:eventStatus:isFeatured:metadata:debugData:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, char a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  uint64_t v19;

  v19 = swift_allocObject();
  SportsScoreDataVisualization.init(competitorTags:leagueTag:umcCanonicalId:event:embedUrl:urlDataSources:eventStatus:isFeatured:metadata:debugData:config:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  return v19;
}

