uint64_t sub_1BB307CA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatLayoutViewRoute();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FormatLayoutViewRoute()
{
  uint64_t result;

  result = qword_1EF2C1068;
  if (!qword_1EF2C1068)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithTake for FormatLayoutViewRoute(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  void *v90;
  const void *v91;
  uint64_t v92;
  uint64_t v93;
  _OWORD *v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  const void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  const void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _OWORD *v126;
  _OWORD *v127;
  int *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  const void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _OWORD *v143;
  _OWORD *v144;
  int *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _BYTE *v152;
  char *v153;
  int *v154;
  uint64_t v155;
  char *v156;
  int *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE *v163;
  char *v164;
  int *v165;
  uint64_t v166;
  char *v167;
  int *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _OWORD *v188;
  _OWORD *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _OWORD *v197;
  _OWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  int *v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  int *v215;
  uint64_t v216;
  char *v217;
  char *v218;
  int *v219;
  uint64_t v220;
  char *v221;
  char *v222;
  int *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  int *v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  void (*v233)(char *, char *, uint64_t);
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  __int128 v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  int *v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  int *v270;
  void (*v271)(char *, char *, uint64_t);
  uint64_t v272;
  char *v273;
  char *v274;
  int *v275;
  unsigned int (**v276)(_OWORD *, uint64_t, int *);
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  int *v284;
  uint64_t v285;
  char *v286;
  int *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  void (*v305)(char *, char *, uint64_t);
  uint64_t v306;
  uint64_t result;
  uint64_t v308;
  char *__dst;
  char *__dsta;
  void (**__dstb)(char *, _QWORD, uint64_t, int *);
  uint64_t v312;
  uint64_t v313;
  void (*v314)(char *, char *, uint64_t);
  int *v315;
  int *v316;
  char *v317;
  void (*v318)(char *, char *, uint64_t);
  void (*v319)(char *, char *, uint64_t);
  uint64_t v320;
  char *v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  int *v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = type metadata accessor for FeedItem(0);
  v6 = swift_getEnumCaseMultiPayload() - 2;
  if (EnumCaseMultiPayload == 1)
  {
    v331 = v5;
    switch(v6)
    {
      case 0:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v7 = (int *)type metadata accessor for FeedBannerAd();
        v8 = v7[5];
        v9 = a1 + v8;
        v10 = a2 + v8;
        v11 = sub_1BB8721C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
        v12 = v7[7];
        v13 = a1 + v12;
        v14 = a2 + v12;
        *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
        goto LABEL_80;
      case 1:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        v23 = (int *)type metadata accessor for FeedHeadline(0);
        v24 = v23[10];
        v25 = a1;
        v26 = (_BYTE *)(a1 + v24);
        v27 = a2 + v24;
        *v26 = *(_BYTE *)(a2 + v24);
        v26[1] = *(_BYTE *)(a2 + v24 + 1);
        v28 = (int *)type metadata accessor for FeedHeadline.State(0);
        v29 = v28[6];
        v30 = &v26[v29];
        v31 = (char *)(v27 + v29);
        v32 = (int *)type metadata accessor for SharedItem();
        v33 = *((_QWORD *)v32 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
        {
          v34 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          v115 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v30, v31, v115);
          v30[v32[5]] = v31[v32[5]];
          *(_QWORD *)&v30[v32[6]] = *(_QWORD *)&v31[v32[6]];
          v116 = v32[7];
          v321 = &v30[v116];
          v117 = &v31[v116];
          v118 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v321, v117, v118);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
        }
        v5 = v331;
        v26[v28[7]] = *(_BYTE *)(v27 + v28[7]);
        v26[v28[8]] = *(_BYTE *)(v27 + v28[8]);
        v26[v28[9]] = *(_BYTE *)(v27 + v28[9]);
        v26[v28[10]] = *(_BYTE *)(v27 + v28[10]);
        v119 = v23[11];
        a1 = v25;
        v120 = (void *)(v25 + v119);
        v121 = (const void *)(a2 + v119);
        v122 = sub_1BB871B24();
        v123 = *(_QWORD *)(v122 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v123 + 32))(v120, v121, v122);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
        }
        *(_OWORD *)(a1 + v23[12]) = *(_OWORD *)(a2 + v23[12]);
        v149 = v23[13];
        v150 = *(_QWORD *)(a2 + v149);
        if (v150 == 2)
          v150 = 2;
        *(_QWORD *)(a1 + v149) = v150;
        *(_QWORD *)(a1 + v23[14]) = *(_QWORD *)(a2 + v23[14]);
        goto LABEL_80;
      case 2:
        v35 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v35;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v36 = (int *)type metadata accessor for FeedWebEmbed();
        v37 = v36[8];
        v38 = a1 + v37;
        v39 = a2 + v37;
        v40 = sub_1BB86C67C();
        v41 = *(_QWORD *)(v40 - 8);
        v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32);
        v42(v38, v39, v40);
        v43 = v36[9];
        v44 = (void *)(a1 + v43);
        v45 = (const void *)(a2 + v43);
        v318 = (void (*)(char *, char *, uint64_t))v42;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(a2 + v43, 1, v40))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          v42((uint64_t)v44, (uint64_t)v45, v40);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v40);
        }
        *(_QWORD *)(a1 + v36[10]) = *(_QWORD *)(a2 + v36[10]);
        *(_QWORD *)(a1 + v36[11]) = *(_QWORD *)(a2 + v36[11]);
        v125 = v36[12];
        v126 = (_OWORD *)(a1 + v125);
        v127 = (_OWORD *)(a2 + v125);
        v128 = (int *)type metadata accessor for FeedHeadline(0);
        v129 = *((_QWORD *)v128 - 1);
        v322 = v40;
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v129 + 48))(v127, 1, v128))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        }
        else
        {
          v312 = v129;
          v315 = v36;
          v327 = a1;
          *v126 = *v127;
          *((_QWORD *)v126 + 2) = *((_QWORD *)v127 + 2);
          *((_BYTE *)v126 + 24) = *((_BYTE *)v127 + 24);
          *((_QWORD *)v126 + 4) = *((_QWORD *)v127 + 4);
          *(_OWORD *)((char *)v126 + 40) = *(_OWORD *)((char *)v127 + 40);
          *((_BYTE *)v126 + 56) = *((_BYTE *)v127 + 56);
          v151 = v128[10];
          v152 = (char *)v126 + v151;
          v153 = (char *)v127 + v151;
          *v152 = *((_BYTE *)v127 + v151);
          v152[1] = *((_BYTE *)v127 + v151 + 1);
          v154 = (int *)type metadata accessor for FeedHeadline.State(0);
          v155 = v154[6];
          __dst = &v152[v155];
          v156 = &v153[v155];
          v157 = (int *)type metadata accessor for SharedItem();
          v158 = *((_QWORD *)v157 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v158 + 48))(v156, 1, v157))
          {
            v159 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v156, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
          }
          else
          {
            v171 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(__dst, v156, v171);
            __dst[v157[5]] = v156[v157[5]];
            *(_QWORD *)&__dst[v157[6]] = *(_QWORD *)&v156[v157[6]];
            v318(&__dst[v157[7]], &v156[v157[7]], v322);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v158 + 56))(__dst, 0, 1, v157);
          }
          v152[v154[7]] = v153[v154[7]];
          v152[v154[8]] = v153[v154[8]];
          v152[v154[9]] = v153[v154[9]];
          v152[v154[10]] = v153[v154[10]];
          v172 = v128[11];
          v173 = (char *)v126 + v172;
          v174 = (char *)v127 + v172;
          v175 = sub_1BB871B24();
          v176 = *(_QWORD *)(v175 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v174, 1, v175))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v176 + 32))(v173, v174, v175);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v173, 0, 1, v175);
          }
          a1 = v327;
          v36 = v315;
          *(_OWORD *)((char *)v126 + v128[12]) = *(_OWORD *)((char *)v127 + v128[12]);
          v185 = v128[13];
          v186 = *(_QWORD *)((char *)v127 + v185);
          if (v186 == 2)
            v186 = 2;
          *(_QWORD *)((char *)v126 + v185) = v186;
          *(_QWORD *)((char *)v126 + v128[14]) = *(_QWORD *)((char *)v127 + v128[14]);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v312 + 56))(v126, 0, 1, v128);
        }
        v187 = v36[13];
        v188 = (_OWORD *)(a1 + v187);
        v189 = (_OWORD *)(a2 + v187);
        v190 = type metadata accessor for WebEmbedDataVisualization();
        v191 = *(_QWORD *)(v190 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
          v5 = v331;
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *v188 = *v189;
            v193 = type metadata accessor for GenericDataVisualization();
            v318((char *)v188 + *(int *)(v193 + 20), (char *)v189 + *(int *)(v193 + 20), v322);
            *(_QWORD *)((char *)v188 + *(int *)(v193 + 24)) = *(_QWORD *)((char *)v189 + *(int *)(v193 + 24));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v188, v189, *(_QWORD *)(v191 + 64));
          }
          v5 = v331;
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v188, 0, 1, v190);
        }
        *(_BYTE *)(a1 + v36[14]) = *(_BYTE *)(a2 + v36[14]);
        goto LABEL_80;
      case 6:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v47 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v48 = (_OWORD *)(a1 + v47);
        v49 = a2 + v47;
        v50 = *(_OWORD *)(a2 + v47 + 16);
        *v48 = *(_OWORD *)(a2 + v47);
        v48[1] = v50;
        v51 = type metadata accessor for FormatCustomItem.Resolved();
        v52 = *(int *)(v51 + 24);
        v53 = (char *)v48 + v52;
        v54 = (const void *)(v49 + v52);
        v55 = type metadata accessor for FormatCustomItem.Action();
        v56 = *(_QWORD *)(v55 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          v131 = sub_1BB86C67C();
          (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v53, v54, v131);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
        }
        *(_QWORD *)((char *)v48 + *(int *)(v51 + 28)) = *(_QWORD *)(v49 + *(int *)(v51 + 28));
        v5 = v331;
        goto LABEL_80;
      case 8:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v58 = (int *)type metadata accessor for FeedEngagementBanner();
        v59 = v58[5];
        v60 = a1 + v59;
        v61 = a2 + v59;
        v62 = sub_1BB86EDAC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
        *(_QWORD *)(a1 + v58[6]) = *(_QWORD *)(a2 + v58[6]);
        v63 = v58[7];
        v64 = a1 + v63;
        v65 = a2 + v63;
        *(_BYTE *)(v64 + 8) = *(_BYTE *)(v65 + 8);
        *(_QWORD *)v64 = *(_QWORD *)v65;
        *(_OWORD *)(a1 + v58[8]) = *(_OWORD *)(a2 + v58[8]);
LABEL_80:
        swift_storeEnumTagMultiPayload();
        break;
      case 13:
        v66 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v66;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v67 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)(a1 + v67) = *(_QWORD *)(a2 + v67);
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v68 = (char *)&loc_1BB3081FC + 4 * word_1BB908062[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        break;
    }
    sub_1BAB4832C();
    v204 = *(int *)(v203 + 48);
    v205 = (char *)(a1 + v204);
    v206 = (char *)(a2 + v204);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)v205 = *(_OWORD *)v206;
        v207 = (int *)type metadata accessor for FeedBannerAd();
        v208 = v207[5];
        v209 = &v205[v208];
        v210 = &v206[v208];
        v211 = sub_1BB8721C0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v209, v210, v211);
        *(_QWORD *)&v205[v207[6]] = *(_QWORD *)&v206[v207[6]];
        v212 = v207[7];
        v213 = &v205[v212];
        v214 = &v206[v212];
        v213[8] = v214[8];
        *(_QWORD *)v213 = *(_QWORD *)v214;
        *(_OWORD *)&v205[v207[8]] = *(_OWORD *)&v206[v207[8]];
        goto LABEL_120;
      case 3u:
        v329 = a1;
        *(_OWORD *)v205 = *(_OWORD *)v206;
        *((_QWORD *)v205 + 2) = *((_QWORD *)v206 + 2);
        v205[24] = v206[24];
        *((_QWORD *)v205 + 4) = *((_QWORD *)v206 + 4);
        *(_OWORD *)(v205 + 40) = *(_OWORD *)(v206 + 40);
        v205[56] = v206[56];
        v215 = (int *)type metadata accessor for FeedHeadline(0);
        v216 = v215[10];
        v217 = &v205[v216];
        v218 = &v206[v216];
        *v217 = v206[v216];
        v217[1] = v206[v216 + 1];
        v219 = (int *)type metadata accessor for FeedHeadline.State(0);
        v220 = v219[6];
        v221 = &v217[v220];
        v222 = &v218[v220];
        v223 = (int *)type metadata accessor for SharedItem();
        v224 = *((_QWORD *)v223 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v224 + 48))(v222, 1, v223))
        {
          v225 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
        }
        else
        {
          v260 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v260 - 8) + 32))(v221, v222, v260);
          v221[v223[5]] = v222[v223[5]];
          *(_QWORD *)&v221[v223[6]] = *(_QWORD *)&v222[v223[6]];
          v261 = v223[7];
          v326 = &v221[v261];
          v262 = &v222[v261];
          v263 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v263 - 8) + 32))(v326, v262, v263);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v224 + 56))(v221, 0, 1, v223);
        }
        v217[v219[7]] = v218[v219[7]];
        v217[v219[8]] = v218[v219[8]];
        v217[v219[9]] = v218[v219[9]];
        v217[v219[10]] = v218[v219[10]];
        v264 = v215[11];
        v265 = &v205[v264];
        v266 = &v206[v264];
        v267 = sub_1BB871B24();
        v268 = *(_QWORD *)(v267 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v268 + 48))(v266, 1, v267))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v265, v266, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v268 + 32))(v265, v266, v267);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v268 + 56))(v265, 0, 1, v267);
        }
        a1 = v329;
        *(_OWORD *)&v205[v215[12]] = *(_OWORD *)&v206[v215[12]];
        v279 = v215[13];
        v280 = *(_QWORD *)&v206[v279];
        if (v280 == 2)
          v280 = 2;
        *(_QWORD *)&v205[v279] = v280;
        *(_QWORD *)&v205[v215[14]] = *(_QWORD *)&v206[v215[14]];
        goto LABEL_120;
      case 4u:
        v226 = *((_QWORD *)v206 + 1);
        *(_QWORD *)v205 = *(_QWORD *)v206;
        *((_QWORD *)v205 + 1) = v226;
        v205[16] = v206[16];
        *(_OWORD *)(v205 + 24) = *(_OWORD *)(v206 + 24);
        *(_OWORD *)(v205 + 40) = *(_OWORD *)(v206 + 40);
        v227 = (int *)type metadata accessor for FeedWebEmbed();
        v228 = v227[8];
        v229 = &v205[v228];
        v230 = &v206[v228];
        v231 = sub_1BB86C67C();
        v232 = *(_QWORD *)(v231 - 8);
        v233 = *(void (**)(char *, char *, uint64_t))(v232 + 32);
        v233(v229, v230, v231);
        v325 = v227;
        v234 = v227[9];
        v235 = &v205[v234];
        v236 = &v206[v234];
        v330 = a1;
        v320 = v231;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v232 + 48))(&v206[v234], 1, v231))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v235, v236, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
        }
        else
        {
          v233(v235, v236, v231);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v232 + 56))(v235, 0, 1, v231);
        }
        v270 = v227;
        v271 = v233;
        *(_QWORD *)&v205[v227[10]] = *(_QWORD *)&v206[v227[10]];
        *(_QWORD *)&v205[v227[11]] = *(_QWORD *)&v206[v227[11]];
        v272 = v227[12];
        v273 = &v205[v272];
        v274 = &v206[v272];
        v275 = (int *)type metadata accessor for FeedHeadline(0);
        v276 = (unsigned int (**)(_OWORD *, uint64_t, int *))*((_QWORD *)v275 - 1);
        if (((unsigned int (**)(char *, uint64_t, int *))v276)[6](v274, 1, v275))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v277 - 8) + 64));
        }
        else
        {
          __dstb = (void (**)(char *, _QWORD, uint64_t, int *))v276;
          v314 = v271;
          *(_OWORD *)v273 = *(_OWORD *)v274;
          *((_QWORD *)v273 + 2) = *((_QWORD *)v274 + 2);
          v273[24] = v274[24];
          *((_QWORD *)v273 + 4) = *((_QWORD *)v274 + 4);
          *(_OWORD *)(v273 + 40) = *(_OWORD *)(v274 + 40);
          v273[56] = v274[56];
          v281 = v275[10];
          v282 = &v273[v281];
          v283 = &v274[v281];
          *v282 = v274[v281];
          v282[1] = v274[v281 + 1];
          v284 = (int *)type metadata accessor for FeedHeadline.State(0);
          v285 = v284[6];
          v317 = &v282[v285];
          v286 = &v283[v285];
          v287 = (int *)type metadata accessor for SharedItem();
          v308 = *((_QWORD *)v287 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v308 + 48))(v286, 1, v287))
          {
            v288 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v317, v286, *(_QWORD *)(*(_QWORD *)(v288 - 8) + 64));
          }
          else
          {
            v289 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v289 - 8) + 32))(v317, v286, v289);
            v317[v287[5]] = v286[v287[5]];
            *(_QWORD *)&v317[v287[6]] = *(_QWORD *)&v286[v287[6]];
            v314(&v317[v287[7]], &v286[v287[7]], v320);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v308 + 56))(v317, 0, 1, v287);
          }
          v282[v284[7]] = v283[v284[7]];
          v282[v284[8]] = v283[v284[8]];
          v282[v284[9]] = v283[v284[9]];
          v282[v284[10]] = v283[v284[10]];
          v290 = v275[11];
          v291 = &v273[v290];
          v292 = &v274[v290];
          v293 = sub_1BB871B24();
          v294 = *(_QWORD *)(v293 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v294 + 48))(v292, 1, v293))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v291, v292, *(_QWORD *)(*(_QWORD *)(v295 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v294 + 32))(v291, v292, v293);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v294 + 56))(v291, 0, 1, v293);
          }
          v270 = v325;
          v271 = v314;
          *(_OWORD *)&v273[v275[12]] = *(_OWORD *)&v274[v275[12]];
          v296 = v275[13];
          v297 = *(_QWORD *)&v274[v296];
          if (v297 == 2)
            v297 = 2;
          *(_QWORD *)&v273[v296] = v297;
          *(_QWORD *)&v273[v275[14]] = *(_QWORD *)&v274[v275[14]];
          __dstb[7](v273, 0, 1, v275);
        }
        a1 = v330;
        v298 = v270[13];
        v299 = &v205[v298];
        v300 = &v206[v298];
        v301 = type metadata accessor for WebEmbedDataVisualization();
        v302 = *(_QWORD *)(v301 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v302 + 48))(v300, 1, v301))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v299, v300, *(_QWORD *)(*(_QWORD *)(v303 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)v299 = *(_OWORD *)v300;
            v304 = type metadata accessor for GenericDataVisualization();
            v305 = v271;
            v306 = v304;
            v305(&v299[*(int *)(v304 + 20)], &v300[*(int *)(v304 + 20)], v320);
            *(_QWORD *)&v299[*(int *)(v306 + 24)] = *(_QWORD *)&v300[*(int *)(v306 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v299, v300, *(_QWORD *)(v302 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v302 + 56))(v299, 0, 1, v301);
        }
        v205[v270[14]] = v206[v270[14]];
        goto LABEL_120;
      case 8u:
        *(_OWORD *)v205 = *(_OWORD *)v206;
        v238 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v239 = &v205[v238];
        v240 = &v206[v238];
        v241 = *(_OWORD *)&v206[v238 + 16];
        *(_OWORD *)v239 = *(_OWORD *)&v206[v238];
        *((_OWORD *)v239 + 1) = v241;
        v242 = type metadata accessor for FormatCustomItem.Resolved();
        v243 = *(int *)(v242 + 24);
        v244 = &v239[v243];
        v245 = &v240[v243];
        v246 = type metadata accessor for FormatCustomItem.Action();
        v247 = *(_QWORD *)(v246 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v247 + 48))(v245, 1, v246))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v244, v245, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
        }
        else
        {
          v278 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v278 - 8) + 32))(v244, v245, v278);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v244, 0, 1, v246);
        }
        *(_QWORD *)&v239[*(int *)(v242 + 28)] = *(_QWORD *)&v240[*(int *)(v242 + 28)];
        goto LABEL_120;
      case 0xAu:
        *(_OWORD *)v205 = *(_OWORD *)v206;
        v249 = (int *)type metadata accessor for FeedEngagementBanner();
        v250 = v249[5];
        v251 = &v205[v250];
        v252 = &v206[v250];
        v253 = sub_1BB86EDAC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 32))(v251, v252, v253);
        *(_QWORD *)&v205[v249[6]] = *(_QWORD *)&v206[v249[6]];
        v254 = v249[7];
        v255 = &v205[v254];
        v256 = &v206[v254];
        v255[8] = v256[8];
        *(_QWORD *)v255 = *(_QWORD *)v256;
        *(_OWORD *)&v205[v249[8]] = *(_OWORD *)&v206[v249[8]];
        goto LABEL_120;
      case 0xFu:
        v257 = *((_QWORD *)v206 + 1);
        *(_QWORD *)v205 = *(_QWORD *)v206;
        *((_QWORD *)v205 + 1) = v257;
        v205[16] = v206[16];
        *(_OWORD *)(v205 + 24) = *(_OWORD *)(v206 + 24);
        *(_OWORD *)(v205 + 40) = *(_OWORD *)(v206 + 40);
        v258 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&v205[v258] = *(_QWORD *)&v206[v258];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v259 = (char *)&loc_1BB30A648 + 4 * word_1BB908078[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      default:
        memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        goto LABEL_121;
    }
  }
  switch(v6)
  {
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v15 = (int *)type metadata accessor for FeedBannerAd();
      v16 = v15[5];
      v17 = a1 + v16;
      v18 = a2 + v16;
      v19 = sub_1BB8721C0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      *(_QWORD *)(a1 + v15[6]) = *(_QWORD *)(a2 + v15[6]);
      v20 = v15[7];
      v21 = a1 + v20;
      v22 = a2 + v20;
      *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *(_OWORD *)(a1 + v15[8]) = *(_OWORD *)(a2 + v15[8]);
      goto LABEL_120;
    case 1:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v69 = (int *)type metadata accessor for FeedHeadline(0);
      v70 = v69[10];
      v71 = a1;
      v72 = (_BYTE *)(a1 + v70);
      v73 = a2 + v70;
      *v72 = *(_BYTE *)(a2 + v70);
      v72[1] = *(_BYTE *)(a2 + v70 + 1);
      v74 = (int *)type metadata accessor for FeedHeadline.State(0);
      v75 = v74[6];
      v76 = &v72[v75];
      v77 = (char *)(v73 + v75);
      v78 = (int *)type metadata accessor for SharedItem();
      v79 = *((_QWORD *)v78 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v79 + 48))(v77, 1, v78))
      {
        v80 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        v132 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(v76, v77, v132);
        v76[v78[5]] = v77[v78[5]];
        *(_QWORD *)&v76[v78[6]] = *(_QWORD *)&v77[v78[6]];
        v133 = v78[7];
        v323 = &v76[v133];
        v134 = &v77[v133];
        v135 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v323, v134, v135);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v79 + 56))(v76, 0, 1, v78);
      }
      v72[v74[7]] = *(_BYTE *)(v73 + v74[7]);
      v72[v74[8]] = *(_BYTE *)(v73 + v74[8]);
      v72[v74[9]] = *(_BYTE *)(v73 + v74[9]);
      v72[v74[10]] = *(_BYTE *)(v73 + v74[10]);
      v136 = v69[11];
      a1 = v71;
      v137 = (void *)(v71 + v136);
      v138 = (const void *)(a2 + v136);
      v139 = sub_1BB871B24();
      v140 = *(_QWORD *)(v139 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
        memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v140 + 32))(v137, v138, v139);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
      }
      *(_OWORD *)(a1 + v69[12]) = *(_OWORD *)(a2 + v69[12]);
      v160 = v69[13];
      v161 = *(_QWORD *)(a2 + v160);
      if (v161 == 2)
        v161 = 2;
      *(_QWORD *)(a1 + v160) = v161;
      *(_QWORD *)(a1 + v69[14]) = *(_QWORD *)(a2 + v69[14]);
      goto LABEL_120;
    case 2:
      v81 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v81;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v82 = (int *)type metadata accessor for FeedWebEmbed();
      v83 = v82[8];
      v84 = a1 + v83;
      v85 = a2 + v83;
      v86 = sub_1BB86C67C();
      v87 = *(_QWORD *)(v86 - 8);
      v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32);
      v88(v84, v85, v86);
      v89 = v82[9];
      v90 = (void *)(a1 + v89);
      v91 = (const void *)(a2 + v89);
      v319 = (void (*)(char *, char *, uint64_t))v88;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(a2 + v89, 1, v86))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        v88((uint64_t)v90, (uint64_t)v91, v86);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v90, 0, 1, v86);
      }
      *(_QWORD *)(a1 + v82[10]) = *(_QWORD *)(a2 + v82[10]);
      *(_QWORD *)(a1 + v82[11]) = *(_QWORD *)(a2 + v82[11]);
      v142 = v82[12];
      v143 = (_OWORD *)(a1 + v142);
      v144 = (_OWORD *)(a2 + v142);
      v145 = (int *)type metadata accessor for FeedHeadline(0);
      v146 = *((_QWORD *)v145 - 1);
      v324 = v86;
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v146 + 48))(v144, 1, v145))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
      }
      else
      {
        v313 = v146;
        v316 = v82;
        v328 = a1;
        *v143 = *v144;
        *((_QWORD *)v143 + 2) = *((_QWORD *)v144 + 2);
        *((_BYTE *)v143 + 24) = *((_BYTE *)v144 + 24);
        *((_QWORD *)v143 + 4) = *((_QWORD *)v144 + 4);
        *(_OWORD *)((char *)v143 + 40) = *(_OWORD *)((char *)v144 + 40);
        *((_BYTE *)v143 + 56) = *((_BYTE *)v144 + 56);
        v162 = v145[10];
        v163 = (char *)v143 + v162;
        v164 = (char *)v144 + v162;
        *v163 = *((_BYTE *)v144 + v162);
        v163[1] = *((_BYTE *)v144 + v162 + 1);
        v165 = (int *)type metadata accessor for FeedHeadline.State(0);
        v166 = v165[6];
        __dsta = &v163[v166];
        v167 = &v164[v166];
        v168 = (int *)type metadata accessor for SharedItem();
        v169 = *((_QWORD *)v168 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v169 + 48))(v167, 1, v168))
        {
          v170 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dsta, v167, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
        }
        else
        {
          v178 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(__dsta, v167, v178);
          __dsta[v168[5]] = v167[v168[5]];
          *(_QWORD *)&__dsta[v168[6]] = *(_QWORD *)&v167[v168[6]];
          v319(&__dsta[v168[7]], &v167[v168[7]], v324);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v169 + 56))(__dsta, 0, 1, v168);
        }
        v163[v165[7]] = v164[v165[7]];
        v163[v165[8]] = v164[v165[8]];
        v163[v165[9]] = v164[v165[9]];
        v163[v165[10]] = v164[v165[10]];
        v179 = v145[11];
        v180 = (char *)v143 + v179;
        v181 = (char *)v144 + v179;
        v182 = sub_1BB871B24();
        v183 = *(_QWORD *)(v182 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v183 + 48))(v181, 1, v182))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v180, v181, v182);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v183 + 56))(v180, 0, 1, v182);
        }
        a1 = v328;
        v82 = v316;
        *(_OWORD *)((char *)v143 + v145[12]) = *(_OWORD *)((char *)v144 + v145[12]);
        v194 = v145[13];
        v195 = *(_QWORD *)((char *)v144 + v194);
        if (v195 == 2)
          v195 = 2;
        *(_QWORD *)((char *)v143 + v194) = v195;
        *(_QWORD *)((char *)v143 + v145[14]) = *(_QWORD *)((char *)v144 + v145[14]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v313 + 56))(v143, 0, 1, v145);
      }
      v196 = v82[13];
      v197 = (_OWORD *)(a1 + v196);
      v198 = (_OWORD *)(a2 + v196);
      v199 = type metadata accessor for WebEmbedDataVisualization();
      v200 = *(_QWORD *)(v199 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v200 + 48))(v198, 1, v199))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v197, v198, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v197 = *v198;
          v202 = type metadata accessor for GenericDataVisualization();
          v319((char *)v197 + *(int *)(v202 + 20), (char *)v198 + *(int *)(v202 + 20), v324);
          *(_QWORD *)((char *)v197 + *(int *)(v202 + 24)) = *(_QWORD *)((char *)v198 + *(int *)(v202 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v197, v198, *(_QWORD *)(v200 + 64));
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v200 + 56))(v197, 0, 1, v199);
      }
      *(_BYTE *)(a1 + v82[14]) = *(_BYTE *)(a2 + v82[14]);
      goto LABEL_120;
    case 6:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v93 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v94 = (_OWORD *)(a1 + v93);
      v95 = a2 + v93;
      v96 = *(_OWORD *)(a2 + v93 + 16);
      *v94 = *(_OWORD *)(a2 + v93);
      v94[1] = v96;
      v97 = type metadata accessor for FormatCustomItem.Resolved();
      v98 = *(int *)(v97 + 24);
      v99 = (char *)v94 + v98;
      v100 = (const void *)(v95 + v98);
      v101 = type metadata accessor for FormatCustomItem.Action();
      v102 = *(_QWORD *)(v101 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
      }
      else
      {
        v148 = sub_1BB86C67C();
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(v99, v100, v148);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
      }
      *(_QWORD *)((char *)v94 + *(int *)(v97 + 28)) = *(_QWORD *)(v95 + *(int *)(v97 + 28));
      goto LABEL_120;
    case 8:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v104 = (int *)type metadata accessor for FeedEngagementBanner();
      v105 = v104[5];
      v106 = a1 + v105;
      v107 = a2 + v105;
      v108 = sub_1BB86EDAC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
      *(_QWORD *)(a1 + v104[6]) = *(_QWORD *)(a2 + v104[6]);
      v109 = v104[7];
      v110 = a1 + v109;
      v111 = a2 + v109;
      *(_BYTE *)(v110 + 8) = *(_BYTE *)(v111 + 8);
      *(_QWORD *)v110 = *(_QWORD *)v111;
      *(_OWORD *)(a1 + v104[8]) = *(_OWORD *)(a2 + v104[8]);
LABEL_120:
      swift_storeEnumTagMultiPayload();
      break;
    case 13:
      v112 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v112;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v113 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)(a1 + v113) = *(_QWORD *)(a2 + v113);
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      v114 = (char *)&loc_1BB3085C0 + 4 * word_1BB90804C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    default:
      memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      break;
  }
LABEL_121:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for FormatLayoutViewRoute(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  int *v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  void *v88;
  const void *v89;
  uint64_t v90;
  uint64_t v91;
  _OWORD *v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  const void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  const void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _OWORD *v124;
  _OWORD *v125;
  int *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  const void *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int *v140;
  uint64_t v141;
  _OWORD *v142;
  _OWORD *v143;
  int *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _BYTE *v151;
  char *v152;
  int *v153;
  uint64_t v154;
  char *v155;
  int *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _BYTE *v161;
  char *v162;
  int *v163;
  uint64_t v164;
  char *v165;
  int *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _OWORD *v185;
  _OWORD *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  _OWORD *v194;
  _OWORD *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  int *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  char *v214;
  char *v215;
  int *v216;
  uint64_t v217;
  char *v218;
  char *v219;
  int *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  int *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  void (*v230)(char *, char *, uint64_t);
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  __int128 v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  int *v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void (*v267)(char *, char *, uint64_t);
  uint64_t v268;
  char *v269;
  char *v270;
  int *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  char *v281;
  int *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char *v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  void (*v300)(char *, char *, uint64_t);
  uint64_t v301;
  uint64_t result;
  uint64_t v303;
  int *v304;
  void (**__src)(void *, _QWORD, uint64_t, int *);
  void (**__srca)(void *, _QWORD, uint64_t, int *);
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int *v310;
  char *v311;
  int *v312;
  void (*__dst)(char *, char *, void *);
  char *__dsta;
  void (*__dstb)(char *, char *, uint64_t);
  void (*v316)(char *, char *, uint64_t);
  void *v317;
  char *v318;
  char *v319;
  uint64_t v320;
  int *v321;
  char *v322;
  char *v323;
  int *v324;
  uint64_t v325;
  uint64_t v326;

  if (a1 != a2)
  {
    sub_1BB307CA8(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = type metadata accessor for FeedItem(0);
    v6 = swift_getEnumCaseMultiPayload() - 2;
    if (EnumCaseMultiPayload == 1)
    {
      v326 = v5;
      switch(v6)
      {
        case 0:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v7 = (int *)type metadata accessor for FeedBannerAd();
          v8 = v7[5];
          v9 = a1 + v8;
          v10 = a2 + v8;
          v11 = sub_1BB8721C0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
          *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
          v12 = v7[7];
          v13 = a1 + v12;
          v14 = a2 + v12;
          *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
          goto LABEL_81;
        case 1:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
          v23 = (int *)type metadata accessor for FeedHeadline(0);
          v24 = v23[10];
          v25 = (_BYTE *)(a1 + v24);
          v26 = a2 + v24;
          *v25 = *(_BYTE *)(a2 + v24);
          v25[1] = *(_BYTE *)(a2 + v24 + 1);
          v27 = (int *)type metadata accessor for FeedHeadline.State(0);
          v28 = v27[6];
          v29 = &v25[v28];
          v30 = (char *)(v26 + v28);
          v31 = (int *)type metadata accessor for SharedItem();
          v32 = *((_QWORD *)v31 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
          {
            v33 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            v113 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v29, v30, v113);
            v29[v31[5]] = v30[v31[5]];
            *(_QWORD *)&v29[v31[6]] = *(_QWORD *)&v30[v31[6]];
            v114 = v31[7];
            v322 = &v29[v114];
            v115 = &v30[v114];
            v116 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v322, v115, v116);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
          }
          v25[v27[7]] = *(_BYTE *)(v26 + v27[7]);
          v25[v27[8]] = *(_BYTE *)(v26 + v27[8]);
          v25[v27[9]] = *(_BYTE *)(v26 + v27[9]);
          v25[v27[10]] = *(_BYTE *)(v26 + v27[10]);
          v117 = v23[11];
          v118 = (void *)(a1 + v117);
          v119 = (const void *)(a2 + v117);
          v120 = sub_1BB871B24();
          v121 = *(_QWORD *)(v120 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v121 + 32))(v118, v119, v120);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
          }
          v5 = v326;
          *(_OWORD *)(a1 + v23[12]) = *(_OWORD *)(a2 + v23[12]);
          v148 = v23[13];
          v149 = *(_QWORD *)(a2 + v148);
          if (v149 == 2)
            v149 = 2;
          *(_QWORD *)(a1 + v148) = v149;
          *(_QWORD *)(a1 + v23[14]) = *(_QWORD *)(a2 + v23[14]);
          goto LABEL_81;
        case 2:
          v34 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v34;
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          v35 = (int *)type metadata accessor for FeedWebEmbed();
          v36 = v35[8];
          v37 = a1 + v36;
          v38 = a2 + v36;
          v39 = sub_1BB86C67C();
          v40 = *(_QWORD *)(v39 - 8);
          v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32);
          v41(v37, v38, v39);
          v42 = v35[9];
          v43 = (void *)(a1 + v42);
          v44 = (const void *)(a2 + v42);
          v316 = (void (*)(char *, char *, uint64_t))v41;
          v320 = v39;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(a2 + v42, 1, v39))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          }
          else
          {
            v41((uint64_t)v43, (uint64_t)v44, v39);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v43, 0, 1, v39);
          }
          *(_QWORD *)(a1 + v35[10]) = *(_QWORD *)(a2 + v35[10]);
          *(_QWORD *)(a1 + v35[11]) = *(_QWORD *)(a2 + v35[11]);
          v123 = v35[12];
          v124 = (_OWORD *)(a1 + v123);
          v125 = (_OWORD *)(a2 + v123);
          v126 = (int *)type metadata accessor for FeedHeadline(0);
          v127 = *((_QWORD *)v126 - 1);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v127 + 48))(v125, 1, v126))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
          }
          else
          {
            v307 = v127;
            v310 = v35;
            *v124 = *v125;
            *((_QWORD *)v124 + 2) = *((_QWORD *)v125 + 2);
            *((_BYTE *)v124 + 24) = *((_BYTE *)v125 + 24);
            *((_QWORD *)v124 + 4) = *((_QWORD *)v125 + 4);
            *(_OWORD *)((char *)v124 + 40) = *(_OWORD *)((char *)v125 + 40);
            *((_BYTE *)v124 + 56) = *((_BYTE *)v125 + 56);
            v150 = v126[10];
            v151 = (char *)v124 + v150;
            v152 = (char *)v125 + v150;
            *v151 = *((_BYTE *)v125 + v150);
            v151[1] = *((_BYTE *)v125 + v150 + 1);
            v153 = (int *)type metadata accessor for FeedHeadline.State(0);
            v154 = v153[6];
            __dsta = &v151[v154];
            v155 = &v152[v154];
            v156 = (int *)type metadata accessor for SharedItem();
            __src = (void (**)(void *, _QWORD, uint64_t, int *))*((_QWORD *)v156 - 1);
            if (((unsigned int (*)(char *, uint64_t, int *))__src[6])(v155, 1, v156))
            {
              v157 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dsta, v155, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
            }
            else
            {
              v168 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(__dsta, v155, v168);
              __dsta[v156[5]] = v155[v156[5]];
              *(_QWORD *)&__dsta[v156[6]] = *(_QWORD *)&v155[v156[6]];
              v316(&__dsta[v156[7]], &v155[v156[7]], v320);
              __src[7](__dsta, 0, 1, v156);
            }
            v151[v153[7]] = v152[v153[7]];
            v151[v153[8]] = v152[v153[8]];
            v151[v153[9]] = v152[v153[9]];
            v151[v153[10]] = v152[v153[10]];
            v169 = v126[11];
            v170 = (char *)v124 + v169;
            v171 = (char *)v125 + v169;
            v172 = sub_1BB871B24();
            v173 = *(_QWORD *)(v172 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v171, 1, v172))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v173 + 32))(v170, v171, v172);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v170, 0, 1, v172);
            }
            v35 = v310;
            *(_OWORD *)((char *)v124 + v126[12]) = *(_OWORD *)((char *)v125 + v126[12]);
            v182 = v126[13];
            v183 = *(_QWORD *)((char *)v125 + v182);
            if (v183 == 2)
              v183 = 2;
            *(_QWORD *)((char *)v124 + v182) = v183;
            *(_QWORD *)((char *)v124 + v126[14]) = *(_QWORD *)((char *)v125 + v126[14]);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v307 + 56))(v124, 0, 1, v126);
          }
          v5 = v326;
          v184 = v35[13];
          v185 = (_OWORD *)(a1 + v184);
          v186 = (_OWORD *)(a2 + v184);
          v187 = type metadata accessor for WebEmbedDataVisualization();
          v188 = *(_QWORD *)(v187 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v188 + 48))(v186, 1, v187))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *v185 = *v186;
              v190 = type metadata accessor for GenericDataVisualization();
              v316((char *)v185 + *(int *)(v190 + 20), (char *)v186 + *(int *)(v190 + 20), v320);
              *(_QWORD *)((char *)v185 + *(int *)(v190 + 24)) = *(_QWORD *)((char *)v186 + *(int *)(v190 + 24));
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v185, v186, *(_QWORD *)(v188 + 64));
            }
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
          }
          *(_BYTE *)(a1 + v35[14]) = *(_BYTE *)(a2 + v35[14]);
          goto LABEL_81;
        case 6:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v46 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v47 = (_OWORD *)(a1 + v46);
          v48 = a2 + v46;
          v49 = *(_OWORD *)(a2 + v46 + 16);
          *v47 = *(_OWORD *)(a2 + v46);
          v47[1] = v49;
          v50 = type metadata accessor for FormatCustomItem.Resolved();
          v51 = *(int *)(v50 + 24);
          v52 = (char *)v47 + v51;
          v53 = (const void *)(v48 + v51);
          v54 = type metadata accessor for FormatCustomItem.Action();
          v55 = *(_QWORD *)(v54 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            v129 = sub_1BB86C67C();
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v52, v53, v129);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
          }
          v5 = v326;
          *(_QWORD *)((char *)v47 + *(int *)(v50 + 28)) = *(_QWORD *)(v48 + *(int *)(v50 + 28));
          goto LABEL_81;
        case 8:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v57 = (int *)type metadata accessor for FeedEngagementBanner();
          v58 = v57[5];
          v59 = a1 + v58;
          v60 = a2 + v58;
          v61 = sub_1BB86EDAC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
          *(_QWORD *)(a1 + v57[6]) = *(_QWORD *)(a2 + v57[6]);
          v62 = v57[7];
          v63 = a1 + v62;
          v64 = a2 + v62;
          *(_BYTE *)(v63 + 8) = *(_BYTE *)(v64 + 8);
          *(_QWORD *)v63 = *(_QWORD *)v64;
          *(_OWORD *)(a1 + v57[8]) = *(_OWORD *)(a2 + v57[8]);
LABEL_81:
          swift_storeEnumTagMultiPayload();
          break;
        case 13:
          v65 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v65;
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          v66 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)(a1 + v66) = *(_QWORD *)(a2 + v66);
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          v67 = (char *)&loc_1BB30BB28 + 4 * word_1BB9080B2[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        default:
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
          break;
      }
      sub_1BAB4832C();
      v202 = *(int *)(v201 + 48);
      v203 = (char *)(a1 + v202);
      v204 = (char *)(a2 + v202);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          *(_OWORD *)v203 = *(_OWORD *)v204;
          v205 = (int *)type metadata accessor for FeedBannerAd();
          v206 = v205[5];
          v207 = &v203[v206];
          v208 = &v204[v206];
          v209 = sub_1BB8721C0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(v207, v208, v209);
          *(_QWORD *)&v203[v205[6]] = *(_QWORD *)&v204[v205[6]];
          v210 = v205[7];
          v211 = &v203[v210];
          v212 = &v204[v210];
          v211[8] = v212[8];
          *(_QWORD *)v211 = *(_QWORD *)v212;
          *(_OWORD *)&v203[v205[8]] = *(_OWORD *)&v204[v205[8]];
          goto LABEL_121;
        case 3u:
          *(_OWORD *)v203 = *(_OWORD *)v204;
          *((_QWORD *)v203 + 2) = *((_QWORD *)v204 + 2);
          v203[24] = v204[24];
          *((_QWORD *)v203 + 4) = *((_QWORD *)v204 + 4);
          *(_OWORD *)(v203 + 40) = *(_OWORD *)(v204 + 40);
          v203[56] = v204[56];
          v324 = (int *)type metadata accessor for FeedHeadline(0);
          v213 = v324[10];
          v214 = &v203[v213];
          v215 = &v204[v213];
          *v214 = v204[v213];
          v214[1] = v204[v213 + 1];
          v216 = (int *)type metadata accessor for FeedHeadline.State(0);
          v217 = v216[6];
          v218 = &v214[v217];
          v219 = &v215[v217];
          v220 = (int *)type metadata accessor for SharedItem();
          v221 = *((_QWORD *)v220 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v221 + 48))(v219, 1, v220))
          {
            v222 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
          }
          else
          {
            v257 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 32))(v218, v219, v257);
            v218[v220[5]] = v219[v220[5]];
            *(_QWORD *)&v218[v220[6]] = *(_QWORD *)&v219[v220[6]];
            v258 = v220[7];
            v318 = &v218[v258];
            v259 = &v219[v258];
            v260 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v260 - 8) + 32))(v318, v259, v260);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v221 + 56))(v218, 0, 1, v220);
          }
          v214[v216[7]] = v215[v216[7]];
          v214[v216[8]] = v215[v216[8]];
          v214[v216[9]] = v215[v216[9]];
          v214[v216[10]] = v215[v216[10]];
          v261 = v324[11];
          v262 = &v203[v261];
          v263 = &v204[v261];
          v264 = sub_1BB871B24();
          v265 = *(_QWORD *)(v264 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v265 + 48))(v263, 1, v264))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v262, v263, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v265 + 32))(v262, v263, v264);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v265 + 56))(v262, 0, 1, v264);
          }
          *(_OWORD *)&v203[v324[12]] = *(_OWORD *)&v204[v324[12]];
          v275 = v324[13];
          v276 = *(_QWORD *)&v204[v275];
          if (v276 == 2)
            v276 = 2;
          *(_QWORD *)&v203[v275] = v276;
          *(_QWORD *)&v203[v324[14]] = *(_QWORD *)&v204[v324[14]];
          goto LABEL_121;
        case 4u:
          v223 = *((_QWORD *)v204 + 1);
          *(_QWORD *)v203 = *(_QWORD *)v204;
          *((_QWORD *)v203 + 1) = v223;
          v203[16] = v204[16];
          *(_OWORD *)(v203 + 24) = *(_OWORD *)(v204 + 24);
          *(_OWORD *)(v203 + 40) = *(_OWORD *)(v204 + 40);
          v224 = (int *)type metadata accessor for FeedWebEmbed();
          v225 = v224[8];
          v226 = &v203[v225];
          v227 = &v204[v225];
          v228 = sub_1BB86C67C();
          v229 = *(_QWORD *)(v228 - 8);
          v230 = *(void (**)(char *, char *, uint64_t))(v229 + 32);
          v230(v226, v227, v228);
          v231 = v224[9];
          v232 = &v203[v231];
          v233 = &v204[v231];
          v325 = v228;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v229 + 48))(&v204[v231], 1, v228))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v232, v233, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
          }
          else
          {
            v230(v232, v233, v228);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v229 + 56))(v232, 0, 1, v228);
          }
          v267 = v230;
          *(_QWORD *)&v203[v224[10]] = *(_QWORD *)&v204[v224[10]];
          *(_QWORD *)&v203[v224[11]] = *(_QWORD *)&v204[v224[11]];
          v268 = v224[12];
          v269 = &v203[v268];
          v270 = &v204[v268];
          v271 = (int *)type metadata accessor for FeedHeadline(0);
          v272 = *((_QWORD *)v271 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v272 + 48))(v270, 1, v271))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v273 - 8) + 64));
          }
          else
          {
            v309 = v272;
            v312 = v224;
            __dstb = v267;
            *(_OWORD *)v269 = *(_OWORD *)v270;
            *((_QWORD *)v269 + 2) = *((_QWORD *)v270 + 2);
            v269[24] = v270[24];
            *((_QWORD *)v269 + 4) = *((_QWORD *)v270 + 4);
            *(_OWORD *)(v269 + 40) = *(_OWORD *)(v270 + 40);
            v269[56] = v270[56];
            v277 = v271[10];
            v278 = &v269[v277];
            v279 = &v270[v277];
            *v278 = v270[v277];
            v278[1] = v270[v277 + 1];
            v304 = (int *)type metadata accessor for FeedHeadline.State(0);
            v280 = v304[6];
            v319 = &v278[v280];
            v281 = &v279[v280];
            v282 = (int *)type metadata accessor for SharedItem();
            v303 = *((_QWORD *)v282 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v303 + 48))(v281, 1, v282))
            {
              v283 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v319, v281, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
            }
            else
            {
              v284 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v284 - 8) + 32))(v319, v281, v284);
              v319[v282[5]] = v281[v282[5]];
              *(_QWORD *)&v319[v282[6]] = *(_QWORD *)&v281[v282[6]];
              __dstb(&v319[v282[7]], &v281[v282[7]], v325);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v303 + 56))(v319, 0, 1, v282);
            }
            v278[v304[7]] = v279[v304[7]];
            v278[v304[8]] = v279[v304[8]];
            v278[v304[9]] = v279[v304[9]];
            v278[v304[10]] = v279[v304[10]];
            v285 = v271[11];
            v286 = &v269[v285];
            v287 = &v270[v285];
            v288 = sub_1BB871B24();
            v289 = *(_QWORD *)(v288 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v289 + 48))(v287, 1, v288))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v286, v287, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v289 + 32))(v286, v287, v288);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v289 + 56))(v286, 0, 1, v288);
            }
            v224 = v312;
            v267 = __dstb;
            *(_OWORD *)&v269[v271[12]] = *(_OWORD *)&v270[v271[12]];
            v291 = v271[13];
            v292 = *(_QWORD *)&v270[v291];
            if (v292 == 2)
              v292 = 2;
            *(_QWORD *)&v269[v291] = v292;
            *(_QWORD *)&v269[v271[14]] = *(_QWORD *)&v270[v271[14]];
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v309 + 56))(v269, 0, 1, v271);
          }
          v293 = v224[13];
          v294 = &v203[v293];
          v295 = &v204[v293];
          v296 = type metadata accessor for WebEmbedDataVisualization();
          v297 = *(_QWORD *)(v296 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v297 + 48))(v295, 1, v296))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v294, v295, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *(_OWORD *)v294 = *(_OWORD *)v295;
              v299 = type metadata accessor for GenericDataVisualization();
              v300 = v267;
              v301 = v299;
              v300(&v294[*(int *)(v299 + 20)], &v295[*(int *)(v299 + 20)], v325);
              *(_QWORD *)&v294[*(int *)(v301 + 24)] = *(_QWORD *)&v295[*(int *)(v301 + 24)];
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v294, v295, *(_QWORD *)(v297 + 64));
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v297 + 56))(v294, 0, 1, v296);
          }
          v203[v224[14]] = v204[v224[14]];
          goto LABEL_121;
        case 8u:
          *(_OWORD *)v203 = *(_OWORD *)v204;
          v235 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v236 = &v203[v235];
          v237 = &v204[v235];
          v238 = *(_OWORD *)&v204[v235 + 16];
          *(_OWORD *)v236 = *(_OWORD *)&v204[v235];
          *((_OWORD *)v236 + 1) = v238;
          v239 = type metadata accessor for FormatCustomItem.Resolved();
          v240 = *(int *)(v239 + 24);
          v241 = &v236[v240];
          v242 = &v237[v240];
          v243 = type metadata accessor for FormatCustomItem.Action();
          v244 = *(_QWORD *)(v243 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v244 + 48))(v242, 1, v243))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v241, v242, *(_QWORD *)(*(_QWORD *)(v245 - 8) + 64));
          }
          else
          {
            v274 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v274 - 8) + 32))(v241, v242, v274);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v244 + 56))(v241, 0, 1, v243);
          }
          *(_QWORD *)&v236[*(int *)(v239 + 28)] = *(_QWORD *)&v237[*(int *)(v239 + 28)];
          goto LABEL_121;
        case 0xAu:
          *(_OWORD *)v203 = *(_OWORD *)v204;
          v246 = (int *)type metadata accessor for FeedEngagementBanner();
          v247 = v246[5];
          v248 = &v203[v247];
          v249 = &v204[v247];
          v250 = sub_1BB86EDAC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v250 - 8) + 32))(v248, v249, v250);
          *(_QWORD *)&v203[v246[6]] = *(_QWORD *)&v204[v246[6]];
          v251 = v246[7];
          v252 = &v203[v251];
          v253 = &v204[v251];
          v252[8] = v253[8];
          *(_QWORD *)v252 = *(_QWORD *)v253;
          *(_OWORD *)&v203[v246[8]] = *(_OWORD *)&v204[v246[8]];
          goto LABEL_121;
        case 0xFu:
          v254 = *((_QWORD *)v204 + 1);
          *(_QWORD *)v203 = *(_QWORD *)v204;
          *((_QWORD *)v203 + 1) = v254;
          v203[16] = v204[16];
          *(_OWORD *)(v203 + 24) = *(_OWORD *)(v204 + 24);
          *(_OWORD *)(v203 + 40) = *(_OWORD *)(v204 + 40);
          v255 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)&v203[v255] = *(_QWORD *)&v204[v255];
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          v256 = (char *)&loc_1BB30DF00 + 4 * word_1BB9080C8[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        default:
          memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
          goto LABEL_122;
      }
    }
    switch(v6)
    {
      case 0:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v15 = (int *)type metadata accessor for FeedBannerAd();
        v16 = v15[5];
        v17 = a1 + v16;
        v18 = a2 + v16;
        v19 = sub_1BB8721C0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        *(_QWORD *)(a1 + v15[6]) = *(_QWORD *)(a2 + v15[6]);
        v20 = v15[7];
        v21 = a1 + v20;
        v22 = a2 + v20;
        *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
        *(_QWORD *)v21 = *(_QWORD *)v22;
        *(_OWORD *)(a1 + v15[8]) = *(_OWORD *)(a2 + v15[8]);
        goto LABEL_121;
      case 1:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        v68 = (int *)type metadata accessor for FeedHeadline(0);
        v69 = v68[10];
        v70 = (_BYTE *)(a1 + v69);
        v71 = a2 + v69;
        *v70 = *(_BYTE *)(a2 + v69);
        v70[1] = *(_BYTE *)(a2 + v69 + 1);
        v72 = (int *)type metadata accessor for FeedHeadline.State(0);
        v73 = v72[6];
        v74 = &v70[v73];
        v75 = (char *)(v71 + v73);
        v76 = (int *)type metadata accessor for SharedItem();
        v77 = *((_QWORD *)v76 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v77 + 48))(v75, 1, v76))
        {
          v78 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          v130 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 32))(v74, v75, v130);
          v74[v76[5]] = v75[v76[5]];
          *(_QWORD *)&v74[v76[6]] = *(_QWORD *)&v75[v76[6]];
          v131 = v76[7];
          v323 = &v74[v131];
          v132 = &v75[v131];
          v133 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v323, v132, v133);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v77 + 56))(v74, 0, 1, v76);
        }
        v70[v72[7]] = *(_BYTE *)(v71 + v72[7]);
        v70[v72[8]] = *(_BYTE *)(v71 + v72[8]);
        v70[v72[9]] = *(_BYTE *)(v71 + v72[9]);
        v70[v72[10]] = *(_BYTE *)(v71 + v72[10]);
        v134 = v68[11];
        v135 = (void *)(a1 + v134);
        v136 = (const void *)(a2 + v134);
        v137 = sub_1BB871B24();
        v138 = *(_QWORD *)(v137 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v138 + 48))(v136, 1, v137))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v138 + 32))(v135, v136, v137);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v135, 0, 1, v137);
        }
        *(_OWORD *)(a1 + v68[12]) = *(_OWORD *)(a2 + v68[12]);
        v158 = v68[13];
        v159 = *(_QWORD *)(a2 + v158);
        if (v159 == 2)
          v159 = 2;
        *(_QWORD *)(a1 + v158) = v159;
        *(_QWORD *)(a1 + v68[14]) = *(_QWORD *)(a2 + v68[14]);
        goto LABEL_121;
      case 2:
        v79 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v79;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v80 = (int *)type metadata accessor for FeedWebEmbed();
        v81 = v80[8];
        v82 = a1 + v81;
        v83 = a2 + v81;
        v84 = sub_1BB86C67C();
        v85 = *(_QWORD *)(v84 - 8);
        v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 32);
        v86(v82, v83, v84);
        v321 = v80;
        v87 = v80[9];
        v88 = (void *)(a1 + v87);
        v89 = (const void *)(a2 + v87);
        __dst = (void (*)(char *, char *, void *))v86;
        v317 = (void *)v84;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(a2 + v87, 1, v84))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        }
        else
        {
          v86((uint64_t)v88, (uint64_t)v89, v84);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v88, 0, 1, v84);
        }
        v140 = v80;
        *(_QWORD *)(a1 + v80[10]) = *(_QWORD *)(a2 + v80[10]);
        *(_QWORD *)(a1 + v80[11]) = *(_QWORD *)(a2 + v80[11]);
        v141 = v80[12];
        v142 = (_OWORD *)(a1 + v141);
        v143 = (_OWORD *)(a2 + v141);
        v144 = (int *)type metadata accessor for FeedHeadline(0);
        v145 = *((_QWORD *)v144 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v145 + 48))(v143, 1, v144))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          v308 = v145;
          *v142 = *v143;
          *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
          *((_BYTE *)v142 + 24) = *((_BYTE *)v143 + 24);
          *((_QWORD *)v142 + 4) = *((_QWORD *)v143 + 4);
          *(_OWORD *)((char *)v142 + 40) = *(_OWORD *)((char *)v143 + 40);
          *((_BYTE *)v142 + 56) = *((_BYTE *)v143 + 56);
          v160 = v144[10];
          v161 = (char *)v142 + v160;
          v162 = (char *)v143 + v160;
          *v161 = *((_BYTE *)v143 + v160);
          v161[1] = *((_BYTE *)v143 + v160 + 1);
          v163 = (int *)type metadata accessor for FeedHeadline.State(0);
          v164 = v163[6];
          v311 = &v161[v164];
          v165 = &v162[v164];
          v166 = (int *)type metadata accessor for SharedItem();
          __srca = (void (**)(void *, _QWORD, uint64_t, int *))*((_QWORD *)v166 - 1);
          if (((unsigned int (*)(char *, uint64_t, int *))__srca[6])(v165, 1, v166))
          {
            v167 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v311, v165, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
          }
          else
          {
            v175 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 32))(v311, v165, v175);
            v311[v166[5]] = v165[v166[5]];
            *(_QWORD *)&v311[v166[6]] = *(_QWORD *)&v165[v166[6]];
            __dst(&v311[v166[7]], &v165[v166[7]], v317);
            __srca[7](v311, 0, 1, v166);
          }
          v161[v163[7]] = v162[v163[7]];
          v161[v163[8]] = v162[v163[8]];
          v161[v163[9]] = v162[v163[9]];
          v161[v163[10]] = v162[v163[10]];
          v176 = v144[11];
          v177 = (char *)v142 + v176;
          v178 = (char *)v143 + v176;
          v179 = sub_1BB871B24();
          v180 = *(_QWORD *)(v179 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v180 + 48))(v178, 1, v179))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v180 + 32))(v177, v178, v179);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v180 + 56))(v177, 0, 1, v179);
          }
          v140 = v321;
          *(_OWORD *)((char *)v142 + v144[12]) = *(_OWORD *)((char *)v143 + v144[12]);
          v191 = v144[13];
          v192 = *(_QWORD *)((char *)v143 + v191);
          if (v192 == 2)
            v192 = 2;
          *(_QWORD *)((char *)v142 + v191) = v192;
          *(_QWORD *)((char *)v142 + v144[14]) = *(_QWORD *)((char *)v143 + v144[14]);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v308 + 56))(v142, 0, 1, v144);
        }
        v193 = v140[13];
        v194 = (_OWORD *)(a1 + v193);
        v195 = (_OWORD *)(a2 + v193);
        v196 = type metadata accessor for WebEmbedDataVisualization();
        v197 = *(_QWORD *)(v196 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *v194 = *v195;
            v199 = type metadata accessor for GenericDataVisualization();
            __dst((char *)v194 + *(int *)(v199 + 20), (char *)v195 + *(int *)(v199 + 20), v317);
            v200 = *(int *)(v199 + 24);
            v140 = v321;
            *(_QWORD *)((char *)v194 + v200) = *(_QWORD *)((char *)v195 + v200);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v194, v195, *(_QWORD *)(v197 + 64));
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
        }
        *(_BYTE *)(a1 + v140[14]) = *(_BYTE *)(a2 + v140[14]);
        goto LABEL_121;
      case 6:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v91 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v92 = (_OWORD *)(a1 + v91);
        v93 = a2 + v91;
        v94 = *(_OWORD *)(a2 + v91 + 16);
        *v92 = *(_OWORD *)(a2 + v91);
        v92[1] = v94;
        v95 = type metadata accessor for FormatCustomItem.Resolved();
        v96 = *(int *)(v95 + 24);
        v97 = (char *)v92 + v96;
        v98 = (const void *)(v93 + v96);
        v99 = type metadata accessor for FormatCustomItem.Action();
        v100 = *(_QWORD *)(v99 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        }
        else
        {
          v147 = sub_1BB86C67C();
          (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(v97, v98, v147);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
        }
        *(_QWORD *)((char *)v92 + *(int *)(v95 + 28)) = *(_QWORD *)(v93 + *(int *)(v95 + 28));
        goto LABEL_121;
      case 8:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v102 = (int *)type metadata accessor for FeedEngagementBanner();
        v103 = v102[5];
        v104 = a1 + v103;
        v105 = a2 + v103;
        v106 = sub_1BB86EDAC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
        *(_QWORD *)(a1 + v102[6]) = *(_QWORD *)(a2 + v102[6]);
        v107 = v102[7];
        v108 = a1 + v107;
        v109 = a2 + v107;
        *(_BYTE *)(v108 + 8) = *(_BYTE *)(v109 + 8);
        *(_QWORD *)v108 = *(_QWORD *)v109;
        *(_OWORD *)(a1 + v102[8]) = *(_OWORD *)(a2 + v102[8]);
LABEL_121:
        swift_storeEnumTagMultiPayload();
        break;
      case 13:
        v110 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v110;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v111 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)(a1 + v111) = *(_QWORD *)(a2 + v111);
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v112 = (char *)&loc_1BB30BEE0 + 4 * word_1BB90809C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        break;
    }
LABEL_122:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB30EEC0()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = type metadata accessor for FeedItem(319);
  if (v1 <= 0x3F)
  {
    v2[4] = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_1BB30EF38()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v6;

  v6 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EE8, v0, &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EF0, v3, (unint64_t *)&qword_1ED3C44F0, (uint64_t)&protocol conformance descriptor for Date);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1BB30F0A0()
{
  uint64_t v0;
  uint64_t v1;

  **(_QWORD **)(v1 - 184) = v0;
  return swift_retain();
}

void sub_1BB30F3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);

  *(_QWORD *)(v5 - 232) = v0;
  v6 = swift_projectBox();
  sub_1BA7A64B4(v6, v1, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  sub_1BA9A1CA4(v3);
  v7 = swift_allocObject();
  v8 = swift_allocBox();
  v10 = v9;
  v11 = *(_QWORD *)(v5 - 224);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v9, v3, v11);
  *(_QWORD *)(v10 + *(int *)(v4 + 36)) = MEMORY[0x1E0DEE9D8];
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  swift_retain();
  v12(v3, v11);
  sub_1BA7A6424(v1, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 - 232);
  *(_QWORD *)(v7 + 24) = v8 | 0x6000000000000000;
  JUMPOUT(0x1BB30F4E4);
}

void sub_1BB30F4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_allocObject();
  v4 = *(_QWORD *)(v1 - 176);
  sub_1BA9A8F04(*(_QWORD *)(v1 - 208), v2);
  if (v4)
    swift_deallocUninitializedObject();
  else
    **(_QWORD **)(v1 - 184) = v3 | 0x7000000000000000;
  JUMPOUT(0x1BB30F3D4);
}

void sub_1BB30F658(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  v8 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v8);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EE8, v3, &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v5);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EF0, v6, (unint64_t *)&qword_1ED3C44F0, (uint64_t)&protocol conformance descriptor for Date);
  MEMORY[0x1E0C80A78](v7);
  __asm { BR              X10 }
}

uint64_t sub_1BB30F7E4()
{
  uint64_t v0;
  uint64_t v1;

  **(_QWORD **)(v1 - 296) = v0;
  return swift_retain();
}

void sub_1BB311078()
{
  __asm { BR              X10 }
}

void sub_1BB3110C4()
{
  sub_1BAC3EA04();
}

uint64_t sub_1BB311208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t result;
  __int128 v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  _BYTE v12[40];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = swift_bridgeObjectRetain() + 40 * v2 - 8;
    while (1)
    {
      sub_1BA4C010C(v4, (uint64_t)v12);
      sub_1BA7C2A4C();
      if (swift_dynamicCast())
        break;
      v4 -= 40;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    result = swift_bridgeObjectRelease();
    *(_OWORD *)a2 = v7;
    *(_BYTE *)(a2 + 16) = v8 & 1;
    *(_OWORD *)(a2 + 24) = v9;
    *(_QWORD *)(a2 + 40) = v10;
    *(_OWORD *)(a2 + 48) = v11;
  }
  else
  {
LABEL_6:
    sub_1BA758A4C();
    swift_allocError();
    strcpy(v5, "FeedPuzzleType");
    v5[15] = -18;
    v5[56] = 6;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BB311338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  _BYTE v21[40];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = swift_bridgeObjectRetain() + 40 * v2 - 8;
    while (1)
    {
      sub_1BA4C010C(v4, (uint64_t)v21);
      sub_1BA7C2A4C();
      if (swift_dynamicCast())
        break;
      --v2;
      v20 = 0;
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v14 = 0u;
      v15 = 0u;
      v12 = 0u;
      v13 = 0u;
      v11 = 0u;
      sub_1BA6AA068((uint64_t)&v11, (uint64_t)&unk_1ED3C1098, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD))sub_1BA4CF8F4);
      v4 -= 40;
      if (!v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    result = swift_bridgeObjectRelease();
    v7 = v18;
    *(_OWORD *)(a2 + 96) = v17;
    *(_OWORD *)(a2 + 112) = v7;
    *(_OWORD *)(a2 + 128) = v19;
    *(_BYTE *)(a2 + 144) = v20;
    v8 = v14;
    *(_OWORD *)(a2 + 32) = v13;
    *(_OWORD *)(a2 + 48) = v8;
    v9 = v16;
    *(_OWORD *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 80) = v9;
    v10 = v12;
    *(_OWORD *)a2 = v11;
    *(_OWORD *)(a2 + 16) = v10;
  }
  else
  {
LABEL_6:
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v5 = 0x67615464656546;
    *(_QWORD *)(v5 + 8) = 0xE700000000000000;
    *(_BYTE *)(v5 + 56) = 6;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BB3114B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  _BYTE v11[40];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = swift_bridgeObjectRetain() + 40 * v2 - 8;
    while (1)
    {
      sub_1BA4C010C(v4, (uint64_t)v11);
      sub_1BA7C2A4C();
      if (swift_dynamicCast())
        break;
      v4 -= 40;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v7;
    *(_OWORD *)(a2 + 8) = v8;
    *(_QWORD *)(a2 + 24) = v9;
    *(_BYTE *)(a2 + 32) = v10 & 1;
  }
  else
  {
LABEL_6:
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v5 = 0x726F705364656546;
    *(_QWORD *)(v5 + 8) = 0xEF746E6576457374;
    *(_BYTE *)(v5 + 56) = 6;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BB3115D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _BYTE v23[40];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = swift_bridgeObjectRetain() + 40 * v2 - 8;
    while (1)
    {
      sub_1BA4C010C(v4, (uint64_t)v23);
      sub_1BA7C2A4C();
      if (swift_dynamicCast())
        break;
      --v2;
      v22 = 0;
      v20 = 0u;
      v21 = 0u;
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v14 = 0u;
      v15 = 0u;
      v12 = 0u;
      v13 = 0u;
      sub_1BA6AA068((uint64_t)&v12, (uint64_t)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BA4CF8F4);
      v4 -= 40;
      if (!v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    result = swift_bridgeObjectRelease();
    v7 = v21;
    *(_OWORD *)(a2 + 128) = v20;
    *(_OWORD *)(a2 + 144) = v7;
    *(_QWORD *)(a2 + 160) = v22;
    v8 = v17;
    *(_OWORD *)(a2 + 64) = v16;
    *(_OWORD *)(a2 + 80) = v8;
    v9 = v19;
    *(_OWORD *)(a2 + 96) = v18;
    *(_OWORD *)(a2 + 112) = v9;
    v10 = v13;
    *(_OWORD *)a2 = v12;
    *(_OWORD *)(a2 + 16) = v10;
    v11 = v15;
    *(_OWORD *)(a2 + 32) = v14;
    *(_OWORD *)(a2 + 48) = v11;
  }
  else
  {
LABEL_6:
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v5 = 0x7A7A755064656546;
    *(_QWORD *)(v5 + 8) = 0xEA0000000000656CLL;
    *(_BYTE *)(v5 + 56) = 6;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BB311754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[248];
  _BYTE v8[248];
  _BYTE v9[40];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = swift_bridgeObjectRetain() + 40 * v2 - 8;
    while (1)
    {
      sub_1BA4C010C(v4, (uint64_t)v9);
      sub_1BA7C2A4C();
      if (swift_dynamicCast())
        break;
      v4 -= 40;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    nullsub_1(v8);
    swift_bridgeObjectRelease();
    sub_1BA744E38((uint64_t)v8, (uint64_t)v7, &qword_1ED3C4130);
    return sub_1BA744E38((uint64_t)v7, a2, &qword_1ED3C4130);
  }
  else
  {
LABEL_6:
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v5 = 0x7779615064656546;
    *(_QWORD *)(v5 + 8) = 0xEB000000006C6C61;
    *(_BYTE *)(v5 + 56) = 6;
    return swift_willThrow();
  }
}

uint64_t sub_1BB31189C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB31191C(a1, qword_1ED3C2288, (void (*)(uint64_t))type metadata accessor for FeedCustomItem, 0x7473754364656546, 0xEE006D6574496D6FLL, a2);
}

uint64_t sub_1BB3118E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB31191C(a1, (unint64_t *)&unk_1ED3D24D0, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, 0xD000000000000013, 0x80000001BB970C20, a2);
}

uint64_t sub_1BB31191C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X2>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[40];

  v23 = a6;
  sub_1BA4A3FB4(0, a2, a3);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v21 = a4;
    v22 = a5;
    swift_bridgeObjectRetain();
    v15 = a1 + 40 * v14 - 8;
    while (1)
    {
      sub_1BA4C010C(v15, (uint64_t)v24);
      sub_1BA7C2A4C();
      v16 = ((uint64_t (*)(_QWORD))a3)(0);
      v17 = swift_dynamicCast();
      v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
      if (v17)
        break;
      --v14;
      v18(v13, 1, 1, v16);
      sub_1BA6AA068((uint64_t)v13, (uint64_t)a2, (uint64_t)a3, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      v15 -= 40;
      if (!v14)
      {
        swift_bridgeObjectRelease();
        a4 = v21;
        a5 = v22;
        goto LABEL_6;
      }
    }
    v18(v13, 0, 1, v16);
    swift_bridgeObjectRelease();
    return sub_1BA5193C4((uint64_t)v13, v23, (uint64_t (*)(_QWORD))a3);
  }
  else
  {
LABEL_6:
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v19 = a4;
    *(_QWORD *)(v19 + 8) = a5;
    *(_BYTE *)(v19 + 56) = 6;
    return swift_willThrow();
  }
}

void sub_1BB311AD4()
{
  sub_1BB311078();
}

void sub_1BB311AE8(uint64_t a1, uint64_t a2)
{
  FormatImageNodeBinding.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BB311AFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  unint64_t v52;
  size_t v53;
  uint64_t isStackAllocationSafe;
  uint64_t v55;
  void *v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD v63[2];
  uint64_t *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[2];
  uint64_t v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;

  v80 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(v1 + 32);
  v77 = v3;
  v69 = *(_QWORD *)(v3 + 16);
  if (!v69)
  {
    v8 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v1;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v1 + 32);
    return sub_1BA7133FC(v1);
  }
  sub_1BB86DD80();
  v4 = *(_QWORD *)(*(_QWORD *)(v79 + 40) + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 16);
  v65 = (_QWORD *)a1;
  if (v5)
  {
    v78[0] = *(_QWORD *)(v79 + 56);
    v6 = swift_bridgeObjectRetain();
    v7 = sub_1BA6E42A0(v6);
    sub_1BA6E3FB8(v7);
    swift_release();
    v75 = v78[0];
  }
  else
  {
    v75 = sub_1BA6E3F38();
    swift_release();
  }
  v68 = v3 + 32;
  v64 = (uint64_t *)v1;
  v10 = *(_QWORD *)(v1 + 24);
  v66 = *(_QWORD *)(v1 + 16);
  sub_1BA781758((uint64_t)&v77);
  swift_bridgeObjectRetain_n();
  sub_1BA781758((uint64_t)&v77);
  v11 = 0;
  v63[1] = v10;
  v67 = v10;
LABEL_9:
  v74 = v11;
  v13 = (uint64_t *)(v68 + 32 * v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v13[3];
  v70 = v13[2];
  v17 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  v73 = v16;
  swift_bridgeObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = qword_1ED4768D0;
  v19 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v20 = (uint64_t *)(v18 + 16);
  swift_beginAccess();
  v21 = *(_QWORD *)(v18 + 16);
  if (*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    v22 = sub_1BA6E35A8(v15, v14);
    if ((v23 & 1) != 0)
    {
      v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 24 * v22 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v46 = *(_QWORD *)(v24 + 16);
      if (!v46)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = v74;
        goto LABEL_8;
      }
      v71 = v24;
      v72 = v14;
      v47 = (uint64_t *)(v24 + 64);
      while (1)
      {
        v48 = *(v47 - 1);
        v49 = *v47;
        v50 = *(_BYTE *)(v48 + 32);
        v51 = v50 & 0x3F;
        v52 = (unint64_t)((1 << v50) + 63) >> 6;
        v53 = 8 * v52;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v51 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v53);
          v55 = sub_1BA6EB5B4((uint64_t)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v52, v48, v75);
          swift_bridgeObjectRelease();
        }
        else
        {
          v56 = (void *)swift_slowAlloc();
          bzero(v56, v53);
          v55 = sub_1BA6EB5B4((uint64_t)v56, v52, v48, v75);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v56, -1, -1);
        }
        v57 = sub_1BA6EB330(v55, v48);
        swift_release();
        if ((v57 & 1) != 0)
        {
          v58 = sub_1BA6EBD20(v75, v49);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v58 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v12 = v74;
            v66 = v70;
            v67 = v73;
LABEL_8:
            swift_bridgeObjectRelease();
            v11 = v12 + 1;
            if (v11 == v69)
            {
              sub_1BA4F6CCC((uint64_t)&v77);
              swift_bridgeObjectRelease();
              sub_1BA4F6CCC((uint64_t)&v77);
              v60 = *v64;
              v59 = v64[1];
              swift_bridgeObjectRetain();
              result = swift_bridgeObjectRelease();
              v61 = v65;
              *v65 = v60;
              v61[1] = v59;
              v62 = v67;
              v61[2] = v66;
              v61[3] = v62;
              v61[4] = MEMORY[0x1E0DEE9D8];
              return result;
            }
            goto LABEL_9;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v47 += 5;
        if (!--v46)
          goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
  }
  v71 = v19;
  swift_endAccess();
  v76[0] = v15;
  v76[1] = v14;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v76, v78);
  v25 = v78[1];
  v72 = v78[0];
  v26 = v78[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = v26;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v76[0] = *v20;
  v29 = v76[0];
  *v20 = 0x8000000000000000;
  v30 = v15;
  v32 = sub_1BA6E35A8(v15, v14);
  v33 = *(_QWORD *)(v29 + 16);
  v34 = (v31 & 1) == 0;
  v35 = v33 + v34;
  if (__OFADD__(v33, v34))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  v36 = v31;
  if (*(_QWORD *)(v29 + 24) >= v35)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v39 = (_QWORD *)v76[0];
      if ((v31 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v39 = (_QWORD *)v76[0];
      if ((v36 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v39[(v32 >> 6) + 8] |= 1 << v32;
    v41 = (uint64_t *)(v39[6] + 16 * v32);
    *v41 = v30;
    v41[1] = v14;
    v42 = (uint64_t *)(v39[7] + 24 * v32);
    *v42 = v72;
    v42[1] = v25;
    v42[2] = v27;
    v43 = v39[2];
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
      goto LABEL_41;
    v24 = v27;
    v39[2] = v45;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  sub_1BA7AAAE4(v35, isUniquelyReferenced_nonNull_native);
  v37 = sub_1BA6E35A8(v30, v14);
  if ((v36 & 1) == (v38 & 1))
  {
    v32 = v37;
    v39 = (_QWORD *)v76[0];
    if ((v36 & 1) == 0)
      goto LABEL_24;
LABEL_22:
    v40 = (uint64_t *)(v39[7] + 24 * v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v40 = v72;
    v40[1] = v25;
    v40[2] = v27;
    v24 = v27;
LABEL_26:
    *v20 = (uint64_t)v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_27;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB3121F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  unint64_t v53;
  size_t v54;
  uint64_t isStackAllocationSafe;
  uint64_t v56;
  void *v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD v64[2];
  uint64_t *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[2];
  uint64_t v78;
  _QWORD v79[8];

  v79[6] = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(v1 + 32);
  v78 = v3;
  v70 = *(_QWORD *)(v3 + 16);
  if (!v70)
  {
    v9 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v1;
    *(_OWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v1 + 32);
    return sub_1BA7133FC(v1);
  }
  v4 = sub_1BA793D58();
  v5 = *(_QWORD *)(*(_QWORD *)(v4 + 40) + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 16);
  v66 = (_QWORD *)a1;
  if (v6)
  {
    v79[0] = *(_QWORD *)(v4 + 56);
    v7 = swift_bridgeObjectRetain();
    v8 = sub_1BA6E42A0(v7);
    sub_1BA6E3FB8(v8);
    swift_release();
    v76 = v79[0];
  }
  else
  {
    v76 = sub_1BA6E3F38();
    swift_release();
  }
  v69 = v3 + 32;
  v65 = (uint64_t *)v1;
  v11 = *(_QWORD *)(v1 + 24);
  v67 = *(_QWORD *)(v1 + 16);
  sub_1BA781758((uint64_t)&v78);
  swift_bridgeObjectRetain_n();
  sub_1BA781758((uint64_t)&v78);
  v12 = 0;
  v64[1] = v11;
  v68 = v11;
LABEL_9:
  v75 = v12;
  v14 = (uint64_t *)(v69 + 32 * v12);
  v16 = *v14;
  v15 = v14[1];
  v17 = v14[3];
  v71 = v14[2];
  v18 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  v74 = v17;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = qword_1ED4768D0;
  v20 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v21 = (uint64_t *)(v19 + 16);
  swift_beginAccess();
  v22 = *(_QWORD *)(v19 + 16);
  if (*(_QWORD *)(v22 + 16))
  {
    swift_bridgeObjectRetain();
    v23 = sub_1BA6E35A8(v16, v15);
    if ((v24 & 1) != 0)
    {
      v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 24 * v23 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v47 = *(_QWORD *)(v25 + 16);
      if (!v47)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v75;
        goto LABEL_8;
      }
      v72 = v25;
      v73 = v15;
      v48 = (uint64_t *)(v25 + 64);
      while (1)
      {
        v49 = *(v48 - 1);
        v50 = *v48;
        v51 = *(_BYTE *)(v49 + 32);
        v52 = v51 & 0x3F;
        v53 = (unint64_t)((1 << v51) + 63) >> 6;
        v54 = 8 * v53;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v52 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v64 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v54);
          v56 = sub_1BA6EB5B4((uint64_t)v64 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v53, v49, v76);
          swift_bridgeObjectRelease();
        }
        else
        {
          v57 = (void *)swift_slowAlloc();
          bzero(v57, v54);
          v56 = sub_1BA6EB5B4((uint64_t)v57, v53, v49, v76);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v57, -1, -1);
        }
        v58 = sub_1BA6EB330(v56, v49);
        swift_release();
        if ((v58 & 1) != 0)
        {
          v59 = sub_1BA6EBD20(v76, v50);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v59 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v13 = v75;
            v67 = v71;
            v68 = v74;
LABEL_8:
            swift_bridgeObjectRelease();
            v12 = v13 + 1;
            if (v12 == v70)
            {
              sub_1BA4F6CCC((uint64_t)&v78);
              swift_bridgeObjectRelease();
              sub_1BA4F6CCC((uint64_t)&v78);
              v61 = *v65;
              v60 = v65[1];
              swift_bridgeObjectRetain();
              result = swift_bridgeObjectRelease();
              v62 = v66;
              *v66 = v61;
              v62[1] = v60;
              v63 = v68;
              v62[2] = v67;
              v62[3] = v63;
              v62[4] = MEMORY[0x1E0DEE9D8];
              return result;
            }
            goto LABEL_9;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v48 += 5;
        if (!--v47)
          goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
  }
  v72 = v20;
  swift_endAccess();
  v77[0] = v16;
  v77[1] = v15;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v77, v79);
  v26 = v79[1];
  v73 = v79[0];
  v27 = v79[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v27;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v77[0] = *v21;
  v30 = v77[0];
  *v21 = 0x8000000000000000;
  v31 = v16;
  v33 = sub_1BA6E35A8(v16, v15);
  v34 = *(_QWORD *)(v30 + 16);
  v35 = (v32 & 1) == 0;
  v36 = v34 + v35;
  if (__OFADD__(v34, v35))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  v37 = v32;
  if (*(_QWORD *)(v30 + 24) >= v36)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v40 = (_QWORD *)v77[0];
      if ((v32 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v40 = (_QWORD *)v77[0];
      if ((v37 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v40[(v33 >> 6) + 8] |= 1 << v33;
    v42 = (uint64_t *)(v40[6] + 16 * v33);
    *v42 = v31;
    v42[1] = v15;
    v43 = (uint64_t *)(v40[7] + 24 * v33);
    *v43 = v73;
    v43[1] = v26;
    v43[2] = v28;
    v44 = v40[2];
    v45 = __OFADD__(v44, 1);
    v46 = v44 + 1;
    if (v45)
      goto LABEL_41;
    v25 = v28;
    v40[2] = v46;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  sub_1BA7AAAE4(v36, isUniquelyReferenced_nonNull_native);
  v38 = sub_1BA6E35A8(v31, v15);
  if ((v37 & 1) == (v39 & 1))
  {
    v33 = v38;
    v40 = (_QWORD *)v77[0];
    if ((v37 & 1) == 0)
      goto LABEL_24;
LABEL_22:
    v41 = (uint64_t *)(v40[7] + 24 * v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v41 = v73;
    v41[1] = v26;
    v41[2] = v28;
    v25 = v28;
LABEL_26:
    *v21 = (uint64_t)v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_27;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB3128E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  unint64_t v52;
  size_t v53;
  uint64_t isStackAllocationSafe;
  uint64_t v55;
  void *v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD v63[2];
  uint64_t *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[2];
  uint64_t v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;

  v80 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(v1 + 32);
  v77 = v3;
  v69 = *(_QWORD *)(v3 + 16);
  if (!v69)
  {
    v8 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v1;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v1 + 32);
    return sub_1BA7133FC(v1);
  }
  type metadata accessor for FormatDecorationContext();
  sub_1BB86DD80();
  v4 = *(_QWORD *)(*(_QWORD *)(v79 + 40) + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 16);
  v65 = (_QWORD *)a1;
  if (v5)
  {
    v78[0] = *(_QWORD *)(v79 + 56);
    v6 = swift_bridgeObjectRetain();
    v7 = sub_1BA6E42A0(v6);
    sub_1BA6E3FB8(v7);
    swift_release();
    v75 = v78[0];
  }
  else
  {
    v75 = sub_1BA6E3F38();
    swift_release();
  }
  v68 = v3 + 32;
  v64 = (uint64_t *)v1;
  v10 = *(_QWORD *)(v1 + 24);
  v66 = *(_QWORD *)(v1 + 16);
  sub_1BA781758((uint64_t)&v77);
  swift_bridgeObjectRetain_n();
  sub_1BA781758((uint64_t)&v77);
  v11 = 0;
  v63[1] = v10;
  v67 = v10;
LABEL_9:
  v74 = v11;
  v13 = (uint64_t *)(v68 + 32 * v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v13[3];
  v70 = v13[2];
  v17 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  v73 = v16;
  swift_bridgeObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = qword_1ED4768D0;
  v19 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v20 = (uint64_t *)(v18 + 16);
  swift_beginAccess();
  v21 = *(_QWORD *)(v18 + 16);
  if (*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    v22 = sub_1BA6E35A8(v15, v14);
    if ((v23 & 1) != 0)
    {
      v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 24 * v22 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v46 = *(_QWORD *)(v24 + 16);
      if (!v46)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = v74;
        goto LABEL_8;
      }
      v71 = v24;
      v72 = v14;
      v47 = (uint64_t *)(v24 + 64);
      while (1)
      {
        v48 = *(v47 - 1);
        v49 = *v47;
        v50 = *(_BYTE *)(v48 + 32);
        v51 = v50 & 0x3F;
        v52 = (unint64_t)((1 << v50) + 63) >> 6;
        v53 = 8 * v52;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v51 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v53);
          v55 = sub_1BA6EB5B4((uint64_t)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v52, v48, v75);
          swift_bridgeObjectRelease();
        }
        else
        {
          v56 = (void *)swift_slowAlloc();
          bzero(v56, v53);
          v55 = sub_1BA6EB5B4((uint64_t)v56, v52, v48, v75);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v56, -1, -1);
        }
        v57 = sub_1BA6EB330(v55, v48);
        swift_release();
        if ((v57 & 1) != 0)
        {
          v58 = sub_1BA6EBD20(v75, v49);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v58 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v12 = v74;
            v66 = v70;
            v67 = v73;
LABEL_8:
            swift_bridgeObjectRelease();
            v11 = v12 + 1;
            if (v11 == v69)
            {
              sub_1BA4F6CCC((uint64_t)&v77);
              swift_bridgeObjectRelease();
              sub_1BA4F6CCC((uint64_t)&v77);
              v60 = *v64;
              v59 = v64[1];
              swift_bridgeObjectRetain();
              result = swift_bridgeObjectRelease();
              v61 = v65;
              *v65 = v60;
              v61[1] = v59;
              v62 = v67;
              v61[2] = v66;
              v61[3] = v62;
              v61[4] = MEMORY[0x1E0DEE9D8];
              return result;
            }
            goto LABEL_9;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v47 += 5;
        if (!--v46)
          goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
  }
  v71 = v19;
  swift_endAccess();
  v76[0] = v15;
  v76[1] = v14;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v76, v78);
  v25 = v78[1];
  v72 = v78[0];
  v26 = v78[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = v26;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v76[0] = *v20;
  v29 = v76[0];
  *v20 = 0x8000000000000000;
  v30 = v15;
  v32 = sub_1BA6E35A8(v15, v14);
  v33 = *(_QWORD *)(v29 + 16);
  v34 = (v31 & 1) == 0;
  v35 = v33 + v34;
  if (__OFADD__(v33, v34))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  v36 = v31;
  if (*(_QWORD *)(v29 + 24) >= v35)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v39 = (_QWORD *)v76[0];
      if ((v31 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v39 = (_QWORD *)v76[0];
      if ((v36 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v39[(v32 >> 6) + 8] |= 1 << v32;
    v41 = (uint64_t *)(v39[6] + 16 * v32);
    *v41 = v30;
    v41[1] = v14;
    v42 = (uint64_t *)(v39[7] + 24 * v32);
    *v42 = v72;
    v42[1] = v25;
    v42[2] = v27;
    v43 = v39[2];
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
      goto LABEL_41;
    v24 = v27;
    v39[2] = v45;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  sub_1BA7AAAE4(v35, isUniquelyReferenced_nonNull_native);
  v37 = sub_1BA6E35A8(v30, v14);
  if ((v36 & 1) == (v38 & 1))
  {
    v32 = v37;
    v39 = (_QWORD *)v76[0];
    if ((v36 & 1) == 0)
      goto LABEL_24;
LABEL_22:
    v40 = (uint64_t *)(v39[7] + 24 * v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v40 = v72;
    v40[1] = v25;
    v40[2] = v27;
    v24 = v27;
LABEL_26:
    *v20 = (uint64_t)v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_27;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB312FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  unint64_t v54;
  size_t v55;
  uint64_t isStackAllocationSafe;
  uint64_t v57;
  void *v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD v65[2];
  uint64_t *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[2];
  uint64_t v79;
  _QWORD v80[8];

  v80[6] = *MEMORY[0x1E0C80C00];
  v4 = *(_QWORD *)(v2 + 32);
  v79 = v4;
  v71 = *(_QWORD *)(v4 + 16);
  if (!v71)
  {
    v10 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v2;
    *(_OWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(v2 + 32);
    return sub_1BA7133FC(v2);
  }
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(v5 + 40) + 16);
  swift_beginAccess();
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 16) + 16);
  v67 = (_QWORD *)a2;
  if (v7)
  {
    v80[0] = *(_QWORD *)(v5 + 56);
    swift_retain();
    v8 = swift_bridgeObjectRetain();
    v9 = sub_1BA6E42A0(v8);
    sub_1BA6E3FB8(v9);
    swift_release();
    v77 = v80[0];
  }
  else
  {
    swift_retain();
    v77 = sub_1BA6E3F38();
    swift_release();
  }
  v70 = v4 + 32;
  v66 = (uint64_t *)v2;
  v12 = *(_QWORD *)(v2 + 24);
  v68 = *(_QWORD *)(v2 + 16);
  sub_1BA781758((uint64_t)&v79);
  swift_bridgeObjectRetain_n();
  sub_1BA781758((uint64_t)&v79);
  v13 = 0;
  v65[1] = v12;
  v69 = v12;
LABEL_9:
  v76 = v13;
  v15 = (uint64_t *)(v70 + 32 * v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v15[3];
  v72 = v15[2];
  v19 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  v75 = v18;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = qword_1ED4768D0;
  v21 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v22 = (uint64_t *)(v20 + 16);
  swift_beginAccess();
  v23 = *(_QWORD *)(v20 + 16);
  if (*(_QWORD *)(v23 + 16))
  {
    swift_bridgeObjectRetain();
    v24 = sub_1BA6E35A8(v17, v16);
    if ((v25 & 1) != 0)
    {
      v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 24 * v24 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v48 = *(_QWORD *)(v26 + 16);
      if (!v48)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = v76;
        goto LABEL_8;
      }
      v73 = v26;
      v74 = v16;
      v49 = (uint64_t *)(v26 + 64);
      while (1)
      {
        v50 = *(v49 - 1);
        v51 = *v49;
        v52 = *(_BYTE *)(v50 + 32);
        v53 = v52 & 0x3F;
        v54 = (unint64_t)((1 << v52) + 63) >> 6;
        v55 = 8 * v54;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v53 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v65 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v55);
          v57 = sub_1BA6EB5B4((uint64_t)v65 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v50, v77);
          swift_bridgeObjectRelease();
        }
        else
        {
          v58 = (void *)swift_slowAlloc();
          bzero(v58, v55);
          v57 = sub_1BA6EB5B4((uint64_t)v58, v54, v50, v77);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v58, -1, -1);
        }
        v59 = sub_1BA6EB330(v57, v50);
        swift_release();
        if ((v59 & 1) != 0)
        {
          v60 = sub_1BA6EBD20(v77, v51);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v60 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v14 = v76;
            v68 = v72;
            v69 = v75;
LABEL_8:
            swift_bridgeObjectRelease();
            v13 = v14 + 1;
            if (v13 == v71)
            {
              sub_1BA4F6CCC((uint64_t)&v79);
              swift_bridgeObjectRelease();
              sub_1BA4F6CCC((uint64_t)&v79);
              v62 = *v66;
              v61 = v66[1];
              swift_bridgeObjectRetain();
              result = swift_bridgeObjectRelease();
              v63 = v67;
              *v67 = v62;
              v63[1] = v61;
              v64 = v69;
              v63[2] = v68;
              v63[3] = v64;
              v63[4] = MEMORY[0x1E0DEE9D8];
              return result;
            }
            goto LABEL_9;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v49 += 5;
        if (!--v48)
          goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
  }
  v73 = v21;
  swift_endAccess();
  v78[0] = v17;
  v78[1] = v16;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v78, v80);
  v27 = v80[1];
  v74 = v80[0];
  v28 = v80[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v28;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v78[0] = *v22;
  v31 = v78[0];
  *v22 = 0x8000000000000000;
  v32 = v17;
  v34 = sub_1BA6E35A8(v17, v16);
  v35 = *(_QWORD *)(v31 + 16);
  v36 = (v33 & 1) == 0;
  v37 = v35 + v36;
  if (__OFADD__(v35, v36))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  v38 = v33;
  if (*(_QWORD *)(v31 + 24) >= v37)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v41 = (_QWORD *)v78[0];
      if ((v33 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v41 = (_QWORD *)v78[0];
      if ((v38 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v41[(v34 >> 6) + 8] |= 1 << v34;
    v43 = (uint64_t *)(v41[6] + 16 * v34);
    *v43 = v32;
    v43[1] = v16;
    v44 = (uint64_t *)(v41[7] + 24 * v34);
    *v44 = v74;
    v44[1] = v27;
    v44[2] = v29;
    v45 = v41[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_41;
    v26 = v29;
    v41[2] = v47;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  sub_1BA7AAAE4(v37, isUniquelyReferenced_nonNull_native);
  v39 = sub_1BA6E35A8(v32, v16);
  if ((v38 & 1) == (v40 & 1))
  {
    v34 = v39;
    v41 = (_QWORD *)v78[0];
    if ((v38 & 1) == 0)
      goto LABEL_24;
LABEL_22:
    v42 = (uint64_t *)(v41[7] + 24 * v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v42 = v74;
    v42[1] = v27;
    v42[2] = v29;
    v26 = v29;
LABEL_26:
    *v22 = (uint64_t)v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_27;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

void sub_1BB3136F0(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB318FC0(a1, a2, a3, a4, a5, 0x6F4674616D726F46, 0xEA0000000000746ELL, a6, (uint64_t)&type metadata for FormatFont, (uint64_t)sub_1BA7F10DC, (uint64_t)sub_1BA7F10DC);
}

void sub_1BB31374C(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD v32[17];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;

  v32[11] = a4;
  v32[5] = a2;
  v32[4] = a5;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v33 = sub_1BB86BFF8();
  v32[16] = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v32[9] = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v11);
  v32[8] = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v36 = (char *)v32 - v14;
  MEMORY[0x1E0C80A78](v15);
  v32[6] = (char *)v32 - v16;
  MEMORY[0x1E0C80A78](v17);
  v32[13] = (char *)v32 - v18;
  MEMORY[0x1E0C80A78](v19);
  v35 = (char *)v32 - v20;
  MEMORY[0x1E0C80A78](v21);
  v34 = sub_1BB86C67C();
  v22 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32[7] = (char *)v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v37 = (char *)v32 - v25;
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  v38 = (char *)v32 - v29;
  MEMORY[0x1E0C80A78](v30);
  v31 = (char *)sub_1BB313A60 + 4 * word_1BB908180[a1 >> 60];
  v32[10] = a3;
  v32[15] = v22;
  __asm { BR              X10 }
}

uint64_t sub_1BB313A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_0;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD v50[16];

  *(_QWORD *)(v7 - 472) = v0;
  *(_QWORD *)(v7 - 304) = v2;
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  sub_1BA747A10(v7 - 152, v7 - 184);
  v8 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v7 - 320) = v8;
  if (!v8)
  {
LABEL_22:
    sub_1BA76EAE0((_OWORD *)(v7 - 184), (_OWORD *)(v7 - 120));
    __swift_destroy_boxed_opaque_existential_1(v7 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v7 - 120, v7 - 304);
    v38 = *(_QWORD *)(v7 - 448);
    v39 = *(_QWORD *)(v7 - 352);
    v40 = swift_dynamicCast();
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
    if ((v40 & 1) != 0)
    {
      v41(v38, 0, 1, v39);
      __swift_destroy_boxed_opaque_existential_1(v7 - 120);
      v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
      v43 = *(_QWORD *)(v7 - 472);
      v42(v43, v38, v39);
      return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v42)(*(_QWORD *)(v7 - 464), v43, v39);
    }
    else
    {
      v41(v38, 1, 1, v39);
      sub_1BA6AA068(v38, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v46 = v45;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 - 120), *(_QWORD *)(v7 - 96));
      swift_getDynamicType();
      swift_bridgeObjectRetain();
      v47 = sub_1BB874734();
      *v46 = *(_QWORD *)(v7 - 456);
      v46[1] = v6;
      v46[2] = 5001813;
      v46[3] = 0xE300000000000000;
      v46[4] = v47;
      v46[5] = v48;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1(v7 - 120);
    }
  }
  *(_QWORD *)(v7 - 480) = v6;
  *(_QWORD *)(v7 - 384) = v4;
  swift_bridgeObjectRetain();
  v9 = 0;
  *(_QWORD *)(v7 - 392) = MEMORY[0x1E0DEE9B8] + 8;
  v10 = *(__int128 **)(v7 - 408);
  v11 = *(_QWORD *)(v7 - 352);
  v12 = *(_QWORD *)(v7 - 336);
  *(_QWORD *)(v7 - 400) = v3;
  while (1)
  {
    v15 = *(_QWORD *)(v5 + 8 * v9 + 32);
    if (v15)
      break;
    *(_QWORD *)(v7 - 304) = 0;
    *(_QWORD *)(v7 - 296) = 0xE000000000000000;
    sub_1BB873E34();
    v13 = *(_QWORD *)(v7 - 304);
    v14 = *(_QWORD *)(v7 - 296);
    *(_QWORD *)(v7 - 192) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 - 216) = v13;
    *(_QWORD *)(v7 - 208) = v14;
LABEL_4:
    ++v9;
    __swift_destroy_boxed_opaque_existential_1(v7 - 184);
    sub_1BA76EAE0((_OWORD *)(v7 - 216), (_OWORD *)(v7 - 184));
    if (*(_QWORD *)(v7 - 320) == v9)
    {
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(v7 - 480);
      goto LABEL_22;
    }
  }
  sub_1BA747A10(v7 - 184, v7 - 304);
  swift_bridgeObjectRetain();
  v16 = swift_dynamicCast();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v16)
  {
    v17(v12, 0, 1, v11);
    v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
    if (v18(v12, 1, v11) == 1)
      goto LABEL_26;
    v19 = v12;
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
    v21 = v15;
    v22 = *(_QWORD *)(v7 - 328);
    v20(v22, v19, v11);
    *(_QWORD *)(v7 - 192) = v11;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v7 - 216));
    *(_QWORD *)(v7 - 224) = *((_QWORD *)v10 + 10);
    v24 = v10[4];
    v25 = v10[2];
    *(_OWORD *)(v7 - 256) = v10[3];
    *(_OWORD *)(v7 - 240) = v24;
    *(_OWORD *)(v7 - 272) = v25;
    v26 = *v10;
    *(_OWORD *)(v7 - 288) = v10[1];
    *(_OWORD *)(v7 - 304) = v26;
    *(_QWORD *)(v7 - 312) = v21;
    if (*(_QWORD *)(v21 + 16))
    {
      *(_QWORD *)(v7 - 344) = boxed_opaque_existential_0;
      v27 = *(_QWORD *)(v7 - 400);
      sub_1BB86BF74();
      v28 = *(_QWORD *)(v7 - 368);
      v29 = *(_QWORD *)(v7 - 360);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v27, 1, v29) != 1)
      {
        v31 = *(_QWORD *)(v7 - 424);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v31, v27, v29);
        v32 = sub_1BB86BF38();
        if (v32)
          v33 = v32;
        else
          v33 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v32);
        v50[2] = v7 - 304;
        v34 = *(_QWORD *)(v7 - 384);
        v35 = sub_1BA7F0E2C((void (*)(_QWORD))sub_1BA7F10DC, (uint64_t)v50, *(_QWORD *)(v7 - 312));
        *(_QWORD *)(v7 - 384) = v34;
        *(_QWORD *)(v7 - 72) = v33;
        sub_1BA7F0E18(v35);
        sub_1BB86BF44();
        v36 = *(_QWORD *)(v7 - 432);
        sub_1BB86BF80();
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v29);
        v1 = *(_QWORD *)(v7 - 376);
        v37 = *(_QWORD *)(v7 - 440);
        v11 = *(_QWORD *)(v7 - 352);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v37, v22, v11);
        if (v18(v36, 1, v11) == 1)
        {
          v20(*(_QWORD *)(v7 - 344), v37, v11);
          sub_1BA6AA068(v36, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v37, v11);
          v20(*(_QWORD *)(v7 - 344), v36, v11);
        }
        v5 = *(_QWORD *)(v7 - 416);
        v10 = *(__int128 **)(v7 - 408);
        v12 = *(_QWORD *)(v7 - 336);
        v30 = *(_QWORD *)(v7 - 328);
        goto LABEL_20;
      }
      sub_1BA6AA068(v27, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      v1 = *(_QWORD *)(v7 - 376);
      v11 = *(_QWORD *)(v7 - 352);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 16))(*(_QWORD *)(v7 - 344), v22, v11);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v1 + 16))(boxed_opaque_existential_0, v22, v11);
    }
    v12 = *(_QWORD *)(v7 - 336);
    v30 = v22;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v30, v11);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v17(v12, 1, 1, v11);
LABEL_26:
  sub_1BA6AA068(v12, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v49 = 5001813;
  v49[1] = 0xE300000000000000;
  v49[2] = 7958081;
  v49[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v7 - 184);
  __swift_destroy_boxed_opaque_existential_1(v7 - 152);
  return swift_bridgeObjectRelease();
}

void sub_1BB314974(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_1BB314A30(a1, a2, a3, a4, 0x6F4674616D726F46, 0xEA0000000000746ELL, a5, (uint64_t)&type metadata for FormatFont, (uint64_t)sub_1BA7F10DC, (uint64_t)sub_1BA7F10DC);
}

void sub_1BB3149D0(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_1BB314A30(a1, a2, a3, a4, 0x6F4374616D726F46, 0xEB00000000726F6CLL, a5, (uint64_t)&type metadata for FormatColor, (uint64_t)sub_1BA7F10DC, (uint64_t)sub_1BA7F10DC);
}

void sub_1BB314A30(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD v37[19];
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;

  v37[6] = a6;
  v37[5] = a5;
  v37[13] = a4;
  v37[14] = a3;
  v37[7] = a2;
  v37[4] = a7;
  v37[11] = a10;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v11);
  v37[15] = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v39 = (char *)v37 - v14;
  v38 = sub_1BB86BFF8();
  v15 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v37[10] = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v37[12] = (char *)v37 - v18;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v19);
  v37[9] = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v40 = (char *)v37 - v22;
  MEMORY[0x1E0C80A78](v23);
  v37[1] = (char *)v37 - v24;
  MEMORY[0x1E0C80A78](v25);
  v42 = (char *)v37 - v26;
  v27 = sub_1BB86C67C();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v37[8] = (char *)v37 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v41 = (char *)v37 - v31;
  MEMORY[0x1E0C80A78](v32);
  MEMORY[0x1E0C80A78](v33);
  v43 = (char *)v37 - v34;
  v35 = (char *)sub_1BB314D08 + 4 * word_1BB90819C[a1 >> 60];
  v37[18] = v15;
  v37[17] = v36;
  v37[16] = v28;
  __asm { BR              X10 }
}

uint64_t sub_1BB314D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD v46[16];

  *(_QWORD *)(v6 - 488) = v0;
  *(_QWORD *)(v6 - 304) = v4;
  v7 = *(_QWORD *)(v6 - 400);
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  v8 = v7;
  sub_1BA747A10(v6 - 152, v6 - 184);
  v9 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v6 - 320) = v9;
  if (!v9)
  {
LABEL_22:
    sub_1BA76EAE0((_OWORD *)(v6 - 184), (_OWORD *)(v6 - 120));
    __swift_destroy_boxed_opaque_existential_1(v6 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v6 - 120, v6 - 304);
    if ((swift_dynamicCast() & 1) != 0)
    {
      result = __swift_destroy_boxed_opaque_existential_1(v6 - 120);
      **(_QWORD **)(v6 - 480) = *(_QWORD *)(v6 - 184);
    }
    else
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v40 = v39;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 96));
      swift_getDynamicType();
      v41 = *(_QWORD *)(v6 - 456);
      swift_bridgeObjectRetain();
      v42 = sub_1BB874734();
      *v40 = *(_QWORD *)(v6 - 488);
      v40[1] = v41;
      v43 = *(_QWORD *)(v6 - 464);
      v40[2] = *(_QWORD *)(v6 - 472);
      v40[3] = v43;
      v40[4] = v42;
      v40[5] = v44;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1(v6 - 120);
    }
    return result;
  }
  *(_QWORD *)(v6 - 496) = v1;
  *(_QWORD *)(v6 - 352) = v5;
  swift_bridgeObjectRetain();
  v10 = 0;
  *(_QWORD *)(v6 - 416) = MEMORY[0x1E0DEE9B8] + 8;
  v11 = *(__int128 **)(v6 - 408);
  v12 = *(_QWORD *)(v6 - 336);
  v13 = *(_QWORD *)(v6 - 328);
  while (1)
  {
    v16 = *(_QWORD *)(v8 + 8 * v10 + 32);
    if (v16)
      break;
    *(_QWORD *)(v6 - 304) = 0;
    *(_QWORD *)(v6 - 296) = 0xE000000000000000;
    sub_1BB873E34();
    v14 = *(_QWORD *)(v6 - 304);
    v15 = *(_QWORD *)(v6 - 296);
    *(_QWORD *)(v6 - 192) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 - 216) = v14;
    *(_QWORD *)(v6 - 208) = v15;
LABEL_4:
    ++v10;
    __swift_destroy_boxed_opaque_existential_1(v6 - 184);
    sub_1BA76EAE0((_OWORD *)(v6 - 216), (_OWORD *)(v6 - 184));
    if (*(_QWORD *)(v6 - 320) == v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  sub_1BA747A10(v6 - 184, v6 - 304);
  swift_bridgeObjectRetain();
  v17 = swift_dynamicCast();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  if (v17)
  {
    v18(v12, 0, 1, v2);
    v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v19(v12, 1, v2) == 1)
      goto LABEL_26;
    v20 = v12;
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v21(v13, v20, v2);
    *(_QWORD *)(v6 - 192) = v2;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v6 - 216));
    *(_QWORD *)(v6 - 224) = *((_QWORD *)v11 + 10);
    v23 = v11[4];
    v24 = v11[2];
    *(_OWORD *)(v6 - 256) = v11[3];
    *(_OWORD *)(v6 - 240) = v23;
    *(_OWORD *)(v6 - 272) = v24;
    v25 = *v11;
    *(_OWORD *)(v6 - 288) = v11[1];
    *(_OWORD *)(v6 - 304) = v25;
    *(_QWORD *)(v6 - 312) = v16;
    if (*(_QWORD *)(v16 + 16))
    {
      *(_QWORD *)(v6 - 344) = boxed_opaque_existential_0;
      v26 = *(_QWORD *)(v6 - 392);
      sub_1BB86BF74();
      v27 = *(_QWORD *)(v6 - 368);
      v28 = *(_QWORD *)(v6 - 360);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v26, 1, v28) != 1)
      {
        v30 = *(_QWORD *)(v6 - 432);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v30, v26, v28);
        v31 = sub_1BB86BF38();
        if (v31)
          v32 = v31;
        else
          v32 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v31);
        v46[2] = v6 - 304;
        v33 = *(_QWORD *)(v6 - 352);
        v34 = sub_1BA7F0E2C(*(void (**)(_QWORD))(v6 - 424), (uint64_t)v46, *(_QWORD *)(v6 - 312));
        *(_QWORD *)(v6 - 352) = v33;
        *(_QWORD *)(v6 - 72) = v32;
        sub_1BA7F0E18(v34);
        sub_1BB86BF44();
        v35 = *(_QWORD *)(v6 - 440);
        sub_1BB86BF80();
        v36 = v35;
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v28);
        v3 = *(_QWORD *)(v6 - 384);
        v37 = *(_QWORD *)(v6 - 448);
        v2 = *(_QWORD *)(v6 - 376);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v37, v13, v2);
        if (v19(v36, 1, v2) == 1)
        {
          v21(*(_QWORD *)(v6 - 344), v37, v2);
          sub_1BA6AA068(v36, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v37, v2);
          v21(*(_QWORD *)(v6 - 344), v36, v2);
        }
        v8 = *(_QWORD *)(v6 - 400);
        v11 = *(__int128 **)(v6 - 408);
        v12 = *(_QWORD *)(v6 - 336);
        v29 = *(_QWORD *)(v6 - 328);
        goto LABEL_20;
      }
      sub_1BA6AA068(v26, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      v3 = *(_QWORD *)(v6 - 384);
      v2 = *(_QWORD *)(v6 - 376);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(*(_QWORD *)(v6 - 344), v13, v2);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(boxed_opaque_existential_0, v13, v2);
    }
    v12 = *(_QWORD *)(v6 - 336);
    v29 = v13;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v29, v2);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v18(v12, 1, 1, v2);
LABEL_26:
  sub_1BA6AA068(v12, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v45 = 5001813;
  v45[1] = 0xE300000000000000;
  v45[2] = 7958081;
  v45[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v6 - 184);
  __swift_destroy_boxed_opaque_existential_1(v6 - 152);
  return swift_bridgeObjectRelease();
}

void sub_1BB315ACC(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB318FC0(a1, a2, a3, a4, a5, 0x6F4374616D726F46, 0xEB00000000726F6CLL, a6, (uint64_t)&type metadata for FormatColor, (uint64_t)sub_1BAFEE694, (uint64_t)sub_1BA7F10DC);
}

void sub_1BB315B2C(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB315B58(a1, a2, a3, a4, a5, (uint64_t)sub_1BA7F10DC, a6);
}

void sub_1BB315B58(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[8];
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;

  v44 = a6;
  v54 = a5;
  v39[5] = a3;
  v39[4] = a2;
  v39[3] = a7;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v52 = sub_1BB86BFF8();
  v12 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v43 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v51 = (char *)v39 - v15;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v16);
  v42 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v55 = (char *)v39 - v19;
  MEMORY[0x1E0C80A78](v20);
  v47 = (char *)v39 - v21;
  MEMORY[0x1E0C80A78](v22);
  v53 = (char *)v39 - v23;
  v24 = sub_1BB86C67C();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v41 = (char *)v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v56 = (char *)v39 - v28;
  MEMORY[0x1E0C80A78](v29);
  v39[2] = (char *)v39 - v30;
  MEMORY[0x1E0C80A78](v31);
  v57 = (char *)v39 - v32;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v33);
  v39[6] = (char *)v39 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v39[1] = (char *)v39 - v36;
  v40 = sub_1BB86C8B0();
  v39[7] = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v37);
  v38 = (char *)sub_1BB315EF0 + 4 * word_1BB9081F0[a1 >> 60];
  v46 = a4;
  v45 = v12;
  v50 = v24;
  v49 = v25;
  __asm { BR              X10 }
}

uint64_t sub_1BB315EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD v49[16];

  *(_QWORD *)(v7 - 448) = v0;
  *(_QWORD *)(v7 - 184) = v4;
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  sub_1BA747A10(v7 - 152, v7 - 184);
  v8 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v7 - 256) = v8;
  if (!v8)
  {
LABEL_22:
    sub_1BA76EAE0((_OWORD *)(v7 - 184), (_OWORD *)(v7 - 120));
    __swift_destroy_boxed_opaque_existential_1(v7 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v7 - 120, v7 - 184);
    v35 = *(_QWORD *)(v7 - 416);
    v36 = *(_QWORD *)(v7 - 400);
    v37 = swift_dynamicCast();
    v38 = *(_QWORD *)(v7 - 408);
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
    if ((v37 & 1) != 0)
    {
      v39(v35, 0, 1, v36);
      __swift_destroy_boxed_opaque_existential_1(v7 - 120);
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32);
      v41 = *(_QWORD *)(v7 - 448);
      v40(v41, v35, v36);
      return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v40)(*(_QWORD *)(v7 - 440), v41, v36);
    }
    else
    {
      v39(v35, 1, 1, v36);
      sub_1BA6AA068(v35, (uint64_t)&qword_1ED3B0540, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v44 = v43;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 - 120), *(_QWORD *)(v7 - 96));
      swift_getDynamicType();
      v45 = *(_QWORD *)(v7 - 424);
      swift_bridgeObjectRetain();
      v46 = sub_1BB874734();
      *v44 = *(_QWORD *)(v7 - 432);
      v44[1] = v45;
      v44[2] = 1702125892;
      v44[3] = 0xE400000000000000;
      v44[4] = v46;
      v44[5] = v47;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1(v7 - 120);
    }
  }
  *(_QWORD *)(v7 - 328) = v3;
  swift_bridgeObjectRetain();
  v9 = 0;
  *(_QWORD *)(v7 - 344) = MEMORY[0x1E0DEE9B8] + 8;
  v10 = *(_QWORD *)(v7 - 272);
  while (1)
  {
    v13 = *(_QWORD *)(v2 + 8 * v9 + 32);
    if (v13)
      break;
    *(_QWORD *)(v7 - 248) = 0;
    *(_QWORD *)(v7 - 240) = 0xE000000000000000;
    sub_1BB873E34();
    v11 = *(_QWORD *)(v7 - 248);
    v12 = *(_QWORD *)(v7 - 240);
    *(_QWORD *)(v7 - 192) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 - 216) = v11;
    *(_QWORD *)(v7 - 208) = v12;
LABEL_4:
    ++v9;
    __swift_destroy_boxed_opaque_existential_1(v7 - 184);
    sub_1BA76EAE0((_OWORD *)(v7 - 216), (_OWORD *)(v7 - 184));
    if (*(_QWORD *)(v7 - 256) == v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  sub_1BA747A10(v7 - 184, v7 - 248);
  swift_bridgeObjectRetain();
  v14 = swift_dynamicCast();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  if (v14)
  {
    v15(v10, 0, 1, v6);
    v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v16(v10, 1, v6) == 1)
      goto LABEL_26;
    v17 = v2;
    v18 = v10;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    v20 = *(_QWORD *)(v7 - 264);
    v19(v20, v18, v6);
    *(_QWORD *)(v7 - 192) = v6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v7 - 216));
    *(_QWORD *)(v7 - 248) = *(_QWORD *)(v7 - 280);
    if (*(_QWORD *)(v13 + 16))
    {
      *(_QWORD *)(v7 - 288) = boxed_opaque_existential_0;
      *(_QWORD *)(v7 - 304) = v19;
      v22 = *(_QWORD *)(v7 - 336);
      sub_1BB86BF74();
      v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
      v24 = v1;
      v25 = *(_QWORD *)(v7 - 296);
      if (v23(v22, 1, v25) != 1)
      {
        v27 = *(_QWORD *)(v7 - 376);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v27, v22, v25);
        v28 = sub_1BB86BF38();
        if (v28)
          v29 = v28;
        else
          v29 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v28);
        v49[2] = v7 - 248;
        v30 = *(_QWORD *)(v7 - 328);
        v31 = sub_1BA7F0E2C(*(void (**)(_QWORD))(v7 - 368), (uint64_t)v49, v13);
        *(_QWORD *)(v7 - 328) = v30;
        *(_QWORD *)(v7 - 72) = v29;
        sub_1BA7F0E18(v31);
        sub_1BB86BF44();
        v32 = *(_QWORD *)(v7 - 384);
        sub_1BB86BF80();
        v33 = v32;
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27, v25);
        v5 = *(_QWORD *)(v7 - 320);
        v34 = *(_QWORD *)(v7 - 392);
        v6 = *(_QWORD *)(v7 - 312);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v34, v20, v6);
        if (v16(v33, 1, v6) == 1)
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 - 304))(*(_QWORD *)(v7 - 288), v34, v6);
          sub_1BA6AA068(v33, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v34, v6);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 - 304))(*(_QWORD *)(v7 - 288), v33, v6);
        }
        v2 = *(_QWORD *)(v7 - 352);
        v1 = *(_QWORD *)(v7 - 360);
        v10 = *(_QWORD *)(v7 - 272);
        v26 = *(_QWORD *)(v7 - 264);
        goto LABEL_20;
      }
      sub_1BA6AA068(v22, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      v5 = *(_QWORD *)(v7 - 320);
      v6 = *(_QWORD *)(v7 - 312);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 + 16))(*(_QWORD *)(v7 - 288), v20, v6);
      v1 = v24;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(boxed_opaque_existential_0, v20, v6);
    }
    v10 = *(_QWORD *)(v7 - 272);
    v26 = v20;
    v2 = v17;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v26, v6);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v15(v10, 1, 1, v6);
LABEL_26:
  sub_1BA6AA068(v10, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v48 = 5001813;
  v48[1] = 0xE300000000000000;
  v48[2] = 7958081;
  v48[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v7 - 184);
  __swift_destroy_boxed_opaque_existential_1(v7 - 152);
  return swift_bridgeObjectRelease();
}

void sub_1BB316CEC(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB31B0D8(a1, a2, a3, a4, a5, 0x6F4674616D726F46, 0xEA0000000000746ELL, a6, (uint64_t)&type metadata for FormatFont, (uint64_t)sub_1BA7F10DC, (uint64_t)sub_1BA7F10DC);
}

void sub_1BB316D48(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB31B0D8(a1, a2, a3, a4, a5, 0x6F4374616D726F46, 0xEB00000000726F6CLL, a6, (uint64_t)&type metadata for FormatColor, (uint64_t)sub_1BA7F10DC, (uint64_t)sub_1BA7F10DC);
}

void sub_1BB316DA8(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD v32[5];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;

  v38 = a5;
  v34 = a3;
  v32[2] = a2;
  v32[1] = a6;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v44 = sub_1BB86BFF8();
  v40 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v37 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v12);
  v36 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v46 = (char *)v32 - v15;
  MEMORY[0x1E0C80A78](v16);
  v41 = (char *)v32 - v17;
  MEMORY[0x1E0C80A78](v18);
  v48 = (char *)v32 - v19;
  v43 = sub_1BB86C67C();
  v20 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v35 = (char *)v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v47 = (char *)v32 - v23;
  MEMORY[0x1E0C80A78](v24);
  MEMORY[0x1E0C80A78](v25);
  v45 = (char *)v32 - v26;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v27);
  v32[3] = (char *)v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v33 = sub_1BB86C8B0();
  v32[4] = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v30);
  v31 = (char *)sub_1BB31710C + 4 * word_1BB908228[a1 >> 60];
  v39 = a4;
  v42 = v20;
  __asm { BR              X10 }
}

uint64_t sub_1BB31710C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD v47[16];

  v6 = v2;
  *(_QWORD *)(v5 - 432) = v0;
  *(_QWORD *)(v5 - 184) = v1;
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  sub_1BA747A10(v5 - 152, v5 - 184);
  v7 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v5 - 72) = v7;
  if (!v7)
  {
LABEL_22:
    v33 = *(_QWORD *)(v5 - 384);
    sub_1BA76EAE0((_OWORD *)(v5 - 184), (_OWORD *)(v5 - 120));
    __swift_destroy_boxed_opaque_existential_1(v5 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v5 - 120, v5 - 184);
    v34 = *(_QWORD *)(v5 - 408);
    v35 = *(_QWORD *)(v5 - 392);
    v36 = swift_dynamicCast();
    v37 = *(_QWORD *)(v5 - 400);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
    if ((v36 & 1) != 0)
    {
      v38(v34, 0, 1, v35);
      __swift_destroy_boxed_opaque_existential_1(v5 - 120);
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32);
      v40 = *(_QWORD *)(v5 - 432);
      v39(v40, v34, v35);
      return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v39)(*(_QWORD *)(v5 - 424), v40, v35);
    }
    else
    {
      v38(v34, 1, 1, v35);
      sub_1BA6AA068(v34, (uint64_t)&qword_1ED3B0540, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v43 = v42;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 - 120), *(_QWORD *)(v5 - 96));
      swift_getDynamicType();
      swift_bridgeObjectRetain();
      v44 = sub_1BB874734();
      *v43 = *(_QWORD *)(v5 - 416);
      v43[1] = v33;
      v43[2] = 1702125892;
      v43[3] = 0xE400000000000000;
      v43[4] = v44;
      v43[5] = v45;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1(v5 - 120);
    }
  }
  swift_bridgeObjectRetain();
  v8 = 0;
  *(_QWORD *)(v5 - 328) = MEMORY[0x1E0DEE9B8] + 8;
  v9 = *(_QWORD *)(v5 - 296);
  v10 = *(_QWORD *)(v5 - 264);
  v11 = v6;
  *(_QWORD *)(v5 - 336) = v4;
  v12 = *(_QWORD *)(v5 - 256);
  while (1)
  {
    v15 = *(_QWORD *)(v3 + 8 * v8 + 32);
    if (v15)
      break;
    *(_QWORD *)(v5 - 248) = 0;
    *(_QWORD *)(v5 - 240) = 0xE000000000000000;
    sub_1BB873E34();
    v13 = *(_QWORD *)(v5 - 248);
    v14 = *(_QWORD *)(v5 - 240);
    *(_QWORD *)(v5 - 192) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 - 216) = v13;
    *(_QWORD *)(v5 - 208) = v14;
LABEL_4:
    ++v8;
    __swift_destroy_boxed_opaque_existential_1(v5 - 184);
    sub_1BA76EAE0((_OWORD *)(v5 - 216), (_OWORD *)(v5 - 184));
    if (*(_QWORD *)(v5 - 72) == v8)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  sub_1BA747A10(v5 - 184, v5 - 248);
  swift_bridgeObjectRetain();
  v16 = swift_dynamicCast();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v16)
  {
    v17(v10, 0, 1, v9);
    v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (v18(v10, 1, v9) == 1)
      goto LABEL_26;
    v19 = v10;
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
    v20(v12, v19, v9);
    *(_QWORD *)(v5 - 192) = v9;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v5 - 216));
    if (*(_QWORD *)(v15 + 16))
    {
      *(_QWORD *)(v5 - 272) = boxed_opaque_existential_0;
      *(_QWORD *)(v5 - 312) = v20;
      v22 = *(_QWORD *)(v5 - 336);
      sub_1BB86BF74();
      v23 = *(_QWORD *)(v5 - 320);
      v24 = *(_QWORD *)(v5 - 280);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v22, 1, v24) != 1)
      {
        v26 = *(_QWORD *)(v5 - 360);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v26, v22, v24);
        v27 = sub_1BB86BF38();
        if (v27)
          v28 = v27;
        else
          v28 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v27);
        v47[2] = *(_QWORD *)(v5 - 352);
        v29 = *(_QWORD *)(v5 - 288);
        v30 = sub_1BA7F0E2C((void (*)(_QWORD))sub_1BA7F10DC, (uint64_t)v47, v15);
        *(_QWORD *)(v5 - 288) = v29;
        *(_QWORD *)(v5 - 248) = v28;
        sub_1BA7F0E18(v30);
        sub_1BB86BF44();
        v31 = *(_QWORD *)(v5 - 368);
        sub_1BB86BF80();
        (*(void (**)(uint64_t, _QWORD))(v23 + 8))(v26, *(_QWORD *)(v5 - 280));
        v11 = *(_QWORD *)(v5 - 304);
        v32 = *(_QWORD *)(v5 - 376);
        v9 = *(_QWORD *)(v5 - 296);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v32, v12, v9);
        if (v18(v31, 1, v9) == 1)
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 - 312))(*(_QWORD *)(v5 - 272), v32, v9);
          sub_1BA6AA068(v31, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v32, v9);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 - 312))(*(_QWORD *)(v5 - 272), v31, v9);
        }
        v3 = *(_QWORD *)(v5 - 344);
        v10 = *(_QWORD *)(v5 - 264);
        v25 = *(_QWORD *)(v5 - 256);
        goto LABEL_20;
      }
      sub_1BA6AA068(v22, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      v11 = *(_QWORD *)(v5 - 304);
      v9 = *(_QWORD *)(v5 - 296);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v11 + 16))(*(_QWORD *)(v5 - 272), v12, v9);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v12, v9);
    }
    v10 = *(_QWORD *)(v5 - 264);
    v25 = v12;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v25, v9);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v17(v10, 1, 1, v9);
LABEL_26:
  sub_1BA6AA068(v10, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v46 = 5001813;
  v46[1] = 0xE300000000000000;
  v46[2] = 7958081;
  v46[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v5 - 184);
  __swift_destroy_boxed_opaque_existential_1(v5 - 152);
  return swift_bridgeObjectRelease();
}

void sub_1BB317F34(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB319FB4(a1, a2, a3, a4, a5, (uint64_t)sub_1BA7F10DC, a6);
}

void sub_1BB317F60(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB318FC0(a1, a2, a3, a4, a5, 0xD000000000000016, 0x80000001BB9851E0, a6, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t)sub_1BA7F10DC, (uint64_t)sub_1BA7F10DC);
}

void sub_1BB317FBC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD v29[10];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;

  v34 = a5;
  v29[1] = a3;
  v29[0] = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v7);
  v29[8] = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v30 = sub_1BB86BFF8();
  v10 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29[4] = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v13);
  v29[3] = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v33 = (char *)v29 - v17;
  MEMORY[0x1E0C80A78](v18);
  v36 = (char *)v29 - v19;
  v20 = sub_1BB86C67C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v29[2] = (char *)v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v35 = (char *)v29 - v24;
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  v27 = (char *)sub_1BB31824C + 4 * word_1BB908244[a1 >> 60];
  v29[6] = a4;
  v29[5] = v10;
  v31 = v28;
  v32 = v21;
  __asm { BR              X10 }
}

uint64_t sub_1BB31824C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD v42[16];

  *(_QWORD *)(v7 - 184) = v0;
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  sub_1BA747A10(v7 - 152, v7 - 184);
  v8 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v7 - 256) = v8;
  if (!v8)
  {
LABEL_22:
    sub_1BA76EAE0((_OWORD *)(v7 - 184), (_OWORD *)(v7 - 120));
    __swift_destroy_boxed_opaque_existential_1(v7 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v7 - 120, v7 - 184);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1(v7 - 120);
      v34 = *(_BYTE *)(v7 - 216) & 1;
    }
    else
    {
      v34 = type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v36 = v35;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 - 120), *(_QWORD *)(v7 - 96));
      swift_getDynamicType();
      v37 = *(_QWORD *)(v7 - 392);
      swift_bridgeObjectRetain();
      v38 = sub_1BB874734();
      *v36 = *(_QWORD *)(v7 - 400);
      v36[1] = v37;
      v36[2] = 1819242306;
      v36[3] = 0xE400000000000000;
      v36[4] = v38;
      v36[5] = v39;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1(v7 - 120);
    }
    return v34 & 1;
  }
  *(_QWORD *)(v7 - 328) = v6;
  swift_bridgeObjectRetain();
  v9 = 0;
  *(_QWORD *)(v7 - 344) = MEMORY[0x1E0DEE9B8] + 8;
  *(_QWORD *)(v7 - 288) = v3;
  while (1)
  {
    v12 = *(_QWORD *)(v5 + 8 * v9 + 32);
    if (v12)
      break;
    *(_QWORD *)(v7 - 248) = 0;
    *(_QWORD *)(v7 - 240) = 0xE000000000000000;
    sub_1BB873E34();
    v10 = *(_QWORD *)(v7 - 248);
    v11 = *(_QWORD *)(v7 - 240);
    *(_QWORD *)(v7 - 192) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 - 216) = v10;
    *(_QWORD *)(v7 - 208) = v11;
LABEL_4:
    ++v9;
    __swift_destroy_boxed_opaque_existential_1(v7 - 184);
    sub_1BA76EAE0((_OWORD *)(v7 - 216), (_OWORD *)(v7 - 184));
    if (*(_QWORD *)(v7 - 256) == v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  sub_1BA747A10(v7 - 184, v7 - 248);
  swift_bridgeObjectRetain();
  v13 = swift_dynamicCast();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v13)
  {
    v14(v3, 0, 1, v4);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
    if (v15(v3, 1, v4) == 1)
      goto LABEL_26;
    v16 = v5;
    v17 = v3;
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
    v19 = *(_QWORD *)(v7 - 264);
    v18(v19, v17, v4);
    *(_QWORD *)(v7 - 192) = v4;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v7 - 216));
    *(_QWORD *)(v7 - 248) = *(_QWORD *)(v7 - 272);
    if (*(_QWORD *)(v12 + 16))
    {
      *(_QWORD *)(v7 - 280) = boxed_opaque_existential_0;
      *(_QWORD *)(v7 - 304) = v18;
      v21 = *(_QWORD *)(v7 - 336);
      sub_1BB86BF74();
      v22 = v2;
      v23 = *(_QWORD *)(v7 - 320);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v21, 1, v23) != 1)
      {
        v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
        v26 = *(_QWORD *)(v7 - 368);
        v25(v26, v21, v23);
        v27 = sub_1BB86BF38();
        if (v27)
          v28 = v27;
        else
          v28 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v27);
        v42[2] = v7 - 248;
        v29 = *(_QWORD *)(v7 - 328);
        v30 = sub_1BA7F0E2C((void (*)(_QWORD))sub_1BA7F10DC, (uint64_t)v42, v12);
        *(_QWORD *)(v7 - 328) = v29;
        *(_QWORD *)(v7 - 72) = v28;
        sub_1BA7F0E18(v30);
        sub_1BB86BF44();
        v31 = *(_QWORD *)(v7 - 376);
        sub_1BB86BF80();
        v32 = v31;
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v26, v23);
        v1 = *(_QWORD *)(v7 - 296);
        v33 = *(_QWORD *)(v7 - 384);
        v4 = *(_QWORD *)(v7 - 312);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v33, v19, v4);
        if (v15(v32, 1, v4) == 1)
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 - 304))(*(_QWORD *)(v7 - 280), v33, v4);
          sub_1BA6AA068(v32, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v33, v4);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 - 304))(*(_QWORD *)(v7 - 280), v32, v4);
        }
        v5 = *(_QWORD *)(v7 - 352);
        v2 = *(_QWORD *)(v7 - 360);
        v3 = *(_QWORD *)(v7 - 288);
        v24 = *(_QWORD *)(v7 - 264);
        goto LABEL_20;
      }
      sub_1BA6AA068(v21, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      v1 = *(_QWORD *)(v7 - 296);
      v4 = *(_QWORD *)(v7 - 312);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 16))(*(_QWORD *)(v7 - 280), v19, v4);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v1 + 16))(boxed_opaque_existential_0, v19, v4);
    }
    v3 = *(_QWORD *)(v7 - 288);
    v24 = v19;
    v5 = v16;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v24, v4);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v14(v3, 1, 1, v4);
LABEL_26:
  sub_1BA6AA068(v3, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  v34 = type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v40 = 5001813;
  v40[1] = 0xE300000000000000;
  v40[2] = 7958081;
  v40[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v7 - 184);
  __swift_destroy_boxed_opaque_existential_1(v7 - 152);
  swift_bridgeObjectRelease();
  return v34 & 1;
}

void sub_1BB318F64(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB318FC0(a1, a2, a3, a4, a5, 0xD000000000000017, 0x80000001BB9851C0, a6, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t)sub_1BA7F10DC, (uint64_t)sub_1BA7F10DC);
}

void sub_1BB318FC0(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD v37[19];
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;

  v37[3] = a7;
  v37[2] = a6;
  v40 = a5;
  v37[5] = a3;
  v37[4] = a2;
  v37[1] = a8;
  v37[10] = a11;
  v37[6] = a9;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v13);
  v37[15] = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v38 = sub_1BB86BFF8();
  v16 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v37[9] = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v39 = (char *)v37 - v19;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v20);
  v37[8] = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v41 = (char *)v37 - v23;
  MEMORY[0x1E0C80A78](v24);
  v37[18] = (char *)v37 - v25;
  MEMORY[0x1E0C80A78](v26);
  v43 = (char *)v37 - v27;
  v28 = sub_1BB86C67C();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v37[7] = (char *)v37 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v42 = (char *)v37 - v32;
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  v35 = (char *)sub_1BB319294 + 4 * word_1BB908260[a1 >> 60];
  v37[12] = a4;
  v37[11] = v16;
  v37[17] = v36;
  v37[16] = v29;
  __asm { BR              X10 }
}

uint64_t sub_1BB319294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD v42[16];

  *(_QWORD *)(v6 - 184) = v1;
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  sub_1BA747A10(v6 - 152, v6 - 184);
  v7 = *(_QWORD *)(v5 + 16);
  v8 = v5;
  *(_QWORD *)(v6 - 256) = v7;
  if (!v7)
  {
LABEL_22:
    sub_1BA76EAE0((_OWORD *)(v6 - 184), (_OWORD *)(v6 - 120));
    __swift_destroy_boxed_opaque_existential_1(v6 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v6 - 120, v6 - 184);
    if ((swift_dynamicCast() & 1) != 0)
    {
      result = __swift_destroy_boxed_opaque_existential_1(v6 - 120);
      **(_QWORD **)(v6 - 440) = *(_QWORD *)(v6 - 216);
    }
    else
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v36 = v35;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 96));
      swift_getDynamicType();
      v37 = *(_QWORD *)(v6 - 408);
      swift_bridgeObjectRetain();
      v38 = sub_1BB874734();
      *v36 = *(_QWORD *)(v6 - 416);
      v36[1] = v37;
      v39 = *(_QWORD *)(v6 - 424);
      v36[2] = *(_QWORD *)(v6 - 432);
      v36[3] = v39;
      v36[4] = v38;
      v36[5] = v40;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1(v6 - 120);
    }
    return result;
  }
  *(_QWORD *)(v6 - 336) = v2;
  swift_bridgeObjectRetain();
  v9 = 0;
  *(_QWORD *)(v6 - 344) = MEMORY[0x1E0DEE9B8] + 8;
  v10 = *(_QWORD *)(v6 - 272);
  v11 = *(_QWORD *)(v6 - 264);
  while (1)
  {
    v14 = *(_QWORD *)(v8 + 8 * v9 + 32);
    if (v14)
      break;
    *(_QWORD *)(v6 - 248) = 0;
    *(_QWORD *)(v6 - 240) = 0xE000000000000000;
    sub_1BB873E34();
    v12 = *(_QWORD *)(v6 - 248);
    v13 = *(_QWORD *)(v6 - 240);
    *(_QWORD *)(v6 - 192) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 - 216) = v12;
    *(_QWORD *)(v6 - 208) = v13;
LABEL_4:
    ++v9;
    __swift_destroy_boxed_opaque_existential_1(v6 - 184);
    sub_1BA76EAE0((_OWORD *)(v6 - 216), (_OWORD *)(v6 - 184));
    if (*(_QWORD *)(v6 - 256) == v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  sub_1BA747A10(v6 - 184, v6 - 248);
  swift_bridgeObjectRetain();
  v15 = swift_dynamicCast();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 56);
  if (v15)
  {
    v16(v10, 0, 1, v4);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 48);
    if (v17(v10, 1, v4) == 1)
      goto LABEL_26;
    v18 = v10;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32);
    v19(v11, v18, v4);
    *(_QWORD *)(v6 - 192) = v4;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v6 - 216));
    *(_QWORD *)(v6 - 248) = *(_QWORD *)(v6 - 280);
    if (*(_QWORD *)(v14 + 16))
    {
      *(_QWORD *)(v6 - 288) = boxed_opaque_existential_0;
      *(_QWORD *)(v6 - 304) = v19;
      v21 = *(_QWORD *)(v6 - 328);
      sub_1BB86BF74();
      v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
      v23 = v3;
      v24 = *(_QWORD *)(v6 - 296);
      if (v22(v21, 1, v24) != 1)
      {
        v26 = *(_QWORD *)(v6 - 376);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v26, v21, v24);
        v27 = sub_1BB86BF38();
        if (v27)
          v28 = v27;
        else
          v28 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v27);
        v42[2] = v6 - 248;
        v29 = *(_QWORD *)(v6 - 336);
        v30 = sub_1BA7F0E2C(*(void (**)(_QWORD))(v6 - 368), (uint64_t)v42, v14);
        *(_QWORD *)(v6 - 336) = v29;
        *(_QWORD *)(v6 - 72) = v28;
        sub_1BA7F0E18(v30);
        sub_1BB86BF44();
        v31 = *(_QWORD *)(v6 - 384);
        sub_1BB86BF80();
        v32 = v31;
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v26, v24);
        v0 = *(_QWORD *)(v6 - 320);
        v33 = *(_QWORD *)(v6 - 392);
        v4 = *(_QWORD *)(v6 - 312);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v33, v11, v4);
        if (v17(v32, 1, v4) == 1)
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 - 304))(*(_QWORD *)(v6 - 288), v33, v4);
          sub_1BA6AA068(v32, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v33, v4);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 - 304))(*(_QWORD *)(v6 - 288), v32, v4);
        }
        v8 = *(_QWORD *)(v6 - 352);
        v3 = *(_QWORD *)(v6 - 360);
        v10 = *(_QWORD *)(v6 - 272);
        v25 = *(_QWORD *)(v6 - 264);
        goto LABEL_20;
      }
      sub_1BA6AA068(v21, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      v0 = *(_QWORD *)(v6 - 320);
      v4 = *(_QWORD *)(v6 - 312);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 16))(*(_QWORD *)(v6 - 288), v11, v4);
      v3 = v23;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v0 + 16))(boxed_opaque_existential_0, v11, v4);
    }
    v10 = *(_QWORD *)(v6 - 272);
    v25 = v11;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v25, v4);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v16(v10, 1, 1, v4);
LABEL_26:
  sub_1BA6AA068(v10, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v41 = 5001813;
  v41[1] = 0xE300000000000000;
  v41[2] = 7958081;
  v41[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v6 - 184);
  __swift_destroy_boxed_opaque_existential_1(v6 - 152);
  return swift_bridgeObjectRelease();
}

void sub_1BB319FB4(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD v35[18];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;

  v35[10] = a6;
  v35[11] = a5;
  v35[4] = a3;
  v35[3] = a2;
  v35[2] = a7;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v36 = sub_1BB86BFF8();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35[9] = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v35[15] = (char *)v35 - v13;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v14);
  v35[8] = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v38 = (char *)v35 - v17;
  MEMORY[0x1E0C80A78](v18);
  v35[5] = (char *)v35 - v19;
  MEMORY[0x1E0C80A78](v20);
  v35[1] = (char *)v35 - v21;
  MEMORY[0x1E0C80A78](v22);
  v39 = (char *)v35 - v23;
  MEMORY[0x1E0C80A78](v24);
  v25 = sub_1BB86C67C();
  v35[16] = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v35[7] = (char *)v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v35[12] = (char *)v35 - v28;
  MEMORY[0x1E0C80A78](v29);
  MEMORY[0x1E0C80A78](v30);
  MEMORY[0x1E0C80A78](v31);
  v40 = (char *)v35 - v32;
  MEMORY[0x1E0C80A78](v33);
  v34 = (char *)sub_1BB31A2DC + 4 * word_1BB90827C[a1 >> 60];
  v35[13] = a4;
  __asm { BR              X10 }
}

uint64_t sub_1BB31A2DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD v41[16];

  *(_QWORD *)(v6 - 424) = v0;
  *(_QWORD *)(v6 - 184) = v2;
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  sub_1BA747A10(v6 - 152, v6 - 184);
  v7 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v6 - 72) = v7;
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 304);
LABEL_22:
    sub_1BA76EAE0((_OWORD *)(v6 - 184), (_OWORD *)(v6 - 120));
    __swift_destroy_boxed_opaque_existential_1(v6 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v6 - 120, v6 - 184);
    v29 = *(_QWORD *)(v6 - 392);
    v30 = swift_dynamicCast();
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    if ((v30 & 1) != 0)
    {
      v31(v29, 0, 1, v3);
      __swift_destroy_boxed_opaque_existential_1(v6 - 120);
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
      v33 = *(_QWORD *)(v6 - 424);
      v32(v33, v29, v3);
      return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v32)(*(_QWORD *)(v6 - 416), v33, v3);
    }
    else
    {
      v31(v29, 1, 1, v3);
      sub_1BA6AA068(v29, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v36 = v35;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 96));
      swift_getDynamicType();
      v37 = *(_QWORD *)(v6 - 400);
      swift_bridgeObjectRetain();
      v38 = sub_1BB874734();
      *v36 = *(_QWORD *)(v6 - 408);
      v36[1] = v37;
      v36[2] = 5001813;
      v36[3] = 0xE300000000000000;
      v36[4] = v38;
      v36[5] = v39;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1(v6 - 120);
    }
  }
  *(_QWORD *)(v6 - 296) = v1;
  swift_bridgeObjectRetain();
  v8 = 0;
  *(_QWORD *)(v6 - 312) = MEMORY[0x1E0DEE9B8] + 8;
  v9 = *(_QWORD *)(v6 - 304);
  v10 = *(_QWORD *)(v6 - 272);
  v11 = *(_QWORD *)(v6 - 336);
  *(_QWORD *)(v6 - 320) = v3;
  *(_QWORD *)(v6 - 384) = v5;
  while (1)
  {
    v14 = *(_QWORD *)(v4 + 8 * v8 + 32);
    if (!v14)
    {
      *(_QWORD *)(v6 - 248) = 0;
      *(_QWORD *)(v6 - 240) = 0xE000000000000000;
      sub_1BB873E34();
      v12 = *(_QWORD *)(v6 - 248);
      v13 = *(_QWORD *)(v6 - 240);
      *(_QWORD *)(v6 - 192) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v6 - 216) = v12;
      *(_QWORD *)(v6 - 208) = v13;
      goto LABEL_4;
    }
    sub_1BA747A10(v6 - 184, v6 - 248);
    swift_bridgeObjectRetain();
    v15 = swift_dynamicCast();
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    if (!v15)
      break;
    v16(v10, 0, 1, v3);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v17(v10, 1, v3) == 1)
      goto LABEL_26;
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    *(_QWORD *)(v6 - 256) = v18;
    v18(v11, v10, v3);
    *(_QWORD *)(v6 - 192) = v3;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v6 - 216));
    if (*(_QWORD *)(v14 + 16))
    {
      *(_QWORD *)(v6 - 264) = boxed_opaque_existential_0;
      sub_1BB86BF74();
      v20 = *(_QWORD *)(v6 - 280);
      v21 = *(_QWORD *)(v6 - 288);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v5, 1, v21) == 1)
      {
        sub_1BA6AA068(v5, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        v3 = *(_QWORD *)(v6 - 320);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v9 + 16))(*(_QWORD *)(v6 - 264), v11, v3);
        v10 = *(_QWORD *)(v6 - 272);
      }
      else
      {
        v22 = *(_QWORD *)(v6 - 360);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v22, v5, v21);
        v23 = sub_1BB86BF38();
        if (v23)
          v24 = v23;
        else
          v24 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v23);
        v41[2] = *(_QWORD *)(v6 - 344);
        v25 = *(_QWORD *)(v6 - 296);
        v26 = sub_1BA7F0E2C(*(void (**)(_QWORD))(v6 - 352), (uint64_t)v41, v14);
        *(_QWORD *)(v6 - 296) = v25;
        *(_QWORD *)(v6 - 248) = v24;
        sub_1BA7F0E18(v26);
        sub_1BB86BF44();
        v27 = *(_QWORD *)(v6 - 368);
        sub_1BB86BF80();
        v9 = *(_QWORD *)(v6 - 304);
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
        v28 = *(_QWORD *)(v6 - 376);
        v3 = *(_QWORD *)(v6 - 320);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v28, v11, v3);
        if (v17(v27, 1, v3) == 1)
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 - 256))(*(_QWORD *)(v6 - 264), v28, v3);
          sub_1BA6AA068(v27, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v28, v3);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 - 256))(*(_QWORD *)(v6 - 264), v27, v3);
        }
        v4 = *(_QWORD *)(v6 - 328);
        v5 = *(_QWORD *)(v6 - 384);
        v10 = *(_QWORD *)(v6 - 272);
        v11 = *(_QWORD *)(v6 - 336);
      }
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(boxed_opaque_existential_0, v11, v3);
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v3);
    swift_bridgeObjectRelease();
LABEL_4:
    ++v8;
    __swift_destroy_boxed_opaque_existential_1(v6 - 184);
    sub_1BA76EAE0((_OWORD *)(v6 - 216), (_OWORD *)(v6 - 184));
    if (*(_QWORD *)(v6 - 72) == v8)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  v16(v10, 1, 1, v3);
LABEL_26:
  sub_1BA6AA068(v10, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v40 = 5001813;
  v40[1] = 0xE300000000000000;
  v40[2] = 7958081;
  v40[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v6 - 184);
  __swift_destroy_boxed_opaque_existential_1(v6 - 152);
  return swift_bridgeObjectRelease();
}

void sub_1BB31B0D8(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[22];
  uint64_t v35;
  char *v36;
  char *v37;

  v34[5] = a7;
  v34[4] = a6;
  v34[13] = a5;
  v34[7] = a3;
  v34[6] = a2;
  v34[3] = a8;
  v34[12] = a11;
  v34[16] = a10;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v13);
  v34[18] = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v35 = sub_1BB86BFF8();
  v34[19] = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34[11] = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v18);
  v34[10] = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v34[20] = (char *)v34 - v21;
  MEMORY[0x1E0C80A78](v22);
  v34[1] = (char *)v34 - v23;
  MEMORY[0x1E0C80A78](v24);
  v36 = (char *)v34 - v25;
  v26 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v26);
  v34[9] = (char *)v34 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v34[14] = (char *)v34 - v29;
  MEMORY[0x1E0C80A78](v30);
  MEMORY[0x1E0C80A78](v31);
  v37 = (char *)v34 - v32;
  v33 = (char *)sub_1BB31B39C + 4 * word_1BB908298[a1 >> 60];
  v34[15] = a4;
  __asm { BR              X10 }
}

uint64_t sub_1BB31B39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v39[16];

  *(_QWORD *)(v6 - 184) = v0;
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  sub_1BA747A10(v6 - 152, v6 - 184);
  v7 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v6 - 72) = v7;
  if (!v7)
  {
LABEL_21:
    sub_1BA76EAE0((_OWORD *)(v6 - 184), (_OWORD *)(v6 - 120));
    __swift_destroy_boxed_opaque_existential_1(v6 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v6 - 120, v6 - 184);
    if ((swift_dynamicCast() & 1) != 0)
    {
      result = __swift_destroy_boxed_opaque_existential_1(v6 - 120);
      **(_QWORD **)(v6 - 424) = *(_QWORD *)(v6 - 216);
    }
    else
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v33 = v32;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 96));
      swift_getDynamicType();
      v34 = *(_QWORD *)(v6 - 392);
      swift_bridgeObjectRetain();
      v35 = sub_1BB874734();
      *v33 = *(_QWORD *)(v6 - 400);
      v33[1] = v34;
      v36 = *(_QWORD *)(v6 - 408);
      v33[2] = *(_QWORD *)(v6 - 416);
      v33[3] = v36;
      v33[4] = v35;
      v33[5] = v37;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1(v6 - 120);
    }
    return result;
  }
  *(_QWORD *)(v6 - 432) = v3;
  *(_QWORD *)(v6 - 280) = v5;
  swift_bridgeObjectRetain();
  v8 = 0;
  *(_QWORD *)(v6 - 320) = MEMORY[0x1E0DEE9B8] + 8;
  v9 = *(_QWORD *)(v6 - 272);
  v10 = *(_QWORD *)(v6 - 288);
  v11 = *(_QWORD *)(v6 - 336);
  v12 = v1;
  *(_QWORD *)(v6 - 312) = v4;
  *(_QWORD *)(v6 - 384) = v2;
  while (1)
  {
    v15 = *(_QWORD *)(v12 + 8 * v8 + 32);
    if (!v15)
    {
      *(_QWORD *)(v6 - 248) = 0;
      *(_QWORD *)(v6 - 240) = 0xE000000000000000;
      sub_1BB873E34();
      v13 = *(_QWORD *)(v6 - 248);
      v14 = *(_QWORD *)(v6 - 240);
      *(_QWORD *)(v6 - 192) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v6 - 216) = v13;
      *(_QWORD *)(v6 - 208) = v14;
      goto LABEL_4;
    }
    sub_1BA747A10(v6 - 184, v6 - 248);
    swift_bridgeObjectRetain();
    v16 = swift_dynamicCast();
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    if (!v16)
      break;
    v17(v10, 0, 1, v2);
    v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (v18(v10, 1, v2) == 1)
      goto LABEL_25;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    *(_QWORD *)(v6 - 256) = v19;
    v19(v11, v10, v2);
    *(_QWORD *)(v6 - 192) = v2;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v6 - 216));
    if (*(_QWORD *)(v15 + 16))
    {
      *(_QWORD *)(v6 - 264) = boxed_opaque_existential_0;
      v21 = *(_QWORD *)(v6 - 304);
      sub_1BB86BF74();
      v22 = *(_QWORD *)(v6 - 296);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v9) == 1)
      {
        sub_1BA6AA068(v21, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        v4 = *(_QWORD *)(v6 - 312);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v4 + 16))(*(_QWORD *)(v6 - 264), v11, v2);
        v10 = *(_QWORD *)(v6 - 288);
      }
      else
      {
        v23 = *(_QWORD *)(v6 - 360);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v23, v21, v9);
        v24 = sub_1BB86BF38();
        if (v24)
          v25 = v24;
        else
          v25 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v24);
        v39[2] = *(_QWORD *)(v6 - 344);
        v26 = *(_QWORD *)(v6 - 280);
        v27 = sub_1BA7F0E2C(*(void (**)(_QWORD))(v6 - 352), (uint64_t)v39, v15);
        *(_QWORD *)(v6 - 280) = v26;
        *(_QWORD *)(v6 - 248) = v25;
        sub_1BA7F0E18(v27);
        sub_1BB86BF44();
        v28 = *(_QWORD *)(v6 - 368);
        sub_1BB86BF80();
        v29 = v23;
        v2 = *(_QWORD *)(v6 - 384);
        (*(void (**)(uint64_t, _QWORD))(v22 + 8))(v29, *(_QWORD *)(v6 - 272));
        v4 = *(_QWORD *)(v6 - 312);
        v30 = *(_QWORD *)(v6 - 376);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v30, v11, v2);
        if (v18(v28, 1, v2) == 1)
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 - 256))(*(_QWORD *)(v6 - 264), v30, v2);
          sub_1BA6AA068(v28, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v30, v2);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 - 256))(*(_QWORD *)(v6 - 264), v28, v2);
        }
        v12 = *(_QWORD *)(v6 - 328);
        v10 = *(_QWORD *)(v6 - 288);
        v11 = *(_QWORD *)(v6 - 336);
        v9 = *(_QWORD *)(v6 - 272);
      }
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(boxed_opaque_existential_0, v11, v2);
    }
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v2);
    swift_bridgeObjectRelease();
LABEL_4:
    ++v8;
    __swift_destroy_boxed_opaque_existential_1(v6 - 184);
    sub_1BA76EAE0((_OWORD *)(v6 - 216), (_OWORD *)(v6 - 184));
    if (*(_QWORD *)(v6 - 72) == v8)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  v17(v10, 1, 1, v2);
LABEL_25:
  sub_1BA6AA068(v10, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v38 = 5001813;
  v38[1] = 0xE300000000000000;
  v38[2] = 7958081;
  v38[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v6 - 184);
  __swift_destroy_boxed_opaque_existential_1(v6 - 152);
  return swift_bridgeObjectRelease();
}

void sub_1BB31C0FC(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_1BB31C1B8(a1, a2, a3, a4, 0x6F4674616D726F46, 0xEA0000000000746ELL, a5, (uint64_t)&type metadata for FormatFont, (uint64_t)sub_1BA7F10DC, (uint64_t)sub_1BA7F10DC);
}

void sub_1BB31C158(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_1BB31C1B8(a1, a2, a3, a4, 0x6F4374616D726F46, 0xEB00000000726F6CLL, a5, (uint64_t)&type metadata for FormatColor, (uint64_t)sub_1BAFEE694, (uint64_t)sub_1BA7F10DC);
}

void sub_1BB31C1B8(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD v37[19];
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;

  v37[6] = a6;
  v37[5] = a5;
  v37[13] = a4;
  v37[14] = a3;
  v37[7] = a2;
  v37[4] = a7;
  v37[11] = a10;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v11);
  v37[15] = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v39 = (char *)v37 - v14;
  v38 = sub_1BB86BFF8();
  v15 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v37[10] = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v37[12] = (char *)v37 - v18;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v19);
  v37[9] = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v40 = (char *)v37 - v22;
  MEMORY[0x1E0C80A78](v23);
  v37[1] = (char *)v37 - v24;
  MEMORY[0x1E0C80A78](v25);
  v42 = (char *)v37 - v26;
  v27 = sub_1BB86C67C();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v37[8] = (char *)v37 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v41 = (char *)v37 - v31;
  MEMORY[0x1E0C80A78](v32);
  MEMORY[0x1E0C80A78](v33);
  v43 = (char *)v37 - v34;
  v35 = (char *)sub_1BB31C490 + 4 * word_1BB9082B4[a1 >> 60];
  v37[18] = v15;
  v37[17] = v36;
  v37[16] = v28;
  __asm { BR              X10 }
}

uint64_t sub_1BB31C490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD v45[16];

  *(_QWORD *)(v6 - 472) = v0;
  *(_QWORD *)(v6 - 288) = v4;
  v7 = *(_QWORD *)(v6 - 384);
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  v8 = v7;
  sub_1BA747A10(v6 - 152, v6 - 184);
  v9 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v6 - 304) = v9;
  if (!v9)
  {
LABEL_22:
    sub_1BA76EAE0((_OWORD *)(v6 - 184), (_OWORD *)(v6 - 120));
    __swift_destroy_boxed_opaque_existential_1(v6 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v6 - 120, v6 - 288);
    if ((swift_dynamicCast() & 1) != 0)
    {
      result = __swift_destroy_boxed_opaque_existential_1(v6 - 120);
      **(_QWORD **)(v6 - 464) = *(_QWORD *)(v6 - 184);
    }
    else
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v39 = v38;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 96));
      swift_getDynamicType();
      v40 = *(_QWORD *)(v6 - 440);
      swift_bridgeObjectRetain();
      v41 = sub_1BB874734();
      *v39 = *(_QWORD *)(v6 - 472);
      v39[1] = v40;
      v42 = *(_QWORD *)(v6 - 448);
      v39[2] = *(_QWORD *)(v6 - 456);
      v39[3] = v42;
      v39[4] = v41;
      v39[5] = v43;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1(v6 - 120);
    }
    return result;
  }
  *(_QWORD *)(v6 - 480) = v1;
  *(_QWORD *)(v6 - 336) = v5;
  swift_bridgeObjectRetain();
  v10 = 0;
  *(_QWORD *)(v6 - 400) = MEMORY[0x1E0DEE9B8] + 8;
  v11 = *(__int128 **)(v6 - 392);
  v12 = *(_QWORD *)(v6 - 320);
  v13 = *(_QWORD *)(v6 - 312);
  while (1)
  {
    v16 = *(_QWORD *)(v8 + 8 * v10 + 32);
    if (v16)
      break;
    *(_QWORD *)(v6 - 288) = 0;
    *(_QWORD *)(v6 - 280) = 0xE000000000000000;
    sub_1BB873E34();
    v14 = *(_QWORD *)(v6 - 288);
    v15 = *(_QWORD *)(v6 - 280);
    *(_QWORD *)(v6 - 192) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 - 216) = v14;
    *(_QWORD *)(v6 - 208) = v15;
LABEL_4:
    ++v10;
    __swift_destroy_boxed_opaque_existential_1(v6 - 184);
    sub_1BA76EAE0((_OWORD *)(v6 - 216), (_OWORD *)(v6 - 184));
    if (*(_QWORD *)(v6 - 304) == v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  sub_1BA747A10(v6 - 184, v6 - 288);
  swift_bridgeObjectRetain();
  v17 = swift_dynamicCast();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  if (v17)
  {
    v18(v12, 0, 1, v2);
    v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v19(v12, 1, v2) == 1)
      goto LABEL_26;
    v20 = v12;
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v21(v13, v20, v2);
    *(_QWORD *)(v6 - 192) = v2;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v6 - 216));
    *(_QWORD *)(v6 - 224) = *((_QWORD *)v11 + 8);
    v23 = v11[3];
    *(_OWORD *)(v6 - 256) = v11[2];
    *(_OWORD *)(v6 - 240) = v23;
    v24 = *v11;
    *(_OWORD *)(v6 - 272) = v11[1];
    *(_OWORD *)(v6 - 288) = v24;
    *(_QWORD *)(v6 - 296) = v16;
    if (*(_QWORD *)(v16 + 16))
    {
      *(_QWORD *)(v6 - 328) = boxed_opaque_existential_0;
      v25 = *(_QWORD *)(v6 - 376);
      sub_1BB86BF74();
      v26 = *(_QWORD *)(v6 - 352);
      v27 = *(_QWORD *)(v6 - 344);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v25, 1, v27) != 1)
      {
        v29 = *(_QWORD *)(v6 - 416);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v29, v25, v27);
        v30 = sub_1BB86BF38();
        if (v30)
          v31 = v30;
        else
          v31 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v30);
        v45[2] = v6 - 288;
        v32 = *(_QWORD *)(v6 - 336);
        v33 = sub_1BA7F0E2C(*(void (**)(_QWORD))(v6 - 408), (uint64_t)v45, *(_QWORD *)(v6 - 296));
        *(_QWORD *)(v6 - 336) = v32;
        *(_QWORD *)(v6 - 72) = v31;
        sub_1BA7F0E18(v33);
        sub_1BB86BF44();
        v34 = *(_QWORD *)(v6 - 424);
        sub_1BB86BF80();
        v35 = v34;
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v27);
        v3 = *(_QWORD *)(v6 - 368);
        v36 = *(_QWORD *)(v6 - 432);
        v2 = *(_QWORD *)(v6 - 360);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v36, v13, v2);
        if (v19(v35, 1, v2) == 1)
        {
          v21(*(_QWORD *)(v6 - 328), v36, v2);
          sub_1BA6AA068(v35, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v36, v2);
          v21(*(_QWORD *)(v6 - 328), v35, v2);
        }
        v8 = *(_QWORD *)(v6 - 384);
        v11 = *(__int128 **)(v6 - 392);
        v12 = *(_QWORD *)(v6 - 320);
        v28 = *(_QWORD *)(v6 - 312);
        goto LABEL_20;
      }
      sub_1BA6AA068(v25, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      v3 = *(_QWORD *)(v6 - 368);
      v2 = *(_QWORD *)(v6 - 360);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(*(_QWORD *)(v6 - 328), v13, v2);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(boxed_opaque_existential_0, v13, v2);
    }
    v12 = *(_QWORD *)(v6 - 320);
    v28 = v13;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v28, v2);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v18(v12, 1, 1, v2);
LABEL_26:
  sub_1BA6AA068(v12, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v44 = 5001813;
  v44[1] = 0xE300000000000000;
  v44[2] = 7958081;
  v44[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v6 - 184);
  __swift_destroy_boxed_opaque_existential_1(v6 - 152);
  return swift_bridgeObjectRelease();
}

void _s8NewsFeed22FormatImageNodeBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

BOOL sub_1BB31D29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;

  if ((v7 & 0x1E) != 0)
  {
    v20 = v10;
    v16 = v10;
    v18 = v5;
    sub_1BA7147C0(v8, v14, v12, v16, v9, v7);
    sub_1BA6EF82C(v21, v18, v11, v13, a5, v6);
    sub_1BA6EF82C(v8, v14, v12, v20, v9, v7);
    return 0;
  }
  else
  {
    sub_1BA6EF82C(v21, v5, v11, v13, a5, v6);
    sub_1BA6EF82C(v8, v14, v12, v10, v9, v7);
    return v8 == v21;
  }
}

unint64_t sub_1BB31DA24(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB31DA48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB31DA48()
{
  unint64_t result;

  result = qword_1EF2C10A0;
  if (!qword_1EF2C10A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeBinding, &type metadata for FormatImageNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C10A0);
  }
  return result;
}

unint64_t sub_1BB31DA8C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5E8980();
  a1[2] = sub_1BA5B5BBC();
  result = sub_1BB31DAC0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB31DAC0()
{
  unint64_t result;

  result = qword_1EF2C10A8;
  if (!qword_1EF2C10A8)
  {
    result = MEMORY[0x1BCCE5B24]("ၟ+", &type metadata for FormatImageNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C10A8);
  }
  return result;
}

uint64_t destroy for FormatImageNodeBinding(uint64_t a1)
{
  return sub_1BA6EF82C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

uint64_t sub_1BB31DB1C(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, unint64_t, unint64_t))
{
  switch(a6 >> 5)
  {
    case 1:
    case 4:
      result = a7();
      break;
    case 3:
      result = a8(result, a2, a3, a3 >> 8);
      break;
    case 5:
      result = sub_1BA967F18(result, a2, a3, a4, a5, a6 & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))a7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for FormatImageNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(unsigned __int8 *)(a2 + 40);
  sub_1BA7147C0(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for FormatImageNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(unsigned __int8 *)(a2 + 40);
  sub_1BA7147C0(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(unsigned __int8 *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1BA6EF82C(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for FormatImageNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned int v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(unsigned __int8 *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1BA6EF82C(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t sub_1BB31DCB8(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 40) >> 1) & 0xF;
}

uint64_t sub_1BB31DCC4(uint64_t result)
{
  *(_BYTE *)(result + 40) &= 0xE1u;
  return result;
}

uint64_t sub_1BB31DCD4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = *(_BYTE *)(result + 40) & 0xE1 | (2 * (a2 & 0xF));
  return result;
}

ValueMetadata *type metadata accessor for FormatImageNodeBinding()
{
  return &type metadata for FormatImageNodeBinding;
}

uint64_t sub_1BB31DCFC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB31DD28()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB31DD64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB31DD8C()
{
  uint64_t v0;

  sub_1BA6F3F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB31DDC4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB31DDF8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB31DE24()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB31DE58()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB31DE7C()
{
  swift_release();
  return swift_deallocObject();
}

NewsFeed::SportsDataVisualizationResult __swiftcall SportsDataVisualizationResult.init(visualizations:)(NewsFeed::SportsDataVisualizationResult visualizations)
{
  NewsFeed::SportsDataVisualizationResult *v1;

  v1->visualizations._rawValue = visualizations.visualizations._rawValue;
  return visualizations;
}

uint64_t SportsDataVisualizationResult.visualizations.getter()
{
  return swift_bridgeObjectRetain();
}

void static SportsDataVisualizationResult.empty.getter(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

uint64_t SportsDataVisualizationResult.scores.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *v0;
  v7 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v2; ++i)
    {
      if (!(*(_QWORD *)(v1 + 8 * i + 32) >> 61))
      {
        v4 = swift_retain();
        MEMORY[0x1BCCE36AC](v4);
        if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.standings.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *v0;
  v7 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v2; ++i)
    {
      if (*(_QWORD *)(v1 + 8 * i + 32) >> 61 == 1)
      {
        v4 = swift_retain();
        MEMORY[0x1BCCE36AC](v4);
        if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.bracketGroups.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *v0;
  v7 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v2; ++i)
    {
      if (*(_QWORD *)(v1 + 8 * i + 32) >> 61 == 2)
      {
        v4 = swift_retain();
        MEMORY[0x1BCCE36AC](v4);
        if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.boxScores.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *v0;
  v7 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v2; ++i)
    {
      if (*(_QWORD *)(v1 + 8 * i + 32) >> 61 == 3)
      {
        v4 = swift_retain();
        MEMORY[0x1BCCE36AC](v4);
        if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.lineScores.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *v0;
  v7 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v2; ++i)
    {
      if (*(_QWORD *)(v1 + 8 * i + 32) >> 61 == 4)
      {
        v4 = swift_retain();
        MEMORY[0x1BCCE36AC](v4);
        if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.injuryReports.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *v0;
  v7 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v2; ++i)
    {
      if (*(_QWORD *)(v1 + 8 * i + 32) >> 61 == 5)
      {
        v4 = swift_retain();
        MEMORY[0x1BCCE36AC](v4);
        if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.keyPlayers.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *v0;
  v7 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v2; ++i)
    {
      if (*(_QWORD *)(v1 + 8 * i + 32) >> 61 == 6)
      {
        v4 = swift_retain();
        MEMORY[0x1BCCE36AC](v4);
        if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsEventVisualizationResult.score.getter()
{
  return swift_retain();
}

uint64_t SportsEventVisualizationResult.boxScores.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsEventVisualizationResult.lineScores.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsEventVisualizationResult.injuryReports.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsEventVisualizationResult.keyPlayers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsEventVisualizationResult.__allocating_init(visualizationResult:)()
{
  swift_allocObject();
  return SportsEventVisualizationResult.init(visualizationResult:)();
}

uint64_t SportsEventVisualizationResult.init(visualizationResult:)()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = SportsDataVisualizationResult.scores.getter();
  if (!(v2 >> 62))
  {
    result = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  result = sub_1BB873F30();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCE4630](0, v2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(_QWORD *)(v2 + 32);
    swift_retain();
LABEL_6:
    swift_bridgeObjectRelease();
    v1[2] = v4;
    swift_retain();
    v1[3] = SportsDataVisualizationResult.boxScores.getter();
    v1[4] = SportsDataVisualizationResult.lineScores.getter();
    v1[5] = SportsDataVisualizationResult.injuryReports.getter();
    v5 = SportsDataVisualizationResult.keyPlayers.getter();
    swift_bridgeObjectRelease();
    swift_release();
    v1[6] = v5;
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB31E780()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB31E7AC + 4 * byte_1BB908420[*v0]))(0x65726F6373, 0xE500000000000000);
}

uint64_t sub_1BB31E7AC()
{
  return 0x65726F6353786F62;
}

uint64_t sub_1BB31E7C8()
{
  return 0x726F6353656E696CLL;
}

uint64_t sub_1BB31E7E4()
{
  return 0x65527972756A6E69;
}

uint64_t sub_1BB31E808()
{
  return 0x6579616C5079656BLL;
}

uint64_t sub_1BB31E828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB31F6D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB31E84C()
{
  sub_1BB31EBA8();
  return sub_1BB874710();
}

uint64_t sub_1BB31E874()
{
  sub_1BB31EBA8();
  return sub_1BB87471C();
}

uint64_t SportsEventVisualizationResult.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsEventVisualizationResult.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SportsEventVisualizationResult.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  sub_1BB31F1E8(0, &qword_1EF2C10B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB31EBA8();
  sub_1BB8746C8();
  v12 = v3[2];
  HIBYTE(v11) = 0;
  type metadata accessor for SportsScoreDataVisualization();
  sub_1BA4A2870(&qword_1ED3A8550, (uint64_t (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsScoreDataVisualization);
  sub_1BB8741AC();
  if (!v2)
  {
    v12 = v3[3];
    HIBYTE(v11) = 1;
    sub_1BA81D804(0, &qword_1EF2C10C0, (void (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization);
    sub_1BB31EBEC();
    sub_1BB8741AC();
    v12 = v3[4];
    HIBYTE(v11) = 2;
    sub_1BA81D804(0, &qword_1EF2C10D8, (void (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization);
    sub_1BB31EC74();
    sub_1BB8741AC();
    v12 = v3[5];
    HIBYTE(v11) = 3;
    sub_1BA81D804(0, &qword_1EF2C10F0, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization);
    sub_1BB31ECFC();
    sub_1BB8741AC();
    v12 = v3[6];
    HIBYTE(v11) = 4;
    sub_1BA81D804(0, &qword_1EF2C1108, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization);
    sub_1BB31ED84();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB31EBA8()
{
  unint64_t result;

  result = qword_1EF2C10B8;
  if (!qword_1EF2C10B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9085E4, &type metadata for SportsEventVisualizationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C10B8);
  }
  return result;
}

unint64_t sub_1BB31EBEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2C10C8;
  if (!qword_1EF2C10C8)
  {
    sub_1BA81D804(255, &qword_1EF2C10C0, (void (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1EF2C10D0, (uint64_t (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsBoxScoreDataVisualization);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C10C8);
  }
  return result;
}

unint64_t sub_1BB31EC74()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2C10E0;
  if (!qword_1EF2C10E0)
  {
    sub_1BA81D804(255, &qword_1EF2C10D8, (void (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1EF2C10E8, (uint64_t (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsLineScoreDataVisualization);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C10E0);
  }
  return result;
}

unint64_t sub_1BB31ECFC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2C10F8;
  if (!qword_1EF2C10F8)
  {
    sub_1BA81D804(255, &qword_1EF2C10F0, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1EF2C1100, (uint64_t (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization, (uint64_t)&protocol conformance descriptor for SportsInjuryReportDataVisualization);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C10F8);
  }
  return result;
}

unint64_t sub_1BB31ED84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2C1110;
  if (!qword_1EF2C1110)
  {
    sub_1BA81D804(255, &qword_1EF2C1108, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1EF2C1118, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization, (uint64_t)&protocol conformance descriptor for SportsKeyPlayerDataVisualization);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C1110);
  }
  return result;
}

uint64_t SportsEventVisualizationResult.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SportsEventVisualizationResult.init(from:)(a1);
  return v2;
}

_QWORD *SportsEventVisualizationResult.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1BB31F1E8(0, &qword_1EF2C1120, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v11 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB31EBA8();
  sub_1BB87468C();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v5;
    type metadata accessor for SportsScoreDataVisualization();
    v12 = 0;
    sub_1BA4A2870((unint64_t *)&unk_1ED3A8558, (uint64_t (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsScoreDataVisualization);
    v9 = v11;
    sub_1BB8740D4();
    v1[2] = v13;
    sub_1BA81D804(0, &qword_1EF2C10C0, (void (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization);
    v12 = 1;
    sub_1BB31F244();
    sub_1BB8740D4();
    v1[3] = v13;
    sub_1BA81D804(0, &qword_1EF2C10D8, (void (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization);
    v12 = 2;
    sub_1BB31F2CC();
    sub_1BB8740D4();
    v1[4] = v13;
    sub_1BA81D804(0, &qword_1EF2C10F0, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization);
    v12 = 3;
    sub_1BB31F354();
    sub_1BB8740D4();
    v1[5] = v13;
    sub_1BA81D804(0, &qword_1EF2C1108, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization);
    v12 = 4;
    sub_1BB31F3DC();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    v1[6] = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1BB31F1E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB31EBA8();
    v7 = a3(a1, &type metadata for SportsEventVisualizationResult.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB31F244()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2C1128;
  if (!qword_1EF2C1128)
  {
    sub_1BA81D804(255, &qword_1EF2C10C0, (void (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1EF2C1130, (uint64_t (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsBoxScoreDataVisualization);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C1128);
  }
  return result;
}

unint64_t sub_1BB31F2CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2C1138;
  if (!qword_1EF2C1138)
  {
    sub_1BA81D804(255, &qword_1EF2C10D8, (void (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1EF2C1140, (uint64_t (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsLineScoreDataVisualization);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C1138);
  }
  return result;
}

unint64_t sub_1BB31F354()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2C1148;
  if (!qword_1EF2C1148)
  {
    sub_1BA81D804(255, &qword_1EF2C10F0, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1EF2C1150, (uint64_t (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization, (uint64_t)&protocol conformance descriptor for SportsInjuryReportDataVisualization);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C1148);
  }
  return result;
}

unint64_t sub_1BB31F3DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2C1158;
  if (!qword_1EF2C1158)
  {
    sub_1BA81D804(255, &qword_1EF2C1108, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1EF2C1160, (uint64_t (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization, (uint64_t)&protocol conformance descriptor for SportsKeyPlayerDataVisualization);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2C1158);
  }
  return result;
}

_QWORD *sub_1BB31F464@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = SportsEventVisualizationResult.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB31F4B8(_QWORD *a1)
{
  return SportsEventVisualizationResult.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResult()
{
  return &type metadata for SportsDataVisualizationResult;
}

uint64_t type metadata accessor for SportsEventVisualizationResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SportsEventVisualizationResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsEventVisualizationResult.__allocating_init(visualizationResult:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SportsEventVisualizationResult.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for SportsEventVisualizationResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB31F580 + 4 * byte_1BB90842A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB31F5B4 + 4 * byte_1BB908425[v4]))();
}

uint64_t sub_1BB31F5B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB31F5BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB31F5C4);
  return result;
}

uint64_t sub_1BB31F5D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB31F5D8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB31F5DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB31F5E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsEventVisualizationResult.CodingKeys()
{
  return &type metadata for SportsEventVisualizationResult.CodingKeys;
}

unint64_t sub_1BB31F604()
{
  unint64_t result;

  result = qword_1EF2C1168;
  if (!qword_1EF2C1168)
  {
    result = MEMORY[0x1BCCE5B24]("퀟+Hf\v", &type metadata for SportsEventVisualizationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1168);
  }
  return result;
}

unint64_t sub_1BB31F64C()
{
  unint64_t result;

  result = qword_1EF2C1170;
  if (!qword_1EF2C1170)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90852C, &type metadata for SportsEventVisualizationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1170);
  }
  return result;
}

unint64_t sub_1BB31F694()
{
  unint64_t result;

  result = qword_1EF2C1178;
  if (!qword_1EF2C1178)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB908554, &type metadata for SportsEventVisualizationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1178);
  }
  return result;
}

uint64_t sub_1BB31F6D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6353786F62 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F6353656E696CLL && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65527972756A6E69 && a2 == 0xED00007374726F70 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6579616C5079656BLL && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t FormatStateViewNodeStateLayoutAttributes.state.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNodeStateLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNodeStateLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t sub_1BB31F968()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0x6574617473;
}

uint64_t sub_1BB31F9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB3201E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB31F9E8()
{
  sub_1BB31FC4C();
  return sub_1BB874710();
}

uint64_t sub_1BB31FA10()
{
  sub_1BB31FC4C();
  return sub_1BB87471C();
}

uint64_t FormatStateViewNodeStateLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FormatStateViewNodeStateLayoutAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FormatStateViewNodeStateLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  sub_1BB31FF30(0, &qword_1EF2C1180, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB31FC4C();
  sub_1BB8746C8();
  LOBYTE(v12) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + 32);
    HIBYTE(v11) = 1;
    type metadata accessor for FormatLayoutAttributes();
    sub_1BA4A2870(&qword_1ED3C9F28, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
    sub_1BB8741AC();
    v12 = *(_QWORD *)(v3 + 40);
    HIBYTE(v11) = 2;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA4A2870(&qword_1EF2AC0C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB31FC4C()
{
  unint64_t result;

  result = qword_1EF2C1188;
  if (!qword_1EF2C1188)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9087C4, &type metadata for FormatStateViewNodeStateLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1188);
  }
  return result;
}

uint64_t FormatStateViewNodeStateLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatStateViewNodeStateLayoutAttributes.init(from:)(a1);
  return v2;
}

_QWORD *FormatStateViewNodeStateLayoutAttributes.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1BB31FF30(0, &qword_1EF2C1190, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v12 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB31FC4C();
  sub_1BB87468C();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v5;
    LOBYTE(v14) = 0;
    v9 = v12;
    v1[2] = sub_1BB874098();
    v1[3] = v10;
    type metadata accessor for FormatLayoutAttributes();
    v13 = 1;
    sub_1BA4A2870(&qword_1ED3C9F30, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
    sub_1BB8740D4();
    v1[4] = v14;
    type metadata accessor for FormatContextLayoutOptions();
    v13 = 2;
    sub_1BA4A2870(&qword_1EF2AC0F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    v1[5] = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1BB31FF30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB31FC4C();
    v7 = a3(a1, &type metadata for FormatStateViewNodeStateLayoutAttributes.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *sub_1BB31FF8C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatStateViewNodeStateLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB31FFE0(_QWORD *a1)
{
  return FormatStateViewNodeStateLayoutAttributes.encode(to:)(a1);
}

uint64_t type metadata accessor for FormatStateViewNodeStateLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatStateViewNodeStateLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatStateViewNodeStateLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for FormatStateViewNodeStateLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB320090 + 4 * byte_1BB908645[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB3200C4 + 4 * byte_1BB908640[v4]))();
}

uint64_t sub_1BB3200C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3200CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3200D4);
  return result;
}

uint64_t sub_1BB3200E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3200E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB3200EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3200F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatStateViewNodeStateLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatStateViewNodeStateLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB320114()
{
  unint64_t result;

  result = qword_1EF2C1198;
  if (!qword_1EF2C1198)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90879C, &type metadata for FormatStateViewNodeStateLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1198);
  }
  return result;
}

unint64_t sub_1BB32015C()
{
  unint64_t result;

  result = qword_1EF2C11A0;
  if (!qword_1EF2C11A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90870C, &type metadata for FormatStateViewNodeStateLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C11A0);
  }
  return result;
}

unint64_t sub_1BB3201A4()
{
  unint64_t result;

  result = qword_1EF2C11A8;
  if (!qword_1EF2C11A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB908734, &type metadata for FormatStateViewNodeStateLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C11A8);
  }
  return result;
}

uint64_t sub_1BB3201E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB965740 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t FormatCustomItemDefinition.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FormatCustomItemDefinition.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA882880(*a1, *a2);
}

unint64_t sub_1BB32033C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB320360();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB320360()
{
  unint64_t result;

  result = qword_1EF2C11B0;
  if (!qword_1EF2C11B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomItemDefinition, &type metadata for FormatCustomItemDefinition);
    atomic_store(result, (unint64_t *)&qword_1EF2C11B0);
  }
  return result;
}

unint64_t sub_1BB3203A4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5E1330();
  a1[2] = sub_1BA825364();
  result = sub_1BB3203D8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3203D8()
{
  unint64_t result;

  result = qword_1EF2C11B8;
  if (!qword_1EF2C11B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomItemDefinition, &type metadata for FormatCustomItemDefinition);
    atomic_store(result, (unint64_t *)&qword_1EF2C11B8);
  }
  return result;
}

uint64_t sub_1BB32041C(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA882880(*a1, *a2);
}

ValueMetadata *type metadata accessor for FormatCustomItemDefinition()
{
  return &type metadata for FormatCustomItemDefinition;
}

unint64_t _s8NewsFeed18FormatHOverlayNodeC4sizeAA0C4SizeOvg_0@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 88);
  *a1 = v3;
  return sub_1BA71CA6C(v3);
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC11adjustmentsSayAA0C10AdjustmentOGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC8childrenSayAA0c9SourceMapE0VGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatHOverlayNode.reversed.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC10identifierSSvg_0()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC10targetPathSaySSGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC4nameSSSgvg_0()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC11descriptionSSSgvg_0()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*FormatHOverlayNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatHOverlayNode.targetIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*FormatHOverlayNode.targetPath.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatHOverlayNode.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatHOverlayNode.description.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatHOverlayNode.size.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatHOverlayNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatHOverlayNode.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatHOverlayNode.reversed.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatHOverlayNode.reversed.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatHOverlayNode.__allocating_init(identifier:targetIdentifier:targetPath:name:description:size:adjustments:children:reversed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v19;

  v19 = swift_allocObject();
  FormatHOverlayNode.init(identifier:targetIdentifier:targetPath:name:description:size:adjustments:children:reversed:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  return v19;
}

uint64_t FormatHOverlayNode.init(identifier:targetIdentifier:targetPath:name:description:size:adjustments:children:reversed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, char a13)
{
  return sub_1BA61B3F0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t FormatHOverlayNode.__deallocating_deinit()
{
  FormatHOverlayNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB3209B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BAE98550(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB3209D8(_QWORD *a1)
{
  return FormatHOverlayNode.encode(to:)(a1);
}

uint64_t sub_1BB3209F8(uint64_t *a1, uint64_t *a2)
{
  return static FormatHOverlayNode.== infix(_:_:)(*a1, *a2);
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC10identifierSSvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.identifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC10targetPathSaySSGvs_0(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.targetPath.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BB320B1C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 56) = v3;
  *(_QWORD *)(v4 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC4nameSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BB320C08(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 72) = v3;
  *(_QWORD *)(v4 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC11descriptionSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.description.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BB320CF4(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 88);
  *(_QWORD *)(v3 + 88) = v2;
  sub_1BA71CA6C(v2);
  return sub_1BA719718(v4);
}

unint64_t _s8NewsFeed18FormatHOverlayNodeC4sizeAA0C4SizeOvs_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 88) = v2;
  return sub_1BA719718(v3);
}

uint64_t (*FormatVOverlayNode.size.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC11adjustmentsSayAA0C10AdjustmentOGvs_0(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BB320E58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 104) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC8childrenSayAA0c9SourceMapE0VGvs_0(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 104) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatVOverlayNode.reversed.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed18FormatHOverlayNodeCfd_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BB320FCC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF7516C(&qword_1EF2C11C0, type metadata accessor for FormatHOverlayNode, (uint64_t)&protocol conformance descriptor for FormatHOverlayNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatHOverlayNode()
{
  return objc_opt_self();
}

uint64_t sub_1BB321028(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAF7516C(qword_1ED3BE168, type metadata accessor for FormatHOverlayNode, (uint64_t)&protocol conformance descriptor for FormatHOverlayNode);
  a1[2] = sub_1BAF7516C(&qword_1ED39FD18, type metadata accessor for FormatHOverlayNode, (uint64_t)&protocol conformance descriptor for FormatHOverlayNode);
  result = sub_1BAF7516C(&qword_1EF2C11C8, type metadata accessor for FormatHOverlayNode, (uint64_t)&protocol conformance descriptor for FormatHOverlayNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB3210A0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF7516C(&qword_1EF2C11D0, type metadata accessor for FormatHOverlayNode, (uint64_t)&protocol conformance descriptor for FormatHOverlayNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB3210DC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF7516C(&qword_1EF2C11D8, type metadata accessor for FormatVOverlayNode, (uint64_t)&protocol conformance descriptor for FormatVOverlayNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB321118(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAF7516C(&qword_1ED3C7F08, type metadata accessor for FormatVOverlayNode, (uint64_t)&protocol conformance descriptor for FormatVOverlayNode);
  a1[2] = sub_1BAF7516C(&qword_1ED3A62F0, type metadata accessor for FormatVOverlayNode, (uint64_t)&protocol conformance descriptor for FormatVOverlayNode);
  result = sub_1BAF7516C(&qword_1EF2C11E0, type metadata accessor for FormatVOverlayNode, (uint64_t)&protocol conformance descriptor for FormatVOverlayNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB321190(uint64_t *a1, uint64_t *a2)
{
  return static FormatVOverlayNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BB32119C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF7516C(&qword_1EF2C11E8, type metadata accessor for FormatVOverlayNode, (uint64_t)&protocol conformance descriptor for FormatVOverlayNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB3211DC(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA8E0198(a1, a2);
}

uint64_t sub_1BB3211F4(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA8DE640(a1, a2);
}

uint64_t sub_1BB32120C(uint64_t *a1, uint64_t *a2)
{
  return sub_1BB320B1C(a1, a2);
}

uint64_t sub_1BB321224(uint64_t *a1, uint64_t *a2)
{
  return sub_1BB320C08(a1, a2);
}

unint64_t sub_1BB32123C(unint64_t *a1, uint64_t *a2)
{
  return sub_1BB320CF4(a1, a2);
}

uint64_t sub_1BB321254(uint64_t *a1, uint64_t *a2)
{
  return sub_1BAB165CC(a1, a2);
}

uint64_t sub_1BB32126C(uint64_t *a1, uint64_t *a2)
{
  return sub_1BB320E58(a1, a2);
}

uint64_t keypath_getTm_0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3212D4(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA8E0198(a1, a2);
}

uint64_t keypath_get_1Tm_2@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB321334(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA8DE640(a1, a2);
}

uint64_t keypath_get_3Tm@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 64);
  *a2 = *(_QWORD *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB321394(uint64_t *a1, uint64_t *a2)
{
  return sub_1BB320B1C(a1, a2);
}

uint64_t keypath_get_5Tm@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 80);
  *a2 = *(_QWORD *)(v3 + 72);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3213F4(uint64_t *a1, uint64_t *a2)
{
  return sub_1BB320C08(a1, a2);
}

unint64_t keypath_get_7Tm@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 88);
  *a2 = v4;
  return sub_1BA71CA6C(v4);
}

unint64_t sub_1BB321454(unint64_t *a1, uint64_t *a2)
{
  return sub_1BB320CF4(a1, a2);
}

uint64_t keypath_get_9Tm@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3214B4(uint64_t *a1, uint64_t *a2)
{
  return sub_1BAB165CC(a1, a2);
}

uint64_t keypath_get_11Tm@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB321514(uint64_t *a1, uint64_t *a2)
{
  return sub_1BB320E58(a1, a2);
}

uint64_t keypath_get_13Tm@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 112);
  return result;
}

uint64_t keypath_set_14Tm(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 112) = v2;
  return result;
}

uint64_t method lookup function for FormatHOverlayNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatHOverlayNode.__allocating_init(identifier:targetIdentifier:targetPath:name:description:size:adjustments:children:reversed:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for FormatVOverlayNode()
{
  return swift_lookUpClassMethod();
}

uint64_t ContextMenu.ItemOptions.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BB32163C + 4 * byte_1BB908BE0[*v0]))(0xD000000000000016, 0x80000001BB985560);
}

uint64_t sub_1BB32163C()
{
  return 0x6F6C6552206E6143;
}

uint64_t sub_1BB321658@<X0>(uint64_t a1@<X8>)
{
  return a1 + 2;
}

uint64_t static ContextMenu.MenuType.feedHeadline(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(uint64_t *)((char *)a1 + *(int *)(type metadata accessor for FeedHeadline(0) + 56));
  v5 = a1[5];
  v7 = *a1;
  v6 = a1[1];
  swift_unknownObjectRetain();
  result = swift_bridgeObjectRetain();
  if (v4)
    v9 = v7;
  else
    v9 = 0;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v9;
  if (v4)
    v10 = v6;
  else
    v10 = 0;
  if (v4)
    v11 = 0;
  else
    v11 = v7;
  if (v4)
    v12 = 0;
  else
    v12 = v6;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_BYTE *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 41) = 2 * (v4 == 0);
  return result;
}

void sub_1BB32196C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((sub_1BA79E0CC(16, a1) & 1) != 0)
    goto LABEL_2;
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_currentDevice);
  v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

  if (v7 == (id)5)
  {
    sub_1BAC88310(0);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
    v9 = _s5TeaUI15ContextMenuItemC8NewsFeedE12openInNewTab8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    v10 = v9;
    if (v9)
    {
      v9 = sub_1BB86FB38();
      v11 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v11 = 0;
      *(_QWORD *)(v8 + 40) = 0;
      *(_QWORD *)(v8 + 48) = 0;
    }
    *(_QWORD *)(v8 + 32) = v10;
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = v11;
    v18 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    v19 = v18;
    if (v18)
    {
      v18 = sub_1BB86FB38();
      v20 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v20 = 0;
      *(_QWORD *)(v8 + 80) = 0;
      *(_QWORD *)(v8 + 88) = 0;
    }
    *(_QWORD *)(v8 + 72) = v19;
    *(_QWORD *)(v8 + 96) = v18;
    *(_QWORD *)(v8 + 104) = v20;
  }
  else
  {
    v12 = objc_msgSend(v5, sel_currentDevice);
    v13 = objc_msgSend(v12, sel_userInterfaceIdiom);

    if (v13 != (id)1)
    {
LABEL_2:
      *(_QWORD *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return;
    }
    sub_1BAC88310(0);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
    v15 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    v16 = v15;
    if (v15)
    {
      v15 = sub_1BB86FB38();
      v17 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v17 = 0;
      *(_QWORD *)(v14 + 40) = 0;
      *(_QWORD *)(v14 + 48) = 0;
    }
    *(_QWORD *)(v14 + 32) = v16;
    *(_QWORD *)(v14 + 56) = v15;
    *(_QWORD *)(v14 + 64) = v17;
  }
  sub_1BB86FD84();
  sub_1BB86FD78();
  swift_bridgeObjectRelease();
}

void sub_1BB321B50(int a1@<W0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t ObjCClassFromMetadata;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t inited;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  _QWORD *v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;

  v58 = a1;
  v63 = *MEMORY[0x1E0C80C00];
  v9 = sub_1BB86FD90();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB870150();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v18 = objc_msgSend(a3, sel_sourceChannel, v15);
    v19 = a4;
    v20 = v18;
    v59 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v57 = v19;
    if ((sub_1BA79E0CC(14, v19) & 1) == 0)
    {
      if (v20)
      {
        v53 = v10;
        v54 = v9;
        v55 = v12;
        v56 = a5;
        swift_getObjectType();
        type metadata accessor for Localized();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v22 = (void *)objc_opt_self();
        swift_unknownObjectRetain_n();
        v23 = objc_msgSend(v22, sel_bundleForClass_, ObjCClassFromMetadata);
        sub_1BB86C340();

        sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
        v25 = FCTagProviding.localizedTagType.getter();
        v27 = v26;
        *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v24 + 64) = sub_1BA6A2D8C();
        *(_QWORD *)(v24 + 32) = v25;
        *(_QWORD *)(v24 + 40) = v27;
        sub_1BB8729D0();
        v52 = v28;
        swift_bridgeObjectRelease();
        if (qword_1ED3BC080 != -1)
          swift_once();
        v29 = qword_1ED3AFB18;
        swift_unknownObjectRetain();
        swift_retain();
        swift_unknownObjectRetain();
        if (v29 != -1)
          swift_once();
        v30 = (void *)qword_1ED3AFB10;
        (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E0DB8530], v13);
        *(_QWORD *)&v60 = v20;
        BYTE8(v60) = 0;
        *(_QWORD *)&v61 = a3;
        v31 = sub_1BB86FB38();
        swift_allocObject();
        v32 = v30;
        v33 = sub_1BB86FB20();
        swift_unknownObjectRelease_n();
        *((_QWORD *)&v61 + 1) = v31;
        v62 = MEMORY[0x1E0DB77B0];
        *(_QWORD *)&v60 = v33;
        a5 = v56;
        v12 = v55;
        v9 = v54;
        v10 = v53;
      }
      else
      {
        v62 = 0;
        v60 = 0u;
        v61 = 0u;
      }
      v34 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v36 = v34[2];
      v35 = v34[3];
      if (v36 >= v35 >> 1)
        v34 = sub_1BB393424((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
      v34[2] = v36 + 1;
      sub_1BB32CE40((uint64_t)&v60, (uint64_t)&v34[5 * v36 + 4]);
      v59 = v34;
    }
    sub_1BAC88310(0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
    v38 = swift_unknownObjectRetain();
    v39 = _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0(v38);
    swift_unknownObjectRelease();
    v40 = 0;
    if (v39)
    {
      v40 = sub_1BB86FB38();
      v41 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v41 = 0;
      *(_QWORD *)(inited + 40) = 0;
      *(_QWORD *)(inited + 48) = 0;
    }
    v42 = v58;
    *(_QWORD *)(inited + 32) = v39;
    *(_QWORD *)(inited + 56) = v40;
    *(_QWORD *)(inited + 64) = v41;
    v43 = swift_unknownObjectRetain();
    v44 = _s5TeaUI15ContextMenuItemC8NewsFeedE5block3tagACSgSo14FCTagProviding_pSg_tFZ_0(v43);
    swift_unknownObjectRelease();
    v45 = 0;
    if (v44)
    {
      v45 = sub_1BB86FB38();
      v46 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v46 = 0;
      *(_QWORD *)(inited + 80) = 0;
      *(_QWORD *)(inited + 88) = 0;
    }
    *(_QWORD *)(inited + 72) = v44;
    *(_QWORD *)(inited + 96) = v45;
    *(_QWORD *)(inited + 104) = v46;
    sub_1BB386EF8(inited);
    if ((v42 & 1) != 0 && (sub_1BA79E0CC(8, v57) & 1) == 0)
    {
      v47 = v9;
      if (v20)
      {
        v48 = objc_msgSend(v20, sel_displayName);
        sub_1BB8729A0();

      }
      (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB7CF0], v47);
      v49 = sub_1BB86FD84();
      swift_allocObject();
      v50 = sub_1BB86FD6C();
      v51 = MEMORY[0x1E0DB7CC8];
      *(_QWORD *)(a5 + 24) = v49;
      *(_QWORD *)(a5 + 32) = v51;
      swift_unknownObjectRelease();
      *(_QWORD *)a5 = v50;
    }
    else
    {
      sub_1BB86FD84();
      sub_1BB86FD78();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    *(_QWORD *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
}

uint64_t sub_1BB322174@<X0>(int a1@<W0>, char a2@<W1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  char v68;

  v62 = a4;
  v63 = a8;
  v14 = sub_1BB870150();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v60 = a1;
    sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C1200, (uint64_t (*)(uint64_t))sub_1BB32CEE0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BB8827B0;
    if (qword_1ED3BC200 != -1)
      swift_once();
    v61 = a6;
    swift_bridgeObjectRetain();
    swift_retain();
    v19 = (void *)swift_unknownObjectRetain();
    sub_1BAB5BDCC(v19);
    if (qword_1ED3AFB38 != -1)
      swift_once();
    v20 = (void *)qword_1ED3AF888;
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DB8530], v14);
    v64 = a3;
    v65 = 0;
    v66 = 0uLL;
    v21 = v62;
    *(_QWORD *)&v67 = v62;
    *((_QWORD *)&v67 + 1) = a5;
    v68 = 0;
    sub_1BB86FB38();
    swift_allocObject();
    v22 = v20;
    *(_QWORD *)(v18 + 32) = sub_1BB86FB20();
    if ((v60 & 1) != 0)
    {
      v23 = 0;
      *(_QWORD *)(v18 + 40) = 0;
    }
    else
    {
      *(_QWORD *)(v18 + 40) = sub_1BB2509A0(a3);
      v23 = sub_1BA9990C4();
    }
    v37 = v61;
    *(_QWORD *)(v18 + 48) = v23;
    v64 = a3;
    v65 = v21;
    *(_QWORD *)&v66 = a5;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v38 = _s5TeaUI15ContextMenuItemC8NewsFeedE4like7contextAcD013LikingCommandC0V_tFZ_0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    *(_QWORD *)(v18 + 56) = v38;
    v64 = a3;
    v65 = v21;
    *(_QWORD *)&v66 = a5;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v39 = _s5TeaUI15ContextMenuItemC8NewsFeedE7dislike7contextAcD013LikingCommandC0V_tFZ_0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    *(_QWORD *)(v18 + 64) = v39;
    v64 = (_QWORD *)v18;
    sub_1BB872DCC();
    v40 = (uint64_t)v64;
    if ((sub_1BA79E0CC(0, v37) & 1) != 0)
    {
      v41 = objc_msgSend(a3, sel_identifier);
      v42 = sub_1BB8729A0();
      v44 = v43;

      _s5TeaUI15ContextMenuItemC8NewsFeedE17removeFromHistory8headlineACSS_tFZ_0(v42, v44);
      v45 = swift_bridgeObjectRelease();
      MEMORY[0x1BCCE36AC](v45);
      if (v64[2] >= v64[3] >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      v40 = (uint64_t)v64;
    }
    sub_1BB86FD84();
    sub_1BA9763CC(v40);
    swift_bridgeObjectRelease();
    sub_1BB86FD78();
  }
  else
  {
    sub_1BAC88310(0);
    if ((a7 & 1) != 0)
    {
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1BB87D7A0;
      v67 = 0u;
      v66 = 0u;
      v64 = a3;
      LOWORD(v65) = 0;
      BYTE2(v65) = 7;
      swift_unknownObjectRetain();
      v25 = sub_1BB14C2A0((uint64_t)&v64);
      sub_1BB32CEA4((uint64_t)&v64);
      v26 = sub_1BB86FD84();
      v27 = MEMORY[0x1E0DB7CC8];
      v61 = v26;
      *(_QWORD *)(v24 + 56) = v26;
      *(_QWORD *)(v24 + 64) = v27;
      *(_QWORD *)(v24 + 32) = v25;
      if (qword_1ED3BC200 != -1)
        swift_once();
      swift_bridgeObjectRetain();
      swift_retain();
      v28 = (void *)swift_unknownObjectRetain();
      sub_1BAB5BDCC(v28);
      if (qword_1ED3AFB38 != -1)
        swift_once();
      v29 = (void *)qword_1ED3AF888;
      (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DB8530], v14);
      v64 = a3;
      v65 = 0;
      v66 = 0uLL;
      *(_QWORD *)&v67 = v62;
      *((_QWORD *)&v67 + 1) = a5;
      v68 = 0;
      v30 = sub_1BB86FB38();
      swift_allocObject();
      v31 = v29;
      v32 = sub_1BB86FB20();
      v33 = MEMORY[0x1E0DB77B0];
      *(_QWORD *)(v24 + 96) = v30;
      *(_QWORD *)(v24 + 104) = v33;
      *(_QWORD *)(v24 + 72) = v32;
      v34 = sub_1BB2509A0(a3);
      if (v34)
      {
        v35 = MEMORY[0x1E0DB77B0];
        v36 = v30;
      }
      else
      {
        v36 = 0;
        v35 = 0;
        *(_QWORD *)(v24 + 120) = 0;
        *(_QWORD *)(v24 + 128) = 0;
      }
      *(_QWORD *)(v24 + 112) = v34;
      *(_QWORD *)(v24 + 136) = v36;
      *(_QWORD *)(v24 + 144) = v35;
      v56 = sub_1BA9990C4();
      *(_QWORD *)(v24 + 176) = v30;
      *(_QWORD *)(v24 + 184) = v33;
      *(_QWORD *)(v24 + 152) = v56;
    }
    else
    {
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1BB87FC80;
      if (qword_1ED3BC200 != -1)
        swift_once();
      swift_bridgeObjectRetain();
      swift_retain();
      v47 = (void *)swift_unknownObjectRetain();
      sub_1BAB5BDCC(v47);
      if (qword_1ED3AFB38 != -1)
        swift_once();
      v48 = (void *)qword_1ED3AF888;
      (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DB8530], v14);
      v64 = a3;
      v65 = 0;
      v66 = 0uLL;
      *(_QWORD *)&v67 = v62;
      *((_QWORD *)&v67 + 1) = a5;
      v68 = 0;
      v49 = sub_1BB86FB38();
      swift_allocObject();
      v50 = v48;
      v51 = sub_1BB86FB20();
      v52 = MEMORY[0x1E0DB77B0];
      *(_QWORD *)(v46 + 56) = v49;
      *(_QWORD *)(v46 + 64) = v52;
      *(_QWORD *)(v46 + 32) = v51;
      v53 = sub_1BB2509A0(a3);
      if (v53)
      {
        v54 = MEMORY[0x1E0DB77B0];
        v55 = v49;
      }
      else
      {
        v55 = 0;
        v54 = 0;
        *(_QWORD *)(v46 + 80) = 0;
        *(_QWORD *)(v46 + 88) = 0;
      }
      *(_QWORD *)(v46 + 72) = v53;
      *(_QWORD *)(v46 + 96) = v55;
      *(_QWORD *)(v46 + 104) = v54;
      sub_1BB86FD84();
      v57 = sub_1BA9990C4();
      *(_QWORD *)(v46 + 136) = v49;
      *(_QWORD *)(v46 + 144) = v52;
      *(_QWORD *)(v46 + 112) = v57;
    }
    sub_1BB86FD78();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB322834(char a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  if ((a1 & 1) != 0)
  {
    v5 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV9listenNow8headline14ignorePlaylistACSgSo19FCHeadlineProviding_p_SbtFZ_0(a2, 1);
    if (v5)
    {
      v6 = v5;
      *((_QWORD *)&v24 + 1) = sub_1BB86FB38();
      v25 = MEMORY[0x1E0DB77B0];
      *(_QWORD *)&v23 = v6;
    }
    else
    {
      v25 = 0;
      v24 = 0u;
      v23 = 0u;
    }
    v9 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v11 = v9[2];
    v10 = v9[3];
    if (v11 >= v10 >> 1)
      v9 = sub_1BB393424((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    v9[2] = v11 + 1;
    sub_1BB32CE40((uint64_t)&v23, (uint64_t)&v9[5 * v11 + 4]);
    if ((a3 & 1) == 0)
    {
      sub_1BAC88310(0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
      v13 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV10listenNext8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
      v14 = v13;
      if (v13)
      {
        v13 = sub_1BB86FB38();
        v15 = MEMORY[0x1E0DB77B0];
      }
      else
      {
        v15 = 0;
        *(_QWORD *)(inited + 40) = 0;
        *(_QWORD *)(inited + 48) = 0;
      }
      *(_QWORD *)(inited + 32) = v14;
      *(_QWORD *)(inited + 56) = v13;
      *(_QWORD *)(inited + 64) = v15;
      v19 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV11listenLater8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
      v20 = v19;
      if (v19)
      {
        v19 = sub_1BB86FB38();
        v21 = MEMORY[0x1E0DB77B0];
      }
      else
      {
        v21 = 0;
        *(_QWORD *)(inited + 80) = 0;
        *(_QWORD *)(inited + 88) = 0;
      }
      *(_QWORD *)(inited + 72) = v20;
      *(_QWORD *)(inited + 96) = v19;
      *(_QWORD *)(inited + 104) = v21;
      sub_1BB386EF8(inited);
    }
  }
  else
  {
    v7 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV07previewH08headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    if (v7)
    {
      v8 = v7;
      *((_QWORD *)&v24 + 1) = sub_1BB86FB38();
      v25 = MEMORY[0x1E0DB77B0];
      *(_QWORD *)&v23 = v8;
    }
    else
    {
      v25 = 0;
      v24 = 0u;
      v23 = 0u;
    }
    v16 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
      v16 = sub_1BB393424((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v16[2] = v18 + 1;
    sub_1BB32CE40((uint64_t)&v23, (uint64_t)&v16[5 * v18 + 4]);
  }
  sub_1BB86FD84();
  sub_1BB86FD78();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB322AB0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v40;
  _QWORD *v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v6 = sub_1BB870150();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((a1 & 1) == 0)
  {
    sub_1BAC88310(0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
    v11 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV10listenNext8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    v12 = v11;
    if (v11)
    {
      v11 = sub_1BB86FB38();
      v13 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v13 = 0;
      *(_QWORD *)(inited + 40) = 0;
      *(_QWORD *)(inited + 48) = 0;
    }
    *(_QWORD *)(inited + 32) = v12;
    *(_QWORD *)(inited + 56) = v11;
    *(_QWORD *)(inited + 64) = v13;
    v14 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV11listenLater8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    v15 = v14;
    if (v14)
    {
      v14 = sub_1BB86FB38();
      v16 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v16 = 0;
      *(_QWORD *)(inited + 80) = 0;
      *(_QWORD *)(inited + 88) = 0;
    }
    *(_QWORD *)(inited + 72) = v15;
    *(_QWORD *)(inited + 96) = v14;
    *(_QWORD *)(inited + 104) = v16;
    sub_1BB386EF8(inited);
  }
  v40 = a3;
  v17 = qword_1ED3BC258;
  swift_unknownObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = MEMORY[0x1E0DB77B0];
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v20 = (void *)objc_opt_self();
  swift_unknownObjectRetain();
  swift_retain();
  v21 = objc_msgSend(v20, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72A0 != -1)
    swift_once();
  v22 = (void *)qword_1EF2C4770;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB8530], v6);
  *(_QWORD *)&v42 = a2;
  v23 = sub_1BB86FB38();
  swift_allocObject();
  v24 = v22;
  v25 = sub_1BB86FB20();
  swift_unknownObjectRelease();
  *((_QWORD *)&v43 + 1) = v23;
  v44 = v18;
  *(_QWORD *)&v42 = v25;
  v26 = v41;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v26 = sub_1BB393424(0, v26[2] + 1, 1, v26);
  v27 = v40;
  v29 = v26[2];
  v28 = v26[3];
  if (v29 >= v28 >> 1)
    v26 = sub_1BB393424((_QWORD *)(v28 > 1), v29 + 1, 1, v26);
  v26[2] = v29 + 1;
  sub_1BB32CE40((uint64_t)&v42, (uint64_t)&v26[5 * v29 + 4]);
  if ((sub_1BA79E0CC(2, v27) & 1) != 0)
  {
    v30 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV6remove8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    if (v30)
    {
      *((_QWORD *)&v43 + 1) = v23;
      v44 = v18;
      *(_QWORD *)&v42 = v30;
    }
    else
    {
      v44 = 0;
      v42 = 0u;
      v43 = 0u;
    }
    v32 = v26[2];
    v31 = v26[3];
    if (v32 >= v31 >> 1)
      v26 = sub_1BB393424((_QWORD *)(v31 > 1), v32 + 1, 1, v26);
    v26[2] = v32 + 1;
    sub_1BB32CE40((uint64_t)&v42, (uint64_t)&v26[5 * v32 + 4]);
  }
  if ((sub_1BA79E0CC(3, v27) & 1) != 0)
  {
    v33 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV010removeFromH7History8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    if (v33)
    {
      *((_QWORD *)&v43 + 1) = v23;
      v44 = v18;
      *(_QWORD *)&v42 = v33;
    }
    else
    {
      v44 = 0;
      v42 = 0u;
      v43 = 0u;
    }
    v35 = v26[2];
    v34 = v26[3];
    if (v35 >= v34 >> 1)
      v26 = sub_1BB393424((_QWORD *)(v34 > 1), v35 + 1, 1, v26);
    v26[2] = v35 + 1;
    sub_1BB32CE40((uint64_t)&v42, (uint64_t)&v26[5 * v35 + 4]);
  }
  if ((sub_1BA79E0CC(4, v27) & 1) != 0)
  {
    v36 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV010removeFromH8Playlist8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    if (v36)
    {
      *((_QWORD *)&v43 + 1) = v23;
      v44 = v18;
      *(_QWORD *)&v42 = v36;
    }
    else
    {
      v44 = 0;
      v42 = 0u;
      v43 = 0u;
    }
    v38 = v26[2];
    v37 = v26[3];
    if (v38 >= v37 >> 1)
      v26 = sub_1BB393424((_QWORD *)(v37 > 1), v38 + 1, 1, v26);
    v26[2] = v38 + 1;
    sub_1BB32CE40((uint64_t)&v42, (uint64_t)&v26[5 * v38 + 4]);
  }
  sub_1BB86FD84();
  sub_1BB86FD78();
  return swift_bridgeObjectRelease();
}

BOOL static ContextMenu.ItemOptions.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ContextMenu.ItemOptions.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t ContextMenu.ItemOptions.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t ContextMenuItemOptionsProviding.contextMenuItemOptions.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t ContextMenuContext.contextMenuItemOptionsWithAccess(_:)(char a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v3 = ContextMenuContext.contextMenuItemOptions.getter(a2);
  if ((a1 & 1) != 0)
    v4 = &unk_1E7270D40;
  else
    v4 = (void *)MEMORY[0x1E0DEE9D8];
  v5 = sub_1BA7B69E8((uint64_t)v4, v3);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t ContextMenuContext.contextMenuItemOptions.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  char *v25;
  __int128 v26[2];
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  MEMORY[0x1E0C80A78](a1);
  v25 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v3 + 72);
  v6 = v5;
  v23[1] = v5;
  v7 = sub_1BB87027C();
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v23 - v8;
  v10 = sub_1BB86CBE0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 64);
  v28[0] = *(_QWORD *)(a1 + 32);
  v28[1] = v6;
  v28[2] = v14;
  v29 = v4;
  v15 = sub_1BB86FAD8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v23 - v17;
  sub_1BB86F37C();
  sub_1BB86F3A0();
  sub_1BB86FAE4();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_1BB870270();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
  sub_1BA4D9CE8(0, &qword_1EF2C11F0);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v26, (uint64_t)v28);
    v19 = v29;
    v20 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    v27 = 0;
    memset(v26, 0, sizeof(v26));
    sub_1BB32CA80((uint64_t)v26);
    return MEMORY[0x1E0DEE9E8];
  }
  return v21;
}

uint64_t sub_1BB323308(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  char v28;
  char v29;
  char v30;
  unsigned __int8 v32;

  v5 = sub_1BA79E0CC(9, a4);
  v28 = sub_1BA79E0CC(12, a4);
  v29 = sub_1BA79E0CC(13, a4);
  v32 = sub_1BA79E0CC(11, a4);
  v30 = sub_1BA79E0CC(10, a4);
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_mainBundle);
  v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (v8)
  {
    v9 = sub_1BB8729A0();
    v11 = v10;

    if (v9 == 0x6C7070612E6D6F63 && v11 == 0xEE007377656E2E65)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v8) = 1;
    }
    else
    {
      LOBYTE(v8) = sub_1BB874398();
      swift_bridgeObjectRelease();
    }
  }
  v13 = objc_msgSend(v6, sel_mainBundle);
  v14 = objc_msgSend(v13, sel_bundleIdentifier);

  if (v14)
  {
    v15 = sub_1BB8729A0();
    v17 = v16;

    if (v15 == 0xD000000000000010 && v17 == 0x80000001BB985580)
    {
      swift_bridgeObjectRelease();
      v18 = 1;
    }
    else
    {
      v18 = sub_1BB874398();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v18 = 0;
  }
  if ((v5 & 1) != 0)
  {
    sub_1BAC88310(0);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BB87D7A0;
    v20 = v18 & 1;
    sub_1BB322AB0(v18 & 1, (uint64_t)a1, a4);
    sub_1BB32196C(a4, a1, v19 + 72);
    v21 = v8 & 1;
    sub_1BB322174(1, v8 & 1, a1, a2, a3, a4, v20, v19 + 112);
    v22 = v30 | v32;
LABEL_19:
    v23 = v19 + 152;
    v24 = v22 & 1;
    v25 = v21;
    goto LABEL_20;
  }
  sub_1BAC88310(0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB87D7A0;
  sub_1BB32196C(a4, a1, v19 + 32);
  if ((v8 & v32 & 1) == 0)
  {
    v26 = v18 & 1;
    sub_1BB322834(v29 & 1, (uint64_t)a1, v18 & 1);
    v21 = v8 & 1;
    sub_1BB322174(0, v8 & 1, a1, a2, a3, a4, v26, v19 + 112);
    v22 = v30 | v32 | v28;
    goto LABEL_19;
  }
  sub_1BB322174(0, 1, a1, a2, a3, a4, v18 & 1, v19 + 72);
  sub_1BB322834(v29 & 1, (uint64_t)a1, v18 & 1);
  v23 = v19 + 152;
  v24 = 1;
  v25 = 1;
LABEL_20:
  sub_1BB321B50(v24, v25, a1, a4, v23);
  return v19;
}

uint64_t sub_1BB3236B0(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  char v29;
  __int128 v30;
  __int128 v31;

  if ((sub_1BA79E0CC(11, a2) & 1) == 0)
    return MEMORY[0x1E0DEE9D8];
  v3 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v4 = objc_msgSend(v3, sel_bundleIdentifier);

  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  v5 = sub_1BB8729A0();
  v7 = v6;

  v8 = v5 == 0x6C7070612E6D6F63 && v7 == 0xEE007377656E2E65;
  if (v8 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1BAC88310(0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BB87FC80;
    v10 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV9listenNow8headline14ignorePlaylistACSgSo19FCHeadlineProviding_p_SbtFZ_0(a1, 1);
    v11 = v10;
    if (v10)
    {
      v10 = sub_1BB86FB38();
      v12 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v12 = 0;
      *(_QWORD *)(v9 + 40) = 0;
      *(_QWORD *)(v9 + 48) = 0;
    }
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 56) = v10;
    *(_QWORD *)(v9 + 64) = v12;
    v13 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV10listenNext8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a1);
    v14 = v13;
    if (v13)
    {
      v13 = sub_1BB86FB38();
      v15 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v15 = 0;
      *(_QWORD *)(v9 + 80) = 0;
      *(_QWORD *)(v9 + 88) = 0;
    }
    *(_QWORD *)(v9 + 72) = v14;
    *(_QWORD *)(v9 + 96) = v13;
    *(_QWORD *)(v9 + 104) = v15;
    v16 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV11listenLater8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a1);
    if (v16)
    {
      v17 = v16;
      v18 = MEMORY[0x1E0DB77B0];
      *(_QWORD *)(v9 + 136) = sub_1BB86FB38();
      *(_QWORD *)(v9 + 144) = v18;
      *(_QWORD *)(v9 + 112) = v17;
    }
    else
    {
      *(_QWORD *)(v9 + 144) = 0;
      *(_OWORD *)(v9 + 112) = 0u;
      *(_OWORD *)(v9 + 128) = 0u;
    }
    return v9;
  }
  if (v5 != 0xD000000000000010 || v7 != 0x80000001BB985580)
  {
    v19 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      goto LABEL_21;
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
LABEL_21:
  sub_1BAC88310(0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
  v20 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV9listenNow8headline14ignorePlaylistACSgSo19FCHeadlineProviding_p_SbtFZ_0(a1, 1);
  v21 = v20;
  if (v20)
  {
    v20 = sub_1BB86FB38();
    v22 = MEMORY[0x1E0DB77B0];
  }
  else
  {
    v22 = 0;
    *(_QWORD *)(v9 + 40) = 0;
    *(_QWORD *)(v9 + 48) = 0;
  }
  *(_QWORD *)(v9 + 32) = v21;
  *(_QWORD *)(v9 + 56) = v20;
  *(_QWORD *)(v9 + 64) = v22;
  v30 = 0u;
  v31 = 0u;
  v27 = a1;
  v28 = 0;
  v29 = 7;
  swift_unknownObjectRetain();
  v24 = sub_1BB14C2A0((uint64_t)&v27);
  sub_1BB32CEA4((uint64_t)&v27);
  v25 = sub_1BB86FD84();
  v26 = MEMORY[0x1E0DB7CC8];
  *(_QWORD *)(v9 + 96) = v25;
  *(_QWORD *)(v9 + 104) = v26;
  *(_QWORD *)(v9 + 72) = v24;
  return v9;
}

_QWORD *sub_1BB3239AC(void *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v64;
  unint64_t v65;
  char v66;
  id v67;
  uint64_t ObjCClassFromMetadata;
  void *v69;
  id v70;
  uint64_t v71;
  _QWORD *v72;
  void *v73;
  id v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;
  unint64_t v78;
  id v79;
  uint64_t v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  void *v89;
  id v90;
  uint64_t v91;
  id v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  unint64_t v105;
  unint64_t v106;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  _QWORD *v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;

  v122 = a3;
  v109 = a2;
  v129 = *MEMORY[0x1E0C80C00];
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8BA0];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA60, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v7);
  v118 = (char *)&v108 - v8;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8328];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA00, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v10);
  v117 = (char *)&v108 - v11;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8348];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA30, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v13);
  v116 = (char *)&v108 - v14;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA70, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, v6);
  MEMORY[0x1E0C80A78](v15);
  v115 = (char *)&v108 - v16;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA10, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, v9);
  MEMORY[0x1E0C80A78](v17);
  v114 = (char *)&v108 - v18;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA40, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, v12);
  MEMORY[0x1E0C80A78](v19);
  v113 = (char *)&v108 - v20;
  v21 = sub_1BB870150();
  v110 = *(_QWORD *)(v21 - 8);
  v111 = v21;
  MEMORY[0x1E0C80A78](v21);
  v112 = (char *)&v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v23 = (void *)objc_opt_self();
  v24 = objc_msgSend(v23, sel_currentDevice);
  v25 = objc_msgSend(v24, sel_userInterfaceIdiom);

  v26 = MEMORY[0x1E0DB77B0];
  if (v25 == (id)5)
  {
    sub_1BAC88310(0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
    v28 = _s5TeaUI15ContextMenuItemC8NewsFeedE12openInNewTab5issueACSgSo7FCIssueC_tFZ_0(a1);
    v29 = v28;
    v30 = a1;
    if (v28)
    {
      v28 = sub_1BB86FB38();
      v31 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v31 = 0;
      *(_QWORD *)(inited + 40) = 0;
      *(_QWORD *)(inited + 48) = 0;
    }
    *(_QWORD *)(inited + 32) = v29;
    *(_QWORD *)(inited + 56) = v28;
    *(_QWORD *)(inited + 64) = v31;
    v36 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow5issueACSgSo7FCIssueC_tFZ_0(a1);
    v37 = v36;
    if (v36)
    {
      v36 = sub_1BB86FB38();
      v38 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v38 = 0;
      *(_QWORD *)(inited + 80) = 0;
      *(_QWORD *)(inited + 88) = 0;
    }
    *(_QWORD *)(inited + 72) = v37;
    *(_QWORD *)(inited + 96) = v36;
    *(_QWORD *)(inited + 104) = v38;
    sub_1BB386EF8(inited);
  }
  else
  {
    v32 = objc_msgSend(v23, sel_currentDevice);
    v33 = objc_msgSend(v32, sel_userInterfaceIdiom);

    v30 = a1;
    if (v33 == (id)1)
    {
      v34 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow5issueACSgSo7FCIssueC_tFZ_0(a1);
      if (v34)
      {
        v35 = v34;
        *((_QWORD *)&v127 + 1) = sub_1BB86FB38();
        v128 = v26;
        *(_QWORD *)&v126 = v35;
      }
      else
      {
        v128 = 0;
        v126 = 0u;
        v127 = 0u;
      }
      v39 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v41 = v39[2];
      v40 = v39[3];
      if (v41 >= v40 >> 1)
        v39 = sub_1BB393424((_QWORD *)(v40 > 1), v41 + 1, 1, v39);
      v39[2] = v41 + 1;
      sub_1BB32CE40((uint64_t)&v126, (uint64_t)&v39[5 * v41 + 4]);
      v125 = v39;
    }
  }
  if ((sub_1BA79E0CC(16, a4) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BB86FD84();
    sub_1BB86FD78();
    swift_bridgeObjectRelease();
    v42 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v44 = v42[2];
    v43 = v42[3];
    if (v44 >= v43 >> 1)
      v42 = sub_1BB393424((_QWORD *)(v43 > 1), v44 + 1, 1, v42);
    v42[2] = v44 + 1;
    sub_1BB32CE40((uint64_t)&v126, (uint64_t)&v42[5 * v44 + 4]);
  }
  sub_1BAC88310(0);
  v120 = v45;
  v46 = swift_allocObject();
  v108 = xmmword_1BB87A390;
  *(_OWORD *)(v46 + 16) = xmmword_1BB87A390;
  LOBYTE(v126) = 0;
  v47 = _s5TeaUI15ContextMenuItemC8NewsFeedE5share5issue0hC0ACSgSo7FCIssueC_AD012CommandShareC0OtFZ_0(v30, (unsigned __int8 *)&v126);
  v48 = v47;
  if (v47)
  {
    v47 = sub_1BB86FB38();
    v49 = MEMORY[0x1E0DB77B0];
  }
  else
  {
    v49 = 0;
    *(_QWORD *)(v46 + 40) = 0;
    *(_QWORD *)(v46 + 48) = 0;
  }
  v50 = v122;
  *(_QWORD *)(v46 + 32) = v48;
  *(_QWORD *)(v46 + 56) = v47;
  *(_QWORD *)(v46 + 64) = v49;
  v51 = _s5TeaUI15ContextMenuItemC8NewsFeedE9copyIssue5issueACSo7FCIssueC_tFZ_0(v30);
  v52 = sub_1BB86FB38();
  *(_QWORD *)(v46 + 96) = v52;
  *(_QWORD *)(v46 + 104) = v26;
  *(_QWORD *)(v46 + 72) = v51;
  v124 = v46;
  if (v50 && (sub_1BA79E0CC(5, a4) & 1) != 0)
  {
    v53 = swift_unknownObjectRetain();
    v54 = _s5TeaUI15ContextMenuItemC8NewsFeedE6report8headlineACSgSo19FCHeadlineProviding_pSg_tFZ_0(v53);
    if (v54)
    {
      *((_QWORD *)&v127 + 1) = v52;
      v128 = v26;
      *(_QWORD *)&v126 = v54;
    }
    else
    {
      v128 = 0;
      v126 = 0u;
      v127 = 0u;
    }
    v56 = *(_QWORD *)(v46 + 16);
    v55 = *(_QWORD *)(v46 + 24);
    if (v56 >= v55 >> 1)
      v46 = (uint64_t)sub_1BB393424((_QWORD *)(v55 > 1), v56 + 1, 1, (_QWORD *)v46);
    *(_QWORD *)(v46 + 16) = v56 + 1;
    sub_1BB32CE40((uint64_t)&v126, v46 + 40 * v56 + 32);
    swift_unknownObjectRelease();
    v124 = v46;
  }
  if ((sub_1BA79E0CC(15, a4) & 1) == 0)
  {
    v57 = swift_initStackObject();
    *(_OWORD *)(v57 + 16) = v108;
    v58 = _s5TeaUI15ContextMenuItemC8NewsFeedE8download5issueACSo7FCIssueC_tFZ_0(v30);
    *(_QWORD *)(v57 + 56) = v52;
    *(_QWORD *)(v57 + 64) = v26;
    *(_QWORD *)(v57 + 32) = v58;
    v59 = _s5TeaUI15ContextMenuItemC8NewsFeedE17removeIssuePrompt5issue7actionsACSgSo7FCIssueCSg_SayAA8CommandsCADE12RemoveIssuesV0J0C6ActionOGtFZ_0(v30, v109);
    if (v59)
    {
      v60 = MEMORY[0x1E0DB77B0];
      v61 = v52;
    }
    else
    {
      v61 = 0;
      v60 = 0;
      *(_QWORD *)(v57 + 80) = 0;
      *(_QWORD *)(v57 + 88) = 0;
    }
    *(_QWORD *)(v57 + 72) = v59;
    *(_QWORD *)(v57 + 96) = v61;
    *(_QWORD *)(v57 + 104) = v60;
    sub_1BB386EF8(v57);
  }
  v62 = sub_1BB86FD84();
  sub_1BB86FD78();
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v109 = v62;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v42 = sub_1BB393424(0, v42[2] + 1, 1, v42);
  v65 = v42[2];
  v64 = v42[3];
  if (v65 >= v64 >> 1)
    v42 = sub_1BB393424((_QWORD *)(v64 > 1), v65 + 1, 1, v42);
  v42[2] = v65 + 1;
  sub_1BB32CE40((uint64_t)&v126, (uint64_t)&v42[5 * v65 + 4]);
  v66 = sub_1BA79E0CC(19, a4);
  v119 = a4;
  v121 = v30;
  if ((v66 & 1) != 0)
  {
    v67 = objc_msgSend(v30, sel_sourceChannel);
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v69 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v70 = objc_msgSend(v69, sel_bundleForClass_, ObjCClassFromMetadata);
    *(_QWORD *)&v108 = sub_1BB86C340();

    if (qword_1ED3BC080 != -1)
      swift_once();
    v71 = qword_1ED3AFB18;
    v72 = v122;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    if (v71 != -1)
      swift_once();
    v73 = (void *)qword_1ED3AFB10;
    (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v112, *MEMORY[0x1E0DB8530], v111);
    *(_QWORD *)&v126 = v67;
    BYTE8(v126) = 1;
    *(_QWORD *)&v127 = v72;
    swift_allocObject();
    v74 = v73;
    v75 = sub_1BB86FB20();
    swift_unknownObjectRelease_n();
    *((_QWORD *)&v127 + 1) = v52;
    v128 = MEMORY[0x1E0DB77B0];
    *(_QWORD *)&v126 = v75;
    v76 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v77 = v76[2];
    v78 = v76[3];
  }
  else
  {
    v79 = objc_msgSend(v30, sel_sourceChannel);
    swift_getObjectType();
    type metadata accessor for Localized();
    v80 = swift_getObjCClassFromMetadata();
    v81 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v82 = objc_msgSend(v81, sel_bundleForClass_, v80);
    sub_1BB86C340();

    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_1BB87CE70;
    v84 = FCTagProviding.localizedTagType.getter();
    v86 = v85;
    *(_QWORD *)(v83 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v83 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v83 + 32) = v84;
    *(_QWORD *)(v83 + 40) = v86;
    sub_1BB8729D0();
    swift_bridgeObjectRelease();
    if (qword_1ED3BC080 != -1)
      swift_once();
    v87 = qword_1ED3AFB18;
    v88 = v122;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    if (v87 != -1)
      swift_once();
    v89 = (void *)qword_1ED3AFB10;
    (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v112, *MEMORY[0x1E0DB8530], v111);
    *(_QWORD *)&v126 = v79;
    BYTE8(v126) = 0;
    *(_QWORD *)&v127 = v88;
    swift_allocObject();
    v90 = v89;
    v91 = sub_1BB86FB20();
    swift_unknownObjectRelease_n();
    *((_QWORD *)&v127 + 1) = v52;
    v128 = MEMORY[0x1E0DB77B0];
    *(_QWORD *)&v126 = v91;
    v76 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v77 = v76[2];
    v78 = v76[3];
  }
  if (v77 >= v78 >> 1)
    v76 = sub_1BB393424((_QWORD *)(v78 > 1), v77 + 1, 1, v76);
  v92 = v121;
  v76[2] = v77 + 1;
  sub_1BB32CE40((uint64_t)&v126, (uint64_t)&v76[5 * v77 + 4]);
  v123 = v76;
  v93 = v42;
  v94 = swift_initStackObject();
  *(_OWORD *)(v94 + 16) = xmmword_1BB87FC80;
  v95 = _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0((uint64_t)objc_msgSend(v92, sel_sourceChannel));
  swift_unknownObjectRelease();
  if (v95)
  {
    v96 = MEMORY[0x1E0DB77B0];
    v97 = v52;
  }
  else
  {
    v97 = v52;
    v52 = 0;
    v96 = 0;
    *(_QWORD *)(v94 + 40) = 0;
    *(_QWORD *)(v94 + 48) = 0;
  }
  v122 = v93;
  *(_QWORD *)(v94 + 32) = v95;
  *(_QWORD *)(v94 + 56) = v52;
  *(_QWORD *)(v94 + 64) = v96;
  v98 = objc_msgSend(v92, sel_sourceChannel);
  v99 = qword_1ED3BA8E8;
  swift_unknownObjectRetain();
  if (v99 != -1)
    swift_once();
  LOBYTE(v126) = 1;
  *(_QWORD *)(swift_allocObject() + 16) = v98;
  sub_1BA82DAD0();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB870030();
  LOBYTE(v126) = 1;
  sub_1BB870018();
  sub_1BB870348();
  *(_QWORD *)&v126 = v98;
  swift_allocObject();
  v100 = sub_1BB86FB2C();
  swift_unknownObjectRelease();
  *(_QWORD *)(v94 + 96) = v97;
  *(_QWORD *)(v94 + 104) = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v94 + 72) = v100;
  v101 = objc_msgSend(v121, sel_sourceChannel);
  v102 = qword_1ED39F0A0;
  swift_unknownObjectRetain();
  if (v102 != -1)
    swift_once();
  LOBYTE(v126) = 0;
  sub_1BA81FF50();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB870030();
  LOBYTE(v126) = 0;
  sub_1BB870018();
  sub_1BB870348();
  *(_QWORD *)&v126 = v101;
  swift_allocObject();
  v103 = sub_1BB86FB2C();
  swift_unknownObjectRelease_n();
  *(_QWORD *)(v94 + 136) = v97;
  *(_QWORD *)(v94 + 144) = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v94 + 112) = v103;
  sub_1BB386EF8(v94);
  if ((sub_1BA79E0CC(20, v119) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return v122;
  }
  else
  {
    sub_1BB86FD78();
    swift_bridgeObjectRelease();
    v104 = v122;
    v106 = v122[2];
    v105 = v122[3];
    if (v106 >= v105 >> 1)
      v104 = sub_1BB393424((_QWORD *)(v105 > 1), v106 + 1, 1, v122);
    v104[2] = v106 + 1;
    sub_1BB32CE40((uint64_t)&v126, (uint64_t)&v104[5 * v106 + 4]);
  }
  return v104;
}

_QWORD *sub_1BB324950(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  _QWORD v82[10];
  uint64_t v83;
  _QWORD *v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;

  v83 = a3;
  v88 = *MEMORY[0x1E0C80C00];
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8BA0];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA60, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v6);
  v82[9] = (char *)v82 - v7;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8328];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA00, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v9);
  v82[8] = (char *)v82 - v10;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8348];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA30, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v12);
  v82[7] = (char *)v82 - v13;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2C1210, (uint64_t (*)(void))sub_1BA82C0F4, (uint64_t)&type metadata for IgnoringCommandState, v5);
  MEMORY[0x1E0C80A78](v14);
  v82[6] = (char *)v82 - v15;
  sub_1BA4CDF6C(0, &qword_1EF2C1220, (uint64_t (*)(void))sub_1BA82C0F4, (uint64_t)&type metadata for IgnoringCommandState, v8);
  MEMORY[0x1E0C80A78](v16);
  v82[5] = (char *)v82 - v17;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1EF2CEC10, (uint64_t (*)(void))sub_1BA82C0F4, (uint64_t)&type metadata for IgnoringCommandState, v11);
  MEMORY[0x1E0C80A78](v18);
  v82[4] = (char *)v82 - v19;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA70, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, v5);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v82 - v21;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA10, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, v8);
  MEMORY[0x1E0C80A78](v23);
  v82[3] = (char *)v82 - v24;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA40, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, v11);
  MEMORY[0x1E0C80A78](v25);
  v82[2] = (char *)v82 - v26;
  v84 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v27 = (void *)objc_opt_self();
  v28 = objc_msgSend(v27, sel_currentDevice);
  v29 = objc_msgSend(v28, sel_userInterfaceIdiom);

  if (v29 == (id)5)
  {
    sub_1BAC88310(0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
    v31 = sub_1BB86FB38();
    swift_getObjectType();
    v32 = sub_1BA87DF44((uint64_t)a1, a2);
    if (v32)
    {
      v33 = MEMORY[0x1E0DB77B0];
      v34 = v31;
    }
    else
    {
      v34 = 0;
      v33 = 0;
      *(_QWORD *)(inited + 40) = 0;
      *(_QWORD *)(inited + 48) = 0;
    }
    v37 = MEMORY[0x1E0DB77B0];
    *(_QWORD *)(inited + 32) = v32;
    *(_QWORD *)(inited + 56) = v34;
    *(_QWORD *)(inited + 64) = v33;
    v41 = sub_1BB063B10((uint64_t)a1, a2);
    v38 = v83;
    if (v41)
    {
      v42 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v31 = 0;
      v42 = 0;
      *(_QWORD *)(inited + 80) = 0;
      *(_QWORD *)(inited + 88) = 0;
    }
    *(_QWORD *)(inited + 72) = v41;
    *(_QWORD *)(inited + 96) = v31;
    *(_QWORD *)(inited + 104) = v42;
    sub_1BB386EF8(inited);
  }
  else
  {
    v35 = objc_msgSend(v27, sel_currentDevice);
    v36 = objc_msgSend(v35, sel_userInterfaceIdiom);

    v37 = MEMORY[0x1E0DB77B0];
    v38 = v83;
    if (v36 == (id)1)
    {
      v39 = sub_1BB86FB38();
      swift_getObjectType();
      v40 = sub_1BB063B10((uint64_t)a1, a2);
      if (v40)
      {
        *((_QWORD *)&v86 + 1) = v39;
        v87 = v37;
        *(_QWORD *)&v85 = v40;
      }
      else
      {
        v87 = 0;
        v86 = 0u;
        v85 = 0u;
      }
      v43 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v45 = v43[2];
      v44 = v43[3];
      if (v45 >= v44 >> 1)
        v43 = sub_1BB393424((_QWORD *)(v44 > 1), v45 + 1, 1, v43);
      v43[2] = v45 + 1;
      sub_1BB32CE40((uint64_t)&v85, (uint64_t)&v43[5 * v45 + 4]);
      v84 = v43;
    }
  }
  if ((sub_1BA79E0CC(16, v38) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v46 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BB86FD84();
    sub_1BB86FD78();
    swift_bridgeObjectRelease();
    v46 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v48 = v46[2];
    v47 = v46[3];
    if (v48 >= v47 >> 1)
      v46 = sub_1BB393424((_QWORD *)(v47 > 1), v48 + 1, 1, v46);
    v46[2] = v48 + 1;
    sub_1BB32CE40((uint64_t)&v85, (uint64_t)&v46[5 * v48 + 4]);
  }
  sub_1BAC88310(0);
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1BB87A390;
  v50 = sub_1BB86FB38();
  v51 = sub_1BA79E0CC(24, v38);
  LOBYTE(v85) = 0;
  swift_getObjectType();
  v52 = sub_1BAB5CB58(a1, v51 & 1, (unsigned __int8 *)&v85);
  if (v52)
  {
    v53 = MEMORY[0x1E0DB77B0];
    v54 = v50;
  }
  else
  {
    v54 = 0;
    v53 = 0;
    *(_QWORD *)(v49 + 40) = 0;
    *(_QWORD *)(v49 + 48) = 0;
  }
  v55 = v37;
  *(_QWORD *)(v49 + 32) = v52;
  *(_QWORD *)(v49 + 56) = v54;
  *(_QWORD *)(v49 + 64) = v53;
  v56 = sub_1BAAA8950(a1);
  *(_QWORD *)(v49 + 96) = v50;
  *(_QWORD *)(v49 + 104) = v37;
  *(_QWORD *)(v49 + 72) = v56;
  if ((sub_1BA79E0CC(22, v38) & 1) != 0)
  {
    v57 = objc_msgSend(a1, sel_identifier);
    sub_1BB8729A0();

    v58 = _s5TeaUI15ContextMenuItemC8NewsFeedE14toggleShortcut3forACSS_tFZ_0();
    v55 = v37;
    swift_bridgeObjectRelease();
    *((_QWORD *)&v86 + 1) = v50;
    v87 = v37;
    *(_QWORD *)&v85 = v58;
    v60 = *(_QWORD *)(v49 + 16);
    v59 = *(_QWORD *)(v49 + 24);
    if (v60 >= v59 >> 1)
      v49 = (uint64_t)sub_1BB393424((_QWORD *)(v59 > 1), v60 + 1, 1, (_QWORD *)v49);
    *(_QWORD *)(v49 + 16) = v60 + 1;
    sub_1BB32CE40((uint64_t)&v85, v49 + 40 * v60 + 32);
  }
  if ((sub_1BA79E0CC(17, v38) & 1) == 0)
  {
    v61 = _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0((uint64_t)a1);
    if (v61)
    {
      *((_QWORD *)&v86 + 1) = v50;
      v87 = v55;
      *(_QWORD *)&v85 = v61;
    }
    else
    {
      v87 = 0;
      v86 = 0u;
      v85 = 0u;
    }
    v63 = *(_QWORD *)(v49 + 16);
    v62 = *(_QWORD *)(v49 + 24);
    if (v63 >= v62 >> 1)
      v49 = (uint64_t)sub_1BB393424((_QWORD *)(v62 > 1), v63 + 1, 1, (_QWORD *)v49);
    *(_QWORD *)(v49 + 16) = v63 + 1;
    sub_1BB32CE40((uint64_t)&v85, v49 + 40 * v63 + 32);
  }
  if ((sub_1BA79E0CC(18, v38) & 1) == 0)
  {
    v82[1] = v22;
    v64 = qword_1ED3BA8E8;
    swift_unknownObjectRetain();
    if (v64 != -1)
      swift_once();
    LOBYTE(v85) = 1;
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    sub_1BA82DAD0();
    swift_unknownObjectRetain();
    swift_retain();
    sub_1BB870030();
    LOBYTE(v85) = 1;
    sub_1BB870018();
    sub_1BB870348();
    *(_QWORD *)&v85 = a1;
    swift_allocObject();
    v65 = sub_1BB86FB2C();
    v55 = MEMORY[0x1E0DB77B0];
    *((_QWORD *)&v86 + 1) = v50;
    v87 = MEMORY[0x1E0DB77B0];
    *(_QWORD *)&v85 = v65;
    v67 = *(_QWORD *)(v49 + 16);
    v66 = *(_QWORD *)(v49 + 24);
    if (v67 >= v66 >> 1)
      v49 = (uint64_t)sub_1BB393424((_QWORD *)(v66 > 1), v67 + 1, 1, (_QWORD *)v49);
    v38 = v83;
    *(_QWORD *)(v49 + 16) = v67 + 1;
    sub_1BB32CE40((uint64_t)&v85, v49 + 40 * v67 + 32);
  }
  if ((sub_1BA79E0CC(7, v38) & 1) != 0)
  {
    v68 = qword_1ED39DFB0;
    swift_unknownObjectRetain();
    if (v68 != -1)
      swift_once();
    LOBYTE(v85) = 1;
    sub_1BA82C0F4();
    swift_unknownObjectRetain();
    swift_retain();
    sub_1BB870030();
    LOBYTE(v85) = 1;
    sub_1BB870018();
    sub_1BB870348();
    *(_QWORD *)&v85 = a1;
    swift_allocObject();
    v69 = sub_1BB86FB2C();
    swift_unknownObjectRelease();
    v55 = MEMORY[0x1E0DB77B0];
    *((_QWORD *)&v86 + 1) = v50;
    v87 = MEMORY[0x1E0DB77B0];
    *(_QWORD *)&v85 = v69;
    v71 = *(_QWORD *)(v49 + 16);
    v70 = *(_QWORD *)(v49 + 24);
    if (v71 >= v70 >> 1)
      v49 = (uint64_t)sub_1BB393424((_QWORD *)(v70 > 1), v71 + 1, 1, (_QWORD *)v49);
    v38 = v83;
    *(_QWORD *)(v49 + 16) = v71 + 1;
    sub_1BB32CE40((uint64_t)&v85, v49 + 40 * v71 + 32);
  }
  if ((sub_1BA79E0CC(23, v38) & 1) != 0)
  {
    v72 = _s5TeaUI15ContextMenuItemC8NewsFeedE14manageMySportsACyFZ_0();
    *((_QWORD *)&v86 + 1) = v50;
    v87 = v55;
    *(_QWORD *)&v85 = v72;
    v74 = *(_QWORD *)(v49 + 16);
    v73 = *(_QWORD *)(v49 + 24);
    if (v74 >= v73 >> 1)
      v49 = (uint64_t)sub_1BB393424((_QWORD *)(v73 > 1), v74 + 1, 1, (_QWORD *)v49);
    *(_QWORD *)(v49 + 16) = v74 + 1;
    sub_1BB32CE40((uint64_t)&v85, v49 + 40 * v74 + 32);
  }
  v75 = qword_1ED39F0A0;
  swift_unknownObjectRetain();
  if (v75 != -1)
    swift_once();
  LOBYTE(v85) = 0;
  sub_1BA81FF50();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB870030();
  LOBYTE(v85) = 0;
  sub_1BB870018();
  sub_1BB870348();
  *(_QWORD *)&v85 = a1;
  swift_allocObject();
  v76 = sub_1BB86FB2C();
  swift_unknownObjectRelease();
  *((_QWORD *)&v86 + 1) = v50;
  v87 = MEMORY[0x1E0DB77B0];
  *(_QWORD *)&v85 = v76;
  v78 = *(_QWORD *)(v49 + 16);
  v77 = *(_QWORD *)(v49 + 24);
  if (v78 >= v77 >> 1)
    v49 = (uint64_t)sub_1BB393424((_QWORD *)(v77 > 1), v78 + 1, 1, (_QWORD *)v49);
  *(_QWORD *)(v49 + 16) = v78 + 1;
  sub_1BB32CE40((uint64_t)&v85, v49 + 40 * v78 + 32);
  sub_1BB86FD84();
  sub_1BB86FD78();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v46 = sub_1BB393424(0, v46[2] + 1, 1, v46);
  v80 = v46[2];
  v79 = v46[3];
  if (v80 >= v79 >> 1)
    v46 = sub_1BB393424((_QWORD *)(v79 > 1), v80 + 1, 1, v46);
  v46[2] = v80 + 1;
  sub_1BB32CE40((uint64_t)&v85, (uint64_t)&v46[5 * v80 + 4]);
  return v46;
}

_QWORD *sub_1BB3256DC(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  _QWORD *v15;
  char **__ptr32 *v16;
  unint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;

  v51 = a4;
  v50 = a2;
  v58 = *MEMORY[0x1E0C80C00];
  v10 = sub_1BB870150();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BA79E0CC(16, a6);
  v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v16 = &off_1BB87A000;
  if ((v14 & 1) == 0)
  {
    v17 = a3;
    v49 = a5;
    v52 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v18 = (void *)objc_opt_self();
    v19 = objc_msgSend(v18, sel_currentDevice);
    v20 = objc_msgSend(v19, sel_userInterfaceIdiom);

    if (v20 == (id)5)
    {
      sub_1BAC88310(0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
      v22 = _s5TeaUI15ContextMenuItemC8NewsFeedE12openInNewTab8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a1);
      v23 = v22;
      if (v22)
      {
        v22 = sub_1BB86FB38();
        v24 = MEMORY[0x1E0DB77B0];
      }
      else
      {
        v24 = 0;
        *(_QWORD *)(inited + 40) = 0;
        *(_QWORD *)(inited + 48) = 0;
      }
      a3 = v17;
      *(_QWORD *)(inited + 32) = v23;
      *(_QWORD *)(inited + 56) = v22;
      *(_QWORD *)(inited + 64) = v24;
      v29 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a1);
      v30 = v29;
      if (v29)
      {
        v29 = sub_1BB86FB38();
        v31 = MEMORY[0x1E0DB77B0];
      }
      else
      {
        v31 = 0;
        *(_QWORD *)(inited + 80) = 0;
        *(_QWORD *)(inited + 88) = 0;
      }
      *(_QWORD *)(inited + 72) = v30;
      *(_QWORD *)(inited + 96) = v29;
      *(_QWORD *)(inited + 104) = v31;
      sub_1BB386EF8(inited);
    }
    else
    {
      v25 = objc_msgSend(v18, sel_currentDevice);
      v26 = objc_msgSend(v25, sel_userInterfaceIdiom);

      if (v26 == (id)1)
      {
        v27 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a1);
        if (v27)
        {
          v28 = v27;
          *((_QWORD *)&v54 + 1) = sub_1BB86FB38();
          v55 = MEMORY[0x1E0DB77B0];
          *(_QWORD *)&v53 = v28;
        }
        else
        {
          v55 = 0;
          v53 = 0u;
          v54 = 0u;
        }
        v32 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v34 = v32[2];
        v33 = v32[3];
        if (v34 >= v33 >> 1)
          v32 = sub_1BB393424((_QWORD *)(v33 > 1), v34 + 1, 1, v32);
        v32[2] = v34 + 1;
        sub_1BB32CE40((uint64_t)&v53, (uint64_t)&v32[5 * v34 + 4]);
        v52 = v32;
      }
      a3 = v17;
    }
    sub_1BB86FD84();
    sub_1BB86FD78();
    swift_bridgeObjectRelease();
    v15 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v36 = v15[2];
    v35 = v15[3];
    if (v36 >= v35 >> 1)
      v15 = sub_1BB393424((_QWORD *)(v35 > 1), v36 + 1, 1, v15);
    v15[2] = v36 + 1;
    sub_1BB32CE40((uint64_t)&v53, (uint64_t)&v15[5 * v36 + 4]);
    a5 = v49;
    v16 = &off_1BB87A000;
  }
  sub_1BAC88310(0);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = *((_OWORD *)v16 + 57);
  if (qword_1ED3BC200 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v49 = sub_1BAB5BDCC(a1);
  v48[1] = v38;
  if (qword_1ED3AFB38 != -1)
    swift_once();
  v39 = (void *)qword_1ED3AF888;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DB8530], v10);
  *(_QWORD *)&v53 = a1;
  *((_QWORD *)&v53 + 1) = v50;
  v54 = a3;
  v55 = v51;
  v56 = a5;
  v57 = 0;
  v40 = sub_1BB86FB38();
  swift_allocObject();
  v41 = v39;
  v42 = sub_1BB86FB20();
  *(_QWORD *)(v37 + 56) = v40;
  *(_QWORD *)(v37 + 64) = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v37 + 32) = v42;
  v43 = sub_1BB2509A0(a1);
  if (v43)
  {
    v44 = MEMORY[0x1E0DB77B0];
  }
  else
  {
    v40 = 0;
    v44 = 0;
    *(_QWORD *)(v37 + 80) = 0;
    *(_QWORD *)(v37 + 88) = 0;
  }
  *(_QWORD *)(v37 + 72) = v43;
  *(_QWORD *)(v37 + 96) = v40;
  *(_QWORD *)(v37 + 104) = v44;
  sub_1BB86FD84();
  sub_1BB86FD78();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_1BB393424(0, v15[2] + 1, 1, v15);
  v46 = v15[2];
  v45 = v15[3];
  if (v46 >= v45 >> 1)
    v15 = sub_1BB393424((_QWORD *)(v45 > 1), v46 + 1, 1, v15);
  v15[2] = v46 + 1;
  sub_1BB32CE40((uint64_t)&v53, (uint64_t)&v15[5 * v46 + 4]);
  return v15;
}

_QWORD *sub_1BB325C4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  char **__ptr32 *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _OWORD *inited;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  unint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  unint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  void *v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  char v113;
  char **v114;
  void *v115;
  id v116;
  id v117;
  uint64_t ObjCClassFromMetadata;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  id v128;
  uint64_t v129;
  _QWORD *v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  __int128 v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  _QWORD *v169;
  _QWORD *v170;
  uint64_t v171;
  _QWORD *v172;
  __int128 v173;
  __int128 v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  uint64_t v178;

  v165 = a4;
  v166 = a5;
  v163 = a2;
  v178 = *MEMORY[0x1E0C80C00];
  v9 = sub_1BB86FD90();
  v154 = *(_QWORD *)(v9 - 8);
  v155 = v9;
  MEMORY[0x1E0C80A78](v9);
  v153 = (char *)&v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA60, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v11);
  v158 = (char *)&v153 - v12;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA00, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v13);
  v157 = (char *)&v153 - v14;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA30, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v15);
  v156 = (char *)&v153 - v16;
  v17 = sub_1BB870150();
  v160 = *(_QWORD *)(v17 - 8);
  v161 = v17;
  MEMORY[0x1E0C80A78](v17);
  v162 = (char *)&v153 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BA79E0CC(6, a6);
  v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((v19 & 1) != 0)
  {
    sub_1BAC88310(0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
    v22 = sub_1BAB62EB4();
    v23 = v22;
    if (v22)
    {
      v22 = sub_1BB86FB38();
      v24 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v24 = 0;
      *(_QWORD *)(v21 + 40) = 0;
      *(_QWORD *)(v21 + 48) = 0;
    }
    *(_QWORD *)(v21 + 32) = v23;
    *(_QWORD *)(v21 + 56) = v22;
    *(_QWORD *)(v21 + 64) = v24;
    sub_1BB86FD84();
    sub_1BB86FD78();
    swift_bridgeObjectRelease();
    v20 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v26 = v20[2];
    v25 = v20[3];
    if (v26 >= v25 >> 1)
      v20 = sub_1BB393424((_QWORD *)(v25 > 1), v26 + 1, 1, v20);
    v20[2] = v26 + 1;
    sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v20[5 * v26 + 4]);
  }
  v167 = a3;
  v168 = a1;
  v172 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v27 = (void *)objc_opt_self();
  v28 = objc_msgSend(v27, sel_currentDevice);
  v29 = objc_msgSend(v28, sel_userInterfaceIdiom);

  if (v29 == (id)5)
  {
    sub_1BAC88310(0);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1BB87A390;
    v31 = v168;
    v32 = _s5TeaUI15ContextMenuItemC8NewsFeedE12openInNewTab8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(v168);
    v33 = v32;
    if (v32)
    {
      v32 = sub_1BB86FB38();
      v34 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v34 = 0;
      *(_QWORD *)(v30 + 40) = 0;
      *(_QWORD *)(v30 + 48) = 0;
    }
    *(_QWORD *)(v30 + 32) = v33;
    *(_QWORD *)(v30 + 56) = v32;
    *(_QWORD *)(v30 + 64) = v34;
    v39 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(v31);
    v40 = v39;
    if (v39)
    {
      v39 = sub_1BB86FB38();
      v41 = MEMORY[0x1E0DB77B0];
    }
    else
    {
      v41 = 0;
      *(_QWORD *)(v30 + 80) = 0;
      *(_QWORD *)(v30 + 88) = 0;
    }
    *(_QWORD *)(v30 + 72) = v40;
    *(_QWORD *)(v30 + 96) = v39;
    *(_QWORD *)(v30 + 104) = v41;
    sub_1BB386EF8(v30);
  }
  else
  {
    v35 = objc_msgSend(v27, sel_currentDevice);
    v36 = objc_msgSend(v35, sel_userInterfaceIdiom);

    v31 = v168;
    if (v36 == (id)1)
    {
      v37 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(v168);
      if (v37)
      {
        v38 = v37;
        *((_QWORD *)&v174 + 1) = sub_1BB86FB38();
        v175 = MEMORY[0x1E0DB77B0];
        *(_QWORD *)&v173 = v38;
      }
      else
      {
        v175 = 0;
        v173 = 0u;
        v174 = 0u;
      }
      v42 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v44 = v42[2];
      v43 = v42[3];
      if (v44 >= v43 >> 1)
        v42 = sub_1BB393424((_QWORD *)(v43 > 1), v44 + 1, 1, v42);
      v42[2] = v44 + 1;
      sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v42[5 * v44 + 4]);
      v172 = v42;
    }
  }
  if ((sub_1BA79E0CC(16, a6) & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BB86FD84();
    sub_1BB86FD78();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v20 = sub_1BB393424(0, v20[2] + 1, 1, v20);
    v46 = v20[2];
    v45 = v20[3];
    if (v46 >= v45 >> 1)
      v20 = sub_1BB393424((_QWORD *)(v45 > 1), v46 + 1, 1, v20);
    v20[2] = v46 + 1;
    sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v20[5 * v46 + 4]);
  }
  v171 = MEMORY[0x1E0DEE9D8];
  if ((sub_1BA79E0CC(25, a6) & 1) == 0)
  {
    _s5TeaUI15ContextMenuItemC8NewsFeedE15openSportsEvent3forACSo19FCHeadlineProviding_p_tFZ_0((uint64_t)v31);
    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)(v171 + 16) >= *(_QWORD *)(v171 + 24) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
  }
  if ((sub_1BA79E0CC(21, a6) & 1) != 0)
  {
    *(_QWORD *)&v173 = v31;
    *((_QWORD *)&v173 + 1) = v165;
    *(_QWORD *)&v174 = v166;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    _s5TeaUI15ContextMenuItemC8NewsFeedE04readG5Story7contextACSgAD0g4Readi7CommandC0V_tFZ_0((uint64_t *)&v173);
    swift_bridgeObjectRelease();
    v47 = swift_unknownObjectRelease();
    MEMORY[0x1BCCE36AC](v47);
    if (*(_QWORD *)(v171 + 16) >= *(_QWORD *)(v171 + 24) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
  }
  v48 = v171;
  if (*(_QWORD *)(v171 + 16))
  {
    sub_1BB86FD84();
    sub_1BA9763CC(v48);
    swift_bridgeObjectRelease();
    sub_1BB86FD78();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v20 = sub_1BB393424(0, v20[2] + 1, 1, v20);
    v50 = v20[2];
    v49 = v20[3];
    if (v50 >= v49 >> 1)
      v20 = sub_1BB393424((_QWORD *)(v49 > 1), v50 + 1, 1, v20);
    v20[2] = v50 + 1;
    sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v20[5 * v50 + 4]);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v170 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v51 = sub_1BA79E0CC(28, a6);
  v164 = a6;
  v52 = &off_1BB87A000;
  if ((v51 & 1) == 0)
  {
    if (qword_1ED3BC200 != -1)
      swift_once();
    *(_QWORD *)&v159 = v20;
    v53 = v167;
    swift_bridgeObjectRetain();
    v54 = v168;
    swift_unknownObjectRetain();
    v55 = v166;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BAB5BDCC(v54);
    if (qword_1ED3AFB38 != -1)
      swift_once();
    v56 = (void *)qword_1ED3AF888;
    (*(void (**)(char *, _QWORD, uint64_t))(v160 + 104))(v162, *MEMORY[0x1E0DB8530], v161);
    *(_QWORD *)&v173 = v54;
    *((_QWORD *)&v173 + 1) = v163;
    v174 = (unint64_t)v53;
    v175 = v165;
    v176 = v55;
    v177 = 0;
    v57 = sub_1BB86FB38();
    swift_allocObject();
    v58 = v56;
    v59 = sub_1BB86FB20();
    *((_QWORD *)&v174 + 1) = v57;
    v175 = MEMORY[0x1E0DB77B0];
    *(_QWORD *)&v173 = v59;
    v60 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v62 = v60[2];
    v61 = v60[3];
    if (v62 >= v61 >> 1)
      v60 = sub_1BB393424((_QWORD *)(v61 > 1), v62 + 1, 1, v60);
    a6 = v164;
    v60[2] = v62 + 1;
    sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v60[5 * v62 + 4]);
    v170 = v60;
    v31 = v168;
    v20 = (_QWORD *)v159;
    v52 = &off_1BB87A000;
  }
  sub_1BAC88310(0);
  v163 = v63;
  inited = (_OWORD *)swift_initStackObject();
  v159 = *((_OWORD *)v52 + 57);
  inited[1] = v159;
  v65 = sub_1BB86FB38();
  static ContextMenuItem.replyToSharer(headline:)(v31, inited + 2);
  static ContextMenuItem.hideShare(headline:)(v31, (_OWORD *)((char *)inited + 72));
  sub_1BB386EF8((uint64_t)inited);
  if ((sub_1BA79E0CC(29, a6) & 1) == 0)
  {
    v66 = sub_1BA9990C4();
    *((_QWORD *)&v174 + 1) = v65;
    v175 = MEMORY[0x1E0DB77B0];
    *(_QWORD *)&v173 = v66;
    v67 = v170;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v67 = sub_1BB393424(0, v67[2] + 1, 1, v67);
    v69 = v67[2];
    v68 = v67[3];
    if (v69 >= v68 >> 1)
      v67 = sub_1BB393424((_QWORD *)(v68 > 1), v69 + 1, 1, v67);
    v67[2] = v69 + 1;
    sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v67[5 * v69 + 4]);
    v170 = v67;
  }
  v70 = sub_1BB2509A0(v31);
  if (v70)
  {
    *((_QWORD *)&v174 + 1) = v65;
    v175 = MEMORY[0x1E0DB77B0];
    *(_QWORD *)&v173 = v70;
  }
  else
  {
    v175 = 0;
    v173 = 0u;
    v174 = 0u;
  }
  v71 = v170;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v71 = sub_1BB393424(0, v71[2] + 1, 1, v71);
  v73 = v71[2];
  v72 = v71[3];
  if (v73 >= v72 >> 1)
    v71 = sub_1BB393424((_QWORD *)(v72 > 1), v73 + 1, 1, v71);
  v71[2] = v73 + 1;
  sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v71[5 * v73 + 4]);
  v170 = v71;
  v74 = sub_1BA79E0CC(26, a6);
  v167 = v65;
  if ((v74 & 1) == 0)
  {
    v75 = swift_initStackObject();
    *(_OWORD *)(v75 + 16) = v159;
    v76 = a6;
    v78 = v165;
    v77 = v166;
    *(_QWORD *)&v173 = v31;
    *((_QWORD *)&v173 + 1) = v165;
    *(_QWORD *)&v174 = v166;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v79 = _s5TeaUI15ContextMenuItemC8NewsFeedE4like7contextAcD013LikingCommandC0V_tFZ_0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    v80 = MEMORY[0x1E0DB77B0];
    *(_QWORD *)(v75 + 56) = v167;
    *(_QWORD *)(v75 + 64) = v80;
    *(_QWORD *)(v75 + 32) = v79;
    *(_QWORD *)&v173 = v31;
    *((_QWORD *)&v173 + 1) = v78;
    a6 = v76;
    *(_QWORD *)&v174 = v77;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v81 = _s5TeaUI15ContextMenuItemC8NewsFeedE7dislike7contextAcD013LikingCommandC0V_tFZ_0();
    v65 = v167;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    *(_QWORD *)(v75 + 96) = v65;
    *(_QWORD *)(v75 + 104) = v80;
    *(_QWORD *)(v75 + 72) = v81;
    sub_1BB386EF8(v75);
  }
  if ((sub_1BA79E0CC(30, a6) & 1) != 0)
  {
    v82 = _s5TeaUI15ContextMenuItemC8NewsFeedE12openInSafari8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(v31);
    if (v82)
    {
      *((_QWORD *)&v174 + 1) = v65;
      v175 = MEMORY[0x1E0DB77B0];
      *(_QWORD *)&v173 = v82;
    }
    else
    {
      v175 = 0;
      v173 = 0u;
      v174 = 0u;
    }
    v83 = v170;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v83 = sub_1BB393424(0, v83[2] + 1, 1, v83);
    v85 = v83[2];
    v84 = v83[3];
    if (v85 >= v84 >> 1)
      v83 = sub_1BB393424((_QWORD *)(v84 > 1), v85 + 1, 1, v83);
    v83[2] = v85 + 1;
    sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v83[5 * v85 + 4]);
    v170 = v83;
  }
  if ((sub_1BA79E0CC(5, a6) & 1) != 0)
  {
    v86 = _s5TeaUI15ContextMenuItemC8NewsFeedE6report8headlineACSgSo19FCHeadlineProviding_pSg_tFZ_0((uint64_t)v31);
    if (v86)
    {
      *((_QWORD *)&v174 + 1) = v65;
      v175 = MEMORY[0x1E0DB77B0];
      *(_QWORD *)&v173 = v86;
    }
    else
    {
      v175 = 0;
      v173 = 0u;
      v174 = 0u;
    }
    v87 = v170;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v87 = sub_1BB393424(0, v87[2] + 1, 1, v87);
    v89 = v87[2];
    v88 = v87[3];
    if (v89 >= v88 >> 1)
      v87 = sub_1BB393424((_QWORD *)(v88 > 1), v89 + 1, 1, v87);
    v87[2] = v89 + 1;
    sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v87[5 * v89 + 4]);
    v170 = v87;
  }
  if ((sub_1BA79E0CC(0, a6) & 1) != 0)
  {
    v90 = objc_msgSend(v31, sel_identifier);
    v91 = sub_1BB8729A0();
    v93 = v92;

    v94 = _s5TeaUI15ContextMenuItemC8NewsFeedE17removeFromHistory8headlineACSS_tFZ_0(v91, v93);
    swift_bridgeObjectRelease();
    *((_QWORD *)&v174 + 1) = v65;
    v175 = MEMORY[0x1E0DB77B0];
    *(_QWORD *)&v173 = v94;
    v95 = v170;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v95 = sub_1BB393424(0, v95[2] + 1, 1, v95);
    v97 = v95[2];
    v96 = v95[3];
    if (v97 >= v96 >> 1)
      v95 = sub_1BB393424((_QWORD *)(v96 > 1), v97 + 1, 1, v95);
    v95[2] = v97 + 1;
    sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v95[5 * v97 + 4]);
    v170 = v95;
  }
  if ((sub_1BA79E0CC(1, a6) & 1) != 0)
  {
    v98 = sub_1BAF31114((uint64_t)v31);
    if (v98)
    {
      *((_QWORD *)&v174 + 1) = v65;
      v175 = MEMORY[0x1E0DB77B0];
      *(_QWORD *)&v173 = v98;
    }
    else
    {
      v175 = 0;
      v173 = 0u;
      v174 = 0u;
    }
    v99 = v170;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v99 = sub_1BB393424(0, v99[2] + 1, 1, v99);
    v101 = v99[2];
    v100 = v99[3];
    if (v101 >= v100 >> 1)
      v99 = sub_1BB393424((_QWORD *)(v100 > 1), v101 + 1, 1, v99);
    v99[2] = v101 + 1;
    sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v99[5 * v101 + 4]);
    v170 = v99;
  }
  v102 = sub_1BB86FD84();
  sub_1BB86FD78();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_1BB393424(0, v20[2] + 1, 1, v20);
  v104 = v20[2];
  v103 = v20[3];
  if (v104 >= v103 >> 1)
    v20 = sub_1BB393424((_QWORD *)(v103 > 1), v104 + 1, 1, v20);
  v20[2] = v104 + 1;
  sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v20[5 * v104 + 4]);
  v105 = (void *)objc_opt_self();
  v106 = objc_msgSend(v105, sel_mainBundle);
  v107 = objc_msgSend(v106, sel_bundleIdentifier);

  if (v107)
  {
    v166 = v102;
    v108 = sub_1BB8729A0();
    v110 = v109;

    if (v108 == 0x6C7070612E6D6F63 && v110 == 0xEE007377656E2E65)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v111 = sub_1BB874398();
      swift_bridgeObjectRelease();
      if ((v111 & 1) == 0)
        return v20;
    }
    v169 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v112 = v164;
    v113 = sub_1BA79E0CC(14, v164);
    v114 = &selRef_backgroundColor;
    v115 = v168;
    if ((v113 & 1) == 0)
    {
      v116 = objc_msgSend(v168, sel_sourceChannel);
      if (v116)
      {
        v117 = v116;
        swift_getObjectType();
        type metadata accessor for Localized();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        swift_unknownObjectRetain();
        v119 = objc_msgSend(v105, sel_bundleForClass_, ObjCClassFromMetadata);
        sub_1BB86C340();

        sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v120 = swift_allocObject();
        *(_OWORD *)(v120 + 16) = xmmword_1BB87CE70;
        v121 = FCTagProviding.localizedTagType.getter();
        v123 = v122;
        *(_QWORD *)(v120 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v120 + 64) = sub_1BA6A2D8C();
        *(_QWORD *)(v120 + 32) = v121;
        *(_QWORD *)(v120 + 40) = v123;
        v165 = sub_1BB8729D0();
        swift_bridgeObjectRelease();
        if (qword_1ED3BC080 != -1)
          swift_once();
        v124 = qword_1ED3AFB18;
        v125 = v168;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_retain();
        v126 = v167;
        if (v124 != -1)
          swift_once();
        v127 = (void *)qword_1ED3AFB10;
        (*(void (**)(char *, _QWORD, uint64_t))(v160 + 104))(v162, *MEMORY[0x1E0DB8530], v161);
        *(_QWORD *)&v173 = v117;
        BYTE8(v173) = 0;
        *(_QWORD *)&v174 = v125;
        swift_allocObject();
        v128 = v127;
        v129 = sub_1BB86FB20();
        swift_unknownObjectRelease_n();
        *((_QWORD *)&v174 + 1) = v126;
        v175 = MEMORY[0x1E0DB77B0];
        *(_QWORD *)&v173 = v129;
        v114 = &selRef_backgroundColor;
      }
      else
      {
        v175 = 0;
        v173 = 0u;
        v174 = 0u;
      }
      v130 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v132 = v130[2];
      v131 = v130[3];
      v112 = v164;
      if (v132 >= v131 >> 1)
        v130 = sub_1BB393424((_QWORD *)(v131 > 1), v132 + 1, 1, v130);
      v115 = v168;
      v130[2] = v132 + 1;
      sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v130[5 * v132 + 4]);
      v169 = v130;
    }
    v133 = swift_allocObject();
    *(_OWORD *)(v133 + 16) = xmmword_1BB87FC80;
    v134 = _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0((uint64_t)objc_msgSend(v115, v114[117]));
    swift_unknownObjectRelease();
    if (v134)
    {
      v135 = MEMORY[0x1E0DB77B0];
      v136 = v167;
    }
    else
    {
      v136 = 0;
      v135 = 0;
      *(_QWORD *)(v133 + 40) = 0;
      *(_QWORD *)(v133 + 48) = 0;
    }
    *(_QWORD *)(v133 + 32) = v134;
    *(_QWORD *)(v133 + 56) = v136;
    *(_QWORD *)(v133 + 64) = v135;
    v137 = _s5TeaUI15ContextMenuItemC8NewsFeedE5block3tagACSgSo14FCTagProviding_pSg_tFZ_0((uint64_t)objc_msgSend(v115, v114[117]));
    swift_unknownObjectRelease();
    if (v137)
    {
      v138 = MEMORY[0x1E0DB77B0];
      v139 = v167;
    }
    else
    {
      v139 = 0;
      v138 = 0;
      *(_QWORD *)(v133 + 80) = 0;
      *(_QWORD *)(v133 + 88) = 0;
    }
    *(_QWORD *)(v133 + 72) = v137;
    *(_QWORD *)(v133 + 96) = v139;
    *(_QWORD *)(v133 + 104) = v138;
    v140 = objc_msgSend(v115, v114[117]);
    if (v140)
    {
      v141 = v140;
      v142 = qword_1ED39F0A0;
      swift_unknownObjectRetain();
      if (v142 != -1)
        swift_once();
      LOBYTE(v173) = 0;
      sub_1BA81FF50();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1BB870030();
      LOBYTE(v173) = 0;
      sub_1BB870018();
      sub_1BB870348();
      *(_QWORD *)&v173 = v141;
      v143 = v167;
      swift_allocObject();
      v144 = sub_1BB86FB2C();
      swift_unknownObjectRelease_n();
      v145 = MEMORY[0x1E0DB77B0];
      *(_QWORD *)(v133 + 136) = v143;
      *(_QWORD *)(v133 + 144) = v145;
      *(_QWORD *)(v133 + 112) = v144;
      v112 = v164;
      v115 = v168;
      v114 = &selRef_backgroundColor;
    }
    else
    {
      *(_QWORD *)(v133 + 144) = 0;
      *(_OWORD *)(v133 + 112) = 0u;
      *(_OWORD *)(v133 + 128) = 0u;
    }
    sub_1BB386EF8(v133);
    if ((sub_1BA79E0CC(10, v112) & 1) != 0
      || (sub_1BA79E0CC(12, v112) & 1) != 0 && (sub_1BA79E0CC(8, v112) & 1) == 0)
    {
      v146 = objc_msgSend(v115, v114[117]);
      if (v146)
      {
        v147 = objc_msgSend(v146, sel_displayName);
        swift_unknownObjectRelease();
        sub_1BB8729A0();

      }
      v148 = v166;
      (*(void (**)(char *, _QWORD, uint64_t))(v154 + 104))(v153, *MEMORY[0x1E0DB7CF0], v155);
      swift_allocObject();
      v149 = sub_1BB86FD6C();
      *((_QWORD *)&v174 + 1) = v148;
      v175 = MEMORY[0x1E0DB7CC8];
      *(_QWORD *)&v173 = v149;
    }
    else
    {
      sub_1BB86FD78();
      swift_bridgeObjectRelease();
    }
    v151 = v20[2];
    v150 = v20[3];
    if (v151 >= v150 >> 1)
      v20 = sub_1BB393424((_QWORD *)(v150 > 1), v151 + 1, 1, v20);
    v20[2] = v151 + 1;
    sub_1BB32CE40((uint64_t)&v173, (uint64_t)&v20[5 * v151 + 4]);
  }
  return v20;
}

_QWORD *sub_1BB3272C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t (*ObjectType)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char **__ptr32 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t inited;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char **v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t ObjCClassFromMetadata;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  char *v109;
  void *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  void *v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  _QWORD v143[2];
  id v144;
  uint64_t v145;
  uint64_t *v146;
  unint64_t v147;
  __int128 v148;
  unsigned int v149;
  uint64_t v150;
  __int128 v151;
  unsigned int v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  __int128 v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  void (*v169)(char *, uint64_t, uint64_t);
  _QWORD *v170;
  _QWORD *v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  uint64_t v175;

  v175 = *MEMORY[0x1E0C80C00];
  v145 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v145);
  v146 = (_QWORD *)((char *)v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v165 = sub_1BB86FD90();
  v164 = *(_QWORD *)(v165 - 8);
  MEMORY[0x1E0C80A78](v165);
  v166 = (char *)v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1BB870150();
  v150 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v7 = (char *)v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8BA0];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA70, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v9);
  v162 = (char *)v143 - v10;
  ObjectType = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8328];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA10, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v12);
  v161 = (char *)v143 - v13;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8348];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA40, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v15);
  v160 = (char *)v143 - v16;
  v17 = (char **__ptr32 *)&type metadata for FollowingCommandState;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA80, (uint64_t (*)(void))sub_1BA82BE0C, (uint64_t)&type metadata for FollowingCommandState, v8);
  MEMORY[0x1E0C80A78](v18);
  v159 = (char *)v143 - v19;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA20, (uint64_t (*)(void))sub_1BA82BE0C, (uint64_t)&type metadata for FollowingCommandState, ObjectType);
  MEMORY[0x1E0C80A78](v20);
  v158 = (char *)v143 - v21;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA50, (uint64_t (*)(void))sub_1BA82BE0C, (uint64_t)&type metadata for FollowingCommandState, v14);
  MEMORY[0x1E0C80A78](v22);
  v157 = (char *)v143 - v23;
  v24 = *(void **)(a1 + 56);
  v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v168 = v7;
  v167 = a1;
  v144 = v24;
  if (v24)
  {
    ObjectType = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_getObjectType();
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_isRouteable))
    {
      v171 = v25;
      v26 = (void *)objc_opt_self();
      v27 = objc_msgSend(v26, sel_currentDevice);
      v28 = objc_msgSend(v27, sel_userInterfaceIdiom);

      v17 = &off_1BB87A000;
      if (v28 == (id)5)
      {
        sub_1BAC88310(0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
        v30 = sub_1BB86FB38();
        v31 = v144;
        v32 = swift_unknownObjectRetain();
        v33 = sub_1BA87DF44(v32, 8);
        swift_unknownObjectRelease();
        if (v33)
        {
          v34 = MEMORY[0x1E0DB77B0];
          v35 = v30;
        }
        else
        {
          v35 = 0;
          v34 = 0;
          *(_QWORD *)(inited + 40) = 0;
          *(_QWORD *)(inited + 48) = 0;
        }
        v7 = v168;
        *(_QWORD *)(inited + 32) = v33;
        *(_QWORD *)(inited + 56) = v35;
        *(_QWORD *)(inited + 64) = v34;
        v41 = swift_unknownObjectRetain();
        v42 = sub_1BB063B10(v41, 8);
        swift_unknownObjectRelease();
        if (v42)
        {
          v43 = MEMORY[0x1E0DB77B0];
        }
        else
        {
          v30 = 0;
          v43 = 0;
          *(_QWORD *)(inited + 80) = 0;
          *(_QWORD *)(inited + 88) = 0;
        }
        *(_QWORD *)(inited + 72) = v42;
        *(_QWORD *)(inited + 96) = v30;
        *(_QWORD *)(inited + 104) = v43;
        sub_1BB386EF8(inited);
      }
      else
      {
        v36 = objc_msgSend(v26, sel_currentDevice);
        v37 = objc_msgSend(v36, sel_userInterfaceIdiom);

        v7 = v168;
        v31 = v144;
        if (v37 == (id)1)
        {
          v38 = sub_1BB86FB38();
          v39 = swift_unknownObjectRetain();
          v40 = sub_1BB063B10(v39, 8);
          swift_unknownObjectRelease();
          if (v40)
          {
            *((_QWORD *)&v173 + 1) = v38;
            v174 = MEMORY[0x1E0DB77B0];
            *(_QWORD *)&v172 = v40;
          }
          else
          {
            v174 = 0;
            v172 = 0u;
            v173 = 0u;
          }
          v44 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
          v46 = v44[2];
          v45 = v44[3];
          if (v46 >= v45 >> 1)
            v44 = sub_1BB393424((_QWORD *)(v45 > 1), v46 + 1, 1, v44);
          v44[2] = v46 + 1;
          sub_1BB32CE40((uint64_t)&v172, (uint64_t)&v44[5 * v46 + 4]);
          v171 = v44;
        }
      }
      if ((sub_1BA79E0CC(16, a2) & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BB86FD84();
        sub_1BB86FD78();
        swift_bridgeObjectRelease();
        v25 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v48 = v25[2];
        v47 = v25[3];
        if (v48 >= v47 >> 1)
          v25 = sub_1BB393424((_QWORD *)(v47 > 1), v48 + 1, 1, v25);
        v25[2] = v48 + 1;
        sub_1BB32CE40((uint64_t)&v172, (uint64_t)&v25[5 * v48 + 4]);
      }
      sub_1BAC88310(0);
      v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1BB87A390;
      v50 = sub_1BB86FB38();
      v51 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openSportsEvent3forAcD0I22ScoreDataVisualizationC_tFZ_0(v167);
      *(_QWORD *)(v49 + 56) = v50;
      *(_QWORD *)(v49 + 64) = MEMORY[0x1E0DB77B0];
      *(_QWORD *)(v49 + 32) = v51;
      LOBYTE(v172) = 0;
      v52 = sub_1BAB5CB58(v31, 0, (unsigned __int8 *)&v172);
      if (v52)
      {
        v53 = MEMORY[0x1E0DB77B0];
      }
      else
      {
        v50 = 0;
        v53 = 0;
        *(_QWORD *)(v49 + 80) = 0;
        *(_QWORD *)(v49 + 88) = 0;
      }
      *(_QWORD *)(v49 + 72) = v52;
      *(_QWORD *)(v49 + 96) = v50;
      *(_QWORD *)(v49 + 104) = v53;
      sub_1BB86FD84();
      sub_1BB86FD78();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v25 = sub_1BB393424(0, v25[2] + 1, 1, v25);
      v55 = v25[2];
      v54 = v25[3];
      if (v55 >= v54 >> 1)
        v25 = sub_1BB393424((_QWORD *)(v54 > 1), v55 + 1, 1, v25);
      v25[2] = v55 + 1;
      sub_1BB32CE40((uint64_t)&v172, (uint64_t)&v25[5 * v55 + 4]);
    }
    swift_unknownObjectRelease();
    a1 = v167;
  }
  v56 = *(_QWORD *)(a1 + 32);
  if (v56 >> 62)
  {
    swift_bridgeObjectRetain();
    v57 = sub_1BB873F30();
  }
  else
  {
    v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v57)
  {
    if (v57 >= 1)
    {
      v58 = 0;
      v59 = v56 & 0xC000000000000001;
      v153 = OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_metadata;
      v149 = *MEMORY[0x1E0DB8530];
      v60 = &selRef_isSports;
      v152 = *MEMORY[0x1E0DB7CF0];
      v151 = xmmword_1BB87A390;
      v143[1] = "com.apple.stocks";
      v147 = 0x80000001BB9855A0;
      v148 = xmmword_1BB87CE70;
      *(_QWORD *)&v156 = v56;
      v155 = v57;
      v154 = v56 & 0xC000000000000001;
      while (1)
      {
        if (v59)
        {
          v61 = (void *)MEMORY[0x1BCCE4630](v58, v56);
        }
        else
        {
          v61 = *(void **)(v56 + 8 * v58 + 32);
          swift_unknownObjectRetain();
        }
        v62 = swift_getObjectType();
        if (!objc_msgSend(v61, v60[114]))
          break;
        swift_unknownObjectRelease();
LABEL_39:
        if (v57 == ++v58)
          goto LABEL_77;
      }
      v169 = (void (*)(char *, uint64_t, uint64_t))v62;
      v170 = v25;
      sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C1200, (uint64_t (*)(uint64_t))sub_1BB32CEE0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = v151;
      v64 = qword_1ED3BA900;
      swift_unknownObjectRetain_n();
      if (v64 != -1)
        swift_once();
      LOBYTE(v172) = 1;
      v65 = swift_allocObject();
      *(_QWORD *)(v65 + 16) = v61;
      *(_WORD *)(v65 + 24) = 256;
      sub_1BA82BE0C();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1BB870030();
      LOBYTE(v172) = 1;
      sub_1BB870018();
      sub_1BB870348();
      *(_QWORD *)&v172 = v61;
      WORD4(v172) = 256;
      sub_1BB86FB38();
      swift_allocObject();
      v66 = sub_1BB86FB2C();
      swift_unknownObjectRelease();
      *(_QWORD *)(v63 + 32) = v66;
      v67 = qword_1ED3BA8E8;
      swift_unknownObjectRetain_n();
      if (v67 != -1)
        swift_once();
      LOBYTE(v172) = 1;
      *(_QWORD *)(swift_allocObject() + 16) = v61;
      sub_1BA82DAD0();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1BB870030();
      LOBYTE(v172) = 1;
      sub_1BB870018();
      sub_1BB870348();
      *(_QWORD *)&v172 = v61;
      swift_allocObject();
      v68 = sub_1BB86FB2C();
      swift_unknownObjectRelease();
      *(_QWORD *)(v63 + 40) = v68;
      *(_QWORD *)&v172 = v63;
      sub_1BB872DCC();
      v171 = (_QWORD *)v172;
      v69 = *(_QWORD *)(v167 + v153);
      v7 = v168;
      if (v69)
      {
        v70 = *(void **)(v69 + 16);
        if (v70)
        {
          if (objc_msgSend((id)swift_unknownObjectRetain(), sel_sportsType) == (id)3)
          {
            v71 = objc_msgSend(v70, sel_identifier);
            v72 = sub_1BB8729A0();
            v74 = v73;

            v75 = objc_msgSend(v61, sel_identifier);
            v76 = sub_1BB8729A0();
            v78 = v77;

            if (v72 == v76 && v74 == v78)
            {
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease_n();
              v7 = v168;
              v25 = v170;
LABEL_63:
              v90 = objc_msgSend(v61, sel_compactDisplayName);
              sub_1BB8729A0();

              sub_1BA9763CC((uint64_t)v171);
              swift_bridgeObjectRelease();
              (*(void (**)(char *, _QWORD, uint64_t))(v164 + 104))(v166, v152, v165);
              v91 = sub_1BB86FD84();
              swift_allocObject();
              v92 = sub_1BB86FD6C();
              *((_QWORD *)&v173 + 1) = v91;
              v174 = MEMORY[0x1E0DB7CC8];
              *(_QWORD *)&v172 = v92;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v25 = sub_1BB393424(0, v25[2] + 1, 1, v25);
              v59 = v154;
              v60 = &selRef_isSports;
              v94 = v25[2];
              v93 = v25[3];
              if (v94 >= v93 >> 1)
                v25 = sub_1BB393424((_QWORD *)(v93 > 1), v94 + 1, 1, v25);
              v25[2] = v94 + 1;
              sub_1BB32CE40((uint64_t)&v172, (uint64_t)&v25[5 * v94 + 4]);
              swift_unknownObjectRelease();
              v56 = v156;
              v57 = v155;
              goto LABEL_39;
            }
            v95 = sub_1BB874398();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v95 & 1) != 0)
            {
              swift_unknownObjectRelease();
              v7 = v168;
            }
            else
            {
              type metadata accessor for Localized();
              ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
              v97 = (void *)objc_opt_self();
              swift_unknownObjectRetain();
              v98 = objc_msgSend(v97, sel_bundleForClass_, ObjCClassFromMetadata);
              sub_1BB86C340();

              sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
              v99 = swift_allocObject();
              *(_OWORD *)(v99 + 16) = v148;
              v100 = FCTagProviding.localizedTagType.getter();
              v102 = v101;
              *(_QWORD *)(v99 + 56) = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v99 + 64) = sub_1BA6A2D8C();
              *(_QWORD *)(v99 + 32) = v100;
              *(_QWORD *)(v99 + 40) = v102;
              v169 = (void (*)(char *, uint64_t, uint64_t))sub_1BB8729D0();
              swift_bridgeObjectRelease();
              if (qword_1ED3BC080 != -1)
                swift_once();
              v103 = qword_1ED3AFB18;
              swift_unknownObjectRetain();
              swift_retain();
              v7 = v168;
              if (v103 != -1)
                swift_once();
              v104 = (void *)qword_1ED3AFB10;
              (*(void (**)(char *, _QWORD, uint64_t))(v150 + 104))(v7, v149, v163);
              *(_QWORD *)&v172 = v61;
              BYTE8(v172) = 0;
              *(_QWORD *)&v173 = 0;
              swift_allocObject();
              v105 = v104;
              sub_1BB86FB20();
              v106 = swift_unknownObjectRelease();
              MEMORY[0x1BCCE36AC](v106);
              if (v171[2] >= v171[3] >> 1)
                sub_1BB872E44();
              sub_1BB872E8C();
              sub_1BB872DCC();
              swift_unknownObjectRelease();
            }
LABEL_62:
            v25 = v170;
            goto LABEL_63;
          }
          swift_unknownObjectRelease();
        }
      }
      type metadata accessor for Localized();
      v79 = swift_getObjCClassFromMetadata();
      v80 = (void *)objc_opt_self();
      swift_unknownObjectRetain();
      v81 = objc_msgSend(v80, sel_bundleForClass_, v79);
      sub_1BB86C340();

      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v82 = swift_allocObject();
      *(_OWORD *)(v82 + 16) = v148;
      v83 = FCTagProviding.localizedTagType.getter();
      v85 = v84;
      *(_QWORD *)(v82 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v82 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v82 + 32) = v83;
      *(_QWORD *)(v82 + 40) = v85;
      sub_1BB8729D0();
      swift_bridgeObjectRelease();
      if (qword_1ED3BC080 != -1)
        swift_once();
      v86 = qword_1ED3AFB18;
      swift_unknownObjectRetain();
      swift_retain();
      if (v86 != -1)
        swift_once();
      v87 = (void *)qword_1ED3AFB10;
      (*(void (**)(char *, _QWORD, uint64_t))(v150 + 104))(v7, v149, v163);
      *(_QWORD *)&v172 = v61;
      BYTE8(v172) = 0;
      *(_QWORD *)&v173 = 0;
      swift_allocObject();
      v88 = v87;
      sub_1BB86FB20();
      v89 = swift_unknownObjectRelease();
      MEMORY[0x1BCCE36AC](v89);
      if (v171[2] >= v171[3] >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      goto LABEL_62;
    }
    __break(1u);
LABEL_101:
    swift_once();
LABEL_89:
    *v146 = v57;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_retain();
    v125 = (void *)sub_1BB872970();
    v126 = objc_msgSend(v162, sel_systemImageNamed_, v125);

    v169(v168, v161, v163);
    swift_allocObject();
    v127 = sub_1BB86FB20();
    swift_release();
    *((_QWORD *)v17 + 7) = ObjectType;
    v128 = MEMORY[0x1E0DB77B0];
    *((_QWORD *)v17 + 8) = MEMORY[0x1E0DB77B0];
    *((_QWORD *)v17 + 4) = v127;
    if (v144 && (v129 = objc_msgSend(v144, sel_UMCCanonicalID)) != 0)
    {
      v130 = v129;
      v131 = sub_1BB8729A0();
      v133 = v132;

    }
    else
    {
      v131 = 0;
      v133 = 0;
    }
    v134 = sub_1BB2DF5F4(v131, v133);
    swift_bridgeObjectRelease();
    *((_QWORD *)v17 + 12) = ObjectType;
    *((_QWORD *)v17 + 13) = v128;
    *((_QWORD *)v17 + 9) = v134;
    v135 = swift_allocObject();
    *(_QWORD *)(v135 + 16) = v167;
    v136 = qword_1ED3C4090;
    swift_retain();
    if (v136 != -1)
      swift_once();
    *v146 = v135;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_retain();
    v137 = (void *)sub_1BB872970();
    v138 = objc_msgSend(v162, sel_systemImageNamed_, v137);

    v169(v168, v161, v163);
    swift_allocObject();
    v139 = sub_1BB86FB20();
    swift_release();
    *((_QWORD *)v17 + 17) = ObjectType;
    *((_QWORD *)v17 + 18) = v128;
    *((_QWORD *)v17 + 14) = v139;
    sub_1BB86FD78();
    swift_bridgeObjectRelease();
    v141 = v25[2];
    v140 = v25[3];
    if (v141 >= v140 >> 1)
      v25 = sub_1BB393424((_QWORD *)(v140 > 1), v141 + 1, 1, v25);
    v25[2] = v141 + 1;
    sub_1BB32CE40((uint64_t)&v172, (uint64_t)&v25[5 * v141 + 4]);
    return v25;
  }
LABEL_77:
  v170 = v25;
  swift_bridgeObjectRelease();
  type metadata accessor for Localized();
  v107 = swift_getObjCClassFromMetadata();
  v108 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v107);
  v160 = (char *)sub_1BB86C340();
  v159 = v109;

  v110 = (void *)sub_1BB872970();
  v162 = (char *)objc_opt_self();
  v158 = (char *)objc_msgSend(v162, sel_systemImageNamed_, v110);

  sub_1BAC88310(0);
  v157 = v111;
  v112 = swift_allocObject();
  v156 = xmmword_1BB87FC80;
  *(_OWORD *)(v112 + 16) = xmmword_1BB87FC80;
  if (qword_1ED3C4BC8 != -1)
    swift_once();
  swift_retain();
  v113 = v167;
  swift_retain();
  sub_1BB2A0910();
  v114 = *MEMORY[0x1E0DB8530];
  v115 = v163;
  v169 = *(void (**)(char *, uint64_t, uint64_t))(v150 + 104);
  v169(v7, v114, v163);
  *(_QWORD *)&v172 = v113;
  BYTE8(v172) = 1;
  ObjectType = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1BB86FB38();
  swift_allocObject();
  v116 = sub_1BB86FB20();
  *(_QWORD *)(v112 + 56) = ObjectType;
  v117 = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v112 + 64) = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v112 + 32) = v116;
  if (qword_1ED3C4B80 != -1)
    swift_once();
  swift_retain();
  swift_retain();
  sub_1BB2A0910();
  v169(v7, v114, v115);
  *(_QWORD *)&v172 = v113;
  BYTE8(v172) = 0;
  swift_allocObject();
  v118 = sub_1BB86FB20();
  *(_QWORD *)(v112 + 96) = ObjectType;
  *(_QWORD *)(v112 + 104) = v117;
  *(_QWORD *)(v112 + 72) = v118;
  if (qword_1ED3C4B98 != -1)
    swift_once();
  swift_retain();
  swift_retain();
  sub_1BB2A0910();
  LODWORD(v161) = v114;
  v169(v7, v114, v115);
  *(_QWORD *)&v172 = v113;
  BYTE8(v172) = 2;
  swift_allocObject();
  v119 = sub_1BB86FB20();
  *(_QWORD *)(v112 + 136) = ObjectType;
  *(_QWORD *)(v112 + 144) = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v112 + 112) = v119;
  (*(void (**)(char *, _QWORD, uint64_t))(v164 + 104))(v166, *MEMORY[0x1E0DB7CF0], v165);
  v120 = sub_1BB86FD84();
  swift_allocObject();
  v121 = sub_1BB86FD6C();
  *((_QWORD *)&v173 + 1) = v120;
  v174 = MEMORY[0x1E0DB7CC8];
  *(_QWORD *)&v172 = v121;
  v25 = v170;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_1BB393424(0, v25[2] + 1, 1, v25);
  v123 = v25[2];
  v122 = v25[3];
  if (v123 >= v122 >> 1)
    v25 = sub_1BB393424((_QWORD *)(v122 > 1), v123 + 1, 1, v25);
  v25[2] = v123 + 1;
  sub_1BB32CE40((uint64_t)&v172, (uint64_t)&v25[5 * v123 + 4]);
  if (NFInternalBuild())
  {
    v17 = (char **__ptr32 *)swift_allocObject();
    *((_OWORD *)v17 + 1) = v156;
    v57 = swift_allocObject();
    *(_QWORD *)(v57 + 16) = v167;
    v124 = qword_1ED3C4078;
    swift_retain();
    if (v124 == -1)
      goto LABEL_89;
    goto LABEL_101;
  }
  return v25;
}

_QWORD *sub_1BB328E88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  void (*v30)(char *, _QWORD, uint64_t);
  unsigned int v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char v35[40];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild())
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v34 = v2;
  v33 = sub_1BB86FD84();
  sub_1BAC88310(0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  v11 = v10 | 0x2000000000000000;
  v12 = qword_1ED3C4078;
  swift_retain();
  if (v12 != -1)
    swift_once();
  *v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v13 = (void *)sub_1BB872970();
  v32 = (id)objc_opt_self();
  v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  v15 = *(void (**)(_QWORD))(v3 + 104);
  v31 = *MEMORY[0x1E0DB8530];
  v16 = v34;
  v30 = (void (*)(char *, _QWORD, uint64_t))v15;
  v15(v5);
  v17 = sub_1BB86FB38();
  swift_allocObject();
  v18 = sub_1BB86FB20();
  swift_release();
  v19 = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 56) = v17;
  *(_QWORD *)(v9 + 64) = v19;
  *(_QWORD *)(v9 + 32) = v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  v21 = v20 | 0x2000000000000000;
  v22 = qword_1ED3C4090;
  swift_retain();
  if (v22 != -1)
    swift_once();
  *v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v23 = (void *)sub_1BB872970();
  v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v30(v5, v31, v16);
  swift_allocObject();
  v25 = sub_1BB86FB20();
  swift_release();
  *(_QWORD *)(v9 + 96) = v17;
  *(_QWORD *)(v9 + 104) = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 72) = v25;
  sub_1BB86FD78();
  swift_bridgeObjectRelease();
  v26 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_1BB393424((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  sub_1BB32CE40((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

_QWORD *sub_1BB3292B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  void (*v30)(char *, _QWORD, uint64_t);
  unsigned int v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char v35[40];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild())
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v34 = v2;
  v33 = sub_1BB86FD84();
  sub_1BAC88310(0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  v11 = v10 | 0x4000000000000000;
  v12 = qword_1ED3C4078;
  swift_retain();
  if (v12 != -1)
    swift_once();
  *v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v13 = (void *)sub_1BB872970();
  v32 = (id)objc_opt_self();
  v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  v15 = *(void (**)(_QWORD))(v3 + 104);
  v31 = *MEMORY[0x1E0DB8530];
  v16 = v34;
  v30 = (void (*)(char *, _QWORD, uint64_t))v15;
  v15(v5);
  v17 = sub_1BB86FB38();
  swift_allocObject();
  v18 = sub_1BB86FB20();
  swift_release();
  v19 = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 56) = v17;
  *(_QWORD *)(v9 + 64) = v19;
  *(_QWORD *)(v9 + 32) = v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  v21 = v20 | 0x4000000000000000;
  v22 = qword_1ED3C4090;
  swift_retain();
  if (v22 != -1)
    swift_once();
  *v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v23 = (void *)sub_1BB872970();
  v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v30(v5, v31, v16);
  swift_allocObject();
  v25 = sub_1BB86FB20();
  swift_release();
  *(_QWORD *)(v9 + 96) = v17;
  *(_QWORD *)(v9 + 104) = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 72) = v25;
  sub_1BB86FD78();
  swift_bridgeObjectRelease();
  v26 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_1BB393424((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  sub_1BB32CE40((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

_QWORD *sub_1BB3296D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  void (*v30)(char *, _QWORD, uint64_t);
  unsigned int v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char v35[40];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild())
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v34 = v2;
  v33 = sub_1BB86FD84();
  sub_1BAC88310(0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  v11 = v10 | 0x6000000000000000;
  v12 = qword_1ED3C4078;
  swift_retain();
  if (v12 != -1)
    swift_once();
  *v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v13 = (void *)sub_1BB872970();
  v32 = (id)objc_opt_self();
  v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  v15 = *(void (**)(_QWORD))(v3 + 104);
  v31 = *MEMORY[0x1E0DB8530];
  v16 = v34;
  v30 = (void (*)(char *, _QWORD, uint64_t))v15;
  v15(v5);
  v17 = sub_1BB86FB38();
  swift_allocObject();
  v18 = sub_1BB86FB20();
  swift_release();
  v19 = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 56) = v17;
  *(_QWORD *)(v9 + 64) = v19;
  *(_QWORD *)(v9 + 32) = v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  v21 = v20 | 0x6000000000000000;
  v22 = qword_1ED3C4090;
  swift_retain();
  if (v22 != -1)
    swift_once();
  *v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v23 = (void *)sub_1BB872970();
  v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v30(v5, v31, v16);
  swift_allocObject();
  v25 = sub_1BB86FB20();
  swift_release();
  *(_QWORD *)(v9 + 96) = v17;
  *(_QWORD *)(v9 + 104) = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 72) = v25;
  sub_1BB86FD78();
  swift_bridgeObjectRelease();
  v26 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_1BB393424((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  sub_1BB32CE40((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

_QWORD *sub_1BB329B00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  void (*v30)(char *, _QWORD, uint64_t);
  unsigned int v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char v35[40];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v6);
  v8 = (unint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild())
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v34 = v2;
  v33 = sub_1BB86FD84();
  sub_1BAC88310(0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  v11 = v10 | 0x8000000000000000;
  v12 = qword_1ED3C4078;
  swift_retain();
  if (v12 != -1)
    swift_once();
  *v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v13 = (void *)sub_1BB872970();
  v32 = (id)objc_opt_self();
  v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  v15 = *(void (**)(_QWORD))(v3 + 104);
  v31 = *MEMORY[0x1E0DB8530];
  v16 = v34;
  v30 = (void (*)(char *, _QWORD, uint64_t))v15;
  v15(v5);
  v17 = sub_1BB86FB38();
  swift_allocObject();
  v18 = sub_1BB86FB20();
  swift_release();
  v19 = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 56) = v17;
  *(_QWORD *)(v9 + 64) = v19;
  *(_QWORD *)(v9 + 32) = v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  v21 = v20 | 0x8000000000000000;
  v22 = qword_1ED3C4090;
  swift_retain();
  if (v22 != -1)
    swift_once();
  *v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v23 = (void *)sub_1BB872970();
  v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v30(v5, v31, v16);
  swift_allocObject();
  v25 = sub_1BB86FB20();
  swift_release();
  *(_QWORD *)(v9 + 96) = v17;
  *(_QWORD *)(v9 + 104) = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 72) = v25;
  sub_1BB86FD78();
  swift_bridgeObjectRelease();
  v26 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_1BB393424((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  sub_1BB32CE40((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

_QWORD *sub_1BB329F28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  void (*v30)(char *, _QWORD, uint64_t);
  unsigned int v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char v35[40];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v6);
  v8 = (unint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild())
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v34 = v2;
  v33 = sub_1BB86FD84();
  sub_1BAC88310(0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  v11 = v10 | 0xA000000000000000;
  v12 = qword_1ED3C4078;
  swift_retain();
  if (v12 != -1)
    swift_once();
  *v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v13 = (void *)sub_1BB872970();
  v32 = (id)objc_opt_self();
  v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  v15 = *(void (**)(_QWORD))(v3 + 104);
  v31 = *MEMORY[0x1E0DB8530];
  v16 = v34;
  v30 = (void (*)(char *, _QWORD, uint64_t))v15;
  v15(v5);
  v17 = sub_1BB86FB38();
  swift_allocObject();
  v18 = sub_1BB86FB20();
  swift_release();
  v19 = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 56) = v17;
  *(_QWORD *)(v9 + 64) = v19;
  *(_QWORD *)(v9 + 32) = v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  v21 = v20 | 0xA000000000000000;
  v22 = qword_1ED3C4090;
  swift_retain();
  if (v22 != -1)
    swift_once();
  *v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v23 = (void *)sub_1BB872970();
  v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v30(v5, v31, v16);
  swift_allocObject();
  v25 = sub_1BB86FB20();
  swift_release();
  *(_QWORD *)(v9 + 96) = v17;
  *(_QWORD *)(v9 + 104) = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 72) = v25;
  sub_1BB86FD78();
  swift_bridgeObjectRelease();
  v26 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_1BB393424((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  sub_1BB32CE40((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

_QWORD *sub_1BB32A358(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  void (*v30)(char *, _QWORD, uint64_t);
  unsigned int v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char v35[40];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v6);
  v8 = (unint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild())
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v34 = v2;
  v33 = sub_1BB86FD84();
  sub_1BAC88310(0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  v11 = v10 | 0xC000000000000000;
  v12 = qword_1ED3C4078;
  swift_retain();
  if (v12 != -1)
    swift_once();
  *v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v13 = (void *)sub_1BB872970();
  v32 = (id)objc_opt_self();
  v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  v15 = *(void (**)(_QWORD))(v3 + 104);
  v31 = *MEMORY[0x1E0DB8530];
  v16 = v34;
  v30 = (void (*)(char *, _QWORD, uint64_t))v15;
  v15(v5);
  v17 = sub_1BB86FB38();
  swift_allocObject();
  v18 = sub_1BB86FB20();
  swift_release();
  v19 = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 56) = v17;
  *(_QWORD *)(v9 + 64) = v19;
  *(_QWORD *)(v9 + 32) = v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  v21 = v20 | 0xC000000000000000;
  v22 = qword_1ED3C4090;
  swift_retain();
  if (v22 != -1)
    swift_once();
  *v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v23 = (void *)sub_1BB872970();
  v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v30(v5, v31, v16);
  swift_allocObject();
  v25 = sub_1BB86FB20();
  swift_release();
  *(_QWORD *)(v9 + 96) = v17;
  *(_QWORD *)(v9 + 104) = MEMORY[0x1E0DB77B0];
  *(_QWORD *)(v9 + 72) = v25;
  sub_1BB86FD78();
  swift_bridgeObjectRelease();
  v26 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_1BB393424((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  sub_1BB32CE40((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

_QWORD *sub_1BB32A780(void *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unsigned int *v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  id v70;
  char *v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  char **v75;
  void *v76;
  uint64_t ObjectType;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t ObjCClassFromMetadata;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  _QWORD *v107;
  void *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  id v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  __int128 v141;
  unint64_t v142;
  __int128 v143;
  unsigned int v144;
  unsigned int v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  _QWORD *v163;
  __int128 v164;
  __int128 v165;
  id v166;

  v4 = sub_1BB86FD90();
  v155 = *(_QWORD *)(v4 - 8);
  v156 = v4;
  MEMORY[0x1E0C80A78](v4);
  v157 = (char *)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB870150();
  v152 = *(_QWORD *)(v6 - 8);
  v153 = v6;
  MEMORY[0x1E0C80A78](v6);
  v154 = (char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8BA0];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA80, (uint64_t (*)(void))sub_1BA82BE0C, (uint64_t)&type metadata for FollowingCommandState, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v9);
  v148 = (char *)&v137 - v10;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8328];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA20, (uint64_t (*)(void))sub_1BA82BE0C, (uint64_t)&type metadata for FollowingCommandState, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v12);
  v147 = (char *)&v137 - v13;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB8348];
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA50, (uint64_t (*)(void))sub_1BA82BE0C, (uint64_t)&type metadata for FollowingCommandState, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v15);
  v146 = (char *)&v137 - v16;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA60, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, v8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v137 - v18;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA00, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, v11);
  MEMORY[0x1E0C80A78](v20);
  v22 = (uint64_t)&v137 - v21;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA30, (uint64_t (*)(void))sub_1BA81FF50, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, v14);
  MEMORY[0x1E0C80A78](v23);
  v163 = (id *)((char *)&v137 - v24);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA70, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, v8);
  MEMORY[0x1E0C80A78](v25);
  v151 = (char *)&v137 - v26;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA10, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, v11);
  MEMORY[0x1E0C80A78](v27);
  v150 = (char *)&v137 - v28;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3AFA40, (uint64_t (*)(void))sub_1BA82DAD0, (uint64_t)&type metadata for BlockingCommandState, v14);
  MEMORY[0x1E0C80A78](v29);
  v149 = (char *)&v137 - v30;
  v31 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asPuzzleType);
  swift_unknownObjectRelease();
  v32 = (id)MEMORY[0x1E0DB77B0];
  if (v31)
  {
    LOBYTE(v164) = 0;
    v33 = _s5TeaUI15ContextMenuItemC8NewsFeedE5share10puzzleType0hC0ACSgSo08FCPuzzleJ9Providing_p_AD012CommandShareC0OtFZ_0((uint64_t)v31, (unsigned __int8 *)&v164);
    if (v33)
    {
      v34 = v33;
      *((_QWORD *)&v165 + 1) = sub_1BB86FB38();
      v166 = v32;
      *(_QWORD *)&v164 = v34;
    }
    else
    {
      v166 = 0;
      v164 = 0u;
      v165 = 0u;
    }
    v37 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v39 = v37[2];
    v38 = v37[3];
    if (v39 >= v38 >> 1)
      v37 = sub_1BB393424((_QWORD *)(v38 > 1), v39 + 1, 1, v37);
    v37[2] = v39 + 1;
    sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v39 + 4]);
    swift_unknownObjectRelease();
    v32 = (id)MEMORY[0x1E0DB77B0];
  }
  else
  {
    LOBYTE(v164) = 0;
    v35 = _s5TeaUI15ContextMenuItemC8NewsFeedE5share14feedDescriptor0hC0ACSgSo06FCFeedJ0C_AD012CommandShareC0OtFZ_0(a1, (unsigned __int8 *)&v164);
    if (v35)
    {
      v36 = v35;
      *((_QWORD *)&v165 + 1) = sub_1BB86FB38();
      v166 = v32;
      *(_QWORD *)&v164 = v36;
    }
    else
    {
      v166 = 0;
      v164 = 0u;
      v165 = 0u;
    }
    v37 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v41 = v37[2];
    v40 = v37[3];
    if (v41 >= v40 >> 1)
      v37 = sub_1BB393424((_QWORD *)(v40 > 1), v41 + 1, 1, v37);
    v37[2] = v41 + 1;
    sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v41 + 4]);
  }
  v42 = _s5TeaUI15ContextMenuItemC8NewsFeedE8copyLink14feedDescriptorACSo06FCFeedK0C_tFZ_0(a1);
  v43 = sub_1BB86FB38();
  *((_QWORD *)&v165 + 1) = v43;
  v166 = v32;
  *(_QWORD *)&v164 = v42;
  v45 = v37[2];
  v44 = v37[3];
  if (v45 >= v44 >> 1)
    v37 = sub_1BB393424((_QWORD *)(v44 > 1), v45 + 1, 1, v37);
  v37[2] = v45 + 1;
  sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v45 + 4]);
  v46 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asPuzzleType);
  swift_unknownObjectRelease();
  if (!v46)
    goto LABEL_22;
  swift_getObjectType();
  FCPuzzleTypeProviding.puzzleKind.getter();
  if (v164 == 3 || v164 == 2)
    goto LABEL_21;
  v47 = _s5TeaUI15ContextMenuItemC8NewsFeedE7PuzzlesV21openPuzzleFullArchive10puzzleTypeACSo08FCPuzzleN9Providing_p_tFZ_0(v46);
  *((_QWORD *)&v165 + 1) = v43;
  v166 = v32;
  *(_QWORD *)&v164 = v47;
  v49 = v37[2];
  v48 = v37[3];
  v50 = (unsigned int *)(v49 + 1);
  if (v49 >= v48 >> 1)
    goto LABEL_93;
  while (1)
  {
    v37[2] = v50;
    sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v49 + 4]);
LABEL_21:
    swift_unknownObjectRelease();
LABEL_22:
    if ((sub_1BA79E0CC(17, a2) & 1) == 0)
    {
      v51 = FCFeedDescriptor.feedTag.getter();
      v52 = _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0((uint64_t)v51);
      swift_unknownObjectRelease();
      if (v52)
      {
        *((_QWORD *)&v165 + 1) = v43;
        v166 = v32;
        *(_QWORD *)&v164 = v52;
      }
      else
      {
        v166 = 0;
        v164 = 0u;
        v165 = 0u;
      }
      v54 = v37[2];
      v53 = v37[3];
      if (v54 >= v53 >> 1)
        v37 = sub_1BB393424((_QWORD *)(v53 > 1), v54 + 1, 1, v37);
      v37[2] = v54 + 1;
      sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v54 + 4]);
    }
    if ((sub_1BA79E0CC(18, a2) & 1) == 0)
    {
      v159 = a2;
      v160 = v22;
      v161 = v19;
      v55 = FCFeedDescriptor.feedTag.getter();
      v56 = qword_1ED3BA8E8;
      swift_unknownObjectRetain();
      if (v56 != -1)
        swift_once();
      LOBYTE(v164) = 1;
      *(_QWORD *)(swift_allocObject() + 16) = v55;
      sub_1BA82DAD0();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1BB870030();
      LOBYTE(v164) = 1;
      sub_1BB870018();
      sub_1BB870348();
      *(_QWORD *)&v164 = v55;
      swift_allocObject();
      v57 = sub_1BB86FB2C();
      swift_unknownObjectRelease();
      v32 = (id)MEMORY[0x1E0DB77B0];
      *((_QWORD *)&v165 + 1) = v43;
      v166 = (id)MEMORY[0x1E0DB77B0];
      *(_QWORD *)&v164 = v57;
      v59 = v37[2];
      v58 = v37[3];
      if (v59 >= v58 >> 1)
        v37 = sub_1BB393424((_QWORD *)(v58 > 1), v59 + 1, 1, v37);
      v19 = v161;
      a2 = v159;
      v37[2] = v59 + 1;
      sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v59 + 4]);
    }
    if ((sub_1BA79E0CC(23, a2) & 1) != 0)
    {
      v60 = _s5TeaUI15ContextMenuItemC8NewsFeedE14manageMySportsACyFZ_0();
      *((_QWORD *)&v165 + 1) = v43;
      v166 = v32;
      *(_QWORD *)&v164 = v60;
      v62 = v37[2];
      v61 = v37[3];
      a2 = v163;
      if (v62 >= v61 >> 1)
        v37 = sub_1BB393424((_QWORD *)(v61 > 1), v62 + 1, 1, v37);
      v37[2] = v62 + 1;
      sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v62 + 4]);
    }
    else
    {
      a2 = v163;
    }
    v63 = FCFeedDescriptor.feedTag.getter();
    v64 = qword_1ED39F0A0;
    swift_unknownObjectRetain();
    if (v64 != -1)
      swift_once();
    LOBYTE(v164) = 0;
    sub_1BA81FF50();
    swift_unknownObjectRetain();
    swift_retain();
    sub_1BB870030();
    LOBYTE(v164) = 0;
    sub_1BB870018();
    sub_1BB870348();
    *(_QWORD *)&v164 = v63;
    swift_allocObject();
    v65 = sub_1BB86FB2C();
    swift_unknownObjectRelease_n();
    *((_QWORD *)&v165 + 1) = v43;
    v166 = (id)MEMORY[0x1E0DB77B0];
    *(_QWORD *)&v164 = v65;
    v67 = v37[2];
    v66 = v37[3];
    if (v67 >= v66 >> 1)
      v37 = sub_1BB393424((_QWORD *)(v66 > 1), v67 + 1, 1, v37);
    v37[2] = v67 + 1;
    sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v67 + 4]);
    v158 = sub_1BB86FD84();
    sub_1BB86FD78();
    swift_bridgeObjectRelease();
    v37 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v69 = v37[2];
    v68 = v37[3];
    if (v69 >= v68 >> 1)
      v37 = sub_1BB393424((_QWORD *)(v68 > 1), v69 + 1, 1, v37);
    v37[2] = v69 + 1;
    sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v69 + 4]);
    v32 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSportsEvent);
    swift_unknownObjectRelease();
    if (!v32)
      return v37;
    v70 = objc_msgSend(v32, sel_eventCompetitorTags);
    v71 = "FeedGroupEmitterRuleResult" + 16;
    v50 = (unsigned int *)MEMORY[0x1E0DB8530];
    if (!v70)
      goto LABEL_71;
    v72 = v70;
    sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3AB1E0);
    v49 = sub_1BB872DB4();

    if (v49 >> 62)
    {
      swift_bridgeObjectRetain();
      v22 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v48 = (unint64_t)&v165;
    v137 = v32;
    if (!v22)
      goto LABEL_70;
    if (v22 >= 1)
    {
      v73 = 0;
      v74 = v49 & 0xC000000000000001;
      v145 = *MEMORY[0x1E0DB8530];
      v75 = &selRef_isSports;
      v144 = *MEMORY[0x1E0DB7CF0];
      v143 = xmmword_1BB87FC80;
      v142 = 0x80000001BB9855A0;
      v141 = xmmword_1BB87CE70;
      v140 = v49;
      v162 = v43;
      v139 = v22;
      v138 = v49 & 0xC000000000000001;
      do
      {
        if (v74)
        {
          v76 = (void *)MEMORY[0x1BCCE4630](v73, v49);
        }
        else
        {
          v76 = *(void **)(v49 + 8 * v73 + 32);
          swift_unknownObjectRetain();
        }
        ObjectType = swift_getObjectType();
        if (objc_msgSend(v76, v75[114]))
        {
          swift_unknownObjectRelease();
        }
        else
        {
          v159 = (_QWORD *)ObjectType;
          v163 = v37;
          v78 = objc_msgSend(v76, sel_compactDisplayName);
          v79 = sub_1BB8729A0();
          v160 = v80;
          v161 = (char *)v79;

          sub_1BAC88310(0);
          v81 = swift_allocObject();
          *(_OWORD *)(v81 + 16) = v143;
          v82 = qword_1ED3BA900;
          swift_unknownObjectRetain_n();
          if (v82 != -1)
            swift_once();
          LOBYTE(v164) = 1;
          v83 = swift_allocObject();
          *(_QWORD *)(v83 + 16) = v76;
          *(_WORD *)(v83 + 24) = 256;
          sub_1BA82BE0C();
          swift_unknownObjectRetain();
          swift_retain();
          sub_1BB870030();
          LOBYTE(v164) = 1;
          sub_1BB870018();
          sub_1BB870348();
          *(_QWORD *)&v164 = v76;
          WORD4(v164) = 256;
          v84 = v162;
          swift_allocObject();
          v85 = sub_1BB86FB2C();
          swift_unknownObjectRelease();
          *(_QWORD *)(v81 + 56) = v84;
          *(_QWORD *)(v81 + 64) = MEMORY[0x1E0DB77B0];
          *(_QWORD *)(v81 + 32) = v85;
          v86 = qword_1ED3BA8E8;
          swift_unknownObjectRetain_n();
          if (v86 != -1)
            swift_once();
          LOBYTE(v164) = 1;
          *(_QWORD *)(swift_allocObject() + 16) = v76;
          sub_1BA82DAD0();
          swift_unknownObjectRetain();
          swift_retain();
          sub_1BB870030();
          LOBYTE(v164) = 1;
          sub_1BB870018();
          sub_1BB870348();
          *(_QWORD *)&v164 = v76;
          swift_allocObject();
          v87 = sub_1BB86FB2C();
          swift_unknownObjectRelease();
          *(_QWORD *)(v81 + 96) = v84;
          *(_QWORD *)(v81 + 104) = MEMORY[0x1E0DB77B0];
          *(_QWORD *)(v81 + 72) = v87;
          type metadata accessor for Localized();
          ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          v89 = (void *)objc_opt_self();
          swift_unknownObjectRetain();
          v90 = objc_msgSend(v89, sel_bundleForClass_, ObjCClassFromMetadata);
          sub_1BB86C340();

          sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v91 = swift_allocObject();
          *(_OWORD *)(v91 + 16) = v141;
          v92 = FCTagProviding.localizedTagType.getter();
          v94 = v93;
          *(_QWORD *)(v91 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v91 + 64) = sub_1BA6A2D8C();
          *(_QWORD *)(v91 + 32) = v92;
          *(_QWORD *)(v91 + 40) = v94;
          sub_1BB8729D0();
          swift_bridgeObjectRelease();
          if (qword_1ED3BC080 != -1)
            swift_once();
          v95 = qword_1ED3AFB18;
          swift_unknownObjectRetain();
          swift_retain();
          v96 = v153;
          if (v95 != -1)
            swift_once();
          v97 = (void *)qword_1ED3AFB10;
          (*(void (**)(char *, _QWORD, uint64_t))(v152 + 104))(v154, v145, v96);
          *(_QWORD *)&v164 = v76;
          BYTE8(v164) = 0;
          *(_QWORD *)&v165 = 0;
          v43 = v162;
          swift_allocObject();
          v98 = v97;
          v99 = sub_1BB86FB20();
          swift_unknownObjectRelease();
          *(_QWORD *)(v81 + 136) = v43;
          *(_QWORD *)(v81 + 144) = MEMORY[0x1E0DB77B0];
          *(_QWORD *)(v81 + 112) = v99;
          (*(void (**)(char *, _QWORD, uint64_t))(v155 + 104))(v157, v144, v156);
          v100 = v158;
          swift_allocObject();
          v101 = sub_1BB86FD6C();
          *((_QWORD *)&v165 + 1) = v100;
          v166 = (id)MEMORY[0x1E0DB7CC8];
          *(_QWORD *)&v164 = v101;
          v37 = v163;
          v103 = v163[2];
          v102 = v163[3];
          if (v103 >= v102 >> 1)
            v37 = sub_1BB393424((_QWORD *)(v102 > 1), v103 + 1, 1, v163);
          v49 = v140;
          v22 = v139;
          v74 = v138;
          v37[2] = v103 + 1;
          sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v103 + 4]);
          swift_unknownObjectRelease();
          v75 = &selRef_isSports;
        }
        ++v73;
      }
      while (v22 != v73);
LABEL_70:
      swift_bridgeObjectRelease();
      v32 = v137;
      v50 = (unsigned int *)MEMORY[0x1E0DB8530];
      v71 = "RuleResult";
LABEL_71:
      v163 = v37;
      type metadata accessor for Localized();
      v104 = swift_getObjCClassFromMetadata();
      v105 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v104);
      v106 = sub_1BB86C340();
      v159 = v107;
      v160 = v106;

      v108 = (void *)sub_1BB872970();
      v151 = (char *)objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v108);

      sub_1BAC88310(0);
      v150 = v109;
      v110 = swift_allocObject();
      *(_OWORD *)(v110 + 16) = *((_OWORD *)v71 + 200);
      v111 = qword_1ED3C4BC8;
      swift_unknownObjectRetain();
      if (v111 != -1)
        swift_once();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1BB2A0910();
      v112 = *v50;
      v113 = v153;
      v114 = v154;
      v161 = *(char **)(v152 + 104);
      ((void (*)(char *, uint64_t, uint64_t))v161)(v154, v112, v153);
      *(_QWORD *)&v164 = v32;
      BYTE8(v164) = 4;
      swift_allocObject();
      v115 = sub_1BB86FB20();
      swift_unknownObjectRelease();
      *(_QWORD *)(v110 + 56) = v43;
      *(_QWORD *)(v110 + 64) = MEMORY[0x1E0DB77B0];
      *(_QWORD *)(v110 + 32) = v115;
      v116 = qword_1ED3C4B80;
      swift_unknownObjectRetain();
      if (v116 != -1)
        swift_once();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1BB2A0910();
      ((void (*)(char *, uint64_t, uint64_t))v161)(v114, v112, v113);
      *(_QWORD *)&v164 = v32;
      BYTE8(v164) = 3;
      swift_allocObject();
      v117 = sub_1BB86FB20();
      swift_unknownObjectRelease();
      *(_QWORD *)(v110 + 96) = v43;
      *(_QWORD *)(v110 + 104) = MEMORY[0x1E0DB77B0];
      *(_QWORD *)(v110 + 72) = v117;
      v118 = qword_1ED3C4B98;
      swift_unknownObjectRetain();
      if (v118 != -1)
        swift_once();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1BB2A0910();
      ((void (*)(char *, uint64_t, uint64_t))v161)(v114, v112, v113);
      *(_QWORD *)&v164 = v32;
      BYTE8(v164) = 5;
      swift_allocObject();
      v119 = sub_1BB86FB20();
      swift_unknownObjectRelease();
      *(_QWORD *)(v110 + 136) = v43;
      *(_QWORD *)(v110 + 144) = MEMORY[0x1E0DB77B0];
      *(_QWORD *)(v110 + 112) = v119;
      (*(void (**)(char *, _QWORD, uint64_t))(v155 + 104))(v157, *MEMORY[0x1E0DB7CF0], v156);
      v120 = v158;
      swift_allocObject();
      v121 = sub_1BB86FD6C();
      *((_QWORD *)&v165 + 1) = v120;
      v166 = (id)MEMORY[0x1E0DB7CC8];
      *(_QWORD *)&v164 = v121;
      v37 = v163;
      v123 = v163[2];
      v122 = v163[3];
      if (v123 >= v122 >> 1)
        v37 = sub_1BB393424((_QWORD *)(v122 > 1), v123 + 1, 1, v163);
      v37[2] = v123 + 1;
      sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v123 + 4]);
      if (NFInternalBuild())
      {
        v124 = swift_allocObject();
        *(_OWORD *)(v124 + 16) = xmmword_1BB87A390;
        v125 = _s5TeaUI15ContextMenuItemC8NewsFeedE11sportsEventAeCSgSo08FCSportsI9Providing_p_tFZ_0((uint64_t)v32);
        if (v125)
        {
          v126 = MEMORY[0x1E0DB77B0];
          v127 = v43;
        }
        else
        {
          v127 = 0;
          v126 = 0;
          *(_QWORD *)(v124 + 40) = 0;
          *(_QWORD *)(v124 + 48) = 0;
        }
        *(_QWORD *)(v124 + 32) = v125;
        *(_QWORD *)(v124 + 56) = v127;
        *(_QWORD *)(v124 + 64) = v126;
        v128 = objc_msgSend(v32, sel_UMCCanonicalID, v137);
        if (v128)
        {
          v129 = v128;
          v130 = sub_1BB8729A0();
          v132 = v131;

        }
        else
        {
          v130 = 0;
          v132 = 0;
        }
        v133 = sub_1BB2DF5F4(v130, v132);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v124 + 96) = v43;
        *(_QWORD *)(v124 + 104) = MEMORY[0x1E0DB77B0];
        *(_QWORD *)(v124 + 72) = v133;
        sub_1BB86FD78();
        swift_bridgeObjectRelease();
        v135 = v37[2];
        v134 = v37[3];
        if (v135 >= v134 >> 1)
          v37 = sub_1BB393424((_QWORD *)(v134 > 1), v135 + 1, 1, v37);
        v37[2] = v135 + 1;
        sub_1BB32CE40((uint64_t)&v164, (uint64_t)&v37[5 * v135 + 4]);
      }
      swift_unknownObjectRelease();
      return v37;
    }
    __break(1u);
LABEL_93:
    v37 = sub_1BB393424((_QWORD *)(v48 > 1), (int64_t)v50, 1, v37);
  }
}

_QWORD *sub_1BB32BF88(void *a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v39[2];
  uint64_t v40;
  unsigned __int8 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  v6 = sub_1BB870150();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v8) = *((_BYTE *)a2 + 32);
  v10 = a2[1];
  v42 = *a2;
  v43 = v10;
  LOBYTE(v44) = v8;
  v41 = 0;
  v11 = _s5TeaUI15ContextMenuItemC8NewsFeedE5share6puzzle0H4Data0hC0ACSgSo17FCPuzzleProviding_p_AD011PuzzleShareJ0VSgAD07CommandnC0OtFZ_0((uint64_t)a1, (uint64_t)&v42, &v41);
  v12 = MEMORY[0x1E0DB77B0];
  if (v11)
  {
    v13 = v11;
    *((_QWORD *)&v43 + 1) = sub_1BB86FB38();
    v44 = v12;
    *(_QWORD *)&v42 = v13;
  }
  else
  {
    v44 = 0;
    v42 = 0u;
    v43 = 0u;
  }
  v14 = sub_1BB393424(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v16 = v14[2];
  v15 = v14[3];
  if (v16 >= v15 >> 1)
    v14 = sub_1BB393424((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
  v14[2] = v16 + 1;
  sub_1BB32CE40((uint64_t)&v42, (uint64_t)&v14[5 * v16 + 4]);
  v17 = _s5TeaUI15ContextMenuItemC8NewsFeedE8copyLink6puzzleACSo17FCPuzzleProviding_p_tFZ_0(a1);
  v18 = sub_1BB86FB38();
  *((_QWORD *)&v43 + 1) = v18;
  v44 = v12;
  *(_QWORD *)&v42 = v17;
  v20 = v14[2];
  v19 = v14[3];
  if (v20 >= v19 >> 1)
    v14 = sub_1BB393424((_QWORD *)(v19 > 1), v20 + 1, 1, v14);
  v14[2] = v20 + 1;
  sub_1BB32CE40((uint64_t)&v42, (uint64_t)&v14[5 * v20 + 4]);
  if ((sub_1BA79E0CC(27, a3) & 1) == 0)
  {
    v21 = _s5TeaUI15ContextMenuItemC8NewsFeedE7PuzzlesV04moreH06puzzleACSgSo17FCPuzzleProviding_p_tFZ_0(a1);
    if (v21)
    {
      *((_QWORD *)&v43 + 1) = v18;
      v44 = v12;
      *(_QWORD *)&v42 = v21;
    }
    else
    {
      v44 = 0;
      v42 = 0u;
      v43 = 0u;
    }
    v23 = v14[2];
    v22 = v14[3];
    if (v23 >= v22 >> 1)
      v14 = sub_1BB393424((_QWORD *)(v22 > 1), v23 + 1, 1, v14);
    v14[2] = v23 + 1;
    sub_1BB32CE40((uint64_t)&v42, (uint64_t)&v14[5 * v23 + 4]);
  }
  if (NFInternalBuild())
  {
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1EF2A73C8 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    if (v42 == 1)
    {
      v39[1] = sub_1BB86FD84();
      sub_1BAC88310(0);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1BB87A390;
      if (qword_1ED3C4C48 != -1)
        swift_once();
      v40 = v6;
      v25 = qword_1EF2A72F8;
      swift_retain();
      swift_unknownObjectRetain();
      if (v25 != -1)
        swift_once();
      v26 = (void *)qword_1EF2C47C8;
      v27 = *MEMORY[0x1E0DB8530];
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
      v28(v9, v27, v40);
      *(_QWORD *)&v42 = a1;
      swift_allocObject();
      v29 = v26;
      v30 = sub_1BB86FB20();
      *(_QWORD *)(v24 + 56) = v18;
      v31 = MEMORY[0x1E0DB77B0];
      *(_QWORD *)(v24 + 64) = MEMORY[0x1E0DB77B0];
      *(_QWORD *)(v24 + 32) = v30;
      if (qword_1ED3C4060 != -1)
        swift_once();
      v32 = qword_1EF2A7300;
      swift_unknownObjectRetain();
      swift_retain();
      if (v32 != -1)
        swift_once();
      v33 = (void *)qword_1EF2C47D0;
      v28(v9, v27, v40);
      *(_QWORD *)&v42 = a1;
      swift_allocObject();
      v34 = v33;
      v35 = sub_1BB86FB20();
      *(_QWORD *)(v24 + 96) = v18;
      *(_QWORD *)(v24 + 104) = v31;
      *(_QWORD *)(v24 + 72) = v35;
      sub_1BB86FD78();
      swift_bridgeObjectRelease();
      v37 = v14[2];
      v36 = v14[3];
      if (v37 >= v36 >> 1)
        v14 = sub_1BB393424((_QWORD *)(v36 > 1), v37 + 1, 1, v14);
      v14[2] = v37 + 1;
      sub_1BB32CE40((uint64_t)&v42, (uint64_t)&v14[5 * v37 + 4]);
    }
  }
  return v14;
}

uint64_t sub_1BB32C47C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v13;

  sub_1BAC88310(0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87A390;
  v5 = sub_1BB86FB38();
  swift_getObjectType();
  v6 = sub_1BA79E0CC(24, a2);
  v13 = 0;
  v7 = sub_1BAB5CB58(a1, v6 & 1, &v13);
  v8 = MEMORY[0x1E0DB77B0];
  if (v7)
  {
    v9 = MEMORY[0x1E0DB77B0];
    v10 = v5;
  }
  else
  {
    v10 = 0;
    v9 = 0;
    *(_QWORD *)(v4 + 40) = 0;
    *(_QWORD *)(v4 + 48) = 0;
  }
  *(_QWORD *)(v4 + 32) = v7;
  *(_QWORD *)(v4 + 56) = v10;
  *(_QWORD *)(v4 + 64) = v9;
  v11 = sub_1BAAA8950(a1);
  *(_QWORD *)(v4 + 96) = v5;
  *(_QWORD *)(v4 + 104) = v8;
  *(_QWORD *)(v4 + 72) = v11;
  return v4;
}

void _s5TeaUI11ContextMenuC8NewsFeedE07contextD6Groups3for7optionsSayAA0cD9Groupable_pSgGAcDE0D4TypeO_ShyAcDE11ItemOptionsOGtFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v2 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1BB32C638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)swift_unknownObjectRetain();
  v4 = sub_1BB323308(v3, v1, v0, v2);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1BB32CA80(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5B089C(0, &qword_1EF2C11F8, &qword_1EF2C11F0, (uint64_t)&protocol descriptor for ContextMenuItemOptionsProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BB32CAE0()
{
  unint64_t result;

  result = qword_1ED3BBF40;
  if (!qword_1ED3BBF40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ContextMenu.ItemOptions, &type metadata for ContextMenu.ItemOptions);
    atomic_store(result, (unint64_t *)&qword_1ED3BBF40);
  }
  return result;
}

void _s8MenuTypeOwxx(uint64_t a1)
{
  sub_1BA726DD8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(_BYTE *)(a1 + 41));
}

uint64_t _s8MenuTypeOwcp(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 41);
  v9 = *(unsigned __int8 *)(a2 + 40);
  sub_1BA7271AC(*(id *)a2, v4, v5, v6, v7, v9, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 41) = v8;
  return a1;
}

uint64_t _s8MenuTypeOwca(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 41);
  v9 = *(unsigned __int8 *)(a2 + 40);
  sub_1BA7271AC(*(id *)a2, v4, v5, v6, v7, v9, v8);
  v10 = *(void **)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v15 = *(unsigned __int8 *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v9;
  v16 = *(_BYTE *)(a1 + 41);
  *(_BYTE *)(a1 + 41) = v8;
  sub_1BA726DD8(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s8MenuTypeOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  uint64_t v12;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_WORD *)(a2 + 40);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 41);
  v12 = *(unsigned __int8 *)(a1 + 40);
  *(_WORD *)(a1 + 40) = v4;
  sub_1BA726DD8(v5, v7, v6, v8, v9, v12, v11);
  return a1;
}

uint64_t _s8MenuTypeOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF2 && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 242);
  v3 = *(unsigned __int8 *)(a1 + 41);
  if (v3 <= 0xE)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s8MenuTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 242;
    if (a3 >= 0xF2)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xF2)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BB32CD44(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 41);
}

uint64_t sub_1BB32CD4C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 41) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ContextMenu.MenuType()
{
  return &type metadata for ContextMenu.MenuType;
}

uint64_t _s11ItemOptionsOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 30 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 30) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE1)
    return ((uint64_t (*)(void))((char *)&loc_1BB32CDB0 + 4 * byte_1BB908C12[v4]))();
  *a1 = a2 + 30;
  return ((uint64_t (*)(void))((char *)sub_1BB32CDE4 + 4 * byte_1BB908C0D[v4]))();
}

uint64_t sub_1BB32CDE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB32CDEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB32CDF4);
  return result;
}

uint64_t sub_1BB32CE00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB32CE08);
  *(_BYTE *)result = a2 + 30;
  return result;
}

uint64_t sub_1BB32CE0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB32CE14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextMenu.ItemOptions()
{
  return &type metadata for ContextMenu.ItemOptions;
}

uint64_t dispatch thunk of ContextMenuItemOptionsProviding.contextMenuItemOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ContextMenuItemOptionsWithAccessProviding.contextMenuItemOptionsWithAccess(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1BB32CE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3AFAA0, (unint64_t *)&qword_1ED3AFA90, MEMORY[0x1E0DB8CD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB32CEA4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA7E84C0(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BB32CEE0(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2ABCC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB77B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB32CEFC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB32CF20()
{
  return sub_1BB515460();
}

uint64_t sub_1BB32CF2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB32CF50()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t FormatFontMetricSizing.size.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

void FormatFontMetricSizing.style.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

uint64_t _s8NewsFeed22FormatFontMetricSizingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v2 = *(_QWORD *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(_QWORD *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA881EAC(v2, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    if (v3 == 12)
    {
      if (v5 == 12)
        return 1;
    }
    else if (v5 != 12)
    {
      v7 = FormatFontScalingStyle.rawValue.getter();
      v9 = v8;
      if (v7 == FormatFontScalingStyle.rawValue.getter() && v9 == v10)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      v12 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        return 1;
    }
  }
  return 0;
}

unint64_t sub_1BB32D0C0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB32D0E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB32D0E4()
{
  unint64_t result;

  result = qword_1EF2C1228;
  if (!qword_1EF2C1228)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontMetricSizing, &type metadata for FormatFontMetricSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2C1228);
  }
  return result;
}

unint64_t sub_1BB32D128(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA655308();
  a1[2] = sub_1BA82A49C();
  result = sub_1BB32D15C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB32D15C()
{
  unint64_t result;

  result = qword_1EF2C1230;
  if (!qword_1EF2C1230)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontMetricSizing, &type metadata for FormatFontMetricSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2C1230);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFontMetricSizing()
{
  return &type metadata for FormatFontMetricSizing;
}

ValueMetadata *type metadata accessor for J18_V1()
{
  return &type metadata for J18_V1;
}

uint64_t sub_1BB32D1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  void *v35;
  int v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  char v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _OWORD *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t result;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  int *v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _BYTE v102[25];
  uint64_t v103;

  v10 = v9;
  v88 = a8;
  v94 = a5;
  v90 = a4;
  v92 = a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0480, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE4B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v83 - v16;
  v89 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v18 = v89[14];
  v91 = v8;
  v19 = *(_QWORD *)&v8[v18];
  v20 = *(_QWORD *)(v19 + 16);
  swift_bridgeObjectRetain();
  if (v20)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1BA6A8790(0x7573734964656546, 0xE900000000000065, a2, a3);
    if ((v22 & 1) != 0)
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = sub_1BB7845E0(v23);
      swift_bridgeObjectRelease();
      if (v24)
      {
        v83 = a6;
        v84 = a7;
        v25 = MEMORY[0x1E0DEE9D8];
        v103 = MEMORY[0x1E0DEE9D8];
        v26 = *(_QWORD *)(v24 + 16);
        v87 = a2;
        if (v26)
        {
          v85 = a3;
          v86 = v10;
          swift_bridgeObjectRetain();
          v27 = 0;
          v93 = v26 - 1;
          v28 = 32;
          while (1)
          {
            v95 = *(_OWORD *)(v24 + v28);
            v29 = *(_OWORD *)(v24 + v28 + 16);
            v30 = *(_OWORD *)(v24 + v28 + 32);
            v31 = *(_OWORD *)(v24 + v28 + 64);
            v98 = *(_OWORD *)(v24 + v28 + 48);
            v99 = v31;
            v96 = v29;
            v97 = v30;
            v32 = *(_OWORD *)(v24 + v28 + 80);
            v33 = *(_OWORD *)(v24 + v28 + 96);
            v34 = *(_OWORD *)(v24 + v28 + 112);
            *(_OWORD *)&v102[9] = *(_OWORD *)(v24 + v28 + 121);
            v101 = v33;
            *(_OWORD *)v102 = v34;
            v100 = v32;
            v35 = (void *)v95;
            v36 = v31;
            sub_1BA8D1F08((uint64_t)&v95);
            v37 = objc_msgSend(v35, sel_coverImageAssetHandle);
            v38 = v37;
            if (v36 != 1)
              break;
            if (!v37)
            {
              if (v94)
                goto LABEL_19;
              goto LABEL_27;
            }
            v39 = v35;
            objc_msgSend(v39, sel_coverImageAspectRatio);
            v40 = v38;
            v41 = objc_msgSend(v39, sel_layeredCoverJSON);
            if (!v41)
            {

              goto LABEL_17;
            }
            v42 = v41;
            sub_1BB8729A0();

            swift_bridgeObjectRetain();
            sub_1BB86BE00();
            v43 = sub_1BB86BE54();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v17, 0, 1, v43);
            v44 = sub_1BB86DFC0();
            swift_bridgeObjectRelease();
            sub_1BAA65904((uint64_t)v17);
            if ((v44 & 1) != 0)
            {

              swift_bridgeObjectRelease();
LABEL_17:

              v52 = 64;
              goto LABEL_26;
            }
            v53 = v39;
            objc_msgSend(v53, sel_layeredCoverAspectRatio);
            swift_bridgeObjectRelease();

            v51 = 64;
            v54 = 0x4000;
LABEL_25:
            v52 = v54 | v51;
LABEL_26:
            if ((v94 & ~v52) != 0)
            {
LABEL_19:
              sub_1BA8D1FE4((uint64_t)&v95);
              goto LABEL_32;
            }
LABEL_27:
            v56 = v103;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BAC7A3BC(0, *(_QWORD *)(v56 + 16) + 1, 1);
              v56 = v103;
            }
            v58 = *(_QWORD *)(v56 + 16);
            v57 = *(_QWORD *)(v56 + 24);
            if (v58 >= v57 >> 1)
            {
              sub_1BAC7A3BC(v57 > 1, v58 + 1, 1);
              v56 = v103;
            }
            *(_QWORD *)(v56 + 16) = v58 + 1;
            v59 = (_OWORD *)(v56 + 144 * v58);
            v59[2] = v95;
            v60 = v96;
            v61 = v97;
            v62 = v99;
            v59[5] = v98;
            v59[6] = v62;
            v59[3] = v60;
            v59[4] = v61;
            v63 = v100;
            v64 = v101;
            v65 = *(_OWORD *)v102;
            *(_OWORD *)((char *)v59 + 153) = *(_OWORD *)&v102[9];
            v59[8] = v64;
            v59[9] = v65;
            v59[7] = v63;
LABEL_32:
            if (v93 == v27)
            {
              swift_bridgeObjectRelease();
              v25 = v103;
              v10 = v86;
              a3 = v85;
              goto LABEL_48;
            }
            ++v27;
            v28 += 144;
            if (v27 >= *(_QWORD *)(v24 + 16))
              goto LABEL_62;
          }
          if (v37)
          {
            v45 = v35;
            objc_msgSend(v45, sel_coverImageAspectRatio);
            v46 = v38;
            v47 = objc_msgSend(v45, sel_layeredCoverJSON);
            if (v47)
            {
              v48 = v47;
              sub_1BB8729A0();

              swift_bridgeObjectRetain();
              sub_1BB86BE00();
              v49 = sub_1BB86BE54();
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v17, 0, 1, v49);
              v50 = sub_1BB86DFC0();
              swift_bridgeObjectRelease();
              sub_1BAA65904((uint64_t)v17);
              if ((v50 & 1) == 0)
              {
                v55 = v45;
                objc_msgSend(v55, sel_layeredCoverAspectRatio);
                swift_bridgeObjectRelease();

                v51 = 16448;
                goto LABEL_24;
              }

              swift_bridgeObjectRelease();
            }
            else
            {

            }
            v51 = 64;
          }
          else
          {
            v51 = 0;
          }
LABEL_24:
          v54 = 4096;
          goto LABEL_25;
        }
LABEL_48:
        v72 = v91;
        if (v90 && (*v91 & 1) == 0)
        {
          swift_retain();
          v73 = sub_1BAC9E1E4(v25);
          swift_release();
          swift_release();
          v25 = v73;
        }
        v74 = *(_QWORD *)&v72[v89[18]];
        v75 = *(_QWORD *)&v72[v89[19]];
        if (__OFSUB__(v74, v75))
          goto LABEL_65;
        v76 = sub_1BB3DC2B4(v25, v74 - v75);
        v77 = v92;
        v17 = (char *)sub_1BB32DF1C(v92, v76);
        v79 = v78;
        swift_bridgeObjectRelease();
        if (v17)
        {
          swift_bridgeObjectRelease();
LABEL_55:
          *(_QWORD *)&v95 = 0x7573734964656546;
          *((_QWORD *)&v95 + 1) = 0xE900000000000065;
          *(_QWORD *)&v96 = v87;
          *((_QWORD *)&v96 + 1) = a3;
          if ((v88 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            v24 = v79;
          }
          v81 = sub_1BA974CEC(v24);
          swift_bridgeObjectRelease();
          sub_1BA6AB5A4((uint64_t *)&v95, v81);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v17;
        }
        v17 = (char *)sub_1BB32DF1C(v77, v25);
        v79 = v80;
        swift_bridgeObjectRelease();
        if (v17)
          goto LABEL_55;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v95 = v77;
        swift_bridgeObjectRetain();
        sub_1BA766EFC((uint64_t *)&v95);
        a2 = v87;
        if (!v10)
        {
          v69 = v95;
          a7 = v84;
          a6 = v83;
          if (!*(_QWORD *)(v95 + 16))
          {
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
            goto LABEL_64;
          }
          goto LABEL_45;
        }
        goto LABEL_66;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v66 = *(_QWORD *)(v92 + 16);
  if (v66)
  {
    if (!*(_QWORD *)(v92 + 32))
    {
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    if (v66 != 1)
    {
      v67 = 5;
      do
      {
        v68 = v67 - 3;
        if (__OFADD__(v67 - 4, 1))
          goto LABEL_63;
        if (!*(_QWORD *)(v92 + 8 * v67))
          goto LABEL_46;
        ++v67;
      }
      while (v68 != v66);
    }
  }
  *(_QWORD *)&v95 = v92;
  swift_bridgeObjectRetain();
  sub_1BA766EFC((uint64_t *)&v95);
  if (!v10)
  {
    v69 = v95;
    if (!*(_QWORD *)(v95 + 16))
    {
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
LABEL_45:
    v70 = *(_QWORD *)(v69 + 32);
    swift_release();
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v71 = xmmword_1BB8E9600;
    *(_QWORD *)(v71 + 16) = a2;
    *(_QWORD *)(v71 + 24) = a3;
    *(_QWORD *)(v71 + 32) = v94;
    *(_QWORD *)(v71 + 40) = v70;
    *(_QWORD *)(v71 + 48) = a6;
    *(_QWORD *)(v71 + 56) = a7;
    *(_BYTE *)(v71 + 64) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return (uint64_t)v17;
  }
LABEL_66:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BB32D9EC(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  __int128 v13[2];
  __int128 v14[2];

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_1BA85C2C4(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4[2];
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (v5 < 2)
    return (uint64_t)v4;
  v7 = 0;
  v8 = v5 >> 1;
  v9 = v5 - 1;
  v10 = 40 * v5 - 8;
  for (i = 4; ; i += 5)
  {
    if (v7 == v9)
      goto LABEL_4;
    v12 = v4[2];
    if (v7 >= v12)
      break;
    result = sub_1BA4C010C((uint64_t)&v4[i], (uint64_t)v14);
    if (v9 >= v12)
      goto LABEL_14;
    sub_1BA4C010C((uint64_t)v4 + v10, (uint64_t)v13);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BAA67D94(v4);
      v4 = (_QWORD *)result;
    }
    if (v7 >= v4[2])
      goto LABEL_15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4[i]);
    result = sub_1BA4CECCC(v13, (uint64_t)&v4[i]);
    if (v9 >= v4[2])
      goto LABEL_16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4 + v10);
    result = sub_1BA4CECCC(v14, (uint64_t)v4 + v10);
LABEL_4:
    ++v7;
    --v9;
    v10 -= 40;
    if (v8 == v7)
      return (uint64_t)v4;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_1BB32DB5C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for ZIndexable();
  v16 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v17 = (uint64_t)&v14 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7 < 2)
    return;
  v8 = 0;
  v9 = v7 >> 1;
  v10 = v7 - 1;
  v15 = v7 >> 1;
  while (1)
  {
    if (v8 == v10)
      goto LABEL_4;
    v11 = *(_QWORD *)(a1 + 16);
    if (v8 >= v11)
      break;
    v12 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v13 = *(_QWORD *)(v16 + 72);
    sub_1BA4C2DD8(a1 + v12 + v13 * v8, v17, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    if (v10 >= v11)
      goto LABEL_14;
    sub_1BA4C2DD8(a1 + v12 + v13 * v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      a1 = sub_1BAA67ED8(a1);
    if (v8 >= *(_QWORD *)(a1 + 16))
      goto LABEL_15;
    sub_1BA7229AC((uint64_t)v4, a1 + v12 + v13 * v8, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    if (v10 >= *(_QWORD *)(a1 + 16))
      goto LABEL_16;
    sub_1BA7229AC(v17, a1 + v12 + v13 * v10, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
    v9 = v15;
LABEL_4:
    ++v8;
    --v10;
    if (v9 == v8)
      return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

uint64_t sub_1BB32DCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  unint64_t v15;
  unint64_t i;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  v21 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v23 = (uint64_t)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v22 = (uint64_t)&v20 - v5;
  sub_1BA4B07F0(0, qword_1EF2B1E70, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v7);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v20 - v11, v0, v8, v10);
  sub_1BB32FB14();
  v12 = sub_1BB872BEC();
  v13 = *(_QWORD *)(v12 + 16);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
  if (v13 < 2)
    return v12;
  v15 = 0;
  for (i = v13 - 1; ; --i)
  {
    if (v15 == i)
      goto LABEL_4;
    v17 = *(_QWORD *)(v12 + 16);
    if (v15 >= v17)
      break;
    v18 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v19 = *(_QWORD *)(v21 + 72);
    result = sub_1BA4C2DD8(v12 + v18 + v19 * v15, v22, type metadata accessor for FormatDebuggerCallStackFrame);
    if (i >= v17)
      goto LABEL_14;
    sub_1BA4C2DD8(v12 + v18 + v19 * i, v23, type metadata accessor for FormatDebuggerCallStackFrame);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1BAA67F28(v12);
      v12 = result;
    }
    if (v15 >= *(_QWORD *)(v12 + 16))
      goto LABEL_15;
    result = sub_1BA7229AC(v23, v12 + v18 + v19 * v15, type metadata accessor for FormatDebuggerCallStackFrame);
    if (i >= *(_QWORD *)(v12 + 16))
      goto LABEL_16;
    result = sub_1BA7229AC(v22, v12 + v18 + v19 * i, type metadata accessor for FormatDebuggerCallStackFrame);
LABEL_4:
    if (v13 >> 1 == ++v15)
      return v12;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1BB32DF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BA7E3620(v3);
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)(v4 + 32);
    v8 = *(_QWORD *)(a2 + 16);
    if (v7 == 0x7FFFFFFFFFFFFFFFLL || v8 >= v7)
    {
LABEL_20:
      v15 = sub_1BB0E7894(v7, a2);
      v17 = v16;
      v19 = v18;
      v21 = v20;
      if ((v20 & 1) != 0)
      {
        sub_1BB874434();
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain();
        v22 = swift_dynamicCastClass();
        if (!v22)
        {
          swift_unknownObjectRelease();
          v22 = MEMORY[0x1E0DEE9D8];
        }
        v23 = *(_QWORD *)(v22 + 16);
        swift_release();
        if (__OFSUB__(v21 >> 1, v19))
        {
          __break(1u);
        }
        else if (v23 == (v21 >> 1) - v19)
        {
          v10 = swift_dynamicCastClass();
          if (!v10)
          {
            swift_unknownObjectRelease();
            v10 = MEMORY[0x1E0DEE9D8];
          }
          goto LABEL_29;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      v10 = sub_1BA85CC34(v15, v17, v19, v21);
LABEL_29:
      swift_unknownObjectRelease();
      swift_retain();
      v24 = swift_bridgeObjectRetain();
      sub_1BB32F958(v24, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v10;
    }
    if (v6 != 1)
    {
      v7 = *(_QWORD *)(v5 + 40);
      if (v8 >= v7 || v7 == 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_20;
      v12 = 0;
      v13 = v6 - 2;
      while (v13 != v12)
      {
        v7 = *(_QWORD *)(v5 + 8 * v12++ + 48);
        if (v8 >= v7 || v7 == 0x7FFFFFFFFFFFFFFFLL)
          goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BB32E0F0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C1380, (uint64_t (*)(void))sub_1BB330398, (uint64_t)&type metadata for J18_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB330398();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA916364(&qword_1EF2AA7D8, (uint64_t (*)(void))sub_1BA9163E0, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB32E2AC()
{
  sub_1BB330398();
  return sub_1BB874710();
}

uint64_t sub_1BB32E2D4()
{
  sub_1BB330398();
  return sub_1BB87471C();
}

double sub_1BB32E2FC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB33017C(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB32E340(_QWORD *a1)
{
  return sub_1BB32E0F0(a1);
}

uint64_t sub_1BB32E354()
{
  sub_1BB32FDB0();
  return sub_1BB86D96C();
}

uint64_t sub_1BB32E3BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  void *v15;
  unsigned __int8 v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  unsigned __int8 v57;
  ValueMetadata *v58;
  unint64_t v59;
  uint64_t v60;

  v46 = a2;
  v48 = a1;
  v38 = a3;
  v39 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for GroupLayoutContext();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v45 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - v11;
  v42 = (uint64_t)&v38 - v11;
  v44 = type metadata accessor for GroupLayoutBindingContext();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v41 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v3;
  v15 = (void *)*((_QWORD *)v3 + 1);
  v16 = v3[16];
  sub_1BA4C2DD8(a1, v41, v17);
  sub_1BA4C2DD8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v15, v16);
  sub_1BB86C8D4();
  v18 = sub_1BB86C8C8();
  v40 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v39);
  v58 = &type metadata for J18_V1;
  v20 = sub_1BA8EDDA8();
  v59 = v20;
  LOBYTE(v56) = v14;
  *((_QWORD *)&v56 + 1) = v15;
  v57 = v16;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v15, v16);
  v54 = sub_1BB874734();
  v55 = v22;
  v52 = 95;
  v53 = 0xE100000000000000;
  v50 = 45;
  v51 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v40;
  *v26 = v18;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v56, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  v29 = (uint64_t)v45;
  sub_1BA5193C4(v41, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v28, 0, 1, v44);
  v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4(v42, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v30, 0, 1, v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
  sub_1BA7C2538(v15, v16);
  v58 = &type metadata for J18_V1;
  v59 = v20;
  LOBYTE(v56) = v14;
  *((_QWORD *)&v56 + 1) = v15;
  v57 = v16;
  sub_1BA4C2DD8(v46, v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v15, v16);
  v31 = v60;
  v32 = sub_1BB32D1C0((uint64_t)&unk_1E7269F90, 0, 0, 0, 0, 0, 0, 0);
  if (v31)
  {
    swift_release();
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
  }
  else
  {
    v34 = v32;
    v35 = type metadata accessor for J18_V1.Bound();
    v36 = v38;
    v38[3] = v35;
    v36[4] = sub_1BA4A2870(&qword_1EF2C1248, (uint64_t (*)(uint64_t))type metadata accessor for J18_V1.Bound, (uint64_t)&unk_1BB908FA0);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v56, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v29, (uint64_t)boxed_opaque_existential_0 + *(int *)(v35 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v35 + 28)) = v34;
  }
  return result;
}

uint64_t sub_1BB32E7E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for J18_V1.Bound() + 28));
  v33 = v2;
  swift_bridgeObjectRetain();
  v9 = sub_1BA8A1F94((void (*)(_QWORD *__return_ptr, _OWORD *))sub_1BB32FD44, (uint64_t)v32, v8);
  *(_QWORD *)&v25 = 0;
  swift_bridgeObjectRelease();
  v28 = v9;
  *(_QWORD *)&v35 = v9;
  sub_1BA4AD288(0, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v11 = v10;
  sub_1BA5C69E0(&qword_1ED39D9E8, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E0DEAF50]);
  v27 = v11;
  v12 = sub_1BB8730F0();
  v13 = *MEMORY[0x1E0DB5D88];
  v14 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
  v29 = v12;
  v30 = 6;
  v31 = v2;
  sub_1BB32FFC0(0, &qword_1EF2C12F8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v15 = sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v26 = v15;
  v16 = v25;
  v17 = sub_1BB86DB40();
  if (v16)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v25 = v35;
    v18 = v36;
    v19 = v37;
    v34 = v38;
    *(_QWORD *)&v35 = v28;
    MEMORY[0x1E0C80A78](v17);
    sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v20 = MEMORY[0x1E0DEAF38];
    sub_1BA5C69E0(&qword_1ED39D9E0, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E0DEAF38]);
    sub_1BA5C69E0(&qword_1ED39D9C8, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, v20);
    swift_bridgeObjectRetain();
    v21 = sub_1BB86ED58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v35 = v21;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C69E0((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, v20);
    sub_1BA6B39A0();
    v22 = sub_1BB872BBC();
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_BYTE *)a1 = 0;
    *(_OWORD *)(a1 + 8) = v25;
    *(_QWORD *)(a1 + 24) = v18;
    *(_QWORD *)(a1 + 32) = v19;
    v24 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(a1 + 40) = v22;
    *(_QWORD *)(a1 + 48) = v24;
  }
  return result;
}

uint64_t sub_1BB32EBC0@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t inited;
  __int128 v21[2];
  __int128 v22[2];
  uint64_t v23[5];
  _BYTE v24[10];
  __int128 v25[7];
  _OWORD v26[2];
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[2];
  _OWORD v34[9];

  v5 = a1[5];
  v6 = a1[7];
  v32 = a1[6];
  v33[0] = v6;
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)a1 + 121);
  v7 = a1[1];
  v8 = a1[3];
  v28 = a1[2];
  v29 = v8;
  v9 = a1[3];
  v10 = a1[5];
  v30 = a1[4];
  v31 = v10;
  v11 = a1[1];
  v27[0] = *a1;
  v27[1] = v11;
  v12 = a1[7];
  v25[6] = v32;
  v26[0] = v12;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)a1 + 121);
  v25[2] = v28;
  v25[3] = v9;
  v25[4] = v30;
  v25[5] = v5;
  v13 = *a2;
  v25[0] = v27[0];
  v25[1] = v7;
  sub_1BA90EFB8(v34);
  sub_1BA8EDBB0((uint64_t)v34, (uint64_t)v24);
  v14 = (char *)a2 + *(int *)(type metadata accessor for J18_V1.Bound() + 24);
  v15 = type metadata accessor for GroupLayoutContext();
  v16 = *(_QWORD *)(*(_QWORD *)&v14[*(int *)(v15 + 40)] + 16);
  v17 = *(double *)&v14[*(int *)(v15 + 32)];
  sub_1BA4C010C(v16 + 16, (uint64_t)v22);
  sub_1BA4C010C(v16 + 56, (uint64_t)v21);
  v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v22, inited + 16);
  sub_1BA4CECCC(v21, inited + 56);
  *(double *)(inited + 96) = v18;
  swift_retain();
  sub_1BA8D1F08((uint64_t)v27);
  FeedLayoutStylerFactory.styler()(v23);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, v25, (uint64_t)v24, (uint64_t)v23, a3);
}

void sub_1BB32ED50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(unint64_t, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[49];
  _QWORD v60[49];
  _QWORD v61[49];
  _QWORD v62[50];

  v52 = a1;
  v53 = a4;
  v43 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2C1310, (uint64_t (*)(void))sub_1BB32FD6C, (uint64_t)&type metadata for J18_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t *)((char *)&v42 - v6);
  v55 = *(_QWORD *)(a2 + 16);
  if (v55)
  {
    v7 = *(_QWORD *)(a2 + 32);
    v54 = a2 + 32;
    v47 = *MEMORY[0x1E0DB63F0];
    v46 = *MEMORY[0x1E0DB6410];
    v45 = *MEMORY[0x1E0DB5C80];
    v42 = a2;
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = (_QWORD *)&unk_1ED3D2000;
    v44 = xmmword_1BB87CE70;
    v48 = v7;
    while (1)
    {
      v28 = *(_QWORD *)(v54 + 8 * v8);
      v29 = *(_QWORD *)(v28 + 16);
      v30 = *(_QWORD *)(v7 + 16);
      v58 = v28;
      if (v29 != v30)
        break;
      if (v29 && v28 != v7)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31 = 32;
        while (1)
        {
          sub_1BA915B28(v28 + v31, (uint64_t)v62);
          sub_1BA915B28(v7 + v31, (uint64_t)v61);
          v33 = v62[0];
          v34 = v61[0];
          v35 = *(_QWORD *)(v62[0] + 16) == *(_QWORD *)(v61[0] + 16)
             && *(_QWORD *)(v62[0] + 24) == *(_QWORD *)(v61[0] + 24);
          if (!v35 && (sub_1BB874398() & 1) == 0)
            break;
          v36 = v9[165];
          v37 = *(_QWORD *)(v33 + v36);
          v38 = *(_QWORD *)(v33 + v36 + 8);
          v39 = (_QWORD *)(v34 + v36);
          if (v37 == *v39 && v38 == v39[1])
          {
            sub_1BA915B28((uint64_t)v62, (uint64_t)v60);
            sub_1BA915B28((uint64_t)v61, (uint64_t)v59);
          }
          else
          {
            v41 = sub_1BB874398();
            sub_1BA915B28((uint64_t)v62, (uint64_t)v60);
            sub_1BA915B28((uint64_t)v61, (uint64_t)v59);
            if ((v41 & 1) == 0)
              goto LABEL_33;
          }
          if (v60[2] == v59[2] && v60[3] == v59[3])
          {
            sub_1BA915C30((uint64_t)v60);
            sub_1BA915C30((uint64_t)v59);
            sub_1BA915C30((uint64_t)v61);
            sub_1BA915C30((uint64_t)v62);
          }
          else
          {
            v32 = sub_1BB874398();
            sub_1BA915C30((uint64_t)v60);
            sub_1BA915C30((uint64_t)v59);
            sub_1BA915C30((uint64_t)v61);
            sub_1BA915C30((uint64_t)v62);
            if ((v32 & 1) == 0)
              goto LABEL_34;
          }
          v31 += 392;
          if (!--v29)
          {
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
        }
        sub_1BA915B28((uint64_t)v62, (uint64_t)v60);
        sub_1BA915B28((uint64_t)v61, (uint64_t)v59);
LABEL_33:
        sub_1BA915C30((uint64_t)v60);
        sub_1BA915C30((uint64_t)v59);
        sub_1BA915C30((uint64_t)v61);
        sub_1BA915C30((uint64_t)v62);
LABEL_34:
        swift_bridgeObjectRelease();
        v29 = *(_QWORD *)(v28 + 16);
LABEL_28:
        if (v29 != v43)
          goto LABEL_5;
        goto LABEL_4;
      }
      swift_bridgeObjectRetain();
LABEL_4:
      v10 = v52;
      v62[0] = v52;
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = 0x4024000000000000;
      v12 = v49;
      v13 = v50;
      *v49 = v11;
      v14 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104);
      v57 = v8;
      v15 = v51;
      v14(v12, v47, v51);
      v16 = MEMORY[0x1E0DB5DD0];
      sub_1BB32FFC0(0, &qword_1EF2C1318, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
      v56 = v17;
      sub_1BB32FF04(&qword_1EF2C1320, &qword_1EF2C1318, (uint64_t (*)(uint64_t, _QWORD *))v16, MEMORY[0x1E0DB5DD8]);
      sub_1BB86D4EC();
      v18 = *(void (**)(uint64_t *, uint64_t))(v13 + 8);
      v18(v12, v15);
      v62[0] = v10;
      v14(v12, v46, v15);
      sub_1BB32FF44();
      sub_1BA4CDF6C(0, &qword_1EF2C1330, (uint64_t (*)(void))sub_1BB32FD6C, (uint64_t)&type metadata for J18_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v20 = v19;
      v21 = *(_QWORD *)(v19 - 8);
      v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v44;
      v24 = *(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v21 + 104);
      v9 = &unk_1ED3D2000;
      v25 = v24(v23 + v22, v45, v20);
      MEMORY[0x1E0C80A78](v25);
      sub_1BB86D498();
      swift_bridgeObjectRelease();
      v26 = v12;
      v7 = v48;
      v27 = v15;
      v8 = v57;
      v18(v26, v27);
LABEL_5:
      swift_bridgeObjectRelease();
      if (++v8 == v55)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
}

void sub_1BB32F234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double (*v34)(uint64_t, uint64_t);
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(uint64_t, _QWORD *);
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[296];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;

  v61 = a1;
  v5 = sub_1BB86DA38();
  v59 = *(_QWORD *)(v5 - 8);
  v60 = v5;
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C1310, (uint64_t (*)(void))sub_1BB32FD6C, (uint64_t)&type metadata for J18_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v47 - v10);
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v57 = a3 + *(int *)(type metadata accessor for J18_V1.Bound() + 24);
    v56 = *(int *)(type metadata accessor for GroupLayoutContext() + 40);
    v13 = a2 + 32;
    v55 = *MEMORY[0x1E0DB5FB0];
    v54 = *MEMORY[0x1E0DB5FB8];
    v53 = *MEMORY[0x1E0DB63D0];
    v52 = *MEMORY[0x1E0DB5C30];
    v51 = *MEMORY[0x1E0DB5C68];
    v50 = *MEMORY[0x1E0DB6208];
    v47 = a2;
    swift_bridgeObjectRetain();
    v49 = xmmword_1BB87CE70;
    v48 = v9;
    do
    {
      v64 = v13;
      v65 = v12;
      sub_1BA915B28(v13, (uint64_t)v67);
      v66 = v61;
      KeyPath = swift_getKeyPath();
      sub_1BA71C838();
      v15 = v14;
      v16 = swift_allocBox();
      v17 = v9;
      v19 = v18;
      v20 = (char *)v18 + *(int *)(v15 + 48);
      sub_1BB86D42C();
      v21 = swift_allocBox();
      sub_1BB86D420();
      *v19 = v21;
      v22 = sub_1BB86D894();
      v23 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104);
      v23(v19, v55, v22);
      v23((uint64_t *)v20, v54, v22);
      *v11 = v16;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v17 + 104))(v11, v53, v8);
      sub_1BB32FF44();
      sub_1BA4CDF6C(0, &qword_1EF2C1330, (uint64_t (*)(void))sub_1BB32FD6C, (uint64_t)&type metadata for J18_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v25 = v24;
      v26 = *(_QWORD *)(v24 - 8);
      v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v49;
      v62 = v28;
      v29 = v28 + v27;
      sub_1BA4CDF6C(0, &qword_1EF2C1338, (uint64_t (*)(void))sub_1BB32FD6C, (uint64_t)&type metadata for J18_V1.Layout, MEMORY[0x1E0DB5C60]);
      (*(void (**)(unint64_t, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v52, v30);
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v26 + 104))(v29, v51, v25);
      v31 = *(_QWORD *)(*(_QWORD *)(v57 + v56) + 24);
      v32 = v69;
      v33 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      v34 = *(double (**)(uint64_t, uint64_t))(v33 + 16);
      swift_retain();
      v35 = v34(v32, v33);
      if (qword_1ED39E210 != -1)
        swift_once();
      objc_msgSend((id)qword_1ED476400, sel_size);
      v38 = v35 * (v36 / v37);
      v39 = v69;
      v40 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      (*(void (**)(uint64_t, uint64_t))(v40 + 48))(v39, v40);
      v41 = v69;
      v42 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 56))(v41, v42);
      *(double *)&v44 = MEMORY[0x1E0C80A78](v43);
      *(&v47 - 6) = v31;
      *(&v47 - 5) = (uint64_t)v67;
      *((double *)&v47 - 4) = v38;
      *((double *)&v47 - 3) = v35;
      v46 = v44;
      (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v58, v50, v60);
      sub_1BA915C74();
      swift_allocObject();
      sub_1BB86DB34();
      swift_release();
      v45 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BB32FFC0(0, &qword_1EF2C1340, MEMORY[0x1E0DB5A10]);
      sub_1BB32FF04(&qword_1EF2C1348, &qword_1EF2C1340, v45, MEMORY[0x1E0DB5A18]);
      v46 = sub_1BA915DF0();
      sub_1BB86D4C8();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v9 = v48;
      (*(void (**)(uint64_t *, uint64_t))(v48 + 8))(v11, v8);
      sub_1BA915C30((uint64_t)v67);
      v13 = v64 + 392;
      v12 = v65 - 1;
    }
    while (v65 != 1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB32F788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v10 = swift_allocObject();
  sub_1BA915B28(a2, v10 + 16);
  memcpy((void *)(v10 + 408), a3, 0x180uLL);
  v11 = a4 + *(int *)(type metadata accessor for J18_V1.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v13 = *(_QWORD *)(v11 + *(int *)(result + 28));
  v14 = __OFADD__(v13, a1);
  v15 = v13 + a1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v10 + 792) = v15;
    *a5 = v10 | 0x5000000000000000;
  }
  return result;
}

uint64_t sub_1BB32F844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB32E3BC(a1, a2, a3);
}

uint64_t sub_1BB32F858()
{
  return sub_1BB690AB8();
}

unint64_t sub_1BB32F868(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB32F894();
  result = sub_1BB32F8D8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB32F894()
{
  unint64_t result;

  result = qword_1EF2C1238;
  if (!qword_1EF2C1238)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB908EEC, &type metadata for J18_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2C1238);
  }
  return result;
}

unint64_t sub_1BB32F8D8()
{
  unint64_t result;

  result = qword_1EF2C1240;
  if (!qword_1EF2C1240)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB908F14, &type metadata for J18_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2C1240);
  }
  return result;
}

uint64_t type metadata accessor for J18_V1.Bound()
{
  uint64_t result;

  result = qword_1EF2C12B0;
  if (!qword_1EF2C12B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB32F958(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[3];
  uint64_t v36;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v26 = (_QWORD *)(a2 + 48);
  v27 = result + 32;
  v5 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v4 <= v2)
      v6 = v2;
    else
      v6 = v4;
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
        return result;
      }
      v7 = (__int128 *)(v27 + 144 * v4);
      v8 = v7[7];
      v34 = v7[6];
      v35[0] = v8;
      *(_OWORD *)((char *)v35 + 9) = *(__int128 *)((char *)v7 + 121);
      v9 = v7[3];
      v30 = v7[2];
      v31 = v9;
      v10 = v7[5];
      v32 = v7[4];
      v33 = v10;
      v11 = v7[1];
      v28 = *v7;
      v29 = v11;
      ++v4;
      v12 = *(_QWORD *)(a2 + 16);
      if (!v12)
        break;
      v13 = *((_QWORD *)&v28 + 1);
      v14 = v29;
      v15 = v26;
      while (1)
      {
        result = *(v15 - 1);
        if (result == v13 && *v15 == v14)
          break;
        result = sub_1BB874398();
        if ((result & 1) != 0)
          break;
        v15 += 18;
        if (!--v12)
          goto LABEL_16;
      }
      if (v4 == v2)
        return v5;
    }
LABEL_16:
    sub_1BA8D1F08((uint64_t)&v28);
    result = swift_isUniquelyReferenced_nonNull_native();
    v36 = v5;
    if ((result & 1) == 0)
    {
      result = sub_1BAC7A3BC(0, *(_QWORD *)(v5 + 16) + 1, 1);
      v5 = v36;
    }
    v18 = *(_QWORD *)(v5 + 16);
    v17 = *(_QWORD *)(v5 + 24);
    if (v18 >= v17 >> 1)
    {
      result = sub_1BAC7A3BC(v17 > 1, v18 + 1, 1);
      v5 = v36;
    }
    *(_QWORD *)(v5 + 16) = v18 + 1;
    v19 = (_OWORD *)(v5 + 144 * v18);
    v19[2] = v28;
    v20 = v29;
    v21 = v30;
    v22 = v32;
    v19[5] = v31;
    v19[6] = v22;
    v19[3] = v20;
    v19[4] = v21;
    v23 = v33;
    v24 = v34;
    v25 = v35[0];
    *(_OWORD *)((char *)v19 + 153) = *(_OWORD *)((char *)v35 + 9);
    v19[8] = v24;
    v19[9] = v25;
    v19[7] = v23;
  }
  while (v4 != v2);
  return v5;
}

unint64_t sub_1BB32FB14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C1250;
  if (!qword_1EF2C1250)
  {
    sub_1BA4B07F0(255, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB4A78], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C1250);
  }
  return result;
}

uint64_t sub_1BB32FB74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB32FB80(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB32FBFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB32FC08(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB32FC7C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB32FD08(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C12F0, (uint64_t (*)(uint64_t))type metadata accessor for J18_V1.Bound, (uint64_t)&unk_1BB908F78);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB32FD44@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB32EBC0(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1BB32FD60(uint64_t a1)
{
  uint64_t *v1;

  sub_1BB32ED50(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1BB32FD6C()
{
  unint64_t result;

  result = qword_1EF2C1300;
  if (!qword_1EF2C1300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9090D0, &type metadata for J18_V1.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2C1300);
  }
  return result;
}

unint64_t sub_1BB32FDB0()
{
  unint64_t result;

  result = qword_1EF2C1308;
  if (!qword_1EF2C1308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9090A0, &type metadata for J18_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C1308);
  }
  return result;
}

uint64_t sub_1BB32FDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB32F788(a1, a2, a3, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB32FDFC()
{
  uint64_t v0;
  void *v1;

  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 152) >= 0x11uLL)
    swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(v0 + 296) >= 0x11uLL)
      swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB32FEF4()
{
  return swift_deallocObject();
}

uint64_t sub_1BB32FF04(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB32FFC0(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB32FF44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C1328)
  {
    sub_1BA4CDF6C(255, &qword_1EF2C1330, (uint64_t (*)(void))sub_1BB32FD6C, (uint64_t)&type metadata for J18_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C1328);
  }
}

void sub_1BB32FFB8(uint64_t a1)
{
  uint64_t v1;

  sub_1BB32F234(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BB32FFC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for J18_V1.Layout;
    v8[1] = &type metadata for J18_V1.Layout.Attributes;
    v8[2] = sub_1BB32FD6C();
    v8[3] = sub_1BB32FDB0();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

ValueMetadata *type metadata accessor for J18_V1.Layout.Attributes()
{
  return &type metadata for J18_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for J18_V1.Layout()
{
  return &type metadata for J18_V1.Layout;
}

unint64_t sub_1BB330060()
{
  unint64_t result;

  result = qword_1EF2C1350;
  if (!qword_1EF2C1350)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB909040, &type metadata for J18_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C1350);
  }
  return result;
}

unint64_t sub_1BB3300A8()
{
  unint64_t result;

  result = qword_1EF2C1358;
  if (!qword_1EF2C1358)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB909018, &type metadata for J18_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C1358);
  }
  return result;
}

unint64_t sub_1BB3300F0()
{
  unint64_t result;

  result = qword_1EF2C1360;
  if (!qword_1EF2C1360)
  {
    result = MEMORY[0x1BCCE5B24]("ဟ+$^\v", &type metadata for J18_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C1360);
  }
  return result;
}

unint64_t sub_1BB330138()
{
  unint64_t result;

  result = qword_1EF2C1368;
  if (!qword_1EF2C1368)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB909068, &type metadata for J18_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C1368);
  }
  return result;
}

uint64_t sub_1BB33017C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C1370, (uint64_t (*)(void))sub_1BB330398, (uint64_t)&type metadata for J18_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB330398();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v23 = 1;
  sub_1BA916364(&qword_1ED39D9D0, (uint64_t (*)(void))sub_1BA916320, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB330398()
{
  unint64_t result;

  result = qword_1EF2C1378;
  if (!qword_1EF2C1378)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9091C4, &type metadata for J18_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1378);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for J18_V1.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB330428 + 4 * byte_1BB908EDD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB33045C + 4 * asc_1BB908ED8[v4]))();
}

uint64_t sub_1BB33045C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB330464(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB33046CLL);
  return result;
}

uint64_t sub_1BB330478(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB330480);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB330484(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB33048C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for J18_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for J18_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB3304AC()
{
  unint64_t result;

  result = qword_1EF2C1388;
  if (!qword_1EF2C1388)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90919C, &type metadata for J18_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1388);
  }
  return result;
}

unint64_t sub_1BB3304F4()
{
  unint64_t result;

  result = qword_1EF2C1390;
  if (!qword_1EF2C1390)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90910C, &type metadata for J18_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1390);
  }
  return result;
}

unint64_t sub_1BB33053C()
{
  unint64_t result;

  result = qword_1EF2C1398;
  if (!qword_1EF2C1398)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB909134, &type metadata for J18_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1398);
  }
  return result;
}

uint64_t dispatch thunk of PuzzleImageShareAttributeProviderType.shareImage(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BAA2A710;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleImageShareAttributeProviderType.shareIcon(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BAA2A710;
  return v9(a1, a2, a3);
}

id sub_1BB330670()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 176);
  if (v1)
  {
    v2 = *(id *)(v0 + 176);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
    objc_msgSend(v3, sel_setUnitsStyle_, 1);
    objc_msgSend(v3, sel_setAllowedUnits_, 192);
    objc_msgSend(v3, sel_setZeroFormattingBehavior_, 1);
    v4 = *(void **)(v0 + 176);
    *(_QWORD *)(v0 + 176) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1BB330714(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_1BB86C8B0();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BB3307B0()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v2 = (void *)v0[2];
  v1 = (_QWORD *)v0[3];
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  v5 = objc_msgSend(v2, sel_identifier);
  v6 = sub_1BB8729A0();
  v8 = v7;

  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8) + 48))(v6, v8, v3);
  v0[8] = v9;
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_7;
  v10 = v9;
  v11 = objc_msgSend(v10, sel_completedDate);
  v12 = v0[7];
  if (!v11)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[5] + 56))(v0[7], 1, 1, v0[4]);
    goto LABEL_6;
  }
  v13 = v11;
  v15 = v0[5];
  v14 = v0[6];
  v16 = v0[4];
  sub_1BB86C874();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v14, v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v16) == 1)
  {
LABEL_6:
    v20 = v0[7];

    sub_1BA76D750(v20);
LABEL_7:
    v21 = (_QWORD *)swift_task_alloc();
    v0[13] = v21;
    *v21 = v0;
    v21[1] = sub_1BB330BD8;
    v21[7] = v0[2];
    return swift_task_switch();
  }
  sub_1BA76D750(v0[7]);
  v17 = (_QWORD *)swift_task_alloc();
  v0[9] = v17;
  *v17 = v0;
  v17[1] = sub_1BB33097C;
  v19 = v0[2];
  v18 = v0[3];
  v17[9] = v10;
  v17[10] = v18;
  v17[8] = v19;
  return swift_task_switch();
}

uint64_t sub_1BB33097C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB3309D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;

  if (*(_QWORD *)(v0 + 80))
  {
    v1 = *(void **)(v0 + 64);

    v2 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
  }
  else
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v4 = sub_1BB86EFEC();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED476918);
    v5 = sub_1BB86EFC8();
    v6 = sub_1BB87330C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1BA493000, v5, v6, "PuzzleImageShareAttributeProvider: Failed to generate completedPuzzleImage, using the regular layout...", v7, 2u);
      MEMORY[0x1BCCE5C38](v7, -1, -1);
    }

    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v8;
    *v8 = v0;
    v8[1] = sub_1BB330B30;
    v8[7] = *(_QWORD *)(v0 + 16);
    return swift_task_switch();
  }
}

uint64_t sub_1BB330B30(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB330B8C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 64);

  v2 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1BB330BD8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB330C34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1BB330C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_1BB330C98()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v0 + 88) = sub_1BB331204(*(void **)(v0 + 64), *(void **)(v0 + 72));
  *(_QWORD *)(v0 + 96) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v2;
    *v2 = v0;
    v2[1] = sub_1BB330EE0;
    return sub_1BB3313DC(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  }
  else
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v4 = sub_1BB86EFEC();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED476918);
    swift_unknownObjectRetain_n();
    v5 = sub_1BB86EFC8();
    v6 = sub_1BB8732F4();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(void **)(v0 + 64);
    if (v7)
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v15 = v14;
      *(_DWORD *)v9 = 136315138;
      v10 = objc_msgSend(v8, sel_identifier);
      v11 = sub_1BB8729A0();
      v13 = v12;

      *(_QWORD *)(v0 + 56) = sub_1BA5D2E14(v11, v13, &v15);
      sub_1BB873A8C();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v5, v6, "PuzzleImageShareAttributeProvider: Failed to get score for puzzle %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v14, -1, -1);
      MEMORY[0x1BCCE5C38](v9, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1BB330EE0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB330F3C()
{
  _QWORD *v0;

  sub_1BA4C010C(v0[10] + 136, (uint64_t)(v0 + 2));
  v0[16] = sub_1BB872F7C();
  swift_unknownObjectRetain();
  v0[17] = sub_1BB872F70();
  sub_1BB872F28();
  return swift_task_switch();
}

uint64_t sub_1BB330FC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release();
  type metadata accessor for CompletedShareImageFactory();
  swift_allocObject();
  *(_QWORD *)(v0 + 144) = sub_1BB3330B8(v1, v0 + 16);
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BB33103C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 72);
  *(_QWORD *)(v0 + 152) = sub_1BB333AC8(*(void **)(v0 + 64));
  *(_QWORD *)(v0 + 160) = v2;
  *(_QWORD *)(v0 + 168) = sub_1BB333CBC();
  *(_QWORD *)(v0 + 176) = v3;
  v4 = objc_msgSend(v1, sel_rankID);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BB8729A0();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *(_QWORD *)(v0 + 184) = v6;
  *(_QWORD *)(v0 + 192) = v8;
  *(_QWORD *)(v0 + 200) = sub_1BB872F70();
  sub_1BB872F28();
  return swift_task_switch();
}

uint64_t sub_1BB331100()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v11;

  v1 = v0[24];
  v2 = v0[23];
  v11 = (void *)v0[22];
  v3 = (void *)v0[20];
  v4 = v0[21];
  v5 = v0[19];
  v7 = v0[14];
  v6 = v0[15];
  v8 = v0[11];
  v9 = v0[12];
  swift_release();
  v0[26] = sub_1BB332128(v5, v3, v4, v11, v8, v9, v7, v6, v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BB3311D0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 208));
}

uint64_t sub_1BB331204(void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  double v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  unsigned __int8 v25;

  v3 = v2;
  swift_getObjectType();
  FCPuzzleProviding.puzzleKind.getter();
  if (v25 >= 2u)
  {
    if (v25 == 2)
    {
      v10 = objc_msgSend(a2, sel_rankID);
      if (v10)
      {
        v11 = v10;
        v12 = sub_1BB8729A0();
        v14 = v13;

        v15 = v3 + 12;
        v17 = v3[15];
        v16 = v3[16];
        __swift_project_boxed_opaque_existential_1(v15, v17);
        v18 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_identifier);
        swift_unknownObjectRelease();
        v19 = sub_1BB8729A0();
        v21 = v20;

        v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v12, v14, v19, v21, v17, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v22)
        {
          v23 = objc_msgSend(v22, sel_name);
          v9 = sub_1BB8729A0();

          return v9;
        }
      }
    }
    return 0;
  }
  v6 = (double)(uint64_t)objc_msgSend(a2, sel_playDuration);
  v7 = sub_1BB330670();
  v8 = objc_msgSend(v7, sel_stringFromTimeInterval_, v6);

  if (!v8)
    return 0;
  v9 = sub_1BB8729A0();

  return v9;
}

uint64_t sub_1BB3313DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = type metadata accessor for PuzzleStatisticValue(0);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  v3[10] = type metadata accessor for PuzzleStatisticCategory(0);
  v3[11] = swift_task_alloc();
  v3[12] = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  v3[13] = swift_task_alloc();
  v3[14] = type metadata accessor for PuzzleStatistic();
  v3[15] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1BB3314B8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 128) = swift_getObjectType();
  FCPuzzleProviding.puzzleKind.getter();
  __asm { BR              X10 }
}

uint64_t sub_1BB331534()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD, uint64_t, id, uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v1 = *(_QWORD **)(v0 + 48);
  v2 = *(void **)(v0 + 32);
  v3 = v1[10];
  v4 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v3);
  *(_BYTE *)(v0 + 160) = 4;
  v5 = objc_msgSend(v2, sel_puzzleType);
  *(_QWORD *)(v0 + 136) = v5;
  v8 = (uint64_t (*)(_QWORD, uint64_t, id, uint64_t, uint64_t))(**(int **)(v4 + 16) + *(_QWORD *)(v4 + 16));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v6;
  *v6 = v0;
  v6[1] = sub_1BB331754;
  return v8(*(_QWORD *)(v0 + 120), v0 + 160, v5, v3, v4);
}

uint64_t sub_1BB331754()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BB3317C0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1BA4C2DD8(*(_QWORD *)(v0 + 120) + *(int *)(*(_QWORD *)(v0 + 112) + 20), *(_QWORD *)(v0 + 88), type metadata accessor for PuzzleStatisticCategory);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v4 = *(_QWORD *)(v0 + 88);
    sub_1BA4A2E80(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
    v5 = type metadata accessor for PuzzleStatisticCategory;
LABEL_18:
    v16 = v4;
    goto LABEL_19;
  }
  v1 = *(void **)(v0 + 32);
  sub_1BB3342B0(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 104));
  v2 = objc_msgSend(v1, sel_difficulty);
  if (v2 == (id)30)
  {
    v6 = 6;
LABEL_9:
    v3 = *(_QWORD *)(v0 + 104) + *(int *)(*(_QWORD *)(v0 + 96) + 4 * v6);
    goto LABEL_10;
  }
  if (v2 == (id)20)
  {
    v6 = 5;
    goto LABEL_9;
  }
  if (v2 != (id)10)
  {
    v4 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 104);
LABEL_17:
    sub_1BA4A2E80(v17, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
    v5 = (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic;
    goto LABEL_18;
  }
  v3 = *(_QWORD *)(v0 + 104);
LABEL_10:
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  sub_1BA4C2DD8(v3, v8, type metadata accessor for PuzzleStatisticValue);
  sub_1BA4C2DD8(v8, v7, type metadata accessor for PuzzleStatisticValue);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v9 = *(_QWORD *)(v0 + 64);
    v10 = *(id *)v9;
    v11 = *(_BYTE *)(v9 + 8);
    v12 = objc_msgSend(*(id *)(v0 + 40), sel_playDuration);
    if ((v11 & 1) == 0 && v12 == v10)
    {
      FCPuzzleProviding.puzzleKind.getter();
      __asm { BR              X10 }
    }
    v4 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 104);
    sub_1BA4A2E80(*(_QWORD *)(v0 + 72), type metadata accessor for PuzzleStatisticValue);
    v17 = v18;
    goto LABEL_17;
  }
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 64);
  sub_1BA4A2E80(*(_QWORD *)(v0 + 72), type metadata accessor for PuzzleStatisticValue);
  sub_1BA4A2E80(v14, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  sub_1BA4A2E80(v13, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  v16 = v15;
  v5 = type metadata accessor for PuzzleStatisticValue;
LABEL_19:
  sub_1BA4A2E80(v16, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

void sub_1BB331A48()
{
  _QWORD *v0;
  char v1;
  void *v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v1 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    JUMPOUT(0x1BB331A98);
  v2 = (void *)v0[4];
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
  v6 = objc_msgSend(v2, sel_difficultyDescription);
  if (v6)
  {
    v7 = v6;
    v8 = sub_1BB8729A0();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v11 = v0[15];
  v12 = v0[13];
  v13 = v0[9];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1BA6A2D8C();
  if (v10)
    v14 = v8;
  else
    v14 = 0;
  if (v10)
    v15 = v10;
  else
    v15 = 0xE000000000000000;
  *(_QWORD *)(v5 + 32) = v14;
  *(_QWORD *)(v5 + 40) = v15;
  sub_1BB8729D0();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v13, type metadata accessor for PuzzleStatisticValue);
  sub_1BA4A2E80(v12, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  sub_1BA4A2E80(v11, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  JUMPOUT(0x1BB3319E8);
}

uint64_t sub_1BB331D18()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *log;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  swift_unknownObjectRelease();
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v1 = *(void **)(v0 + 152);
  v2 = sub_1BB86EFEC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED476918);
  swift_unknownObjectRetain();
  v3 = v1;
  swift_unknownObjectRetain();
  v4 = v1;
  v5 = sub_1BB86EFC8();
  v6 = sub_1BB8732F4();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 152);
  v9 = *(void **)(v0 + 32);
  if (v7)
  {
    v10 = swift_slowAlloc();
    v19 = (_QWORD *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21 = v20;
    *(_DWORD *)v10 = 136315394;
    v11 = objc_msgSend(objc_msgSend(v9, sel_puzzleType), sel_identifier);
    swift_unknownObjectRelease();
    v12 = sub_1BB8729A0();
    log = v5;
    v14 = v13;

    *(_QWORD *)(v0 + 16) = sub_1BA5D2E14(v12, v14, &v21);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2112;
    v15 = v8;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v16;
    sub_1BB873A8C();
    *v19 = v16;

    _os_log_impl(&dword_1BA493000, log, v6, "Failed to get fastest time for puzzleType %s [%@]", (uint8_t *)v10, 0x16u);
    sub_1BA92CD5C();
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v20, -1, -1);
    MEMORY[0x1BCCE5C38](v10, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_1BB332034()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);

  return swift_deallocClassInstance();
}

uint64_t sub_1BB332078(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BAA26D44;
  return sub_1BB330714(a1);
}

uint64_t sub_1BB3320C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BAA2A710;
  v3[7] = a1;
  return swift_task_switch();
}

id sub_1BB332128(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  double v43;
  double v44;
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD aBlock[6];

  v11 = v10;
  v56 = a7;
  v57 = a8;
  v54 = a5;
  v55 = a6;
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2B6730, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v54 - v16;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2B6ED0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], v14);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v54 - v19;
  v21 = sub_1BB3328F8(a9, a10);
  if (v21)
  {
    v23 = v21;
    v24 = v22;
    v25 = *(void **)(v10 + 88);
    if (a2)
      a2 = (void *)sub_1BB872970();
    objc_msgSend(v25, sel_setText_, a2, v54, v55, v56);

    objc_msgSend(v25, sel_setTextColor_, v23);
    v26 = *(void **)(v11 + 96);
    if (a4)
      a4 = (void *)sub_1BB872970();
    objc_msgSend(v26, sel_setText_, a4);

    v27 = objc_msgSend(v23, sel_colorWithAlphaComponent_, 0.4);
    objc_msgSend(v26, sel_setTextColor_, v27);

    v28 = *(void **)(v11 + 104);
    v29 = (void *)sub_1BB872970();
    objc_msgSend(v28, sel_setText_, v29);

    objc_msgSend(v28, sel_setTextColor_, v23);
    v30 = v11 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_buttonConfig;
    swift_beginAccess();
    v31 = v24;
    sub_1BB87396C();
    swift_endAccess();
    v32 = v31;
    v33 = v57;
    sub_1BB332710(v57, v24, (uint64_t)v20);

    swift_beginAccess();
    sub_1BB873954();
    swift_endAccess();
    v34 = *(void **)(v11 + 112);
    v35 = sub_1BB8739CC();
    v36 = *(_QWORD *)(v35 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v17, v30, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v17, 0, 1, v35);
    sub_1BB8739F0();
    objc_msgSend(v34, sel_setPreferredBehavioralStyle_, 1);
    v37 = objc_msgSend(*(id *)(v11 + 80), sel_arrangedSubviews);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
    v38 = sub_1BB872DB4();

    if ((v38 & 0xC000000000000001) != 0)
    {
      v39 = (id)MEMORY[0x1BCCE4630](1, v38);
    }
    else
    {
      if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      {
        __break(1u);
        goto LABEL_18;
      }
      v39 = *(id *)(v38 + 40);
    }
    v40 = v39;
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_setHidden_, v33 == 0);

    objc_msgSend(*(id *)(v11+ OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_widthConstraint), sel_setConstant_, 288.0);
    v41 = *(void **)(v11 + 64);
    objc_msgSend(v41, sel_setBackgroundColor_, v32);
    objc_msgSend(v41, sel_setNeedsLayout);
    objc_msgSend(v41, sel_layoutIfNeeded);
    v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3830]), sel_init);
    objc_msgSend(v42, sel_setPreferredRange_, 2);
    objc_msgSend(v41, sel_bounds);
    v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v42, v43, v44);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = sub_1BB334354;
    *(_QWORD *)(v46 + 24) = v11;
    aBlock[4] = sub_1BA56DB30;
    aBlock[5] = v46;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA56DAFC;
    aBlock[3] = &block_descriptor_64;
    v47 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v48 = objc_msgSend(v45, sel_imageWithActions_, v47);

    _Block_release(v47);
    LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v42 & 1) == 0)
      return v48;
    __break(1u);
  }
  if (qword_1ED3C0B50 != -1)
LABEL_18:
    swift_once();
  v49 = sub_1BB86EFEC();
  __swift_project_value_buffer(v49, (uint64_t)qword_1ED476918);
  v50 = sub_1BB86EFC8();
  v51 = sub_1BB8732F4();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v52 = 0;
    _os_log_impl(&dword_1BA493000, v50, v51, "Could not get configured theme. Skipping image generation", v52, 2u);
    MEMORY[0x1BCCE5C38](v52, -1, -1);
  }

  return 0;
}

uint64_t sub_1BB332710@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v6 = sub_1BB86C37C();
  MEMORY[0x1E0C80A78](v6);
  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_1BB86C370();
    sub_1BB86C310();
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    *(&v15 - 2) = v8;
    swift_getKeyPath();
    v16 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E0DC1448]);
    sub_1BA745B28();
    sub_1BB86C1E4();
    v9 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v9);
    *(&v15 - 2) = v10;
    swift_getKeyPath();
    v16 = a2;
    sub_1BA745BF4();
    v11 = a2;
    sub_1BB86C1E4();
    v12 = sub_1BB86C304();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 0, 1, v12);
  }
  else
  {
    v14 = sub_1BB86C304();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 1, 1, v14);
  }
}

id sub_1BB3328F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  const char *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v41;
  unsigned __int8 v42;

  v5 = (void *)v2[2];
  swift_getObjectType();
  FCPuzzleProviding.puzzleKind.getter();
  if (v42 >= 2u)
  {
    if (v42 == 2)
    {
      v8 = v2[6];
      v9 = v2[7];
      __swift_project_boxed_opaque_existential_1(v2 + 3, v8);
      v10 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(v5, a1, a2, v8, v9);
      v11 = v10;
      if (v10)
      {
        v12 = objc_msgSend(v10, sel_shareTextForegroundColor);
        if (v12)
        {
          v13 = v12;
          v7 = objc_msgSend(v12, sel_ne_color);

          v14 = objc_msgSend(v11, sel_navigationBarBackgroundColor);
          if (v14)
          {
            v15 = v14;
            objc_msgSend(v14, sel_ne_color);
            swift_unknownObjectRelease();

            return v7;
          }

        }
      }
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v31 = sub_1BB86EFEC();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED476918);
      swift_retain_n();
      v32 = sub_1BB86EFC8();
      v33 = sub_1BB8732F4();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v41 = v35;
        *(_DWORD *)v34 = 136315138;
        v36 = objc_msgSend(v5, sel_identifier);
        v37 = sub_1BB8729A0();
        v39 = v38;

        sub_1BA5D2E14(v37, v39, &v41);
        sub_1BB873A8C();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA493000, v32, v33, "No text or background color defined for %s. Cannot configure theme", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v35, -1, -1);
        MEMORY[0x1BCCE5C38](v34, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      swift_unknownObjectRelease();
      return 0;
    }
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v16 = sub_1BB86EFEC();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED476918);
    swift_retain_n();
    v17 = sub_1BB86EFC8();
    v18 = sub_1BB8732F4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v41 = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = objc_msgSend(v5, sel_identifier);
      v22 = sub_1BB8729A0();
      v24 = v23;

      sub_1BA5D2E14(v22, v24, &v41);
      sub_1BB873A8C();
      swift_release_n();
      swift_bridgeObjectRelease();
      v25 = "No puzzle kind defined for %s. Cannot configure theme";
LABEL_17:
      _os_log_impl(&dword_1BA493000, v17, v18, v25, v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v20, -1, -1);
      MEMORY[0x1BCCE5C38](v19, -1, -1);

      return 0;
    }
LABEL_18:

    swift_release_n();
    return 0;
  }
  v6 = objc_msgSend(objc_msgSend(v5, sel_puzzleType), sel_themeColor);
  swift_unknownObjectRelease();
  if (!v6)
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v26 = sub_1BB86EFEC();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED476918);
    swift_retain_n();
    v17 = sub_1BB86EFC8();
    v18 = sub_1BB8732F4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v41 = v20;
      *(_DWORD *)v19 = 136315138;
      v27 = objc_msgSend(v5, sel_identifier);
      v28 = sub_1BB8729A0();
      v30 = v29;

      sub_1BA5D2E14(v28, v30, &v41);
      sub_1BB873A8C();
      swift_release_n();
      swift_bridgeObjectRelease();
      v25 = "No background color defined for %s. Cannot configure theme";
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  objc_msgSend(v6, sel_ne_color);

  return objc_msgSend((id)objc_opt_self(), sel_whiteColor);
}

id *sub_1BB332F08()
{
  id *v0;
  char *v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 3));

  v1 = (char *)v0
     + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_buttonConfig;
  v2 = sub_1BB8739CC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_widthConstraint));
  return v0;
}

uint64_t sub_1BB332FA4()
{
  sub_1BB332F08();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB332FC4()
{
  return type metadata accessor for CompletedShareImageFactory();
}

uint64_t type metadata accessor for CompletedShareImageFactory()
{
  uint64_t result;

  result = qword_1EF2C13F8;
  if (!qword_1EF2C13F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB333008()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB8739CC();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t sub_1BB3330B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _OWORD *v16;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  double v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  char *v42;
  double v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  id v65;
  id v66;
  double *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;

  v3 = v2;
  v90 = a2;
  sub_1BA4B07F0(0, &qword_1EF2B6730, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v89 = (char *)&v82 - v7;
  v8 = sub_1BB873918();
  v87 = *(_QWORD *)(v8 - 8);
  v88 = v8;
  MEMORY[0x1E0C80A78](v8);
  v86 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB873978();
  v84 = *(_QWORD *)(v10 - 8);
  v85 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB8739CC();
  v82 = *(_QWORD *)(v13 - 8);
  v83 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_width) = 0;
  v16 = (_OWORD *)(v3
                 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_textInsets);
  __asm { FMOV            V0.2D, #14.0 }
  *v16 = _Q0;
  v16[1] = _Q0;
  *(_QWORD *)(v3 + 16) = a1;
  sub_1BA4C010C(a2, v3 + 24);
  v22 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  swift_unknownObjectRetain();
  v23 = objc_msgSend(v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)(v3 + 88) = v23;
  v24 = (void *)objc_opt_self();
  v25 = v23;
  v26 = objc_msgSend(v24, sel_systemFontOfSize_, 15.0);
  objc_msgSend(v25, sel_setFont_, v26);

  objc_msgSend(*(id *)(v3 + 88), sel_setAdjustsFontForContentSizeCategory_, 0);
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), (SEL)&stru_1E7398538.type, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)(v3 + 96) = v27;
  v28 = *MEMORY[0x1E0DC1448];
  v29 = v27;
  v30 = objc_msgSend(v24, sel_systemFontOfSize_weight_, 13.0, v28);
  objc_msgSend(v29, sel_setFont_, v30);

  objc_msgSend(*(id *)(v3 + 96), sel_setAdjustsFontForContentSizeCategory_, 0);
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), (SEL)&stru_1E7398538.type, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)(v3 + 104) = v31;
  v32 = v31;
  v33 = objc_msgSend(v24, sel_systemFontOfSize_weight_, 28.0, v28);
  objc_msgSend(v32, sel_setFont_, v33);

  objc_msgSend(*(id *)(v3 + 104), sel_setAdjustsFontForContentSizeCategory_, 0);
  *(_QWORD *)(v3 + 112) = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  sub_1BB8739C0();
  v34 = v3 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_buttonConfig;
  v35 = v82;
  v36 = v83;
  (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v3 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_buttonConfig, v15, v83);
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v12, *MEMORY[0x1E0DC3180], v85);
  swift_beginAccess();
  sub_1BB87390C();
  swift_endAccess();
  v37 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  swift_beginAccess();
  sub_1BB873960();
  (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v86, *MEMORY[0x1E0DC3060], v88);
  sub_1BB873924();
  swift_endAccess();
  v38 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_scale_, 4, 1, 12.0);
  v39 = (void *)sub_1BB872970();
  v40 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v39, v38);

  swift_beginAccess();
  sub_1BB87399C();
  sub_1BB873948();
  sub_1BB873930();
  sub_1BB87393C();
  swift_endAccess();
  v41 = *(void **)(v3 + 112);
  v42 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v89, v34, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v42, 0, 1, v36);
  sub_1BB8739F0();
  LODWORD(v43) = 1144750080;
  objc_msgSend(v41, sel_setContentHuggingPriority_forAxis_, 0, v43);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1BB8856F0;
  v45 = *(void **)(v3 + 104);
  *(_QWORD *)(v44 + 32) = v45;
  *(_QWORD *)(v44 + 40) = v41;
  v91 = v44;
  sub_1BB872DCC();
  v46 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
  v47 = v45;
  v48 = v41;
  v49 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v50 = objc_msgSend(v46, sel_initWithArrangedSubviews_, v49);

  *(_QWORD *)(v3 + 80) = v50;
  objc_msgSend(v50, sel_setAxis_, 0);
  objc_msgSend(v50, sel_setAlignment_, 3);
  *(_QWORD *)(v3 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_1BB895110;
  v52 = *(void **)(v3 + 88);
  v53 = *(void **)(v3 + 96);
  *(_QWORD *)(v51 + 32) = v52;
  *(_QWORD *)(v51 + 40) = v53;
  *(_QWORD *)(v51 + 48) = v50;
  v91 = v51;
  sub_1BB872DCC();
  v54 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  v55 = v52;
  v56 = v53;
  v57 = v50;
  v58 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v59 = objc_msgSend(v54, sel_initWithArrangedSubviews_, v58);

  *(_QWORD *)(v3 + 72) = v59;
  objc_msgSend(v59, sel_setAxis_, 1);
  objc_msgSend(v59, sel_setSpacing_, 0.0);
  objc_msgSend(v59, sel_setCustomSpacing_afterView_, *(_QWORD *)(v3 + 88), 12.0);
  v60 = *(void **)(v3 + 64);
  objc_msgSend(v60, sel_addSubview_, v59);
  objc_msgSend(v60, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v59, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(*(id *)(v3 + 80), sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v61 = objc_msgSend(v60, sel_widthAnchor);
  v62 = objc_msgSend(v61, sel_constraintEqualToConstant_, 0.1);

  *(_QWORD *)(v3
            + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_widthConstraint) = v62;
  v63 = (void *)objc_opt_self();
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1BB8DC3E0;
  v65 = objc_msgSend(*(id *)(v3 + 72), sel_topAnchor);
  v66 = objc_msgSend(*(id *)(v3 + 64), sel_topAnchor);
  v67 = (double *)(v3
                 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_textInsets);
  v68 = objc_msgSend(v65, sel_constraintEqualToAnchor_constant_, v66, *(double *)(v3+ OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_textInsets));

  *(_QWORD *)(v64 + 32) = v68;
  v69 = objc_msgSend(*(id *)(v3 + 72), sel_leadingAnchor);
  v70 = objc_msgSend(*(id *)(v3 + 64), sel_leadingAnchor);
  v71 = objc_msgSend(v69, sel_constraintEqualToAnchor_constant_, v70, v67[1]);

  *(_QWORD *)(v64 + 40) = v71;
  v72 = objc_msgSend(*(id *)(v3 + 72), sel_trailingAnchor);
  v73 = objc_msgSend(*(id *)(v3 + 64), sel_trailingAnchor);
  v74 = objc_msgSend(v72, sel_constraintEqualToAnchor_constant_, v73, -v67[3]);

  *(_QWORD *)(v64 + 48) = v74;
  v75 = objc_msgSend(*(id *)(v3 + 72), sel_bottomAnchor);
  v76 = objc_msgSend(*(id *)(v3 + 64), sel_bottomAnchor);
  v77 = objc_msgSend(v75, sel_constraintEqualToAnchor_constant_, v76, -v67[2]);

  v78 = *(void **)(v3
                 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_widthConstraint);
  *(_QWORD *)(v64 + 56) = v77;
  *(_QWORD *)(v64 + 64) = v78;
  v91 = v64;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2C1570);
  v79 = v78;
  v80 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v63, sel_activateConstraints_, v80);

  __swift_destroy_boxed_opaque_existential_1(v90);
  return v3;
}

uint64_t sub_1BB333AC8(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v13;

  swift_getObjectType();
  v2 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_name);
  swift_unknownObjectRelease();
  if (!v2)
    return 0;
  v3 = sub_1BB8729A0();
  v5 = v4;

  FCPuzzleProviding.puzzleKind.getter();
  if (v13 < 2u)
  {
    sub_1BA7114A0();
    v3 = sub_1BB873AD4();
    v7 = v6;
    swift_bridgeObjectRelease();
    v5 = v7;
  }
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v10 + 32) = v3;
  *(_QWORD *)(v10 + 40) = v5;
  v11 = sub_1BB8729D0();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB333CBC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;
  unsigned __int8 v4;

  swift_getObjectType();
  FCPuzzleProviding.puzzleKind.getter();
  if (v4 > 2u)
    return 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

uint64_t sub_1BB333E18(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_1BB333E30()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;

  v1 = objc_msgSend(*(id *)(v0 + 56), sel_thumbnailSmallImageAssetHandle);
  *(_QWORD *)(v0 + 64) = v1;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = v1;
  v3 = objc_msgSend(v1, sel_filePath);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BB8729A0();
    v7 = v6;

    *(_QWORD *)(v0 + 32) = v5;
    *(_QWORD *)(v0 + 40) = v7;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED39C340, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v8 = sub_1BB86E9E0();
  }
  else
  {
    *(_QWORD *)(swift_task_alloc() + 16) = v2;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED39C340, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v8 = sub_1BB86EA58();
    swift_task_dealloc();
  }
  *(_QWORD *)(v0 + 72) = v8;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v10;
  *v10 = v0;
  v10[1] = sub_1BB333FAC;
  return sub_1BB86E908();
}

uint64_t sub_1BB333FAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BB334018()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + 64);
  v2 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  v3 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithContentsOfFile_, v3);

  return (*(uint64_t (**)(id))(v0 + 8))(v4);
}

uint64_t sub_1BB33409C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  void *v5;
  void *v6;
  uint8_t *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;

  swift_release();
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v1 = sub_1BB86EFEC();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED476918);
  swift_unknownObjectRetain_n();
  v2 = sub_1BB86EFC8();
  v3 = sub_1BB8732F4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(void **)(v0 + 88);
  v6 = *(void **)(v0 + 56);
  if (v4)
  {
    v15 = *(void **)(v0 + 64);
    v16 = *(void **)(v0 + 88);
    v7 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v17 = v14;
    *(_DWORD *)v7 = 136315138;
    v8 = objc_msgSend(v6, sel_identifier);
    v9 = sub_1BB8729A0();
    v11 = v10;

    *(_QWORD *)(v0 + 48) = sub_1BA5D2E14(v9, v11, &v17);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_1BA493000, v2, v3, "Failed downloading asset handle for Puzzle ID: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v14, -1, -1);
    MEMORY[0x1BCCE5C38](v7, -1, -1);

    v12 = v16;
  }
  else
  {

    swift_unknownObjectRelease_n();
    v12 = v5;
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1BB3342B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB334300()
{
  return 8;
}

uint64_t sub_1BB33430C()
{
  return swift_release();
}

uint64_t sub_1BB334314(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BB334328(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BB334340()
{
  return 8;
}

id sub_1BB334354()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  objc_msgSend(v1, sel_bounds);
  return objc_msgSend(v1, sel_drawViewHierarchyInRect_afterScreenUpdates_, 1);
}

uint64_t sub_1BB334390()
{
  return swift_deallocObject();
}

uint64_t FeedContentConfigType.seenContentMarker()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  _QWORD v22[8];

  v22[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v22 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v22 - v14;
  v16 = *(void (**)(uint64_t, uint64_t))(a2 + 40);
  v22[0] = v3;
  v16(a1, a2);
  v16(a1, a2);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(AssociatedTypeWitness, AssociatedConformanceWitness);
  v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, AssociatedTypeWitness);
  v22[7] = v18;
  v22[4] = a1;
  v22[5] = a2;
  swift_getAssociatedTypeWitness();
  v20 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v20);
  sub_1BB873DA4();
  (*(void (**)(void))(AssociatedConformanceWitness + 64))();
  swift_bridgeObjectRelease();
  v19(v13, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(a2 + 56))(v15, a1, a2);
  return ((uint64_t (*)(char *, uint64_t))v19)(v15, AssociatedTypeWitness);
}

uint64_t sub_1BB3345A4()
{
  uint64_t AssociatedConformanceWitness;
  void (*v1)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v1 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 56);
  v2 = swift_checkMetadataState();
  v1(&v4, v2, AssociatedConformanceWitness);
  return v4;
}

uint64_t sub_1BB33469C()
{
  return sub_1BB3345A4() & 1;
}

uint64_t dispatch thunk of FeedContentConfigType.feedConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedContentConfigType.knobsConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedContentConfigType.replacing(feedConfig:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t FormatEdgeInsets.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB872FDC();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB872FDC();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  sub_1BB872FDC();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v5);
  sub_1BB872FDC();
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  return 540701736;
}

double FormatEdgeInsets.top.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double FormatEdgeInsets.left.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double FormatEdgeInsets.bottom.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double FormatEdgeInsets.right.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t FormatEdgeInsetsEquation.top.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatEdgeInsetsEquation.left.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t FormatEdgeInsetsEquation.bottom.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatEdgeInsetsEquation.right.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t FormatEdgeInsetsEquation.description.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v0 = swift_bridgeObjectRetain();
  sub_1BB106F08(v0);
  sub_1BB872AFC(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v2);
  v3 = swift_bridgeObjectRetain();
  sub_1BB106F08(v3);
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v5);
  v6 = swift_bridgeObjectRetain();
  sub_1BB106F08(v6);
  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v8);
  v9 = swift_bridgeObjectRetain();
  sub_1BB106F08(v9);
  sub_1BB872AFC(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v11);
  return 540701736;
}

uint64_t _s8NewsFeed24FormatEdgeInsetsEquationV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = *a2;
  v6 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1BA881EAC(v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1BA881EAC(v2, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_1BA881EAC(v5, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA881EAC(v4, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

BOOL _s8NewsFeed16FormatEdgeInsetsV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

unint64_t sub_1BB334B24(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB334B48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB334B48()
{
  unint64_t result;

  result = qword_1EF2C1578;
  if (!qword_1EF2C1578)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEdgeInsets, &type metadata for FormatEdgeInsets);
    atomic_store(result, (unint64_t *)&qword_1EF2C1578);
  }
  return result;
}

uint64_t sub_1BB334B8C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA54515C, (uint64_t (*)(void))sub_1BA58C294, (uint64_t (*)(void))sub_1BB334BA8);
}

unint64_t sub_1BB334BA8()
{
  unint64_t result;

  result = qword_1EF2C1580;
  if (!qword_1EF2C1580)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEdgeInsets, &type metadata for FormatEdgeInsets);
    atomic_store(result, (unint64_t *)&qword_1EF2C1580);
  }
  return result;
}

unint64_t sub_1BB334BEC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB334C10();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB334C10()
{
  unint64_t result;

  result = qword_1EF2C1588;
  if (!qword_1EF2C1588)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEdgeInsetsEquation, &type metadata for FormatEdgeInsetsEquation);
    atomic_store(result, (unint64_t *)&qword_1EF2C1588);
  }
  return result;
}

uint64_t sub_1BB334C54(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA63660C, (uint64_t (*)(void))sub_1BA6169FC, (uint64_t (*)(void))sub_1BB334C70);
}

unint64_t sub_1BB334C70()
{
  unint64_t result;

  result = qword_1EF2C1590;
  if (!qword_1EF2C1590)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEdgeInsetsEquation, &type metadata for FormatEdgeInsetsEquation);
    atomic_store(result, (unint64_t *)&qword_1EF2C1590);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatEdgeInsets()
{
  return &type metadata for FormatEdgeInsets;
}

uint64_t destroy for FormatMediaTimingFunctionControlPoints()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatMediaTimingFunctionControlPoints(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatMediaTimingFunctionControlPoints(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FormatMediaTimingFunctionControlPoints(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatEdgeInsetsEquation()
{
  return &type metadata for FormatEdgeInsetsEquation;
}

uint64_t sub_1BB334E40()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FormatNodeBinderAuxiliary()
{
  return sub_1BB334EA0();
}

uint64_t sub_1BB334EA0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatNodeBinderAuxiliary(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = *((_BYTE *)a2 + 48);
  sub_1BB334E40();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatNodeBinderAuxiliary(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = *((_BYTE *)a2 + 48);
  sub_1BB334E40();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  sub_1BB334EA0();
  return a1;
}

uint64_t assignWithTake for FormatNodeBinderAuxiliary(uint64_t a1, uint64_t a2)
{
  char v3;
  __int128 v4;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1BB334EA0();
  return a1;
}

uint64_t sub_1BB335040(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatNodeBinderAuxiliary()
{
  return &type metadata for FormatNodeBinderAuxiliary;
}

uint64_t sub_1BB33505C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD v3[2];

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "<html><body>");
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  return v3[0];
}

uint64_t sub_1BB335128@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = (uint64_t *)*v2;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  sub_1BB3356E4(a1);
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  swift_beginAccess();
  sub_1BB872AFC(v8);
  swift_endAccess();
  swift_bridgeObjectRelease();
  a2[3] = v5;
  a2[4] = (uint64_t *)&off_1E7301510;
  *a2 = v2;
  return swift_retain();
}

uint64_t sub_1BB335234@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v4 = (uint64_t *)*v2;
  v14 = 4091964;
  v15 = 0xE300000000000000;
  sub_1BAA4FE00(a1, (uint64_t)v11);
  v5 = v12;
  if (v12)
  {
    v6 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    sub_1BAA4FE98((uint64_t)v11);
  }
  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v8);
  swift_beginAccess();
  sub_1BB872AFC(v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  a2[3] = v4;
  a2[4] = (uint64_t *)&off_1E7301510;
  *a2 = v2;
  return swift_retain();
}

uint64_t sub_1BB335358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[2];
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v10 = (uint64_t *)*v5;
  v23[1] = a2;
  v24 = v10;
  v11 = sub_1BB86BE54();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = 0;
  v26 = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v25 = 0x3D6665726820613CLL;
  v26 = 0xE900000000000022;
  v27 = a3;
  v28 = a4;
  sub_1BB86BDD0();
  sub_1BA7114A0();
  sub_1BB873B10();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (!v16)
    swift_bridgeObjectRetain();
  sub_1BB872AFC(v17);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v18);
  sub_1BB3356E4(a1);
  sub_1BB872AFC(v19);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v20);
  swift_beginAccess();
  sub_1BB872AFC(v21);
  swift_endAccess();
  swift_bridgeObjectRelease();
  a5[3] = v24;
  a5[4] = (uint64_t *)&off_1E7301510;
  *a5 = v5;
  return swift_retain();
}

uint64_t type metadata accessor for SharingHTMLBuilder()
{
  return objc_opt_self();
}

uint64_t sub_1BB335544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  _QWORD *v8;

  v7 = *v3;
  swift_beginAccess();
  sub_1BB872AFC(v8);
  swift_endAccess();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v7;
  return swift_retain();
}

uint64_t sub_1BB3355C8@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1BB335128(a1, a2);
}

uint64_t sub_1BB3355E8@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1BB335234(a1, a2);
}

uint64_t sub_1BB335608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  return sub_1BB335358(a1, a2, a3, a4, a5);
}

uint64_t sub_1BB335628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *v4;
  sub_1BB3356E4(a1);
  swift_beginAccess();
  sub_1BB872AFC(v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  a4[3] = a2;
  a4[4] = a3;
  *a4 = v8;
  return swift_retain();
}

uint64_t sub_1BB3356C4()
{
  return sub_1BB33505C();
}

uint64_t sub_1BB3356E4(uint64_t a1)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;

  sub_1BB872AB4();
  sub_1BB8731C8();
  if ((v2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BA7114A0();
    a1 = sub_1BB873B04();
  }
  sub_1BB872AB4();
  sub_1BB8731C8();
  if ((v3 & 1) == 0)
  {
    sub_1BA7114A0();
    a1 = sub_1BB873B04();
    swift_bridgeObjectRelease();
  }
  sub_1BB872AB4();
  sub_1BB8731C8();
  if ((v4 & 1) == 0)
  {
    sub_1BA7114A0();
    a1 = sub_1BB873B04();
    swift_bridgeObjectRelease();
  }
  sub_1BB872AB4();
  sub_1BB8731C8();
  if ((v5 & 1) == 0)
  {
    sub_1BA7114A0();
    a1 = sub_1BB873B04();
    swift_bridgeObjectRelease();
  }
  sub_1BB872AB4();
  sub_1BB8731C8();
  if ((v6 & 1) == 0)
  {
    sub_1BA7114A0();
    a1 = sub_1BB873B04();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t FormatIssue.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssue.properties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssue.__allocating_init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  __int128 v11;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = a3[1];
  *(_OWORD *)(v10 + 32) = *a3;
  *(_OWORD *)(v10 + 48) = v11;
  swift_beginAccess();
  *(_QWORD *)(v10 + 64) = a4;
  swift_beginAccess();
  *(_QWORD *)(v10 + 72) = a5;
  return v10;
}

uint64_t FormatIssue.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssue.overrides.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssue.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssue.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatIssue.properties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssue.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

NewsFeed::FormatIssue::Overrides __swiftcall FormatIssue.Overrides.init(title:issueDescription:)(Swift::String_optional title, Swift::String_optional issueDescription)
{
  Swift::String_optional *v2;
  NewsFeed::FormatIssue::Overrides result;

  *v2 = title;
  v2[1] = issueDescription;
  result.issueDescription = issueDescription;
  result.title = title;
  return result;
}

uint64_t FormatIssue.init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  __int128 v8;

  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v8 = a3[1];
  *(_OWORD *)(v5 + 32) = *a3;
  *(_OWORD *)(v5 + 48) = v8;
  swift_beginAccess();
  *(_QWORD *)(v5 + 64) = a4;
  swift_beginAccess();
  *(_QWORD *)(v5 + 72) = a5;
  return v5;
}

uint64_t FormatIssue.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatIssue.init(from:)(a1);
  return v2;
}

uint64_t FormatIssue.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64x2_t v14;
  int8x16_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int8x16_t v26;
  uint64_t v27;
  char v28;

  sub_1BA4CDF6C(0, &qword_1ED3A0978, (uint64_t (*)(void))sub_1BB3369A8, (uint64_t)&type metadata for FormatIssue.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v22 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3369A8();
  v21 = v6;
  v7 = v23;
  v8 = v1;
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v25) = 0;
    v9 = v21;
    v10 = v22;
    *(_QWORD *)(v8 + 16) = sub_1BB874098();
    *(_QWORD *)(v8 + 24) = v11;
    LOBYTE(v24) = 1;
    sub_1BB3369EC();
    sub_1BB874068();
    v12 = v25;
    v13 = v27;
    v14.i64[0] = 1;
    v15 = vandq_s8(v26, (int8x16_t)vdupq_lane_s64(vmvnq_s8((int8x16_t)vceqq_s64((int64x2_t)v26, v14)).i64[0], 0));
    v16 = v26.i64[0];
    if (v26.i64[0] == 1)
      v12 = 0;
    *(_QWORD *)(v8 + 32) = v12;
    if (v16 == 1)
      v17 = 0;
    else
      v17 = v13;
    *(int8x16_t *)(v8 + 40) = v15;
    *(_QWORD *)(v8 + 56) = v17;
    sub_1BA6BCC84();
    LOBYTE(v24) = 2;
    sub_1BA5DBC84();
    sub_1BB874068();
    if (v25)
      v18 = v25;
    else
      v18 = MEMORY[0x1E0DEE9E8];
    swift_beginAccess();
    *(_QWORD *)(v8 + 64) = v18;
    sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
    v28 = 3;
    sub_1BA5DBB94((unint64_t *)&qword_1ED3B9478, (uint64_t (*)(void))sub_1BA8350B4, MEMORY[0x1E0DEAF40]);
    sub_1BB874068();
    if (v24)
      v20 = v24;
    else
      v20 = MEMORY[0x1E0DEE9D8];
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v10);
    swift_beginAccess();
    *(_QWORD *)(v8 + 72) = v20;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

uint64_t sub_1BB3360A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3360D4 + 4 * byte_1BB909708[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB3360D4()
{
  return 0x656469727265766FLL;
}

uint64_t sub_1BB336104()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BB33611C()
{
  sub_1BB3369A8();
  return sub_1BB874710();
}

uint64_t sub_1BB336144()
{
  sub_1BB3369A8();
  return sub_1BB87471C();
}

uint64_t FormatIssue.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatIssue.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatIssue.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  char v19;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1ED3A09A0, (uint64_t (*)(void))sub_1BB3369A8, (uint64_t)&type metadata for FormatIssue.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3369A8();
  sub_1BB8746C8();
  LOBYTE(v17) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v10 = *(_OWORD *)(v3 + 48);
    v17 = *(_OWORD *)(v3 + 32);
    v18 = v10;
    LOBYTE(v15) = 1;
    sub_1BB336A30();
    sub_1BB8741AC();
    swift_beginAccess();
    v12 = *(_QWORD *)(v3 + 64);
    if (*(_QWORD *)(v12 + 16))
    {
      v19 = 2;
      swift_bridgeObjectRetain_n();
      v13 = sub_1BA67F4CC(v12);
      swift_bridgeObjectRelease();
      v16 = v13;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v16);
      swift_release();
      v15 = (uint64_t)v16;
      sub_1BB336A74();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v14 = *(_QWORD *)(v3 + 72);
    if (*(_QWORD *)(v14 + 16))
    {
      v19 = 3;
      v16 = (_QWORD *)v14;
      sub_1BB336A74();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA5DBB94((unint64_t *)&qword_1ED39D9A0, (uint64_t (*)(void))sub_1BA89B7F8, MEMORY[0x1E0DEAF10]);
      sub_1BB874464();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB3364E4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatIssue.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB336538(_QWORD *a1)
{
  return FormatIssue.encode(to:)(a1);
}

uint64_t sub_1BB336558(_QWORD **a1, _QWORD **a2)
{
  return _s8NewsFeed11FormatIssueC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatIssue.Overrides.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssue.Overrides.issueDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double static FormatIssue.Overrides.none.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1BB3365C8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x656C746974;
}

uint64_t sub_1BB336604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB337074(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB336628()
{
  sub_1BB336ADC();
  return sub_1BB874710();
}

uint64_t sub_1BB336650()
{
  sub_1BB336ADC();
  return sub_1BB87471C();
}

uint64_t FormatIssue.Overrides.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1BA4CDF6C(0, &qword_1ED3A09A8, (uint64_t (*)(void))sub_1BB336ADC, (uint64_t)&type metadata for FormatIssue.Overrides.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB336ADC();
  sub_1BB8746C8();
  v13 = 0;
  v9 = v11[3];
  sub_1BB87411C();
  if (!v9)
  {
    v12 = 1;
    sub_1BB87411C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatIssue.Overrides.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  char v22;

  v20 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3A0980, (uint64_t (*)(void))sub_1BB336ADC, (uint64_t)&type metadata for FormatIssue.Overrides.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB336ADC();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v20;
  v22 = 0;
  v10 = sub_1BB87402C();
  v12 = v11;
  v21 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB87402C();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17 = v13;
  v16(v8, v5);
  *v9 = v10;
  v9[1] = v12;
  v9[2] = v17;
  v9[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB336980@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatIssue.Overrides.init(from:)(a1, a2);
}

uint64_t sub_1BB336994(_QWORD *a1)
{
  return FormatIssue.Overrides.encode(to:)(a1);
}

unint64_t sub_1BB3369A8()
{
  unint64_t result;

  result = qword_1ED39F780;
  if (!qword_1ED39F780)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB909A70, &type metadata for FormatIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39F780);
  }
  return result;
}

unint64_t sub_1BB3369EC()
{
  unint64_t result;

  result = qword_1ED39F7B8;
  if (!qword_1ED39F7B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssue.Overrides, &type metadata for FormatIssue.Overrides);
    atomic_store(result, (unint64_t *)&qword_1ED39F7B8);
  }
  return result;
}

unint64_t sub_1BB336A30()
{
  unint64_t result;

  result = qword_1ED39F7B0;
  if (!qword_1ED39F7B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssue.Overrides, &type metadata for FormatIssue.Overrides);
    atomic_store(result, (unint64_t *)&qword_1ED39F7B0);
  }
  return result;
}

unint64_t sub_1BB336A74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C1638;
  if (!qword_1EF2C1638)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A09A0, (uint64_t (*)(void))sub_1BB3369A8, (uint64_t)&type metadata for FormatIssue.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C1638);
  }
  return result;
}

unint64_t sub_1BB336ADC()
{
  unint64_t result;

  result = qword_1ED39F798;
  if (!qword_1ED39F798)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB909A20, &type metadata for FormatIssue.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39F798);
  }
  return result;
}

uint64_t sub_1BB336B20(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB336B84(&qword_1ED39F7D0, (uint64_t)&protocol conformance descriptor for FormatIssue);
  a1[2] = sub_1BB336B84((unint64_t *)&unk_1ED39F7C0, (uint64_t)&protocol conformance descriptor for FormatIssue);
  result = sub_1BB336B84(&qword_1EF2C1640, (uint64_t)&protocol conformance descriptor for FormatIssue);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB336B84(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatIssue();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FormatIssue()
{
  return objc_opt_self();
}

unint64_t sub_1BB336BE0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BB3369EC();
  a1[2] = sub_1BB336A30();
  result = sub_1BB336C14();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB336C14()
{
  unint64_t result;

  result = qword_1EF2C1648;
  if (!qword_1EF2C1648)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssue.Overrides, &type metadata for FormatIssue.Overrides);
    atomic_store(result, (unint64_t *)&qword_1EF2C1648);
  }
  return result;
}

uint64_t sub_1BB336C58@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB336CA4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatIssue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatIssue.__allocating_init(identifier:overrides:selectors:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatIssue.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for FormatIssue.Overrides()
{
  return &type metadata for FormatIssue.Overrides;
}

uint64_t storeEnumTagSinglePayload for FormatIssue.Overrides.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB336D78 + 4 * byte_1BB909711[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB336DAC + 4 * byte_1BB90970C[v4]))();
}

uint64_t sub_1BB336DAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB336DB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB336DBCLL);
  return result;
}

uint64_t sub_1BB336DC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB336DD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB336DD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB336DDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatIssue.Overrides.CodingKeys()
{
  return &type metadata for FormatIssue.Overrides.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FormatIssue.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB336E44 + 4 * byte_1BB90971B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB336E78 + 4 * byte_1BB909716[v4]))();
}

uint64_t sub_1BB336E78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB336E80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB336E88);
  return result;
}

uint64_t sub_1BB336E94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB336E9CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB336EA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB336EA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatIssue.CodingKeys()
{
  return &type metadata for FormatIssue.CodingKeys;
}

unint64_t sub_1BB336EC8()
{
  unint64_t result;

  result = qword_1EF2C1650;
  if (!qword_1EF2C1650)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB909940, &type metadata for FormatIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1650);
  }
  return result;
}

unint64_t sub_1BB336F10()
{
  unint64_t result;

  result = qword_1EF2C1658;
  if (!qword_1EF2C1658)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9099F8, &type metadata for FormatIssue.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1658);
  }
  return result;
}

unint64_t sub_1BB336F58()
{
  unint64_t result;

  result = qword_1ED39F7A8;
  if (!qword_1ED39F7A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB909968, &type metadata for FormatIssue.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39F7A8);
  }
  return result;
}

unint64_t sub_1BB336FA0()
{
  unint64_t result;

  result = qword_1ED39F7A0;
  if (!qword_1ED39F7A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB909990, &type metadata for FormatIssue.Overrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39F7A0);
  }
  return result;
}

unint64_t sub_1BB336FE8()
{
  unint64_t result;

  result = qword_1ED39F790;
  if (!qword_1ED39F790)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9098B0, &type metadata for FormatIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39F790);
  }
  return result;
}

unint64_t sub_1BB337030()
{
  unint64_t result;

  result = qword_1ED39F788;
  if (!qword_1ED39F788)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9098D8, &type metadata for FormatIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39F788);
  }
  return result;
}

uint64_t sub_1BB337074(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95C7A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

NewsFeed::FormatDerivedDataErrorScope_optional __swiftcall FormatDerivedDataErrorScope.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatDerivedDataErrorScope_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FormatDerivedDataErrorScope.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3371E8 + 4 * byte_1BB909AC0[*v0]))(0x697461726F636564, 0xEA00000000006E6FLL);
}

uint64_t sub_1BB3371E8()
{
  return 0x70756F7267;
}

uint64_t sub_1BB3371FC()
{
  return 1953459315;
}

uint64_t sub_1BB33720C()
{
  return 0x656C797473;
}

uint64_t sub_1BB337220()
{
  return 0x686374697773;
}

uint64_t sub_1BB337234()
{
  return 0x6143686374697773;
}

uint64_t sub_1BB337250()
{
  return 1835365481;
}

uint64_t sub_1BB337260()
{
  return 0x6E6F6974706FLL;
}

uint64_t sub_1BB337274()
{
  return 0x746165706572;
}

uint64_t sub_1BB337288()
{
  return 0x7261696C69787561;
}

void sub_1BB3372A4(char *a1)
{
  sub_1BB7F24E0(*a1);
}

unint64_t sub_1BB3372B4()
{
  unint64_t result;

  result = qword_1EF2C1660;
  if (!qword_1EF2C1660)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDerivedDataErrorScope, &type metadata for FormatDerivedDataErrorScope);
    atomic_store(result, (unint64_t *)&qword_1EF2C1660);
  }
  return result;
}

uint64_t sub_1BB3372F8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D1D18((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB33733C(uint64_t a1)
{
  char *v1;

  sub_1BA9D1D18(a1, *v1);
}

uint64_t sub_1BB337344()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D1D18((uint64_t)v3, v1);
  return sub_1BB874608();
}

NewsFeed::FormatDerivedDataErrorScope_optional sub_1BB337384(Swift::String *a1)
{
  return FormatDerivedDataErrorScope.init(rawValue:)(*a1);
}

uint64_t sub_1BB337390@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatDerivedDataErrorScope.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataErrorScope(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1BB337400 + 4 * byte_1BB909ACF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1BB337434 + 4 * byte_1BB909ACA[v4]))();
}

uint64_t sub_1BB337434(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB33743C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB337444);
  return result;
}

uint64_t sub_1BB337450(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB337458);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1BB33745C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB337464(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataErrorScope()
{
  return &type metadata for FormatDerivedDataErrorScope;
}

uint64_t *sub_1BB337480(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 v91;
  uint64_t v92;
  unint64_t v93;
  unsigned __int8 v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  const void *v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(const void *, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  char *__dst;
  int *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  unsigned int (*v144)(char *, uint64_t, uint64_t);
  unsigned int (*v145)(char *, uint64_t, uint64_t);
  uint64_t v146;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
        v7 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v7;
        v8 = *(void **)(a2 + 16);
        swift_bridgeObjectRetain();
        v9 = v8;
        a1[2] = (uint64_t)v8;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v12 = *(_QWORD *)(a2 + 16);
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = v12;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        v13 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v13;
        v14 = *(_QWORD *)(a2 + 24);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = v14;
        a1[4] = *(_QWORD *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 6u:
      case 0x11u:
      case 0x14u:
      case 0x15u:
      case 0x16u:
      case 0x17u:
      case 0x21u:
        v32 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v32;
        v33 = *(_QWORD *)(a2 + 16);
        v34 = *(_QWORD *)(a2 + 24);
        a1[2] = v33;
        a1[3] = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 7u:
      case 8u:
      case 0xFu:
      case 0x10u:
      case 0x12u:
      case 0x13u:
      case 0x19u:
      case 0x27u:
      case 0x29u:
      case 0x2Bu:
        v31 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v31;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 9u:
        v15 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v15;
        v16 = *(_QWORD *)(a2 + 16);
        v17 = *(_QWORD *)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        swift_bridgeObjectRetain();
        sub_1BA8D4E00(v16, v17, v18);
        a1[2] = v16;
        a1[3] = v17;
        *((_BYTE *)a1 + 32) = v18;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xAu:
        v19 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v19;
        *((_BYTE *)a1 + 16) = *(_BYTE *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xBu:
      case 0xCu:
        v20 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v20;
        *((_WORD *)a1 + 8) = *(_WORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xDu:
        v21 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v21;
        *((_BYTE *)a1 + 16) = *(_BYTE *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xEu:
        v22 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v22;
        v23 = *(_QWORD *)(a2 + 16);
        v24 = *(_QWORD *)(a2 + 24);
        v25 = *(_QWORD *)(a2 + 32);
        v26 = *(_BYTE *)(a2 + 40);
        swift_bridgeObjectRetain();
        sub_1BAA73684(v23, v24, v25, v26);
        a1[2] = v23;
        a1[3] = v24;
        a1[4] = v25;
        *((_BYTE *)a1 + 40) = v26;
        v27 = *(_QWORD *)(a2 + 48);
        v28 = *(_QWORD *)(a2 + 56);
        v29 = *(_QWORD *)(a2 + 64);
        v30 = *(_BYTE *)(a2 + 72);
        sub_1BAA73684(v27, v28, v29, v30);
        a1[6] = v27;
        a1[7] = v28;
        a1[8] = v29;
        *((_BYTE *)a1 + 72) = v30;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x18u:
      case 0x1Bu:
      case 0x26u:
        *a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x1Au:
        v35 = *(_QWORD *)a2;
        v36 = *(_QWORD *)(a2 + 8);
        *a1 = v35;
        a1[1] = v36;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x1Cu:
        v37 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v37;
        sub_1BAA9CD3C();
        v142 = v38;
        v39 = *(int *)(v38 + 48);
        v40 = (uint64_t *)((char *)a1 + v39);
        v41 = a2 + v39;
        v42 = *(_QWORD *)(a2 + v39 + 8);
        *v40 = *(_QWORD *)(a2 + v39);
        v40[1] = v42;
        v43 = *(_QWORD *)(a2 + v39 + 24);
        v40[2] = *(_QWORD *)(a2 + v39 + 16);
        v40[3] = v43;
        v44 = *(_QWORD *)(a2 + v39 + 40);
        v40[4] = *(_QWORD *)(a2 + v39 + 32);
        v40[5] = v44;
        v136 = *(_QWORD *)(a2 + v39 + 56);
        v40[6] = *(_QWORD *)(a2 + v39 + 48);
        v40[7] = v136;
        v40[8] = *(_QWORD *)(a2 + v39 + 64);
        v45 = type metadata accessor for FormatSlotDefinition();
        v46 = *(int *)(v45 + 40);
        __dst = (char *)v40 + v46;
        v140 = (int *)v45;
        v135 = (void *)(v41 + v46);
        v47 = sub_1BB86E710();
        v48 = *(_QWORD *)(v47 - 8);
        v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v144 = v49;
        v134 = v48;
        if (v49((char *)v135, 1, v47))
        {
          sub_1BA74E57C();
          memcpy(__dst, v135, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(v48 + 16))(__dst, v135, v47);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v47);
        }
        v95 = *(int *)(v142 + 64);
        v96 = (uint64_t *)((char *)a1 + v95);
        v97 = (_QWORD *)(a2 + v95);
        v98 = v97[1];
        *v96 = *v97;
        v96[1] = v98;
        v99 = *(int *)(v142 + 80);
        v100 = (uint64_t *)((char *)a1 + v99);
        v101 = (_QWORD *)(a2 + v99);
        v102 = v101[1];
        *v100 = *v101;
        v100[1] = v102;
        v103 = v101[3];
        v100[2] = v101[2];
        v100[3] = v103;
        v104 = v101[5];
        v100[4] = v101[4];
        v100[5] = v104;
        v105 = v101[7];
        v100[6] = v101[6];
        v100[7] = v105;
        v100[8] = v101[8];
        v106 = v140[10];
        v107 = (char *)v100 + v106;
        v108 = (char *)v101 + v106;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v144(v108, 1, v47))
          goto LABEL_47;
        (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v107, v108, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v107, 0, 1, v47);
        goto LABEL_49;
      case 0x1Du:
        v51 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v51;
        v52 = *(_QWORD *)(a2 + 24);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = v52;
        v53 = *(_QWORD *)(a2 + 40);
        a1[4] = *(_QWORD *)(a2 + 32);
        a1[5] = v53;
        v54 = *(_QWORD *)(a2 + 56);
        a1[6] = *(_QWORD *)(a2 + 48);
        a1[7] = v54;
        a1[8] = *(_QWORD *)(a2 + 64);
        v55 = type metadata accessor for FormatSlotDefinition();
        v56 = *(int *)(v55 + 40);
        v141 = (char *)a1 + v56;
        v143 = v55;
        v138 = (void *)(a2 + v56);
        v57 = sub_1BB86E710();
        v58 = *(_QWORD *)(v57 - 8);
        v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v145 = v59;
        v137 = v58;
        if (v59((char *)v138, 1, v57))
        {
          sub_1BA74E57C();
          memcpy(v141, v138, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(v58 + 16))(v141, v138, v57);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v141, 0, 1, v57);
        }
        sub_1BAA9CAF4();
        v110 = *(int *)(v109 + 48);
        v111 = (uint64_t *)((char *)a1 + v110);
        v112 = (_QWORD *)(a2 + v110);
        v113 = v112[1];
        *v111 = *v112;
        v111[1] = v113;
        v114 = v112[3];
        v111[2] = v112[2];
        v111[3] = v114;
        v115 = v112[5];
        v111[4] = v112[4];
        v111[5] = v115;
        v116 = v112[7];
        v111[6] = v112[6];
        v111[7] = v116;
        v111[8] = v112[8];
        v117 = *(int *)(v143 + 40);
        v107 = (char *)v111 + v117;
        v108 = (char *)v112 + v117;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v145(v108, 1, v57))
          goto LABEL_47;
        (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v107, v108, v57);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v107, 0, 1, v57);
        goto LABEL_49;
      case 0x1Eu:
        v61 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v61;
        v62 = *(_QWORD *)(a2 + 24);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = v62;
        v63 = *(_QWORD *)(a2 + 32);
        v64 = *(_QWORD *)(a2 + 40);
        v65 = *(_QWORD *)(a2 + 48);
        v66 = *(_QWORD *)(a2 + 56);
        v67 = *(_BYTE *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA7261E0(v63, v64, v65, v66, v67);
        a1[4] = v63;
        a1[5] = v64;
        a1[6] = v65;
        a1[7] = v66;
        *((_BYTE *)a1 + 64) = v67;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x1Fu:
      case 0x24u:
        v68 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v68;
        a1[2] = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x20u:
        v69 = *(void **)a2;
        v70 = v69;
        *a1 = (uint64_t)v69;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x22u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v71 = *(_QWORD *)(a2 + 8);
        v72 = *(_QWORD *)(a2 + 16);
        a1[1] = v71;
        a1[2] = v72;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x23u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        sub_1BB17BA80();
        v74 = v73;
        v75 = *(int *)(v73 + 48);
        v76 = (uint64_t *)((char *)a1 + v75);
        v77 = a2 + v75;
        *v76 = *(_QWORD *)(a2 + v75);
        v78 = *(_QWORD *)(a2 + v75 + 16);
        v76[1] = *(_QWORD *)(a2 + v75 + 8);
        v76[2] = v78;
        v80 = (uint64_t *)(a2 + v75 + 24);
        v79 = *v80;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v79)
        {
          v81 = *(_QWORD *)(v77 + 32);
          v76[3] = v79;
          v76[4] = v81;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v76 + 3) = *(_OWORD *)v80;
        }
        v146 = type metadata accessor for FormatSlotDefinitionItemSet();
        v118 = *(int *)(v146 + 36);
        v119 = (char *)v76 + v118;
        v120 = (const void *)(v77 + v118);
        v121 = sub_1BB86E710();
        v122 = *(_QWORD *)(v121 - 8);
        v123 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v122 + 48);
        if (v123(v120, 1, v121))
        {
          sub_1BA74E57C();
          memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v122 + 16))(v119, v120, v121);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
        }
        v125 = *(int *)(v74 + 64);
        v126 = (uint64_t *)((char *)a1 + v125);
        v127 = a2 + v125;
        *v126 = *(_QWORD *)(a2 + v125);
        v128 = *(_QWORD *)(a2 + v125 + 16);
        v126[1] = *(_QWORD *)(a2 + v125 + 8);
        v126[2] = v128;
        v130 = (uint64_t *)(a2 + v125 + 24);
        v129 = *v130;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v129)
        {
          v131 = *(_QWORD *)(v127 + 32);
          v126[3] = v129;
          v126[4] = v131;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v126 + 3) = *(_OWORD *)v130;
        }
        v132 = *(int *)(v146 + 36);
        v107 = (char *)v126 + v132;
        v108 = (char *)(v127 + v132);
        if (v123((const void *)(v127 + v132), 1, v121))
        {
LABEL_47:
          sub_1BA74E57C();
          memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v107, v108, v121);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v107, 0, 1, v121);
        }
LABEL_49:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x25u:
        v82 = *(_QWORD *)(a2 + 8);
        *a1 = *(_QWORD *)a2;
        a1[1] = v82;
        v83 = *(_QWORD *)(a2 + 24);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = v83;
        v84 = *(_QWORD *)(a2 + 32);
        v85 = *(_QWORD *)(a2 + 40);
        a1[4] = v84;
        a1[5] = v85;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x2Au:
        v86 = *(_QWORD *)a2;
        v87 = *(_QWORD *)(a2 + 8);
        v88 = *(_BYTE *)(a2 + 16);
        sub_1BA987528(v86, v87, v88);
        *a1 = v86;
        a1[1] = v87;
        *((_BYTE *)a1 + 16) = v88;
        swift_storeEnumTagMultiPayload();
        break;
      case 0x2Cu:
        v89 = *(_QWORD *)a2;
        v90 = *(_QWORD *)(a2 + 8);
        v91 = *(_BYTE *)(a2 + 16);
        sub_1BA9ED4DC(*(_QWORD *)a2, v90, v91);
        *a1 = v89;
        a1[1] = v90;
        *((_BYTE *)a1 + 16) = v91;
        v92 = *(_QWORD *)(a2 + 24);
        v93 = *(_QWORD *)(a2 + 32);
        v94 = *(_BYTE *)(a2 + 40);
        sub_1BA895B64(v92, v93, v94);
        a1[3] = v92;
        a1[4] = v93;
        *((_BYTE *)a1 + 40) = v94;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_1BB3382D8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      swift_bridgeObjectRelease();
      v2 = *(void **)(a1 + 16);
      goto LABEL_3;
    case 4u:
    case 7u:
    case 8u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xFu:
    case 0x10u:
    case 0x12u:
    case 0x13u:
    case 0x18u:
    case 0x19u:
    case 0x1Bu:
    case 0x26u:
    case 0x27u:
    case 0x29u:
    case 0x2Bu:
      goto LABEL_5;
    case 5u:
    case 0x25u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 6u:
    case 0xDu:
    case 0x11u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x1Au:
    case 0x1Fu:
    case 0x21u:
    case 0x22u:
    case 0x24u:
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      return;
    case 9u:
      swift_bridgeObjectRelease();
      sub_1BA8D5088(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
      return;
    case 0xEu:
      swift_bridgeObjectRelease();
      sub_1BAA37068(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
      sub_1BAA37068(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
      return;
    case 0x1Cu:
      swift_bridgeObjectRelease();
      sub_1BAA9CD3C();
      v4 = v3;
      v5 = a1 + *(int *)(v3 + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for FormatSlotDefinition();
      v7 = v5 + *(int *)(v6 + 40);
      v8 = sub_1BB86E710();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (!v10(v7, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      swift_bridgeObjectRelease();
      v11 = a1 + *(int *)(v4 + 80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = *(int *)(v6 + 40);
      goto LABEL_25;
    case 0x1Du:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for FormatSlotDefinition();
      v14 = a1 + *(int *)(v13 + 40);
      v15 = sub_1BB86E710();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
      if (!v17(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      sub_1BAA9CAF4();
      v19 = a1 + *(int *)(v18 + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v19 + *(int *)(v13 + 40);
      if (!v17(v20, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v15);
      return;
    case 0x1Eu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C1F54(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
      return;
    case 0x20u:
      v2 = *(void **)a1;
LABEL_3:

      return;
    case 0x23u:
      sub_1BB17BA80();
      v22 = v21;
      v23 = a1 + *(int *)(v21 + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v23 + 24))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v24 = type metadata accessor for FormatSlotDefinitionItemSet();
      v25 = v23 + *(int *)(v24 + 36);
      v8 = sub_1BB86E710();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (!v10(v25, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v25, v8);
      v11 = a1 + *(int *)(v22 + 64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v11 + 24))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v12 = *(int *)(v24 + 36);
LABEL_25:
      v26 = v11 + v12;
      if (!v10(v26, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v26, v8);
      break;
    case 0x2Au:
      sub_1BA986FA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
      break;
    case 0x2Cu:
      sub_1BA865168(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
      sub_1BA895B84(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
      break;
    default:
      return;
  }
}

uint64_t *sub_1BB338784(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t v89;
  unint64_t v90;
  unsigned __int8 v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  const void *v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int (*v121)(const void *, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *__dst;
  int *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int (*v142)(char *, uint64_t, uint64_t);
  unsigned int (*v143)(char *, uint64_t, uint64_t);
  uint64_t v144;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = (void *)a2[2];
      swift_bridgeObjectRetain();
      v8 = v7;
      a1[2] = (uint64_t)v7;
      goto LABEL_45;
    case 4u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v9 = a2[2];
      a1[1] = a2[1];
      a1[2] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 5u:
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 6u:
    case 0x11u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x21u:
      v29 = a2[1];
      *a1 = *a2;
      a1[1] = v29;
      v30 = a2[2];
      v31 = a2[3];
      a1[2] = v30;
      a1[3] = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 7u:
    case 8u:
    case 0xFu:
    case 0x10u:
    case 0x12u:
    case 0x13u:
    case 0x19u:
    case 0x27u:
    case 0x29u:
    case 0x2Bu:
      v28 = a2[1];
      *a1 = *a2;
      a1[1] = v28;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 9u:
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      v13 = a2[2];
      v14 = a2[3];
      v15 = *((_BYTE *)a2 + 32);
      swift_bridgeObjectRetain();
      sub_1BA8D4E00(v13, v14, v15);
      a1[2] = v13;
      a1[3] = v14;
      *((_BYTE *)a1 + 32) = v15;
      goto LABEL_45;
    case 0xAu:
      v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0xBu:
    case 0xCu:
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0xDu:
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0xEu:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      v20 = a2[2];
      v21 = a2[3];
      v22 = a2[4];
      v23 = *((_BYTE *)a2 + 40);
      swift_bridgeObjectRetain();
      sub_1BAA73684(v20, v21, v22, v23);
      a1[2] = v20;
      a1[3] = v21;
      a1[4] = v22;
      *((_BYTE *)a1 + 40) = v23;
      v24 = a2[6];
      v25 = a2[7];
      v26 = a2[8];
      v27 = *((_BYTE *)a2 + 72);
      sub_1BAA73684(v24, v25, v26, v27);
      a1[6] = v24;
      a1[7] = v25;
      a1[8] = v26;
      *((_BYTE *)a1 + 72) = v27;
      goto LABEL_45;
    case 0x18u:
    case 0x1Bu:
    case 0x26u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0x1Au:
      v32 = *a2;
      v33 = a2[1];
      *a1 = v32;
      a1[1] = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0x1Cu:
      v34 = a2[1];
      *a1 = *a2;
      a1[1] = v34;
      sub_1BAA9CD3C();
      v140 = v35;
      v36 = *(int *)(v35 + 48);
      v37 = (uint64_t *)((char *)a1 + v36);
      v38 = (uint64_t)a2 + v36;
      v39 = *(uint64_t *)((char *)a2 + v36 + 8);
      *v37 = *(uint64_t *)((char *)a2 + v36);
      v37[1] = v39;
      v40 = *(uint64_t *)((char *)a2 + v36 + 24);
      v37[2] = *(uint64_t *)((char *)a2 + v36 + 16);
      v37[3] = v40;
      v41 = *(uint64_t *)((char *)a2 + v36 + 40);
      v37[4] = *(uint64_t *)((char *)a2 + v36 + 32);
      v37[5] = v41;
      v134 = *(uint64_t *)((char *)a2 + v36 + 56);
      v37[6] = *(uint64_t *)((char *)a2 + v36 + 48);
      v37[7] = v134;
      v37[8] = *(uint64_t *)((char *)a2 + v36 + 64);
      v42 = type metadata accessor for FormatSlotDefinition();
      v43 = *(int *)(v42 + 40);
      __dst = (char *)v37 + v43;
      v138 = (int *)v42;
      v133 = (void *)(v38 + v43);
      v44 = sub_1BB86E710();
      v45 = *(_QWORD *)(v44 - 8);
      v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v142 = v46;
      v132 = v45;
      if (v46((char *)v133, 1, v44))
      {
        sub_1BA74E57C();
        memcpy(__dst, v133, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v45 + 16))(__dst, v133, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
      }
      v92 = *(int *)(v140 + 64);
      v93 = (uint64_t *)((char *)a1 + v92);
      v94 = (uint64_t *)((char *)a2 + v92);
      v95 = v94[1];
      *v93 = *v94;
      v93[1] = v95;
      v96 = *(int *)(v140 + 80);
      v97 = (uint64_t *)((char *)a1 + v96);
      v98 = (uint64_t *)((char *)a2 + v96);
      v99 = v98[1];
      *v97 = *v98;
      v97[1] = v99;
      v100 = v98[3];
      v97[2] = v98[2];
      v97[3] = v100;
      v101 = v98[5];
      v97[4] = v98[4];
      v97[5] = v101;
      v102 = v98[7];
      v97[6] = v98[6];
      v97[7] = v102;
      v97[8] = v98[8];
      v103 = v138[10];
      v104 = (char *)v97 + v103;
      v105 = (char *)v98 + v103;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v142(v105, 1, v44))
        goto LABEL_33;
      (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v104, v105, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v104, 0, 1, v44);
      goto LABEL_45;
    case 0x1Du:
      v48 = a2[1];
      *a1 = *a2;
      a1[1] = v48;
      v49 = a2[3];
      a1[2] = a2[2];
      a1[3] = v49;
      v50 = a2[5];
      a1[4] = a2[4];
      a1[5] = v50;
      v51 = a2[7];
      a1[6] = a2[6];
      a1[7] = v51;
      a1[8] = a2[8];
      v52 = type metadata accessor for FormatSlotDefinition();
      v53 = *(int *)(v52 + 40);
      v139 = (char *)a1 + v53;
      v141 = v52;
      v136 = (char *)a2 + v53;
      v54 = sub_1BB86E710();
      v55 = *(_QWORD *)(v54 - 8);
      v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v143 = v56;
      v135 = v55;
      if (v56(v136, 1, v54))
      {
        sub_1BA74E57C();
        memcpy(v139, v136, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v139, v136, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v139, 0, 1, v54);
      }
      sub_1BAA9CAF4();
      v107 = *(int *)(v106 + 48);
      v108 = (uint64_t *)((char *)a1 + v107);
      v109 = (uint64_t *)((char *)a2 + v107);
      v110 = v109[1];
      *v108 = *v109;
      v108[1] = v110;
      v111 = v109[3];
      v108[2] = v109[2];
      v108[3] = v111;
      v112 = v109[5];
      v108[4] = v109[4];
      v108[5] = v112;
      v113 = v109[7];
      v108[6] = v109[6];
      v108[7] = v113;
      v108[8] = v109[8];
      v114 = *(int *)(v141 + 40);
      v104 = (char *)v108 + v114;
      v105 = (char *)v109 + v114;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v143(v105, 1, v54))
        goto LABEL_33;
      (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v104, v105, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v104, 0, 1, v54);
      goto LABEL_45;
    case 0x1Eu:
      v58 = a2[1];
      *a1 = *a2;
      a1[1] = v58;
      v59 = a2[3];
      a1[2] = a2[2];
      a1[3] = v59;
      v60 = a2[4];
      v61 = a2[5];
      v62 = a2[6];
      v63 = a2[7];
      v64 = *((_BYTE *)a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA7261E0(v60, v61, v62, v63, v64);
      a1[4] = v60;
      a1[5] = v61;
      a1[6] = v62;
      a1[7] = v63;
      *((_BYTE *)a1 + 64) = v64;
      goto LABEL_45;
    case 0x1Fu:
    case 0x24u:
      v65 = a2[1];
      *a1 = *a2;
      a1[1] = v65;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0x20u:
      v66 = (void *)*a2;
      v67 = v66;
      *a1 = (uint64_t)v66;
      goto LABEL_45;
    case 0x22u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v68 = a2[1];
      v69 = a2[2];
      a1[1] = v68;
      a1[2] = v69;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0x23u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      sub_1BB17BA80();
      v71 = v70;
      v72 = *(int *)(v70 + 48);
      v73 = (uint64_t *)((char *)a1 + v72);
      v74 = (uint64_t)a2 + v72;
      *v73 = *(uint64_t *)((char *)a2 + v72);
      v75 = *(uint64_t *)((char *)a2 + v72 + 16);
      v73[1] = *(uint64_t *)((char *)a2 + v72 + 8);
      v73[2] = v75;
      v77 = (uint64_t *)((char *)a2 + v72 + 24);
      v76 = *v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v76)
      {
        v78 = *(_QWORD *)(v74 + 32);
        v73[3] = v76;
        v73[4] = v78;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v73 + 3) = *(_OWORD *)v77;
      }
      v144 = type metadata accessor for FormatSlotDefinitionItemSet();
      v116 = *(int *)(v144 + 36);
      v117 = (char *)v73 + v116;
      v118 = (const void *)(v74 + v116);
      v119 = sub_1BB86E710();
      v120 = *(_QWORD *)(v119 - 8);
      v121 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v120 + 48);
      if (v121(v118, 1, v119))
      {
        sub_1BA74E57C();
        memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v120 + 16))(v117, v118, v119);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
      }
      v123 = *(int *)(v71 + 64);
      v124 = (uint64_t *)((char *)a1 + v123);
      v125 = (uint64_t)a2 + v123;
      *v124 = *(uint64_t *)((char *)a2 + v123);
      v126 = *(uint64_t *)((char *)a2 + v123 + 16);
      v124[1] = *(uint64_t *)((char *)a2 + v123 + 8);
      v124[2] = v126;
      v128 = (uint64_t *)((char *)a2 + v123 + 24);
      v127 = *v128;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v127)
      {
        v129 = *(_QWORD *)(v125 + 32);
        v124[3] = v127;
        v124[4] = v129;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v124 + 3) = *(_OWORD *)v128;
      }
      v130 = *(int *)(v144 + 36);
      v104 = (char *)v124 + v130;
      v105 = (char *)(v125 + v130);
      if (v121((const void *)(v125 + v130), 1, v119))
      {
LABEL_33:
        sub_1BA74E57C();
        memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v104, v105, v119);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v104, 0, 1, v119);
      }
      goto LABEL_45;
    case 0x25u:
      v79 = a2[1];
      *a1 = *a2;
      a1[1] = v79;
      v80 = a2[3];
      a1[2] = a2[2];
      a1[3] = v80;
      v81 = a2[4];
      v82 = a2[5];
      a1[4] = v81;
      a1[5] = v82;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0x2Au:
      v83 = *a2;
      v84 = a2[1];
      v85 = *((_BYTE *)a2 + 16);
      sub_1BA987528(v83, v84, v85);
      *a1 = v83;
      a1[1] = v84;
      *((_BYTE *)a1 + 16) = v85;
      goto LABEL_45;
    case 0x2Cu:
      v86 = *a2;
      v87 = a2[1];
      v88 = *((_BYTE *)a2 + 16);
      sub_1BA9ED4DC(*a2, v87, v88);
      *a1 = v86;
      a1[1] = v87;
      *((_BYTE *)a1 + 16) = v88;
      v89 = a2[3];
      v90 = a2[4];
      v91 = *((_BYTE *)a2 + 40);
      sub_1BA895B64(v89, v90, v91);
      a1[3] = v89;
      a1[4] = v90;
      *((_BYTE *)a1 + 40) = v91;
LABEL_45:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *sub_1BB339508(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(const void *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(const void *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  unint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  const void *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(const void *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  const void *v87;
  const void *v88;
  char *__dst;
  int *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  if (a1 != (uint64_t *)a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        v6 = *(void **)(a2 + 16);
        swift_bridgeObjectRetain();
        v7 = v6;
        a1[2] = (uint64_t)v6;
        goto LABEL_46;
      case 4u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 5u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        a1[4] = *(_QWORD *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 6u:
      case 0x11u:
      case 0x14u:
      case 0x15u:
      case 0x16u:
      case 0x17u:
      case 0x21u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 7u:
      case 8u:
      case 0xFu:
      case 0x10u:
      case 0x12u:
      case 0x13u:
      case 0x19u:
      case 0x27u:
      case 0x29u:
      case 0x2Bu:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 9u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        v8 = *(_QWORD *)(a2 + 16);
        v9 = *(_QWORD *)(a2 + 24);
        v10 = *(_BYTE *)(a2 + 32);
        swift_bridgeObjectRetain();
        sub_1BA8D4E00(v8, v9, v10);
        a1[2] = v8;
        a1[3] = v9;
        *((_BYTE *)a1 + 32) = v10;
        goto LABEL_46;
      case 0xAu:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        *((_BYTE *)a1 + 16) = *(_BYTE *)(a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0xBu:
      case 0xCu:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        *((_BYTE *)a1 + 16) = *(_BYTE *)(a2 + 16);
        *((_BYTE *)a1 + 17) = *(_BYTE *)(a2 + 17);
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0xDu:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        *((_BYTE *)a1 + 16) = *(_BYTE *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0xEu:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        v11 = *(_QWORD *)(a2 + 16);
        v12 = *(_QWORD *)(a2 + 24);
        v13 = *(_QWORD *)(a2 + 32);
        v14 = *(_BYTE *)(a2 + 40);
        swift_bridgeObjectRetain();
        sub_1BAA73684(v11, v12, v13, v14);
        a1[2] = v11;
        a1[3] = v12;
        a1[4] = v13;
        *((_BYTE *)a1 + 40) = v14;
        v15 = *(_QWORD *)(a2 + 48);
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(a2 + 64);
        v18 = *(_BYTE *)(a2 + 72);
        sub_1BAA73684(v15, v16, v17, v18);
        a1[6] = v15;
        a1[7] = v16;
        a1[8] = v17;
        *((_BYTE *)a1 + 72) = v18;
        goto LABEL_46;
      case 0x18u:
      case 0x1Bu:
      case 0x26u:
        *a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0x1Au:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0x1Cu:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        sub_1BAA9CD3C();
        v92 = v19;
        v20 = *(int *)(v19 + 48);
        v21 = (uint64_t *)((char *)a1 + v20);
        v22 = a2 + v20;
        *v21 = *(_QWORD *)(a2 + v20);
        v21[1] = *(_QWORD *)(a2 + v20 + 8);
        v21[2] = *(_QWORD *)(a2 + v20 + 16);
        v21[3] = *(_QWORD *)(a2 + v20 + 24);
        v21[4] = *(_QWORD *)(a2 + v20 + 32);
        v21[5] = *(_QWORD *)(a2 + v20 + 40);
        v21[6] = *(_QWORD *)(a2 + v20 + 48);
        v21[7] = *(_QWORD *)(a2 + v20 + 56);
        v21[8] = *(_QWORD *)(a2 + v20 + 64);
        v23 = type metadata accessor for FormatSlotDefinition();
        v24 = *(int *)(v23 + 40);
        __dst = (char *)v21 + v24;
        v90 = (int *)v23;
        v87 = (const void *)(v22 + v24);
        v25 = sub_1BB86E710();
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27(v87, 1, v25))
        {
          sub_1BA74E57C();
          memcpy(__dst, v87, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v26 + 16))(__dst, v87, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
        }
        v58 = *(int *)(v92 + 64);
        v59 = (uint64_t *)((char *)a1 + v58);
        v60 = (_QWORD *)(a2 + v58);
        *v59 = *v60;
        v59[1] = v60[1];
        v61 = *(int *)(v92 + 80);
        v62 = (uint64_t *)((char *)a1 + v61);
        v63 = (_QWORD *)(a2 + v61);
        *v62 = *v63;
        v62[1] = v63[1];
        v62[2] = v63[2];
        v62[3] = v63[3];
        v62[4] = v63[4];
        v62[5] = v63[5];
        v62[6] = v63[6];
        v62[7] = v63[7];
        v62[8] = v63[8];
        v64 = v90[10];
        v65 = (char *)v62 + v64;
        v66 = (char *)v63 + v64;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27(v66, 1, v25))
          goto LABEL_34;
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v65, v66, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v65, 0, 1, v25);
        goto LABEL_46;
      case 0x1Du:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        a1[4] = *(_QWORD *)(a2 + 32);
        a1[5] = *(_QWORD *)(a2 + 40);
        a1[6] = *(_QWORD *)(a2 + 48);
        a1[7] = *(_QWORD *)(a2 + 56);
        a1[8] = *(_QWORD *)(a2 + 64);
        v29 = type metadata accessor for FormatSlotDefinition();
        v30 = *(int *)(v29 + 40);
        v91 = (char *)a1 + v30;
        v93 = v29;
        v88 = (const void *)(a2 + v30);
        v31 = sub_1BB86E710();
        v32 = *(_QWORD *)(v31 - 8);
        v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v33(v88, 1, v31))
        {
          sub_1BA74E57C();
          memcpy(v91, v88, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v32 + 16))(v91, v88, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v91, 0, 1, v31);
        }
        sub_1BAA9CAF4();
        v68 = *(int *)(v67 + 48);
        v69 = (uint64_t *)((char *)a1 + v68);
        v70 = (_QWORD *)(a2 + v68);
        *v69 = *v70;
        v69[1] = v70[1];
        v69[2] = v70[2];
        v69[3] = v70[3];
        v69[4] = v70[4];
        v69[5] = v70[5];
        v69[6] = v70[6];
        v69[7] = v70[7];
        v69[8] = v70[8];
        v71 = *(int *)(v93 + 40);
        v65 = (char *)v69 + v71;
        v66 = (char *)v70 + v71;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v33(v66, 1, v31))
          goto LABEL_34;
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v65, v66, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v65, 0, 1, v31);
        goto LABEL_46;
      case 0x1Eu:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        v35 = *(_QWORD *)(a2 + 32);
        v36 = *(_QWORD *)(a2 + 40);
        v37 = *(_QWORD *)(a2 + 48);
        v38 = *(_QWORD *)(a2 + 56);
        v39 = *(_BYTE *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA7261E0(v35, v36, v37, v38, v39);
        a1[4] = v35;
        a1[5] = v36;
        a1[6] = v37;
        a1[7] = v38;
        *((_BYTE *)a1 + 64) = v39;
        goto LABEL_46;
      case 0x1Fu:
      case 0x24u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0x20u:
        v40 = *(void **)a2;
        v41 = v40;
        *a1 = (uint64_t)v40;
        goto LABEL_46;
      case 0x22u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0x23u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        sub_1BB17BA80();
        v43 = v42;
        v44 = *(int *)(v42 + 48);
        v45 = (char *)a1 + v44;
        v46 = a2 + v44;
        *(_DWORD *)v45 = *(_DWORD *)(a2 + v44);
        *((_DWORD *)v45 + 1) = *(_DWORD *)(a2 + v44 + 4);
        *((_QWORD *)v45 + 1) = *(_QWORD *)(a2 + v44 + 8);
        *((_QWORD *)v45 + 2) = *(_QWORD *)(a2 + v44 + 16);
        v48 = (uint64_t *)(a2 + v44 + 24);
        v47 = *v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v47)
        {
          *((_QWORD *)v45 + 3) = v47;
          *((_QWORD *)v45 + 4) = *(_QWORD *)(v46 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v45 + 24) = *(_OWORD *)v48;
        }
        v94 = type metadata accessor for FormatSlotDefinitionItemSet();
        v73 = *(int *)(v94 + 36);
        v74 = &v45[v73];
        v75 = (const void *)(v46 + v73);
        v76 = sub_1BB86E710();
        v77 = *(_QWORD *)(v76 - 8);
        v78 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v77 + 48);
        if (v78(v75, 1, v76))
        {
          sub_1BA74E57C();
          memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v77 + 16))(v74, v75, v76);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
        }
        v80 = *(int *)(v43 + 64);
        v81 = (char *)a1 + v80;
        v82 = a2 + v80;
        *(_DWORD *)v81 = *(_DWORD *)(a2 + v80);
        *((_DWORD *)v81 + 1) = *(_DWORD *)(a2 + v80 + 4);
        *((_QWORD *)v81 + 1) = *(_QWORD *)(a2 + v80 + 8);
        *((_QWORD *)v81 + 2) = *(_QWORD *)(a2 + v80 + 16);
        v84 = (uint64_t *)(a2 + v80 + 24);
        v83 = *v84;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v83)
        {
          *((_QWORD *)v81 + 3) = v83;
          *((_QWORD *)v81 + 4) = *(_QWORD *)(v82 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v81 + 24) = *(_OWORD *)v84;
        }
        v85 = *(int *)(v94 + 36);
        v65 = &v81[v85];
        v66 = (char *)(v82 + v85);
        if (v78((const void *)(v82 + v85), 1, v76))
        {
LABEL_34:
          sub_1BA74E57C();
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v65, v66, v76);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v65, 0, 1, v76);
        }
        goto LABEL_46;
      case 0x25u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *(_QWORD *)(a2 + 8);
        a1[2] = *(_QWORD *)(a2 + 16);
        a1[3] = *(_QWORD *)(a2 + 24);
        a1[4] = *(_QWORD *)(a2 + 32);
        a1[5] = *(_QWORD *)(a2 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0x2Au:
        v49 = *(_QWORD *)a2;
        v50 = *(_QWORD *)(a2 + 8);
        v51 = *(_BYTE *)(a2 + 16);
        sub_1BA987528(v49, v50, v51);
        *a1 = v49;
        a1[1] = v50;
        *((_BYTE *)a1 + 16) = v51;
        goto LABEL_46;
      case 0x2Cu:
        v52 = *(_QWORD *)a2;
        v53 = *(_QWORD *)(a2 + 8);
        v54 = *(_BYTE *)(a2 + 16);
        sub_1BA9ED4DC(*(_QWORD *)a2, v53, v54);
        *a1 = v52;
        a1[1] = v53;
        *((_BYTE *)a1 + 16) = v54;
        v55 = *(_QWORD *)(a2 + 24);
        v56 = *(_QWORD *)(a2 + 32);
        v57 = *(_BYTE *)(a2 + 40);
        sub_1BA895B64(v55, v56, v57);
        a1[3] = v55;
        a1[4] = v56;
        *((_BYTE *)a1 + 40) = v57;
LABEL_46:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for FormatDerivedDataError()
{
  uint64_t result;

  result = qword_1EF2C16D8;
  if (!qword_1EF2C16D8)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *sub_1BB33A518(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 35:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      sub_1BB17BA80();
      v23 = v22;
      v24 = *(int *)(v22 + 48);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      *(_QWORD *)v25 = *(_QWORD *)((char *)a2 + v24);
      *(_OWORD *)(v25 + 8) = *(_OWORD *)((char *)a2 + v24 + 8);
      *(_OWORD *)(v25 + 24) = *(_OWORD *)((char *)a2 + v24 + 24);
      v27 = type metadata accessor for FormatSlotDefinitionItemSet();
      v28 = *(int *)(v27 + 36);
      v29 = &v25[v28];
      v30 = &v26[v28];
      v18 = sub_1BB86E710();
      v19 = *(_QWORD *)(v18 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v31(v30, 1, v18))
      {
        sub_1BA74E57C();
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v29, v30, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v29, 0, 1, v18);
      }
      v51 = *(int *)(v23 + 64);
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      *(_QWORD *)v52 = *(_QWORD *)v53;
      *(_OWORD *)(v52 + 8) = *(_OWORD *)(v53 + 8);
      *(_OWORD *)(v52 + 24) = *(_OWORD *)(v53 + 24);
      v54 = *(int *)(v27 + 36);
      v49 = &v52[v54];
      v50 = &v53[v54];
      if (v31(&v53[v54], 1, v18))
        goto LABEL_16;
      goto LABEL_20;
    case 29:
      v33 = a2[1];
      *a1 = *a2;
      a1[1] = v33;
      v34 = a2[3];
      a1[2] = a2[2];
      a1[3] = v34;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      v35 = type metadata accessor for FormatSlotDefinition();
      v36 = *(int *)(v35 + 40);
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = sub_1BB86E710();
      v40 = *(_QWORD *)(v39 - 8);
      v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      if (v41(v38, 1, v39))
      {
        sub_1BA74E57C();
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      }
      sub_1BAA9CAF4();
      v57 = *(int *)(v56 + 48);
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      v60 = *((_OWORD *)v59 + 1);
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v60;
      v61 = *((_OWORD *)v59 + 3);
      *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
      *((_OWORD *)v58 + 3) = v61;
      *((_QWORD *)v58 + 8) = *((_QWORD *)v59 + 8);
      v62 = *(int *)(v35 + 40);
      v49 = &v58[v62];
      v50 = &v59[v62];
      if (!v41(&v59[v62], 1, v39))
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v49, v50, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v49, 0, 1, v39);
        goto LABEL_23;
      }
      goto LABEL_16;
    case 28:
      *a1 = *a2;
      sub_1BAA9CD3C();
      v8 = v7;
      v9 = *(int *)(v7 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = *(_OWORD *)((char *)a2 + v9 + 16);
      *(_OWORD *)v10 = *(_OWORD *)((char *)a2 + v9);
      *((_OWORD *)v10 + 1) = v12;
      v13 = *(_OWORD *)((char *)a2 + v9 + 48);
      *((_OWORD *)v10 + 2) = *(_OWORD *)((char *)a2 + v9 + 32);
      *((_OWORD *)v10 + 3) = v13;
      *((_QWORD *)v10 + 8) = *(_QWORD *)((char *)a2 + v9 + 64);
      v14 = type metadata accessor for FormatSlotDefinition();
      v15 = *(int *)(v14 + 40);
      v16 = &v10[v15];
      v17 = &v11[v15];
      v18 = sub_1BB86E710();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v20(v17, 1, v18))
      {
        sub_1BA74E57C();
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v8 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 64));
      v43 = *(int *)(v8 + 80);
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      v47 = *((_OWORD *)v45 + 3);
      *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
      *((_OWORD *)v44 + 3) = v47;
      *((_QWORD *)v44 + 8) = *((_QWORD *)v45 + 8);
      v48 = *(int *)(v14 + 40);
      v49 = &v44[v48];
      v50 = &v45[v48];
      if (v20(&v45[v48], 1, v18))
      {
LABEL_16:
        sub_1BA74E57C();
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_20:
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v49, v50, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v49, 0, 1, v18);
      goto LABEL_23;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1BB33A9BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;

  if (a1 == a2)
    return a1;
  sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataError);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 35:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      sub_1BB17BA80();
      v23 = v22;
      v24 = *(int *)(v22 + 48);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      *(_QWORD *)v25 = *(_QWORD *)((char *)a2 + v24);
      *(_OWORD *)(v25 + 8) = *(_OWORD *)((char *)a2 + v24 + 8);
      *(_OWORD *)(v25 + 24) = *(_OWORD *)((char *)a2 + v24 + 24);
      v27 = type metadata accessor for FormatSlotDefinitionItemSet();
      v28 = *(int *)(v27 + 36);
      v29 = &v25[v28];
      v30 = &v26[v28];
      v18 = sub_1BB86E710();
      v19 = *(_QWORD *)(v18 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v31(v30, 1, v18))
      {
        sub_1BA74E57C();
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v29, v30, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v29, 0, 1, v18);
      }
      v43 = *(int *)(v23 + 64);
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      *(_QWORD *)v44 = *(_QWORD *)v45;
      *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 8);
      *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
      v46 = *(int *)(v27 + 36);
      v47 = &v44[v46];
      v48 = &v45[v46];
      if (!v31(&v45[v46], 1, v18))
        goto LABEL_22;
      goto LABEL_17;
    case 29:
      v33 = a2[1];
      *a1 = *a2;
      a1[1] = v33;
      v34 = a2[3];
      a1[2] = a2[2];
      a1[3] = v34;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      v35 = type metadata accessor for FormatSlotDefinition();
      v36 = *(int *)(v35 + 40);
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = sub_1BB86E710();
      v40 = *(_QWORD *)(v39 - 8);
      v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      if (v41(v38, 1, v39))
      {
        sub_1BA74E57C();
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      }
      sub_1BAA9CAF4();
      v50 = *(int *)(v49 + 48);
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      v53 = *((_OWORD *)v52 + 1);
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *((_OWORD *)v51 + 1) = v53;
      v54 = *((_OWORD *)v52 + 3);
      *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
      *((_OWORD *)v51 + 3) = v54;
      *((_QWORD *)v51 + 8) = *((_QWORD *)v52 + 8);
      v55 = *(int *)(v35 + 40);
      v47 = &v51[v55];
      v48 = &v52[v55];
      if (!v41(&v52[v55], 1, v39))
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v47, v48, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v47, 0, 1, v39);
        goto LABEL_23;
      }
LABEL_17:
      sub_1BA74E57C();
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
LABEL_23:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 28:
      *a1 = *a2;
      sub_1BAA9CD3C();
      v8 = v7;
      v9 = *(int *)(v7 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = *(_OWORD *)((char *)a2 + v9 + 16);
      *(_OWORD *)v10 = *(_OWORD *)((char *)a2 + v9);
      *((_OWORD *)v10 + 1) = v12;
      v13 = *(_OWORD *)((char *)a2 + v9 + 48);
      *((_OWORD *)v10 + 2) = *(_OWORD *)((char *)a2 + v9 + 32);
      *((_OWORD *)v10 + 3) = v13;
      *((_QWORD *)v10 + 8) = *(_QWORD *)((char *)a2 + v9 + 64);
      v14 = type metadata accessor for FormatSlotDefinition();
      v15 = *(int *)(v14 + 40);
      v16 = &v10[v15];
      v17 = &v11[v15];
      v18 = sub_1BB86E710();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v20(v17, 1, v18))
      {
        sub_1BA74E57C();
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v8 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 64));
      v57 = *(int *)(v8 + 80);
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      v60 = *((_OWORD *)v59 + 1);
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v60;
      v61 = *((_OWORD *)v59 + 3);
      *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
      *((_OWORD *)v58 + 3) = v61;
      *((_QWORD *)v58 + 8) = *((_QWORD *)v59 + 8);
      v62 = *(int *)(v14 + 40);
      v47 = &v58[v62];
      v48 = &v59[v62];
      if (!v20(&v59[v62], 1, v18))
      {
LABEL_22:
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v47, v48, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v47, 0, 1, v18);
        goto LABEL_23;
      }
      goto LABEL_17;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1BB33AE78()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  char *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;

  v11 = &unk_1BB909E18;
  v12 = &unk_1BB909E18;
  v13 = &unk_1BB909E18;
  v14 = &unk_1BB909E18;
  v15 = &unk_1BB909E18;
  v16 = &unk_1BB909E30;
  v17 = &unk_1BB909E48;
  v18 = &unk_1BB909E60;
  v19 = &unk_1BB909E60;
  v20 = &unk_1BB909E78;
  v21 = &unk_1BB909E90;
  v22 = &unk_1BB909EA8;
  v23 = &unk_1BB909EA8;
  v24 = &unk_1BB909E48;
  v25 = &unk_1BB909EC0;
  v26 = &unk_1BB909E60;
  v27 = &unk_1BB909E60;
  v28 = &unk_1BB909E48;
  v29 = &unk_1BB909E60;
  v30 = &unk_1BB909E60;
  v31 = &unk_1BB909E48;
  v32 = &unk_1BB909E48;
  v33 = &unk_1BB909E48;
  v34 = &unk_1BB909E48;
  v0 = MEMORY[0x1E0DE9D18];
  v35 = MEMORY[0x1E0DE9D18] + 64;
  v36 = &unk_1BB909E60;
  v37 = &unk_1BB909E60;
  v38 = MEMORY[0x1E0DE9D18] + 64;
  v6 = &unk_1BB909E60;
  result = type metadata accessor for FormatSlotDefinition();
  if (v2 <= 0x3F)
  {
    v7 = *(_QWORD *)(result - 8) + 64;
    v8 = &unk_1BB909E60;
    v9 = v7;
    swift_getTupleTypeLayout();
    v39 = &v10;
    swift_getTupleTypeLayout2();
    v40 = &v5;
    v41 = &unk_1BB909ED8;
    v42 = &unk_1BB909E18;
    v43 = &unk_1BB909EF0;
    v44 = &unk_1BB909E48;
    v45 = &unk_1BB909E18;
    result = type metadata accessor for FormatSlotDefinitionItemSet();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      v46 = &v4;
      v47 = &unk_1BB909E18;
      v48 = &unk_1BB909F20;
      v49 = v0 + 64;
      v50 = &unk_1BB909E60;
      v51 = &unk_1BB909F38;
      v52 = &unk_1BB909E60;
      v53 = &unk_1BB909F50;
      v54 = &unk_1BB909E60;
      v55 = &unk_1BB909F68;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void sub_1BB33B038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for FormatDerivedDataError();
  MEMORY[0x1E0C80A78](v1);
  sub_1BB33D3F0(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BB33B0E0 + 4 * word_1BB909C3C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB33B0E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v3 = (void *)v0[2];
  v4 = sub_1BB33D498(0x70756F7247, 0xE500000000000000, v1, v2, v3);

  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1BB33B984(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA87DD80();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1BB33B9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for FormatSlotDefinitionItemSet();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatDerivedDataError();
  MEMORY[0x1E0C80A78](v4);
  sub_1BB33D3F0(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_1BB33BAD4 + 4 * word_1BB909CA0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB33BAD4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)(v0 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 128) = v2;
  v3 = v2;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2BE000);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC((__int128 *)(v1 - 176), v1 - 120);
    v4 = *(_QWORD *)(v1 - 96);
    v5 = *(_QWORD *)(v1 - 88);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 120), v4);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);

    __swift_destroy_boxed_opaque_existential_1(v1 - 120);
  }
  else
  {
    *(_QWORD *)(v1 - 144) = 0;
    *(_OWORD *)(v1 - 176) = 0u;
    *(_OWORD *)(v1 - 160) = 0u;

    sub_1BA4A2E80(v1 - 176, (uint64_t (*)(_QWORD))sub_1BB33D434);
    return 0;
  }
  return v6;
}

void sub_1BB33D2D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;

  v2 = *(_QWORD *)v0;
  v3 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_BYTE *)(v0 + 40);
  v7 = *(_BYTE *)(v0 + 16);
  *(_QWORD *)(v1 - 120) = 0;
  *(_QWORD *)(v1 - 112) = 0xE000000000000000;
  sub_1BB873CB4();
  v8 = *(_QWORD *)(v1 - 112);
  *(_QWORD *)(v1 - 176) = *(_QWORD *)(v1 - 120);
  *(_QWORD *)(v1 - 168) = v8;
  sub_1BB872AFC("");
  *(_QWORD *)(v1 - 120) = v4;
  *(_QWORD *)(v1 - 112) = v5;
  *(_BYTE *)(v1 - 104) = v6;
  sub_1BB1FBA70();
  sub_1BB872AFC(v9);
  swift_bridgeObjectRelease();
  sub_1BA895B84(v4, v5, v6);
  sub_1BB872AFC("Attempting to enter '");
  sub_1BB160CF0(v2, v3, v7);
  sub_1BB872AFC(v10);
  swift_bridgeObjectRelease();
  sub_1BA865168(v2, v3, v7);
  sub_1BB872AFC(v11);
  JUMPOUT(0x1BB33D3A0);
}

void sub_1BB33D3A8()
{
  JUMPOUT(0x1BB33D2A8);
}

void sub_1BB33D3B8()
{
  JUMPOUT(0x1BB33D2A8);
}

void sub_1BB33D3C8()
{
  JUMPOUT(0x1BB33D2A8);
}

void sub_1BB33D3D8()
{
  JUMPOUT(0x1BB33D3E4);
}

uint64_t sub_1BB33D3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDerivedDataError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BB33D434()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2CE320)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&unk_1EF2BE000);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2CE320);
  }
}

uint64_t sub_1BB33D498(uint64_t a1, uint64_t a2, int a3, int a4, id a5)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  __int128 v15[2];
  uint64_t v16;
  id v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v17 = a5;
  v7 = a5;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2BE000);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v15, (uint64_t)v18);
    v8 = v19;
    v9 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    v16 = 0;
    memset(v15, 0, sizeof(v15));
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BB33D434);
    v18[0] = a1;
    v18[1] = a2;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v11);
    sub_1BB872AFC(v12);
    sub_1BB872AFC(v13);
    return v18[0];
  }
  return v10;
}

unint64_t _s8NewsFeed14FormatHBoxNodeC4sizeAA0C4SizeOvg_0@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 64);
  *a1 = v3;
  return sub_1BA71CA6C(v3);
}

uint64_t _s8NewsFeed14FormatHBoxNodeC11adjustmentsSayAA0C10AdjustmentOGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatHBoxNode.reversed.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t _s8NewsFeed14FormatHBoxNodeC4nameSSSgvg_0()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s8NewsFeed14FormatHBoxNodeC11descriptionSSSgvg_0()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*FormatHBoxNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t (*FormatHBoxNode.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatHBoxNode.description.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatHBoxNode.size.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatHBoxNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatHBoxNode.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatHBoxNode.reversed.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 104) = a1;
  return result;
}

uint64_t (*FormatHBoxNode.reversed.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatHBoxNode.__allocating_init(identifier:name:description:size:resize:adjustments:children:reversed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v17;

  v17 = swift_allocObject();
  FormatHBoxNode.init(identifier:name:description:size:resize:adjustments:children:reversed:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  return v17;
}

uint64_t FormatHBoxNode.__deallocating_deinit()
{
  FormatHBoxNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB33DA08(uint64_t *a1, uint64_t *a2)
{
  return static FormatHBoxNode.== infix(_:_:)(*a1, *a2);
}

uint64_t (*FormatVBoxNode.identifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed14FormatHBoxNodeC4nameSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVBoxNode.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed14FormatHBoxNodeC11descriptionSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVBoxNode.description.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BB33DB74(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v3 + 64) = v2;
  sub_1BA71CA6C(v2);
  return sub_1BA719718(v4);
}

unint64_t _s8NewsFeed14FormatHBoxNodeC4sizeAA0C4SizeOvs_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 64) = v2;
  return sub_1BA719718(v3);
}

uint64_t (*FormatVBoxNode.size.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed14FormatHBoxNodeC6resizeAA0c3BoxE6ResizeVSgvg_0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 80);
  *a1 = *(_QWORD *)(v1 + 72);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed14FormatHBoxNodeC11adjustmentsSayAA0C10AdjustmentOGvs_0(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVBoxNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatVBoxNode.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*FormatVBoxNode.reversed.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed14FormatHBoxNodeCfd_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BB33DDB4(uint64_t *a1, uint64_t *a2)
{
  return static FormatVBoxNode.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatBoxNodeResize.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FormatBoxNodeResize.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BB874398();
}

uint64_t sub_1BB33DE1C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF7516C(&qword_1EF2C1710, type metadata accessor for FormatHBoxNode, (uint64_t)&protocol conformance descriptor for FormatHBoxNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB33DE58(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAF7516C(&qword_1ED3BCE88, type metadata accessor for FormatHBoxNode, (uint64_t)&protocol conformance descriptor for FormatHBoxNode);
  a1[2] = sub_1BAF7516C(&qword_1ED39F920, type metadata accessor for FormatHBoxNode, (uint64_t)&protocol conformance descriptor for FormatHBoxNode);
  result = sub_1BAF7516C(&qword_1EF2C1718, type metadata accessor for FormatHBoxNode, (uint64_t)&protocol conformance descriptor for FormatHBoxNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB33DED0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF7516C(&qword_1EF2C1720, type metadata accessor for FormatHBoxNode, (uint64_t)&protocol conformance descriptor for FormatHBoxNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB33DF0C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF7516C(&qword_1EF2C1728, type metadata accessor for FormatVBoxNode, (uint64_t)&protocol conformance descriptor for FormatVBoxNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB33DF48(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAF7516C(&qword_1ED3BD270, type metadata accessor for FormatVBoxNode, (uint64_t)&protocol conformance descriptor for FormatVBoxNode);
  a1[2] = sub_1BAF7516C(&qword_1ED39F948, type metadata accessor for FormatVBoxNode, (uint64_t)&protocol conformance descriptor for FormatVBoxNode);
  result = sub_1BAF7516C(&qword_1EF2C1730, type metadata accessor for FormatVBoxNode, (uint64_t)&protocol conformance descriptor for FormatVBoxNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB33DFC0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF7516C(&qword_1EF2C1738, type metadata accessor for FormatVBoxNode, (uint64_t)&protocol conformance descriptor for FormatVBoxNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB33DFFC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB33E020();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB33E020()
{
  unint64_t result;

  result = qword_1EF2C1740;
  if (!qword_1EF2C1740)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBoxNodeResize, &type metadata for FormatBoxNodeResize);
    atomic_store(result, (unint64_t *)&qword_1EF2C1740);
  }
  return result;
}

unint64_t sub_1BB33E064(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA719774();
  a1[2] = sub_1BAEE9304();
  result = sub_1BB33E098();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB33E098()
{
  unint64_t result;

  result = qword_1EF2C1748;
  if (!qword_1EF2C1748)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBoxNodeResize, &type metadata for FormatBoxNodeResize);
    atomic_store(result, (unint64_t *)&qword_1EF2C1748);
  }
  return result;
}

uint64_t sub_1BB33E0DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBoxNodeResize.init(from:)(a1, a2);
}

uint64_t sub_1BB33E0F0(_QWORD *a1)
{
  return FormatBoxNodeResize.encode(to:)(a1);
}

uint64_t sub_1BB33E108(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA8E0198(a1, a2);
}

uint64_t sub_1BB33E120(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA89CB48(a1, a2);
}

uint64_t sub_1BB33E138(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA89CC78(a1, a2);
}

unint64_t sub_1BB33E150(unint64_t *a1, uint64_t *a2)
{
  return sub_1BB33DB74(a1, a2);
}

uint64_t sub_1BB33E168(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA89D0C4(a1, a2);
}

uint64_t sub_1BB33E180(uint64_t *a1, uint64_t *a2)
{
  return sub_1BAB165CC(a1, a2);
}

uint64_t sub_1BB33E1A0(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA8E0198(a1, a2);
}

uint64_t keypath_get_1Tm_3@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB33E200(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA89CB48(a1, a2);
}

uint64_t keypath_get_3Tm_0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 56);
  *a2 = *(_QWORD *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB33E260(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA89CC78(a1, a2);
}

unint64_t keypath_get_5Tm_0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 64);
  *a2 = v4;
  return sub_1BA71CA6C(v4);
}

unint64_t sub_1BB33E2C0(unint64_t *a1, uint64_t *a2)
{
  return sub_1BB33DB74(a1, a2);
}

uint64_t keypath_get_7Tm_0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB33E320(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA89D0C4(a1, a2);
}

uint64_t sub_1BB33E338(uint64_t *a1, uint64_t *a2)
{
  return sub_1BAB165CC(a1, a2);
}

uint64_t keypath_get_11Tm_0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 104);
  return result;
}

uint64_t keypath_set_12Tm(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 104) = v2;
  return result;
}

uint64_t method lookup function for FormatHBoxNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatHBoxNode.__allocating_init(identifier:name:description:size:resize:adjustments:children:reversed:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t method lookup function for FormatVBoxNode()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for FormatBoxNodeResize()
{
  return &type metadata for FormatBoxNodeResize;
}

uint64_t dispatch thunk of FormatVBoxNode.__allocating_init(identifier:name:description:size:resize:adjustments:children:reversed:)()
{
  return dispatch thunk of FormatHBoxNode.__allocating_init(identifier:name:description:size:resize:adjustments:children:reversed:)();
}

uint64_t FormatVBoxNode.__allocating_init(identifier:name:description:size:resize:adjustments:children:reversed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11)
{
  return FormatHBoxNode.__allocating_init(identifier:name:description:size:resize:adjustments:children:reversed:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t FeedLayoutStylerFactory.styler()@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t result;
  _OWORD v14[4];
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[3];

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v4 + 24))(v19, v3, v4);
  sub_1BA4C010C((uint64_t)(v1 + 7), (uint64_t)&v16);
  v5 = type metadata accessor for CoverIssueViewStyler();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0x4012000000000000;
  v7 = v19[1];
  *(_OWORD *)(v6 + 24) = v19[0];
  *(_OWORD *)(v6 + 40) = v7;
  *(_OWORD *)(v6 + 56) = v19[2];
  v8 = v17;
  v9 = v18;
  __swift_project_boxed_opaque_existential_1(&v16, v17);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v9 + 40))(v14, v8, v9);
  v10 = v15;
  v11 = v14[1];
  *(_OWORD *)(v6 + 72) = v14[0];
  *(_OWORD *)(v6 + 88) = v11;
  v12 = v14[3];
  *(_OWORD *)(v6 + 104) = v14[2];
  *(_OWORD *)(v6 + 120) = v12;
  *(_QWORD *)(v6 + 136) = v10;
  result = sub_1BA4CECCC(&v16, v6 + 144);
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1E72F37D8;
  *a1 = v6;
  return result;
}

{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t result;
  _OWORD v14[4];
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[3];

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v4 + 24))(v19, v3, v4);
  sub_1BA4C010C((uint64_t)(v1 + 7), (uint64_t)&v16);
  v5 = type metadata accessor for CoverChannelViewStyler();
  v6 = swift_allocObject();
  v7 = v19[1];
  *(_OWORD *)(v6 + 16) = v19[0];
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = v19[2];
  v8 = v17;
  v9 = v18;
  __swift_project_boxed_opaque_existential_1(&v16, v17);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v9 + 40))(v14, v8, v9);
  v10 = v15;
  v11 = v14[1];
  *(_OWORD *)(v6 + 64) = v14[0];
  *(_OWORD *)(v6 + 80) = v11;
  v12 = v14[3];
  *(_OWORD *)(v6 + 96) = v14[2];
  *(_OWORD *)(v6 + 112) = v12;
  *(_QWORD *)(v6 + 128) = v10;
  result = sub_1BA4CECCC(&v16, v6 + 136);
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1E728E248;
  *a1 = v6;
  return result;
}

uint64_t FeedLayoutStylerFactory.__allocating_init(fontBookProvider:colorPaletteProvider:scaleFactor:)(__int128 *a1, __int128 *a2, double a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_1BA4CECCC(a1, v6 + 16);
  sub_1BA4CECCC(a2, v6 + 56);
  *(double *)(v6 + 96) = a3;
  return v6;
}

uint64_t sub_1BB33E5BC@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 16))(&v14, v3, v4);
  sub_1BA4C010C((uint64_t)(v1 + 7), (uint64_t)&v11);
  v5 = type metadata accessor for GapOfflineViewStyler();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = v14;
  v7 = v12;
  v8 = v13;
  __swift_project_boxed_opaque_existential_1(&v11, v12);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v8 + 24))(&v10, v7, v8);
  *(_OWORD *)(v6 + 32) = v10;
  result = sub_1BA4CECCC(&v11, v6 + 48);
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1E7318D60;
  *a1 = v6;
  return result;
}

uint64_t FeedLayoutStylerFactory.init(fontBookProvider:colorPaletteProvider:scaleFactor:)(__int128 *a1, __int128 *a2, double a3)
{
  uint64_t v3;

  sub_1BA4CECCC(a1, v3 + 16);
  sub_1BA4CECCC(a2, v3 + 56);
  *(double *)(v3 + 96) = a3;
  return v3;
}

uint64_t FeedLayoutStylerFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t method lookup function for FeedLayoutStylerFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedLayoutStylerFactory.__allocating_init(fontBookProvider:colorPaletteProvider:scaleFactor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t static SharingPuzzleActivity.== infix(_:_:)()
{
  return 1;
}

uint64_t SharingPuzzleActivity.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t SharingPuzzleActivity.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

BOOL static SharingPuzzleTypeActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SharingPuzzleTypeActivity.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t SharingPuzzleTypeActivity.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB33E8F8()
{
  unint64_t result;

  result = qword_1EF2C1750;
  if (!qword_1EF2C1750)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SharingPuzzleActivity, &type metadata for SharingPuzzleActivity);
    atomic_store(result, (unint64_t *)&qword_1EF2C1750);
  }
  return result;
}

unint64_t sub_1BB33E940()
{
  unint64_t result;

  result = qword_1EF2C1758;
  if (!qword_1EF2C1758)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SharingPuzzleTypeActivity, &type metadata for SharingPuzzleTypeActivity);
    atomic_store(result, (unint64_t *)&qword_1EF2C1758);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SharingPuzzleActivity(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB33E9C4 + 4 * byte_1BB90A3C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB33E9E4 + 4 * byte_1BB90A3C5[v4]))();
}

_BYTE *sub_1BB33E9C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB33E9E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB33E9EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB33E9F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB33E9FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB33EA04(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t storeEnumTagSinglePayload for SharingPuzzleTypeActivity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB33EA5C + 4 * byte_1BB90A3CF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB33EA90 + 4 * byte_1BB90A3CA[v4]))();
}

uint64_t sub_1BB33EA90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB33EA98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB33EAA0);
  return result;
}

uint64_t sub_1BB33EAAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB33EAB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB33EAB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB33EAC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharingPuzzleTypeActivity()
{
  return &type metadata for SharingPuzzleTypeActivity;
}

id sub_1BB33EADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = objc_msgSend(*(id *)(v4 + 16), sel_subscribedTagIDs);
  if (result)
  {
    v10 = result;
    v11 = sub_1BB872DB4();

    v12 = sub_1BA6E43EC(v11);
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(a3, sel_identifier);
    v14 = sub_1BB8729A0();
    v16 = v15;

    LOBYTE(v13) = sub_1BA761FE4(v14, v16, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(a4 + 80) = xmmword_1BB87FC90;
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 112) = 0u;
    *(_OWORD *)(a4 + 128) = 0u;
    *(_BYTE *)(a4 + 144) = 0;
    *(_QWORD *)a4 = a1;
    *(_QWORD *)(a4 + 8) = a2;
    *(_QWORD *)(a4 + 16) = a3;
    *(_BYTE *)(a4 + 24) = 0;
    *(_QWORD *)(a4 + 48) = 0;
    *(_QWORD *)(a4 + 56) = 0xE000000000000000;
    *(_QWORD *)(a4 + 32) = 0;
    *(_BYTE *)(a4 + 40) = 0;
    v17 = MEMORY[0x1E0DEE9E8];
    *(_QWORD *)(a4 + 64) = v13 & 1;
    *(_QWORD *)(a4 + 72) = v17;
    swift_bridgeObjectRetain();
    return (id)swift_unknownObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1BB33EC08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  double result;

  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1BB872970();
  LODWORD(v7) = objc_msgSend(v7, sel_isPuzzleTypeIdentifier_, v8);

  if ((_DWORD)v7)
  {
    v9 = *(void **)(v3 + 32);
    v10 = (void *)sub_1BB872970();
    v11 = objc_msgSend(v9, sel_cachedPuzzleTypeForID_, v10);

    if (!v11)
    {
      v12 = (void *)sub_1BB872970();
      v13 = objc_msgSend(v9, sel_cachedPuzzleTypeForID_, v12);
      goto LABEL_6;
    }
LABEL_7:
    swift_unknownObjectRetain();
    sub_1BB33EADC(a1, a2, v11, a3);
    swift_unknownObjectRelease_n();
    return result;
  }
  v14 = *(void **)(v3 + 24);
  v15 = (void *)sub_1BB872970();
  v11 = objc_msgSend(v14, sel_fastCachedTagForID_, v15);

  if (v11)
    goto LABEL_7;
  v12 = (void *)sub_1BB872970();
  v13 = objc_msgSend(v14, sel_slowCachedTagForID_, v12);
LABEL_6:
  v11 = v13;

  if (v11)
    goto LABEL_7;
  *(_BYTE *)(a3 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

uint64_t sub_1BB33EDB4()
{
  id *v0;

  return swift_deallocClassInstance();
}

uint64_t FeedGroupClusterOrderingMode.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C616E6F73726570;
  if (*v0 != 1)
    v1 = 0x6669737265766964;
  if (*v0)
    return v1;
  else
    return 0x6C616369706F74;
}

uint64_t sub_1BB33EE54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB804CA0(*a1, *a2);
}

unint64_t sub_1BB33EE64()
{
  unint64_t result;

  result = qword_1EF2C1760;
  if (!qword_1EF2C1760)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupClusterOrderingMode, &type metadata for FeedGroupClusterOrderingMode);
    atomic_store(result, (unint64_t *)&qword_1EF2C1760);
  }
  return result;
}

uint64_t sub_1BB33EEA8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB33EF58()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB33EFE4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB33F090(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xEC00000064657A69;
  v5 = 0x6C616E6F73726570;
  if (v2 != 1)
  {
    v5 = 0x6669737265766964;
    v4 = 0xEB00000000646569;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6C616369706F74;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB33F100()
{
  sub_1BA8396C4();
  return sub_1BB872D0C();
}

uint64_t SharingModule.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SharingModule.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t SharingModule.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SharingModule.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id _s8NewsFeed13SharingModuleC20createViewController3forSo06UIViewG0CAA0C6IntentV_tF_0(__int128 *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  __int128 v13;
  _QWORD aBlock[6];

  v1 = *((_QWORD *)a1 + 2);
  v13 = *a1;
  v2 = *(void **)a1;
  v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_activityItems);
  sub_1BB872DB4();

  v4 = objc_msgSend(v2, sel_activities);
  sub_1BB33F3C0();
  sub_1BB872DB4();

  v5 = objc_allocWithZone(MEMORY[0x1E0CEA2D8]);
  v6 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_initWithActivityItems_applicationActivities_, v6, v7);

  v9 = objc_msgSend(v2, sel_excludedActivityTypes);
  objc_msgSend(v8, sel_setExcludedActivityTypes_, v9);

  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v13;
  *(_QWORD *)(v10 + 32) = v1;
  aBlock[4] = sub_1BB33F428;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BAFB3BF0;
  aBlock[3] = &block_descriptor_65;
  v11 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_setCompletionWithItemsHandler_, v11);
  swift_unknownObjectRelease();
  _Block_release(v11);
  return v8;
}

uint64_t dispatch thunk of SharingModuleType.createViewController(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for SharingModule()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingModule()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingModule.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

unint64_t sub_1BB33F3C0()
{
  unint64_t result;

  result = qword_1EF2C1800;
  if (!qword_1EF2C1800)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2C1800);
  }
  return result;
}

uint64_t sub_1BB33F3FC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB33F428(void *a1)
{
  uint64_t v1;
  void (*v2)(void);
  id v3;

  if (a1)
  {
    v2 = *(void (**)(void))(v1 + 24);
    v3 = a1;
    v2();

  }
}

uint64_t sub_1BB33F470()
{
  void *v0;
  char v1;
  char v2;

  v0 = (void *)sub_1BB86D75C();
  sub_1BB3B5A34();
  v2 = v1;

  return v2 & 1;
}

uint64_t static FormatContentSizeCategoryExpression.== infix(_:_:)(char *a1)
{
  char v1;
  char v3;

  v3 = *a1;
  _s8NewsFeed25FormatContentSizeCategoryO2eeoiySbAC_ACtFZ_0((uint64_t)&v3);
  return v1 & 1;
}

uint64_t sub_1BB33F4F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSizeCategoryExpression.init(from:)(a1, a2);
}

uint64_t sub_1BB33F50C(_QWORD *a1)
{
  return FormatContentSizeCategoryExpression.encode(to:)(a1);
}

uint64_t sub_1BB33F520(char *a1)
{
  char v1;
  char v3;

  v3 = *a1;
  _s8NewsFeed25FormatContentSizeCategoryO2eeoiySbAC_ACtFZ_0((uint64_t)&v3);
  return v1 & 1;
}

unint64_t sub_1BB33F558(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB33F57C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB33F57C()
{
  unint64_t result;

  result = qword_1EF2C1808;
  if (!qword_1EF2C1808)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategoryExpression, &type metadata for FormatContentSizeCategoryExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C1808);
  }
  return result;
}

unint64_t sub_1BB33F5C0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8FC70();
  a1[2] = sub_1BAEF3990();
  result = sub_1BB33F5F4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB33F5F4()
{
  unint64_t result;

  result = qword_1EF2C1810;
  if (!qword_1EF2C1810)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategoryExpression, &type metadata for FormatContentSizeCategoryExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C1810);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatContentSizeCategory(unsigned __int8 *a1, int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 == 1)
    goto LABEL_17;
  if ((a2 + 254) >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 254) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 254;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 254;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 254;
  }
LABEL_17:
  v6 = *a1;
  if (v6 <= 0xDF)
    v7 = -1;
  else
    v7 = (v6 ^ 0xE0) >> 5;
  return v7 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatContentSizeCategoryExpression(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 254 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 254) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 1)
    return ((uint64_t (*)(void))((char *)&loc_1BB33F71C + 4 * byte_1BB90A695[v4]))();
  *a1 = a2 - 2;
  return ((uint64_t (*)(void))((char *)sub_1BB33F750 + 4 * byte_1BB90A690[v4]))();
}

uint64_t sub_1BB33F750(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB33F758(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB33F760);
  return result;
}

uint64_t sub_1BB33F76C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB33F774);
  *(_BYTE *)result = -32;
  return result;
}

uint64_t sub_1BB33F778(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB33F780(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSizeCategoryExpression()
{
  return &type metadata for FormatContentSizeCategoryExpression;
}

BOOL static Heading.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Heading.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t Heading.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB33F820()
{
  unint64_t result;

  result = qword_1EF2C1818;
  if (!qword_1EF2C1818)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for Heading, &type metadata for Heading);
    atomic_store(result, (unint64_t *)&qword_1EF2C1818);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Heading(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB33F8B0 + 4 * byte_1BB90A789[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB33F8E4 + 4 * asc_1BB90A784[v4]))();
}

uint64_t sub_1BB33F8E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB33F8EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB33F8F4);
  return result;
}

uint64_t sub_1BB33F900(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB33F908);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB33F90C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB33F914(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Heading()
{
  return &type metadata for Heading;
}

ValueMetadata *type metadata accessor for Format()
{
  return &type metadata for Format;
}

uint64_t sub_1BB33F940(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[4];
  uint64_t v17;

  v6 = sub_1BB86F850();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1BA89993C(a1 + 16, (uint64_t)&v14);
  if (v15)
  {
    sub_1BA4CECCC(&v14, (uint64_t)v16);
    v17 = v6;
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    sub_1BB86F838();
    v10 = sub_1BB870894();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
    v11 = v10 ^ 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    sub_1BA8999A0((uint64_t)&v14);
    v11 = 0;
  }
  return LayeredMediaViewRenderer.render(view:renderedViewModel:forceAsync:)(a2, *(_QWORD *)(a3 + 24), v11 & 1);
}

void sub_1BB33FA9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD aBlock[3];
  void *v15;
  uint64_t (*v16)();
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  v5 = sub_1BB86F850();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1BA89993C(a2 + 16, (uint64_t)&v18);
  if (v19)
  {
    sub_1BA4CECCC(&v18, (uint64_t)aBlock);
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v15);
    sub_1BB86F844();
    v9 = sub_1BB870894();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    if ((v9 & 1) == 0)
    {
      sub_1BB8736E4();
      return;
    }
  }
  else
  {
    sub_1BA8999A0((uint64_t)&v18);
  }
  v10 = (void *)objc_opt_self();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  v16 = sub_1BB34015C;
  v17 = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  v15 = &block_descriptor_66;
  v12 = _Block_copy(aBlock);
  v13 = a3;
  swift_release();
  objc_msgSend(v10, sel_animateWithDuration_animations_, v12, 0.15);
  _Block_release(v12);
}

uint64_t sub_1BB33FC5C()
{
  uint64_t v0;

  sub_1BA8999A0(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB33FC88(uint64_t a1, char *a2, uint64_t a3, __int128 *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  unint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  __int128 v56;
  __int128 v57;
  char v58;

  v10 = *v5;
  v11 = a4[1];
  v56 = *a4;
  v57 = v11;
  v58 = *((_BYTE *)a4 + 32);
  v13 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v14 = &a2[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_identifier];
  *(_QWORD *)v14 = v13;
  *((_QWORD *)v14 + 1) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BB8736F0();
  objc_msgSend(a2, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a1 + 120));
  result = sub_1BB6B52CC(*(_QWORD *)(*((_QWORD *)&v57 + 1) + 16));
  if ((result & 1) == 0)
    return result;
  v51 = a5;
  v16 = objc_allocWithZone((Class)type metadata accessor for LayeredMediaView(0));
  v17 = swift_retain();
  v18 = sub_1BB6326D0(v17);
  sub_1BB87372C();
  objc_msgSend(a2, sel_bounds);
  sub_1BB8736F0();
  sub_1BB8736E4();
  objc_msgSend(v18, sel_setAccessibilityIgnoresInvertColors_, 1);
  sub_1BB6B53BC(v18);
  v19 = *(_QWORD *)(a1 + 152);
  v50 = v10;
  v52 = a3;
  if (v19)
  {
    v20 = *(_QWORD *)(v19 + 80);
    v21 = *(_QWORD *)(v19 + 88);
    v22 = *(_BYTE *)(v19 + 96);
    sub_1BA6E6C54(v20, v21, v22);
  }
  else
  {
    v20 = 0;
    v21 = 0;
    v22 = -2;
  }
  v23 = objc_msgSend(a2, sel_layer, v50);
  objc_msgSend(a2, sel_bounds);
  v53 = v20;
  v54 = v21;
  v55 = v22;
  sub_1BA6787C4(v23, (uint64_t)&v53, v24, v25, v26, v27);

  sub_1BA6E6CC4(v20, v21, v22);
  if (v19)
  {
    v28 = *(_QWORD *)(v19 + 80);
    v29 = *(_QWORD *)(v19 + 88);
    v30 = *(_BYTE *)(v19 + 96);
    sub_1BA6E6C54(v28, v29, v30);
  }
  else
  {
    v28 = 0;
    v29 = 0;
    v30 = -2;
  }
  v31 = objc_msgSend(v18, sel_layer);
  objc_msgSend(v18, sel_bounds);
  v53 = v28;
  v54 = v29;
  v55 = v30;
  sub_1BA6787C4(v31, (uint64_t)&v53, v32, v33, v34, v35);

  sub_1BA6E6CC4(v28, v29, v30);
  if (!v19 || (v36 = *(_QWORD *)(v19 + 64), v36 >> 61) || (v36 & 0xF000000000000007) == 0xF000000000000007)
  {
    v40 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    sub_1BB873738();

    v39 = *(_QWORD *)(a1 + 144);
    if (!v19)
    {
      v42 = 0;
      v43 = 0;
      v41 = 0;
      v44 = -2;
      goto LABEL_15;
    }
  }
  else
  {
    v53 = *(_QWORD *)(v36 + 16);
    sub_1BA6E6C68(v36);
    swift_retain();
    FormatColor.color.getter();
    v38 = v37;
    sub_1BB873738();
    swift_release();

    sub_1BA6E6CD8(v36);
    v39 = *(_QWORD *)(a1 + 144);
  }
  v41 = *(_QWORD *)(v19 + 72);
  v42 = *(_QWORD *)(v19 + 80);
  v43 = *(_QWORD *)(v19 + 88);
  v44 = *(_BYTE *)(v19 + 96);
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v42, v43, v44);
LABEL_15:
  v45 = objc_msgSend(a2, sel_layer);
  v53 = v42;
  v54 = v43;
  v55 = v44;
  sub_1BA67832C(v39, v45, v51, v41, &v53);

  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v42, v43, v44);
  if (v19)
  {
    v46 = *(_QWORD *)(v19 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    v46 = 0;
  }
  v53 = v46;
  sub_1BA6786EC(v39, a2, &v53, v52);
  v47 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v47);
  sub_1BB86EC14();
  v48 = (void *)sub_1BB86DE94();
  *(_QWORD *)(swift_allocObject() + 16) = v18;
  v49 = v18;
  sub_1BB86E98C();

  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1BB340104()
{
  uint64_t v0;

  return sub_1BB33F940(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BB340120()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BB340144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BB33FA9C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1BB34015C()
{
  return sub_1BB8736E4();
}

ValueMetadata *type metadata accessor for FormatStateViewNodeData()
{
  return &type metadata for FormatStateViewNodeData;
}

uint64_t FormatImageNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

unint64_t FormatImageNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 88);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

uint64_t FormatImageNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatImageNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 80);
}

uint64_t FormatImageNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t FormatImageNode.shouldCancelContextMenu.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t FormatImageNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNode.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatImageNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t FormatImageNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatImageNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatImageNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatImageNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatImageNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatImageNode.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatImageNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatImageNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t FormatImageNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 88) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatImageNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatImageNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatImageNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatImageNode.shouldCancelContextMenu.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 97) = a1;
  return result;
}

uint64_t (*FormatImageNode.shouldCancelContextMenu.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatImageNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 112);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 104);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatImageNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BB340720(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 128) = v3;
  *(_QWORD *)(v4 + 136) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatImageNode.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNode.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatImageNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:shouldCancelContextMenu:accessibilityRole:selectors:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t *a10, char a11, char a12, uint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v19;

  v19 = swift_allocObject();
  FormatImageNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:shouldCancelContextMenu:accessibilityRole:selectors:name:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  return v19;
}

uint64_t FormatImageNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatImageNode.__deallocating_deinit()
{
  FormatImageNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB34094C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C1820, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNode, (uint64_t)&protocol conformance descriptor for FormatImageNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB340988(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3BD6C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNode, (uint64_t)&protocol conformance descriptor for FormatImageNode);
  a1[2] = sub_1BA50AD30(&qword_1ED39FA40, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNode, (uint64_t)&protocol conformance descriptor for FormatImageNode);
  result = sub_1BA50AD30(&qword_1EF2C1828, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNode, (uint64_t)&protocol conformance descriptor for FormatImageNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB340A00(_QWORD *a1, _QWORD *a2)
{
  return static FormatImageNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BB340A0C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C1830, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNode, (uint64_t)&protocol conformance descriptor for FormatImageNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB340A48@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB340A94@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB340AE0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return result;
}

uint64_t sub_1BB340B24(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 80) = v2;
  return result;
}

unint64_t sub_1BB340B64@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 88);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BB340BB0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 96);
  return result;
}

uint64_t sub_1BB340BF4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 96) = v2;
  return result;
}

uint64_t sub_1BB340C34@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 97);
  return result;
}

uint64_t sub_1BB340C78(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 97) = v2;
  return result;
}

uint64_t sub_1BB340CB8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB340D04@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 136);
  *a2 = *(_QWORD *)(v3 + 128);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatImageNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatImageNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:shouldCancelContextMenu:accessibilityRole:selectors:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1BB340D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1BB340E40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t FeedDescriptor.init(feedDescriptor:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

id FeedDescriptor.feedDescriptor.getter()
{
  id *v0;

  return *v0;
}

id FeedDescriptor.groupItem.getter@<X0>(id *a1@<X8>)
{
  id *v1;
  id v3;

  v3 = *v1;
  *a1 = *v1;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  return v3;
}

id sub_1BB340EC0@<X0>(id *a1@<X8>)
{
  id *v1;
  id v3;

  v3 = *v1;
  *a1 = *v1;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  return v3;
}

_QWORD *sub_1BB340F0C()
{
  void **v0;
  void *v1;
  uint64_t ObjectType;
  _QWORD *v3;
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *v0;
  FCFeedDescriptor.feedTag.getter();
  ObjectType = swift_getObjectType();
  v3 = sub_1BA781D28(0x2D64656566, 0xE500000000000000, ObjectType);
  swift_unknownObjectRelease();
  v4 = objc_msgSend(v1, sel_alternativeFeedDescriptor);
  if (v4)
  {
    v5 = v4;
    FCFeedDescriptor.feedTag.getter();
    v6 = swift_getObjectType();
    v7 = sub_1BA781D28(0x646565662D746C61, 0xE90000000000002DLL, v6);
    swift_unknownObjectRelease();
    sub_1BA6E9BD8((uint64_t)v7);

  }
  return v3;
}

ValueMetadata *type metadata accessor for FeedDescriptor()
{
  return &type metadata for FeedDescriptor;
}

uint64_t sub_1BB340FFC(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0)
    return a2;
  __break(1u);
  return result;
}

uint64_t sub_1BB34103C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v5 = a5 >> 1;
  v6 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = v6 - result;
  if (__OFSUB__(v6, result))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v7 < 1)
  {
    v7 = 0;
  }
  else if ((v6 & 0x8000000000000000) == 0)
  {
    v8 = a5 >> 1;
    if (v6 < v7)
    {
LABEL_10:
      if (v8 >= a4)
      {
        if (v5 >= a4)
        {
          if (v5 >= v8)
          {
            if ((v8 & 0x8000000000000000) == 0)
              return a2;
            goto LABEL_21;
          }
LABEL_20:
          __break(1u);
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  v8 = a4 + v7;
  if (!__OFADD__(a4, v7))
    goto LABEL_10;
LABEL_22:
  __break(1u);
  return result;
}

uint64_t FeedItemIdentifier.init(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1BA7114A0();
  v6 = (_QWORD *)sub_1BB873B4C();
  v7 = (uint64_t)v6;
  v8 = v6[2];
  if (!v8)
  {
    MEMORY[0x1BCCE4378](0x7261696C69787561, 0xE900000000000079);
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_18:
    result = swift_bridgeObjectRelease();
    v23 = 0;
    v24 = 0;
    v25 = 0;
LABEL_23:
    *(_QWORD *)a3 = a1;
    *(_QWORD *)(a3 + 8) = a2;
    *(_QWORD *)(a3 + 16) = v23;
    *(_QWORD *)(a3 + 24) = v24;
    *(_BYTE *)(a3 + 32) = v25;
    return result;
  }
  v34 = a2;
  v11 = v6[4];
  v9 = v6[5];
  v10 = v6 + 4;
  v13 = v6[6];
  v12 = v6[7];
  swift_bridgeObjectRetain();
  v14 = MEMORY[0x1BCCE4378](0x7261696C69787561, 0xE900000000000079);
  if (!v12)
  {
    a2 = v34;
    goto LABEL_17;
  }
  if (v13 == v16 && v12 == v17 && v11 >> 16 == v14 >> 16 && v9 >> 16 == v15 >> 16)
  {
    result = swift_bridgeObjectRelease_n();
  }
  else
  {
    v21 = sub_1BB874200();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    a2 = v34;
    if ((v21 & 1) == 0)
      goto LABEL_18;
  }
  if (v8 > *(_QWORD *)(v7 + 16))
  {
    __break(1u);
  }
  else
  {
    v26 = &v10[4 * v8];
    v27 = *(v26 - 4);
    v28 = *(v26 - 3);
    v30 = *(v26 - 2);
    v29 = *(v26 - 1);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v7 + 16) >= v8)
    {
      v25 = 1;
      sub_1BB34103C(1, v7, v7 + 32, 1, (2 * v8) | 1);
      sub_1BB34132C();
      sub_1BB341380();
      v31 = v27;
      sub_1BAB222A8();
      a1 = sub_1BB872CB8();
      a2 = v32;
      swift_unknownObjectRelease();
      v23 = MEMORY[0x1BCCE334C](v31, v28, v30, v29);
      v24 = v33;
      result = swift_bridgeObjectRelease();
      goto LABEL_23;
    }
  }
  __break(1u);
  return result;
}

void sub_1BB34132C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C1838)
  {
    v0 = sub_1BB873B70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C1838);
  }
}

unint64_t sub_1BB341380()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C1840;
  if (!qword_1EF2C1840)
  {
    sub_1BB34132C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEBF78], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C1840);
  }
  return result;
}

uint64_t Blueprint.section(for:)(__int128 *a1)
{
  uint64_t v2;

  sub_1BB341410(a1, (uint64_t)&v2);
  return sub_1BB871644();
}

uint64_t sub_1BB341410(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1BB341428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FeedItemIdentifier(uint64_t a1)
{
  return sub_1BB341468(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_1BB341468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a5 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for FeedItemIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BB341428(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FeedItemIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BB341428(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BB341468(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FeedItemIdentifier(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_1BB341468(v4, v6, v5, v7, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FeedItemIdentifier()
{
  return &type metadata for FeedItemIdentifier;
}

_QWORD *LayeredMediaLayerProviderFactory.createLayerProvider(loader:traits:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v21[5];
  _BYTE v22[24];
  uint64_t v23;
  __int128 v24[2];

  sub_1BA4C010C(a1, (uint64_t)v24);
  sub_1BA4C010C(v2 + 16, (uint64_t)v22);
  v4 = *(_QWORD *)(v2 + 56);
  v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
  v10 = *v8;
  v11 = type metadata accessor for LayeredMediaVariantFactory();
  v21[3] = v11;
  v21[4] = &off_1E728D238;
  v21[0] = v10;
  type metadata accessor for LayeredMediaLayerProvider();
  v12 = (_QWORD *)swift_allocObject();
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v11);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)&v21[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  v18 = *v16;
  v12[11] = v11;
  v12[12] = &off_1E728D238;
  v12[8] = v18;
  sub_1BA4CECCC(v24, (uint64_t)(v12 + 2));
  v12[7] = a2;
  v12[13] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v12;
}

uint64_t LayeredMediaLayerProviderFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t LayeredMediaLayerProviderFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

_QWORD *sub_1BB341780(uint64_t a1, uint64_t a2)
{
  return LayeredMediaLayerProviderFactory.createLayerProvider(loader:traits:)(a1, a2);
}

uint64_t dispatch thunk of LayeredMediaLayerProviderFactoryType.createLayerProvider(loader:traits:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for LayeredMediaLayerProviderFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB3417B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a1;
  v28 = a2;
  v3 = sub_1BB8701C8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB8701EC();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_OWORD *)(v2 + 16);
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 40);
  v12 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA5DCC20(v12);
  v13 = swift_bridgeObjectRetain();
  sub_1BA98444C(v13);
  swift_bridgeObjectRelease();
  *(_OWORD *)v6 = v29;
  *((_QWORD *)v6 + 2) = v10;
  *((_QWORD *)v6 + 3) = v11;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB85B8], v3);
  swift_bridgeObjectRetain();
  *(_QWORD *)&v29 = v6;
  sub_1BB870198();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5DCC4C(v12);
  v25 = v9;
  v14 = sub_1BB8701A4();
  if (!(v14 >> 62))
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v23 = v27;
    v24 = v25;
    sub_1BB8701E0();
    sub_1BB8701D4();
    sub_1BB870198();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v24, v23);
  }
  v15 = sub_1BB873F30();
  if (!v15)
    goto LABEL_11;
LABEL_3:
  v31 = MEMORY[0x1E0DEE9D8];
  result = sub_1BB873DD4();
  if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = (void *)objc_opt_self();
    v18 = 0;
    do
    {
      if ((v14 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x1BCCE4630](v18, v14);
      else
        v19 = *(id *)(v14 + 8 * v18 + 32);
      v20 = v19;
      ++v18;
      v21 = objc_msgSend(v17, sel_traitCollectionWithUserInterfaceStyle_, v30);
      v22 = objc_msgSend(v20, sel_resolvedColorWithTraitCollection_, v21);

      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
    }
    while (v15 != v18);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t FormatGradient.auxViewRequirements.getter()
{
  return sub_1BA862CF8((uint64_t)&unk_1E7270988);
}

uint64_t FormatGradient.colors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGradient.locations.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 FormatGradient.direction.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 16);
  v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t FormatGradient.offset.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA5DCC20(v2);
}

uint64_t sub_1BB341AF8()
{
  return sub_1BA862CF8((uint64_t)&unk_1E724FC50);
}

BOOL _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  _BOOL8 result;
  BOOL v18;
  BOOL v19;
  BOOL v21;
  BOOL v22;
  char v24;
  char v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(double *)(a1 + 16);
  v3 = *(double *)(a1 + 24);
  v6 = *(double *)(a1 + 32);
  v5 = *(double *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a2 + 8);
  v11 = *(double *)(a2 + 16);
  v10 = *(double *)(a2 + 24);
  v13 = *(double *)(a2 + 32);
  v12 = *(double *)(a2 + 40);
  v15 = *(_QWORD *)(a2 + 48);
  v14 = *(_QWORD *)(a2 + 56);
  if ((sub_1BA891D34(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  if (!v2)
  {
    if (v9)
      return 0;
    v21 = v4 == v11 && v3 == v10;
    v22 = v21 && v6 == v13;
    if (!v22 || v5 != v12)
      return 0;
    goto LABEL_28;
  }
  if (!v9)
    return 0;
  v16 = sub_1BA892D54(v2, v9);
  result = 0;
  if (v16)
  {
    v18 = v4 == v11 && v3 == v10;
    v19 = v18 && v6 == v13;
    if (v19 && v5 == v12)
    {
LABEL_28:
      if (v8)
      {
        if (v15)
        {
          sub_1BA5DCC20(v8);
          sub_1BA5DCC20(v8);
          sub_1BA5DCC20(v15);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v24 = sub_1BA881EAC(v8, v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v24 & 1) != 0)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v25 = sub_1BA881EAC(v7, v14);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA5DCC4C(v15);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA5DCC4C(v8);
            return (v25 & 1) != 0;
          }
          sub_1BA5DCC4C(v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v26 = v8;
LABEL_38:
          sub_1BA5DCC4C(v26);
          return 0;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else if (!v15)
      {
        return 1;
      }
      sub_1BA5DCC20(v15);
      sub_1BA5DCC4C(v8);
      v26 = v15;
      goto LABEL_38;
    }
  }
  return result;
}

_QWORD *sub_1BB341CF4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  _QWORD *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  void (*v69)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  int64_t v71;
  void (*v72)(uint64_t, _QWORD, uint64_t, uint64_t);
  __int128 v73;
  uint64_t v74;
  _OWORD v75[2];
  uint64_t v76;
  _OWORD v77[2];
  uint64_t v78;
  _OWORD v79[2];
  uint64_t v80;

  sub_1BA8C88C8(0);
  v67 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v61 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *a1;
  v71 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))a1[5];
  v74 = a1[4];
  v9 = a1[6];
  v65 = a1[7];
  v66 = v9;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v73 = xmmword_1BB87FC80;
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v10);
  v12 = *(_QWORD *)(v3 + 72);
  v13 = *(unsigned __int8 *)(v3 + 80);
  v14 = (v13 + 32) & ~v13;
  v63 = v13 | 7;
  v64 = v15;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v73;
  *(_QWORD *)&v73 = v14;
  v17 = (_QWORD *)(v16 + v14);
  if (v5)
    v18 = v6;
  else
    v18 = 0;
  if (v5)
    v19 = v7;
  else
    v19 = 0;
  if (v5)
    v20 = v74;
  else
    v20 = 0;
  if (v5)
    v21 = v8;
  else
    v21 = 0;
  v72 = v21;
  sub_1BAAFB8C4(0x6F50207472617453, 0xEB00000000746E69, v18, v19, v5 == 0, v17);
  v22 = type metadata accessor for FormatInspectionItem(0);
  v23 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23((uint64_t)v17, 0, 1, v22);
  v74 = v12;
  v24 = (_QWORD *)((char *)v17 + v12);
  v25 = v20;
  v26 = v22;
  v27 = v23;
  v28 = v5;
  sub_1BAAFB8C4(0x6E696F5020646E45, 0xE900000000000074, v25, (uint64_t)v72, v5 == 0, v24);
  v27((uint64_t)v24, 0, 1, v26);
  if (v5)
  {
    v29 = v71;
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = 0;
  }
  v62 = 2 * v74;
  v30 = (_QWORD *)((char *)v17 + 2 * v74);
  sub_1BAAFBBD8(0x6E6F697461636F4CLL, 0xE900000000000073, v29, v30);
  v27((uint64_t)v30, 0, 1, v26);
  sub_1BAF89090(0x746E656964617247, 0xE800000000000000, 0, 0, v16, v75);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v31 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v31;
  *(_QWORD *)(v31 + 48) = v76;
  v32 = v75[1];
  *(_OWORD *)(v31 + 16) = v75[0];
  *(_OWORD *)(v31 + 32) = v32;
  v33 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    swift_bridgeObjectRetain();
    v34 = v5;
  }
  else
  {
    v34 = MEMORY[0x1E0DEE9D8];
  }
  v35 = *(_QWORD *)(v34 + 16);
  if (v35)
  {
    v58 = inited + 32;
    v59 = v5;
    v71 = v35;
    v72 = v27;
    v60 = inited;
    *(_QWORD *)&v79[0] = v33;
    sub_1BAC79E1C(0, v35, 0);
    v33 = *(_QWORD *)&v79[0];
    v36 = type metadata accessor for FormatInspectionItem.Value(0);
    v37 = 0;
    v69 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
    v70 = v36;
    v38 = (uint64_t)v61;
    v39 = v61 + 16;
    v68 = xmmword_1BB89D8A0;
    do
    {
      v40 = v34;
      v41 = (_QWORD *)(v38 + *(int *)(v26 + 24));
      *v41 = *(_QWORD *)(v34 + 8 * v37 + 32);
      v42 = v70;
      swift_storeEnumTagMultiPayload();
      v69(v41, 0, 1, v42);
      *(_OWORD *)v38 = v68;
      *v39 = 0;
      *(_QWORD *)(v38 + 24) = 0;
      v43 = v38 + *(int *)(v26 + 28);
      *(_QWORD *)v43 = 0;
      *(_QWORD *)(v43 + 8) = 0;
      *(_BYTE *)(v43 + 16) = -1;
      v72(v38, 0, 1, v26);
      *(_QWORD *)&v79[0] = v33;
      v45 = *(_QWORD *)(v33 + 16);
      v44 = *(_QWORD *)(v33 + 24);
      swift_retain();
      if (v45 >= v44 >> 1)
      {
        sub_1BAC79E1C(v44 > 1, v45 + 1, 1);
        v33 = *(_QWORD *)&v79[0];
      }
      ++v37;
      *(_QWORD *)(v33 + 16) = v45 + 1;
      sub_1BA89EB4C(v38, v33 + v73 + v45 * v74);
      v34 = v40;
    }
    while (v71 != v37);
    swift_bridgeObjectRelease();
    v28 = v59;
    inited = v60;
    v27 = v72;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1BAF89090(0x73726F6C6F43, 0xE600000000000000, 0, 0, v33, v77);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v46 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v46;
  *(_QWORD *)(v46 + 48) = v78;
  v47 = v77[1];
  *(_OWORD *)(v46 + 16) = v77[0];
  *(_OWORD *)(v46 + 32) = v47;
  v48 = v73;
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1BB87A390;
  v50 = (_QWORD *)(v49 + v48);
  v51 = v65;
  if (v28 && v66)
  {
    v52 = v66;
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(88, 0xE100000000000000, v52, v50);
    v27((uint64_t)v50, 0, 1, v26);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BAAF3E48(88, 0xE100000000000000, 0, v50);
    v27((uint64_t)v50, 0, 1, v26);
    v51 = 0;
  }
  v53 = (char *)v50 + v74;
  sub_1BAAF3E48(89, 0xE100000000000000, v51, (_QWORD *)((char *)v50 + v74));
  v27((uint64_t)v53, 0, 1, v26);
  sub_1BAF89090(0x74657366664FLL, 0xE600000000000000, 0, 0, v49, v79);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 144) = &off_1E72D2F60;
  v54 = swift_allocObject();
  *(_QWORD *)(inited + 112) = v54;
  *(_QWORD *)(v54 + 48) = v80;
  v55 = v79[1];
  *(_OWORD *)(v54 + 16) = v79[0];
  *(_OWORD *)(v54 + 32) = v55;
  v56 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v56;
}

unint64_t sub_1BB342378(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB34239C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB34239C()
{
  unint64_t result;

  result = qword_1EF2C1848;
  if (!qword_1EF2C1848)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGradient, &type metadata for FormatGradient);
    atomic_store(result, (unint64_t *)&qword_1EF2C1848);
  }
  return result;
}

unint64_t sub_1BB3423E0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5FEA34();
  a1[2] = sub_1BA5D6280();
  result = sub_1BB342414();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB342414()
{
  unint64_t result;

  result = qword_1EF2C1850;
  if (!qword_1EF2C1850)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGradient, &type metadata for FormatGradient);
    atomic_store(result, (unint64_t *)&qword_1EF2C1850);
  }
  return result;
}

uint64_t destroy for FormatGradient(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 48);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FormatGradient(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v7 = (_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *v7;
  }
  return a1;
}

_QWORD *assignWithCopy for FormatGradient(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1[6];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v5 = a2[6];
  if (!v4)
  {
    if (v5)
    {
      a1[6] = v5;
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v5)
  {
    sub_1BB34261C((uint64_t)(a1 + 6));
    goto LABEL_7;
  }
  a1[6] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB34261C(uint64_t a1)
{
  destroy for FormatSizeEquation();
  return a1;
}

uint64_t assignWithTake for FormatGradient(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  if (!v5)
    goto LABEL_5;
  if (!v4)
  {
    sub_1BB34261C(a1 + 48);
LABEL_5:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatGradient()
{
  return &type metadata for FormatGradient;
}

uint64_t sub_1BB3426F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FeedSuggestionClusteringRequest.configuration.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FeedSuggestionClusteringRequest.feedItems.getter()
{
  return swift_bridgeObjectRetain();
}

id FeedSuggestionClusteringRequest.feedItemScoreProfiles.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t FeedSuggestionClusteringRequest.feedContextByFeedID.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSuggestionClusteringRequest.ignoreTagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSuggestionClusteringRequest.tagIDSorter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_retain();
  return v1;
}

uint64_t FeedSuggestionClusteringRequest.init(configuration:feedItems:feedItemScoreProfiles:feedContextByFeedID:ignoreTagIDs:tagIDSorter:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t destroy for FeedSuggestionClusteringRequest(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for FeedSuggestionClusteringRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  v6 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v6;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for FeedSuggestionClusteringRequest(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FeedSuggestionClusteringRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FeedSuggestionClusteringRequest()
{
  return &type metadata for FeedSuggestionClusteringRequest;
}

uint64_t sub_1BB3429A0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)v0;
  sub_1BB8745CC();
  sub_1BAFC85CC(v2);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  sub_1BB8745E4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1BB7EB5AC((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_1BB874608();
}

uint64_t sub_1BB342A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  sub_1BAFC85CC(*(_BYTE *)v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  if (!v3)
    return sub_1BB8745E4();
  sub_1BB8745E4();
  swift_bridgeObjectRetain();
  sub_1BB7EB5AC(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB342AD0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)v0;
  sub_1BB8745CC();
  sub_1BAFC85CC(v2);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  sub_1BB8745E4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1BB7EB5AC((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_1BB874608();
}

void sub_1BB342B68(char *a1)
{
  sub_1BB343CD8(*a1);
}

_QWORD *sub_1BB342B80(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD v56[6];
  _BYTE v57[25];
  _QWORD *v58;

  v54 = a2;
  v53 = a1;
  v49 = *v3;
  v47 = sub_1BB86C22C();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v45 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1BB86C37C();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v42 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v7);
  v52 = (char *)&v39 - v8;
  v51 = sub_1BB86C238();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86C244();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BB86C25C();
  MEMORY[0x1E0C80A78](v15);
  v41 = sub_1BB86C304();
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v39 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v39 - v18;
  v48 = OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_styles;
  *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_styles) = MEMORY[0x1E0DEE9E0];
  v20 = (_OWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle);
  v21 = a3[5];
  v20[4] = a3[4];
  v20[5] = v21;
  v20[6] = a3[6];
  *(_OWORD *)((char *)v20 + 105) = *(_OWORD *)((char *)a3 + 105);
  v22 = a3[1];
  *v20 = *a3;
  v20[1] = v22;
  v23 = a3[3];
  v20[2] = a3[2];
  v20[3] = v23;
  v58 = v3;
  *((_BYTE *)v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_buildType) = 1;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0CAF040], v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v10, *MEMORY[0x1E0CAF020], v51);
  sub_1BA741FD8((uint64_t)a3);
  sub_1BB86C250();
  v24 = sub_1BB86C67C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v52, 1, 1, v24);
  sub_1BA82DA04();
  v25 = v55;
  sub_1BB86C2F8();
  if (v25)
  {
    sub_1BA741B54((uint64_t)a3);
    v26 = v58;
    swift_bridgeObjectRelease();
    v27 = v20[5];
    v56[4] = v20[4];
    v56[5] = v27;
    *(_OWORD *)v57 = v20[6];
    *(_OWORD *)&v57[9] = *(_OWORD *)((char *)v20 + 105);
    v28 = v20[1];
    v56[0] = *v20;
    v56[1] = v28;
    v29 = v20[3];
    v56[2] = v20[2];
    v56[3] = v29;
    sub_1BA741B54((uint64_t)v56);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v26 = v58;
    v30 = v40;
    v31 = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))((uint64_t)v58 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString, v19, v41);
    v32 = (uint64_t)v26 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString;
    swift_beginAccess();
    v33 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v39, v32, v31);
    v34 = v42;
    sub_1BA744E84(v33, v42);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v31);
    v35 = v46;
    v36 = v45;
    v37 = v47;
    (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v45, *MEMORY[0x1E0CAEFE0], v47);
    swift_beginAccess();
    sub_1BB86C1FC();
    swift_endAccess();
    sub_1BA741B54((uint64_t)a3);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v34, v44);
  }
  return v26;
}

uint64_t sub_1BB3430AC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[128];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[136];
  uint64_t v47;

  v4 = a3;
  sub_1BB3442AC(a3, (uint64_t)v42);
  v7 = sub_1BB3442AC((uint64_t)v42, (uint64_t)v46);
  v8 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 104) + 288);
  if (v8 && *(_QWORD *)(v8 + 16))
  {
    v47 = a2;
    v9 = a1(v7);
    v11 = v10;
    v12 = *(_QWORD *)(v8 + 16);
    if (v12)
    {
      v13 = v9;
      v38 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = 0;
      v15 = v11;
      v37 = v13;
      do
      {
        v19 = *(unsigned __int8 *)(v8 + v14 + 32);
        if (*(_BYTE *)(v8 + v14 + 32))
        {
          v43 = v13;
          v44 = v15;
          if (v19 == 1)
          {
            sub_1BA7114A0();
            v16 = sub_1BB873AD4();
          }
          else
          {
            sub_1BA7114A0();
            v16 = sub_1BB873AF8();
          }
        }
        else
        {
          v43 = v13;
          v44 = v15;
          sub_1BA7114A0();
          v16 = sub_1BB873AE0();
        }
        v13 = v16;
        v18 = v17;
        swift_bridgeObjectRelease();
        v15 = v18;
        ++v14;
      }
      while (v12 != v14);
      swift_bridgeObjectRelease();
      if (v37 == v13 && v11 == v18)
      {
        swift_bridgeObjectRelease_n();
        v13 = 0;
        v15 = 0;
        v4 = v38;
      }
      else
      {
        v32 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v32 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v13 = 0;
          v15 = 0;
        }
        v4 = v38;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v13 = 0;
      v15 = 0;
    }
  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  sub_1BB3442AC(v4, (uint64_t)&v43);
  if (sub_1BA84DAF0(&v43) != 1)
  {
    v20 = *(_QWORD *)(v45 + 288);
    if (v20)
    {
      if (*(_QWORD *)(v20 + 16))
      {
        if (v15)
        {
          sub_1BB3442AC((uint64_t)v46, (uint64_t)&v40);
          sub_1BA741FD8((uint64_t)&v40);
          v21 = v13;
          v22 = v15;
          v23 = *(_QWORD *)(v20 + 16);
          if (v23)
            goto LABEL_17;
        }
        else
        {
          sub_1BB3442AC((uint64_t)v46, (uint64_t)&v40);
          v34 = sub_1BA741FD8((uint64_t)&v40);
          v21 = a1(v34);
          v22 = v35;
          v23 = *(_QWORD *)(v20 + 16);
          if (v23)
          {
LABEL_17:
            v39 = v4;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v24 = 0;
            v47 = v22;
            v25 = v22;
            v26 = v21;
            do
            {
              v30 = *(unsigned __int8 *)(v20 + v24 + 32);
              if (*(_BYTE *)(v20 + v24 + 32))
              {
                v40 = v26;
                v41 = v25;
                if (v30 == 1)
                {
                  sub_1BA7114A0();
                  v27 = sub_1BB873AD4();
                }
                else
                {
                  sub_1BA7114A0();
                  v27 = sub_1BB873AF8();
                }
              }
              else
              {
                v40 = v26;
                v41 = v25;
                sub_1BA7114A0();
                v27 = sub_1BB873AE0();
              }
              v26 = v27;
              v29 = v28;
              swift_bridgeObjectRelease();
              v25 = v29;
              ++v24;
            }
            while (v23 != v24);
            swift_bridgeObjectRelease();
            v33 = v21 == v26 && v47 == v29;
            if (v33 || (sub_1BB874398() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              sub_1BB3443B0(v39);
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_1BB3443B0(v39);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v26;
            }
            return v13;
          }
        }
        swift_bridgeObjectRetain();
        sub_1BB3443B0(v4);
        swift_bridgeObjectRelease();
      }
    }
  }
  return v13;
}

uint64_t sub_1BB343484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  id v54;
  uint64_t *v55;
  _OWORD *v56;
  void *v57;
  uint64_t v58;
  _BYTE v59[32];
  _BYTE v60[32];
  __int128 v61;
  __int128 v62;
  _BYTE v63[25];
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  char v69;
  __int128 v70;
  char v71;
  uint64_t v72;
  char v73;
  __int128 v74;
  char v75;
  _OWORD v76[6];
  _OWORD v77[3];
  uint64_t v78;

  v5 = v4;
  v6 = v3;
  v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_styles);
  swift_beginAccess();
  v11 = *v10;
  v12 = *(_QWORD *)(*v10 + 16);
  swift_bridgeObjectRetain();
  if (v12)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1BB4AB14C(a1, a2);
    if ((v14 & 1) != 0)
    {
      v15 = (_OWORD *)(*(_QWORD *)(v11 + 56) + (v13 << 7));
      v17 = v15[2];
      v16 = v15[3];
      v18 = v15[1];
      *(_OWORD *)v59 = *v15;
      *(_OWORD *)&v59[16] = v18;
      *(_OWORD *)v60 = v17;
      *(_OWORD *)&v60[16] = v16;
      v19 = v15[4];
      v20 = v15[5];
      v21 = v15[6];
      *(_OWORD *)&v63[9] = *(_OWORD *)((char *)v15 + 105);
      v62 = v20;
      *(_OWORD *)v63 = v21;
      v61 = v19;
      swift_endAccess();
      sub_1BA741FD8((uint64_t)v59);
      swift_bridgeObjectRelease();
      v22 = v63[24];
      v23 = *(_OWORD *)&v63[8];
      v24 = *((_QWORD *)&v62 + 1);
      v25 = v63[0];
      v26 = v62;
      v27 = v61;
      v28 = v60[24];
      v29 = *(_OWORD *)&v60[8];
      v30 = *(_QWORD *)&v59[24];
      v31 = v60[0];
      v32 = *(_OWORD *)&v59[8];
      v33 = *(_QWORD *)v59;
LABEL_4:
      *(_QWORD *)v59 = v33;
      *(_OWORD *)&v59[8] = v32;
      *(_QWORD *)&v59[24] = v30;
      v60[0] = v31;
      *(_OWORD *)&v60[8] = v29;
      v60[24] = v28;
      v61 = v27;
      LOBYTE(v62) = v26;
      *((_QWORD *)&v62 + 1) = v24;
      v63[0] = v25;
      *(_OWORD *)&v63[8] = v23;
      v63[24] = v22;
      v76[4] = v27;
      v76[5] = v62;
      v77[0] = *(_OWORD *)v63;
      *(_OWORD *)((char *)v77 + 9) = *(_OWORD *)&v63[9];
      v76[0] = *(_OWORD *)v59;
      v76[1] = *(_OWORD *)&v59[16];
      v76[2] = *(_OWORD *)v60;
      v76[3] = *(_OWORD *)&v60[16];
      swift_beginAccess();
      sub_1BA741FD8((uint64_t)v59);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v58 = *v10;
      *v10 = 0x8000000000000000;
      sub_1BB4BE008(v76, a1, a2, isUniquelyReferenced_nonNull_native);
      *v10 = v58;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_endAccess();
      v36 = v62;
      a3[4] = v61;
      a3[5] = v36;
      a3[6] = *(_OWORD *)v63;
      *(_OWORD *)((char *)a3 + 105) = *(_OWORD *)&v63[9];
      v37 = *(_OWORD *)&v59[16];
      *a3 = *(_OWORD *)v59;
      a3[1] = v37;
      v38 = *(_OWORD *)&v60[16];
      a3[2] = *(_OWORD *)v60;
      a3[3] = v38;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  v55 = v10;
  v56 = a3;
  swift_endAccess();
  v57 = *(void **)(v6 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle);
  v39 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 104);
  if (a2)
    v40 = a2;
  else
    v40 = MEMORY[0x1E0DEE9E8];
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v78 = a1;
  *(_QWORD *)(inited + 32) = sub_1BAFC818C(a1);
  *(_QWORD *)(inited + 40) = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43 = v5;
  v44 = sub_1BA78A504(inited, v40);
  swift_setDeallocating();
  swift_arrayDestroy();
  v45 = (char *)sub_1BA707E14(v44, 0);
  swift_bridgeObjectRelease();
  v46 = (uint64_t *)(*(_QWORD *)&v45[OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory]
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v48 = *v46;
  v47 = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49 = swift_retain();
  v50 = sub_1BA748BCC(v49, (uint64_t)v45, v48, v47);
  if (!v43)
  {
    v51 = v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (!v51)
    {
      swift_retain();
      v51 = v39;
    }
    v52 = v78;
    v53 = dword_1BB90AEE8[(char)v78];
    swift_retain();
    v54 = sub_1BAC88F84(v57, v53, v39, v51, v45);
    swift_release();
    sub_1BA743168(v54, v51, (uint64_t)v45, v78, &v64);
    swift_bridgeObjectRelease();
    a1 = v52;
    v22 = v75;
    v23 = v74;
    v24 = v72;
    v25 = v73;
    v26 = v71;
    v27 = v70;
    v28 = v69;
    v29 = v68;
    v31 = v67;
    v32 = v65;
    v30 = v66;
    v33 = v64;
    v10 = v55;
    a3 = v56;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1BB343944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v0 = sub_1BB86C1D8();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1BB86C424();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA716CEC();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C298();
  swift_beginAccess();
  sub_1BA4A2870(&qword_1ED3A2FC8, (uint64_t (*)(uint64_t))sub_1BA716CEC, MEMORY[0x1E0DEB8A8]);
  sub_1BB86C328();
  swift_endAccess();
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA716CEC);
  sub_1BB86C3F4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1BA4A2870(&qword_1EF2B1828, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF28]);
  return sub_1BB872B80();
}

uint64_t sub_1BB343AEC()
{
  return type metadata accessor for FormatAttributedString();
}

uint64_t storeEnumTagSinglePayload for FormatAttributedString.BuildType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB343B40 + 4 * byte_1BB90ACC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB343B74 + 4 * asc_1BB90ACC0[v4]))();
}

uint64_t sub_1BB343B74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB343B7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB343B84);
  return result;
}

uint64_t sub_1BB343B90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB343B98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB343B9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB343BA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatAttributedString.BuildType()
{
  return &type metadata for FormatAttributedString.BuildType;
}

uint64_t assignWithCopy for FormatAttributedString.StyleKey(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatAttributedString.StyleKey(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatAttributedString.StyleKey()
{
  return &type metadata for FormatAttributedString.StyleKey;
}

unint64_t sub_1BB343C4C()
{
  unint64_t result;

  result = qword_1ED3A2B58;
  if (!qword_1ED3A2B58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90AD4C, &type metadata for FormatAttributedString.StyleKey);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B58);
  }
  return result;
}

unint64_t sub_1BB343C94()
{
  unint64_t result;

  result = qword_1EF2C1858;
  if (!qword_1EF2C1858)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90ADF4, &type metadata for FormatAttributedString.BuildType);
    atomic_store(result, (unint64_t *)&qword_1EF2C1858);
  }
  return result;
}

void sub_1BB343CD8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB343D28@<X0>(unsigned __int8 a1@<W8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BB343ED0 + 4 * byte_1BB90ACDC[a1]))(0x63696C617469);
}

uint64_t sub_1BB343ED0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;
  char v7;

  if (a1 == 0x63696C617469 && v3 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v4 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v4 & 1) == 0)
      return result;
  }
  if (v2)
  {
    if (v1)
    {
      swift_bridgeObjectRetain();
      v6 = swift_bridgeObjectRetain();
      v7 = sub_1BA6EB330(v6, v1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 1;
    }
  }
  else if (!v1)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1BB34417C()
{
  return sub_1BA4A2870(&qword_1ED3C44C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF1B0], MEMORY[0x1E0CAF1C0]);
}

uint64_t sub_1BB344198()
{
  return sub_1BA4A2870(&qword_1ED3C44B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF160], MEMORY[0x1E0CAF180]);
}

void sub_1BB3441B8(_QWORD *a1@<X8>)
{
  *a1 = &type metadata for FormatAttributeScope;
}

unint64_t sub_1BB3441C8()
{
  unint64_t result;

  result = qword_1ED3A0ED8;
  if (!qword_1ED3A0ED8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB955328, &type metadata for FormatAttributeScope.AnnotationAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED3A0ED8);
  }
  return result;
}

unint64_t sub_1BB34420C()
{
  unint64_t result;

  result = qword_1ED3A2AD8;
  if (!qword_1ED3A2AD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9552D8, &type metadata for FormatAttributeScope.SelectorsAttribute);
    atomic_store(result, (unint64_t *)&qword_1ED3A2AD8);
  }
  return result;
}

uint64_t sub_1BB344250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, qword_1ED3CDB10, (void (*)(uint64_t))type metadata accessor for FormatAttributedStringAttachment);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB3442A4()
{
  return sub_1BB343944();
}

uint64_t sub_1BB3442AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1ED3A2C10, (uint64_t)&type metadata for FormatAttributedStringStyle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB344308(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, qword_1ED3CDB10, (void (*)(uint64_t))type metadata accessor for FormatAttributedStringAttachment);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BB344354()
{
  sub_1BB86C100();
  __break(1u);
}

unint64_t sub_1BB34436C()
{
  unint64_t result;

  result = qword_1EF2C1868;
  if (!qword_1EF2C1868)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DC1858], MEMORY[0x1E0DC1868]);
    atomic_store(result, (unint64_t *)&qword_1EF2C1868);
  }
  return result;
}

uint64_t sub_1BB3443B0(uint64_t a1)
{
  sub_1BB344410(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(void **)(a1 + 64));
  return a1;
}

void sub_1BB344410(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a1)
  {

    swift_release();
    swift_release();

  }
}

char *sub_1BB344484(char a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  double v34;
  id v35;
  id v36;
  double v37;
  double v38;
  objc_super v40;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = a1 & 1;
  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - v6;
  v1[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v8 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView;
  v9 = objc_allocWithZone(MEMORY[0x1E0DC3438]);
  v10 = v1;
  *(_QWORD *)&v1[v8] = objc_msgSend(v9, sel_initWithActivityIndicatorStyle_, 100);
  v11 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel;
  sub_1BB86F8A4();
  *(_QWORD *)&v10[v11] = sub_1BB86F880();
  v12 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView;
  *(_QWORD *)&v10[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet] = MEMORY[0x1E0DEE9D8];
  v10[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_source] = v4;

  v40.receiver = v10;
  v40.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v40, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView;
  v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView];
  v16 = v13;
  objc_msgSend(v16, sel_addSubview_, v15);
  v17 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel;
  v18 = *(void **)&v16[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel];
  objc_msgSend(v16, sel_addSubview_, v18);
  objc_msgSend(v16, sel_addSubview_, *(_QWORD *)&v16[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView]);
  v19 = (void *)objc_opt_self();
  v20 = v18;
  v21 = objc_msgSend(v19, sel_systemFillColor);
  objc_msgSend(v20, sel_setBackgroundColor_, v21);

  v22 = *(void **)&v16[v17];
  objc_msgSend(v22, sel_setTextAlignment_, 1);
  objc_msgSend(v22, sel_setNumberOfLines_, 0);
  v23 = sub_1BB86EB84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 1, 1, v23);
  v24 = v22;
  v25 = sub_1BB3450B4((uint64_t)v7);
  sub_1BA6BF694((uint64_t)v7);
  objc_msgSend(v24, sel_setAttributedText_, v25);

  v26 = (void *)sub_1BB86F898();
  swift_allocObject();
  swift_unknownObjectWeakInit();

  swift_release();
  v27 = *(void **)&v13[v14];
  type metadata accessor for DebugFormatUploadDiffTableViewCell();
  v28 = v27;
  sub_1BB873234();

  v29 = *(void **)&v13[v14];
  objc_msgSend(v29, sel_setDelegate_, v16);
  objc_msgSend(v29, sel_setDataSource_, v16);
  v30 = v29;
  v31 = objc_msgSend(v19, sel_secondarySystemBackgroundColor);
  objc_msgSend(v30, sel_setBackgroundColor_, v31);

  v32 = *(void **)&v13[v14];
  objc_msgSend(v32, sel_setSeparatorStyle_, 0);
  objc_msgSend(v32, sel_setRowHeight_, *MEMORY[0x1E0DC53D8]);
  v33 = (void *)objc_opt_self();
  v34 = *MEMORY[0x1E0DC1440];
  v35 = v32;
  v36 = objc_msgSend(v33, sel_monospacedDigitSystemFontOfSize_weight_, 12.0, v34);
  objc_msgSend(v36, sel_lineHeight);
  v38 = v37;

  objc_msgSend(v35, sel_setEstimatedRowHeight_, v38);
  return v16;
}

void sub_1BB3448E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = (char *)v2;
    if (MEMORY[0x1BCCE5D40](v2 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_delegate))
    {
      v4 = *(id *)&v3[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel];
      sub_1BA9706E0((uint64_t)v3, (uint64_t)v4);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

id sub_1BB3449AC()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double Width;
  double Height;
  double v10;
  double v11;
  void *v12;
  objc_super v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel];
  objc_msgSend(v0, sel_safeAreaInsets);
  v3 = v2;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, 0.0, v3, CGRectGetWidth(v15), 32.0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView];
  objc_msgSend(v0, sel_safeAreaInsets);
  v6 = v5;
  objc_msgSend(v1, sel_bounds);
  v7 = v6 + CGRectGetHeight(v16);
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v17);
  objc_msgSend(v0, sel_bounds);
  Height = CGRectGetHeight(v18);
  objc_msgSend(v0, sel_safeAreaInsets);
  v11 = Height - v10;
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v4, sel_setFrame_, 0.0, v7, Width, v11 - CGRectGetHeight(v19));
  v12 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView];
  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v12, sel_setFrame_);
}

uint64_t type metadata accessor for DebugFormatUploadDiffView()
{
  return objc_opt_self();
}

unint64_t sub_1BB344DD4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  char *v11;
  id v12;

  v1 = v0;
  type metadata accessor for DebugFormatUploadDiffTableViewCell();
  v2 = (char *)sub_1BB87321C();
  v3 = sub_1BB86CBD4();
  v4 = v1 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet;
  result = swift_beginAccess();
  v6 = *(_QWORD *)v4;
  if ((*(_QWORD *)v4 & 0xC000000000000001) == 0)
  {
    if ((v3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v3 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *(_QWORD *)(v6 + 8 * v3 + 32);
      swift_retain();
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_13;
  }
  v7 = MEMORY[0x1BCCE4630](v3);
LABEL_5:
  swift_endAccess();
  v4 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  result = sub_1BB86CBC8();
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_13:
    v8 = (id)MEMORY[0x1BCCE4630](result, v4);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v4 + 8 * result + 32);
LABEL_9:
    v9 = v8;
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8NewsFeed34DebugFormatUploadDiffTableViewCell_label], sel_setAttributedText_, v9);
    v10 = (void *)objc_opt_self();
    v11 = v2;
    v12 = objc_msgSend(v10, sel_systemBackgroundColor);
    objc_msgSend(v11, sel_setBackgroundColor_, v12);

    return (unint64_t)v11;
  }
  __break(1u);
  return result;
}

id sub_1BB3450B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t inited;
  void **v7;
  void *v8;
  void *v9;
  double v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  double v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  __int128 v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - v3;
  sub_1BB872A24();
  swift_bridgeObjectRelease();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v42 = v5;
  inited = swift_initStackObject();
  v7 = (void **)MEMORY[0x1E0DC1138];
  v40 = xmmword_1BB87A390;
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v8 = *v7;
  *(_QWORD *)(inited + 32) = *v7;
  v9 = (void *)objc_opt_self();
  v10 = *MEMORY[0x1E0DC1420];
  v39 = v8;
  v41 = v9;
  v11 = objc_msgSend(v9, sel_systemFontOfSize_weight_, 11.0, v10);
  v12 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v11;
  v13 = (void *)*MEMORY[0x1E0DC1140];
  v38 = v12;
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 72) = v13;
  v14 = (void *)objc_opt_self();
  v36 = v13;
  v37 = v14;
  v15 = objc_msgSend(v14, sel_systemGray2Color);
  v16 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 80) = v15;
  sub_1BA76E82C(inited);
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v18 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v19 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v17, sel_initWithString_attributes_, v18, v19);

  v43 = 10;
  v44 = 0xE100000000000000;
  sub_1BA6BF98C(a1, (uint64_t)v4);
  v21 = sub_1BB86EB84();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v4, 1, v21) == 1)
  {
    sub_1BA6BF694((uint64_t)v4);
  }
  else
  {
    sub_1BB86EB24();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v21);
  }
  sub_1BB872AFC(v23);
  swift_bridgeObjectRelease();
  v24 = swift_initStackObject();
  *(_OWORD *)(v24 + 16) = v40;
  v25 = v39;
  *(_QWORD *)(v24 + 32) = v39;
  v26 = *MEMORY[0x1E0DC1448];
  v27 = v25;
  *(_QWORD *)(v24 + 40) = objc_msgSend(v41, sel_systemFontOfSize_weight_, 11.0, v26);
  v28 = v36;
  *(_QWORD *)(v24 + 64) = v38;
  *(_QWORD *)(v24 + 72) = v28;
  v29 = v28;
  v30 = objc_msgSend(v37, sel_systemGray2Color);
  *(_QWORD *)(v24 + 104) = v16;
  *(_QWORD *)(v24 + 80) = v30;
  sub_1BA76E82C(v24);
  v31 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v32 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v33 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v31, sel_initWithString_attributes_, v32, v33);

  objc_msgSend(v20, sel_appendAttributedString_, v34);
  return v20;
}

void sub_1BB345544()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v2 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  v3 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel;
  sub_1BB86F8A4();
  *(_QWORD *)&v1[v3] = sub_1BB86F880();
  v4 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView;
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet] = MEMORY[0x1E0DEE9D8];

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BB345660(unint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet);
  result = swift_beginAccess();
  if ((*v3 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1BCCE4630](a1);
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    swift_retain();
LABEL_5:
    swift_endAccess();
    sub_1BB87420C();
    sub_1BB872AFC(v5);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v6);
    sub_1BB87420C();
    sub_1BB872AFC(v7);
    swift_release();
    swift_bridgeObjectRelease();
    return 0x2073656E694CLL;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB3457A0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB3457C4()
{
  uint64_t v0;

  sub_1BB3448E8(v0);
}

uint64_t sub_1BB3457CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v13[3];
  uint64_t v14;
  char *v15;
  uint64_t v16;

  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v14);
  v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(a1 + 16))
  {
    v13[1] = v1;
    v10 = type metadata accessor for FormatContentSlotItemResolution();
    v11 = a1
        + ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80));
    v13[0] = a1;
    swift_bridgeObjectRetain();
    v15 = v5;
    v13[2] = v6;
    sub_1BA4C2DD8(v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    v12 = (char *)&loc_1BB345904 + 4 * byte_1BB90AF90[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1BB345AD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12;

  v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v11[1] = v1;
    v8 = *(_QWORD *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    v11[0] = a1;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1BB345C3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12;

  v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v11[1] = v1;
    v8 = *(_QWORD *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    v11[0] = a1;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1BB345DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t result;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  __int128 *v75;
  int64_t v76;
  unint64_t v77;
  unint64_t v78;
  id v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  int v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  char *v115;
  _QWORD *v116;
  char v117;
  _QWORD v118[3];
  uint64_t v119;
  uint64_t v120;

  v115 = (char *)a4;
  v8 = type metadata accessor for ScoredFormatContentSlotItemResolution();
  v102 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatContentSlotItemResolution();
  v114 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB3469B8(0);
  MEMORY[0x1E0C80A78](v14);
  v104 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v113 = type metadata accessor for FeedPersonalizationClusteringRules();
  v105 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v103 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C010C(a3 + 24, (uint64_t)v118);
  v17 = v119;
  v18 = v120;
  __swift_project_boxed_opaque_existential_1(v118, v119);
  v19 = sub_1BB3457CC(a1);
  v109 = type metadata accessor for FormatServiceOptions();
  v110 = a2;
  v20 = a2 + *(int *)(v109 + 40);
  LOBYTE(v116) = *(_BYTE *)(v20 + 144);
  v111 = (*(uint64_t (**)(uint64_t, _QWORD **, uint64_t, uint64_t))(v18 + 16))(v19, &v116, v17, v18);
  swift_bridgeObjectRelease();
  v21 = v120;
  __swift_project_boxed_opaque_existential_1(v118, v119);
  sub_1BB345AD0(a1);
  v101 = v20;
  v22 = *(_BYTE *)(v20 + 145);
  v23 = (_QWORD *)a1;
  LOBYTE(v116) = v22;
  v107 = (_QWORD *)(*(uint64_t (**)(void))(v21 + 24))();
  swift_bridgeObjectRelease();
  v24 = v119;
  v25 = v120;
  __swift_project_boxed_opaque_existential_1(v118, v119);
  v26 = sub_1BB345C3C(a1);
  v27 = sub_1BB01AC38(v26);
  v112 = v4;
  swift_bridgeObjectRelease();
  v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v27, v24, v25);
  v29 = (uint64_t)v104;
  v106 = (_QWORD *)v28;
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8((uint64_t)v115, v29, (uint64_t (*)(_QWORD))sub_1BB3469B8);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v105 + 48))(v29, 1, v113);
  v31 = MEMORY[0x1E0DEB418];
  v32 = MEMORY[0x1E0DEB490];
  v115 = v13;
  v108 = (_QWORD *)a1;
  if (v30 == 1)
  {
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))sub_1BB3469B8);
    v33 = (_QWORD *)a1;
    v34 = (_QWORD *)v111;
    goto LABEL_7;
  }
  v35 = v103;
  sub_1BA5193C4(v29, v103, (uint64_t (*)(_QWORD))type metadata accessor for FeedPersonalizationClusteringRules);
  v36 = *(char **)(v111 + 16);
  v37 = (char *)v23[2];
  v33 = v23;
  v34 = (_QWORD *)v111;
  if (v36 != v37 || *(_BYTE *)(v35 + 24) == 1)
  {
    v38 = v35;
LABEL_6:
    sub_1BA4A2E80(v38, (uint64_t (*)(_QWORD))type metadata accessor for FeedPersonalizationClusteringRules);
    goto LABEL_7;
  }
  v57 = *(_QWORD **)(v35 + 16);
  if ((uint64_t)v57 < (uint64_t)v36)
  {
    v105 = *(_QWORD *)(v110 + *(int *)(v109 + 52));
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v100 = v58;
    v59 = swift_allocObject();
    v97 = xmmword_1BB87FC80;
    *(_OWORD *)(v59 + 16) = xmmword_1BB87FC80;
    v60 = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v59 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v59 + 64) = v32;
    *(_QWORD *)(v59 + 32) = v36;
    v61 = *(unsigned __int8 *)(v35 + 8);
    v99 = *(_QWORD **)v35;
    v116 = v99;
    v98 = v61;
    v117 = v61;
    sub_1BA4AD288(0, &qword_1ED3B9740, v60, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v62 = sub_1BB872A00();
    v104 = v36;
    v64 = v63;
    v65 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v59 + 96) = MEMORY[0x1E0DEA968];
    v66 = sub_1BA6A2D8C();
    *(_QWORD *)(v59 + 104) = v66;
    *(_QWORD *)(v59 + 72) = v62;
    *(_QWORD *)(v59 + 80) = v64;
    v67 = (int64_t)v104;
    v116 = v57;
    v117 = 0;
    v68 = sub_1BB872A00();
    *(_QWORD *)(v59 + 136) = v65;
    *(_QWORD *)(v59 + 144) = v66;
    *(_QWORD *)(v59 + 112) = v68;
    *(_QWORD *)(v59 + 120) = v69;
    v70 = sub_1BB87330C();
    sub_1BB86EF44("Slot transform will attempt smarter placement personalization on %ld resolutions with min %{public}@ and max %{public}@", 119, 2, &dword_1BA493000, v105, v70, v59);
    swift_bridgeObjectRelease();
    v71 = v119;
    v72 = v120;
    v73 = __swift_project_boxed_opaque_existential_1(v118, v119);
    v74 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v67)
    {
      v94 = v73;
      v95 = v72;
      v96 = v71;
      v116 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1BAC7A4C0(0, v67, 0);
      v13 = v115;
      v74 = v116;
      v75 = (__int128 *)(v111 + 32);
      v76 = v67;
      do
      {
        v113 = *v75;
        v116 = v74;
        v78 = v74[2];
        v77 = v74[3];
        swift_unknownObjectRetain();
        v79 = *((id *)&v113 + 1);
        if (v78 >= v77 >> 1)
        {
          sub_1BAC7A4C0(v77 > 1, v78 + 1, 1);
          v74 = v116;
        }
        v74[2] = v78 + 1;
        v80 = &v74[3 * v78];
        *((_OWORD *)v80 + 2) = v113;
        v80[6] = 0;
        ++v75;
        --v76;
      }
      while (v76);
      v33 = v108;
      v34 = (_QWORD *)v111;
      v71 = v96;
      v72 = v95;
    }
    else
    {
      v13 = v115;
      v34 = (_QWORD *)v111;
    }
    LOWORD(v116) = *(unsigned __int8 *)(v101 + 144);
    v81 = (*(uint64_t (**)(_QWORD *, _QWORD **, uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v74, &v116, 1, v103, v71, v72);
    swift_bridgeObjectRelease();
    v82 = sub_1BB346A18(v81, v110, (uint64_t)v34);
    swift_bridgeObjectRelease();
    v116 = v33;
    sub_1BACCDD38();
    sub_1BA4A2870((unint64_t *)&qword_1ED3C03E8, (uint64_t (*)(uint64_t))sub_1BACCDD38, MEMORY[0x1E0DEAF38]);
    sub_1BA4A2870(&qword_1ED3BBA30, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, (uint64_t)&protocol conformance descriptor for FormatContentSlotItemResolution);
    v83 = sub_1BB872BBC();
    v84 = v112;
    v52 = (_QWORD *)sub_1BB349240(v82, v83);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v98)
      v85 = 1;
    else
      v85 = (uint64_t)v99;
    v86 = v52[2];
    if (v86 >= v85)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v90 = swift_allocObject();
      *(_OWORD *)(v90 + 16) = xmmword_1BB87A390;
      v91 = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v90 + 56) = MEMORY[0x1E0DEB418];
      v92 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v90 + 64) = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v90 + 72) = v86;
      *(_QWORD *)(v90 + 32) = v104;
      *(_QWORD *)(v90 + 96) = v91;
      *(_QWORD *)(v90 + 104) = v92;
      sub_1BB87330C();
      sub_1BB86EF44("Slot transform did smarter placement personalization on %ld resolutions and best resolved %ld", v93, v94);
      swift_bridgeObjectRelease();
      sub_1BA4A2E80(v103, (uint64_t (*)(_QWORD))type metadata accessor for FeedPersonalizationClusteringRules);
LABEL_17:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
      return (uint64_t)v52;
    }
    v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = v97;
    *(_QWORD *)(v87 + 56) = MEMORY[0x1E0DEB418];
    v112 = v84;
    v88 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v87 + 64) = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v87 + 32) = v104;
    swift_bridgeObjectRelease();
    v89 = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v87 + 96) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v87 + 104) = v88;
    *(_QWORD *)(v87 + 72) = v86;
    v32 = v88;
    v31 = v89;
    *(_QWORD *)(v87 + 136) = v89;
    *(_QWORD *)(v87 + 144) = v32;
    *(_QWORD *)(v87 + 112) = v85;
    sub_1BB87330C();
    sub_1BB86EF44("Slot transform did smarter placement personalization on %ld resolutions and best resolved %ld but did not meet the required minClusterSize of %ld, will fallback to top N personalization", v93, v94, v95);
    swift_bridgeObjectRelease();
    v38 = v103;
    goto LABEL_6;
  }
  sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for FeedPersonalizationClusteringRules);
  v31 = MEMORY[0x1E0DEB418];
LABEL_7:
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1BB87CE70;
  v40 = v33[2];
  *(_QWORD *)(v39 + 56) = v31;
  *(_QWORD *)(v39 + 64) = v32;
  *(_QWORD *)(v39 + 32) = v40;
  sub_1BB87330C();
  sub_1BB86EF44("Slot transform will use basic personalization on %ld resolutions", v93);
  swift_bridgeObjectRelease();
  v116 = v34;
  v41 = MEMORY[0x1E0DEAEC8];
  sub_1BA4AD288(0, &qword_1ED3CF6E8, (uint64_t)&type metadata for FeedScoredHeadline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B5A14((unint64_t *)&unk_1ED3CF6F0, &qword_1ED3CF6E8, (uint64_t)&type metadata for FeedScoredHeadline);
  sub_1BAB4FB34();
  v42 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  v116 = v107;
  sub_1BA4AD288(0, &qword_1ED3CF6D0, (uint64_t)&type metadata for FeedScoredIssue, (uint64_t (*)(_QWORD, uint64_t))v41);
  sub_1BA6B5A14((unint64_t *)&unk_1ED3CF6D8, &qword_1ED3CF6D0, (uint64_t)&type metadata for FeedScoredIssue);
  sub_1BAF340C4();
  v43 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  v116 = v106;
  sub_1BA4AD288(0, &qword_1ED3CF718, (uint64_t)&type metadata for FeedScoredTag, (uint64_t (*)(_QWORD, uint64_t))v41);
  sub_1BA6B5A14(&qword_1ED3CF720, &qword_1ED3CF718, (uint64_t)&type metadata for FeedScoredTag);
  sub_1BB3469D4();
  v44 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45 = v112;
  v46 = (_QWORD *)sub_1BB3490CC((uint64_t)v108, v42, v43, v44);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v116 = v46;
  swift_bridgeObjectRetain();
  sub_1BB34732C(&v116);
  if (!v45)
  {
    swift_bridgeObjectRelease();
    v47 = v116;
    v48 = v116[2];
    if (v48)
    {
      v112 = 0;
      v116 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1BAC7AC18(0, v48, 0);
      v49 = *(unsigned __int8 *)(v102 + 80);
      *(_QWORD *)&v113 = v47;
      v50 = (uint64_t)v47 + ((v49 + 32) & ~v49);
      v51 = *(_QWORD *)(v102 + 72);
      v52 = v116;
      do
      {
        sub_1BA4C2DD8(v50, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
        sub_1BA4C2DD8((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
        sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7AC18(0, v52[2] + 1, 1);
          v52 = v116;
        }
        v54 = v52[2];
        v53 = v52[3];
        if (v54 >= v53 >> 1)
        {
          sub_1BAC7AC18(v53 > 1, v54 + 1, 1);
          v52 = v116;
        }
        v52[2] = v54 + 1;
        v55 = (uint64_t)v52
            + ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80))
            + *(_QWORD *)(v114 + 72) * v54;
        v13 = v115;
        sub_1BA5193C4((uint64_t)v115, v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
        v50 += v51;
        --v48;
      }
      while (v48);
      swift_release();
    }
    else
    {
      swift_release();
      v52 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    goto LABEL_17;
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ScoredFormatContentSlotItemResolution()
{
  uint64_t result;

  result = qword_1ED3CEC58;
  if (!qword_1ED3CEC58)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB3469B8(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3C23A0, (uint64_t (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BB3469D4()
{
  unint64_t result;

  result = qword_1ED3C63C8;
  if (!qword_1ED3C63C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedScoredTag, &type metadata for FeedScoredTag);
    atomic_store(result, (unint64_t *)&qword_1ED3C63C8);
  }
  return result;
}

uint64_t sub_1BB346A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void **v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  if (a1)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      v5 = (void **)(a1 + 40);
      v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v8 = *v5;
        v9 = swift_dynamicCastObjCProtocolConditional();
        if (v9)
        {
          v10 = v9;
          swift_unknownObjectRetain();
          v11 = v8;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v6 = sub_1BB38F890(0, v6[2] + 1, 1, v6);
          v13 = v6[2];
          v12 = v6[3];
          if (v13 >= v12 >> 1)
            v6 = sub_1BB38F890((_QWORD *)(v12 > 1), v13 + 1, 1, v6);
          v6[2] = v13 + 1;
          v7 = &v6[2 * v13];
          v7[4] = v10;
          v7[5] = v11;
        }
        v5 += 3;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v15 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
    v16 = sub_1BB87330C();
    sub_1BB86EF44("Slot transform smarter placement failed to return scored items, fallback to scored headlines sorting", 100, 2, &dword_1BA493000, v15, v16, MEMORY[0x1E0DEE9D8]);
    v18 = a3;
    swift_bridgeObjectRetain();
    sub_1BB3472C4(&v18);
    return v18;
  }
  return (uint64_t)v6;
}

void sub_1BB346BB4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  char *v16;
  _QWORD v17[8];

  v17[4] = a5;
  v17[1] = a3;
  v17[2] = a4;
  v17[3] = a2;
  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v6);
  v7 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1E0C80A78](v8);
  v17[0] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v13);
  v17[6] = a1;
  sub_1BA4C2DD8(a1, (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  v16 = (char *)&loc_1BB346D48 + *((int *)qword_1BB3472A0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1BB346D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  swift_unknownObjectRelease();
  v1 = *(_QWORD *)(v0 - 112);
  sub_1BA4C2DD8(*(_QWORD *)(v0 - 96), v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
  result = type metadata accessor for ScoredFormatContentSlotItemResolution();
  *(_QWORD *)(v1 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t sub_1BB3472C4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BACAB99C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BB3473AC(v5);
  *a1 = v2;
  return result;
}

void sub_1BB34732C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for ScoredFormatContentSlotItemResolution() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BACAB9B0(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1BB347B90(v5);
  *a1 = v3;
}

uint64_t sub_1BB3473AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void **v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  double v45;
  double v46;
  double v47;
  double v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  char *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;

  v2 = v1;
  v4 = a1[1];
  result = sub_1BB8741F4();
  if (result < v4)
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 >= -1)
    {
      v113 = result;
      v109 = a1;
      if (v4 < 2)
      {
        v9 = MEMORY[0x1E0DEE9D8];
        v117 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
        if (v4 != 1)
        {
          v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
          v12 = (char *)MEMORY[0x1E0DEE9D8];
          if (v13 < 2)
            goto LABEL_113;
          goto LABEL_101;
        }
        v112 = MEMORY[0x1E0DEE9D8];
        v118 = v1;
      }
      else
      {
        v118 = v1;
        v7 = v6 >> 1;
        v8 = sub_1BB872E74();
        *(_QWORD *)(v8 + 16) = v7;
        v112 = v8;
        v117 = (char *)(v8 + 32);
      }
      v10 = 0;
      v11 = *a1;
      v110 = *a1 - 16;
      v111 = *a1 + 40;
      v12 = (char *)MEMORY[0x1E0DEE9D8];
      v116 = v4;
      v120 = *a1;
      while (1)
      {
        v14 = v10++;
        v115 = v14;
        if (v10 < v4)
        {
          v15 = v12;
          v16 = *(void **)(v11 + 16 * v10 + 8);
          v17 = *(void **)(v11 + 16 * v14 + 8);
          swift_unknownObjectRetain();
          v18 = v16;
          swift_unknownObjectRetain();
          v19 = v17;
          objc_msgSend(v18, sel_sortingScore);
          v21 = v20;
          objc_msgSend(v19, sel_sortingScore);
          v23 = v22;

          v4 = v116;
          swift_unknownObjectRelease();

          swift_unknownObjectRelease();
          v10 = v14 + 2;
          if (v14 + 2 < v116)
          {
            v24 = (void **)(v111 + 16 * v14);
            while (1)
            {
              v25 = *v24;
              v26 = *(v24 - 2);
              swift_unknownObjectRetain();
              v27 = v25;
              swift_unknownObjectRetain();
              v28 = v26;
              objc_msgSend(v27, sel_sortingScore);
              v30 = v29;
              objc_msgSend(v28, sel_sortingScore);
              v32 = v31;

              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              if (v23 <= v21 == v32 > v30)
                break;
              ++v10;
              v24 += 2;
              v4 = v116;
              if (v116 == v10)
              {
                v10 = v116;
                goto LABEL_23;
              }
            }
            v4 = v116;
LABEL_23:
            v14 = v115;
          }
          v12 = v15;
          v11 = v120;
          if (v23 <= v21)
          {
            if (v10 < v14)
              goto LABEL_137;
            if (v14 < v10)
            {
              v33 = (__int128 *)(v110 + 16 * v10);
              v34 = v10;
              v35 = v14;
              v36 = (__int128 *)(v120 + 16 * v14);
              do
              {
                if (v35 != --v34)
                {
                  if (!v120)
                    goto LABEL_142;
                  v37 = *v36;
                  *v36 = *v33;
                  *v33 = v37;
                }
                ++v35;
                --v33;
                ++v36;
              }
              while (v35 < v34);
            }
          }
        }
        if (v10 < v4)
        {
          if (__OFSUB__(v10, v14))
            goto LABEL_135;
          if (v10 - v14 < v113)
          {
            if (__OFADD__(v14, v113))
              goto LABEL_138;
            if (v14 + v113 >= v4)
              v38 = v4;
            else
              v38 = v14 + v113;
            if (v38 < v14)
            {
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
              break;
            }
            if (v10 != v38)
            {
              v108 = v12;
              v39 = v110 + 16 * v10;
              v114 = v38;
              do
              {
                v40 = *(_OWORD *)(v11 + 16 * v10);
                v41 = v39;
                while (1)
                {
                  v119 = (void *)*((_QWORD *)&v40 + 1);
                  v42 = *(void **)(v41 + 8);
                  swift_unknownObjectRetain();
                  v43 = v119;
                  swift_unknownObjectRetain();
                  v44 = v42;
                  objc_msgSend(v43, sel_sortingScore);
                  v46 = v45;
                  objc_msgSend(v44, sel_sortingScore);
                  v48 = v47;

                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  if (v48 > v46)
                    break;
                  v11 = v120;
                  if (!v120)
                    goto LABEL_140;
                  v40 = *(_OWORD *)(v41 + 16);
                  *(_OWORD *)(v41 + 16) = *(_OWORD *)v41;
                  *(_OWORD *)v41 = v40;
                  v41 -= 16;
                  if (v10 == ++v14)
                    goto LABEL_43;
                }
                v11 = v120;
LABEL_43:
                ++v10;
                v39 += 16;
                v14 = v115;
              }
              while (v10 != v114);
              v10 = v114;
              v12 = v108;
            }
          }
        }
        if (v10 < v14)
          goto LABEL_130;
        v49 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v12 = v49;
        else
          v12 = sub_1BACAA368(0, *((_QWORD *)v49 + 2) + 1, 1, v49);
        v51 = *((_QWORD *)v12 + 2);
        v50 = *((_QWORD *)v12 + 3);
        v13 = v51 + 1;
        v11 = v120;
        if (v51 >= v50 >> 1)
        {
          v100 = sub_1BACAA368((char *)(v50 > 1), v51 + 1, 1, v12);
          v11 = v120;
          v12 = v100;
        }
        *((_QWORD *)v12 + 2) = v13;
        v52 = v12 + 32;
        v53 = &v12[16 * v51 + 32];
        *(_QWORD *)v53 = v14;
        *((_QWORD *)v53 + 1) = v10;
        if (v51)
        {
          while (1)
          {
            v54 = v13 - 1;
            if (v13 >= 4)
            {
              v59 = &v52[16 * v13];
              v60 = *((_QWORD *)v59 - 8);
              v61 = *((_QWORD *)v59 - 7);
              v65 = __OFSUB__(v61, v60);
              v62 = v61 - v60;
              if (v65)
                goto LABEL_119;
              v64 = *((_QWORD *)v59 - 6);
              v63 = *((_QWORD *)v59 - 5);
              v65 = __OFSUB__(v63, v64);
              v57 = v63 - v64;
              v58 = v65;
              if (v65)
                goto LABEL_120;
              v66 = v13 - 2;
              v67 = &v52[16 * v13 - 32];
              v69 = *(_QWORD *)v67;
              v68 = *((_QWORD *)v67 + 1);
              v65 = __OFSUB__(v68, v69);
              v70 = v68 - v69;
              if (v65)
                goto LABEL_122;
              v65 = __OFADD__(v57, v70);
              v71 = v57 + v70;
              if (v65)
                goto LABEL_125;
              if (v71 >= v62)
              {
                v89 = &v52[16 * v54];
                v91 = *(_QWORD *)v89;
                v90 = *((_QWORD *)v89 + 1);
                v65 = __OFSUB__(v90, v91);
                v92 = v90 - v91;
                if (v65)
                  goto LABEL_129;
                v82 = v57 < v92;
                goto LABEL_87;
              }
            }
            else
            {
              if (v13 != 3)
              {
                v83 = *((_QWORD *)v12 + 4);
                v84 = *((_QWORD *)v12 + 5);
                v65 = __OFSUB__(v84, v83);
                v76 = v84 - v83;
                v77 = v65;
                goto LABEL_81;
              }
              v56 = *((_QWORD *)v12 + 4);
              v55 = *((_QWORD *)v12 + 5);
              v65 = __OFSUB__(v55, v56);
              v57 = v55 - v56;
              v58 = v65;
            }
            if ((v58 & 1) != 0)
              goto LABEL_121;
            v66 = v13 - 2;
            v72 = &v52[16 * v13 - 32];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v75 = __OFSUB__(v73, v74);
            v76 = v73 - v74;
            v77 = v75;
            if (v75)
              goto LABEL_124;
            v78 = &v52[16 * v54];
            v80 = *(_QWORD *)v78;
            v79 = *((_QWORD *)v78 + 1);
            v65 = __OFSUB__(v79, v80);
            v81 = v79 - v80;
            if (v65)
              goto LABEL_127;
            if (__OFADD__(v76, v81))
              goto LABEL_128;
            if (v76 + v81 >= v57)
            {
              v82 = v57 < v81;
LABEL_87:
              if (v82)
                v54 = v66;
              goto LABEL_89;
            }
LABEL_81:
            if ((v77 & 1) != 0)
              goto LABEL_123;
            v85 = &v52[16 * v54];
            v87 = *(_QWORD *)v85;
            v86 = *((_QWORD *)v85 + 1);
            v65 = __OFSUB__(v86, v87);
            v88 = v86 - v87;
            if (v65)
              goto LABEL_126;
            if (v88 < v76)
              goto LABEL_15;
LABEL_89:
            v93 = v54 - 1;
            if (v54 - 1 >= v13)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
              goto LABEL_139;
            }
            if (!v11)
              goto LABEL_141;
            v94 = v12;
            v95 = &v52[16 * v93];
            v96 = *(_QWORD *)v95;
            v97 = &v52[16 * v54];
            v98 = *((_QWORD *)v97 + 1);
            sub_1BB3488DC((char *)(v11 + 16 * *(_QWORD *)v95), (char *)(v11 + 16 * *(_QWORD *)v97), v11 + 16 * v98, v117);
            if (v118)
            {
              v9 = v112;
              goto LABEL_113;
            }
            if (v98 < v96)
              goto LABEL_116;
            if (v54 > *((_QWORD *)v94 + 2))
              goto LABEL_117;
            *(_QWORD *)v95 = v96;
            *(_QWORD *)&v52[16 * v93 + 8] = v98;
            v99 = *((_QWORD *)v94 + 2);
            if (v54 >= v99)
              goto LABEL_118;
            v13 = v99 - 1;
            memmove(&v52[16 * v54], v97 + 16, 16 * (v99 - 1 - v54));
            v12 = v94;
            *((_QWORD *)v94 + 2) = v99 - 1;
            v11 = v120;
            if (v99 <= 2)
              goto LABEL_15;
          }
        }
        v13 = 1;
LABEL_15:
        v4 = v116;
        if (v10 >= v116)
        {
          v2 = v118;
          v9 = v112;
          if (v13 < 2)
          {
LABEL_113:
            swift_bridgeObjectRelease();
            *(_QWORD *)(v9 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
LABEL_101:
          v101 = *v109;
          while (1)
          {
            v102 = v13 - 2;
            if (v13 < 2)
              goto LABEL_131;
            if (!v101)
              goto LABEL_143;
            v103 = v12;
            v104 = *(_QWORD *)&v12[16 * v102 + 32];
            v105 = *(_QWORD *)&v12[16 * v13 + 24];
            sub_1BB3488DC((char *)(v101 + 16 * v104), (char *)(v101 + 16 * *(_QWORD *)&v12[16 * v13 + 16]), v101 + 16 * v105, v117);
            if (v2)
              goto LABEL_113;
            if (v105 < v104)
              goto LABEL_132;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v103 = sub_1BACAB464((uint64_t)v103);
            if (v102 >= *((_QWORD *)v103 + 2))
              goto LABEL_133;
            v106 = &v103[16 * v102 + 32];
            *(_QWORD *)v106 = v104;
            *((_QWORD *)v106 + 1) = v105;
            v107 = *((_QWORD *)v103 + 2);
            if (v13 > v107)
              goto LABEL_134;
            memmove(&v103[16 * v13 + 16], &v103[16 * v13 + 32], 16 * (v107 - v13));
            v12 = v103;
            *((_QWORD *)v103 + 2) = v107 - 1;
            v13 = v107 - 1;
            if (v107 <= 2)
              goto LABEL_113;
          }
        }
      }
    }
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  if (v4 < 0)
    goto LABEL_136;
  if (v4)
    return sub_1BB348570(0, v4, 1, a1);
  return result;
}

void sub_1BB347B90(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v134 = type metadata accessor for ScoredFormatContentSlotItemResolution();
  v128 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v125 = (uint64_t)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v135 = (uint64_t)&v120 - v5;
  MEMORY[0x1E0C80A78](v6);
  v132 = (uint64_t)&v120 - v7;
  MEMORY[0x1E0C80A78](v8);
  v131 = (uint64_t)&v120 - v9;
  v10 = a1[1];
  v11 = sub_1BB8741F4();
  if (v11 >= v10)
  {
    if (v10 < 0)
      goto LABEL_138;
    if (v10)
      sub_1BB3486A4(0, v10, 1, a1);
    return;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_146;
  v133 = a1;
  v122 = v11;
  v129 = v1;
  if (v10 < 2)
  {
    v16 = (char *)MEMORY[0x1E0DEE9D8];
    v127 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
    v121 = MEMORY[0x1E0DEE9D8];
    if (v10 != 1)
    {
      v18 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_104:
      v112 = v16;
      if (v18 >= 2)
      {
        v113 = *v133;
        do
        {
          v114 = v18 - 2;
          if (v18 < 2)
            goto LABEL_133;
          if (!v113)
            goto LABEL_145;
          v115 = *(_QWORD *)&v112[16 * v114 + 32];
          v116 = *(_QWORD *)&v112[16 * v18 + 24];
          v117 = v129;
          sub_1BB348C50(v113 + *(_QWORD *)(v128 + 72) * v115, v113 + *(_QWORD *)(v128 + 72) * *(_QWORD *)&v112[16 * v18 + 16], v113 + *(_QWORD *)(v128 + 72) * v116, v127);
          v129 = v117;
          if (v117)
            break;
          if (v116 < v115)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v112 = sub_1BACAB464((uint64_t)v112);
          if (v114 >= *((_QWORD *)v112 + 2))
            goto LABEL_135;
          v118 = &v112[16 * v114 + 32];
          *(_QWORD *)v118 = v115;
          *((_QWORD *)v118 + 1) = v116;
          v119 = *((_QWORD *)v112 + 2);
          if (v18 > v119)
            goto LABEL_136;
          memmove(&v112[16 * v18 + 16], &v112[16 * v18 + 32], 16 * (v119 - v18));
          *((_QWORD *)v112 + 2) = v119 - 1;
          v18 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v121 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_1BB872E74();
    *(_QWORD *)(v14 + 16) = v13;
    v15 = *(unsigned __int8 *)(v128 + 80);
    v121 = v14;
    v127 = v14 + ((v15 + 32) & ~v15);
  }
  v17 = 0;
  v16 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v19 = v17;
    v20 = v17 + 1;
    if (v17 + 1 >= v10)
    {
      ++v17;
      v21 = v133;
    }
    else
    {
      v21 = v133;
      v22 = *v133;
      v130 = v22;
      v23 = *(_QWORD *)(v128 + 72);
      v24 = v131;
      sub_1BA4C2DD8(v22 + v23 * v20, v131, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
      v25 = v22 + v23 * v19;
      v26 = v132;
      sub_1BA4C2DD8(v25, v132, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
      v27 = *(int *)(v134 + 20);
      v28 = *(double *)(v24 + v27);
      v29 = *(double *)(v26 + v27);
      sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
      sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
      v17 = v19 + 2;
      v136 = v23;
      if (v19 + 2 >= v10)
      {
        v38 = v23;
        if (v29 > v28)
          goto LABEL_39;
      }
      else
      {
        v126 = v19;
        v123 = v16;
        v30 = v23 * v20;
        v31 = v130;
        v32 = v23 * v17;
        while (1)
        {
          v33 = v10;
          v34 = v17;
          v35 = v131;
          sub_1BA4C2DD8(v31 + v32, v131, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          v36 = v132;
          sub_1BA4C2DD8(v31 + v30, v132, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          v37 = *(double *)(v36 + *(int *)(v134 + 20)) > *(double *)(v35 + *(int *)(v134 + 20));
          sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          if (v29 <= v28 == v37)
            break;
          ++v17;
          v38 = v136;
          v31 += v136;
          v10 = v33;
          if (v33 == v34 + 1)
          {
            v17 = v33;
            v21 = v133;
            v16 = v123;
            v19 = v126;
            if (v29 <= v28)
              goto LABEL_26;
            goto LABEL_39;
          }
        }
        v21 = v133;
        v16 = v123;
        v19 = v126;
        v10 = v33;
        v38 = v136;
        if (v29 > v28)
          goto LABEL_39;
      }
LABEL_26:
      if (v17 < v19)
        goto LABEL_139;
      if (v19 < v17)
      {
        v123 = v16;
        v124 = v10;
        v39 = 0;
        v40 = v38 * (v17 - 1);
        v41 = v17 * v38;
        v42 = v19;
        v126 = v19;
        v43 = v19 * v38;
        do
        {
          if (v42 != v17 + v39 - 1)
          {
            v44 = v130;
            if (!v130)
              goto LABEL_144;
            v45 = v130 + v43;
            sub_1BA5193C4(v130 + v43, v125, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
            if (v43 < v40 || v45 >= v44 + v41)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v40)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_1BA5193C4(v125, v44 + v40, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
            v21 = v133;
            v38 = v136;
          }
          ++v42;
          --v39;
          v40 -= v38;
          v41 -= v38;
          v43 += v38;
        }
        while (v42 < v17 + v39);
        v16 = v123;
        v10 = v124;
        v19 = v126;
      }
    }
LABEL_39:
    if (v17 >= v10)
      goto LABEL_56;
    if (__OFSUB__(v17, v19))
      goto LABEL_137;
    if (v17 - v19 >= v122)
      goto LABEL_56;
    if (__OFADD__(v19, v122))
      goto LABEL_140;
    v46 = v19 + v122 >= v10 ? v10 : v19 + v122;
    if (v46 < v19)
      break;
    if (v17 != v46)
    {
      v123 = v16;
      v124 = v46;
      v47 = *(_QWORD *)(v128 + 72);
      v136 = v47 * (v17 - 1);
      v130 = v47;
      v48 = v17 * v47;
      v126 = v19;
      do
      {
        v49 = 0;
        v50 = v19;
        do
        {
          v51 = *v21;
          v52 = v131;
          sub_1BA4C2DD8(v48 + v49 + *v21, v131, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          v53 = v136 + v49 + v51;
          v54 = v132;
          sub_1BA4C2DD8(v53, v132, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          v55 = *(int *)(v134 + 20);
          v56 = *(double *)(v52 + v55);
          v57 = *(double *)(v54 + v55);
          sub_1BA4A2E80(v54, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          if (v57 > v56)
            break;
          v58 = *v21;
          if (!*v21)
            goto LABEL_142;
          v59 = v58 + v136 + v49;
          sub_1BA5193C4(v58 + v48 + v49, v135, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          swift_arrayInitWithTakeFrontToBack();
          sub_1BA5193C4(v135, v59, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          v49 -= v130;
          ++v50;
          v21 = v133;
        }
        while (v17 != v50);
        ++v17;
        v136 += v130;
        v48 += v130;
        v19 = v126;
      }
      while (v17 != v124);
      v17 = v124;
      v16 = v123;
    }
LABEL_56:
    if (v17 < v19)
      goto LABEL_132;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1BACAA368(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v61 = *((_QWORD *)v16 + 2);
    v60 = *((_QWORD *)v16 + 3);
    v18 = v61 + 1;
    if (v61 >= v60 >> 1)
      v16 = sub_1BACAA368((char *)(v60 > 1), v61 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18;
    v62 = v16 + 32;
    v63 = &v16[16 * v61 + 32];
    *(_QWORD *)v63 = v19;
    *((_QWORD *)v63 + 1) = v17;
    if (v61)
    {
      while (1)
      {
        v64 = v18 - 1;
        if (v18 >= 4)
        {
          v69 = &v62[16 * v18];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_121;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_122;
          v76 = v18 - 2;
          v77 = &v62[16 * v18 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_124;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_127;
          if (v81 >= v72)
          {
            v99 = &v62[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_131;
            v92 = v67 < v102;
            goto LABEL_93;
          }
        }
        else
        {
          if (v18 != 3)
          {
            v93 = *((_QWORD *)v16 + 4);
            v94 = *((_QWORD *)v16 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_87;
          }
          v66 = *((_QWORD *)v16 + 4);
          v65 = *((_QWORD *)v16 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_123;
        v76 = v18 - 2;
        v82 = &v62[16 * v18 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_126;
        v88 = &v62[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_129;
        if (__OFADD__(v86, v91))
          goto LABEL_130;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_93:
          if (v92)
            v64 = v76;
          goto LABEL_95;
        }
LABEL_87:
        if ((v87 & 1) != 0)
          goto LABEL_125;
        v95 = &v62[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_128;
        if (v98 < v86)
          goto LABEL_14;
LABEL_95:
        v103 = v17;
        v104 = v64 - 1;
        if (v64 - 1 >= v18)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v133)
          goto LABEL_143;
        v105 = v16;
        v106 = &v62[16 * v104];
        v107 = *(_QWORD *)v106;
        v108 = &v62[16 * v64];
        v109 = *((_QWORD *)v108 + 1);
        v110 = v129;
        sub_1BB348C50(*v133 + *(_QWORD *)(v128 + 72) * *(_QWORD *)v106, *v133 + *(_QWORD *)(v128 + 72) * *(_QWORD *)v108, *v133 + *(_QWORD *)(v128 + 72) * v109, v127);
        v129 = v110;
        if (v110)
          goto LABEL_115;
        if (v109 < v107)
          goto LABEL_118;
        if (v64 > *((_QWORD *)v105 + 2))
          goto LABEL_119;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v62[16 * v104 + 8] = v109;
        v111 = *((_QWORD *)v105 + 2);
        if (v64 >= v111)
          goto LABEL_120;
        v16 = v105;
        v18 = v111 - 1;
        memmove(&v62[16 * v64], v108 + 16, 16 * (v111 - 1 - v64));
        *((_QWORD *)v105 + 2) = v111 - 1;
        v92 = v111 > 2;
        v17 = v103;
        if (!v92)
          goto LABEL_14;
      }
    }
    v18 = 1;
LABEL_14:
    v10 = v133[1];
    if (v17 >= v10)
      goto LABEL_104;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  sub_1BB873EA0();
  __break(1u);
}

uint64_t sub_1BB348570(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  v17 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 16 * a3 - 16;
LABEL_5:
    v7 = *(_OWORD *)(v5 + 16 * v4);
    v8 = v17;
    v19 = v6;
    while (1)
    {
      v18 = (void *)*((_QWORD *)&v7 + 1);
      v9 = *(void **)(v6 + 8);
      swift_unknownObjectRetain();
      v10 = v18;
      swift_unknownObjectRetain();
      v11 = v9;
      objc_msgSend(v10, sel_sortingScore);
      v13 = v12;
      objc_msgSend(v11, sel_sortingScore);
      v15 = v14;

      swift_unknownObjectRelease();
      result = swift_unknownObjectRelease();
      if (v15 > v13)
      {
LABEL_4:
        ++v4;
        v6 = v19 + 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v7 = *(_OWORD *)(v6 + 16);
      *(_OWORD *)(v6 + 16) = *(_OWORD *)v6;
      *(_OWORD *)v6 = v7;
      v6 -= 16;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

void sub_1BB3486A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = a1;
  v31 = type metadata accessor for ScoredFormatContentSlotItemResolution();
  MEMORY[0x1E0C80A78](v31);
  v32 = (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v28 = (uint64_t)&v25 - v9;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - v12;
  v30 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v11 + 72);
    v34 = v14 * (v30 - 1);
    v29 = v14;
    v33 = v14 * v30;
LABEL_5:
    v15 = 0;
    v16 = v27;
    while (1)
    {
      v17 = *a4;
      sub_1BA4C2DD8(v33 + v15 + *a4, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
      v18 = v34 + v15 + v17;
      v19 = v28;
      sub_1BA4C2DD8(v18, v28, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
      v20 = *(int *)(v31 + 20);
      v21 = *(double *)&v13[v20];
      v22 = *(double *)(v19 + v20);
      sub_1BA4A2E80(v19, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
      if (v22 > v21)
      {
LABEL_4:
        v34 += v29;
        v33 += v29;
        if (++v30 == v26)
          return;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v34 + v15;
      sub_1BA5193C4(v23 + v33 + v15, v32, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
      swift_arrayInitWithTakeFrontToBack();
      sub_1BA5193C4(v32, v24, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
      v15 -= v29;
      if (v30 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BB3488DC(char *__src, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  void *v26;
  char *v27;
  void *v28;
  unint64_t v29;
  id v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t result;
  char *v38;
  char *v40;
  char *v41;
  char *v42;
  char *v43;

  v4 = a2;
  v5 = __src;
  v6 = a2 - __src;
  v7 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v7 = a2 - __src;
  v8 = v7 >> 4;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 4;
  v43 = __src;
  v42 = a4;
  if (v8 >= v10 >> 4)
  {
    if (v9 >= -15)
    {
      if (a4 != a2 || &a2[16 * v11] <= a4)
        memmove(a4, a2, 16 * v11);
      v23 = &a4[16 * v11];
      v41 = v23;
      v43 = v4;
      if (v5 < v4 && v9 >= 16)
      {
        v24 = (char *)(a3 - 16);
        v25 = v4;
        while (1)
        {
          v38 = v24 + 16;
          v40 = v4;
          v26 = (void *)*((_QWORD *)v23 - 1);
          v27 = v23 - 16;
          v28 = (void *)*((_QWORD *)v25 - 1);
          v25 -= 16;
          v29 = (unint64_t)v23;
          swift_unknownObjectRetain();
          v30 = v26;
          swift_unknownObjectRetain();
          v31 = v28;
          objc_msgSend(v30, sel_sortingScore);
          v33 = v32;
          objc_msgSend(v31, sel_sortingScore);
          v35 = v34;

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          if (v35 <= v33)
          {
            if (v38 != v40 || v24 >= v40)
              *(_OWORD *)v24 = *(_OWORD *)v25;
            v43 = v25;
            v23 = (char *)v29;
            if (v25 <= v5)
              goto LABEL_43;
          }
          else
          {
            v41 = v27;
            if ((unint64_t)v38 < v29 || (unint64_t)v24 >= v29 || v38 != (char *)v29)
              *(_OWORD *)v24 = *(_OWORD *)v27;
            v25 = v40;
            v23 = v27;
            if (v40 <= v5)
              goto LABEL_43;
          }
          v24 -= 16;
          v4 = v25;
          if (v23 <= a4)
            goto LABEL_43;
        }
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -15)
  {
    if (a4 != __src || &__src[16 * v8] <= a4)
      memmove(a4, __src, 16 * v8);
    v12 = &a4[16 * v8];
    v41 = v12;
    if ((unint64_t)v4 < a3 && v6 >= 16)
    {
      v13 = a4;
      do
      {
        v14 = (void *)*((_QWORD *)v4 + 1);
        v15 = (void *)*((_QWORD *)v13 + 1);
        swift_unknownObjectRetain();
        v16 = v14;
        swift_unknownObjectRetain();
        v17 = v15;
        objc_msgSend(v16, sel_sortingScore);
        v19 = v18;
        objc_msgSend(v17, sel_sortingScore);
        v21 = v20;

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (v21 <= v19)
        {
          v22 = v4 + 16;
          if (v5 < v4 || v5 >= v22 || v5 != v4)
            *(_OWORD *)v5 = *(_OWORD *)v4;
        }
        else
        {
          if (v5 != v13)
            *(_OWORD *)v5 = *(_OWORD *)v13;
          v13 += 16;
          v42 = v13;
          v22 = v4;
        }
        v5 += 16;
        if (v13 >= v12)
          break;
        v4 = v22;
      }
      while ((unint64_t)v22 < a3);
      v43 = v5;
    }
LABEL_43:
    sub_1BACAA47C((void **)&v43, (const void **)&v42, &v41);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB348C50(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  double v22;
  double v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v27;
  unint64_t v29;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  unint64_t v37;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;

  v42 = type metadata accessor for ScoredFormatContentSlotItemResolution();
  MEMORY[0x1E0C80A78](v42);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - v11;
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_70;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_71;
  v16 = (uint64_t)(a2 - a1) / v14;
  v45 = a1;
  v44 = a4;
  v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v29 = a4 + v19;
      v43 = a4 + v19;
      v45 = a2;
      v41 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        v31 = -v14;
        do
        {
          v32 = a3 + v31;
          sub_1BA4C2DD8(v29 + v31, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          v33 = a2 + v31;
          sub_1BA4C2DD8(a2 + v31, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          v34 = *(int *)(v42 + 20);
          v35 = *(double *)&v12[v34];
          v36 = *(double *)&v9[v34];
          sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
          if (v36 <= v35)
          {
            if (a3 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v45 += v31;
          }
          else
          {
            v37 = v43;
            v43 += v31;
            if (a3 < v37 || v32 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v37)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v33 = a2;
          }
          v29 = v43;
          if (v43 <= a4)
            break;
          a2 = v33;
          a3 += v31;
        }
        while (v33 > v41);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v41 = a4 + v18;
    v43 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1BA4C2DD8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
        sub_1BA4C2DD8(a4, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
        v21 = *(int *)(v42 + 20);
        v22 = *(double *)&v12[v21];
        v23 = *(double *)&v9[v21];
        sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
        sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
        v24 = v45;
        if (v23 <= v22)
        {
          v27 = a2 + v14;
          if (v45 < a2 || v45 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 == a2)
          {
            v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v25 = v44 + v14;
          if (v45 < v44 || v45 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 != v44)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v44 = v25;
          v27 = a2;
        }
        v45 = v24 + v14;
        a4 = v44;
        if (v44 >= v41)
          break;
        a2 = v27;
      }
      while (v27 < a3);
    }
LABEL_68:
    sub_1BACAB2B4(&v45, &v44, (uint64_t *)&v43);
    return 1;
  }
LABEL_72:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3490CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = v4;
  v21 = a3;
  v22 = a4;
  v20 = a2;
  v7 = type metadata accessor for ScoredFormatContentSlotItemResolution();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AF50(0, v11, 0);
    v12 = v23;
    v13 = *(_QWORD *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
    v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v15 = *(_QWORD *)(v13 + 72);
    while (1)
    {
      sub_1BB346BB4(v14, v20, v21, v22, (uint64_t)v10);
      if (v5)
        break;
      v5 = 0;
      v23 = v12;
      v17 = *(_QWORD *)(v12 + 16);
      v16 = *(_QWORD *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BAC7AF50(v16 > 1, v17 + 1, 1);
        v12 = v23;
      }
      *(_QWORD *)(v12 + 16) = v17 + 1;
      sub_1BA5193C4((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for ScoredFormatContentSlotItemResolution);
      v14 += v15;
      if (!--v11)
        return v12;
    }
    swift_release();
  }
  return v12;
}

unint64_t sub_1BB349240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  sub_1BB349534(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatContentSlotItemResolution();
  v9 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  v37 = v9;
  MEMORY[0x1E0C80A78](v8);
  v35 = (uint64_t)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v34 = (uint64_t)v33 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v33[1] = v2;
  swift_bridgeObjectRetain();
  v14 = MEMORY[0x1E0DEE9D8];
  v33[0] = a1;
  v15 = (void **)(a1 + 40);
  do
  {
    v38 = v14;
    v16 = (uint64_t)v7;
    v18 = *(v15 - 1);
    v17 = *v15;
    swift_unknownObjectRetain_n();
    v19 = v17;
    v20 = objc_msgSend(v18, sel_articleID, v33[0]);
    v21 = sub_1BB8729A0();
    v23 = v22;

    swift_unknownObjectRelease();
    if (*(_QWORD *)(a2 + 16) && (v24 = sub_1BA6E35A8(v21, v23), (v25 & 1) != 0))
    {
      v7 = (char *)v16;
      sub_1BA4C2DD8(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v37 + 72) * v24, v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      v26 = 0;
    }
    else
    {
      v26 = 1;
      v7 = (char *)v16;
    }
    v27 = v36;
    v28 = v37;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v7, v26, 1, v36);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v7, 1, v27) == 1)
    {
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BB349534);
      v14 = v38;
    }
    else
    {
      v29 = v34;
      sub_1BA5193C4((uint64_t)v7, v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      sub_1BA5193C4(v29, v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      v14 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1BB392734(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
      v31 = *(_QWORD *)(v14 + 16);
      v30 = *(_QWORD *)(v14 + 24);
      if (v31 >= v30 >> 1)
        v14 = sub_1BB392734(v30 > 1, v31 + 1, 1, v14);
      *(_QWORD *)(v14 + 16) = v31 + 1;
      sub_1BA5193C4(v35, v14+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
    }
    v15 += 2;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1BB349534(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A0518, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB349550(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_unknownObjectRelease();

  }
}

uint64_t sub_1BB34957C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    type metadata accessor for FormatContentSlotItemObject.Resolved();
    v5 = (char *)&loc_1BB3495E8 + 4 * byte_1BB90AF99[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_1BB34A614(id *a1)
{
  int *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  type metadata accessor for FormatContentSlotItemObject.Resolved();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 4u:
    case 5u:
      swift_unknownObjectRelease();
      break;
    case 1u:

      break;
    case 3u:
      swift_bridgeObjectRelease();
      v2 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      v3 = (char *)a1 + v2[5];
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for FormatWebEmbed();
      v5 = &v3[*(int *)(v4 + 20)];
      v6 = sub_1BB86C67C();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = *(void (**)(char *, uint64_t))(v7 + 8);
      v8(v5, v6);
      v9 = &v3[*(int *)(v4 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
        v8(v9, v6);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v10 = (char *)a1 + v2[8];
      v11 = type metadata accessor for WebEmbedDataVisualization();
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          v12 = type metadata accessor for GenericDataVisualization();
          v8(&v10[*(int *)(v12 + 20)], v6);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      v38 = (char *)a1 + v2[9];
      sub_1BA6C5A68();
      v40 = v39;
      v41 = *(_QWORD *)(v39 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v38, 1, v39))
        (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
      break;
    case 6u:
      swift_unknownObjectRelease();
      v13 = (char *)a1 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_23;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v18 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v13, 1, v18))
            {
              v19 = sub_1BB86BEC0();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v13, v19);
            }
          }
          v20 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v21 = &v13[*(int *)(v20 + 20)];
          v22 = swift_getEnumCaseMultiPayload();
          if (v22 == 5 || v22 == 4)
          {
            v23 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v21, 1, v23))
            {
              v24 = sub_1BB86BEC0();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v21, v24);
            }
          }
          v13 += *(int *)(v20 + 24);
LABEL_23:
          v25 = swift_getEnumCaseMultiPayload();
          if (v25 == 5 || v25 == 4)
          {
            v26 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v13, 1, v26))goto LABEL_34;
          }
          goto LABEL_38;
        case 2u:
          v27 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v13, 1, v27))
            goto LABEL_38;
          v28 = sub_1BB86C8B0();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v13, v28);
          v29 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v30 = &v13[*(int *)(v29 + 24)];
          swift_bridgeObjectRelease();
          v31 = *((_QWORD *)v30 + 3);
          if (v31 >> 60 != 15)
            sub_1BA69D314(*((_QWORD *)v30 + 2), v31);
          goto LABEL_13;
        case 3u:
          v32 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v33 = &v13[*(int *)(v32 + 24)];
          v34 = type metadata accessor for PuzzleStreak();
          v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48);
          if (!v35(v33, 1, v34))
          {
            v36 = sub_1BB86BEC0();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v33, v36);
          }
          v13 += *(int *)(v32 + 28);
          if (!v35(v13, 1, v34))
          {
LABEL_34:
            v37 = sub_1BB86BEC0();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v13, v37);
          }
          goto LABEL_38;
        default:
          goto LABEL_38;
      }
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (char *)a1 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v15 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
      {
        v16 = sub_1BB86C67C();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
      }
      goto LABEL_13;
    case 8u:
LABEL_13:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
LABEL_38:
  if (*(id *)((char *)a1 + *(int *)(type metadata accessor for FormatContentSlotItemResolution() + 20)))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BB34ABA0()
{
  char *v0;

  type metadata accessor for FormatContentSlotItemObject.Resolved();
  v0 = (char *)sub_1BB34AC00 + 4 * byte_1BB90AFB3[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BB34AC00(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__dst, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  int *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  *v30 = *v32;
  swift_unknownObjectRetain();
  swift_storeEnumTagMultiPayload();
  v33 = (int *)type metadata accessor for FormatContentSlotItemResolution();
  v34 = v33[5];
  v35 = (_QWORD *)((char *)v30 + v34);
  v36 = (_QWORD *)((char *)v32 + v34);
  if (*v36)
  {
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v35 = *(_OWORD *)v36;
  }
  *(_QWORD *)((char *)v30 + v33[6]) = *(_QWORD *)((char *)v32 + v33[6]);
  *(_QWORD *)((char *)v30 + v33[7]) = *(_QWORD *)((char *)v32 + v33[7]);
  *(_QWORD *)((char *)v30 + *(int *)(v31 + 20)) = *(_QWORD *)((char *)v32 + *(int *)(v31 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v30;
}

uint64_t sub_1BB34BC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    type metadata accessor for FormatContentSlotItemObject.Resolved();
    v6 = (char *)&loc_1BB34BC9C + 4 * byte_1BB90AFC0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = (int *)type metadata accessor for FormatContentSlotItemResolution();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8);
  if (!*(_QWORD *)(a1 + v8))
  {
    if (v11)
    {
      *v9 = v11;
      v9[1] = *(_QWORD *)(v10 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
LABEL_9:
    *(_OWORD *)v9 = *(_OWORD *)v10;
    goto LABEL_10;
  }
  if (!v11)
  {
    sub_1BA90F4A8(a1 + v8);
    goto LABEL_9;
  }
  *v9 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9[1] = *(_QWORD *)(v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_10:
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *sub_1BB34CD4C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  void (*v49)(char *, char *, uint64_t);
  _OWORD *v50;
  uint64_t v51;

  v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 7)
  {
    v23 = a2[1];
    *a1 = *a2;
    a1[1] = v23;
    v24 = type metadata accessor for FormatCustomItem.Resolved();
    v25 = *(int *)(v24 + 24);
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = type metadata accessor for FormatCustomItem.Action();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1BA4B07F0(0, &qword_1ED3C7270, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v38 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v26, v27, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    *(_QWORD *)((char *)a1 + *(int *)(v24 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v24 + 28));
    goto LABEL_22;
  }
  if (EnumCaseMultiPayload == 6)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    type metadata accessor for PuzzleStatistic();
    type metadata accessor for PuzzleStatisticCategory(0);
    v31 = (char *)&loc_1BB34CF48 + 4 * byte_1BB90AFCD[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  if (EnumCaseMultiPayload == 3)
  {
    v51 = a3;
    *a1 = *a2;
    v8 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v50 = a2;
    v11 = (char *)a2 + v9;
    *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for FormatWebEmbed();
    v13 = v12[5];
    v14 = &v10[v13];
    v15 = &v11[v13];
    v16 = sub_1BB86C67C();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v18(v14, v15, v16);
    v19 = v12[6];
    v20 = &v10[v19];
    v21 = &v11[v19];
    v49 = v18;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&v11[v19], 1, v16))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v18(v20, v21, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
    }
    a2 = v50;
    *(_QWORD *)&v10[v12[7]] = *(_QWORD *)&v11[v12[7]];
    *(_OWORD *)&v10[v12[8]] = *(_OWORD *)&v11[v12[8]];
    *(_OWORD *)&v10[v12[9]] = *(_OWORD *)&v11[v12[9]];
    *(_QWORD *)&v10[v12[10]] = *(_QWORD *)&v11[v12[10]];
    *(_QWORD *)&v10[v12[11]] = *(_QWORD *)&v11[v12[11]];
    *(_QWORD *)&v10[v12[12]] = *(_QWORD *)&v11[v12[12]];
    *(_QWORD *)((char *)a1 + v8[6]) = *(_QWORD *)((char *)v50 + v8[6]);
    *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)v50 + v8[7]);
    v32 = v8[8];
    v33 = (_OWORD *)((char *)a1 + v32);
    v34 = (_OWORD *)((char *)v50 + v32);
    v35 = type metadata accessor for WebEmbedDataVisualization();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v33 = *v34;
        v39 = type metadata accessor for GenericDataVisualization();
        v49((char *)v33 + *(int *)(v39 + 20), (char *)v34 + *(int *)(v39 + 20), v16);
        *(_QWORD *)((char *)v33 + *(int *)(v39 + 24)) = *(_QWORD *)((char *)v34 + *(int *)(v39 + 24));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v33, v34, *(_QWORD *)(v36 + 64));
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    a3 = v51;
    v40 = v8[9];
    v41 = (char *)a1 + v40;
    v42 = (char *)v50 + v40;
    sub_1BA6C5A68();
    v44 = v43;
    v45 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v43))
    {
      sub_1BA6C5ACC(0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v41, v42, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v41, 0, 1, v44);
    }
LABEL_22:
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_23:
  v47 = (int *)type metadata accessor for FormatContentSlotItemResolution();
  *(_OWORD *)((char *)a1 + v47[5]) = *(_OWORD *)((char *)a2 + v47[5]);
  *(_QWORD *)((char *)a1 + v47[6]) = *(_QWORD *)((char *)a2 + v47[6]);
  *(_QWORD *)((char *)a1 + v47[7]) = *(_QWORD *)((char *)a2 + v47[7]);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *sub_1BB34DB7C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int *v51;
  uint64_t v52;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
    v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 7)
    {
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      v23 = type metadata accessor for FormatCustomItem.Resolved();
      v24 = *(int *)(v23 + 24);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = type metadata accessor for FormatCustomItem.Action();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        sub_1BA4B07F0(0, &qword_1ED3C7270, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v37 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v25, v26, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v23 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v23 + 28));
    }
    else
    {
      if (EnumCaseMultiPayload == 6)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v30 = (char *)&loc_1BB34DD8C + 4 * byte_1BB90AFD1[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_24;
      }
      v52 = a3;
      *a1 = *a2;
      v51 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      v8 = v51[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
      v11 = (int *)type metadata accessor for FormatWebEmbed();
      v12 = v11[5];
      v13 = &v9[v12];
      v14 = &v10[v12];
      v15 = sub_1BB86C67C();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      v17(v13, v14, v15);
      v18 = v11[6];
      v19 = &v9[v18];
      v20 = &v10[v18];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&v10[v18], 1, v15))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v17(v19, v20, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
      }
      *(_QWORD *)&v9[v11[7]] = *(_QWORD *)&v10[v11[7]];
      *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
      *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
      *(_QWORD *)&v9[v11[10]] = *(_QWORD *)&v10[v11[10]];
      *(_QWORD *)&v9[v11[11]] = *(_QWORD *)&v10[v11[11]];
      *(_QWORD *)&v9[v11[12]] = *(_QWORD *)&v10[v11[12]];
      *(_QWORD *)((char *)a1 + v51[6]) = *(_QWORD *)((char *)a2 + v51[6]);
      *(_QWORD *)((char *)a1 + v51[7]) = *(_QWORD *)((char *)a2 + v51[7]);
      v31 = v51[8];
      v32 = (_OWORD *)((char *)a1 + v31);
      v33 = (_OWORD *)((char *)a2 + v31);
      v34 = type metadata accessor for WebEmbedDataVisualization();
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v32 = *v33;
          v38 = type metadata accessor for GenericDataVisualization();
          v17((char *)v32 + *(int *)(v38 + 20), (char *)v33 + *(int *)(v38 + 20), v15);
          *(_QWORD *)((char *)v32 + *(int *)(v38 + 24)) = *(_QWORD *)((char *)v33 + *(int *)(v38 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v32, v33, *(_QWORD *)(v35 + 64));
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      a3 = v52;
      v39 = v51[9];
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      sub_1BA6C5A68();
      v43 = v42;
      v44 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v41, 1, v42))
      {
        sub_1BA6C5ACC(0);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v40, v41, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v40, 0, 1, v43);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_24:
  v46 = (int *)type metadata accessor for FormatContentSlotItemResolution();
  v47 = v46[5];
  v48 = (uint64_t)a1 + v47;
  v49 = (char *)a2 + v47;
  if (!*(_QWORD *)((char *)a1 + v47))
  {
LABEL_28:
    *(_OWORD *)v48 = *(_OWORD *)v49;
    goto LABEL_29;
  }
  if (!*(_QWORD *)v49)
  {
    sub_1BA90F4A8(v48);
    goto LABEL_28;
  }
  *(_QWORD *)v48 = *(_QWORD *)v49;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v48 + 8) = *((_QWORD *)v49 + 1);
  swift_bridgeObjectRelease();
LABEL_29:
  *(_QWORD *)((char *)a1 + v46[6]) = *(_QWORD *)((char *)a2 + v46[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v46[7]) = *(_QWORD *)((char *)a2 + v46[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1BB34EA24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB34EA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatContentSlotItemResolution();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BB34EA6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB34EA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatContentSlotItemResolution();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BB34EAB8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatContentSlotItemResolution();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void FeedNativeAdInsertBlueprintModifier.init(nativeAdManager:nativeAdInsertion:feedContext:policyValidator:layoutCollectionProvider:subscriptionList:)(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BA4CECCC(a1, a2);
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

uint64_t sub_1BB34EBE4(int *a1)
{
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 *v17;
  uint64_t v18;

  sub_1BAB28EEC(v11, v2 + a1[23]);
  v9 = v2 + a1[24];
  *(_QWORD *)v9 = v7;
  *(_BYTE *)(v9 + 8) = v1;
  *(_BYTE *)(v9 + 9) = v3;
  *(_BYTE *)(v9 + 10) = v4;
  *(_BYTE *)(v9 + 11) = v6;
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v5 + 16);
  *(_QWORD *)(v9 + 32) = v15;
  *(_QWORD *)(v9 + 40) = v14;
  *(_BYTE *)(v9 + 48) = v13;
  *(_QWORD *)(v9 + 56) = v12;
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v5 + 64);
  sub_1BA4CECCC(v16, v2 + a1[25]);
  result = sub_1BA4CECCC(v17, v2 + a1[26]);
  *(_QWORD *)(v2 + a1[27]) = v18;
  return result;
}

void type metadata accessor for FeedNativeAdInsertBlueprintModifier()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t FeedNativeAdInsertBlueprintModifier.modify(blueprint:completion:)(uint64_t a1, void (*a2)(char *), void (*a3)(char *), _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(char *);
  char *v49;
  char *v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  void *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  _QWORD *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  _QWORD *v105;
  void (**v106)(char *);
  void (*v107)(char *);
  char *v108;
  uint64_t v109;
  void *v110;
  char *v111;
  unint64_t v112;
  unint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  void (**v120)(char *);
  void *v121;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  void (*v135)(char *, uint64_t, uint64_t);
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  void (*v160)(char *);
  uint64_t v161;
  void (*v162)(char *);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;

  v160 = a3;
  v162 = a2;
  v161 = a1;
  v6 = a4[3];
  v7 = a4[7];
  v8 = a4[10];
  v177 = a4[2];
  v5 = v177;
  v178 = v6;
  v179 = v7;
  v180 = v8;
  v9 = v7;
  v158 = (_QWORD *)sub_1BB8707B0();
  v157 = *(v158 - 1);
  MEMORY[0x1E0C80A78](v158);
  v156 = (char *)&v125 - v10;
  v132 = *(a4 - 1);
  MEMORY[0x1E0C80A78](v11);
  v131 = v12;
  v141 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86F778();
  v129 = sub_1BB873A2C();
  v128 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v133 = (uint64_t)&v125 - v14;
  v145 = v13;
  v144 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v15);
  v137 = (char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = v16;
  MEMORY[0x1E0C80A78](v17);
  v142 = (char *)&v125 - v18;
  v152 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v19);
  v151 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = v5;
  v178 = v6;
  v163 = v9;
  v164 = v8;
  v179 = v9;
  v180 = v8;
  v21 = v8;
  v22 = sub_1BB871680();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v139 = (char *)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v125 - v26;
  v177 = v5;
  v178 = v6;
  v179 = v9;
  v180 = v21;
  v28 = sub_1BB86FD0C();
  v150 = sub_1BB873A2C();
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v30 = (char *)&v125 - v29;
  v166 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v31);
  v134 = (char *)&v125 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = v32;
  MEMORY[0x1E0C80A78](v33);
  v155 = (char *)&v125 - v34;
  v159 = swift_allocBox();
  v36 = v35;
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v37(v35, v161, v22);
  v135 = (void (*)(char *, uint64_t, uint64_t))v37;
  v37((uint64_t)v27, v36, v22);
  v154 = v5;
  v167 = v5;
  v168 = v6;
  v147 = v6;
  v39 = a4[4];
  v38 = a4[5];
  v169 = v39;
  v170 = v38;
  v143 = v38;
  v40 = a4[6];
  v171 = v40;
  v172 = v163;
  v153 = a4;
  v41 = a4[9];
  v146 = a4[8];
  v173 = v146;
  v174 = v41;
  v148 = v41;
  v175 = v164;
  v176 = v165;
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DBC7C0], v22);
  sub_1BB872C28();
  v42 = v166;
  v136 = v23;
  v43 = *(void (**)(char *, uint64_t))(v23 + 8);
  v140 = v22;
  v43(v27, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v30, 1, v28) == 1)
  {
    (*(void (**)(char *, uint64_t))(v149 + 8))(v30, v150);
    v44 = v157;
    v45 = v156;
    v46 = v158;
    (*(void (**)(char *, _QWORD, _QWORD *))(v157 + 104))(v156, *MEMORY[0x1E0DB9A20], v158);
    v162(v45);
    (*(void (**)(char *, _QWORD *))(v44 + 8))(v45, v46);
  }
  else
  {
    v150 = v40;
    v47 = v157;
    v48 = v162;
    v49 = v155;
    v126 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
    v126(v155, v30, v28);
    v50 = v151;
    sub_1BB86FCB8();
    v51 = *(uint64_t (**)(uint64_t, uint64_t))(v39 + 16);
    v52 = v154;
    v149 = v39;
    v53 = v51(v154, v39);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v50, v52);
    if ((v53 & 1) != 0)
    {
      v54 = v49;
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB7B98], v28);
      v152 = v28;
      v55 = v47;
      if ((sub_1BB873168() & 1) != 0)
      {
        v56 = v158;
        if (qword_1ED3BA7F0 != -1)
          swift_once();
        v57 = (void *)qword_1ED476858;
        sub_1BA7AA598();
        v58 = swift_allocObject();
        *(_OWORD *)(v58 + 16) = xmmword_1BB87CE70;
        v59 = v57;
        v60 = sub_1BB8721CC();
        v62 = v61;
        *(_QWORD *)(v58 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v58 + 64) = sub_1BA6A2D8C();
        *(_QWORD *)(v58 + 32) = v60;
        *(_QWORD *)(v58 + 40) = v62;
        v63 = sub_1BB87330C();
        sub_1BB86EF44("Aborting native ad insertion, section is empty, placement=%{public}@", 68, 2, &dword_1BA493000, v59, v63, v58);

        swift_bridgeObjectRelease();
        v64 = v156;
        (*(void (**)(char *, _QWORD, _QWORD *))(v55 + 104))(v156, *MEMORY[0x1E0DB9A20], v56);
        v48(v64);
        (*(void (**)(char *, _QWORD *))(v55 + 8))(v64, v56);
      }
      else
      {
        v75 = v133;
        v76 = (uint64_t)v49;
        v77 = v143;
        v78 = v163;
        v79 = v146;
        sub_1BB34FBF0(v76, v52, v149, v133, v148, v164);
        v80 = v144;
        v81 = v145;
        v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v75, 1, v145);
        v83 = v158;
        if (v82 != 1)
        {
          v156 = *(char **)(v80 + 32);
          v85 = v142;
          v86 = ((uint64_t (*)(char *, uint64_t, uint64_t))v156)(v142, v75, v81);
          MEMORY[0x1E0C80A78](v86);
          *(&v125 - 12) = v154;
          *(&v125 - 11) = v87;
          *(&v125 - 10) = v149;
          *(&v125 - 9) = v77;
          *(&v125 - 8) = v150;
          *(&v125 - 7) = v78;
          v88 = v148;
          *(&v125 - 6) = v79;
          *(&v125 - 5) = v88;
          v89 = v165;
          *(&v125 - 4) = v164;
          *(&v125 - 3) = v89;
          v90 = v161;
          v123 = v85;
          v124 = v161;
          sub_1BB872208();
          v157 = sub_1BB86EC14();
          v91 = v132;
          v158 = *(_QWORD **)(v132 + 16);
          ((void (*)(char *, uint64_t, _QWORD *))v158)(v141, v89, v153);
          (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v137, v85, v81);
          v92 = v166;
          (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v134, v54, v152);
          v135(v139, v90, v140);
          v93 = *(unsigned __int8 *)(v91 + 80);
          v94 = (v93 + 88) & ~v93;
          v151 = (char *)(v94 + v131);
          v129 = v94;
          v95 = (v94 + v131 + *(unsigned __int8 *)(v80 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
          v96 = (v130 + *(unsigned __int8 *)(v92 + 80) + v95) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
          v97 = (v127 + v96 + 7) & 0xFFFFFFFFFFFFFFF8;
          v98 = (v97 + 15) & 0xFFFFFFFFFFFFFFF8;
          v130 = *(unsigned __int8 *)(v136 + 80);
          v131 = v130 + 16;
          v99 = (v130 + 16 + v98) & ~v130;
          v133 = v93 | v130 | 7;
          v100 = (char *)swift_allocObject();
          v101 = v147;
          *((_QWORD *)v100 + 2) = v154;
          *((_QWORD *)v100 + 3) = v101;
          *((_QWORD *)v100 + 4) = v149;
          *((_QWORD *)v100 + 5) = v77;
          v102 = v163;
          *((_QWORD *)v100 + 6) = v150;
          *((_QWORD *)v100 + 7) = v102;
          v103 = v148;
          *((_QWORD *)v100 + 8) = v146;
          *((_QWORD *)v100 + 9) = v103;
          *((_QWORD *)v100 + 10) = v164;
          v132 = *(_QWORD *)(v91 + 32);
          v104 = v141;
          v105 = v153;
          ((void (*)(char *, char *, _QWORD *))v132)(&v100[v94], v141, v153);
          ((void (*)(char *, char *, uint64_t))v156)(&v100[v95], v137, v81);
          v126(&v100[v96], v134, v152);
          *(_QWORD *)&v100[v97] = v159;
          v106 = (void (**)(char *))&v100[v98];
          v107 = v160;
          *v106 = v162;
          v106[1] = v107;
          v156 = *(char **)(v136 + 32);
          v108 = v139;
          v109 = v140;
          ((void (*)(char *, char *, uint64_t))v156)(&v100[v99], v139, v140);
          swift_retain();
          swift_retain();
          v110 = (void *)sub_1BB86E854();
          sub_1BB86E974();
          swift_release();
          swift_release();

          ((void (*)(char *, uint64_t, _QWORD *))v158)(v104, v165, v105);
          v111 = v108;
          v135(v108, v161, v109);
          v112 = (unint64_t)(v151 + 7) & 0xFFFFFFFFFFFFFFF8;
          v113 = (v131 + v112) & ~v130;
          v114 = (_QWORD *)swift_allocObject();
          v115 = v147;
          v114[2] = v154;
          v114[3] = v115;
          v116 = v143;
          v114[4] = v149;
          v114[5] = v116;
          v117 = v163;
          v114[6] = v150;
          v114[7] = v117;
          v118 = v148;
          v114[8] = v146;
          v114[9] = v118;
          v119 = (char *)v114 + v129;
          v114[10] = v164;
          ((void (*)(char *, char *, _QWORD *))v132)(v119, v104, v105);
          v120 = (void (**)(char *))((char *)v114 + v112);
          *v120 = v162;
          v120[1] = v107;
          ((void (*)(char *, char *, uint64_t))v156)((char *)v114 + v113, v111, v109);
          swift_retain();
          v121 = (void *)sub_1BB86E854();
          sub_1BB86E9A4();
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, uint64_t))(v166 + 8))(v155, v152);
          (*(void (**)(char *, uint64_t))(v144 + 8))(v142, v145);
          return swift_release();
        }
        (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v75, v129);
        v84 = v156;
        (*(void (**)(char *, _QWORD, _QWORD *))(v55 + 104))(v156, *MEMORY[0x1E0DB9A20], v83);
        v162(v84);
        (*(void (**)(char *, _QWORD *))(v55 + 8))(v84, v83);
      }
      (*(void (**)(char *, uint64_t))(v166 + 8))(v54, v152);
    }
    else
    {
      v65 = v47;
      if (qword_1ED3BA7F0 != -1)
        swift_once();
      v66 = (void *)qword_1ED476858;
      sub_1BA7AA598();
      v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = xmmword_1BB87CE70;
      v68 = v66;
      v69 = sub_1BB8721CC();
      v71 = v70;
      *(_QWORD *)(v67 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v67 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v67 + 32) = v69;
      *(_QWORD *)(v67 + 40) = v71;
      v72 = sub_1BB87330C();
      sub_1BB86EF44("Aborting native ad insertion, group doesn't support native ads, placement=%{public}@", 84, 2, &dword_1BA493000, v68, v72, v67);

      swift_bridgeObjectRelease();
      v73 = v156;
      v74 = v158;
      (*(void (**)(char *, _QWORD, _QWORD *))(v65 + 104))(v156, *MEMORY[0x1E0DB9A20], v158);
      v48(v73);
      (*(void (**)(char *, _QWORD *))(v65 + 8))(v73, v74);
      (*(void (**)(char *, uint64_t))(v166 + 8))(v155, v28);
    }
  }
  return swift_release();
}

void sub_1BB34FAAC()
{
  sub_1BB86FD0C();
  sub_1BB86FCC4();
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

uint64_t sub_1BB34FB3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char v6;
  uint64_t v8;

  v3 = *(int *)(a1 + 92);
  v4 = (_QWORD *)(v8 + *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20) + v3);
  if (v2 == *v4 && v1 == v4[1])
    v6 = 1;
  else
    v6 = sub_1BB874398();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

void sub_1BB34FBB4()
{
  sub_1BB34FAAC();
}

uint64_t sub_1BB34FBE0(char a1)
{
  return a1 & 1;
}

uint64_t sub_1BB34FBF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];

  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = v12;
  v21[1] = v13;
  v21[2] = v14;
  v21[3] = a6;
  v15 = sub_1BB86FD0C();
  sub_1BB86FCB8();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 24))(v21, a2, a3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  if (LOBYTE(v21[0]))
  {
    if (LOBYTE(v21[0]) == 1)
    {
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB7B98], v15);
      v16 = sub_1BB873138();
      v17 = __OFSUB__(v16, 1);
      result = v16 - 1;
      if (v17)
      {
        __break(1u);
      }
      else
      {
        sub_1BB86FD24();
        v19 = sub_1BB86F778();
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a4, 0, 1, v19);
      }
    }
    else
    {
      v20 = sub_1BB86F778();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a4, 1, 1, v20);
    }
  }
  else
  {
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB7B98], v15);
    return sub_1BB873144();
  }
  return result;
}

uint64_t sub_1BB34FD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;

  v73 = *(_QWORD *)(a3 - 8);
  v4 = *(_QWORD *)(v73 + 64);
  MEMORY[0x1E0C80A78](a1);
  v74 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB870AC8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B0568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v62 - v10;
  v12 = sub_1BB86CBE0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v76 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a3 + 16);
  v16 = *(_QWORD *)(a3 + 56);
  v17 = *(_QWORD *)(a3 + 80);
  v79 = *(_QWORD *)(a3 + 24);
  v80 = v15;
  v82 = v15;
  v83 = v79;
  v77 = v16;
  v78 = v17;
  *(_QWORD *)&v84 = v16;
  *((_QWORD *)&v84 + 1) = v17;
  sub_1BB871680();
  sub_1BB871674();
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v75 = v12;
  if (v18(v11, 1, v12) == 1)
  {
    sub_1BA6ED6EC((uint64_t)v11, (uint64_t)&qword_1ED3B0568, (uint64_t)MEMORY[0x1E0CB1658], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v76, v11, v75);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v81 + *(int *)(a3 + 104)), *(_QWORD *)(v81 + *(int *)(a3 + 104) + 24));
  sub_1BB8711C4();
  v19 = (void *)sub_1BB870AA4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v76, v75);
LABEL_6:
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v54 = (id)qword_1ED476858;
    v55 = sub_1BB8732F4();
    sub_1BA7AA598();
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_1BB87CE70;
    v57 = sub_1BB8721CC();
    v59 = v58;
    *(_QWORD *)(v56 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v56 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v56 + 32) = v57;
    *(_QWORD *)(v56 + 40) = v59;
    sub_1BB86EF44("Failed to find layout for placement=%{public}@", 46, 2, &dword_1BA493000, v54, v55, v56);

    swift_bridgeObjectRelease();
    v60 = *(_QWORD *)(a3 + 48);
    v82 = v80;
    v83 = v79;
    v84 = *(_OWORD *)(a3 + 32);
    v85 = v60;
    v86 = v77;
    v87 = *(_OWORD *)(a3 + 64);
    v88 = v78;
    type metadata accessor for FeedNativeAdInsertBlueprintModifier.Errors();
  }
  objc_msgSend(v19, sel_frame);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  MEMORY[0x1E0C80A78](v28);
  v29 = v79;
  *(&v62 - 14) = v80;
  *(&v62 - 13) = v29;
  v72 = *(_QWORD *)(a3 + 32);
  v31 = *(_QWORD *)(a3 + 48);
  v71 = *(_QWORD *)(a3 + 40);
  v30 = v71;
  *(&v62 - 12) = v72;
  *(&v62 - 11) = v30;
  v69 = v31;
  v32 = v77;
  *(&v62 - 10) = v31;
  *(&v62 - 9) = v32;
  v33 = *(_QWORD *)(a3 + 72);
  v63 = *(_QWORD *)(a3 + 64);
  *(&v62 - 8) = v63;
  *(&v62 - 7) = v33;
  v68 = v33;
  v34 = v78;
  v35 = v81;
  *(&v62 - 6) = v78;
  *(&v62 - 5) = v35;
  *(&v62 - 4) = v21;
  *(&v62 - 3) = v23;
  *(&v62 - 2) = v25;
  *(&v62 - 1) = v27;
  sub_1BB35303C();
  v64 = sub_1BB86EC14();
  v36 = v73;
  v70 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
  v37 = v74;
  v70(v74, v35, a3);
  v38 = *(unsigned __int8 *)(v36 + 80);
  v67 = ((v38 + 88) & ~v38) + v4;
  v39 = (v38 + 88) & ~v38;
  v65 = v39;
  v66 = v38 | 7;
  v40 = (_QWORD *)swift_allocObject();
  v41 = v79;
  v40[2] = v80;
  v40[3] = v41;
  v42 = v71;
  v40[4] = v72;
  v40[5] = v42;
  v40[6] = v31;
  v40[7] = v32;
  v43 = v63;
  v40[8] = v63;
  v40[9] = v33;
  v40[10] = v34;
  v44 = (char *)v40 + v39;
  v45 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v45(v44, v37, a3);
  v46 = (void *)sub_1BB86E854();
  sub_1BB872208();
  sub_1BB86E974();
  swift_release();
  swift_release();

  v70(v37, v81, a3);
  v47 = (_QWORD *)swift_allocObject();
  v48 = v79;
  v47[2] = v80;
  v47[3] = v48;
  v49 = v71;
  v47[4] = v72;
  v47[5] = v49;
  v47[6] = v69;
  v47[7] = v32;
  v50 = v68;
  v47[8] = v43;
  v47[9] = v50;
  v51 = (char *)v47 + v65;
  v47[10] = v78;
  v45(v51, v37, a3);
  v52 = (void *)sub_1BB86E854();
  v53 = sub_1BB86EA1C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v76, v75);
  return v53;
}

void sub_1BB3503D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[16];
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v56 = a8;
  v57 = a7;
  v58 = a6;
  v65 = a4;
  v60 = a3;
  v66 = a1;
  v82 = a16;
  v46 = a15;
  v69 = a13;
  v61 = a12;
  v55 = sub_1BB86FE74();
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v52 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = a9;
  v74 = a10;
  v75 = a14;
  v76 = a17;
  v68 = sub_1BB871680();
  v51 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v50 = (char *)v44 - v18;
  v73 = a9;
  v74 = a10;
  v75 = a14;
  v76 = a17;
  v49 = sub_1BB8707B0();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v47 = (char *)v44 - v19;
  v45 = sub_1BB872208();
  v44[15] = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v44[14] = (char *)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BB86F778();
  v22 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6F08], v21);
  v23 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6EF8], v21);
  v44[11] = v22;
  v44[10] = v23;
  v24 = sub_1BB86E38C();
  MEMORY[0x1E0C80A78](v24);
  v44[9] = (char *)v44 - v25;
  v44[7] = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](v26);
  v44[12] = (char *)v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v44[6] = (char *)v44 - v29;
  MEMORY[0x1E0C80A78](v30);
  v44[8] = (char *)v44 - v31;
  v73 = a9;
  v74 = a10;
  v75 = a14;
  v76 = a17;
  v72 = sub_1BB86FD0C();
  v64 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v44[5] = (char *)v44 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v63 = (char *)v44 - v34;
  v44[1] = *(_QWORD *)(a10 - 8);
  MEMORY[0x1E0C80A78](v35);
  v44[4] = (char *)v44 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  MEMORY[0x1E0C80A78](v38);
  v59 = (char *)v44 - v39;
  v67 = v21;
  v44[3] = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v40);
  v44[2] = (char *)v44 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v71 = (char *)v44 - v43;
  v62 = swift_projectBox();
  if (qword_1ED3BA7F0 != -1)
    swift_once();
  sub_1BA7AA598();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
  v54 = a9;
  v73 = a9;
  v74 = a10;
  v44[13] = a11;
  v75 = a11;
  v76 = v61;
  v77 = v69;
  v78 = a14;
  v70 = a14;
  v79 = v46;
  v80 = v82;
  v81 = a17;
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

void sub_1BB350F7C()
{
  uint64_t v0;
  id v1;

  v0 = sub_1BB8707B0();
  MEMORY[0x1E0C80A78](v0);
  if (qword_1ED3BA7F0 != -1)
    swift_once();
  v1 = (id)qword_1ED476858;
  sub_1BB8732F4();
  sub_1BA7AA598();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

uint64_t sub_1BB351280(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedNativeAdInsertBlueprintModifier<A, B>, a1);
  return sub_1BB870408();
}

void sub_1BB3512B4()
{
  uint64_t v0;

  v0 = sub_1BB871D7C();
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

uint64_t sub_1BB351364(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v2 + *(int *)(a1 + 92);
  sub_1BB8721CC();
  sub_1BB871D70();
  sub_1BB351420(v5, a1);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + *(int *)(a1 + 100)), *(_QWORD *)(v2 + *(int *)(a1 + 100) + 24));
  sub_1BB8720C4();
  v6 = sub_1BB86EBF0();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 184) + 8))(v1, *(_QWORD *)(v3 - 176));
  return v6;
}

uint64_t sub_1BB351420(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a2;
  v3 = sub_1BB871D34();
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB872208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB8721FC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v29 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v9, a1, v6, v15);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x1E0D53810])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v17, v10);
    if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) == *MEMORY[0x1E0D537F0])
    {
      (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v5, v13, v3);
      v18 = objc_msgSend((id)sub_1BB871D28(), sel_sourceChannelID);
      swift_unknownObjectRelease();
      if (v18)
      {
        v19 = sub_1BB8729A0();
        v21 = v20;
        v22 = objc_msgSend(*(id *)(v31 + *(int *)(v30 + 108)), sel_hasMutedSubscriptionForTagID_, v18);

        if (v22)
        {
          v23 = sub_1BB871B90();
          sub_1BB353390();
          swift_allocError();
          *v24 = v19;
          v24[1] = v21;
          (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v24, *MEMORY[0x1E0D52840], v23);
          sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
          swift_allocObject();
          v25 = sub_1BB86E9C8();
LABEL_11:
          v27 = v25;
          (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
          (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
          return v27;
        }
        swift_bridgeObjectRelease();
      }
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v25 = sub_1BB86E9E0();
      goto LABEL_11;
    }
    v26 = *(void (**)(char *, uint64_t))(v11 + 8);
    v26(v17, v10);
    v26(v13, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

id sub_1BB3517BC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  int v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;

  v48 = a7;
  v49 = a8;
  v46 = a5;
  v47 = a6;
  v45 = a4;
  v44 = a3;
  v50 = a2;
  v51 = a9;
  v13 = sub_1BB871C2C();
  *(_QWORD *)&v55 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1BB871E9C();
  v16 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BB871B90();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (uint64_t *)((char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = a1;
  v23 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v43 = a12;
    v42 = a11;
    v41 = a10;
    v24 = (*(uint64_t (**)(_QWORD *, uint64_t))(v20 + 88))(v22, v19);
    if (v24 == *MEMORY[0x1E0D52838])
    {
      (*(void (**)(_QWORD *, uint64_t))(v20 + 96))(v22, v19);
      v25 = *v22;
      v26 = *(_QWORD *)(*v22 + 16);
      if (v26)
      {
        v56 = MEMORY[0x1E0DEE9D8];
        sub_1BAC7B39C(0, v26, 0);
        v27 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
        v40 = v25;
        v28 = v25 + v27;
        v29 = *(_QWORD *)(v55 + 72);
        v52 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
        v53 = v29;
        do
        {
          v52(v15, v28, v13);
          sub_1BB871C14();
          (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v13);
          v30 = v56;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BAC7B39C(0, *(_QWORD *)(v30 + 16) + 1, 1);
            v30 = v56;
          }
          v32 = *(_QWORD *)(v30 + 16);
          v31 = *(_QWORD *)(v30 + 24);
          if (v32 >= v31 >> 1)
          {
            sub_1BAC7B39C(v31 > 1, v32 + 1, 1);
            v30 = v56;
          }
          *(_QWORD *)(v30 + 16) = v32 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v30+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v32, v18, v54);
          v56 = v30;
          v28 += v53;
          --v26;
        }
        while (v26);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v30 = MEMORY[0x1E0DEE9D8];
      }
      sub_1BAC881CC(v30);
      swift_bridgeObjectRelease();
      v56 = v44;
      v57 = v45;
      v58 = v46;
      v59 = v47;
      v60 = v48;
      v61 = v49;
      v62 = v41;
      v63 = v42;
      v64 = v43;
      type metadata accessor for FeedNativeAdInsertBlueprintModifier();
    }
    if (v24 == *MEMORY[0x1E0D52840])
    {
      (*(void (**)(_QWORD *, uint64_t))(v20 + 96))(v22, v19);
      v33 = *v22;
      v34 = v22[1];
      if (qword_1ED3BA7F0 != -1)
        swift_once();
      v35 = (void *)qword_1ED476858;
      sub_1BA7AA598();
      v36 = swift_allocObject();
      v55 = xmmword_1BB87CE70;
      *(_OWORD *)(v36 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v36 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v36 + 32) = v33;
      *(_QWORD *)(v36 + 40) = v34;
      v37 = v35;
      v38 = sub_1BB87330C();
      sub_1BB86EF44("Discarding native ad due to blocked tagID:%{public}@.", 53, 2, &dword_1BA493000, v37, v38, v36);

      swift_bridgeObjectRelease();
      v56 = v44;
      v57 = v45;
      v58 = v46;
      v59 = v47;
      v60 = v48;
      v61 = v49;
      v62 = v41;
      v63 = v42;
      v64 = v43;
      type metadata accessor for FeedNativeAdInsertBlueprintModifier();
    }
    (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v22, v19);
  }

  swift_willThrow();
  return a1;
}

void sub_1BB351D54()
{
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

uint64_t sub_1BB351D98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1BB34FD88(v1, v2, a1);
}

void sub_1BB351DC8()
{
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

uint64_t sub_1BB351E24(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = *((_QWORD *)a1 - 1);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v20 = *(_QWORD *)(v3 + 64);
  v5 = sub_1BB86F778();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v23 = v6;
  v24 = v5;
  v19 = *(_QWORD *)(v6 + 64);
  v22 = sub_1BB86FD0C();
  v8 = *(_QWORD *)(v22 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v18 = *(_QWORD *)(v8 + 64);
  v25 = sub_1BB871680();
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80);
  v21 = *(_QWORD *)(v25 - 8);
  v11 = v1 + v4;
  __swift_destroy_boxed_opaque_existential_1(v1 + v4);
  v12 = v1 + v4 + a1[23];
  v13 = sub_1BB872208();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  type metadata accessor for FeedNativeAdInsertion();
  swift_bridgeObjectRelease();
  v14 = v1 + v4 + a1[24];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v14 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();
  v15 = (v4 + v20 + v7) & ~v7;
  v16 = (v15 + v19 + v9) & ~v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v11 + a1[25]);
  __swift_destroy_boxed_opaque_existential_1(v11 + a1[26]);

  (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v1 + v15, v24);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v1 + v16, v22);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v21 + 8))(v1 + ((((((v18 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & ~v10), v25);
  return swift_deallocObject();
}

void sub_1BB35206C()
{
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

#error "1BB3521CC: call analysis failed (funcsize=63)"

void sub_1BB3521F0()
{
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

uint64_t sub_1BB352248(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = *((_QWORD *)a1 - 1);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = sub_1BB871680();
  v5 = *(_QWORD *)(v13 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v1 + v4;
  __swift_destroy_boxed_opaque_existential_1(v1 + v4);
  v8 = v1 + v4 + a1[23];
  v9 = sub_1BB872208();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  type metadata accessor for FeedNativeAdInsertion();
  swift_bridgeObjectRelease();
  v10 = v1 + v4 + a1[24];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v10 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v7 + a1[25]);
  __swift_destroy_boxed_opaque_existential_1(v7 + a1[26]);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v1 + ((((v12 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 16) & ~v6), v13);
  return swift_deallocObject();
}

void sub_1BB3523C4()
{
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

void sub_1BB352420()
{
  sub_1BB871680();
  sub_1BB350F7C();
}

void sub_1BB3524B8()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BB3524C8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 56);
}

uint64_t sub_1BB3524D0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 80);
}

uint64_t sub_1BB3524D8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BB3524E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FeedNativeAdInsertion();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1BB352570(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  void *v36;
  id v37;
  _QWORD *v39;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[23];
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1BB872208();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20);
    v13 = &v9[v12];
    v14 = (_QWORD *)(v10 + v12);
    v15 = v14[1];
    *(_QWORD *)v13 = *v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = a3[24];
    v17 = (char *)v4 + v16;
    v18 = (uint64_t)a2 + v16;
    v19 = *(void **)((char *)a2 + v16);
    *(_QWORD *)v17 = v19;
    *((_DWORD *)v17 + 2) = *(_DWORD *)((char *)a2 + v16 + 8);
    v20 = *(uint64_t *)((char *)a2 + v16 + 24);
    *((_QWORD *)v17 + 2) = *(uint64_t *)((char *)a2 + v16 + 16);
    *((_QWORD *)v17 + 3) = v20;
    v39 = (uint64_t *)((char *)a2 + v16 + 32);
    v21 = *(uint64_t *)((char *)a2 + v16 + 40);
    swift_bridgeObjectRetain();
    v22 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v21 - 1) >= 3)
    {
      *((_QWORD *)v17 + 4) = *v39;
      *((_QWORD *)v17 + 5) = v21;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v17 + 2) = *(_OWORD *)v39;
    }
    v17[48] = *(_BYTE *)(v18 + 48);
    v24 = *(void **)(v18 + 56);
    v25 = *(_QWORD *)(v18 + 64);
    *((_QWORD *)v17 + 7) = v24;
    *((_QWORD *)v17 + 8) = v25;
    *((_QWORD *)v17 + 9) = *(_QWORD *)(v18 + 72);
    v26 = a3[25];
    v27 = (char *)v4 + v26;
    v28 = (uint64_t)a2 + v26;
    v29 = *(_OWORD *)((char *)a2 + v26 + 24);
    *(_OWORD *)((char *)v4 + v26 + 24) = v29;
    v30 = v29;
    v31 = **(void (***)(char *, uint64_t, uint64_t))(v29 - 8);
    v32 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v27, v28, v30);
    v33 = a3[26];
    v34 = *(_OWORD *)((char *)a2 + v33 + 24);
    *(_OWORD *)((char *)v4 + v33 + 24) = v34;
    (**(void (***)(void))(v34 - 8))();
    v35 = a3[27];
    v36 = *(void **)((char *)a2 + v35);
    *(_QWORD *)((char *)v4 + v35) = v36;
    v37 = v36;
  }
  return v4;
}

void sub_1BB35275C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + a2[23];
  v5 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for FeedNativeAdInsertion();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[24];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v6 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[25]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[26]);

}

uint64_t sub_1BB352830(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  void *v35;
  id v36;
  int *v38;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[23];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20);
  v12 = (_QWORD *)(v8 + v11);
  v13 = (_QWORD *)(v9 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v38 = a3;
  v15 = a3[24];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(void **)(a2 + v15);
  *(_QWORD *)v16 = v18;
  *(_DWORD *)(v16 + 8) = *(_DWORD *)(a2 + v15 + 8);
  v19 = *(_QWORD *)(a2 + v15 + 24);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(a2 + v15 + 16);
  *(_QWORD *)(v16 + 24) = v19;
  v20 = (_QWORD *)(a2 + v15 + 32);
  v21 = *(_QWORD *)(a2 + v15 + 40);
  swift_bridgeObjectRetain();
  v22 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)(v21 - 1) >= 3)
  {
    *(_QWORD *)(v16 + 32) = *v20;
    *(_QWORD *)(v16 + 40) = v21;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v16 + 32) = *(_OWORD *)v20;
  }
  *(_BYTE *)(v16 + 48) = *(_BYTE *)(v17 + 48);
  v23 = *(void **)(v17 + 56);
  v24 = *(_QWORD *)(v17 + 64);
  *(_QWORD *)(v16 + 56) = v23;
  *(_QWORD *)(v16 + 64) = v24;
  *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
  v25 = a3[25];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_OWORD *)(a2 + v25 + 24);
  *(_OWORD *)(a1 + v25 + 24) = v28;
  v29 = v28;
  v30 = **(void (***)(uint64_t, uint64_t, uint64_t))(v28 - 8);
  v31 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30(v26, v27, v29);
  v32 = v38[26];
  v33 = *(_OWORD *)(a2 + v32 + 24);
  *(_OWORD *)(a1 + v32 + 24) = v33;
  (**(void (***)(void))(v33 - 8))();
  v34 = v38[27];
  v35 = *(void **)(a2 + v34);
  *(_QWORD *)(a1 + v34) = v35;
  v36 = v35;
  return a1;
}

uint64_t *sub_1BB3529E8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  unint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a3[23];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB872208();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20);
  v11 = &v7[v10];
  v12 = &v8[v10];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[24];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(void **)((char *)a2 + v13);
  v17 = *(void **)v14;
  *(_QWORD *)v14 = v16;
  v18 = v16;

  v14[8] = v15[8];
  v14[9] = v15[9];
  v14[10] = v15[10];
  v14[11] = v15[11];
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = *((_QWORD *)v15 + 5) - 1;
  if ((unint64_t)(*((_QWORD *)v14 + 5) - 1) >= 3)
  {
    if (v19 >= 3)
    {
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BA6ED6EC((uint64_t)(v14 + 32), (uint64_t)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
    goto LABEL_6;
  }
  if (v19 < 3)
  {
LABEL_6:
    *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    goto LABEL_8;
  }
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
  swift_bridgeObjectRetain();
LABEL_8:
  v14[48] = v15[48];
  v20 = (void *)*((_QWORD *)v14 + 7);
  v21 = (void *)*((_QWORD *)v15 + 7);
  *((_QWORD *)v14 + 7) = v21;
  v22 = v21;

  *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v14 + 9) = *((_QWORD *)v15 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + a3[25]), (uint64_t *)((char *)a2 + a3[25]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + a3[26]), (uint64_t *)((char *)a2 + a3[26]));
  v23 = a3[27];
  v24 = *(void **)((char *)a2 + v23);
  v25 = *(void **)((char *)a1 + v23);
  *(uint64_t *)((char *)a1 + v23) = (uint64_t)v24;
  v26 = v24;

  return a1;
}

uint64_t sub_1BB352C10(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[23];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = type metadata accessor for FeedNativeAdInsertion();
  *(_OWORD *)(v8 + *(int *)(v11 + 20)) = *(_OWORD *)(v9 + *(int *)(v11 + 20));
  v12 = a3[24];
  v13 = a3[25];
  v14 = (_OWORD *)(a1 + v12);
  v15 = (_OWORD *)(a2 + v12);
  v16 = v15[4];
  v17 = v15[2];
  v14[3] = v15[3];
  v14[4] = v16;
  v18 = v15[1];
  *v14 = *v15;
  v14[1] = v18;
  v14[2] = v17;
  v19 = a1 + v13;
  v20 = a2 + v13;
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v22 = a3[26];
  v23 = a3[27];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  return a1;
}

uint64_t sub_1BB352CF8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  void *v32;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[23];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20);
  v12 = (_QWORD *)(v8 + v11);
  v13 = (uint64_t *)(v9 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[24];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);

  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_BYTE *)(v17 + 9) = *(_BYTE *)(v18 + 9);
  *(_BYTE *)(v17 + 10) = *(_BYTE *)(v18 + 10);
  *(_BYTE *)(v17 + 11) = *(_BYTE *)(v18 + 11);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  swift_bridgeObjectRelease();
  v20 = (_QWORD *)(v18 + 32);
  if ((unint64_t)(*(_QWORD *)(v17 + 40) - 1) >= 3)
  {
    v21 = *(_QWORD *)(v18 + 40);
    if ((unint64_t)(v21 - 1) >= 3)
    {
      *(_QWORD *)(v17 + 32) = *v20;
      *(_QWORD *)(v17 + 40) = v21;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA6ED6EC(v17 + 32, (uint64_t)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  }
  *(_OWORD *)(v17 + 32) = *(_OWORD *)v20;
LABEL_6:
  *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
  v22 = *(void **)(v17 + 56);
  *(_QWORD *)(v17 + 56) = *(_QWORD *)(v18 + 56);

  *(_QWORD *)(v17 + 64) = *(_QWORD *)(v18 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 72) = *(_QWORD *)(v18 + 72);
  swift_bridgeObjectRelease();
  v23 = a3[25];
  v24 = a1 + v23;
  v25 = a2 + v23;
  __swift_destroy_boxed_opaque_existential_1(a1 + v23);
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  v27 = a3[26];
  v28 = a1 + v27;
  v29 = a2 + v27;
  __swift_destroy_boxed_opaque_existential_1(a1 + v27);
  v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  v31 = a3[27];
  v32 = *(void **)(a1 + v31);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);

  return a1;
}

uint64_t sub_1BB352EEC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB352EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FeedNativeAdInsertion();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 92), a2, v8);
  }
}

uint64_t sub_1BB352F74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB352F80(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FeedNativeAdInsertion();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 92), a2, a2, v7);
  }
  return result;
}

void type metadata accessor for FeedNativeAdInsertBlueprintModifier.Errors()
{
  JUMPOUT(0x1BCCE5A70);
}

void sub_1BB353000()
{
  sub_1BB3512B4();
}

void sub_1BB35303C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3CFC90)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3CFC90);
  }
}

void sub_1BB3530A4()
{
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

void sub_1BB353104()
{
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

uint64_t sub_1BB35313C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = v1 + *(int *)(a1 + 92) + v5;
  v3 = sub_1BB872208();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v6, v2, v3);
}

void objectdestroy_5Tm_4()
{
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

uint64_t sub_1BB3531D4(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v4 = v1 + ((v3 + 88) & ~v3);
  __swift_destroy_boxed_opaque_existential_1(v4);
  v5 = v4 + a1[23];
  v6 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for FeedNativeAdInsertion();
  swift_bridgeObjectRelease();
  v7 = v4 + a1[24];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v7 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4 + a1[25]);
  __swift_destroy_boxed_opaque_existential_1(v4 + a1[26]);

  return swift_deallocObject();
}

void sub_1BB3532D8()
{
  type metadata accessor for FeedNativeAdInsertBlueprintModifier();
}

id sub_1BB353334(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v10 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return sub_1BB3517BC(v14, v2 + ((v10 + 88) & ~v10), v5, v6, v7, v8, v9, v12, v13, v3, v4, v1);
}

unint64_t sub_1BB353390()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C18D0[0];
  if (!qword_1EF2C18D0[0])
  {
    v1 = sub_1BB871B90();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0D52850], v1);
    atomic_store(result, qword_1EF2C18D0);
  }
  return result;
}

uint64_t sub_1BB3533D8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BB3533E0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB353420 + 4 * asc_1BB90B080[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB353440 + 4 * byte_1BB90B085[v4]))();
}

_BYTE *sub_1BB353420(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB353440(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB353448(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB353450(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB353458(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB353460(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1BB35346C()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BB35347C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  int *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  __int128 v46;
  __int128 v47;
  char v48;
  uint64_t v49;
  __int128 v50;

  v38 = a2;
  v39 = a5;
  v40 = a1;
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v7);
  v37 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v37 - v20;
  v22 = *((_BYTE *)a4 + 8);
  v23 = *((_BYTE *)a4 + 9);
  v24 = *((_BYTE *)a4 + 10);
  LOBYTE(v20) = *((_BYTE *)a4 + 11);
  v25 = *((_BYTE *)a4 + 48);
  v26 = a4[7];
  v41 = *a4;
  v42 = v22;
  v43 = v23;
  v44 = v24;
  v45 = v20;
  v27 = *((_OWORD *)a4 + 2);
  v46 = *((_OWORD *)a4 + 1);
  v47 = v27;
  v48 = v25;
  v49 = v26;
  v50 = *((_OWORD *)a4 + 4);
  sub_1BB353708(a3, (uint64_t)&v41, (uint64_t)v21);
  v28 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  v29 = a3 + v28[5];
  v30 = (int *)type metadata accessor for FormatWebEmbed();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v29 + v30[5], v12);
  sub_1BA4C2DD8(v29 + v30[6], (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v31 = *(_QWORD *)(a3 + v28[6]);
  v32 = *(_QWORD *)(a3 + v28[7]);
  sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v33 = a3 + v28[8];
  v34 = v37;
  sub_1BA4C2DD8(v33, v37, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  LOBYTE(v28) = *(_BYTE *)(v29 + v30[10]) & 1;
  v35 = v38;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v40, v35, (uint64_t)v15, (uint64_t)v11, v31, v32, (uint64_t)v18, v34, v39, v28);
  return sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
}

uint64_t sub_1BB353708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  char v12;
  char v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  void *v40;
  char v41;
  char v42;
  char v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  __int128 v50;

  v39 = a3;
  sub_1BAF662E4();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)a2;
  v12 = *(_BYTE *)(a2 + 8);
  v13 = *(_BYTE *)(a2 + 9);
  v14 = *(_BYTE *)(a2 + 10);
  v36 = *(unsigned __int8 *)(a2 + 11);
  v15 = *(_OWORD *)(a2 + 16);
  v16 = *(_QWORD *)(a2 + 32);
  v34 = *(_QWORD *)(a2 + 40);
  v35 = v16;
  v33 = *(unsigned __int8 *)(a2 + 48);
  v32 = *(_QWORD *)(a2 + 56);
  v37 = *(_OWORD *)(a2 + 64);
  v38 = v15;
  v17 = type metadata accessor for FormatWebEmbed.Resolved();
  sub_1BA4C2DD8(a1 + *(int *)(v17 + 36), (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6C5ACC);
  sub_1BA6C5A68();
  v19 = v18;
  v20 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v18) == 1)
  {
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6C5ACC);
    v21 = type metadata accessor for FeedHeadline(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v39, 1, 1, v21);
  }
  else
  {
    sub_1BB86ED1C();
    v23 = v40;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
    v24 = objc_msgSend(v23, sel_identifier);
    v25 = sub_1BB8729A0();
    v27 = v26;

    v40 = v11;
    v41 = v12;
    v42 = v13;
    v43 = v14;
    v44 = v36;
    v45 = v38;
    v46 = v35;
    v47 = v34;
    v48 = v33;
    v49 = v32;
    v50 = v37;
    v28 = sub_1BB871B24();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v7, 1, 1, v28);
    v29 = v39;
    sub_1BA5DECF0(v25, v27, v23, (uint64_t)&v40, (uint64_t)v7, v39);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BAF662E4);
    v30 = type metadata accessor for FeedHeadline(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
  }
}

uint64_t OsloSheetPurchaseDataModel.init(purchaseIDAppConfigKey:postPurchaseData:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5;

  *a3 = *a1;
  v5 = type metadata accessor for OsloSheetPurchaseDataModel(0);
  return sub_1BA5193C4(a2, (uint64_t)a3 + *(int *)(v5 + 20), (uint64_t (*)(_QWORD))sub_1BA829D7C);
}

uint64_t FormatOsloSheetPurchaseDataModel.purchaseIDAppConfigKey.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOsloSheetPurchaseDataModel.postPurchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB2062F0(type metadata accessor for FormatOsloSheetPurchaseDataModel, sub_1BB353D64, a1);
}

uint64_t sub_1BB353A28@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatOsloSheetPurchaseDataModel.init(from:)(a1, a2);
}

uint64_t sub_1BB353A3C(_QWORD *a1)
{
  return FormatOsloSheetPurchaseDataModel.encode(to:)(a1);
}

uint64_t OsloSheetPurchaseDataModel.purchaseIDAppConfigKey.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t OsloSheetPurchaseDataModel.postPurchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB2062F0(type metadata accessor for OsloSheetPurchaseDataModel, sub_1BB353D70, a1);
}

BOOL _s8NewsFeed32FormatOsloSheetPurchaseDataModelV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  _BOOL8 result;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;

  v4 = type metadata accessor for FormatPostPurchase();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB356B9C();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA82FA0C(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v28 - v19;
  if (*a1 == *a2 && a1[1] == a2[1] || (v21 = sub_1BB874398(), result = 0, (v21 & 1) != 0))
  {
    v29 = v7;
    v23 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
    sub_1BB353D64((uint64_t)a1 + *(int *)(v23 + 20), (uint64_t)v20);
    sub_1BB353D64((uint64_t)a2 + *(int *)(v23 + 20), (uint64_t)v17);
    v24 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_1BB353D64((uint64_t)v20, (uint64_t)v11);
    sub_1BB353D64((uint64_t)v17, v24);
    v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v25((uint64_t)v11, 1, v4) == 1)
    {
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA82FA0C);
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA82FA0C);
      if (v25(v24, 1, v4) == 1)
      {
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA82FA0C);
        return 1;
      }
    }
    else
    {
      sub_1BB353D64((uint64_t)v11, (uint64_t)v14);
      if (v25(v24, 1, v4) != 1)
      {
        v26 = (uint64_t)v29;
        sub_1BA5193C4(v24, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
        v27 = _s8NewsFeed18FormatPostPurchaseO2eeoiySbAC_ACtFZ_0((uint64_t)v14, v26);
        sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
        sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA82FA0C);
        sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA82FA0C);
        sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA82FA0C);
        return (v27 & 1) != 0;
      }
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA82FA0C);
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA82FA0C);
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
    }
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB356B9C);
    return 0;
  }
  return result;
}

uint64_t sub_1BB353D64(uint64_t a1, uint64_t a2)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))sub_1BA82FA0C);
}

uint64_t sub_1BB353D70(uint64_t a1, uint64_t a2)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))sub_1BA829D7C);
}

uint64_t sub_1BB353D7C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB353E14(&qword_1EF2C1958, (uint64_t)&protocol conformance descriptor for FormatOsloSheetPurchaseDataModel);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB353DB0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB353E14(&qword_1EF2B2670, (uint64_t)&protocol conformance descriptor for FormatOsloSheetPurchaseDataModel);
  a1[2] = sub_1BB353E14(&qword_1EF2B5F80, (uint64_t)&protocol conformance descriptor for FormatOsloSheetPurchaseDataModel);
  result = sub_1BB353E14(&qword_1EF2C1960, (uint64_t)&protocol conformance descriptor for FormatOsloSheetPurchaseDataModel);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB353E14(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatOsloSheetPurchaseDataModel(255);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatOsloSheetPurchaseDataModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    v9 = type metadata accessor for FormatPostPurchase();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1BA82FA0C(0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for FormatURL();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
      {
        memcpy(v7, v8, *(_QWORD *)(v10 + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v18 = *v8;
          v19 = v8[1];
          v25 = *v8;
          v20 = v8[2];
          v21 = *((_BYTE *)v8 + 24);
          sub_1BA690C00(v18, v19, v20, v21);
          *v7 = v25;
          v7[1] = v19;
          v7[2] = v20;
          *((_BYTE *)v7 + 24) = v21;
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            v17 = v8[1];
            *v7 = *v8;
            v7[1] = v17;
            v7[2] = v8[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v22 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v7, v8, v22);
            v23 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v7 + *(int *)(v23 + 20)) = *(uint64_t *)((char *)v8 + *(int *)(v23 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for FormatOsloSheetPurchaseDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for FormatPostPurchase();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = type metadata accessor for FormatURL();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 2, v7);
    if (!(_DWORD)result)
    {
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
        return sub_1BA5A7EF8(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 24));
      if ((_DWORD)result == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((_DWORD)result)
          return result;
        v8 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
        type metadata accessor for FormatAbsoluteURL();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

_QWORD *initializeWithCopy for FormatOsloSheetPurchaseDataModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for FormatPostPurchase();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1BA82FA0C(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for FormatURL();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(v7, 2, v12))
    {
      memcpy(v6, v7, *(_QWORD *)(v9 + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v16 = *v7;
        v17 = v7[1];
        v23 = *v7;
        v18 = v7[2];
        v19 = *((_BYTE *)v7 + 24);
        sub_1BA690C00(v16, v17, v18, v19);
        *v6 = v23;
        v6[1] = v17;
        v6[2] = v18;
        *((_BYTE *)v6 + 24) = v19;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          v15 = v7[1];
          *v6 = *v7;
          v6[1] = v15;
          v6[2] = v7[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v20 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v6, v7, v20);
          v21 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v6 + *(int *)(v21 + 20)) = *(uint64_t *)((char *)v7 + *(int *)(v21 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 2, v12);
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for FormatOsloSheetPurchaseDataModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t *, uint64_t, uint64_t);
  int v21;
  int v22;
  int v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for FormatPostPurchase();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      v14 = type metadata accessor for FormatURL();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
      {
        memcpy(v7, v8, *(_QWORD *)(v10 + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          v25 = *v8;
          v26 = v8[1];
          v45 = *v8;
          v27 = v8[2];
          v28 = *((_BYTE *)v8 + 24);
          sub_1BA690C00(v25, v26, v27, v28);
          *v7 = v45;
          v7[1] = v26;
          v7[2] = v27;
          *((_BYTE *)v7 + 24) = v28;
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            *v7 = *v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v29 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v7, v8, v29);
            v30 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v7 + *(int *)(v30 + 20)) = *(uint64_t *)((char *)v8 + *(int *)(v30 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      return a1;
    }
    goto LABEL_7;
  }
  if (v13)
  {
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
LABEL_7:
    sub_1BA82FA0C(0);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v17);
    return a1;
  }
  v18 = type metadata accessor for FormatURL();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v7, 2, v18);
  v22 = v20(v8, 2, v18);
  if (v21)
  {
    if (!v22)
    {
      v23 = swift_getEnumCaseMultiPayload();
      if (v23 == 2)
      {
        v33 = *v8;
        v34 = v8[1];
        v35 = v8[2];
        v36 = *((_BYTE *)v8 + 24);
        sub_1BA690C00(v33, v34, v35, v36);
        *v7 = v33;
        v7[1] = v34;
        v7[2] = v35;
        *((_BYTE *)v7 + 24) = v36;
      }
      else
      {
        if (v23 == 1)
        {
          *v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          v37 = sub_1BB86C67C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v7, v8, v37);
          v38 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v7 + *(int *)(v38 + 20)) = *(uint64_t *)((char *)v8 + *(int *)(v38 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 2, v18);
      return a1;
    }
    goto LABEL_19;
  }
  if (v22)
  {
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
LABEL_19:
    v17 = *(_QWORD *)(v10 + 64);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v32 = swift_getEnumCaseMultiPayload();
    if (v32 == 2)
    {
      v39 = *v8;
      v40 = v8[1];
      v41 = v8[2];
      v42 = *((_BYTE *)v8 + 24);
      sub_1BA690C00(v39, v40, v41, v42);
      *v7 = v39;
      v7[1] = v40;
      v7[2] = v41;
      *((_BYTE *)v7 + 24) = v42;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v32 == 1)
      {
        *v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        v43 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v7, v8, v43);
        v44 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v7 + *(int *)(v44 + 20)) = *(uint64_t *)((char *)v8 + *(int *)(v44 + 20));
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FormatOsloSheetPurchaseDataModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for FormatPostPurchase();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BA82FA0C(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for FormatURL();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 2, v10))
    {
      memcpy(v5, v6, *(_QWORD *)(v8 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v5, v6, *(_QWORD *)(v11 + 64));
      }
      else
      {
        v12 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5, v6, v12);
        v13 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v5[*(int *)(v13 + 20)] = *(_QWORD *)&v6[*(int *)(v13 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 2, v10);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for FormatOsloSheetPurchaseDataModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FormatPostPurchase();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      v19 = type metadata accessor for FormatURL();
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
      v22 = v21(v8, 2, v19);
      v23 = v21(v9, 2, v19);
      if (v22)
      {
        if (!v23)
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v8, v9, *(_QWORD *)(v20 + 64));
          }
          else
          {
            v27 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v8, v9, v27);
            v28 = type metadata accessor for FormatAbsoluteURL();
            *(_QWORD *)&v8[*(int *)(v28 + 20)] = *(_QWORD *)&v9[*(int *)(v28 + 20)];
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 2, v19);
          return a1;
        }
      }
      else
      {
        if (!v23)
        {
          if (a1 == a2)
            return a1;
          sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          if (!swift_getEnumCaseMultiPayload())
          {
            v29 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v8, v9, v29);
            v30 = type metadata accessor for FormatAbsoluteURL();
            *(_QWORD *)&v8[*(int *)(v30 + 20)] = *(_QWORD *)&v9[*(int *)(v30 + 20)];
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          v18 = *(_QWORD *)(v20 + 64);
          goto LABEL_8;
        }
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      }
      v18 = *(_QWORD *)(v11 + 64);
LABEL_8:
      memcpy(v8, v9, v18);
      return a1;
    }
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
LABEL_7:
    sub_1BA82FA0C(0);
    v18 = *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64);
    goto LABEL_8;
  }
  if (v14)
    goto LABEL_7;
  v15 = type metadata accessor for FormatURL();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 2, v15))
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(_QWORD *)(v16 + 64));
    }
    else
    {
      v24 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v8, v9, v24);
      v25 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v8[*(int *)(v25 + 20)] = *(_QWORD *)&v9[*(int *)(v25 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatOsloSheetPurchaseDataModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB354BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA82FA0C(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FormatOsloSheetPurchaseDataModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB354C54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA82FA0C(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for OsloSheetPurchaseDataModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for FormatPostPurchaseData();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1BA829D7C(0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_1BB86C67C();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
      {
        memcpy(v7, v8, *(_QWORD *)(v10 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for OsloSheetPurchaseDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for FormatPostPurchaseData();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = sub_1BB86C67C();
    v8 = *(_QWORD *)(v7 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 2, v7);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
  }
  return result;
}

_QWORD *initializeWithCopy for OsloSheetPurchaseDataModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for FormatPostPurchaseData();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1BA829D7C(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_1BB86C67C();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 2, v12))
    {
      memcpy(v6, v7, *(_QWORD *)(v9 + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v6, v7, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 2, v12);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for OsloSheetPurchaseDataModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for FormatPostPurchaseData();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v18 = sub_1BB86C67C();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
      v21 = v20(v7, 2, v18);
      v22 = v20(v8, 2, v18);
      if (v21)
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v7, v8, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 2, v18);
          return a1;
        }
      }
      else
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v7, v8, v18);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
      }
      v17 = *(_QWORD *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchaseData);
LABEL_7:
    sub_1BA829D7C(0);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v17);
    return a1;
  }
  if (v13)
    goto LABEL_7;
  v14 = sub_1BB86C67C();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for OsloSheetPurchaseDataModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for FormatPostPurchaseData();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BA829D7C(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 2, v10))
    {
      memcpy(v5, v6, *(_QWORD *)(v8 + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v5, v6, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 2, v10);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for OsloSheetPurchaseDataModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FormatPostPurchaseData();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      v19 = sub_1BB86C67C();
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
      v22 = v21(v8, 2, v19);
      v23 = v21(v9, 2, v19);
      if (v22)
      {
        if (!v23)
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v8, v9, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 2, v19);
          return a1;
        }
      }
      else
      {
        if (!v23)
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v8, v9, v19);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
      }
      v18 = *(_QWORD *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchaseData);
LABEL_7:
    sub_1BA829D7C(0);
    v18 = *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v18);
    return a1;
  }
  if (v14)
    goto LABEL_7;
  v15 = sub_1BB86C67C();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 2, v15))
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v9, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OsloSheetPurchaseDataModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3554D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1BA829D7C(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for OsloSheetPurchaseDataModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB355568(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    sub_1BA829D7C(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

ValueMetadata *type metadata accessor for OsloSheetPurchaseDataModelPurchaseID()
{
  return &type metadata for OsloSheetPurchaseDataModelPurchaseID;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatPurchaseData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for FormatPurchaseLandingPageData();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        v23 = *(int *)(v17 + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for FormatPostPurchaseData();
        v27 = *(_QWORD *)(v26 - 8);
        v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
        swift_bridgeObjectRetain();
        if (v28(v25, 1, v26))
        {
          sub_1BA829D7C(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          v30 = sub_1BB86C67C();
          v31 = *(_QWORD *)(v30 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v25, 2, v30))
          {
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v24, v25, v30);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v24, 0, 2, v30);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
      }
      goto LABEL_22;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for FormatPostPurchaseData();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        sub_1BA829D7C(0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v20 = sub_1BB86C67C();
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v11, 2, v20))
        {
          memcpy(v10, v11, *(_QWORD *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v10, v11, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v10, 0, 2, v20);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for FormatPurchaseData(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for FormatPurchaseLandingPageData();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
    if ((_DWORD)result)
      return result;
    swift_bridgeObjectRelease();
    v3 = *(int *)(v4 + 20);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    swift_bridgeObjectRelease();
    v3 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
  }
  v5 = a1 + v3;
  v6 = type metadata accessor for FormatPostPurchaseData();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
  {
    v7 = sub_1BB86C67C();
    v8 = *(_QWORD *)(v7 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 2, v7);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
  }
  return result;
}

_QWORD *initializeWithCopy for FormatPurchaseData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v15 = type metadata accessor for FormatPurchaseLandingPageData();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
    {
      sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      v21 = *(int *)(v15 + 20);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = type metadata accessor for FormatPostPurchaseData();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      if (v26(v23, 1, v24))
      {
        sub_1BA829D7C(0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        v28 = sub_1BB86C67C();
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v23, 2, v28))
        {
          memcpy(v22, v23, *(_QWORD *)(v25 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v22, v23, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v22, 0, 2, v28);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
    }
    goto LABEL_20;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for FormatPostPurchaseData();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1BA829D7C(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v18 = sub_1BB86C67C();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 2, v18))
      {
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v9, v10, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v9, 0, 2, v18);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
LABEL_20:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for FormatPurchaseData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatPurchaseData);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for FormatPurchaseLandingPageData();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
        sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        v19 = *(int *)(v14 + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = type metadata accessor for FormatPostPurchaseData();
        v23 = *(_QWORD *)(v22 - 8);
        v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        swift_bridgeObjectRetain();
        if (v24(v21, 1, v22))
        {
          sub_1BA829D7C(0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v26 = sub_1BB86C67C();
          v27 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v21, 2, v26))
          {
            memcpy(v20, v21, *(_QWORD *)(v23 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v20, v21, v26);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v20, 0, 2, v26);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
      goto LABEL_21;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v7 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for FormatPostPurchaseData();
      v11 = *(_QWORD *)(v10 - 8);
      v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      if (v12(v9, 1, v10))
      {
        sub_1BA829D7C(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v17 = sub_1BB86C67C();
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 2, v17))
        {
          memcpy(v8, v9, *(_QWORD *)(v11 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v8, v9, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v8, 0, 2, v17);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for FormatPurchaseData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for FormatPurchaseLandingPageData();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
    {
      sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v18 = *(int *)(v13 + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = type metadata accessor for FormatPostPurchaseData();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_1BA829D7C(0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v24 = sub_1BB86C67C();
        v25 = *(_QWORD *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 2, v24))
        {
          memcpy(v19, v20, *(_QWORD *)(v22 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v19, v20, v24);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 2, v24);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
    }
    goto LABEL_20;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for FormatPostPurchaseData();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1BA829D7C(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v16 = sub_1BB86C67C();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 2, v16))
      {
        memcpy(v8, v9, *(_QWORD *)(v11 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v8, v9, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 2, v16);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
LABEL_20:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FormatPurchaseData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatPurchaseData);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v13 = type metadata accessor for FormatPurchaseLandingPageData();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v18 = *(int *)(v13 + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = type metadata accessor for FormatPostPurchaseData();
        v22 = *(_QWORD *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          sub_1BA829D7C(0);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v24 = sub_1BB86C67C();
          v25 = *(_QWORD *)(v24 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 2, v24))
          {
            memcpy(v19, v20, *(_QWORD *)(v22 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v19, v20, v24);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 2, v24);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
      goto LABEL_21;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for FormatPostPurchaseData();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_1BA829D7C(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v16 = sub_1BB86C67C();
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 2, v16))
        {
          memcpy(v8, v9, *(_QWORD *)(v11 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v8, v9, v16);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 2, v16);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1BB356580(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  _QWORD *v18;
  __int128 v20;
  _OWORD v21[2];
  uint64_t v22;

  sub_1BB20355C(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v4, v5);
  v6 = type metadata accessor for FormatPurchaseData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) != 1)
  {
    v14 = (char *)&loc_1BB356704 + 4 * byte_1BB90B270[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v20 = xmmword_1BB87CE70;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v7);
  sub_1BA8C88C8(0);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v20;
  v13 = (_QWORD *)(v12 + v11);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v13);
  v15 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 0, 1, v15);
  sub_1BAF89090(0x6573616863727550, 0xED00006174614420, 0, 0, v12, v21);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v16 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v16;
  *(_QWORD *)(v16 + 48) = v22;
  v17 = v21[1];
  *(_OWORD *)(v16 + 16) = v21[0];
  *(_OWORD *)(v16 + 32) = v17;
  v18 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v18;
}

uint64_t sub_1BB356B68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB356B9C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2AFBC8)
  {
    sub_1BA82FA0C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2AFBC8);
  }
}

void destroy for FormatGroupNodeMaskData(uint64_t a1)
{
  sub_1BA7F6D98(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for FormatGroupNodeMaskData(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1BA7F6D0C(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for FormatGroupNodeMaskData(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1BA7F6D0C(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  sub_1BA7F6D98(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for FormatGroupNodeMaskData(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_BYTE *)(a2 + 64);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 64) = v3;
  sub_1BA7F6D98(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

ValueMetadata *type metadata accessor for FormatGroupNodeMaskData()
{
  return &type metadata for FormatGroupNodeMaskData;
}

uint64_t static ContextMenuItem.Puzzles.resetPuzzleProgress(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v10[2];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3C4C48 != -1)
    swift_once();
  v6 = qword_1EF2A72F8;
  swift_retain();
  swift_unknownObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = (void *)qword_1EF2C47C8;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v10[1] = a1;
  sub_1BB86FB38();
  swift_allocObject();
  v8 = v7;
  return sub_1BB86FB20();
}

uint64_t static ContextMenuItem.Puzzles.setStreakEligible(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v10[2];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3C4060 != -1)
    swift_once();
  v6 = qword_1EF2A7300;
  swift_retain();
  swift_unknownObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = (void *)qword_1EF2C47D0;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v10[1] = a1;
  sub_1BB86FB38();
  swift_allocObject();
  v8 = v7;
  return sub_1BB86FB20();
}

uint64_t static UIActivityType.openPuzzleFullArchive.getter()
{
  return sub_1BB872970();
}

uint64_t _s5TeaUI15SharingActivityC8NewsFeedE21openPuzzleFullArchive10puzzleTypeACSo08FCPuzzleL9Providing_p_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t ObjCClassFromMetadata;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v2 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v2);
  v24 = sub_1BB86C67C();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - v8;
  v10 = objc_msgSend(a1, sel_identifier, v7);
  if (!v10)
  {
    sub_1BB8729A0();
    v10 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForFullArchivePuzzleTypeID_, v10);

  sub_1BB86C5EC();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA7AA598();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  v15 = objc_msgSend(a1, sel_name);
  v16 = sub_1BB8729A0();
  v18 = v17;

  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v14 + 32) = v16;
  *(_QWORD *)(v14 + 40) = v18;
  sub_1BB8729D0();
  swift_bridgeObjectRelease();
  if (qword_1ED3BA8B8 != -1)
    swift_once();
  v19 = v24;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v24);
  swift_retain();
  sub_1BB872970();
  if (qword_1EF2A7290 != -1)
    swift_once();
  v20 = (id)qword_1EF2C4768;
  sub_1BB8703D8();
  sub_1BB86FCA0();
  swift_allocObject();
  v21 = sub_1BB86FC94();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v19);
  return v21;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE7PuzzlesV21openPuzzleFullArchive10puzzleTypeACSo08FCPuzzleN9Providing_p_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t ObjCClassFromMetadata;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_1BB870150();
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - v10;
  v12 = objc_msgSend(a1, sel_identifier, v9);
  if (!v12)
  {
    sub_1BB8729A0();
    v12 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v13 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForFullArchivePuzzleTypeID_, v12);

  sub_1BB86C5EC();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v15 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA7AA598();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BB87CE70;
  v17 = objc_msgSend(a1, sel_name);
  v18 = sub_1BB8729A0();
  v20 = v19;

  *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v16 + 32) = v18;
  *(_QWORD *)(v16 + 40) = v20;
  sub_1BB8729D0();
  swift_bridgeObjectRelease();
  if (qword_1ED3BA8B8 != -1)
    swift_once();
  v21 = v30;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v30);
  v22 = qword_1EF2A7290;
  swift_retain();
  if (v22 != -1)
    swift_once();
  v23 = (void *)qword_1EF2C4768;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v4, *MEMORY[0x1E0DB8530], v29);
  sub_1BB86FB38();
  swift_allocObject();
  v24 = v23;
  v25 = sub_1BB86FB20();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v21);
  return v25;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE7PuzzlesV04moreH06puzzleACSgSo17FCPuzzleProviding_p_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  id v8;
  void *v9;
  id v10;
  _QWORD v12[2];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED3A4160 != -1)
    swift_once();
  swift_retain();
  v8 = objc_msgSend(a1, sel_puzzleType);
  if (qword_1EF2A72F0 != -1)
    swift_once();
  v9 = (void *)qword_1EF2C47C0;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v12[1] = v8;
  sub_1BB86FB38();
  swift_allocObject();
  v10 = v9;
  return sub_1BB86FB20();
}

ValueMetadata *type metadata accessor for Commands.FeedPuzzles()
{
  return &type metadata for Commands.FeedPuzzles;
}

ValueMetadata *type metadata accessor for Commands.Puzzles()
{
  return &type metadata for Commands.Puzzles;
}

ValueMetadata *type metadata accessor for ContextMenuItem.Puzzles()
{
  return &type metadata for ContextMenuItem.Puzzles;
}

uint64_t sub_1BB3579B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3579E8 + 4 * a1_3[a1]))(0x656D6167657270, 0xE700000000000000);
}

uint64_t sub_1BB3579E8()
{
  return 0x6576694C7261656ELL;
}

uint64_t sub_1BB357A00()
{
  return 0x6572676F72506E69;
}

uint64_t sub_1BB357A1C()
{
  return 0x6B61657262;
}

uint64_t sub_1BB357A30()
{
  return 0x656E6F7074736F70;
}

uint64_t sub_1BB357A74()
{
  return 0x646579616C6564;
}

uint64_t sub_1BB357A88()
{
  return 0x74696566726F66;
}

uint64_t sub_1BB357A9C()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1BB357AB0()
{
  return 0x6C616E6966;
}

uint64_t sub_1BB357AC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB3579B4(*a1);
  v5 = v4;
  if (v3 == sub_1BB3579B4(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB357B4C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB3579B4(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB357BAC()
{
  unsigned __int8 *v0;

  sub_1BB3579B4(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB357BEC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB3579B4(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB357C48@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB3580C0();
  *a1 = result;
  return result;
}

uint64_t sub_1BB357C74@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB3579B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB357C9C()
{
  sub_1BB35807C();
  return sub_1BB872D60();
}

uint64_t sub_1BB357CF8()
{
  sub_1BB35807C();
  return sub_1BB872D0C();
}

void sub_1BB357D44(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724B958;
}

BOOL sub_1BB357D54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = *a2;
  v3 = sub_1BA9BECAC(*a1, (uint64_t)&unk_1E724B958);
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = v3;
  v6 = sub_1BA9BECAC(v2, (uint64_t)&unk_1E724B958);
  if ((v7 & 1) != 0)
    v8 = 0;
  else
    v8 = v6;
  return v5 < v8;
}

uint64_t storeEnumTagSinglePayload for SportsDataConfigurationEventStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BB357DFC + 4 * byte_1BB90B480[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BB357E30 + 4 * byte_1BB90B47B[v4]))();
}

uint64_t sub_1BB357E30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB357E38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB357E40);
  return result;
}

uint64_t sub_1BB357E4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB357E54);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BB357E58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB357E60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataConfigurationEventStatus()
{
  return &type metadata for SportsDataConfigurationEventStatus;
}

unint64_t sub_1BB357E80()
{
  unint64_t result;

  result = qword_1ED3A9E40;
  if (!qword_1ED3A9E40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90B56C, &type metadata for SportsDataConfigurationEventStatus);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E40);
  }
  return result;
}

BOOL sub_1BB357EC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = *a1;
  v3 = sub_1BA9BECAC(*a2, (uint64_t)&unk_1E724B958);
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = v3;
  v6 = sub_1BA9BECAC(v2, (uint64_t)&unk_1E724B958);
  if ((v7 & 1) != 0)
    v8 = 0;
  else
    v8 = v6;
  return v5 >= v8;
}

BOOL sub_1BB357F24(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = *a2;
  v3 = sub_1BA9BECAC(*a1, (uint64_t)&unk_1E724B958);
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = v3;
  v6 = sub_1BA9BECAC(v2, (uint64_t)&unk_1E724B958);
  if ((v7 & 1) != 0)
    v8 = 0;
  else
    v8 = v6;
  return v5 >= v8;
}

BOOL sub_1BB357F80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = *a2;
  v3 = sub_1BA9BECAC(*a1, (uint64_t)&unk_1E724B958);
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = v3;
  v6 = sub_1BA9BECAC(v2, (uint64_t)&unk_1E724B958);
  if ((v7 & 1) != 0)
    v8 = 0;
  else
    v8 = v6;
  return v8 < v5;
}

unint64_t sub_1BB357FE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C1968;
  if (!qword_1EF2C1968)
  {
    sub_1BB358028();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C1968);
  }
  return result;
}

void sub_1BB358028()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C1970)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C1970);
  }
}

unint64_t sub_1BB35807C()
{
  unint64_t result;

  result = qword_1ED3A9E48;
  if (!qword_1ED3A9E48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90B534, &type metadata for SportsDataConfigurationEventStatus);
    atomic_store(result, (unint64_t *)&qword_1ED3A9E48);
  }
  return result;
}

uint64_t sub_1BB3580C0()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t static FormatLayeredMediaNodeContent.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v10[2];
  _QWORD v11[2];

  v2 = *a1;
  v3 = *a2;
  if (*a1 < 0)
  {
    if (v3 < 0)
    {
      v5 = *(_QWORD *)(v2 + 24);
      v6 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v3 + 24);
      v11[0] = *(_QWORD *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      v11[1] = v5;
      v10[0] = v6;
      v10[1] = v7;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatLayeredMediaNodeContent.== infix(_:_:)(v11, v10) & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v8 = sub_1BA885898(v5, v7);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return (v8 & 1) != 0;
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else if ((v3 & 0x8000000000000000) == 0)
  {
    v4 = *(_BYTE *)(v3 + 16);
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
      return (v4 & 1) != 0;
    if ((v4 & 1) == 0)
      return 1;
  }
  return 0;
}

uint64_t FormatLayeredMediaNodeContent.layeredMedia(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  v5 = *v2;
  if (*v2 < 0)
  {
    v7 = *(_QWORD *)(v5 + 16);
    v8 = *(_QWORD *)(v5 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA9A3B18(v9, a1, v7, v8);
    v10 = v9[0];
    FormatLayeredMediaNodeContent.layeredMedia(from:)(a1);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else
  {
    LOBYTE(v10) = *(_BYTE *)(v5 + 16);
    v9[3] = type metadata accessor for FormatNodeContext();
    v9[4] = &off_1E72F9288;
    v9[0] = a1;
    swift_retain();
    sub_1BA7FDFA8(v9, a2);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
}

uint64_t sub_1BB35836C(_QWORD *a1)
{
  return FormatLayeredMediaNodeContent.encode(to:)(a1);
}

unint64_t sub_1BB358384(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAEA092C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3583A8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8228D0();
  a1[2] = sub_1BAEF046C();
  result = sub_1BB3583DC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3583DC()
{
  unint64_t result;

  result = qword_1EF2C1978;
  if (!qword_1EF2C1978)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaNodeContent, &type metadata for FormatLayeredMediaNodeContent);
    atomic_store(result, (unint64_t *)&qword_1EF2C1978);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayeredMediaNodeContent()
{
  return &type metadata for FormatLayeredMediaNodeContent;
}

uint64_t FeedContextFactoryType.createFeedContext()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t))(a2 + 8))(MEMORY[0x1E0DEE9E8], a1);
}

_QWORD *FeedContextFactory.__allocating_init(paidBundleConfigManager:paidAccessChecker:bundleSubscriptionManager:featureAvailability:appConfigManager:platform:userInfo:)(__int128 *a1, uint64_t a2, uint64_t a3, __int128 *a4, __int128 *a5, uint64_t *a6, __int128 *a7)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v14 = (_QWORD *)swift_allocObject();
  v16 = *a6;
  v15 = a6[1];
  sub_1BA4CECCC(a1, (uint64_t)(v14 + 2));
  v14[7] = a2;
  v14[8] = a3;
  sub_1BA4CECCC(a4, (uint64_t)(v14 + 9));
  sub_1BA4CECCC(a5, (uint64_t)(v14 + 14));
  v14[19] = v16;
  v14[20] = v15;
  sub_1BA4CECCC(a7, (uint64_t)(v14 + 21));
  return v14;
}

_QWORD *FeedContextFactory.init(paidBundleConfigManager:paidAccessChecker:bundleSubscriptionManager:featureAvailability:appConfigManager:platform:userInfo:)(__int128 *a1, uint64_t a2, uint64_t a3, __int128 *a4, __int128 *a5, uint64_t *a6, __int128 *a7)
{
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;

  v13 = *a6;
  v14 = a6[1];
  sub_1BA4CECCC(a1, (uint64_t)(v7 + 2));
  v7[7] = a2;
  v7[8] = a3;
  sub_1BA4CECCC(a4, (uint64_t)(v7 + 9));
  sub_1BA4CECCC(a5, (uint64_t)(v7 + 14));
  v7[19] = v13;
  v7[20] = v14;
  sub_1BA4CECCC(a7, (uint64_t)(v7 + 21));
  return v7;
}

void FeedContextFactory.createFeedContext(selectors:)(__n128 *a1@<X8>)
{
  unsigned __int8 v1;

  v1 = 0;
  sub_1BB358594(&v1, a1);
}

void sub_1BB358594(unsigned __int8 *a1@<X1>, __n128 *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  unsigned int v8;
  char **v9;
  unsigned int v10;
  char **v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char *v36;
  unsigned __int8 v37;
  void *v38;
  _QWORD v40[5];
  unsigned __int8 v41;
  __n128 v42;
  __n128 v43;
  unint64_t v44[2];
  char v45;

  v3 = v2;
  v37 = *a1;
  v4 = v2[5];
  v5 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v4);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v7 = objc_msgSend((id)v3[8], sel_cachedSubscription);
  v8 = objc_msgSend(v7, sel_isSubscribed);
  v9 = &selRef_isFreeBadgeEnabledForSubscribers;
  if (!v8)
    v9 = &selRef_isFreeBadgeEnabledForNonSubscribers;
  v35 = objc_msgSend(v6, *v9);
  v36 = (char *)v7;
  v10 = objc_msgSend(v7, sel_isSubscribed);
  v11 = &selRef_isPaidBadgeEnabledForSubscribers;
  if (!v10)
    v11 = &selRef_isPaidBadgeEnabledForNonSubscribers;
  v38 = v6;
  v34 = objc_msgSend(v6, *v11);
  v12 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v13 = objc_msgSend(v12, sel_bundleIdentifier);

  if (!v13)
  {
    v17 = 0;
    goto LABEL_12;
  }
  v14 = sub_1BB8729A0();
  v16 = v15;

  if (v14 == 0xD000000000000010 && v16 == 0x80000001BB985580)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v17 = 0;
    if ((v18 & 1) == 0)
      goto LABEL_12;
  }
  v19 = v3[12];
  v20 = v3[13];
  __swift_project_boxed_opaque_existential_1(v3 + 9, v19);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20);
LABEL_12:
  v33 = v17;
  if (qword_1ED3BA640 != -1)
    swift_once();
  sub_1BA78DF64();
  sub_1BB86D210();
  v21 = v45;
  v22 = v3[17];
  v23 = v3[18];
  __swift_project_boxed_opaque_existential_1(v3 + 14, v22);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
  v25 = v3[20];
  v44[0] = v3[19];
  v44[1] = v25;
  v27 = v3[17];
  v26 = v3[18];
  __swift_project_boxed_opaque_existential_1(v3 + 14, v27);
  v28 = *(uint64_t (**)(_QWORD, _QWORD))(v26 + 16);
  sub_1BA653B2C(v44[0], v25);
  v29 = v28(v27, v26);
  v30 = v3[17];
  v31 = v3[18];
  __swift_project_boxed_opaque_existential_1(v3 + 14, v30);
  (*(void (**)(__n128 *__return_ptr, uint64_t, uint64_t))(v31 + 24))(&v43, v30, v31);
  v42 = v43;
  v41 = v37;
  sub_1BA4C010C((uint64_t)(v3 + 21), (uint64_t)v40);
  v32 = swift_bridgeObjectRetain();
  FeedContext.init(subscription:displayFreeBadges:displayPremiumBadges:debugForcePremiumBadging:segmentSetIds:platform:allowsNewsProxyAudioCommands:timesOfDayConfiguration:feedEditionConfig:feedMode:userInfo:selectors:)(v36, v35, v34, v21, v24, v44, v33 & 1, v29, a2, &v42, &v41, v40, v32);

}

uint64_t FeedContextFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  sub_1BA6DB13C(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return v0;
}

uint64_t FeedContextFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  sub_1BA6DB13C(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return swift_deallocClassInstance();
}

void sub_1BB358978(__n128 *a1@<X8>)
{
  unsigned __int8 v1;

  v1 = 0;
  sub_1BB358594(&v1, a1);
}

uint64_t dispatch thunk of FeedContextFactoryType.createFeedContext(selectors:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FeedContextFactoryType.createFeedContext<A>(serviceConfig:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t method lookup function for FeedContextFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedContextFactory.__allocating_init(paidBundleConfigManager:paidAccessChecker:bundleSubscriptionManager:featureAvailability:appConfigManager:platform:userInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1BB3589C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
  MEMORY[0x1E0C80A78](v2);
  sub_1BB358D00(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1BB358A80 + 4 * byte_1BB90B7E0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB358A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
  *(_QWORD *)(v4 - 64) = 0;
  *(_QWORD *)(v4 - 56) = 0xE000000000000000;
  sub_1BB873CB4();
  v5 = *(_QWORD *)(v4 - 56);
  *(_QWORD *)(v4 - 64) = *(_QWORD *)(v4 - 64);
  *(_QWORD *)(v4 - 56) = v5;
  sub_1BB872AFC("d with status code=");
  sub_1BAAC6DFC();
  sub_1BB87420C();
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v4 - 64);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
  return v7;
}

uint64_t type metadata accessor for WebEmbedDataVisualizationDataServiceError()
{
  uint64_t result;

  result = qword_1EF2C19F0;
  if (!qword_1EF2C19F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB358D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_1BB358D44(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v10;
  char *v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        v7 = sub_1BB86C67C();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 3u:
        v10 = *a2;
        v11 = v10;
        *(_QWORD *)a1 = v10;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_1BB358E90(id *a1)
{
  uint64_t v2;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      v2 = sub_1BB86C67C();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 2u:
    case 3u:

      break;
    default:
      return;
  }
}

_QWORD *sub_1BB358F08(_QWORD *a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      v8 = sub_1BB86C67C();
      (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_5;
    case 2u:
    case 3u:
      v6 = *a2;
      v7 = v6;
      *a1 = v6;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_1BB359020(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1BB359148((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        v8 = sub_1BB86C67C();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_6;
      case 2u:
      case 3u:
        v6 = *a2;
        v7 = v6;
        *a1 = v6;
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB359148(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1BB359184(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 4 && EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1BB86C67C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1BB359248(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1BB359148((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 4 && EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1BB86C67C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BB35931C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BB359398(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  char *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[40];
  _BYTE v60[40];
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[5];
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;

  v2 = v1;
  v4 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v4);
  v58 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v52 - v7;
  sub_1BAB363E8(a1, (uint64_t)&v52 - v7);
  sub_1BA4C010C((uint64_t)(v2 + 20), (uint64_t)v68);
  v9 = sub_1BB359BB8((uint64_t)v8, v68);
  v11 = v10;
  v12 = v2[25];
  swift_beginAccess();
  v13 = *(_QWORD *)(v12 + 16);
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    v14 = sub_1BB4AB584(v9, v11);
    if ((v15 & 1) != 0)
    {
      v16 = *(void **)(*(_QWORD *)(v13 + 56) + 8 * v14);
      swift_endAccess();
      v17 = v16;
      swift_bridgeObjectRelease_n();
      if (qword_1ED3BB670 != -1)
        swift_once();
      v18 = (void *)qword_1ED4768A8;
      sub_1BA7AA598();
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1BB87CE70;
      v20 = v18;
      v21 = sub_1BB86C538();
      v23 = v22;
      *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v19 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v19 + 32) = v21;
      *(_QWORD *)(v19 + 40) = v23;
      v24 = sub_1BB87330C();
      sub_1BB86EF44("Dequeuing existing video player cached manager for %{public}@", 61, 2, &dword_1BA493000, v20, v24, v19);

      swift_bridgeObjectRelease();
      return (uint64_t)v17;
    }
    swift_bridgeObjectRelease();
  }
  v56 = v12 + 16;
  v57 = v9;
  swift_endAccess();
  if (qword_1ED3BB670 != -1)
    swift_once();
  v55 = v2 + 20;
  v25 = (void *)qword_1ED4768A8;
  sub_1BA7AA598();
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1BB87CE70;
  v27 = v25;
  v28 = sub_1BB86C538();
  v30 = v29;
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v26 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v26 + 32) = v28;
  *(_QWORD *)(v26 + 40) = v30;
  v31 = sub_1BB87330C();
  sub_1BB86EF44("Creating new video player manager to dequeue for %{public}@", 59, 2, &dword_1BA493000, v27, v31, v26);

  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_1BA505288(0, &qword_1ED3BFDE8);
  result = sub_1BB86DF48();
  if (!v67)
  {
    __break(1u);
    goto LABEL_17;
  }
  v54 = v12;
  sub_1BA4CECCC(&v66, (uint64_t)v68);
  v33 = MEMORY[0x1BCCE5D40](v2 + 2);
  v34 = v2[3];
  v35 = v69;
  v36 = v70;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v68, v69);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v34, v35, v36);
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_1BA834708(0, v37, v38, v39);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v40 = (void *)result;
  v41 = v11;
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3CE180);
  result = sub_1BB86DF48();
  if (!v65)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v53 = v40;
  sub_1BA4CECCC(&v64, (uint64_t)&v66);
  sub_1BAB363E8(a1, v58);
  sub_1BA4C010C((uint64_t)v68, (uint64_t)&v64);
  sub_1BA4C010C((uint64_t)(v2 + 9), (uint64_t)v63);
  v42 = v2[14];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_1BA505288(0, &qword_1ED3D2EB8);
  swift_retain();
  result = sub_1BB86DF48();
  v43 = v61;
  if (!v61)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v44 = v62;
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_1BA4AF14C();
  result = sub_1BB86DF3C();
  if (result)
  {
    v45 = result;
    sub_1BA4C010C((uint64_t)v55, (uint64_t)v60);
    sub_1BA4C010C((uint64_t)&v66, (uint64_t)v59);
    v46 = objc_allocWithZone((Class)type metadata accessor for FormatVideoPlayerManager());
    swift_bridgeObjectRetain();
    v47 = v53;
    v48 = (char *)sub_1BB283DDC(v58, (uint64_t)&v64, (uint64_t)v63, v42, v43, v44, v45, (uint64_t)v60, v47, (uint64_t)v59, v57, v41);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();

    *(_QWORD *)&v48[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate + 8] = &off_1E7302F10;
    v49 = v54;
    swift_unknownObjectWeakAssign();
    __swift_project_boxed_opaque_existential_1(v2 + 15, v2[18]);
    sub_1BA4A2870(&qword_1EF2C1A30, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerManager, (uint64_t)&unk_1BB8FF6B0);
    v50 = v48;
    sub_1BB86E5F0();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
    swift_beginAccess();
    v17 = v50;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v63[0] = *(_QWORD *)(v49 + 16);
    *(_QWORD *)(v49 + 16) = 0x8000000000000000;
    sub_1BB4BF984((uint64_t)v17, v57, v41, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v49 + 16) = v63[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    return (uint64_t)v17;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1BB359A1C()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  swift_release();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for FormatVideoPlayerReuseManagerCacheKey()
{
  return &type metadata for FormatVideoPlayerReuseManagerCacheKey;
}

uint64_t sub_1BB359A80()
{
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB359AD8()
{
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB359B1C()
{
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

unint64_t sub_1BB359B74()
{
  unint64_t result;

  result = qword_1EF2C1A28;
  if (!qword_1EF2C1A28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90B9E8, &type metadata for FormatVideoPlayerReuseManagerCacheKey);
    atomic_store(result, (unint64_t *)&qword_1EF2C1A28);
  }
  return result;
}

uint64_t sub_1BB359BB8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  id v17;
  id v18;
  _QWORD *v19;
  _QWORD v21[2];

  v4 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v21 - v8;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v10 = sub_1BB86FFB8();
  if (v10)
  {
    v11 = (void *)v10;
    v21[0] = 0;
    v21[1] = 0xE000000000000000;
    v12 = *(_QWORD *)(a1 + 40);
    sub_1BAB363E8(a1, (uint64_t)v6);
    if (!v12)
      sub_1BB86C538();
    swift_bridgeObjectRetain();
    sub_1BAB3642C((uint64_t)v6);
    sub_1BB872AFC(v15);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v16);
    v17 = objc_msgSend(v11, sel_session);
    v18 = objc_msgSend(v17, sel_persistentIdentifier);

    sub_1BB8729A0();
    sub_1BB872AFC(v19);

    swift_bridgeObjectRelease();
    v13 = v21[0];
  }
  else
  {
    v13 = *(_QWORD *)(a1 + 32);
    v14 = *(_QWORD *)(a1 + 40);
    sub_1BAB363E8(a1, (uint64_t)v9);
    if (!v14)
      v13 = sub_1BB86C538();
    swift_bridgeObjectRetain();
    sub_1BAB3642C((uint64_t)v9);
  }
  sub_1BAB3642C(a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v13;
}

void sub_1BB359DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  char *v20;
  void *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  char *v47;
  uint64_t v48;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  v6 = v5 + 64;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  v44 = a1;
  v45 = a2;
  v42 = v5 + 64;
  v43 = v5;
  v46 = v10;
  while (1)
  {
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
          goto LABEL_55;
        if (v15 >= v10)
        {
LABEL_53:
          swift_release();
          return;
        }
        v16 = *(_QWORD *)(v6 + 8 * v15);
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_53;
          v16 = *(_QWORD *)(v6 + 8 * v11);
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_53;
            v16 = *(_QWORD *)(v6 + 8 * v11);
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
                goto LABEL_53;
              v16 = *(_QWORD *)(v6 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_56;
                  if (v11 >= v10)
                    goto LABEL_53;
                  v16 = *(_QWORD *)(v6 + 8 * v11);
                  ++v17;
                  if (v16)
                    goto LABEL_22;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_22:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v14);
      if (*v18 != a1 || v18[1] != a2)
      {
        v20 = *(char **)(*(_QWORD *)(v5 + 56) + 8 * v14);
        if ((sub_1BB874398() & 1) == 0)
          break;
      }
    }
    v48 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController;
    v21 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController];
    if (v21)
    {
      v12 = v20;
      if ((objc_msgSend(v21, sel_isPictureInPictureActive) & 1) != 0)
        goto LABEL_6;
    }
    else
    {
      v22 = v20;
    }
    v47 = v20;
    v23 = &v20[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate];
    v24 = MEMORY[0x1BCCE5D40](&v20[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate]);
    if (v24)
    {
      v25 = v24;
      sub_1BB873708();
      v26 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1BB873708();
      v27 = *(id *)(v26 + qword_1ED476B40);
      sub_1BB873708();

      sub_1BB873708();
      swift_unknownObjectRelease();
    }
    v28 = (void *)MEMORY[0x1BCCE5D40](v23);
    if (v28)
      break;
LABEL_51:
    v41 = *(void **)&v47[v48];
    if (v41)
    {
      objc_msgSend(v41, sel_pause);
      v12 = *(char **)&v47[v48];
    }
    else
    {
      v12 = 0;
    }
    v10 = v46;
    *(_QWORD *)&v47[v48] = 0;

LABEL_6:
  }
  v29 = objc_msgSend(v28, sel_childViewControllers);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3C0420);
  v30 = sub_1BB872DB4();

  if (!(v30 >> 62))
  {
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v31)
      goto LABEL_37;
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  v31 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v31)
  {
LABEL_50:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v44;
    a2 = v45;
    v6 = v42;
    v5 = v43;
    goto LABEL_51;
  }
LABEL_37:
  v32 = 4;
  while (1)
  {
    v33 = (v30 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x1BCCE4630](v32 - 4, v30)
        : *(id *)(v30 + 8 * v32);
    v34 = v33;
    v35 = v32 - 3;
    if (__OFADD__(v32 - 4, 1))
      break;
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      v36 = objc_msgSend(v34, sel_view);
      if (!v36)
        goto LABEL_57;
      v37 = v36;
      v38 = objc_msgSend(v36, sel_constraints);

      if (!v38)
      {
        sub_1BA49A224(0, (unint64_t *)&qword_1EF2C1570);
        sub_1BB872DB4();
        v38 = (id)sub_1BB872D9C();
        swift_bridgeObjectRelease();
      }
      objc_msgSend((id)objc_opt_self(), sel_deactivateConstraints_, v38);

      objc_msgSend(v34, sel_willMoveToParentViewController_, 0);
      v39 = objc_msgSend(v34, sel_view);
      if (!v39)
        goto LABEL_58;
      v40 = v39;
      objc_msgSend(v39, sel_removeFromSuperview);

      objc_msgSend(v34, sel_removeFromParentViewController);
    }

    ++v32;
    if (v35 == v31)
      goto LABEL_50;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
}

uint64_t static JSONEncoder.NonConformingFloatEncodingStrategy.formatNonConformingFloatEncoding.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0x7974696E69666E69;
  a1[1] = 0xE800000000000000;
  a1[2] = 0x74696E69666E692DLL;
  a1[3] = 0xE900000000000079;
  a1[4] = 7233902;
  a1[5] = 0xE300000000000000;
  v2 = *MEMORY[0x1E0CAE180];
  v3 = sub_1BB86BD10();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t FormatJSONEncoder.__allocating_init()()
{
  swift_allocObject();
  return sub_1BB35A338(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1BB35A338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(_QWORD *, _QWORD, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD);
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  uint64_t result;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t v37;
  char *v38;
  int v39;
  BOOL v40;
  void (*v42)(_BYTE *, _QWORD);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[24];
  uint64_t v51;
  _BYTE v52[32];

  v47 = a1;
  sub_1BB35A8B4();
  MEMORY[0x1E0C80A78](v1);
  v46 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v44 - v4;
  v6 = sub_1BB873E58();
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  MEMORY[0x1E0C80A78](v6);
  v45 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v44 - v9;
  v11 = sub_1BB86BD10();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_1BB86BCF8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_1BB86BD40();
  *v18 = sub_1BB35A6EC;
  v18[1] = 0;
  v20 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104);
  v21 = v47;
  v20(v18, *MEMORY[0x1E0CAE148], v15);
  swift_retain();
  sub_1BB86BD04();
  *v14 = 0x7974696E69666E69;
  v14[1] = 0xE800000000000000;
  v14[2] = 0x74696E69666E692DLL;
  v14[3] = 0xE900000000000079;
  v14[4] = 7233902;
  v14[5] = 0xE300000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0CAE180], v11);
  sub_1BB86BD1C();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v23 = (unsigned __int8 *)(v21 + 32);
    v24 = v22 - 1;
    do
    {
      v25 = *v23++;
      v26 = v25 == 0;
      if (v25)
        v27 = v24 == 0;
      else
        v27 = 1;
      --v24;
    }
    while (!v27);
  }
  else
  {
    v26 = 0;
  }
  v28 = v48;
  v29 = v49;
  v30 = (void (*)(_BYTE *, _QWORD))sub_1BB86BD34();
  sub_1BB873E4C();
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  result = v31(v5, 1, v29);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v33 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v33(v10, v5, v29);
    v34 = MEMORY[0x1E0DEAFA0];
    v51 = MEMORY[0x1E0DEAFA0];
    v50[0] = v26;
    sub_1BB4A9CB8((uint64_t)v50, (uint64_t)v10);
    v30(v52, 0);
    v35 = *(_QWORD *)(v21 + 16);
    if (v35)
    {
      v36 = (unsigned __int8 *)(v21 + 32);
      v37 = v35 - 1;
      v38 = v46;
      do
      {
        v39 = *v36++;
        v40 = v39 == 1;
      }
      while (v39 != 1 && v37-- != 0);
    }
    else
    {
      v40 = 0;
      v38 = v46;
    }
    swift_bridgeObjectRelease();
    v42 = (void (*)(_BYTE *, _QWORD))sub_1BB86BD34();
    sub_1BB873E4C();
    result = v31(v38, 1, v29);
    if ((_DWORD)result != 1)
    {
      v43 = (uint64_t)v45;
      v33(v45, v38, v29);
      v51 = v34;
      v50[0] = v40;
      sub_1BB4A9CB8((uint64_t)v50, v43);
      v42(v52, 0);
      swift_release();
      return v19;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB35A6EC(uint64_t a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;
  _BYTE v7[24];
  uint64_t v8;

  if (qword_1ED3C1718 != -1)
    swift_once();
  v3 = (void *)qword_1ED476938;
  v4 = (void *)sub_1BB86C808();
  v5 = objc_msgSend(v3, sel_stringFromDate_, v4);

  sub_1BB8729A0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BB8746B0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
  sub_1BB8743E0();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t FormatJSONEncoder.__deallocating_deinit()
{
  _s8NewsFeed0B13ConfigEncoderCfd_0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatJSONEncoder()
{
  uint64_t result;

  result = qword_1EF2C1A38;
  if (!qword_1EF2C1A38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB35A864()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for FormatJSONEncoder()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB35A8AC()
{
  return type metadata accessor for FormatJSONEncoder();
}

void sub_1BB35A8B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9A40)
  {
    sub_1BB873E58();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9A40);
  }
}

uint64_t dispatch thunk of FormatPluginEventDelegate.select(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FormatPluginEventDelegate.preview(for:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of FormatPluginEventDelegate.sender(_:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_1BB35A920()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  sub_1BA8FD860(v0 + 32);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatEventHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BB35A984(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  result = MEMORY[0x1BCCE5D40](a1 + 16);
  if (result)
  {
    v2 = result;
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = v2;
    v4[3] = sub_1BB35AA64;
    v4[4] = v3;
    swift_unknownObjectRetain_n();
    swift_retain();
    sub_1BB86ED4C();
    swift_unknownObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB35AA40()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB35AA64(double a1, double a2)
{
  uint64_t v2;

  return sub_1BB650F0C(*(_QWORD *)(v2 + 16), a1, a2);
}

uint64_t sub_1BB35AA6C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB35AA98()
{
  uint64_t v0;

  return sub_1BB6505F4(*(_QWORD *)(v0 + 16), *(uint64_t (**)(double, double))(v0 + 24));
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.analyticsDataProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.analyticsDataProvider.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.analyticsDataProvider.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.initiatePlayback(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.startPlayback(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.pausePlayback(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.resumePlayback(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.playbackFailed(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.playbackCompleted(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.startPictureInPicture(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.endPictureInPicture(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.startSessionIfNeeded(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of FormatVideoPlayerCoordinatorType.endSession()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t type metadata accessor for FormatVideoPlayerCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_1BB35AB2C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v1 + 16);
}

uint64_t sub_1BB35AB74(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1BB35ABD8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = *v1;
  v3[5] = v4;
  swift_beginAccess();
  v5 = MEMORY[0x1BCCE5D40](v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v3[3] = v5;
  v3[4] = v6;
  return sub_1BB0440A0;
}

void sub_1BB35AC48()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;

  v1 = objc_msgSend(v0, sel_subviews);
  sub_1BA81CF48();
  v2 = sub_1BB872DB4();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_10:
    v7 = swift_bridgeObjectRelease();
    MEMORY[0x1BCCE1C6C](v7);

    return;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_10;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1BCCE4630](i, v2);
      else
        v5 = *(id *)(v2 + 8 * i + 32);
      v6 = v5;
      objc_msgSend(v5, sel_removeFromSuperview);

    }
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t type metadata accessor for ReusableContainerView()
{
  return objc_opt_self();
}

void sub_1BB35AEF0()
{
  sub_1BB35AC48();
}

void sub_1BB35AF10()
{
  sub_1BB35AF6C(&qword_1EF2C1B60, (uint64_t)&unk_1BB90BC10);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t sub_1BB35AF48()
{
  return sub_1BB35AF6C(&qword_1EF2C1B58, (uint64_t)&unk_1BB90BBD8);
}

uint64_t sub_1BB35AF6C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ReusableContainerView();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatPlaceholder.init(identifier:passthrough:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  return result;
}

uint64_t FormatPlaceholder.passthrough.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t static FormatPlaceholder.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 ^ v3 ^ 1u;
  v5 = sub_1BB874398();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 ^ v3 ^ 1u;
  return result;
}

uint64_t sub_1BB35B018(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  int64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  int64_t v22;
  __int128 v23;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 80);
  v4 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v3 + 16))
  {
    v6 = *v2;
    v5 = v2[1];
    swift_bridgeObjectRetain();
    v7 = sub_1BA6E35A8(v6, v5);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 24 * v7 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        swift_bridgeObjectRetain();
        sub_1BAC7B344(0, v10, 0);
        v11 = (_OWORD *)(v9 + 80);
        do
        {
          v12 = *((_QWORD *)v11 - 5);
          v14 = *((_QWORD *)v11 - 4);
          v13 = *((_QWORD *)v11 - 3);
          v16 = *((_QWORD *)v11 - 2);
          v15 = *((_QWORD *)v11 - 1);
          v23 = *v11;
          v18 = *(_QWORD *)(v4 + 16);
          v17 = *(_QWORD *)(v4 + 24);
          v21 = *((_QWORD *)v11 - 6);
          v22 = v18 + 1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v18 >= v17 >> 1)
            sub_1BAC7B344(v17 > 1, v22, 1);
          *(_QWORD *)(v4 + 16) = v22;
          v19 = v4 + (v18 << 6);
          *(_QWORD *)(v19 + 32) = v21;
          *(_QWORD *)(v19 + 40) = v12;
          *(_OWORD *)(v19 + 48) = v23;
          *(_QWORD *)(v19 + 64) = v14;
          *(_QWORD *)(v19 + 72) = v16;
          v11 += 4;
          *(_QWORD *)(v19 + 80) = v13;
          *(_QWORD *)(v19 + 88) = v15;
          --v10;
        }
        while (v10);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t FormatPlaceholder.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPlaceholder.passthrough.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*FormatPlaceholder.passthrough.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB35B21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB35B604(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB35B240()
{
  sub_1BA52B7B4();
  return sub_1BB874710();
}

uint64_t sub_1BB35B268()
{
  sub_1BA52B7B4();
  return sub_1BB87471C();
}

uint64_t FormatPlaceholder.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  int v14;
  char v15;
  char v16;
  char v17;

  sub_1BA52B758(0, &qword_1ED39DBF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - v6;
  v14 = *(unsigned __int8 *)(v1 + 16);
  v8 = a1[3];
  v9 = a1;
  v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1BA52B7B4();
  sub_1BB8746C8();
  v17 = 0;
  sub_1BB87417C();
  if (!v2 && v14)
  {
    v16 = 1;
    v15 = 1;
    sub_1BB35B3E4();
    sub_1BB874464();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

unint64_t sub_1BB35B3E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB678;
  if (!qword_1ED3AB678)
  {
    sub_1BA52B758(255, &qword_1ED39DBF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB678);
  }
  return result;
}

unint64_t sub_1BB35B43C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA64D628();
  a1[2] = sub_1BACC2604();
  result = sub_1BB35B470();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB35B470()
{
  unint64_t result;

  result = qword_1EF2C1B68;
  if (!qword_1EF2C1B68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPlaceholder, &type metadata for FormatPlaceholder);
    atomic_store(result, (unint64_t *)&qword_1EF2C1B68);
  }
  return result;
}

uint64_t sub_1BB35B4B4(_QWORD *a1)
{
  return FormatPlaceholder.encode(to:)(a1);
}

uint64_t sub_1BB35B4C8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 16);
  return result;
}

_BYTE *sub_1BB35B4D4(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = *result;
  return result;
}

ValueMetadata *type metadata accessor for FormatPlaceholder()
{
  return &type metadata for FormatPlaceholder;
}

uint64_t storeEnumTagSinglePayload for FormatPlaceholder.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB35B53C + 4 * byte_1BB90BC45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB35B570 + 4 * byte_1BB90BC40[v4]))();
}

uint64_t sub_1BB35B570(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB35B578(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB35B580);
  return result;
}

uint64_t sub_1BB35B58C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB35B594);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB35B598(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB35B5A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPlaceholder.CodingKeys()
{
  return &type metadata for FormatPlaceholder.CodingKeys;
}

unint64_t sub_1BB35B5C0()
{
  unint64_t result;

  result = qword_1EF2C1B70;
  if (!qword_1EF2C1B70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90BDC0, &type metadata for FormatPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1B70);
  }
  return result;
}

uint64_t sub_1BB35B604(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F72687473736170 && a2 == 0xEB00000000686775)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BB35B718(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v9;

  v9 = *a4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(a8 + 104))(a1, a2, a3, &v9, a5, a6, 0, a7, a8);
}

uint64_t SharingActivityItemFactory.__allocating_init(commandCenter:shareLinkProvider:shareLinkTextProvider:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4)
{
  uint64_t v7;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v7 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BA4CECCC(a3, v7 + 32);
  sub_1BA4CECCC(a4, v7 + 72);
  *(_OWORD *)(v7 + 112) = 0u;
  *(_OWORD *)(v7 + 128) = 0u;
  *(_OWORD *)(v7 + 144) = 0u;
  *(_OWORD *)(v7 + 160) = 0u;
  *(_OWORD *)(v7 + 176) = 0u;
  *(_QWORD *)(v7 + 192) = 0;
  return v7;
}

uint64_t SharingActivityItemFactory.__allocating_init(commandCenter:shareLinkProvider:shareLinkTextProvider:shareLinkImageProvider:shareLinkPuzzleImageProvider:puzzleRankProvider:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4, uint64_t a5, __int128 *a6, __int128 *a7)
{
  uint64_t v13;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v13 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BA4CECCC(a3, v13 + 32);
  sub_1BA4CECCC(a4, v13 + 72);
  *(_QWORD *)(v13 + 112) = a5;
  sub_1BA4CECCC(a6, v13 + 120);
  sub_1BA4CECCC(a7, v13 + 160);
  return v13;
}

uint64_t SharingActivityItemFactory.init(commandCenter:shareLinkProvider:shareLinkTextProvider:shareLinkImageProvider:shareLinkPuzzleImageProvider:puzzleRankProvider:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4, uint64_t a5, __int128 *a6, __int128 *a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v7 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BA4CECCC(a3, v7 + 32);
  sub_1BA4CECCC(a4, v7 + 72);
  *(_QWORD *)(v7 + 112) = a5;
  sub_1BA4CECCC(a6, v7 + 120);
  sub_1BA4CECCC(a7, v7 + 160);
  return v7;
}

uint64_t SharingActivityItemFactory.createActivityItemSources(headline:selectedText:)(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  objc_class *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  objc_super v34;
  objc_super v35;

  v4 = v3;
  v30 = a3;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31[-1] - v8;
  sub_1BA65E330();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB895110;
  v11 = (objc_class *)type metadata accessor for SharingArticleImageActivityItemSource();
  v12 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed37SharingArticleImageActivityItemSource_headline] = a1;
  v35.receiver = v12;
  v35.super_class = v11;
  swift_unknownObjectRetain();
  *(_QWORD *)(v10 + 32) = objc_msgSendSuper2(&v35, sel_init);
  v13 = (objc_class *)type metadata accessor for SharingArticleTextActivityItemSource();
  v14 = (char *)objc_allocWithZone(v13);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline] = a1;
  swift_unknownObjectRetain();
  v15 = v14;
  v16 = sub_1BAA48174(a1);
  v17 = (uint64_t *)&v15[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle];
  *v17 = v16;
  v17[1] = v18;

  v34.receiver = v15;
  v34.super_class = v13;
  *(_QWORD *)(v10 + 40) = objc_msgSendSuper2(&v34, sel_init);
  v19 = type metadata accessor for SharingArticleURLActivityItemSource();
  v20 = v4[7];
  v21 = v4[8];
  __swift_project_boxed_opaque_existential_1(v4 + 4, v20);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 8);
  v23 = swift_unknownObjectRetain();
  v22(v23, v20, v21);
  sub_1BA4C010C((uint64_t)(v4 + 9), (uint64_t)v31);
  v24 = SharingActivityItemFactory.createLinkPresentationSource(headline:selectedText:)((uint64_t)a1, a2, v30);
  v25 = v32;
  v26 = v33;
  v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  v28 = sub_1BA8E3B74((uint64_t)a1, (uint64_t)v9, v27, v24, v19, v25, v26);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  *(_QWORD *)(v10 + 48) = v28;
  v31[0] = v10;
  sub_1BB872DCC();
  return v31[0];
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(headline:selectedText:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a2;
  v25 = a3;
  v5 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v5);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - v11;
  v13 = v3[7];
  v14 = v3[8];
  __swift_project_boxed_opaque_existential_1(v3 + 4, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, v13, v14);
  sub_1BA7E8428((uint64_t)v12, (uint64_t)v9);
  v15 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  sub_1BA7F0AD4((uint64_t)v9, v17 + v15);
  v18 = (_QWORD *)(v17 + v16);
  v19 = v25;
  *v18 = v24;
  v18[1] = v19;
  v26 = MEMORY[0x1E0DEE9D8];
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB873BC4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v21 = sub_1BB86E740();
  sub_1BA7F0A80((uint64_t)v12);
  return v21;
}

uint64_t SharingActivityItemFactory.createActivityItemSources(tag:)(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  char *v10;
  objc_super v12;

  sub_1BA65E330();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB8856F0;
  v3 = (char *)objc_allocWithZone((Class)type metadata accessor for SharingTagTextActivityItemSource());
  swift_getObjectType();
  v4 = (void *)swift_unknownObjectRetain();
  v5 = sub_1BB6CD604(v4, v3);
  swift_unknownObjectRelease();
  *(_QWORD *)(v2 + 32) = v5;
  v6 = (void *)swift_unknownObjectRetain();
  v7 = SharingActivityItemFactory.createLinkPresentationSource(tag:)(v6);
  v8 = (objc_class *)type metadata accessor for SharingTagURLActivityItemSource();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = &v9[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(_QWORD *)v10 = a1;
  v10[8] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = v7;
  v12.receiver = v9;
  v12.super_class = v8;
  *(_QWORD *)(v2 + 40) = objc_msgSendSuper2(&v12, sel_init);
  sub_1BB872DCC();
  return v2;
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(tag:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  id v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t (*v17)(uint64_t);

  v3 = sub_1BB86DE7C();
  v4 = objc_msgSend(a1, sel_asSportsEvent, MEMORY[0x1E0C80A78](v3));
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)(v1 + 112);
    if (v6)
    {
LABEL_6:
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v5;
      *(_QWORD *)(v8 + 24) = v6;
      v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
      sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5C6B24();
      swift_unknownObjectRetain_n();
      swift_unknownObjectRetain();
      sub_1BB873BC4();
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
      swift_allocObject();
      v10 = sub_1BB86E740();
      swift_unknownObjectRelease();
      goto LABEL_13;
    }
    swift_unknownObjectRelease();
  }
  v7 = objc_msgSend(a1, sel_asSports);
  if (v7)
  {
    v5 = v7;
    v6 = *(_QWORD *)(v1 + 112);
    if (v6)
      goto LABEL_6;
    swift_unknownObjectRelease();
  }
  v11 = objc_msgSend(a1, sel_asPuzzleType);
  if (v11)
  {
    *(_QWORD *)(swift_allocObject() + 16) = v11;
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
    sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C6B24();
    swift_unknownObjectRetain();
    sub_1BB873BC4();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
    swift_allocObject();
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 112);
    if (!v13)
    {
      objc_msgSend(a1, sel_isPuzzleHub);
      *(_QWORD *)(swift_allocObject() + 16) = a1;
      v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
      sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5C6B24();
      swift_unknownObjectRetain();
      sub_1BB873BC4();
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
      swift_allocObject();
      return sub_1BB86E740();
    }
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a1;
    *(_QWORD *)(v14 + 24) = v13;
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
    sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C6B24();
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain();
    sub_1BB873BC4();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
    swift_allocObject();
  }
  v10 = sub_1BB86E740();
LABEL_13:
  swift_unknownObjectRelease();
  return v10;
}

id sub_1BB35C548@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id result;
  uint64_t v13;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - v9;
  sub_1BA49A224(0, &qword_1EF2C1BE8);
  sub_1BA7E8428(a1, (uint64_t)v10);
  swift_bridgeObjectRetain();
  v11 = swift_unknownObjectRetain();
  result = sub_1BB35C628(v11, (uint64_t)v10, a2, a3);
  *a4 = result;
  return result;
}

id sub_1BB35C628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7) != 1)
  {
    v9 = (void *)sub_1BB86C58C();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  }
  if (a4)
  {
    v10 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithHeadline_articleURL_selectedText_, a1, v9, v10);

  swift_unknownObjectRelease();
  return v11;
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(issue:)(void *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  id v4;

  v2 = sub_1BB86DE7C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  MEMORY[0x1E0C80A78](v2);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BA4A2870(&qword_1ED3B07A0, v3, MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  v4 = a1;
  sub_1BB873BC4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  return sub_1BB86E740();
}

uint64_t SharingActivityItemFactory.createActivityItemSources(puzzle:shareData:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  objc_class *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  id v27;
  id v28;
  _QWORD v30[2];
  int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  void *v36;
  objc_super v37;
  _QWORD v38[5];
  objc_super v39;

  v3 = v2;
  v34 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v32 = *(_QWORD *)(a2 + 24);
  v31 = *(unsigned __int8 *)(a2 + 32);
  sub_1BA65E330();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB895110;
  v30[0] = v10;
  v11 = (objc_class *)type metadata accessor for SharingPuzzleImageActivityItemSource();
  v12 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image] = 0;
  v39.receiver = v12;
  v39.super_class = v11;
  swift_unknownObjectRetain();
  v13 = objc_msgSendSuper2(&v39, sel_init);
  v35 = v13;
  v36 = a1;
  sub_1BB3623C0(0, (unint64_t *)&qword_1EF2B9AB8, (uint64_t)&qword_1ED3B99A0, 0x1E0DC3870, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
  v14 = v13;
  sub_1BB86EC14();
  v15 = (void *)sub_1BB86E854();
  sub_1BB86E98C();
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  *(_QWORD *)(v10 + 32) = v14;
  sub_1BB362414(v3 + 160, (uint64_t)v38, &qword_1ED3D2B50, (uint64_t)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  v16 = (objc_class *)type metadata accessor for SharingPuzzleTextActivityItemSource();
  v17 = (char *)objc_allocWithZone(v16);
  v18 = &v17[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___defaultText];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  *(_OWORD *)&v17[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___completeSolvedWithTimeText] = xmmword_1BB87FC90;
  *(_OWORD *)&v17[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___completeSolvedWithRankText] = xmmword_1BB87FC90;
  *(_OWORD *)&v17[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedPuzzleTypeText] = xmmword_1BB87FC90;
  *(_OWORD *)&v17[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedWithTimeText] = xmmword_1BB87FC90;
  *(_OWORD *)&v17[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedWithRank] = xmmword_1BB87FC90;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzle] = a1;
  sub_1BB362414((uint64_t)v38, (uint64_t)&v17[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzleRankProvider], &qword_1ED3D2B50, (uint64_t)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  v19 = &v17[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData];
  *(_QWORD *)v19 = v7;
  *((_QWORD *)v19 + 1) = v8;
  v20 = v32;
  *((_QWORD *)v19 + 2) = v9;
  *((_QWORD *)v19 + 3) = v20;
  v19[32] = v31;
  swift_unknownObjectRetain();
  sub_1BAB5B700(v7, v8, v9, v20);
  v37.receiver = v17;
  v37.super_class = v16;
  v21 = objc_msgSendSuper2(&v37, sel_init);
  sub_1BB362B9C((uint64_t)v38, &qword_1ED3D2B50, (uint64_t)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  v23 = v30[0];
  v22 = v30[1];
  *(_QWORD *)(v30[0] + 40) = v21;
  sub_1BB362414(v22 + 120, (uint64_t)v38, &qword_1ED3C0B10, (uint64_t)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a1;
  sub_1BB04C5BC((uint64_t)v38, v24 + 24);
  v38[0] = MEMORY[0x1E0DEE9D8];
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v25, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  swift_unknownObjectRetain_n();
  sub_1BB873BC4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v26 = sub_1BB86E740();
  v27 = objc_allocWithZone((Class)type metadata accessor for SharingPuzzleURLActivityItemSource());
  v28 = sub_1BB00517C(a1, v26);
  swift_unknownObjectRelease();
  swift_release();
  *(_QWORD *)(v23 + 48) = v28;
  v38[0] = v23;
  sub_1BB872DCC();
  return v38[0];
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(puzzle:puzzleImageShareAttributeProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  _QWORD v8[5];

  v4 = sub_1BB86DE7C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  MEMORY[0x1E0C80A78](v4);
  sub_1BB362414(a2, (uint64_t)v8, &qword_1ED3C0B10, (uint64_t)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  sub_1BB04C5BC((uint64_t)v8, v6 + 24);
  v8[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870(&qword_1ED3B07A0, v5, MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  swift_unknownObjectRetain();
  sub_1BB873BC4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  return sub_1BB86E740();
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(puzzleType:)(uint64_t a1)
{
  return sub_1BB35CE5C(a1);
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(channel:)(uint64_t a1)
{
  return sub_1BB35CE5C(a1);
}

uint64_t sub_1BB35CE5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v2 = sub_1BB86DE7C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  MEMORY[0x1E0C80A78](v2);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BA4A2870(&qword_1ED3B07A0, v3, MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  swift_unknownObjectRetain();
  sub_1BB873BC4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  return sub_1BB86E740();
}

uint64_t SharingActivityItemFactory.createActivityItemSources(feedDescriptor:)(void *a1)
{
  uint64_t v2;
  objc_class *v3;
  id v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  char *v15;
  objc_super v17;
  objc_super v18;

  sub_1BA65E330();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB8856F0;
  v3 = (objc_class *)type metadata accessor for SharingTagTextActivityItemSource();
  v4 = objc_allocWithZone(v3);
  v5 = a1;
  v6 = (char *)v4;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_tag] = FCFeedDescriptor.feedTag.getter();
  v7 = FCFeedDescriptor.feedExternalTitle.getter();
  v8 = (uint64_t *)&v6[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle];
  *v8 = v7;
  v8[1] = v9;

  v18.receiver = v6;
  v18.super_class = v3;
  v10 = objc_msgSendSuper2(&v18, sel_init);

  *(_QWORD *)(v2 + 32) = v10;
  v11 = v5;
  v12 = SharingActivityItemFactory.createLinkPresentationSource(feedDescriptor:)(v11);
  v13 = (objc_class *)type metadata accessor for SharingTagURLActivityItemSource();
  v14 = (char *)objc_allocWithZone(v13);
  v15 = &v14[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(_QWORD *)v15 = v11;
  v15[8] = 1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = v12;
  v17.receiver = v14;
  v17.super_class = v13;
  *(_QWORD *)(v2 + 40) = objc_msgSendSuper2(&v17, sel_init);
  sub_1BB872DCC();
  return v2;
}

uint64_t SharingActivityItemFactory.createLinkPresentationSource(feedDescriptor:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t);
  id v9;
  uint64_t v10;
  id v11;
  uint64_t (*v12)(uint64_t);
  unsigned int v14;
  uint64_t (*v15)(uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  id v20;

  v2 = v1;
  v4 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v4);
  v5 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSportsEvent);
  swift_unknownObjectRelease();
  if (v5)
  {
    v6 = *(_QWORD *)(v2 + 112);
    if (v6)
    {
LABEL_6:
      v7 = (_QWORD *)swift_allocObject();
      v7[2] = a1;
      v7[3] = v5;
      v7[4] = v6;
      v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
      sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5C6B24();
      swift_unknownObjectRetain_n();
      v9 = a1;
      swift_unknownObjectRetain();
      sub_1BB873BC4();
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
      swift_allocObject();
      v10 = sub_1BB86E740();
      swift_unknownObjectRelease();
LABEL_10:
      swift_unknownObjectRelease();
      return v10;
    }
    swift_unknownObjectRelease();
  }
  v5 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSports);
  swift_unknownObjectRelease();
  if (v5)
  {
    v6 = *(_QWORD *)(v2 + 112);
    if (v6)
      goto LABEL_6;
    swift_unknownObjectRelease();
  }
  v11 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asPuzzleType);
  swift_unknownObjectRelease();
  if (v11)
  {
    *(_QWORD *)(swift_allocObject() + 16) = v11;
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
    sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C6B24();
    swift_unknownObjectRetain();
    sub_1BB873BC4();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
    swift_allocObject();
    v10 = sub_1BB86E740();
    goto LABEL_10;
  }
  v14 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_isPuzzleHub);
  swift_unknownObjectRelease();
  if (v14)
  {
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
    sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C6B24();
    v16 = a1;
  }
  else
  {
    v17 = *(_QWORD *)(v2 + 112);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a1;
    *(_QWORD *)(v18 + 24) = v17;
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
    sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5C6B24();
    v20 = a1;
    swift_unknownObjectRetain();
  }
  sub_1BB873BC4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  return sub_1BB86E740();
}

uint64_t sub_1BB35D6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  objc_class *v5;
  char *v6;
  id v7;
  uint64_t result;
  objc_super v9;
  _BYTE v10[40];

  sub_1BB362414(a2, (uint64_t)v10, &qword_1ED3C0B10, (uint64_t)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  v5 = (objc_class *)type metadata accessor for PuzzleLinkPresentationSource();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzle] = a1;
  sub_1BB362414((uint64_t)v10, (uint64_t)&v6[OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzleImageShareAttributeProvider], &qword_1ED3C0B10, (uint64_t)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  v9.receiver = v6;
  v9.super_class = v5;
  swift_unknownObjectRetain();
  v7 = objc_msgSendSuper2(&v9, sel_init);
  result = sub_1BB362B9C((uint64_t)v10, &qword_1ED3C0B10, (uint64_t)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  *a3 = v7;
  return result;
}

id sub_1BB35D7BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v4;
  char *v5;
  id result;
  objc_super v7;

  v4 = (objc_class *)type metadata accessor for PuzzleTypeLinkPresentationSource();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed32PuzzleTypeLinkPresentationSource_puzzleType] = a1;
  v7.receiver = v5;
  v7.super_class = v4;
  swift_unknownObjectRetain();
  result = objc_msgSendSuper2(&v7, sel_init);
  *a2 = result;
  return result;
}

void sub_1BB35D82C(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  id v6;
  id v7;

  swift_unknownObjectRetain();
  v6 = objc_msgSend(a2, sel_shareImageFor_, a1);
  v7 = objc_msgSend(objc_allocWithZone((Class)NETagLinkPresentationSource), sel_initWithTag_image_, a1, v6);
  swift_unknownObjectRelease();

  *a3 = v7;
}

uint64_t sub_1BB35D8B0@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t result;

  v4 = objc_msgSend(a1, sel_name);
  sub_1BB8729A0();

  v5 = objc_allocWithZone((Class)NEPuzzleHubLinkPresentationSource);
  swift_unknownObjectRetain();
  v6 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithTitle_tag_, v6, a1);

  result = swift_unknownObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t sub_1BB35D964@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, Class *a3@<X3>, SEL *a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t result;
  uint64_t v18;
  _QWORD *v19;

  v19 = a5;
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  FCFeedDescriptor.feedExternalTitle.getter();
  FCFeedDescriptor.feedURL.getter();
  v13 = objc_allocWithZone(*a3);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v14 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1BB86C58C();
  v16 = objc_msgSend(v13, *a4, v14, v15, a1, a2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *v19 = v16;
  return result;
}

uint64_t sub_1BB35DA98@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t result;

  FCFeedDescriptor.feedExternalTitle.getter();
  v2 = FCFeedDescriptor.feedTag.getter();
  v3 = objc_allocWithZone((Class)NEPuzzleHubLinkPresentationSource);
  v4 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithTitle_tag_, v4, v2);

  result = swift_unknownObjectRelease();
  *a1 = v5;
  return result;
}

uint64_t sub_1BB35DB30@<X0>(id a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;

  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  FCFeedDescriptor.feedExternalTitle.getter();
  FCFeedDescriptor.feedURL.getter();
  if (a1)
  {
    a1 = objc_msgSend(a1, sel_shareImageFor_, FCFeedDescriptor.feedTag.getter());
    swift_unknownObjectRelease();
  }
  v8 = objc_allocWithZone((Class)NETagLinkPresentationSource);
  v9 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1BB86C58C();
  v11 = objc_msgSend(v8, sel_initWithTitle_url_image_, v9, v10, a1);

  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v11;
  return result;
}

uint64_t SharingActivityItemFactory.createActivityItem(for:feedItemIdentifier:type:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[5];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v8 = v7;
  v23[2] = a7;
  v23[1] = a6;
  v29 = a5;
  v30 = a1;
  v26 = a2;
  v27 = a3;
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E08, (void (*)(void))sub_1BA81FF50);
  MEMORY[0x1E0C80A78](v10);
  v23[3] = (char *)v23 - v11;
  sub_1BB362B0C(0, (unint64_t *)&qword_1ED3A3E10, (void (*)(void))sub_1BA81FF50);
  MEMORY[0x1E0C80A78](v12);
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E20, (void (*)(void))sub_1BA82DAD0);
  MEMORY[0x1E0C80A78](v13);
  sub_1BB362B0C(0, (unint64_t *)&qword_1ED3A3E30, (void (*)(void))sub_1BA82DAD0);
  MEMORY[0x1E0C80A78](v14);
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E40, (void (*)(void))sub_1BA82BE0C);
  MEMORY[0x1E0C80A78](v15);
  sub_1BB362B0C(0, (unint64_t *)&unk_1ED3A3E50, (void (*)(void))sub_1BA82BE0C);
  MEMORY[0x1E0C80A78](v16);
  v24 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v24);
  v23[4] = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BB8709F0();
  v19 = MEMORY[0x1E0C80A78](v18);
  v20 = *a4;
  v21 = MEMORY[0x1BCCE5D40](v8 + 16, v19);
  if (v21)
  {
    v25 = *(_QWORD *)(v8 + 24);
    v28 = v21;
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _QWORD v17[16];

  v17[1] = a4;
  v17[3] = a3;
  v17[4] = a1;
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E08, (void (*)(void))sub_1BA81FF50);
  MEMORY[0x1E0C80A78](v6);
  v17[2] = (char *)v17 - v7;
  sub_1BB362B0C(0, (unint64_t *)&qword_1ED3A3E10, (void (*)(void))sub_1BA81FF50);
  MEMORY[0x1E0C80A78](v8);
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E20, (void (*)(void))sub_1BA82DAD0);
  MEMORY[0x1E0C80A78](v9);
  sub_1BB362B0C(0, (unint64_t *)&qword_1ED3A3E30, (void (*)(void))sub_1BA82DAD0);
  MEMORY[0x1E0C80A78](v10);
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E40, (void (*)(void))sub_1BA82BE0C);
  MEMORY[0x1E0C80A78](v11);
  sub_1BB362B0C(0, (unint64_t *)&unk_1ED3A3E50, (void (*)(void))sub_1BA82BE0C);
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1BB8709F0();
  v14 = MEMORY[0x1E0C80A78](v13);
  v15 = *a2;
  if (MEMORY[0x1BCCE5D40](v4 + 16, v14))
    __asm { BR              X9 }
  return 0;
}

void sub_1BB35F2FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v5 - 208) = v1;
  *(_QWORD *)(v5 - 192) = a1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v4, *MEMORY[0x1E0DB9F08], v2);
  v6 = sub_1BB86DC0C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638];
  *(_QWORD *)(v5 - 144) = v6;
  *(_QWORD *)(v5 - 136) = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, v7, (uint64_t)&protocol conformance descriptor for Tracker);
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v5 - 184);
  *(_OWORD *)(v5 - 128) = 0u;
  *(_OWORD *)(v5 - 112) = 0u;
  *(_BYTE *)(v5 - 96) = 1;
  sub_1BB87069C();
  swift_allocObject();
  v8 = *(id *)(v5 - 200);
  swift_retain();
  *(_QWORD *)(v5 - 184) = sub_1BB870684();
  v9 = qword_1ED3BA900;
  v10 = *(_QWORD *)(v5 - 176);
  swift_unknownObjectRetain();
  if (v9 != -1)
    swift_once();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB872970();
  *(_BYTE *)(v5 - 168) = 1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_WORD *)(v11 + 24) = 256;
  sub_1BA82BE0C();
  swift_unknownObjectRetain();
  sub_1BB870048();
  *(_BYTE *)(v5 - 168) = 1;
  sub_1BB8703E4();
  sub_1BB870048();
  *(_QWORD *)(v5 - 168) = v10;
  *(_WORD *)(v5 - 160) = 256;
  sub_1BB86FCA0();
  swift_allocObject();
  sub_1BB86FC88();
  swift_unknownObjectRelease();
  sub_1BB86FC7C();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  JUMPOUT(0x1BB35F2D8);
}

uint64_t SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:)(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  int v15;
  id v16;
  uint64_t v17;
  id v18;
  _QWORD v21[5];
  __int128 v22;
  __int128 v23;
  char v24;

  v5 = v4;
  v10 = sub_1BB8709F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a2;
  if (!MEMORY[0x1BCCE5D40](v5 + 16, v12))
    return 0;
  v16 = objc_msgSend(a1, sel_feedConfiguration);
  if (v15 == 7)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E0DB9F08], v10);
    v21[3] = sub_1BB86DC0C();
    v21[4] = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
    v21[0] = a3;
    v22 = 0u;
    v23 = 0u;
    v24 = 1;
    sub_1BB87069C();
    swift_allocObject();
    swift_retain();
    sub_1BB870684();
    sub_1BAAA983C(a1);
    v17 = sub_1BB86FC7C();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    if (v15 == 6)
    {
      switch((unint64_t)v16)
      {
        case 3uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
          goto LABEL_10;
        default:
          goto LABEL_11;
      }
    }
    if (v15 == 5 && v16 == (id)3)
    {
LABEL_10:
      swift_unknownObjectRelease();
      return 0;
    }
    else
    {
LABEL_11:
      v18 = FCFeedDescriptor.feedTag.getter();
      LOBYTE(v21[0]) = v15;
      v17 = SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:)((uint64_t)v18, (unsigned __int8 *)v21, a3, a4);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
  }
  return v17;
}

uint64_t SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  _QWORD v16[6];
  __int128 v17;
  __int128 v18;
  char v19;

  v8 = sub_1BB8709F0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!MEMORY[0x1BCCE5D40](v4 + 16, v10))
    return 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E0DB9F08], v8);
  v16[4] = sub_1BB86DC0C();
  v16[5] = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
  v16[1] = a3;
  v17 = 0u;
  v18 = 0u;
  v19 = 1;
  sub_1BB87069C();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_retain();
  v13 = a4;
  sub_1BB870684();
  if (sub_1BAAA9AD8(a1))
  {
    v14 = sub_1BB86FC7C();
    swift_release();
  }
  else
  {
    v14 = 0;
  }
  swift_unknownObjectRelease();
  swift_release();
  return v14;
}

uint64_t SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(void *a1, unsigned __int8 *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  __int16 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  char v37;

  v29 = a5;
  v30 = a1;
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E40, (void (*)(void))sub_1BA82BE0C);
  MEMORY[0x1E0C80A78](v9);
  sub_1BB362B0C(0, (unint64_t *)&unk_1ED3A3E50, (void (*)(void))sub_1BA82BE0C);
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1BB8709F0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a2;
  if (MEMORY[0x1BCCE5D40](v5 + 16, v13))
  {
    v28 = *(_QWORD *)(v5 + 24);
    v17 = *MEMORY[0x1E0DB9F08];
    if (v16)
    {
      if (v16 == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v15, v17, v11);
        v33 = sub_1BB86DC0C();
        v34 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
        v31 = a3;
        v35 = 0u;
        v36 = 0u;
        v37 = 1;
        sub_1BB87069C();
        swift_allocObject();
        swift_unknownObjectRetain();
        swift_retain();
        v18 = a4;
        sub_1BB870684();
        v19 = qword_1ED3BA900;
        v20 = v30;
        swift_unknownObjectRetain();
        if (v19 != -1)
          swift_once();
        swift_unknownObjectRetain();
        swift_retain();
        v29 = sub_1BB872970();
        LOBYTE(v31) = 1;
        v21 = swift_allocObject();
        *(_QWORD *)(v21 + 16) = v20;
        *(_WORD *)(v21 + 24) = 256;
        sub_1BA82BE0C();
        swift_unknownObjectRetain();
        sub_1BB870048();
        LOBYTE(v31) = 1;
        sub_1BB8703E4();
        sub_1BB870048();
        v31 = v20;
        v32 = 256;
        sub_1BB86FCA0();
        swift_allocObject();
        sub_1BB86FC88();
        swift_unknownObjectRelease();
        v22 = sub_1BB86FC7C();
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v15, v17, v11);
      v33 = sub_1BB86DC0C();
      v34 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
      v31 = a3;
      v35 = 0u;
      v36 = 0u;
      v37 = 1;
      sub_1BB87069C();
      swift_allocObject();
      swift_unknownObjectRetain();
      swift_retain();
      v26 = a4;
      sub_1BB870684();
      _s5TeaUI15SharingActivityC8NewsFeedE21openPuzzleFullArchive10puzzleTypeACSo08FCPuzzleL9Providing_p_tFZ_0(v30);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v15, v17, v11);
      v33 = sub_1BB86DC0C();
      v34 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
      v31 = a3;
      v35 = 0u;
      v36 = 0u;
      v37 = 1;
      sub_1BB87069C();
      swift_allocObject();
      swift_unknownObjectRetain();
      swift_retain();
      v23 = a4;
      sub_1BB870684();
      v24 = sub_1BB86FCA0();
      v25 = v30;
      swift_getObjectType();
      sub_1BAAA8C88(v25, v24);
    }
    v22 = sub_1BB86FC7C();
    swift_unknownObjectRelease();
    swift_release();
LABEL_11:
    swift_release();
    return v22;
  }
  return 0;
}

{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  char v41;

  v31 = a4;
  v32 = a5;
  v34 = a1;
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E20, (void (*)(void))sub_1BA82DAD0);
  MEMORY[0x1E0C80A78](v8);
  sub_1BB362B0C(0, (unint64_t *)&qword_1ED3A3E30, (void (*)(void))sub_1BA82DAD0);
  MEMORY[0x1E0C80A78](v9);
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E40, (void (*)(void))sub_1BA82BE0C);
  MEMORY[0x1E0C80A78](v10);
  sub_1BB362B0C(0, (unint64_t *)&unk_1ED3A3E50, (void (*)(void))sub_1BA82BE0C);
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1BB8709F0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a2;
  v18 = MEMORY[0x1BCCE5D40](v5 + 16, v14);
  if (!v18)
    return 0;
  v33 = *(_QWORD *)(v5 + 24);
  if (v17)
  {
    v30 = v18;
    v19 = *MEMORY[0x1E0DB9F08];
    if (v17 == 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v16, v19, v12);
      v37 = sub_1BB86DC0C();
      v38 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
      v35 = a3;
      v39 = 0u;
      v40 = 0u;
      v41 = 1;
      sub_1BB87069C();
      swift_allocObject();
      swift_unknownObjectRetain();
      swift_retain();
      v20 = v31;
      v32 = sub_1BB870684();
      v21 = qword_1ED3BA900;
      v22 = v34;
      swift_unknownObjectRetain();
      if (v21 != -1)
        swift_once();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1BB872970();
      LOBYTE(v35) = 1;
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v22;
      *(_WORD *)(v23 + 24) = 256;
      sub_1BA82BE0C();
      swift_unknownObjectRetain();
      sub_1BB870048();
      LOBYTE(v35) = 1;
      sub_1BB8703E4();
      sub_1BB870048();
      v35 = v22;
      v36 = 256;
      sub_1BB86FCA0();
      swift_allocObject();
      sub_1BB86FC88();
      swift_unknownObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v16, v19, v12);
      v37 = sub_1BB86DC0C();
      v38 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
      v35 = a3;
      v39 = 0u;
      v40 = 0u;
      v41 = 1;
      sub_1BB87069C();
      swift_allocObject();
      swift_retain();
      sub_1BB870684();
      v27 = qword_1ED3BA8E8;
      v28 = v34;
      swift_unknownObjectRetain();
      if (v27 != -1)
        swift_once();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1BB872970();
      LOBYTE(v35) = 1;
      *(_QWORD *)(swift_allocObject() + 16) = v28;
      sub_1BA82DAD0();
      swift_unknownObjectRetain();
      sub_1BB870048();
      LOBYTE(v35) = 1;
      sub_1BB8703E4();
      sub_1BB870048();
      v35 = v28;
      sub_1BB86FCA0();
      swift_allocObject();
      sub_1BB86FC88();
      swift_unknownObjectRelease();
    }
    v24 = sub_1BB86FC7C();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E0DB9F08], v12);
    v37 = sub_1BB86DC0C();
    v38 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
    v35 = a3;
    v39 = 0u;
    v40 = 0u;
    v41 = 1;
    sub_1BB87069C();
    swift_allocObject();
    swift_retain();
    sub_1BB870684();
    v25 = sub_1BB86FCA0();
    v26 = v34;
    swift_getObjectType();
    sub_1BAAA8C88(v26, v25);
    v24 = sub_1BB86FC7C();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  return v24;
}

uint64_t SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[7];

  v19[0] = a4;
  v19[1] = a5;
  v19[5] = a3;
  v19[6] = a1;
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E08, (void (*)(void))sub_1BA81FF50);
  MEMORY[0x1E0C80A78](v7);
  v19[2] = (char *)v19 - v8;
  sub_1BB362B0C(0, (unint64_t *)&qword_1ED3A3E10, (void (*)(void))sub_1BA81FF50);
  MEMORY[0x1E0C80A78](v9);
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E20, (void (*)(void))sub_1BA82DAD0);
  MEMORY[0x1E0C80A78](v10);
  sub_1BB362B0C(0, (unint64_t *)&qword_1ED3A3E30, (void (*)(void))sub_1BA82DAD0);
  MEMORY[0x1E0C80A78](v11);
  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E40, (void (*)(void))sub_1BA82BE0C);
  MEMORY[0x1E0C80A78](v12);
  sub_1BB362B0C(0, (unint64_t *)&unk_1ED3A3E50, (void (*)(void))sub_1BA82BE0C);
  MEMORY[0x1E0C80A78](v13);
  v14 = sub_1BB8709F0();
  v15 = MEMORY[0x1E0C80A78](v14);
  v16 = *a2;
  v17 = MEMORY[0x1BCCE5D40](v5 + 16, v15);
  if (v17)
  {
    v19[3] = *(_QWORD *)(v5 + 24);
    v19[4] = v17;
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t SharingActivityItemFactory.deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_unknownObjectRelease();
  sub_1BB362B9C(v0 + 120, &qword_1ED3C0B10, (uint64_t)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  sub_1BB362B9C(v0 + 160, &qword_1ED3D2B50, (uint64_t)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  return v0;
}

uint64_t SharingActivityItemFactory.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_unknownObjectRelease();
  sub_1BB362B9C(v0 + 120, &qword_1ED3C0B10, (uint64_t)&qword_1ED3C4370, (uint64_t)&protocol descriptor for PuzzleImageShareAttributeProviderType);
  sub_1BB362B9C(v0 + 160, &qword_1ED3D2B50, (uint64_t)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB3614B8(void *a1, uint64_t a2, uint64_t a3)
{
  return SharingActivityItemFactory.createActivityItemSources(headline:selectedText:)(a1, a2, a3);
}

uint64_t sub_1BB3614D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SharingActivityItemFactory.createLinkPresentationSource(headline:selectedText:)(a1, a2, a3);
}

uint64_t sub_1BB3614F8(uint64_t a1)
{
  return SharingActivityItemFactory.createActivityItemSources(tag:)(a1);
}

uint64_t sub_1BB36151C(void *a1, uint64_t a2)
{
  return SharingActivityItemFactory.createActivityItemSources(puzzle:shareData:)(a1, a2);
}

uint64_t sub_1BB361544(void *a1)
{
  return SharingActivityItemFactory.createActivityItemSources(feedDescriptor:)(a1);
}

uint64_t sub_1BB361564(void *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  id v4;

  v2 = sub_1BB86DE7C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  MEMORY[0x1E0C80A78](v2);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BA4A2870(&qword_1ED3B07A0, v3, MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  v4 = a1;
  sub_1BB873BC4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  return sub_1BB86E740();
}

uint64_t sub_1BB3616B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v2 = sub_1BB86DE7C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  MEMORY[0x1E0C80A78](v2);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BA4A2870(&qword_1ED3B07A0, v3, MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  swift_unknownObjectRetain();
  sub_1BB873BC4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  return sub_1BB86E740();
}

uint64_t sub_1BB361800(void *a1)
{
  return SharingActivityItemFactory.createLinkPresentationSource(tag:)(a1);
}

uint64_t sub_1BB361820(void *a1)
{
  return SharingActivityItemFactory.createLinkPresentationSource(feedDescriptor:)(a1);
}

uint64_t sub_1BB361840(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return SharingActivityItemFactory.createActivityItem(for:feedItemIdentifier:type:tracker:sourceView:sourceItem:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1BB361860(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:)(a1, a2, a3, a4);
}

uint64_t sub_1BB361880(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1BB3618A0(void *a1, char *a2, void *a3)
{
  return _s8NewsFeed26SharingActivityItemFactoryC06createdE03for4type7tracker10sourceViewSo10UIActivityCSgSo7FCIssueC_AA0c5IssueD0O12AppAnalytics7TrackerCSo6UIViewCSgtF_0(a1, a2, a3);
}

uint64_t sub_1BB3618C0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(a1, a2, a3, a4);
}

uint64_t sub_1BB3618E0(void *a1, unsigned __int8 *a2, void *a3, void *a4, uint64_t a5)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1BB361900(void *a1, unsigned __int8 *a2, void *a3, void *a4, uint64_t a5)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:sourceItem:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1BB361920(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return SharingActivityItemFactory.createActivityItem(for:type:tracker:sourceView:)(a1, a2, a3, a4);
}

uint64_t _s8NewsFeed26SharingActivityItemFactoryC06createdE03for4type7tracker10sourceViewSo10UIActivityCSgSo7FCIssueC_AA0c5IssueD0O12AppAnalytics7TrackerCSo6UIViewCSgtF_0(void *a1, char *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  char v25;

  sub_1BB362A98(0, (unint64_t *)&qword_1ED3A3E08, (void (*)(void))sub_1BA81FF50);
  MEMORY[0x1E0C80A78](v7);
  sub_1BB362B0C(0, (unint64_t *)&qword_1ED3A3E10, (void (*)(void))sub_1BA81FF50);
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1BB8709F0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a2;
  if (!MEMORY[0x1BCCE5D40](v3 + 16, v11))
    return 0;
  v19 = *(_QWORD *)(v3 + 24);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E0DB9F08], v9);
  if ((v14 & 1) == 0)
  {
    v21 = sub_1BB86DC0C();
    v22 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
    v20 = a3;
    v23 = 0u;
    v24 = 0u;
    v25 = 1;
    sub_1BB87069C();
    swift_allocObject();
    swift_retain();
    sub_1BB870684();
    if (sub_1BAAA9418(a1))
    {
      v17 = sub_1BB86FC7C();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      return v17;
    }
    swift_unknownObjectRelease();
    swift_release();
    return 0;
  }
  v21 = sub_1BB86DC0C();
  v22 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
  v20 = a3;
  v23 = 0u;
  v24 = 0u;
  v25 = 1;
  sub_1BB87069C();
  swift_allocObject();
  swift_retain();
  sub_1BB870684();
  v15 = objc_msgSend(a1, sel_sourceChannel);
  v16 = qword_1ED39F0A0;
  swift_unknownObjectRetain();
  if (v16 != -1)
    swift_once();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB872970();
  LOBYTE(v20) = 0;
  sub_1BA81FF50();
  sub_1BB870048();
  LOBYTE(v20) = 0;
  sub_1BB8703E4();
  sub_1BB870048();
  v20 = v15;
  sub_1BB86FCA0();
  swift_allocObject();
  sub_1BB86FC88();
  swift_unknownObjectRelease_n();
  v17 = sub_1BB86FC7C();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_1BB361D5C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = sub_1BB86C67C();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1BB361E30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1BB35C548(v1 + v5, *v6, v6[1], a1);
}

unint64_t sub_1BB361EA0()
{
  unint64_t result;

  result = qword_1ED3ACAA0;
  if (!qword_1ED3ACAA0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3ACAA0);
  }
  return result;
}

id sub_1BB361EF4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)NETagLinkPresentationSource), sel_initWithTag_image_, *(_QWORD *)(v1 + 16), 0);
  *a1 = result;
  return result;
}

uint64_t sub_1BB361F38@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB35D8B0(*(void **)(v1 + 16), a1);
}

void sub_1BB361F44(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BB35D82C(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

id sub_1BB361F4C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BB362D98((Class *)off_1E72495B0, (SEL *)&selRef_initWithPuzzleTag_, a1);
}

id sub_1BB361F64@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BB361FBC((Class *)off_1E72495C0, (SEL *)&selRef_initWithSportsTag_tagImageProvider_, a1);
}

uint64_t objectdestroy_8Tm_6()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_1BB361FA8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BB361FBC((Class *)off_1E72495B8, (SEL *)&selRef_initWithSportsEvent_tagImageProvider_, a1);
}

id sub_1BB361FBC@<X0>(Class *a1@<X0>, SEL *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id result;

  result = objc_msgSend(objc_allocWithZone(*a1), *a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
  *a3 = result;
  return result;
}

uint64_t _s8NewsFeed26SharingActivityItemFactoryC06createdE7Sources5issueSaySo010UIActivityE6Source_pGSo7FCIssueC_tF_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  uint64_t v8;
  id v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  objc_class *v18;
  char *v19;
  id v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  id v32;
  uint64_t (*v33)(uint64_t);
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  _QWORD v39[3];
  uint64_t v40;
  objc_super v41;
  objc_super v42;

  v2 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA65E330();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB895110;
  v6 = (objc_class *)type metadata accessor for SharingIssueImageActivityItemSource();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed35SharingIssueImageActivityItemSource_issueImage] = 0;
  v9 = a1;
  v10 = v7;
  v11 = objc_msgSend(v9, sel_coverImageAssetHandle);
  v39[2] = v2;
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel_filePath);
    if (v13)
    {
      sub_1BB8729A0();
      v39[1] = v4;

      v14 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
      v15 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v13 = objc_msgSend(v14, sel_initWithContentsOfFile_, v15);

    }
    else
    {

    }
  }
  else
  {
    v13 = 0;
  }
  v16 = *(void **)&v7[v8];
  *(_QWORD *)&v7[v8] = v13;

  v42.receiver = v10;
  v42.super_class = v6;
  v17 = objc_msgSendSuper2(&v42, sel_init);

  *(_QWORD *)(v5 + 32) = v17;
  v18 = (objc_class *)type metadata accessor for SharingIssueTextActivityItemSource();
  v19 = (char *)objc_allocWithZone(v18);
  *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_issue] = v9;
  v20 = v9;
  v21 = v19;
  v22 = objc_msgSend(v20, sel_title);
  v23 = sub_1BB8729A0();
  v25 = v24;

  v26 = (uint64_t *)&v21[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle];
  *v26 = v23;
  v26[1] = v25;
  v27 = objc_msgSend(v20, sel_coverDate);
  v28 = sub_1BB8729A0();
  v30 = v29;

  v31 = (uint64_t *)&v21[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemCoverDate];
  *v31 = v28;
  v31[1] = v30;

  v41.receiver = v21;
  v41.super_class = v18;
  v32 = objc_msgSendSuper2(&v41, sel_init);

  *(_QWORD *)(v5 + 40) = v32;
  *(_QWORD *)(swift_allocObject() + 16) = v20;
  v40 = MEMORY[0x1E0DEE9D8];
  v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v33, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  v34 = v20;
  sub_1BB873BC4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v35 = sub_1BB86E740();
  v36 = objc_allocWithZone((Class)type metadata accessor for SharingIssueURLActivityItemSource());
  v37 = sub_1BB0B63F4(v34, v35);

  swift_release();
  *(_QWORD *)(v5 + 48) = v37;
  v40 = v5;
  sub_1BB872DCC();
  return v40;
}

id sub_1BB3623AC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BB362D98((Class *)off_1E7249598, (SEL *)&selRef_initWithIssue_, a1);
}

void sub_1BB3623C0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1BB873A2C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB362414(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;

  sub_1BB3623C0(0, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4D9CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BB362474@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB35D6CC(*(_QWORD *)(v1 + 16), v1 + 24, a1);
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t _s8NewsFeed26SharingActivityItemFactoryC06createdE7Sources10puzzleTypeSaySo010UIActivityE6Source_pGSo08FCPuzzleJ9Providing_p_tF_0(void *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  objc_class *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;
  objc_super v24;

  v2 = sub_1BB86DE7C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  MEMORY[0x1E0C80A78](v2);
  sub_1BA4B07F0(0, &qword_1ED3C1DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - v5;
  sub_1BA65E330();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB895110;
  v8 = (objc_class *)type metadata accessor for SharingPuzzleTypeImageActivityItemSource();
  v9 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v9[OBJC_IVAR____TtC8NewsFeed40SharingPuzzleTypeImageActivityItemSource_image] = 0;
  v24.receiver = v9;
  v24.super_class = v8;
  swift_unknownObjectRetain();
  v10 = objc_msgSendSuper2(&v24, sel_init);
  v11 = sub_1BB872F94();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v10;
  v12[5] = a1;
  v13 = v10;
  sub_1BB1B6AEC((uint64_t)v6, (uint64_t)&unk_1EF2C1BE0, (uint64_t)v12);
  swift_release();
  *(_QWORD *)(v7 + 32) = v13;
  v14 = (objc_class *)type metadata accessor for SharingPuzzleTypeTextActivityItemSource();
  v15 = (char *)objc_allocWithZone(v14);
  v16 = &v15[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource____lazy_storage___defaultText];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed39SharingPuzzleTypeTextActivityItemSource_puzzleType] = a1;
  v23.receiver = v15;
  v23.super_class = v14;
  swift_unknownObjectRetain();
  *(_QWORD *)(v7 + 40) = objc_msgSendSuper2(&v23, sel_init);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870(&qword_1ED3B07A0, v3, MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  swift_unknownObjectRetain_n();
  sub_1BB873BC4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v17 = sub_1BB86E740();
  v18 = objc_allocWithZone((Class)type metadata accessor for SharingPuzzleTypeURLActivityItemSource());
  v19 = sub_1BB53E3A0(a1, v17);
  swift_unknownObjectRelease();
  swift_release();
  *(_QWORD *)(v7 + 48) = v19;
  v22 = v7;
  sub_1BB872DCC();
  return v22;
}

id sub_1BB3627BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB35D7BC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t _s8NewsFeed26SharingActivityItemFactoryC06createdE7Sources7channelSaySo010UIActivityE6Source_pGSo18FCChannelProviding_p_tF_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  objc_class *v5;
  void *v6;
  id v7;
  objc_class *v8;
  uint64_t v9;

  v2 = sub_1BB86DE7C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  MEMORY[0x1E0C80A78](v2);
  sub_1BA65E330();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB8856F0;
  v5 = (objc_class *)type metadata accessor for SharingTagTextActivityItemSource();
  swift_getObjectType();
  v6 = (void *)swift_unknownObjectRetain();
  v7 = sub_1BB6CD700(v6, v5);
  swift_unknownObjectRelease();
  *(_QWORD *)(v4 + 32) = v7;
  v8 = (objc_class *)type metadata accessor for SharingTagURLActivityItemSource();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BA4A2870(&qword_1ED3B07A0, v3, MEMORY[0x1E0DB33D8]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9230, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5C6B24();
  swift_unknownObjectRetain_n();
  sub_1BB873BC4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AC9B0, (uint64_t (*)(uint64_t))sub_1BB361EA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v9 = sub_1BB86E740();
  *(_QWORD *)(v4 + 40) = sub_1BB1601C0(a1, v9, v8);
  sub_1BB872DCC();
  return v4;
}

id sub_1BB3629B4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BB362D98((Class *)off_1E7249590, (SEL *)&selRef_initWithChannel_, a1);
}

uint64_t sub_1BB3629C8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3629F4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB35DB30(*(id *)(v1 + 24), a1);
}

uint64_t sub_1BB3629FC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BB35DA98(a1);
}

uint64_t sub_1BB362A08@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB35D964(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (Class *)off_1E72495C0, (SEL *)&selRef_initWithTitle_url_sportsTag_tagImageProvider_, a1);
}

uint64_t objectdestroy_45Tm_1()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB362A6C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB35D964(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (Class *)off_1E72495B8, (SEL *)&selRef_initWithTitle_url_sportsEvent_tagImageProvider_, a1);
}

void sub_1BB362A98(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BB8703E4();
    a3();
    v5 = sub_1BB870060();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BB362B0C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1BB870060();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BB362B6C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB515688(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB362B74()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB362B9C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  sub_1BB3623C0(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4D9CE8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(headline:selectedText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createLinkPresentationSource(headline:selectedText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(tag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(issue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(puzzle:shareData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(puzzleType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(channel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItemSources(feedDescriptor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createLinkPresentationSource(issue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createLinkPresentationSource(channel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createLinkPresentationSource(tag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createLinkPresentationSource(feedDescriptor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItem(for:feedItemIdentifier:type:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 104))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItem(for:type:tracker:sourceView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 112))();
}

{
  return (*(uint64_t (**)(void))(a6 + 128))();
}

{
  return (*(uint64_t (**)(void))(a6 + 160))();
}

uint64_t dispatch thunk of SharingActivityItemFactoryType.createActivityItem(for:type:tracker:sourceView:sourceItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 120))();
}

{
  return (*(uint64_t (**)(void))(a7 + 136))();
}

{
  return (*(uint64_t (**)(void))(a7 + 144))();
}

{
  return (*(uint64_t (**)(void))(a7 + 152))();
}

uint64_t method lookup function for SharingActivityItemFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingActivityItemFactory.__allocating_init(commandCenter:shareLinkProvider:shareLinkTextProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of SharingActivityItemFactory.__allocating_init(commandCenter:shareLinkProvider:shareLinkTextProvider:shareLinkImageProvider:shareLinkPuzzleImageProvider:puzzleRankProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1BB362CA4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB362CD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BA4B0D38;
  return sub_1BB73D3DC(a1, v4, v5, v7, v6);
}

uint64_t sub_1BB362D50()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB362D74()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BB362D98@<X0>(Class *a1@<X0>, SEL *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id result;

  result = objc_msgSend(objc_allocWithZone(*a1), *a2, *(_QWORD *)(v3 + 16));
  *a3 = result;
  return result;
}

uint64_t static FormatBezierPath.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA88E548(*a1, *a2);
}

uint64_t FormatBezierPathArcComponent.clockwise.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

id sub_1BB362E48()
{
  uint64_t *v0;
  uint64_t v1;
  id v3;

  v1 = *v0;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return v3;
}

uint64_t FormatBezierPath.components.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB363A8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBezierPath.init(from:)(a1, a2);
}

uint64_t sub_1BB363AA0(_QWORD *a1)
{
  return FormatBezierPath.encode(to:)(a1);
}

uint64_t sub_1BB363AB4(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA88E548(*a1, *a2);
}

void sub_1BB363AC0(uint64_t a1)
{
  __asm { BR              X10 }
}

__n128 sub_1BB363B10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void (*v11)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v12;
  uint64_t v13;
  __n128 result;
  __int128 v15;

  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
  v9 = (_QWORD *)(v8 + v7);
  swift_bridgeObjectRetain();
  sub_1BAAF3E48(88, 0xE100000000000000, v2, v9);
  v10 = type metadata accessor for FormatInspectionItem(0);
  v11 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 0, 1, v10);
  v12 = (_QWORD *)((char *)v9 + v6);
  swift_bridgeObjectRetain();
  sub_1BAAF3E48(89, 0xE100000000000000, v1, v12);
  v11(v12, 0, 1, v10);
  sub_1BAF89090(1702260557, 0xE400000000000000, 0, 0, v8, (_QWORD *)(v3 - 128));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v0[3] = (uint64_t)&type metadata for FormatInspectionGroup;
  v0[4] = (uint64_t)&off_1E72D2F60;
  v13 = swift_allocObject();
  *v0 = v13;
  result = *(__n128 *)(v3 - 128);
  v15 = *(_OWORD *)(v3 - 112);
  *(__n128 *)(v13 + 16) = result;
  *(_OWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 48) = *(_QWORD *)(v3 - 96);
  return result;
}

uint64_t sub_1BB364DC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBezierPathComponent.init(from:)(a1, a2);
}

void sub_1BB364DD4(_QWORD *a1)
{
  FormatBezierPathComponent.encode(to:)(a1);
}

uint64_t FormatBezierPathCurveComponent.point.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathCurveComponent.controlPoint1.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathCurveComponent.controlPoint2.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *a1 = *(_QWORD *)(v1 + 32);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB364E64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBezierPathCurveComponent.init(from:)(a1, a2);
}

uint64_t sub_1BB364E78(_QWORD *a1)
{
  return FormatBezierPathCurveComponent.encode(to:)(a1);
}

uint64_t FormatBezierPathQuadCurveComponent.point.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathQuadCurveComponent.controlPoint.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB364EE0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatBezierPathQuadCurveComponent.init(from:)(a1, a2);
}

uint64_t sub_1BB364EF4(_QWORD *a1)
{
  return FormatBezierPathQuadCurveComponent.encode(to:)(a1);
}

uint64_t FormatBezierPathArcComponent.center.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathArcComponent.radius.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathArcComponent.startAngle.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathArcComponent.endAngle.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t FormatBezierPathArcComponent.clockwise.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*FormatBezierPathArcComponent.clockwise.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB364F70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBezierPathArcComponent.init(from:)(a1, a2);
}

uint64_t sub_1BB364F84(_QWORD *a1)
{
  return FormatBezierPathArcComponent.encode(to:)(a1);
}

BOOL _s8NewsFeed30FormatBezierPathCurveComponentV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *a1;
  v2 = a1[1];
  v19 = a1[2];
  v20 = a1[3];
  v4 = a1[5];
  v18 = a1[4];
  v6 = *a2;
  v5 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v10 = a2[4];
  v9 = a2[5];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v11 = sub_1BA881EAC(v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
    goto LABEL_8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_1BA881EAC(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if ((v12 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v13 = sub_1BA881EAC(v19, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    goto LABEL_8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1BA881EAC(v20, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if ((v14 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v15 = sub_1BA881EAC(v18, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_1BA881EAC(v4, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return (v16 & 1) != 0;
}

BOOL _s8NewsFeed34FormatBezierPathQuadCurveComponentV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = *a2;
  v6 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v10 = sub_1BA881EAC(v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
    goto LABEL_6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1BA881EAC(v2, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if ((v11 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v12 = sub_1BA881EAC(v5, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA881EAC(v4, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return (v13 & 1) != 0;
}

uint64_t _s8NewsFeed28FormatBezierPathArcComponentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 32);
  v4 = *(unsigned __int8 *)(a1 + 40);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1BA881EAC(v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_1BA881EAC(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA881EAC(v18, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1BA881EAC(v17, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1BA881EAC(v19, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
    return v4 ^ v10 ^ 1u;
  else
    return 0;
}

void _s8NewsFeed25FormatBezierPathComponentO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1BB365608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (v9)
  {
    v34 = v12;
    v19 = v12;
    v20 = v6;
    v35 = v10;
    v21 = v10;
    sub_1BAC6607C(v7, v19, v14, v21, v39, a6, v8);
    sub_1BAC6607C(v13, v11, v20, v36, v37, v38, v9);
    sub_1BAC66130(v7, v34, v14, v35, v39, a6, v8);
    v23 = v13;
    v24 = v11;
    v25 = v20;
    v26 = v36;
    v27 = v37;
    v28 = v38;
    v29 = v9;
LABEL_6:
    sub_1BAC66130(v23, v24, v25, v26, v27, v28, v29);
    goto LABEL_7;
  }
  v32 = v13;
  v33 = v6;
  v15 = v13;
  sub_1BAC6607C(v15, v11, v6, v36, v37, v38, 0);
  sub_1BAC6607C(v7, v12, v14, v10, v39, a6, 0);
  sub_1BAC6607C(v7, v12, v14, v10, v39, a6, 0);
  sub_1BAC6607C(v32, v11, v33, v36, v37, v38, 0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BA881EAC(v7, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    sub_1BAC66130(v7, v12, v14, v10, v39, a6, 0);
    sub_1BAC66130(v32, v11, v33, v36, v37, v38, 0);
    sub_1BAC66130(v32, v11, v33, v36, v37, v38, 0);
    v23 = v7;
    v24 = v12;
    v25 = v14;
    v26 = v10;
    v27 = v39;
    v28 = a6;
    v29 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = sub_1BA881EAC(v12, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BAC66130(v7, v12, v14, v10, v39, a6, 0);
  sub_1BAC66130(v32, v11, v33, v36, v37, v38, 0);
  sub_1BAC66130(v32, v11, v33, v36, v37, v38, 0);
  sub_1BAC66130(v7, v12, v14, v10, v39, a6, 0);
  if ((v31 & 1) == 0)
  {
LABEL_7:
    v18 = 0;
    return v18 & 1;
  }
  v18 = 1;
  return v18 & 1;
}

unint64_t sub_1BB366044(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB366068();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB366068()
{
  unint64_t result;

  result = qword_1EF2C1BF0;
  if (!qword_1EF2C1BF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPath, &type metadata for FormatBezierPath);
    atomic_store(result, (unint64_t *)&qword_1EF2C1BF0);
  }
  return result;
}

uint64_t sub_1BB3660AC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE7B9B4, (uint64_t (*)(void))sub_1BAEF7F8C, (uint64_t (*)(void))sub_1BB3660C8);
}

unint64_t sub_1BB3660C8()
{
  unint64_t result;

  result = qword_1EF2C1BF8;
  if (!qword_1EF2C1BF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPath, &type metadata for FormatBezierPath);
    atomic_store(result, (unint64_t *)&qword_1EF2C1BF8);
  }
  return result;
}

unint64_t sub_1BB36610C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB366130();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB366130()
{
  unint64_t result;

  result = qword_1EF2C1C00;
  if (!qword_1EF2C1C00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathComponent, &type metadata for FormatBezierPathComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2C1C00);
  }
  return result;
}

uint64_t sub_1BB366174(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE82B2C, (uint64_t (*)(void))sub_1BAEF6124, (uint64_t (*)(void))sub_1BB366190);
}

unint64_t sub_1BB366190()
{
  unint64_t result;

  result = qword_1EF2C1C08;
  if (!qword_1EF2C1C08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathComponent, &type metadata for FormatBezierPathComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2C1C08);
  }
  return result;
}

unint64_t sub_1BB3661D4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3661F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3661F8()
{
  unint64_t result;

  result = qword_1EF2C1C10;
  if (!qword_1EF2C1C10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathCurveComponent, &type metadata for FormatBezierPathCurveComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2C1C10);
  }
  return result;
}

uint64_t sub_1BB36623C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE82FE0, (uint64_t (*)(void))sub_1BAEF5F40, (uint64_t (*)(void))sub_1BB366258);
}

unint64_t sub_1BB366258()
{
  unint64_t result;

  result = qword_1EF2C1C18;
  if (!qword_1EF2C1C18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathCurveComponent, &type metadata for FormatBezierPathCurveComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2C1C18);
  }
  return result;
}

unint64_t sub_1BB36629C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3662C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3662C0()
{
  unint64_t result;

  result = qword_1EF2C1C20;
  if (!qword_1EF2C1C20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathQuadCurveComponent, &type metadata for FormatBezierPathQuadCurveComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2C1C20);
  }
  return result;
}

uint64_t sub_1BB366304(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE82F9C, (uint64_t (*)(void))sub_1BAEF5F84, (uint64_t (*)(void))sub_1BB366320);
}

unint64_t sub_1BB366320()
{
  unint64_t result;

  result = qword_1EF2C1C28;
  if (!qword_1EF2C1C28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathQuadCurveComponent, &type metadata for FormatBezierPathQuadCurveComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2C1C28);
  }
  return result;
}

unint64_t sub_1BB366364(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB366388();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB366388()
{
  unint64_t result;

  result = qword_1EF2C1C30;
  if (!qword_1EF2C1C30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathArcComponent, &type metadata for FormatBezierPathArcComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2C1C30);
  }
  return result;
}

uint64_t sub_1BB3663CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE82F58, (uint64_t (*)(void))sub_1BAEF5FC8, (uint64_t (*)(void))sub_1BB3663E8);
}

unint64_t sub_1BB3663E8()
{
  unint64_t result;

  result = qword_1EF2C1C38;
  if (!qword_1EF2C1C38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathArcComponent, &type metadata for FormatBezierPathArcComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2C1C38);
  }
  return result;
}

uint64_t sub_1BB36642C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 40);
  return result;
}

_BYTE *sub_1BB366438(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 40) = *result;
  return result;
}

ValueMetadata *type metadata accessor for FormatBezierPath()
{
  return &type metadata for FormatBezierPath;
}

uint64_t destroy for FormatBezierPathComponent(uint64_t a1)
{
  return sub_1BAC66130(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for FormatBezierPathComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BAC6607C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatBezierPathComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BAC6607C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1BAC66130(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for FormatBezierPathComponent(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1BAC66130(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t sub_1BB3665C4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 4u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1BB3665DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatBezierPathComponent()
{
  return &type metadata for FormatBezierPathComponent;
}

ValueMetadata *type metadata accessor for FormatBezierPathCurveComponent()
{
  return &type metadata for FormatBezierPathCurveComponent;
}

ValueMetadata *type metadata accessor for FormatBezierPathQuadCurveComponent()
{
  return &type metadata for FormatBezierPathQuadCurveComponent;
}

uint64_t destroy for FormatBezierPathArcComponent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatBezierPathArcComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatBezierPathArcComponent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FormatBezierPathArcComponent(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBezierPathArcComponent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatBezierPathArcComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBezierPathArcComponent()
{
  return &type metadata for FormatBezierPathArcComponent;
}

_QWORD *sub_1BB3668A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _OWORD v11[3];
  char v12;
  _BYTE v13[40];
  uint64_t v14;

  v1 = *a1;
  if (v1)
    v2 = v1;
  else
    v2 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC79E7C(0, v3, 0);
    v4 = v14;
    v5 = (_BYTE *)(v2 + 80);
    do
    {
      v6 = *v5;
      v11[0] = *((_OWORD *)v5 - 3);
      v11[1] = *((_OWORD *)v5 - 2);
      v11[2] = *((_OWORD *)v5 - 1);
      v12 = v6;
      sub_1BB363AC0((uint64_t)v11);
      v14 = v4;
      v8 = *(_QWORD *)(v4 + 16);
      v7 = *(_QWORD *)(v4 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1BAC79E7C(v7 > 1, v8 + 1, 1);
        v4 = v14;
      }
      *(_QWORD *)(v4 + 16) = v8 + 1;
      sub_1BAFB3794((uint64_t)v13, v4 + 40 * v8 + 32);
      v5 += 56;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
  }
  v9 = sub_1BB6DF010(v4);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1BB3669E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t _s8NewsFeed26FormatComputedInvalidationO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  char v11;
  _QWORD v13[3];
  __int16 v14;
  _QWORD v15[3];
  __int16 v16;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(__int16 *)(a1 + 24);
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(__int16 *)(a2 + 24);
  if (v5 < 0)
  {
    if (v9 < 0)
    {
      v15[0] = *(_QWORD *)a1;
      v15[1] = v2;
      v15[2] = v4;
      v16 = v5 & 0x1FF;
      v13[0] = v7;
      v13[1] = v6;
      v13[2] = v8;
      v14 = v9 & 0x1FF;
      sub_1BA733718(v7, v6, v8, v9);
      sub_1BA733718(v3, v2, v4, v5);
      sub_1BA733718(v3, v2, v4, v5);
      sub_1BA733718(v7, v6, v8, v9);
      v10 = static FormatCommandBinding.== infix(_:_:)(v15, v13);
      goto LABEL_7;
    }
  }
  else if ((v9 & 0x80000000) == 0)
  {
    sub_1BA733718(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v8, v9);
    sub_1BA733718(v3, v2, v4, v5);
    sub_1BA733718(v3, v2, v4, v5);
    sub_1BA733718(v7, v6, v8, v9);
    v10 = sub_1BA881EAC(v3, v7);
LABEL_7:
    v11 = v10;
    sub_1BA733340(v3, v2, v4, v5);
    sub_1BA733340(v7, v6, v8, v9);
    sub_1BA733340(v7, v6, v8, v9);
    sub_1BA733340(v3, v2, v4, v5);
    return v11 & 1;
  }
  sub_1BA733718(*(_QWORD *)a1, v2, v4, v5);
  sub_1BA733718(v7, v6, v8, v9);
  sub_1BA733340(v3, v2, v4, v5);
  sub_1BA733340(v7, v6, v8, v9);
  v11 = 0;
  return v11 & 1;
}

unint64_t sub_1BB366C14(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB366C38();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB366C38()
{
  unint64_t result;

  result = qword_1EF2C1C40;
  if (!qword_1EF2C1C40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatComputedInvalidation, &type metadata for FormatComputedInvalidation);
    atomic_store(result, (unint64_t *)&qword_1EF2C1C40);
  }
  return result;
}

unint64_t sub_1BB366C7C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA650C04();
  a1[2] = sub_1BA7BA0C0();
  result = sub_1BB366CB0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB366CB0()
{
  unint64_t result;

  result = qword_1EF2C1C48;
  if (!qword_1EF2C1C48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatComputedInvalidation, &type metadata for FormatComputedInvalidation);
    atomic_store(result, (unint64_t *)&qword_1EF2C1C48);
  }
  return result;
}

uint64_t destroy for FormatComputedInvalidation(uint64_t a1)
{
  return sub_1BA733340(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_WORD *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatComputedInvalidation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_WORD *)(a2 + 24);
  sub_1BA733718(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatComputedInvalidation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_WORD *)(a2 + 24);
  sub_1BA733718(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_WORD *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v6;
  sub_1BA733340(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatComputedInvalidation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_WORD *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_WORD *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_1BA733340(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatComputedInvalidation()
{
  return &type metadata for FormatComputedInvalidation;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatComputedInvalidation.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA749544(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for FormatComputedInvalidation.Result(uint64_t a1)
{
  return sub_1BA7331E0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for FormatComputedInvalidation.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA749544(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA7331E0(v5, v6);
  return a1;
}

uint64_t assignWithTake for FormatComputedInvalidation.Result(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA7331E0(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatComputedInvalidation.Result()
{
  return &type metadata for FormatComputedInvalidation.Result;
}

id SharingIssueTextActivityItemSource.__allocating_init(issue:)(void *a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  id v16;
  objc_super v18;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_issue] = a1;
  v4 = v3;
  v5 = a1;
  v6 = objc_msgSend(v5, sel_title);
  v7 = sub_1BB8729A0();
  v9 = v8;

  v10 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle];
  *v10 = v7;
  v10[1] = v9;
  v11 = objc_msgSend(v5, sel_coverDate);
  v12 = sub_1BB8729A0();
  v14 = v13;

  v15 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemCoverDate];
  *v15 = v12;
  v15[1] = v14;

  v18.receiver = v4;
  v18.super_class = v1;
  v16 = objc_msgSendSuper2(&v18, sel_init);

  return v16;
}

id SharingIssueTextActivityItemSource.init(issue:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  id v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_issue] = a1;
  v4 = v1;
  v5 = a1;
  v6 = objc_msgSend(v5, sel_title);
  v7 = sub_1BB8729A0();
  v9 = v8;

  v10 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle];
  *v10 = v7;
  v10[1] = v9;
  v11 = objc_msgSend(v5, sel_coverDate);
  v12 = sub_1BB8729A0();
  v14 = v13;

  v15 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemCoverDate];
  *v15 = v12;
  v15[1] = v14;

  v18.receiver = v4;
  v18.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v18, sel_init);

  return v16;
}

uint64_t SharingIssueTextActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle + 8);
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void SharingIssueTextActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  char v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28[2];

  v3 = v2;
  v28[1] = *(id *)MEMORY[0x1E0C80C00];
  if (!a1)
    goto LABEL_11;
  if (sub_1BB8729A0() == 0xD000000000000026 && v6 == 0x80000001BB968360)
  {
    v7 = a1;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v8 = sub_1BB874398();
  v9 = a1;
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {

LABEL_11:
    sub_1BB367464(a1, v2, a2);
    return;
  }
LABEL_6:
  v10 = (void *)sub_1BB8727B4();
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle);
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle + 8);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v28[0] = v10;
  sub_1BB4BDCEC(v11, v12, 0x69742D6575737369, 0xEB00000000656C74, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_issue), sel_issueDescription);
  v15 = sub_1BB8729A0();
  v17 = v16;

  v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BB4BDCEC(v15, v17, 0x75732D6575737369, 0xED00007972616D6DLL, v18);
  swift_bridgeObjectRelease();
  v19 = (void *)objc_opt_self();
  v20 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v28[0] = 0;
  v21 = objc_msgSend(v19, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v20, 1, v28);

  v22 = v28[0];
  if (v21)
  {
    v23 = sub_1BB86C6E8();
    v25 = v24;

    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0CB0338];
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 8) = v25;
  }
  else
  {
    v26 = v22;
    v27 = (void *)sub_1BB86C484();

    swift_willThrow();
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

uint64_t sub_1BB367464@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  char v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  char v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;

  if (!a1)
    goto LABEL_25;
  v6 = sub_1BB8729A0();
  v8 = v7;
  if (v6 == sub_1BB8729A0() && v8 == v9)
    goto LABEL_16;
  v11 = sub_1BB874398();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_17:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  v13 = (void *)*MEMORY[0x1E0CEB1C0];
  v14 = sub_1BB8729A0();
  v16 = v15;
  if (v14 == sub_1BB8729A0() && v16 == v17)
  {
    v29 = v13;
    v30 = a1;

LABEL_16:
    result = swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  v19 = sub_1BB874398();
  v20 = v13;
  v21 = a1;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    goto LABEL_17;
  v22 = (void *)*MEMORY[0x1E0CEB1F0];
  v23 = sub_1BB8729A0();
  v25 = v24;
  if (v23 == sub_1BB8729A0() && v25 == v26)
  {
    v27 = v22;
    v28 = v21;

LABEL_22:
    result = swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
  v31 = sub_1BB874398();
  v32 = v22;
  v33 = v21;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
  {
LABEL_23:
    *(_QWORD *)(a3 + 24) = MEMORY[0x1E0DEA968];
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0xE000000000000000;
    return result;
  }
  v34 = (void *)*MEMORY[0x1E0CEB1D0];
  v35 = sub_1BB8729A0();
  v37 = v36;
  if (v35 == sub_1BB8729A0() && v37 == v38)
  {
    v39 = v34;
    v40 = v33;

    goto LABEL_22;
  }
  v41 = sub_1BB874398();
  v42 = v34;
  v43 = v33;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v41 & 1) != 0)
    goto LABEL_23;
LABEL_25:
  v45 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle);
  v44 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed34SharingIssueTextActivityItemSource_itemTitle + 8);
  *(_QWORD *)(a3 + 24) = MEMORY[0x1E0DEA968];
  *(_QWORD *)a3 = v45;
  *(_QWORD *)(a3 + 8) = v44;
  return swift_bridgeObjectRetain();
}

Swift::String __swiftcall SharingIssueTextActivityItemSource.activityViewController(_:dataTypeIdentifierForActivityType:)(UIActivityViewController *_, UIActivityType_optional dataTypeIdentifierForActivityType)
{
  unint64_t v3;
  uint64_t v4;
  NSString *v5;
  unint64_t v6;
  char v7;
  NSString *v8;
  uint64_t v9;
  void *v10;
  Swift::String result;

  if (dataTypeIdentifierForActivityType.value)
  {
    v3 = 0xD00000000000001DLL;
    if (sub_1BB8729A0() == 0xD000000000000026 && v4 == 0x80000001BB968360)
    {
      v5 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      v6 = 0x80000001BB968390;
    }
    else
    {
      v7 = sub_1BB874398();
      v8 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
        v6 = 0x80000001BB968390;
      }
      else
      {
        v3 = 0;
        v6 = 0xE000000000000000;
      }
    }

  }
  else
  {
    v3 = 0;
    v6 = 0xE000000000000000;
  }
  v9 = v3;
  v10 = (void *)v6;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

id SharingIssueTextActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingIssueTextActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingIssueTextActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s8NewsFeed34SharingIssueTextActivityItemSourceC22activityViewController_010subjectForF4TypeSSSo010UIActivityjK0C_So0oN0aSgtF_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  swift_bridgeObjectRetain();
  v0 = sub_1BB872A24();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t type metadata accessor for SharingIssueTextActivityItemSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingIssueTextActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingIssueTextActivityItemSource.__allocating_init(issue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for FormatDOM()
{
  return objc_opt_self();
}

uint64_t sub_1BB367CC8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA8802C0(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1BB367D5C()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v2, 0);
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if (v4 < 0)
      {
        v5 = *(_QWORD *)(v4 + 16);
        v7 = *(_QWORD *)(v4 + 24);
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_retain();
        v5 = sub_1BB052C8C();
        v7 = v6;
        swift_release();
      }
      v9 = *(_QWORD *)(v13 + 16);
      v8 = *(_QWORD *)(v13 + 24);
      if (v9 >= v8 >> 1)
        sub_1BA7447E8(v8 > 1, v9 + 1, 1);
      ++v3;
      *(_QWORD *)(v13 + 16) = v9 + 1;
      v10 = v13 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  sub_1BA6D249C();
  sub_1BA6A0BA4();
  v11 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BB367EC0()
{
  return sub_1BB367D5C();
}

id sub_1BB367F64()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  id v3;
  void *v4;
  id v5;

  sub_1BB873CB4();
  sub_1BB872AFC("");
  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed23LiveActivityEmbedScript_newDatastore), sel_JSONString, 0, 0xE000000000000000);
  sub_1BB8729A0();

  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC("chEvent(event);\n})()");
  v3 = objc_allocWithZone(MEMORY[0x1E0CEF610]);
  v4 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithSource_injectionTime_forMainFrameOnly_, v4, 0, 1);

  return v5;
}

uint64_t sub_1BB3680F4()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  sub_1BB873CB4();
  sub_1BB872AFC("");
  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8NewsFeed23LiveActivityEmbedScript_newDatastore), sel_JSONString));
  sub_1BB8729A0();

  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(" let newDatastore = ");
  return 0;
}

id sub_1BB368204()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LiveActivityEmbedScript();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for LiveActivityEmbedScript()
{
  return objc_opt_self();
}

uint64_t FormatTypeDefinition.Case.init(identifier:name:description:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t FormatTypeDefinition.Case.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTypeDefinition.Enum.cases.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FormatTypeDefinition.Enum.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA8822A4(*a1, *a2);
}

uint64_t sub_1BB3682E4(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA8822A4(*a1, *a2);
}

uint64_t FormatTypeDefinition.Case.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTypeDefinition.Case.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTypeDefinition.Case.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatTypeDefinition.Case.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatTypeDefinition.Case.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatTypeDefinition.Case.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t _s8NewsFeed20FormatTypeDefinitionO4CaseV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_1BB874398(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_1BB874398(), result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
        return 1;
      else
        return sub_1BB874398();
    }
  }
  return result;
}

BOOL _s8NewsFeed20FormatTypeDefinitionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  _QWORD v57[4];
  char v58;
  _QWORD v59[4];
  char v60;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 40);
  v54 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v55 = *(unsigned __int8 *)(a1 + 48);
  v13 = *(unsigned __int8 *)(a2 + 48);
  v56 = v7;
  if (!(v55 >> 6))
  {
    if (v13 >= 0x40)
      goto LABEL_13;
    v44 = *(_QWORD *)(a2 + 24);
    v47 = *(_QWORD *)(a1 + 40);
    v16 = *(_QWORD *)(a2 + 40);
    v41 = *(_QWORD *)a1;
    v17 = *(_QWORD *)(a2 + 16);
    v18 = *(_QWORD *)(a2 + 8);
    v19 = *(_QWORD *)a2;
    v49 = *(_QWORD *)a2;
    v40 = sub_1BA8822A4((uint64_t)v2, (uint64_t)v8);
    sub_1BA709DE8(v19, v18, v17, v44, v11, v16, v13);
    sub_1BA709DE8(v41, v3, v4, v5, v54, v47, v55);
    sub_1BA6C0C20(v41, v3, v4, v5, v54, v47, v55);
    v20 = v49;
    v21 = v56;
    v22 = v17;
    v23 = v44;
    v24 = v11;
    v25 = v16;
    v26 = v13;
LABEL_12:
    sub_1BA6C0C20(v20, v21, v22, v23, v24, v25, v26);
    return v40 & 1;
  }
  if (v55 >> 6 != 1)
  {
    if ((v13 & 0xC0) != 0x80)
      goto LABEL_13;
    v45 = *(_QWORD *)(a2 + 24);
    v52 = *(_QWORD *)(a2 + 16);
    v42 = *(_QWORD *)a1;
    v27 = *(_BYTE *)(a2 + 48);
    v28 = *(_QWORD *)a1;
    v29 = *(_QWORD *)(a2 + 8);
    v30 = *(_QWORD *)a2;
    sub_1BA709DE8((uint64_t)v8, v7, v9, v45, v11, v12, v27);
    sub_1BA709DE8(v28, v3, v4, v5, v54, v6, v55);
    sub_1BA709DE8(v30, v29, v52, v45, v11, v12, v27);
    sub_1BA709DE8(v42, v3, v4, v5, v54, v6, v55);
    v40 = sub_1BA882880(v42, v30);
    sub_1BA6C0C20(v42, v3, v4, v5, v54, v6, v55);
    sub_1BA6C0C20(v30, v56, v52, v45, v11, v12, v27);
    sub_1BA6C0C20(v30, v56, v52, v45, v11, v12, v27);
    v20 = v42;
    v21 = v3;
    v22 = v4;
    v23 = v5;
    v24 = v54;
    v25 = v6;
    v26 = v55;
    goto LABEL_12;
  }
  if ((v13 & 0xC0) != 0x40)
  {
LABEL_13:
    v50 = *(_QWORD *)a2;
    v53 = *(_QWORD *)(a2 + 16);
    v43 = *(_BYTE *)(a2 + 48);
    v31 = *(_QWORD *)a1;
    sub_1BA709DE8((uint64_t)v8, v7, v9, v10, v11, v12, v43);
    sub_1BA709DE8(v31, v3, v4, v5, v54, v6, v55);
    sub_1BA6C0C20(v31, v3, v4, v5, v54, v6, v55);
    v32 = v50;
    v33 = v53;
    v34 = v56;
    v35 = v10;
    v36 = v11;
    v37 = v12;
    v38 = v43;
    goto LABEL_14;
  }
  v48 = *(_QWORD *)a2;
  v51 = *(_QWORD *)(a2 + 16);
  v46 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)a1;
  if ((sub_1BA6A45BC(v2, v8) & 1) != 0)
  {
    sub_1BA709DE8(v48, v56, v51, v10, v11, v12, v13);
    sub_1BA709DE8(v14, v3, v4, v5, v54, v46, v55);
    sub_1BA709DE8(v48, v56, v51, v10, v11, v12, v13);
    sub_1BA709DE8(v14, v3, v4, v5, v54, v46, v55);
    if ((sub_1BA892830(v3, v56) & 1) != 0)
    {
      v59[0] = v4;
      v59[1] = v5;
      v59[2] = v54;
      v59[3] = v46;
      v60 = v55 & 1;
      v57[0] = v51;
      v57[1] = v10;
      v57[2] = v11;
      v57[3] = v12;
      v58 = v13 & 1;
      v39 = static FormatStateMachineInput.== infix(_:_:)(v59, v57);
      sub_1BA6C0C20(v14, v3, v4, v5, v54, v46, v55);
      sub_1BA6C0C20(v48, v56, v51, v10, v11, v12, v13);
      sub_1BA6C0C20(v48, v56, v51, v10, v11, v12, v13);
      sub_1BA6C0C20(v14, v3, v4, v5, v54, v46, v55);
      return (v39 & 1) != 0;
    }
    sub_1BA6C0C20(v14, v3, v4, v5, v54, v46, v55);
    sub_1BA6C0C20(v48, v56, v51, v10, v11, v12, v13);
    sub_1BA6C0C20(v48, v56, v51, v10, v11, v12, v13);
    v32 = v14;
    v34 = v3;
    v33 = v4;
    v35 = v5;
    v36 = v54;
    v37 = v46;
    v38 = v55;
  }
  else
  {
    sub_1BA709DE8(v48, v56, v51, v10, v11, v12, v13);
    sub_1BA709DE8(v14, v3, v4, v5, v54, v46, v55);
    sub_1BA6C0C20(v14, v3, v4, v5, v54, v46, v55);
    v32 = v48;
    v33 = v51;
    v34 = v56;
    v35 = v10;
    v36 = v11;
    v37 = v12;
    v38 = v13;
  }
LABEL_14:
  sub_1BA6C0C20(v32, v34, v33, v35, v36, v37, v38);
  return 0;
}

unint64_t sub_1BB368B54(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB368B78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB368B78()
{
  unint64_t result;

  result = qword_1EF2C1D30;
  if (!qword_1EF2C1D30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeDefinition.Enum, &type metadata for FormatTypeDefinition.Enum);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D30);
  }
  return result;
}

uint64_t sub_1BB368BBC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA5E12A8, (uint64_t (*)(void))sub_1BA5AE14C, (uint64_t (*)(void))sub_1BB368BD8);
}

unint64_t sub_1BB368BD8()
{
  unint64_t result;

  result = qword_1EF2C1D38;
  if (!qword_1EF2C1D38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeDefinition.Enum, &type metadata for FormatTypeDefinition.Enum);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D38);
  }
  return result;
}

unint64_t sub_1BB368C1C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB368C40();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB368C40()
{
  unint64_t result;

  result = qword_1EF2C1D40;
  if (!qword_1EF2C1D40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeDefinition.Case, &type metadata for FormatTypeDefinition.Case);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D40);
  }
  return result;
}

uint64_t sub_1BB368C84(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA82C340, (uint64_t (*)(void))sub_1BA82C384, (uint64_t (*)(void))sub_1BB368CA0);
}

unint64_t sub_1BB368CA0()
{
  unint64_t result;

  result = qword_1EF2C1D48;
  if (!qword_1EF2C1D48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeDefinition.Case, &type metadata for FormatTypeDefinition.Case);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D48);
  }
  return result;
}

unint64_t sub_1BB368CE4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB368D08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB368D08()
{
  unint64_t result;

  result = qword_1EF2C1D50;
  if (!qword_1EF2C1D50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeDefinition, &type metadata for FormatTypeDefinition);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D50);
  }
  return result;
}

uint64_t sub_1BB368D4C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA5E1780, (uint64_t (*)(void))sub_1BA6F78E4, (uint64_t (*)(void))sub_1BB368D68);
}

unint64_t sub_1BB368D68()
{
  unint64_t result;

  result = qword_1EF2C1D58;
  if (!qword_1EF2C1D58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTypeDefinition, &type metadata for FormatTypeDefinition);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D58);
  }
  return result;
}

uint64_t sub_1BB368DAC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB368DB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  return result;
}

uint64_t destroy for FormatTypeDefinition(uint64_t a1)
{
  return sub_1BA6C0C20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for FormatTypeDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BA709DE8(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatTypeDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BA709DE8(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1BA6C0C20(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for FormatTypeDefinition(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1BA6C0C20(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t sub_1BB368F68(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48) >> 6;
}

uint64_t sub_1BB368F74(uint64_t result)
{
  *(_BYTE *)(result + 48) &= 0x3Fu;
  return result;
}

uint64_t sub_1BB368F84(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = *(_BYTE *)(result + 48) & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for FormatTypeDefinition()
{
  return &type metadata for FormatTypeDefinition;
}

ValueMetadata *type metadata accessor for FormatTypeDefinition.Enum()
{
  return &type metadata for FormatTypeDefinition.Enum;
}

ValueMetadata *type metadata accessor for FormatTypeDefinition.Case()
{
  return &type metadata for FormatTypeDefinition.Case;
}

uint64_t TagAutomation.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void TagAutomation.tagType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t TagAutomation.init(tag:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t result;

  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_1BB8729A0();
  v7 = v6;

  v8 = objc_msgSend(a1, sel_asChannel);
  swift_unknownObjectRelease();
  result = swift_unknownObjectRelease();
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8 != 0;
  return result;
}

uint64_t TagAutomation.automationType.getter()
{
  return 6775156;
}

NewsFeed::TagAutomation::TagType_optional __swiftcall TagAutomation.TagType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::TagAutomation::TagType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t TagAutomation.TagType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C656E6E616863;
  else
    return 0x6369706F74;
}

uint64_t sub_1BB369138(char *a1, char *a2)
{
  return sub_1BB802AB8(*a1, *a2);
}

uint64_t sub_1BB369144()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB3691C0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB369218()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::TagAutomation::TagType_optional sub_1BB369290(Swift::String *a1)
{
  return TagAutomation.TagType.init(rawValue:)(*a1);
}

void sub_1BB36929C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6369706F74;
  if (*v1)
    v2 = 0x6C656E6E616863;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB3692D8()
{
  sub_1BB369C20();
  return sub_1BB872D60();
}

uint64_t sub_1BB369334()
{
  sub_1BB369C20();
  return sub_1BB872D0C();
}

uint64_t sub_1BB369380()
{
  _BYTE *v0;

  if (*v0)
    return 0x65707954676174;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BB3693C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB369B24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB3693E4()
{
  sub_1BB36957C();
  return sub_1BB874710();
}

uint64_t sub_1BB36940C()
{
  sub_1BB36957C();
  return sub_1BB87471C();
}

uint64_t TagAutomation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1BB3697AC(0, &qword_1EF2C1D60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB36957C();
  sub_1BB8746C8();
  v14 = 0;
  v8 = v10[1];
  sub_1BB87417C();
  if (!v8)
  {
    v13 = v11;
    v12 = 1;
    sub_1BB3695C0();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB36957C()
{
  unint64_t result;

  result = qword_1EF2C1D68;
  if (!qword_1EF2C1D68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90CA60, &type metadata for TagAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D68);
  }
  return result;
}

unint64_t sub_1BB3695C0()
{
  unint64_t result;

  result = qword_1EF2C1D70;
  if (!qword_1EF2C1D70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for TagAutomation.TagType, &type metadata for TagAutomation.TagType);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D70);
  }
  return result;
}

uint64_t TagAutomation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1BB3697AC(0, &qword_1EF2C1D78, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB36957C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v16 = 1;
  sub_1BB369808();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = v17;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1BB3697AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB36957C();
    v7 = a3(a1, &type metadata for TagAutomation.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB369808()
{
  unint64_t result;

  result = qword_1EF2C1D80;
  if (!qword_1EF2C1D80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for TagAutomation.TagType, &type metadata for TagAutomation.TagType);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D80);
  }
  return result;
}

unint64_t sub_1BB369850()
{
  unint64_t result;

  result = qword_1EF2C1D88;
  if (!qword_1EF2C1D88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for TagAutomation.TagType, &type metadata for TagAutomation.TagType);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D88);
  }
  return result;
}

unint64_t sub_1BB369898()
{
  unint64_t result;

  result = qword_1ED3A5828;
  if (!qword_1ED3A5828)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for TagAutomation, &type metadata for TagAutomation);
    atomic_store(result, (unint64_t *)&qword_1ED3A5828);
  }
  return result;
}

unint64_t sub_1BB3698E0()
{
  unint64_t result;

  result = qword_1ED3A5820;
  if (!qword_1ED3A5820)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for TagAutomation, &type metadata for TagAutomation);
    atomic_store(result, (unint64_t *)&qword_1ED3A5820);
  }
  return result;
}

uint64_t sub_1BB369924()
{
  return 6775156;
}

uint64_t sub_1BB369934@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TagAutomation.init(from:)(a1, a2);
}

uint64_t sub_1BB369948(_QWORD *a1)
{
  return TagAutomation.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for TagAutomation()
{
  return &type metadata for TagAutomation;
}

ValueMetadata *type metadata accessor for TagAutomation.TagType()
{
  return &type metadata for TagAutomation.TagType;
}

uint64_t _s8NewsFeed13TagAutomationV7TagTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB3699CC + 4 * byte_1BB90C7F1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB369A00 + 4 * byte_1BB90C7EC[v4]))();
}

uint64_t sub_1BB369A00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB369A08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB369A10);
  return result;
}

uint64_t sub_1BB369A1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB369A24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB369A28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB369A30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TagAutomation.CodingKeys()
{
  return &type metadata for TagAutomation.CodingKeys;
}

unint64_t sub_1BB369A50()
{
  unint64_t result;

  result = qword_1EF2C1D90;
  if (!qword_1EF2C1D90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90CA38, &type metadata for TagAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D90);
  }
  return result;
}

unint64_t sub_1BB369A98()
{
  unint64_t result;

  result = qword_1EF2C1D98;
  if (!qword_1EF2C1D98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90C9A8, &type metadata for TagAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1D98);
  }
  return result;
}

unint64_t sub_1BB369AE0()
{
  unint64_t result;

  result = qword_1EF2C1DA0;
  if (!qword_1EF2C1DA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90C9D0, &type metadata for TagAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1DA0);
  }
  return result;
}

uint64_t sub_1BB369B24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65707954676174 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BB369C20()
{
  unint64_t result;

  result = qword_1EF2C1DA8;
  if (!qword_1EF2C1DA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for TagAutomation.TagType, &type metadata for TagAutomation.TagType);
    atomic_store(result, (unint64_t *)&qword_1EF2C1DA8);
  }
  return result;
}

uint64_t FormatFile.packageVersion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA84AF70(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    v10 = &v9[*(int *)(v7 + 96)];
    v11 = sub_1BB86EB84();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(a1, v10, v11);
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v14 = sub_1BB86EB84();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
}

void sub_1BB369DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v1);
  sub_1BA84AF70(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BB369E60 + 4 * word_1BB90CAB0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB369E60()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for FormatContent(0);
  if (swift_dynamicCast())
  {
    sub_1BA76EAE0((_OWORD *)(v0 + 144), v1);
    return sub_1BA4A2E80(v2, type metadata accessor for FormatContent);
  }
  else
  {
    result = sub_1BB87438C();
    __break(1u);
  }
  return result;
}

uint64_t FormatFile.filename.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1BB873CB4();
  FormatFile.identifier.getter();
  v1 = v0;
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v2);
  return v1;
}

void FormatFile.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for FormatBindingContent();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatContent(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA84AF70(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_1BB36A614 + 4 * byte_1BB90CAC8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB36A614()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  sub_1BA5193C4(v0, (uint64_t)v1, type metadata accessor for FormatContent);
  v2 = *v1;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v1, type metadata accessor for FormatContent);
  return v2;
}

void FormatFile.kind.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v1);
  sub_1BA84AF70(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BB36A950 + 4 * byte_1BB90CAD4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB36A950()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = 0;
  return sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
}

void sub_1BB36AA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for FormatBindingContent();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatContent(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v4);
  sub_1BA84AF70(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_1BB36ABB0 + 4 * byte_1BB90CAE0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB36ABB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  sub_1BA5193C4(v0, (uint64_t)v1, type metadata accessor for FormatContent);
  v2 = *v1;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v1, type metadata accessor for FormatContent);
  return v2;
}

uint64_t sub_1BB36AEB8()
{
  sub_1BB8745D8();
  return sub_1BB872A90();
}

uint64_t sub_1BB36AEFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFile.init(from:)(a1, a2);
}

void sub_1BB36AF10(_QWORD *a1)
{
  FormatFile.encode(to:)(a1);
}

uint64_t sub_1BB36AF28()
{
  sub_1BB8745CC();
  sub_1BB36AEB8();
  return sub_1BB874608();
}

uint64_t sub_1BB36AF80()
{
  return sub_1BB36AEB8();
}

uint64_t sub_1BB36AF8C()
{
  sub_1BB8745CC();
  sub_1BB36AEB8();
  return sub_1BB874608();
}

uint64_t sub_1BB36AFE0(uint64_t a1)
{
  return sub_1BB36AFFC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1BB36AFFC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_1BB36B018 + 4 * byte_1BB90CAEC[a3]))();
}

uint64_t sub_1BB36B018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_1BB874398();
}

void _s8NewsFeed10FormatFileO2eeoiySbAC_ACtFZ_0(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  _QWORD v32[11];
  uint64_t v33;
  char *v34;

  v33 = a1;
  v34 = a2;
  v2 = type metadata accessor for FormatBindingContent();
  MEMORY[0x1E0C80A78](v2);
  v32[4] = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v4);
  v32[3] = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatContent(0);
  MEMORY[0x1E0C80A78](v6);
  v32[2] = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v8);
  v32[10] = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v32[7] = (char *)v32 - v11;
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v32[6] = (char *)v32 - v14;
  MEMORY[0x1E0C80A78](v15);
  v32[8] = (char *)v32 - v16;
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v32[5] = (char *)v32 - v19;
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  v32[9] = (char *)v32 - v22;
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  MEMORY[0x1E0C80A78](v25);
  sub_1BB36FF68();
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)v32 + *(int *)(v28 + 48) - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA84AF70(v33, (uint64_t)v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = (uint64_t)v34;
  v34 = v29;
  sub_1BA84AF70(v30, (uint64_t)v29);
  v31 = (char *)sub_1BB36B3D8 + 4 * word_1BB90CAF8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB36B3D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;

  sub_1BA84AF70(v1, (uint64_t)v2);
  v3 = *(_QWORD *)(v0 + 96);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BA4A2E80((uint64_t)v2, type metadata accessor for FormatContent);
    sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))sub_1BB36FF68);
    v4 = 0;
  }
  else
  {
    v5 = *(_QWORD **)(v0 + 16);
    sub_1BA5193C4(v3, (uint64_t)v5, type metadata accessor for FormatContent);
    v4 = _s8NewsFeed13FormatContentV2eeoiySbAC_ACtFZ_0(v2, v5);
    sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatContent);
    sub_1BA4A2E80((uint64_t)v2, type metadata accessor for FormatContent);
    sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
  }
  return v4 & 1;
}

uint64_t sub_1BB36C054(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB36C0EC(&qword_1EF2C1DB0, (uint64_t)&protocol conformance descriptor for FormatFile);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB36C088(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB36C0EC(&qword_1ED3B3030, (uint64_t)&protocol conformance descriptor for FormatFile);
  a1[2] = sub_1BB36C0EC(&qword_1EF2AB3D8, (uint64_t)&protocol conformance descriptor for FormatFile);
  result = sub_1BB36C0EC(&qword_1EF2C1DB8, (uint64_t)&protocol conformance descriptor for FormatFile);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB36C0EC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatFile();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatFile(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BB36C18C + 4 * word_1BB90CB10[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for FormatFile(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for FormatContent(0);
      v4 = a1 + *(int *)(v3 + 20);
      v5 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = a1 + *(int *)(v3 + 40);
      v7 = sub_1BB871E24();
      v8 = *(_QWORD *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      goto LABEL_31;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(a1 + 106) != 255)
      {
        v9 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
        return sub_1BA77A170(*(_QWORD *)(a1 + 96), v9, SBYTE2(v9), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
      }
      return result;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      goto LABEL_31;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 56) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 168) >= 3uLL)
        swift_bridgeObjectRelease();
      v10 = (int *)type metadata accessor for FormatPackage();
      v11 = a1 + v10[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = type metadata accessor for FormatCompilerOptions(0);
      v13 = v11 + *(int *)(v12 + 24);
      if (*(_QWORD *)(v13 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v14 = v13 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v15 = sub_1BB86E710();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
      if (!v17(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      v18 = v11 + *(int *)(v12 + 28);
      if (!v17(v18, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
      swift_bridgeObjectRelease();
      v19 = a1 + v10[24];
      v20 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      v21 = a1 + v10[25];
      result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v21, 1, v15);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v21, v15);
      return result;
    case 6:
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 7:
      return swift_release();
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1BA6C0C20(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = a1 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      v23 = type metadata accessor for FormatContent(0);
      v24 = v22 + *(int *)(v23 + 20);
      v25 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = v22 + *(int *)(v23 + 40);
      v27 = sub_1BB871E24();
      v28 = *(_QWORD *)(v27 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_32:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for FormatFile()
{
  char *v0;

  v0 = (char *)sub_1BB36D598 + 4 * word_1BB90CB40[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BB36D598(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__dst, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  char *v64;

  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = (int *)type metadata accessor for FormatContent(0);
  v36 = v35[5];
  v37 = (char *)v32 + v36;
  v38 = (char *)v33 + v36;
  v39 = sub_1BB86C8B0();
  v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  swift_bridgeObjectRetain();
  v40(v37, v38, v39);
  v41 = v35[6];
  v42 = (_QWORD *)((char *)v32 + v41);
  v43 = (_QWORD *)((char *)v33 + v41);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  v45 = v35[7];
  v46 = (_QWORD *)((char *)v32 + v45);
  v47 = (_QWORD *)((char *)v33 + v45);
  v48 = v47[1];
  *v46 = *v47;
  v46[1] = v48;
  v49 = v35[8];
  v50 = (_QWORD *)((char *)v32 + v49);
  v51 = (_QWORD *)((char *)v33 + v49);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  v53 = v35[9];
  v54 = (_QWORD *)((char *)v32 + v53);
  v55 = (_QWORD *)((char *)v33 + v53);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  v57 = v35[10];
  v64 = (char *)v32 + v57;
  v58 = (char *)v33 + v57;
  v59 = sub_1BB871E24();
  v60 = *(_QWORD *)(v59 - 8);
  v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v63(v58, 1, v59))
  {
    sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
    memcpy(v64, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v64, v58, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v64, 0, 1, v59);
  }
  *(_QWORD *)((char *)v32 + v35[11]) = *(_QWORD *)((char *)v33 + v35[11]);
  *(_QWORD *)((char *)v32 + v35[12]) = *(_QWORD *)((char *)v33 + v35[12]);
  *(_QWORD *)((char *)v32 + v35[13]) = *(_QWORD *)((char *)v33 + v35[13]);
  *(_QWORD *)((char *)v32 + v35[14]) = *(_QWORD *)((char *)v33 + v35[14]);
  *(_QWORD *)((char *)v32 + v35[15]) = *(_QWORD *)((char *)v33 + v35[15]);
  *(_QWORD *)((char *)v32 + v35[16]) = *(_QWORD *)((char *)v33 + v35[16]);
  *(_QWORD *)((char *)v32 + v35[17]) = *(_QWORD *)((char *)v33 + v35[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v32;
}

uint64_t assignWithCopy for FormatFile(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v2 = (char *)&loc_1BB36E2C8 + 4 * word_1BB90CB58[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for FormatFile(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int *v62;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 11:
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      a1[2] = a2[2];
      v19 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
      v22 = (int *)type metadata accessor for FormatContent(0);
      v23 = v22[5];
      v24 = &v20[v23];
      v25 = &v21[v23];
      v26 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)&v20[v22[6]] = *(_OWORD *)&v21[v22[6]];
      *(_OWORD *)&v20[v22[7]] = *(_OWORD *)&v21[v22[7]];
      *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
      *(_OWORD *)&v20[v22[9]] = *(_OWORD *)&v21[v22[9]];
      v27 = v22[10];
      v28 = &v20[v27];
      v29 = &v21[v27];
      v30 = sub_1BB871E24();
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      *(_QWORD *)&v20[v22[11]] = *(_QWORD *)&v21[v22[11]];
      *(_QWORD *)&v20[v22[12]] = *(_QWORD *)&v21[v22[12]];
      *(_QWORD *)&v20[v22[13]] = *(_QWORD *)&v21[v22[13]];
      *(_QWORD *)&v20[v22[14]] = *(_QWORD *)&v21[v22[14]];
      *(_QWORD *)&v20[v22[15]] = *(_QWORD *)&v21[v22[15]];
      *(_QWORD *)&v20[v22[16]] = *(_QWORD *)&v21[v22[16]];
      *(_QWORD *)&v20[v22[17]] = *(_QWORD *)&v21[v22[17]];
      goto LABEL_22;
    case 5:
      v33 = a2[1];
      *a1 = *a2;
      a1[1] = v33;
      a1[2] = a2[2];
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
      *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
      *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
      a1[10] = a2[10];
      v62 = (int *)type metadata accessor for FormatPackage();
      v34 = v62[23];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      *(_OWORD *)((char *)a1 + v34) = *(_OWORD *)((char *)a2 + v34);
      v37 = (int *)type metadata accessor for FormatCompilerOptions(0);
      v38 = v37[6];
      v39 = &v35[v38];
      v40 = &v36[v38];
      v41 = *(_OWORD *)&v36[v38 + 16];
      *(_OWORD *)v39 = *(_OWORD *)&v36[v38];
      *((_OWORD *)v39 + 1) = v41;
      *((_OWORD *)v39 + 2) = *(_OWORD *)&v36[v38 + 32];
      v42 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v43 = &v39[v42];
      v44 = &v40[v42];
      v45 = sub_1BB86E710();
      v46 = *(_QWORD *)(v45 - 8);
      v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
      if (v47(v44, 1, v45))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      v49 = v37[7];
      v50 = &v35[v49];
      v51 = &v36[v49];
      if (v47(&v36[v49], 1, v45))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v50, v51, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v50, 0, 1, v45);
      }
      *(_QWORD *)&v35[v37[8]] = *(_QWORD *)&v36[v37[8]];
      v53 = v62[24];
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      v56 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
      v57 = v62[25];
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      if (v47(v59, 1, v45))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v58, v59, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v58, 0, 1, v45);
      }
      goto LABEL_22;
    case 0:
      *a1 = *a2;
      v7 = (int *)type metadata accessor for FormatContent(0);
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *(_OWORD *)((char *)a1 + v7[6]) = *(_OWORD *)((char *)a2 + v7[6]);
      *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
      *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
      *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)((char *)a2 + v7[9]);
      v12 = v7[10];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_1BB871E24();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *(_QWORD *)((char *)a1 + v7[11]) = *(_QWORD *)((char *)a2 + v7[11]);
      *(_QWORD *)((char *)a1 + v7[12]) = *(_QWORD *)((char *)a2 + v7[12]);
      *(_QWORD *)((char *)a1 + v7[13]) = *(_QWORD *)((char *)a2 + v7[13]);
      *(_QWORD *)((char *)a1 + v7[14]) = *(_QWORD *)((char *)a2 + v7[14]);
      *(_QWORD *)((char *)a1 + v7[15]) = *(_QWORD *)((char *)a2 + v7[15]);
      *(_QWORD *)((char *)a1 + v7[16]) = *(_QWORD *)((char *)a2 + v7[16]);
      *(_QWORD *)((char *)a1 + v7[17]) = *(_QWORD *)((char *)a2 + v7[17]);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FormatFile(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  int *v64;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 11:
        v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        a1[2] = a2[2];
        v19 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
        v22 = (int *)type metadata accessor for FormatContent(0);
        v23 = v22[5];
        v24 = &v20[v23];
        v25 = &v21[v23];
        v26 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        *(_OWORD *)&v20[v22[6]] = *(_OWORD *)&v21[v22[6]];
        *(_OWORD *)&v20[v22[7]] = *(_OWORD *)&v21[v22[7]];
        *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
        *(_OWORD *)&v20[v22[9]] = *(_OWORD *)&v21[v22[9]];
        v27 = v22[10];
        v28 = &v20[v27];
        v29 = &v21[v27];
        v30 = sub_1BB871E24();
        v31 = *(_QWORD *)(v30 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        }
        *(_QWORD *)&v20[v22[11]] = *(_QWORD *)&v21[v22[11]];
        *(_QWORD *)&v20[v22[12]] = *(_QWORD *)&v21[v22[12]];
        *(_QWORD *)&v20[v22[13]] = *(_QWORD *)&v21[v22[13]];
        *(_QWORD *)&v20[v22[14]] = *(_QWORD *)&v21[v22[14]];
        *(_QWORD *)&v20[v22[15]] = *(_QWORD *)&v21[v22[15]];
        *(_QWORD *)&v20[v22[16]] = *(_QWORD *)&v21[v22[16]];
        *(_QWORD *)&v20[v22[17]] = *(_QWORD *)&v21[v22[17]];
        goto LABEL_24;
      case 5:
        v33 = a2[1];
        *a1 = *a2;
        a1[1] = v33;
        a1[2] = a2[2];
        *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
        *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        a1[10] = a2[10];
        v64 = (int *)type metadata accessor for FormatPackage();
        v34 = v64[23];
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        *(_OWORD *)((char *)a1 + v34) = *(_OWORD *)((char *)a2 + v34);
        v37 = (int *)type metadata accessor for FormatCompilerOptions(0);
        v38 = v37[6];
        v39 = &v35[v38];
        v40 = &v36[v38];
        v41 = *(_OWORD *)&v36[v38 + 16];
        *(_OWORD *)v39 = *(_OWORD *)&v36[v38];
        *((_OWORD *)v39 + 1) = v41;
        *((_OWORD *)v39 + 2) = *(_OWORD *)&v36[v38 + 32];
        v42 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        v43 = &v39[v42];
        v44 = &v40[v42];
        v45 = sub_1BB86E710();
        v46 = *(_QWORD *)(v45 - 8);
        v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
        if (v63(v44, 1, v45))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
        }
        v48 = v37[7];
        v49 = &v35[v48];
        v50 = &v36[v48];
        if (v63(&v36[v48], 1, v45))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          v52 = v46;
        }
        else
        {
          v53 = v50;
          v52 = v46;
          (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v49, v53, v45);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v49, 0, 1, v45);
        }
        *(_QWORD *)&v35[v37[8]] = *(_QWORD *)&v36[v37[8]];
        v54 = v64[24];
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
        v58 = v64[25];
        v59 = (char *)a1 + v58;
        v60 = (char *)a2 + v58;
        if (v63(v60, 1, v45))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v59, v60, v45);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v59, 0, 1, v45);
        }
        goto LABEL_24;
      case 0:
        *a1 = *a2;
        v7 = (int *)type metadata accessor for FormatContent(0);
        v8 = v7[5];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        *(_OWORD *)((char *)a1 + v7[6]) = *(_OWORD *)((char *)a2 + v7[6]);
        *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
        *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
        *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)((char *)a2 + v7[9]);
        v12 = v7[10];
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_1BB871E24();
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
        *(_QWORD *)((char *)a1 + v7[11]) = *(_QWORD *)((char *)a2 + v7[11]);
        *(_QWORD *)((char *)a1 + v7[12]) = *(_QWORD *)((char *)a2 + v7[12]);
        *(_QWORD *)((char *)a1 + v7[13]) = *(_QWORD *)((char *)a2 + v7[13]);
        *(_QWORD *)((char *)a1 + v7[14]) = *(_QWORD *)((char *)a2 + v7[14]);
        *(_QWORD *)((char *)a1 + v7[15]) = *(_QWORD *)((char *)a2 + v7[15]);
        *(_QWORD *)((char *)a1 + v7[16]) = *(_QWORD *)((char *)a2 + v7[16]);
        *(_QWORD *)((char *)a1 + v7[17]) = *(_QWORD *)((char *)a2 + v7[17]);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t destroy for FormatFileKey(uint64_t a1)
{
  return sub_1BA9ED480(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed13FormatFileKeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA9ED468(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatFileKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA9ED468(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA9ED480(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatFileKey(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA9ED480(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatFileKey(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF5 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 245);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 0xB)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatFileKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 245;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF5)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF5)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFileKey()
{
  return &type metadata for FormatFileKey;
}

unint64_t sub_1BB36FF24()
{
  unint64_t result;

  result = qword_1EF2C1DC0;
  if (!qword_1EF2C1DC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90CD58, &type metadata for FormatFileKey);
    atomic_store(result, (unint64_t *)&qword_1EF2C1DC0);
  }
  return result;
}

void sub_1BB36FF68()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C1DC8)
  {
    type metadata accessor for FormatFile();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C1DC8);
  }
}

uint64_t static FormatOptionValue.date(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3B5EF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  v5 = v4;
  v6 = swift_allocBox();
  v8 = v7;
  v9 = sub_1BB86C8B0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
  *(_QWORD *)(v8 + *(int *)(v5 + 36)) = MEMORY[0x1E0DEE9D8];
  *a2 = v6 | 0x2000000000000000;
  return result;
}

uint64_t static FormatOptionValue.url(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  v5 = v4;
  v6 = swift_allocBox();
  v8 = v7;
  v9 = sub_1BB86C67C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
  *(_QWORD *)(v8 + *(int *)(v5 + 36)) = MEMORY[0x1E0DEE9D8];
  *a2 = v6 | 0x6000000000000000;
  return result;
}

uint64_t sub_1BB3700E8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v16[23];
  uint64_t v17;

  v4 = a3;
  *(_QWORD *)(a3 + 24) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)a3 = a1;
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A22C(0, v5, 0);
    v6 = v17;
    v7 = (_BYTE *)(a2 + 48);
    do
    {
      v9 = *((_QWORD *)v7 - 2);
      v8 = *((_QWORD *)v7 - 1);
      v10 = *v7;
      v11 = *(_QWORD *)(v17 + 16);
      v12 = *(_QWORD *)(v17 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1)
        sub_1BAC7A22C(v12 > 1, v11 + 1, 1);
      v7 += 24;
      *(_QWORD *)(v17 + 16) = v11 + 1;
      v13 = v17 + 48 * v11;
      *(_BYTE *)(v13 + 32) = v10;
      *(_QWORD *)(v13 + 48) = *(_QWORD *)&v16[15];
      *(_OWORD *)(v13 + 33) = *(_OWORD *)v16;
      *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(v13 + 64) = v9;
      *(_QWORD *)(v13 + 72) = v8;
      --v5;
    }
    while (v5);
    result = swift_bridgeObjectRelease();
    v4 = a3;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(v4 + 32) = v6;
  return result;
}

uint64_t sub_1BB370220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  __int128 v17;
  uint64_t v18;

  v4 = a2;
  v5 = MEMORY[0x1E0DEF040];
  *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEF040];
  *(double *)a2 = a3;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A22C(0, v6, 0);
    v7 = v18;
    v8 = (uint64_t *)(a1 + 48);
    do
    {
      v10 = *(v8 - 2);
      v9 = *(v8 - 1);
      v11 = *v8;
      v13 = *(_QWORD *)(v18 + 16);
      v12 = *(_QWORD *)(v18 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_1BAC7A22C(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v18 + 16) = v13 + 1;
      v14 = v18 + 48 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_OWORD *)(v14 + 40) = v17;
      *(_QWORD *)(v14 + 56) = v5;
      *(_QWORD *)(v14 + 64) = v10;
      *(_QWORD *)(v14 + 72) = v9;
      v8 += 3;
      --v6;
    }
    while (v6);
    result = swift_bridgeObjectRelease();
    v4 = a2;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(v4 + 32) = v7;
  return result;
}

uint64_t sub_1BB370350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  __int128 v16;
  uint64_t v17;

  v4 = a3;
  a3[3] = MEMORY[0x1E0DEB418];
  *a3 = a1;
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A22C(0, v5, 0);
    v6 = v17;
    v7 = (uint64_t *)(a2 + 48);
    do
    {
      v9 = *(v7 - 2);
      v8 = *(v7 - 1);
      v10 = *v7;
      v11 = *(_QWORD *)(v17 + 16);
      v12 = *(_QWORD *)(v17 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1)
        sub_1BAC7A22C(v12 > 1, v11 + 1, 1);
      v7 += 3;
      *(_QWORD *)(v17 + 16) = v11 + 1;
      v13 = v17 + 48 * v11;
      *(_QWORD *)(v13 + 32) = v10;
      *(_OWORD *)(v13 + 40) = v16;
      *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v13 + 64) = v9;
      *(_QWORD *)(v13 + 72) = v8;
      --v5;
    }
    while (v5);
    result = swift_bridgeObjectRelease();
    v4 = a3;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  v4[4] = v6;
  return result;
}

uint64_t sub_1BB370480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t result;
  uint64_t v18;

  v5 = a4;
  a4[3] = MEMORY[0x1E0DEA968];
  *a4 = a1;
  a4[1] = a2;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAC7A22C(0, v6, 0);
    v7 = v18;
    v8 = (uint64_t *)(a3 + 56);
    do
    {
      v9 = *(v8 - 3);
      v10 = *(v8 - 2);
      v11 = *(v8 - 1);
      v12 = *v8;
      v14 = *(_QWORD *)(v18 + 16);
      v13 = *(_QWORD *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1)
        sub_1BAC7A22C(v13 > 1, v14 + 1, 1);
      v8 += 4;
      *(_QWORD *)(v18 + 16) = v14 + 1;
      v15 = (_QWORD *)(v18 + 48 * v14);
      v15[4] = v11;
      v15[5] = v12;
      v15[7] = MEMORY[0x1E0DEA968];
      v15[8] = v9;
      v15[9] = v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease_n();
    result = swift_bridgeObjectRelease();
    v5 = a4;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  v5[4] = v7;
  return result;
}

uint64_t sub_1BB3705D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t (*a4)(_QWORD, double)@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  double v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  void (*v38)(uint64_t *, uint64_t, uint64_t);
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v39 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))a3)(0, a2, type metadata accessor for FormatSelectorValueSelector);
  v12 = *(_QWORD *)(v39 - 8);
  v13 = MEMORY[0x1E0C80A78](v39);
  v15 = (uint64_t *)((char *)&v33 - v14);
  v16 = a4(0, v13);
  a6[3] = v16;
  v36 = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a6);
  v38 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v38(boxed_opaque_existential_0, a1, v16);
  v35 = a5;
  v18 = *(int *)(((uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))a3)(0, a5, type metadata accessor for FormatSelectorValue)+ 36);
  v34 = a1;
  v19 = *(_QWORD *)(a1 + v18);
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v43 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7A22C(0, v20, 0);
    v21 = *(unsigned __int8 *)(v12 + 80);
    v33 = v19;
    v22 = v19 + ((v21 + 32) & ~v21);
    v37 = *(_QWORD *)(v12 + 72);
    do
    {
      sub_1BA6AA01C(v22, (uint64_t)v15, a2, (uint64_t)type metadata accessor for FormatSelectorValueSelector, (uint64_t (*)(_QWORD, uint64_t, uint64_t))a3);
      v23 = (char *)v15 + *(int *)(v39 + 36);
      *((_QWORD *)&v41 + 1) = v16;
      v24 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v40);
      v38(v24, (uint64_t)v23, v16);
      v25 = v15[1];
      *(_QWORD *)&v42 = *v15;
      *((_QWORD *)&v42 + 1) = v25;
      swift_bridgeObjectRetain();
      sub_1BA6AA068((uint64_t)v15, a2, (uint64_t)type metadata accessor for FormatSelectorValueSelector, a3);
      v26 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7A22C(0, *(_QWORD *)(v26 + 16) + 1, 1);
        v26 = v43;
      }
      v28 = *(_QWORD *)(v26 + 16);
      v27 = *(_QWORD *)(v26 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1BAC7A22C(v27 > 1, v28 + 1, 1);
        v26 = v43;
      }
      *(_QWORD *)(v26 + 16) = v28 + 1;
      v29 = (_OWORD *)(v26 + 48 * v28);
      v30 = v40;
      v31 = v42;
      v29[3] = v41;
      v29[4] = v31;
      v29[2] = v30;
      v22 += v37;
      --v20;
    }
    while (v20);
  }
  else
  {
    swift_bridgeObjectRetain();
    v26 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA6AA068(v34, v35, (uint64_t)type metadata accessor for FormatSelectorValue, a3);
  result = swift_bridgeObjectRelease();
  v36[4] = v26;
  return result;
}

uint64_t sub_1BB370874(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unsigned int v50;
  unint64_t v51;
  size_t v52;
  uint64_t isStackAllocationSafe;
  uint64_t v54;
  void *v55;
  char v56;
  char v57;
  uint64_t v58;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[2];
  _QWORD v71[5];

  v69 = a1;
  v71[3] = *MEMORY[0x1E0C80C00];
  v2 = (_QWORD *)*v1;
  v3 = *v1 >> 60;
  v4 = 2;
  if (((1 << v3) & 0x3EDF) != 0)
    return v4;
  if ((_DWORD)v3 != 5)
  {
    v71[0] = v2[3];
    swift_retain_n();
    swift_retain();
    v4 = sub_1BB370874(v69);
    swift_release_n();
    swift_release();
    return v4;
  }
  v6 = v2[3];
  v60 = v2[2];
  v7 = v2[4];
  v63 = *(_QWORD *)(v7 + 16);
  if (!v63)
  {
    swift_bridgeObjectRetain();
LABEL_41:
    swift_bridgeObjectRelease();
    v58 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v58 = v60 & 0xFFFFFFFFFFFFLL;
    return v58 == 0;
  }
  v62 = v7 + 32;
  swift_bridgeObjectRetain_n();
  v59[0] = v7;
  swift_bridgeObjectRetain_n();
  v8 = 0;
  v59[1] = v6;
  v61 = v6;
LABEL_8:
  v10 = (uint64_t *)(v62 + 32 * v8);
  v12 = *v10;
  v11 = v10[1];
  v14 = v10[2];
  v13 = v10[3];
  v15 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = qword_1ED4768D0;
  v17 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v18 = (uint64_t *)(v16 + 16);
  swift_beginAccess();
  v19 = *(_QWORD *)(v16 + 16);
  v20 = *(_QWORD *)(v19 + 16);
  v67 = v13;
  v68 = v8;
  v64 = v14;
  if (v20)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1BA6E35A8(v12, v11);
    if ((v22 & 1) != 0)
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 24 * v21 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v45 = *(_QWORD *)(v23 + 16);
      if (!v45)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = v68;
        goto LABEL_7;
      }
      v65 = v23;
      v66 = v11;
      v46 = (uint64_t *)(v23 + 64);
      while (1)
      {
        v47 = *(v46 - 1);
        v48 = *v46;
        v49 = *(_BYTE *)(v47 + 32);
        v50 = v49 & 0x3F;
        v51 = (unint64_t)((1 << v49) + 63) >> 6;
        v52 = 8 * v51;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v50 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v52);
          v54 = sub_1BA6EB5B4((uint64_t)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v51, v47, v69);
          swift_bridgeObjectRelease();
        }
        else
        {
          v55 = (void *)swift_slowAlloc();
          bzero(v55, v52);
          v54 = sub_1BA6EB5B4((uint64_t)v55, v51, v47, v69);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v55, -1, -1);
        }
        v56 = sub_1BA6EB330(v54, v47);
        swift_release();
        if ((v56 & 1) != 0)
        {
          v57 = sub_1BA6EBD20(v69, v48);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v57 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v9 = v68;
            v60 = v64;
            v61 = v67;
LABEL_7:
            swift_bridgeObjectRelease();
            v8 = v9 + 1;
            if (v8 == v63)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              v6 = v61;
              goto LABEL_41;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 += 5;
        if (!--v45)
          goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
  }
  v65 = v17;
  swift_endAccess();
  v70[0] = v12;
  v70[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v70, v71);
  v24 = v11;
  v25 = v71[1];
  v66 = v71[0];
  v26 = v71[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = v26;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v70[0] = *v18;
  v29 = v70[0];
  *v18 = 0x8000000000000000;
  v11 = v24;
  v31 = sub_1BA6E35A8(v12, v24);
  v32 = *(_QWORD *)(v29 + 16);
  v33 = (v30 & 1) == 0;
  v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
LABEL_45:
    __break(1u);
  }
  v35 = v30;
  if (*(_QWORD *)(v29 + 24) >= v34)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v38 = (_QWORD *)v70[0];
      if ((v30 & 1) != 0)
        goto LABEL_21;
    }
    else
    {
      sub_1BB4C1F6C();
      v38 = (_QWORD *)v70[0];
      if ((v35 & 1) != 0)
        goto LABEL_21;
    }
LABEL_23:
    v38[(v31 >> 6) + 8] |= 1 << v31;
    v40 = (uint64_t *)(v38[6] + 16 * v31);
    *v40 = v12;
    v40[1] = v11;
    v41 = (uint64_t *)(v38[7] + 24 * v31);
    *v41 = v66;
    v41[1] = v25;
    v41[2] = v27;
    v42 = v38[2];
    v43 = __OFADD__(v42, 1);
    v44 = v42 + 1;
    if (v43)
      goto LABEL_45;
    v23 = v27;
    v38[2] = v44;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BA7AAAE4(v34, isUniquelyReferenced_nonNull_native);
  v36 = sub_1BA6E35A8(v12, v11);
  if ((v35 & 1) == (v37 & 1))
  {
    v31 = v36;
    v38 = (_QWORD *)v70[0];
    if ((v35 & 1) == 0)
      goto LABEL_23;
LABEL_21:
    v39 = (uint64_t *)(v38[7] + 24 * v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v39 = v66;
    v39[1] = v25;
    v39[2] = v27;
    v23 = v27;
LABEL_25:
    *v18 = (uint64_t)v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t static FormatOptionValue.string(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = v7;
  *a3 = v6 | 0x5000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t static FormatOptionValue.float(_:)@<X0>(uint64_t *a1@<X8>, double a2@<D0>)
{
  uint64_t result;

  result = swift_allocObject();
  *(double *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = MEMORY[0x1E0DEE9D8];
  *a1 = result | 0x3000000000000000;
  return result;
}

void sub_1BB370FA8()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3B5EF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X11 }
}

void sub_1BB3710A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
}

uint64_t sub_1BB3710D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  return sub_1BB3700E8(v2, v3, v1);
}

void sub_1BB371108(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v2 - 128) = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  *(_OWORD *)(v2 - 112) = v3;
  *(_QWORD *)(v2 - 96) = *(_QWORD *)(a1 + 48);
  v4 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  *(_OWORD *)(v2 - 80) = v4;
  *(_OWORD *)(v2 - 144) = v4;
  sub_1BA7133FC(v2 - 128);
  sub_1BA739BF4(v2 - 80);
  sub_1BB872AFC(v5);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v2 - 144);
  v8 = *(_QWORD *)(v2 - 136);
  v1[3] = MEMORY[0x1E0DEA968];
  *v1 = v7;
  v1[1] = v8;
  v9 = *(_QWORD *)(v2 - 96);
  *(_QWORD *)(v2 - 144) = v9;
  sub_1BA7133FC(v2 - 128);
  sub_1BA781758(v2 - 144);
  v10 = sub_1BB371A5C(v9, (__int128 *)(v2 - 128));
  sub_1BB371BB8(v2 - 128);
  sub_1BB371BB8(v2 - 128);
  sub_1BA4F6CCC(v2 - 144);
  v1[4] = v10;
  JUMPOUT(0x1BB3710B4);
}

void sub_1BB3711D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = swift_projectBox();
  sub_1BA6AA01C(v3, v2, (uint64_t)&qword_1ED3B5EF0, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D5EC);
  sub_1BA6AA01C(v2, v1, (uint64_t)&qword_1ED3B5EF0, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D5EC);
  sub_1BB3705D0(v1, (uint64_t)&qword_1ED3BA910, (uint64_t (*)(_QWORD))sub_1BA68D5EC, (uint64_t (*)(_QWORD, double))MEMORY[0x1E0CB0870], (uint64_t)&qword_1ED3B5EF0, v0);
  sub_1BA6AA068(v2, (uint64_t)&qword_1ED3B5EF0, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD))sub_1BA68D5EC);
  JUMPOUT(0x1BB3710B4);
}

uint64_t sub_1BB371258@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v2;
  uint64_t v3;

  v2 = *(double *)(a1 + 16);
  v3 = swift_bridgeObjectRetain();
  return sub_1BB370220(v3, v1, v2);
}

uint64_t sub_1BB371288@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  return sub_1BB370350(v2, v3, v1);
}

uint64_t sub_1BB3712BC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BB370480(v2, v3, v4, v1);
}

void sub_1BB371300()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = swift_projectBox();
  sub_1BA6AA01C(v3, v1, (uint64_t)&qword_1ED3B5EE8, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D4C8);
  sub_1BA6AA01C(v1, v2, (uint64_t)&qword_1ED3B5EE8, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D4C8);
  sub_1BB3705D0(v2, (uint64_t)&qword_1ED3BA908, (uint64_t (*)(_QWORD))sub_1BA68D4C8, (uint64_t (*)(_QWORD, double))MEMORY[0x1E0CAFFF8], (uint64_t)&qword_1ED3B5EE8, v0);
  sub_1BA6AA068(v1, (uint64_t)&qword_1ED3B5EE8, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD))sub_1BA68D4C8);
  JUMPOUT(0x1BB3710B4);
}

void sub_1BB371388(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = *(_QWORD *)(a1 + 24);
  sub_1BB370FA8();
  JUMPOUT(0x1BB3710B4);
}

uint64_t sub_1BB3713A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB3713CC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL sub_1BB3713F4(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v4;
  unint64_t v5;

  v2 = *a1;
  v4 = *a2;
  v5 = v2;
  return (static FormatOptionValue.< infix(_:_:)(&v4, &v5) & 1) == 0;
}

BOOL sub_1BB37142C(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v4 = *a2;
  v5 = v2;
  return (static FormatOptionValue.< infix(_:_:)(&v5, &v4) & 1) == 0;
}

uint64_t sub_1BB371464(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v4;
  unint64_t v5;

  v2 = *a1;
  v4 = *a2;
  v5 = v2;
  return static FormatOptionValue.< infix(_:_:)(&v4, &v5) & 1;
}

uint64_t static FormatOptionValue.BOOLean(_:)@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = MEMORY[0x1E0DEE9D8];
  *a2 = result;
  return result;
}

uint64_t static FormatOptionValue.integer(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = swift_allocObject();
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = v5;
  *a2 = result | 0x4000000000000000;
  return result;
}

void FormatOptionValue.description.getter()
{
  uint64_t v1;
  uint64_t v2;

  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3B5EF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X11 }
}

uint64_t sub_1BB3715F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v1 - 104) = 0;
  *(_QWORD *)(v1 - 96) = 0xE000000000000000;
  *(_BYTE *)(v1 - 80) = v2;
  *(_QWORD *)(v1 - 72) = v3;
  sub_1BA70F2E0(0, &qword_1ED3B5F20, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool);
  sub_1BB873E34();
  return *(_QWORD *)(v1 - 104);
}

void sub_1BB37191C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B5F00)
  {
    v2 = sub_1BA841CF4();
    v4 = type metadata accessor for FormatSelectorValue(a1, MEMORY[0x1E0DEF040], v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B5F00);
  }
}

unint64_t sub_1BB371978(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAE781C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3719A0()
{
  unint64_t result;

  result = qword_1EF2C1DD0;
  if (!qword_1EF2C1DD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionValue, &type metadata for FormatOptionValue);
    atomic_store(result, (unint64_t *)&qword_1EF2C1DD0);
  }
  return result;
}

unint64_t sub_1BB3719E4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA63A808();
  a1[2] = sub_1BA640C5C();
  result = sub_1BB3719A0();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionValue()
{
  return &type metadata for FormatOptionValue;
}

uint64_t sub_1BB371A28()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB371A5C(uint64_t a1, __int128 *a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A22C(0, v2, 0);
    v3 = v17;
    v16 = *a2;
    v6 = a1 + 56;
    do
    {
      v7 = *(_QWORD *)(v6 - 16);
      v14 = *(_QWORD *)(v6 - 24);
      v15 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA739BF4((uint64_t)&v16);
      sub_1BB872AFC(v8);
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = v3;
      v11 = *(_QWORD *)(v3 + 16);
      v10 = *(_QWORD *)(v3 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BAC7A22C(v10 > 1, v11 + 1, 1);
        v3 = v17;
      }
      v6 += 32;
      *(_QWORD *)(v3 + 16) = v11 + 1;
      v12 = v3 + 48 * v11;
      *(_OWORD *)(v12 + 32) = v15;
      *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v12 + 64) = v14;
      *(_QWORD *)(v12 + 72) = v7;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1BB371BB8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void destroy for DebugFormatHistoryItem(uint64_t a1)
{
  unsigned int v2;

  v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 >= 2)
    v2 = *(_DWORD *)a1 + 2;
  swift_bridgeObjectRelease();
  if (v2 == 1)
  {

  }
  else if (*(_QWORD *)(a1 + 40))
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
}

uint64_t initializeWithCopy for DebugFormatHistoryItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  void *v6;
  id v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  if (v4 == 1)
  {
    v6 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 56) = 1;
    swift_bridgeObjectRetain();
    v7 = v6;
  }
  else
  {
    v8 = (_OWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    if (v9)
    {
      v10 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v10;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16, v9);
    }
    else
    {
      v11 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *v8;
      *(_OWORD *)(a1 + 32) = v11;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    }
    *(_BYTE *)(a1 + 56) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for DebugFormatHistoryItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  void *v6;
  id v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    swift_bridgeObjectRelease();
    if (v4 == 1)
    {

    }
    else if (*(_QWORD *)(a1 + 40))
    {
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    }
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    if (v5 == 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v6 = *(void **)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 56) = 1;
      swift_bridgeObjectRetain();
      v7 = v6;
    }
    else
    {
      v8 = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      if (v8)
      {
        *(_QWORD *)(a1 + 40) = v8;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, a2 + 16, v8);
      }
      else
      {
        v9 = *(_OWORD *)(a2 + 16);
        v10 = *(_OWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 16) = v9;
        *(_OWORD *)(a1 + 32) = v10;
      }
      *(_BYTE *)(a1 + 56) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for DebugFormatHistoryItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  char v7;
  __int128 v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    swift_bridgeObjectRelease();
    if (v4 == 1)
    {

    }
    else if (*(_QWORD *)(a1 + 40))
    {
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    }
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v7 = 1;
    }
    else
    {
      v7 = 0;
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    }
    *(_BYTE *)(a1 + 56) = v7;
  }
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatHistoryItem()
{
  return &type metadata for DebugFormatHistoryItem;
}

uint64_t sub_1BB371F38(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  unsigned int v6;
  id v7;
  uint64_t v8;
  uint64_t v10[4];

  v2 = FCTagProviding.iconColor.getter();
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 30.0, *MEMORY[0x1E0DC1418]);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_whiteColor);
  v6 = objc_msgSend(v2, sel__isSimilarToColor_withinPercentage_, v5, 0.12);

  if (v6)
  {
    v7 = objc_msgSend(v4, sel_blackColor);

    v2 = v7;
  }
  v10[0] = 0x4014000000000000;
  v10[1] = (uint64_t)v2;
  v10[2] = (uint64_t)v3;
  v10[3] = 0;
  v8 = FCTagProviding.createTagImage(imageSize:style:)(v10, a1, 50.0, 50.0);

  return v8;
}

id sub_1BB372070(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  id v7;
  void *v8;

  swift_unknownObjectRetain();
  v7 = a1;
  v8 = (void *)a4(a3);
  swift_unknownObjectRelease();

  return v8;
}

void TagImageShareAttributeProvider.createSportsShareImage(for:completion:)(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t ObjectType;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  void (*v38)(void);
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(void);
  id v52;
  _QWORD aBlock[6];

  v50 = a3;
  v51 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v49 - v8;
  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v49 - v15;
  ObjectType = swift_getObjectType();
  v52 = FCSportsProviding.navigationBarBackgroundColor.getter();
  v18 = objc_msgSend(a1, sel_sportsTheme);
  if (v18)
  {
    v19 = objc_msgSend(v18, sel_sportsLogoImageAssetHandle);
    swift_unknownObjectRelease();
    if (v19)
    {
      v20 = objc_msgSend(v19, sel_filePath);

      if (v20)
        goto LABEL_7;
    }
  }
  v21 = objc_msgSend(a1, sel_sportsTheme);
  if (v21)
  {
    v22 = objc_msgSend(v21, sel_sportsLogoImageCompactAssetHandle);
    swift_unknownObjectRelease();
    if (v22)
    {
      v20 = objc_msgSend(v22, sel_filePath);

      if (v20)
      {
LABEL_7:
        sub_1BB8729A0();

        sub_1BB86C634();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        {
          sub_1BA7F0A80((uint64_t)v9);
LABEL_18:
          v24 = v50;
          goto LABEL_19;
        }
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
        sub_1BB86C610();
        v27 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
        v28 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v29 = objc_msgSend(v27, sel_initWithContentsOfFile_, v28);

        if (!v29)
        {
          (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
          goto LABEL_18;
        }
        v30 = (id)sub_1BB372754(v52);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
LABEL_16:
        v33 = v30;
        v51();

        return;
      }
    }
  }
  v23 = objc_msgSend(a1, sel_feedNavImageAssetHandle);
  v24 = v50;
  if (v23)
  {
    v25 = v23;
    v26 = objc_msgSend(v23, sel_filePath);

    if (v26)
    {
      sub_1BB8729A0();

      sub_1BB86C634();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
      {
        sub_1BA7F0A80((uint64_t)v6);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v6, v10);
        sub_1BB86C610();
        v31 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
        v32 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v30 = objc_msgSend(v31, sel_initWithContentsOfFile_, v32);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        if (v30)
          goto LABEL_16;
      }
    }
  }
LABEL_19:
  v34 = objc_msgSend(a1, sel_sportsTheme);
  if (v34
    && (v35 = objc_msgSend(v34, sel_sportsLogoImageAssetHandle),
        swift_unknownObjectRelease(),
        v35))
  {
    sub_1BA65E330();
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BB8856E0;
    *(_QWORD *)(v36 + 32) = v35;
    aBlock[0] = v36;
    sub_1BB872DCC();
    v37 = (_QWORD *)swift_allocObject();
    v38 = v51;
    v39 = v52;
    v37[2] = v35;
    v37[3] = v38;
    v37[4] = v24;
    v37[5] = a1;
    v37[6] = v39;
    v40 = objc_allocWithZone(MEMORY[0x1E0D58990]);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97A0);
    v41 = v35;
    swift_retain();
    swift_unknownObjectRetain();
    v42 = v39;
    swift_bridgeObjectRetain();
    v43 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    v44 = objc_msgSend(v40, sel_initWithAssetHandles_, v43);

    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = sub_1BB373EFC;
    *(_QWORD *)(v45 + 24) = v37;
    aBlock[4] = sub_1BA4D7950;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA573874;
    aBlock[3] = &block_descriptor_67;
    v46 = _Block_copy(aBlock);
    v47 = v44;
    swift_retain();
    swift_release();
    objc_msgSend(v47, sel_setFetchCompletionBlock_, v46);
    _Block_release(v46);

    sub_1BB86E050();
    sub_1BB86E020();
    if ((objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) != 0)
      sub_1BB86E038();
    else
      objc_msgSend(v47, sel_start);
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
  }
  else
  {
    v48 = (void *)sub_1BB371F38(ObjectType);
    v51();

  }
}

uint64_t sub_1BB372754(void *a1)
{
  void *v1;
  id v3;
  double v4;
  double v5;
  id v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t result;
  _QWORD v20[6];
  CGRect v21;
  CGRect v22;

  v3 = objc_msgSend(v1, sel_imageRendererFormat);
  objc_msgSend(v3, sel_setOpaque_, 0);
  objc_msgSend(v1, sel_scale);
  objc_msgSend(v3, sel_setScale_);
  objc_msgSend(v1, sel_size);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v3, v4, v5);
  objc_msgSend(v1, sel_size);
  v21.size.width = v7;
  v21.size.height = v8;
  v21.origin.x = 0.0;
  v21.origin.y = 0.0;
  v22 = CGRectIntegral(v21);
  x = v22.origin.x;
  y = v22.origin.y;
  width = v22.size.width;
  height = v22.size.height;
  v13 = (CGFloat *)swift_allocObject();
  *((_QWORD *)v13 + 2) = a1;
  v13[3] = x;
  v13[4] = y;
  v13[5] = width;
  v13[6] = height;
  *((_QWORD *)v13 + 7) = v1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BB375100;
  *(_QWORD *)(v14 + 24) = v13;
  v20[4] = sub_1BACD6700;
  v20[5] = v14;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 1107296256;
  v20[2] = sub_1BA56DAFC;
  v20[3] = &block_descriptor_80_0;
  v15 = _Block_copy(v20);
  v16 = a1;
  v17 = v1;
  swift_retain();
  swift_release();
  v18 = objc_msgSend(v6, sel_imageWithActions_, v15);

  _Block_release(v15);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) == 0)
    return (uint64_t)v18;
  __break(1u);
  return result;
}

uint64_t sub_1BB372978(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  _QWORD *v14;
  id v15;
  id v16;
  _QWORD *v17;

  v9 = objc_msgSend(a1, sel_filePath);
  if (!v9)
    goto LABEL_4;
  v10 = v9;
  sub_1BB8729A0();

  v11 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  v12 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithContentsOfFile_, v12);

  if (v13)
  {
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = a2;
    v14[3] = a3;
    v14[4] = v13;
    v14[5] = a5;
    swift_retain();
    v15 = v13;
    v16 = a5;
    sub_1BB86ED4C();

  }
  else
  {
LABEL_4:
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = a2;
    v17[3] = a3;
    v17[4] = a4;
    swift_retain();
    swift_unknownObjectRetain();
    sub_1BB86ED4C();
  }
  return swift_release();
}

void sub_1BB372ABC(void (*a1)(void))
{
  uint64_t ObjectType;
  id v3;

  ObjectType = swift_getObjectType();
  v3 = (id)sub_1BB371F38(ObjectType);
  a1();

}

void TagImageShareAttributeProvider.createShareSportsEventImage(for:size:logoWidth:completion:)(void *a1, void (*a2)(_QWORD), uint64_t a3, double a4, double a5, double a6)
{
  id v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  _QWORD aBlock[6];

  v11 = objc_msgSend(a1, sel_eventCompetitorTags);
  if (!v11)
    goto LABEL_20;
  v12 = v11;
  sub_1BA8EB1C8();
  v13 = sub_1BB872DB4();

  if (!(v13 >> 62))
  {
    if (*(uint64_t *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
      goto LABEL_4;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v33 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (v33 < 2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
    a2(0);
    return;
  }
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v16 = (void *)MEMORY[0x1BCCE4630](0, v13);
    v15 = (void *)MEMORY[0x1BCCE4630](1, v13);
    goto LABEL_8;
  }
  v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v14)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 == 1)
  {
LABEL_23:
    __break(1u);
    return;
  }
  v16 = *(void **)(v13 + 32);
  v15 = *(void **)(v13 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
LABEL_8:
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v16, sel_sportsTheme);
  if (!v17)
    goto LABEL_15;
  v18 = objc_msgSend(v17, sel_sportsLogoImageCompactAssetHandle);
  swift_unknownObjectRelease();
  if (!v18)
    goto LABEL_15;
  v19 = objc_msgSend(v15, sel_sportsTheme);
  if (!v19
    || (v20 = objc_msgSend(v19, sel_sportsLogoImageCompactAssetHandle),
        swift_unknownObjectRelease(),
        !v20))
  {

LABEL_15:
    a2(0);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return;
  }
  sub_1BA65E330();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB8856F0;
  *(_QWORD *)(v21 + 32) = v18;
  *(_QWORD *)(v21 + 40) = v20;
  sub_1BB872DCC();
  v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = v18;
  *(_QWORD *)(v23 + 32) = v20;
  *(_QWORD *)(v23 + 40) = a2;
  *(_QWORD *)(v23 + 48) = a3;
  *(double *)(v23 + 56) = a4;
  *(double *)(v23 + 64) = a5;
  *(_QWORD *)(v23 + 72) = v16;
  *(_QWORD *)(v23 + 80) = v15;
  *(double *)(v23 + 88) = a6;
  v24 = objc_allocWithZone(MEMORY[0x1E0D58990]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97A0);
  v25 = v18;
  v26 = v20;
  v27 = v25;
  v34 = v26;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v28 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v24, sel_initWithAssetHandles_, v28);

  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_1BB373F28;
  *(_QWORD *)(v30 + 24) = v23;
  aBlock[4] = sub_1BAA0239C;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA573874;
  aBlock[3] = &block_descriptor_16;
  v31 = _Block_copy(aBlock);
  v32 = v29;
  swift_retain();
  swift_release();
  objc_msgSend(v32, sel_setFetchCompletionBlock_, v31);
  _Block_release(v31);

  sub_1BB86E050();
  sub_1BB86E020();
  if ((objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) != 0)
    sub_1BB86E038();
  else
    objc_msgSend(v32, sel_start);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();
}

uint64_t sub_1BB373004(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD aBlock[6];

  v52 = a6;
  v53 = a7;
  v18 = sub_1BB872610();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1BB872664();
  v54 = *(_QWORD *)(v22 - 8);
  v55 = v22;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v25 = MEMORY[0x1BCCE5D40](a1 + 16);
  if (!v25)
    goto LABEL_9;
  v26 = (void *)v25;
  v51 = v19;
  v27 = objc_msgSend(a2, sel_filePath);
  if (!v27)
  {

LABEL_9:
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = a4;
    *(_QWORD *)(v46 + 24) = a5;
    swift_retain();
    sub_1BB86ED4C();
    return swift_release();
  }
  v28 = v27;
  v50 = v18;
  sub_1BB8729A0();

  v29 = objc_msgSend(a3, sel_filePath);
  if (!v29)
  {

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v30 = v29;
  v49 = sub_1BB8729A0();

  v31 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  v32 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v31, sel_initWithContentsOfFile_, v32);

  if (v33)
  {
    v34 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
    v35 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v36 = objc_msgSend(v34, sel_initWithContentsOfFile_, v35);

    if (v36)
    {
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
      v49 = sub_1BB87345C();
      v37 = swift_allocObject();
      *(double *)(v37 + 16) = a8;
      *(double *)(v37 + 24) = a9;
      v38 = v52;
      *(_QWORD *)(v37 + 32) = v26;
      *(_QWORD *)(v37 + 40) = v38;
      *(_QWORD *)(v37 + 48) = v53;
      *(double *)(v37 + 56) = a10;
      *(_QWORD *)(v37 + 64) = v33;
      *(_QWORD *)(v37 + 72) = v36;
      *(_QWORD *)(v37 + 80) = a4;
      *(_QWORD *)(v37 + 88) = a5;
      aBlock[4] = sub_1BB374C48;
      aBlock[5] = v37;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BA4F1DD8;
      aBlock[3] = &block_descriptor_58_1;
      v39 = _Block_copy(aBlock);
      v40 = v26;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v41 = v33;
      v42 = v36;
      swift_retain();
      swift_release();
      sub_1BB872634();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_1BA571CB8();
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA571C58();
      v43 = v50;
      sub_1BB873BC4();
      v44 = (void *)v49;
      MEMORY[0x1BCCE3D90](0, v24, v21, v39);
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v43);
      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v24, v55);
    }

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = a4;
  *(_QWORD *)(v47 + 24) = a5;
  swift_retain();
  sub_1BB86ED4C();

  return swift_release();
}

uint64_t sub_1BB37343C(double a1, double a2, CGFloat a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v17;
  id v18;
  double v19;
  double v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t result;
  _QWORD *v28;
  id v29;
  _QWORD v30[6];

  v17 = sub_1BB374C64(a5, a6, 0.0, 0.0, a1, a2);
  v18 = sub_1BB374E88((uint64_t)v17, a7, a8, 0.0, 0.0, a1, a2, a3);
  objc_msgSend(v18, sel_setNeedsDisplay);
  objc_msgSend(v18, sel_bounds);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, v19, v20);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v18;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1BB37505C;
  *(_QWORD *)(v23 + 24) = v22;
  v30[4] = sub_1BA56DB30;
  v30[5] = v23;
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 1107296256;
  v30[2] = sub_1BA56DAFC;
  v30[3] = &block_descriptor_67;
  v24 = _Block_copy(v30);
  v25 = v18;
  swift_retain();
  swift_release();
  v26 = objc_msgSend(v21, sel_imageWithActions_, v24);
  _Block_release(v24);
  LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v24 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = a9;
    v28[3] = a10;
    v28[4] = v26;
    swift_retain();
    v29 = v26;
    sub_1BB86ED4C();
    swift_release();

    return swift_release();
  }
  return result;
}

id TagImageShareAttributeProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id TagImageShareAttributeProvider.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id TagImageShareAttributeProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BB3737BC(void *a1, void *a2, void *a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  CGContext *v14;
  CGColor *v15;
  CGContext *v16;
  CGRect v18;

  v14 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  v15 = (CGColor *)objc_msgSend(a2, sel_CGColor);
  CGContextSetFillColorWithColor(v14, v15);

  v16 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  v18.origin.x = a4;
  v18.origin.y = a5;
  v18.size.width = a6;
  v18.size.height = a7;
  CGContextFillRect(v16, v18);

  return objc_msgSend(a3, sel_drawInRect_, a4, a5, a6, a7);
}

uint64_t _s8NewsFeed30TagImageShareAttributeProviderC05shareD03forSo7UIImageCSo14FCTagProviding_p_tF_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t ObjectType;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - v6;
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v37 - v13;
  ObjectType = swift_getObjectType();
  if (!objc_msgSend(a1, sel_isMySports))
  {
    v38 = ObjectType;
    v27 = objc_msgSend(a1, sel_feedNavImageAssetHandle);
    if (v27
      && (v28 = v27, v29 = objc_msgSend(v27, sel_filePath), v28, v29))
    {
      sub_1BB8729A0();

      sub_1BB86C634();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
        sub_1BB86C610();
        v30 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
        v31 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v25 = objc_msgSend(v30, sel_initWithContentsOfFile_, v31);

        if (!v25)
          v25 = (id)sub_1BB371F38(v38);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        return (uint64_t)v25;
      }
    }
    else
    {
      v32 = objc_msgSend(a1, sel_coverImageAssetHandle);
      if (!v32)
        return sub_1BB371F38(v38);
      v33 = v32;
      v34 = objc_msgSend(v32, sel_filePath);

      if (!v34)
        return sub_1BB371F38(v38);
      sub_1BB8729A0();

      sub_1BB86C634();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v4, v8);
        sub_1BB86C610();
        v35 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
        v36 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v25 = objc_msgSend(v35, sel_initWithContentsOfFile_, v36);

        if (!v25)
          v25 = (id)sub_1BB371F38(v38);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        return (uint64_t)v25;
      }
      v7 = v4;
    }
    sub_1BA7F0A80((uint64_t)v7);
    return sub_1BB371F38(v38);
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, sel_configurationWithHierarchicalColor_, v16);

  v19 = v18;
  v20 = (void *)sub_1BB872970();
  v21 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v20, v19);

  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  v22 = (void *)sub_1BB87366C();
  v23 = objc_msgSend(v17, sel_configurationWithFont_scale_, v22, 3);

  v24 = v21;
  v25 = objc_msgSend(v24, sel_imageByApplyingSymbolConfiguration_, v23);

  if (!v25)
    return sub_1BB371F38(ObjectType);
  return (uint64_t)v25;
}

uint64_t _s8NewsFeed30TagImageShareAttributeProviderC08mySportseD03forSo7UIImageCSo14FCTagProviding_p_tF_0()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t ObjectType;

  v0 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_configurationWithHierarchicalColor_, v0);

  v3 = v2;
  v4 = (void *)sub_1BB872970();
  v5 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v4, v3);

  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  v6 = (void *)sub_1BB87366C();
  v7 = objc_msgSend(v1, sel_configurationWithFont_scale_, v6, 3);

  v8 = v5;
  v9 = objc_msgSend(v8, sel_imageByApplyingSymbolConfiguration_, v7);

  if (v9)
    return (uint64_t)v9;
  ObjectType = swift_getObjectType();
  return sub_1BB371F38(ObjectType);
}

uint64_t sub_1BB373F00()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB373F2C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BB373F50(void *a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t ObjectType;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  _QWORD aBlock[6];

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v48 - v8;
  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v48 - v15;
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = a2;
  ObjectType = swift_getObjectType();
  _Block_copy(a2);
  v49 = ObjectType;
  v51 = FCSportsProviding.navigationBarBackgroundColor.getter();
  v18 = objc_msgSend(a1, sel_sportsTheme);
  if (v18)
  {
    v19 = objc_msgSend(v18, sel_sportsLogoImageAssetHandle);
    swift_unknownObjectRelease();
    if (v19)
    {
      v20 = objc_msgSend(v19, sel_filePath);

      if (v20)
        goto LABEL_7;
    }
  }
  v21 = objc_msgSend(a1, sel_sportsTheme);
  if (v21)
  {
    v22 = objc_msgSend(v21, sel_sportsLogoImageCompactAssetHandle);
    swift_unknownObjectRelease();
    if (v22)
    {
      v20 = objc_msgSend(v22, sel_filePath);

      if (v20)
      {
LABEL_7:
        sub_1BB8729A0();

        sub_1BB86C634();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        {
          sub_1BA7F0A80((uint64_t)v9);
LABEL_18:
          v24 = v50;
          goto LABEL_19;
        }
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
        sub_1BB86C610();
        v27 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
        v28 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v29 = objc_msgSend(v27, sel_initWithContentsOfFile_, v28);

        if (!v29)
        {
          (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
          goto LABEL_18;
        }
        v30 = (id)sub_1BB372754(v51);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
LABEL_16:
        v33 = v30;
        ((void (**)(_QWORD, id))a2)[2](a2, v33);
        swift_release();

        return;
      }
    }
  }
  v23 = objc_msgSend(a1, sel_feedNavImageAssetHandle);
  v24 = v50;
  if (v23)
  {
    v25 = v23;
    v26 = objc_msgSend(v23, sel_filePath);

    if (v26)
    {
      sub_1BB8729A0();

      sub_1BB86C634();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
      {
        sub_1BA7F0A80((uint64_t)v6);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v6, v10);
        sub_1BB86C610();
        v31 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
        v32 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v30 = objc_msgSend(v31, sel_initWithContentsOfFile_, v32);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        if (v30)
          goto LABEL_16;
      }
    }
  }
LABEL_19:
  v34 = objc_msgSend(a1, sel_sportsTheme);
  if (v34
    && (v35 = objc_msgSend(v34, sel_sportsLogoImageAssetHandle),
        swift_unknownObjectRelease(),
        v35))
  {
    sub_1BA65E330();
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BB8856E0;
    *(_QWORD *)(v36 + 32) = v35;
    aBlock[0] = v36;
    sub_1BB872DCC();
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = v35;
    v37[3] = sub_1BB374B48;
    v37[4] = v24;
    v37[5] = a1;
    v38 = v51;
    v37[6] = v51;
    v39 = objc_allocWithZone(MEMORY[0x1E0D58990]);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97A0);
    v40 = v35;
    swift_retain();
    swift_unknownObjectRetain();
    v41 = v38;
    swift_bridgeObjectRetain();
    v42 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    v43 = objc_msgSend(v39, sel_initWithAssetHandles_, v42);

    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 16) = sub_1BB373EFC;
    *(_QWORD *)(v44 + 24) = v37;
    aBlock[4] = sub_1BAA0239C;
    aBlock[5] = v44;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA573874;
    aBlock[3] = &block_descriptor_46_0;
    v45 = _Block_copy(aBlock);
    v46 = v43;
    swift_retain();
    swift_release();
    objc_msgSend(v46, sel_setFetchCompletionBlock_, v45);
    _Block_release(v45);

    sub_1BB86E050();
    sub_1BB86E020();
    if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      sub_1BB86E038();
    else
      objc_msgSend(v46, sel_start);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
  }
  else
  {
    v47 = (void *)sub_1BB371F38(v49);
    ((void (**)(_QWORD, void *))a2)[2](a2, v47);
    swift_release();

  }
}

void sub_1BB374630(void *a1, double a2, double a3, double a4, uint64_t a5, void (**a6)(_QWORD, _QWORD))
{
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  _QWORD aBlock[6];

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a6;
  _Block_copy(a6);
  v12 = objc_msgSend(a1, sel_eventCompetitorTags);
  if (!v12)
    goto LABEL_20;
  v13 = v12;
  sub_1BA8EB1C8();
  v14 = sub_1BB872DB4();

  if (!(v14 >> 62))
  {
    if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
      goto LABEL_4;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v33 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (v33 < 2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
    a6[2](a6, 0);
    swift_release();
    return;
  }
LABEL_4:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v17 = (void *)MEMORY[0x1BCCE4630](0, v14);
    v16 = (void *)MEMORY[0x1BCCE4630](1, v14);
    goto LABEL_8;
  }
  v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v15)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v15 == 1)
  {
LABEL_23:
    __break(1u);
    return;
  }
  v17 = *(void **)(v14 + 32);
  v16 = *(void **)(v14 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
LABEL_8:
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v17, sel_sportsTheme);
  if (!v18)
    goto LABEL_15;
  v19 = objc_msgSend(v18, sel_sportsLogoImageCompactAssetHandle);
  swift_unknownObjectRelease();
  if (!v19)
    goto LABEL_15;
  v20 = objc_msgSend(v16, sel_sportsTheme);
  if (!v20
    || (v21 = objc_msgSend(v20, sel_sportsLogoImageCompactAssetHandle),
        swift_unknownObjectRelease(),
        !v21))
  {

LABEL_15:
    a6[2](a6, 0);
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return;
  }
  sub_1BA65E330();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BB8856F0;
  *(_QWORD *)(v22 + 32) = v19;
  *(_QWORD *)(v22 + 40) = v21;
  sub_1BB872DCC();
  v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = v19;
  *(_QWORD *)(v24 + 32) = v21;
  *(_QWORD *)(v24 + 40) = sub_1BB374B48;
  *(_QWORD *)(v24 + 48) = v11;
  *(double *)(v24 + 56) = a2;
  *(double *)(v24 + 64) = a3;
  *(_QWORD *)(v24 + 72) = v17;
  *(_QWORD *)(v24 + 80) = v16;
  *(double *)(v24 + 88) = a4;
  v25 = objc_allocWithZone(MEMORY[0x1E0D58990]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97A0);
  v26 = v19;
  v27 = v21;
  v34 = v26;
  v35 = v27;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v28 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v25, sel_initWithAssetHandles_, v28);

  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_1BB373F28;
  *(_QWORD *)(v30 + 24) = v24;
  aBlock[4] = sub_1BAA0239C;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA573874;
  aBlock[3] = &block_descriptor_32;
  v31 = _Block_copy(aBlock);
  v32 = v29;
  swift_retain();
  swift_release();
  objc_msgSend(v32, sel_setFetchCompletionBlock_, v31);
  _Block_release(v31);

  sub_1BB86E050();
  sub_1BB86E020();
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    sub_1BB86E038();
  else
    objc_msgSend(v32, sel_start, v34, v35);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();
}

uint64_t sub_1BB374B24()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BB374B48()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t objectdestroy_8Tm_7()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB374BA8()
{
  uint64_t v0;

  return sub_1BB373004(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 88));
}

uint64_t sub_1BB374BC8()
{
  uint64_t v0;

  return sub_1BB372978(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1BB374BD8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t sub_1BB374BFC()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB374C48()
{
  uint64_t v0;

  return sub_1BB37343C(*(double *)(v0 + 16), *(double *)(v0 + 24), *(CGFloat *)(v0 + 56), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

id sub_1BB374C64(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  void (*v28)(_QWORD *, uint64_t, uint64_t);
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  void *v35;

  v12 = sub_1BB86F874();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)((char *)&v34 - v17);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2240, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7578], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v34 - v20;
  v22 = objc_msgSend(objc_allocWithZone((Class)sub_1BB871788()), sel_initWithFrame_, a3, a4, a5, a6);
  sub_1BA65E330();
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BB8856F0;
  *(_QWORD *)(v23 + 32) = a1;
  *(_QWORD *)(v23 + 40) = a2;
  v35 = (void *)v23;
  sub_1BB872DCC();
  v24 = v35;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v25 = _s8NewsFeed37FormatSportsEventMatchupColorProviderC14competitorTagsACSaySo17FCSportsProviding_pG_tcfC_0(v24);
  v26 = (void *)v25[2];
  *v18 = v26;
  v27 = *MEMORY[0x1E0DB7278];
  v28 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v13 + 104);
  v28(v18, v27, v12);
  v29 = (void *)v25[3];
  *v15 = v29;
  v28(v15, v27, v12);
  v30 = v26;
  v31 = v29;
  sub_1BB86FA18();
  v32 = sub_1BB86FA24();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v21, 0, 1, v32);
  sub_1BB87177C();
  swift_release();
  return v22;
}

id sub_1BB374E88(uint64_t a1, uint64_t a2, uint64_t a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  id v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  id v20;
  id v21;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, a4, a5, a6, a7);
  v23.origin.x = a4;
  v23.origin.y = a5;
  v23.size.width = a6;
  v23.size.height = a7;
  v17 = (CGRectGetHeight(v23) - a8) * 0.5;
  v24.origin.x = a4;
  v24.origin.y = a5;
  v24.size.width = a6;
  v24.size.height = a7;
  v18 = (CGRectGetWidth(v24) - (a8 + a8)) * 0.25;
  v25.origin.x = v18;
  v25.origin.y = v17;
  v25.size.width = a8;
  v25.size.height = a8;
  v19 = CGRectGetMaxX(v25) + v18 + v18;
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, v18, v17, a8, a8);
  objc_msgSend(v20, sel_setImage_, a2);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_, v19, v17, a8, a8);
  objc_msgSend(v21, sel_setImage_, a3);
  objc_msgSend(v16, sel_addSubview_, a1);
  objc_msgSend(v16, sel_addSubview_, v20);
  objc_msgSend(v16, sel_addSubview_, v21);
  objc_msgSend(v16, sel_setAccessibilityIgnoresInvertColors_, 1);

  return v16;
}

uint64_t sub_1BB375038()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BB37505C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_bounds);
  return objc_msgSend(v1, sel_drawViewHierarchyInRect_afterScreenUpdates_, 1);
}

uint64_t sub_1BB375098()
{
  return swift_deallocObject();
}

uint64_t sub_1BB3750A8()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BB3750D4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BB375100(void *a1)
{
  uint64_t v1;

  return sub_1BB3737BC(a1, *(void **)(v1 + 16), *(void **)(v1 + 56), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48));
}

uint64_t sub_1BB375114()
{
  return swift_deallocObject();
}

uint64_t sub_1BB375124()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1BB375150()
{
  uint64_t v0;

  sub_1BB372ABC(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1BB37515C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BB375190()
{
  uint64_t v0;
  void (*v1)(void);
  id v2;

  v1 = *(void (**)(void))(v0 + 16);
  v2 = (id)sub_1BB372754(*(void **)(v0 + 40));
  v1();

}

uint64_t *initializeBufferWithCopyOfBuffer for FormatPictureInPictureModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C67C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for FormatPictureInPictureModel(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1BB86C67C();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for FormatPictureInPictureModel(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for FormatPictureInPictureModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for FormatPictureInPictureModel(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for FormatPictureInPictureModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPictureInPictureModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB375680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1BB86C67C();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FormatPictureInPictureModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3756D8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1BB375728(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1BB375760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1BB3757A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v19;
  _BYTE v20[4];
  int v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a4;
  v22 = a3;
  v23 = a5;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2500, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v20[-v10];
  v12 = type metadata accessor for FormatOption();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)&v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  FormatOptionCollection.subscript.getter(a1, a2, (uint64_t)v11);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    sub_1BA5193C4((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    sub_1BB6B7DF4(v15, v22);
    if (v6)
      return sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v17 = v23;
    sub_1BA5193C4((uint64_t)v15, v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v16 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v17, v16, 1, v12);
  }
  sub_1BA5C699C((uint64_t)v11, (unint64_t *)&qword_1ED3D2500, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
  if ((v21 & 1) == 0 || (*(_BYTE *)(v5 + 48) & 1) != 0)
  {
    v16 = 1;
    v17 = v23;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v17, v16, 1, v12);
  }
  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  swift_allocError();
  *v19 = a1;
  v19[1] = a2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t FormatNodeBinderContext.inventory.getter()
{
  return swift_retain();
}

uint64_t sub_1BB3759B4(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 *a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v16 = v15;
  v59 = a7;
  v60 = a8;
  v22 = a12;
  v51 = a11;
  v57 = a6;
  v58 = a10;
  v56 = a9;
  v61 = a14;
  v62 = a15;
  v23 = type metadata accessor for GroupLayoutContext();
  v48 = *(_QWORD *)(v23 - 8);
  v24 = *(_QWORD *)(v48 + 64);
  MEMORY[0x1E0C80A78](v23);
  v49 = (uint64_t)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v48 - v26;
  v28 = *a3;
  v29 = a3[1];
  v30 = *((_QWORD *)a3 + 7);
  v31 = *a13;
  v54 = a13[1];
  v55 = v31;
  v53 = *((_QWORD *)a13 + 4);
  v52 = *((_QWORD *)a13 + 5);
  v32 = *((_BYTE *)a13 + 48);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a1;
  *(_BYTE *)(v16 + 48) = v28;
  *(_BYTE *)(v16 + 49) = v29;
  *(_OWORD *)(v16 + 56) = *(_OWORD *)(a3 + 8);
  *(_OWORD *)(v16 + 72) = *(_OWORD *)(a3 + 24);
  v33 = *(_OWORD *)(a3 + 40);
  v34 = v51;
  *(_OWORD *)(v16 + 88) = v33;
  *(_QWORD *)(v16 + 104) = v30;
  v50 = a4;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options) = a4;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_selectors) = a5;
  v35 = v57;
  sub_1BA70A964(v57, v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_layoutContext);
  v36 = v60;
  *(_QWORD *)(v16 + 32) = v59;
  *(_QWORD *)(v16 + 40) = v36;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_blocks) = v56;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_debugData) = v58;
  sub_1BA4C010C(a12, v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger);
  v37 = v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary;
  v38 = v54;
  *(_OWORD *)v37 = v55;
  *(_OWORD *)(v37 + 16) = v38;
  v39 = v52;
  *(_QWORD *)(v37 + 32) = v53;
  *(_QWORD *)(v37 + 40) = v39;
  *(_BYTE *)(v37 + 48) = v32;
  v40 = (_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack);
  v41 = v62;
  *v40 = v61;
  v40[1] = v41;
  sub_1BA70A964(v35, (uint64_t)v27);
  if (!v34)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBE40, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3258]);
    v62 = v42;
    v43 = v49;
    sub_1BA70A964((uint64_t)v27, v49);
    v44 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    v45 = (v24 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
    v46 = swift_allocObject();
    sub_1BA5193C4(v43, v46 + v44, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(_QWORD *)(v46 + v45) = v50;
    *(_QWORD *)(v46 + ((v45 + 15) & 0xFFFFFFFFFFFFFFF8)) = a5;
    swift_retain();
    swift_bridgeObjectRetain();
    v22 = a12;
    v34 = sub_1BB86DD98();
  }
  __swift_destroy_boxed_opaque_existential_1(v22);
  sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  *(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_lazyContextLayoutOptions) = v34;
  return v16;
}

uint64_t sub_1BB375CA0()
{
  return type metadata accessor for FormatNodeBinderContext();
}

uint64_t method lookup function for FormatNodeBinderContext()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB375CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _BYTE v53[40];
  char v54[8];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v2 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
  v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
  if (v6 == 255 || (v6 & 1) != 0)
  {
    v17 = type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    v8 = *v5;
    v7 = v5[1];
    v10 = v5[2];
    v9 = v5[3];
    v35 = v1;
    v11 = v5[4];
    v12 = v5[5];
    v62 = *(_QWORD *)(v0 + 24);
    v42 = *(_QWORD *)(v0 + 16);
    v13 = *(_BYTE *)(v0 + 48);
    v14 = *(_BYTE *)(v0 + 49);
    v15 = *(_QWORD *)(v0 + 56);
    v33 = *(_QWORD *)(v0 + 64);
    v40 = *(_QWORD *)(v0 + 72);
    v39 = *(void **)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v37 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 104);
    v54[0] = v13;
    v54[1] = v14;
    v55 = v15;
    v56 = v33;
    v57 = v40;
    v58 = v39;
    v59 = v38;
    v60 = v37;
    v61 = v36;
    v45 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options);
    v44 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_selectors);
    v34 = v4;
    sub_1BA70A964(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_layoutContext, (uint64_t)v4);
    v43 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_blocks);
    v46 = *(_QWORD *)(v0 + 32);
    v41 = *(_QWORD *)(v0 + 40);
    v31 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_debugData);
    v32 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_lazyContextLayoutOptions);
    sub_1BA4C010C(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_logger, (uint64_t)v53);
    *(_QWORD *)&v47 = v8;
    *((_QWORD *)&v47 + 1) = v7;
    v48 = v10;
    v49 = v9;
    v50 = v11;
    v51 = v12;
    v52 = 1;
    v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8);
    v29 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack);
    v30 = v16;
    v17 = swift_allocObject();
    sub_1BA7066DC(v8, v7, v10, v9, v11, v12, v6);
    swift_bridgeObjectRetain();
    swift_retain();
    v18 = v42;
    swift_retain();
    sub_1BA70A884(v40, v39);
    v19 = v31;
    swift_retain();
    v20 = v32;
    swift_retain();
    v21 = v29;
    swift_bridgeObjectRetain();
    v22 = v30;
    swift_bridgeObjectRetain();
    v23 = v45;
    swift_retain();
    v24 = v44;
    swift_bridgeObjectRetain();
    v25 = v41;
    swift_bridgeObjectRetain();
    v26 = swift_bridgeObjectRetain();
    sub_1BB3759B4(v62, v18, v54, v23, v24, (uint64_t)v34, v46, v25, v26, v19, v20, (uint64_t)v53, &v47, v21, v22);
  }
  return v17;
}

uint64_t destroy for DebugFormatDebuggerSourceMetric()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DebugFormatDebuggerSourceMetric(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DebugFormatDebuggerSourceMetric(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for DebugFormatDebuggerSourceMetric(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatDebuggerSourceMetric()
{
  return &type metadata for DebugFormatDebuggerSourceMetric;
}

uint64_t sub_1BB376208()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;

  v1 = v0;
  if (!*(_QWORD *)(*v0 + 16))
  {
    v28 = 0;
    v16 = v0[1];
    v30 = v16;
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      v26 = sub_1BB873F30();
      sub_1BA4F6CCC((uint64_t)&v30);
      if (!v26)
      {
LABEL_12:
        sub_1BB872AFC(v17);
        swift_bridgeObjectRelease();
        sub_1BB872AFC(v21);
        v22 = v1[3];
        v29 = v22;
        if (v22 >> 62)
        {
          swift_bridgeObjectRetain();
          v27 = sub_1BB873F30();
          sub_1BA4F6CCC((uint64_t)&v29);
          if (!v27)
            goto LABEL_16;
        }
        else
        {
          v13 = (_QWORD *)(v22 & 0xFFFFFFFFFFFFF8);
          if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_16;
        }
        sub_1BA7AA598();
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
        v15 = v1[4];
        v23 = MEMORY[0x1E0DEB100];
        *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEB070];
        *(_QWORD *)(v14 + 64) = v23;
        goto LABEL_15;
      }
    }
    else
    {
      v17 = (_QWORD *)(v16 & 0xFFFFFFFFFFFFF8);
      if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_12;
    }
    sub_1BA7AA598();
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BB87CE70;
    v19 = v1[2];
    v20 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v18 + 64) = v20;
    *(_QWORD *)(v18 + 32) = v19;
    sub_1BB8729D0();
    goto LABEL_12;
  }
  v28 = 91;
  v30 = *(_QWORD *)(*v0 + 16);
  sub_1BB87420C();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  v4 = v0[1];
  v30 = v4;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BB873F30();
    sub_1BA4F6CCC((uint64_t)&v30);
  }
  else
  {
    v5 = (_QWORD *)(v4 & 0xFFFFFFFFFFFFF8);
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x1E0DEB070];
  v8 = MEMORY[0x1E0DEB100];
  if (v6)
  {
    sub_1BA7AA598();
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
    v10 = v1[2];
    *(_QWORD *)(v9 + 56) = v7;
    *(_QWORD *)(v9 + 64) = v8;
    *(_QWORD *)(v9 + 32) = v10;
    sub_1BB8729D0();
  }
  sub_1BB872AFC(v5);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v11);
  v12 = v1[3];
  v29 = v12;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_1BB873F30();
    sub_1BA4F6CCC((uint64_t)&v29);
    if (!v25)
      goto LABEL_16;
    goto LABEL_8;
  }
  v13 = (_QWORD *)(v12 & 0xFFFFFFFFFFFFF8);
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_8:
    sub_1BA7AA598();
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
    v15 = v1[4];
    *(_QWORD *)(v14 + 56) = v7;
    *(_QWORD *)(v14 + 64) = v8;
LABEL_15:
    *(_QWORD *)(v14 + 32) = v15;
    sub_1BB8729D0();
  }
LABEL_16:
  sub_1BB872AFC(v13);
  swift_bridgeObjectRelease();
  return v28;
}

id sub_1BB3765CC(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char **v6;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!(a2 >> 62))
    {
LABEL_3:
      v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v3)
        goto LABEL_4;
LABEL_9:
      v5 = (void *)objc_opt_self();
      v6 = &selRef_systemGray2Color;
      return objc_msgSend(v5, *v6);
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!(a2 >> 62))
      goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v4 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_9;
LABEL_4:
  v5 = (void *)objc_opt_self();
  v6 = &selRef_systemBlueColor;
  if (!v4)
    v6 = &selRef_systemOrangeColor;
  return objc_msgSend(v5, *v6);
}

uint64_t sub_1BB3766BC@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  double v44;
  double v45;
  BOOL v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v59 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_74;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    v60 = a1;
    if (!v5)
      goto LABEL_16;
    v61 = MEMORY[0x1E0DEE9D8];
    result = sub_1BA7447E8(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
      break;
    v6 = v61;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v8 = 0;
      do
      {
        MEMORY[0x1BCCE4630](v8, a2);
        v9 = sub_1BAF2003C();
        v11 = v10;
        swift_unknownObjectRelease();
        v13 = *(_QWORD *)(v61 + 16);
        v12 = *(_QWORD *)(v61 + 24);
        if (v13 >= v12 >> 1)
          sub_1BA7447E8(v12 > 1, v13 + 1, 1);
        ++v8;
        *(_QWORD *)(v61 + 16) = v13 + 1;
        v14 = v61 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v9;
        *(_QWORD *)(v14 + 40) = v11;
      }
      while (v5 != v8);
    }
    else
    {
      v15 = a2 + 32;
      do
      {
        swift_retain();
        v16 = sub_1BAF2003C();
        v18 = v17;
        swift_release();
        v20 = *(_QWORD *)(v61 + 16);
        v19 = *(_QWORD *)(v61 + 24);
        if (v20 >= v19 >> 1)
          sub_1BA7447E8(v19 > 1, v20 + 1, 1);
        *(_QWORD *)(v61 + 16) = v20 + 1;
        v21 = v61 + 16 * v20;
        *(_QWORD *)(v21 + 32) = v16;
        *(_QWORD *)(v21 + 40) = v18;
        v15 += 8;
        --v5;
      }
      while (v5);
    }
    a1 = v60;
LABEL_16:
    v22 = a1 >> 62;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v24 = MEMORY[0x1E0DEE9D8];
    if (v23)
    {
      v62 = MEMORY[0x1E0DEE9D8];
      result = sub_1BA7447E8(0, v23 & ~(v23 >> 63), 0);
      if (v23 < 0)
        goto LABEL_77;
      v57 = a1 >> 62;
      v24 = v62;
      if ((a1 & 0xC000000000000001) != 0)
      {
        v25 = 0;
        do
        {
          MEMORY[0x1BCCE4630](v25, v60);
          v26 = sub_1BAF2003C();
          v28 = v27;
          swift_unknownObjectRelease();
          v30 = *(_QWORD *)(v62 + 16);
          v29 = *(_QWORD *)(v62 + 24);
          if (v30 >= v29 >> 1)
            sub_1BA7447E8(v29 > 1, v30 + 1, 1);
          ++v25;
          *(_QWORD *)(v62 + 16) = v30 + 1;
          v31 = v62 + 16 * v30;
          *(_QWORD *)(v31 + 32) = v26;
          *(_QWORD *)(v31 + 40) = v28;
        }
        while (v23 != v25);
      }
      else
      {
        v32 = a1 + 32;
        do
        {
          swift_retain();
          v33 = sub_1BAF2003C();
          v35 = v34;
          swift_release();
          v37 = *(_QWORD *)(v62 + 16);
          v36 = *(_QWORD *)(v62 + 24);
          if (v37 >= v36 >> 1)
            sub_1BA7447E8(v36 > 1, v37 + 1, 1);
          *(_QWORD *)(v62 + 16) = v37 + 1;
          v38 = v62 + 16 * v37;
          *(_QWORD *)(v38 + 32) = v33;
          *(_QWORD *)(v38 + 40) = v35;
          v32 += 8;
          --v23;
        }
        while (v23);
      }
      a1 = v60;
      v22 = v57;
    }
    sub_1BA6E9BD8(v24);
    v39 = sub_1BA6E43EC(v6);
    swift_bridgeObjectRelease();
    if (!v59)
    {
      v40 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v40)
        goto LABEL_43;
      goto LABEL_33;
    }
    while (1)
    {
      swift_bridgeObjectRetain();
      v40 = sub_1BB873F30();
      if (!v40)
      {
LABEL_43:
        swift_bridgeObjectRelease();
        v42 = 0.0;
        if (!v22)
          goto LABEL_63;
LABEL_44:
        swift_bridgeObjectRetain();
        result = sub_1BB873F30();
        v40 = result;
        if (!result)
          goto LABEL_64;
        goto LABEL_45;
      }
LABEL_33:
      if ((a2 & 0xC000000000000001) == 0)
        break;
      v41 = MEMORY[0x1BCCE4630](0, a2);
      v42 = 0.0;
      v43 = 1;
      do
      {
        if ((*(_BYTE *)(v41 + 96) & 1) != 0)
        {
          swift_unknownObjectRelease();
          v42 = v42 + -1.0;
          if (v40 == v43)
            goto LABEL_62;
        }
        else
        {
          v44 = *(double *)(v41 + 88);
          v45 = *(double *)(v41 + 48);
          swift_unknownObjectRelease();
          v42 = v42 + (v44 - v45) * 1000.0;
          if (v40 == v43)
            goto LABEL_62;
        }
        v41 = MEMORY[0x1BCCE4630](v43, a2);
        v46 = __OFADD__(v43++, 1);
      }
      while (!v46);
      __break(1u);
    }
    while (1)
    {
      v52 = 0;
      v42 = 0.0;
      while (1)
      {
        v53 = *(_QWORD *)(a2 + 8 * v52 + 32);
        v42 = (*(_BYTE *)(v53 + 96) & 1) != 0
            ? v42 + -1.0
            : v42 + (*(double *)(v53 + 88) - *(double *)(v53 + 48)) * 1000.0;
        if (v40 - 1 == v52)
          break;
        if (__OFADD__(++v52, 1))
        {
          __break(1u);
          break;
        }
      }
LABEL_62:
      swift_bridgeObjectRelease();
      if (v22)
        goto LABEL_44;
LABEL_63:
      v40 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (!v40)
      {
LABEL_64:
        v48 = 0.0;
LABEL_65:
        *(_QWORD *)a3 = v39;
        *(_QWORD *)(a3 + 8) = a1;
        *(double *)(a3 + 16) = v48;
        *(_QWORD *)(a3 + 24) = a2;
        *(double *)(a3 + 32) = v42;
        return result;
      }
LABEL_45:
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v47 = MEMORY[0x1BCCE4630](0, a1);
      v48 = 0.0;
      v49 = 1;
      do
      {
        if ((*(_BYTE *)(v47 + 96) & 1) != 0)
        {
          result = swift_unknownObjectRelease();
          v48 = v48 + -1.0;
          if (v40 == v49)
            goto LABEL_65;
        }
        else
        {
          v50 = *(double *)(v47 + 88);
          v51 = *(double *)(v47 + 48);
          result = swift_unknownObjectRelease();
          v48 = v48 + (v50 - v51) * 1000.0;
          if (v40 == v49)
            goto LABEL_65;
        }
        v47 = MEMORY[0x1BCCE4630](v49, a1);
        v46 = __OFADD__(v49++, 1);
      }
      while (!v46);
      __break(1u);
    }
    v54 = 0;
    v55 = v40 - 1;
    v48 = 0.0;
    do
    {
      v56 = *(_QWORD *)(a1 + 32 + 8 * v54);
      if ((*(_BYTE *)(v56 + 96) & 1) != 0)
      {
        v48 = v48 + -1.0;
        if (v55 == v54)
          goto LABEL_65;
      }
      else
      {
        v48 = v48 + (*(double *)(v56 + 88) - *(double *)(v56 + 48)) * 1000.0;
        if (v55 == v54)
          goto LABEL_65;
      }
      ++v54;
    }
    while (!__OFADD__(v54, 1));
    __break(1u);
LABEL_74:
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

id sub_1BB376CA8(void *a1)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18[2];
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  _BYTE v23[16];
  _BYTE v24[8];

  v3 = v1[1];
  v11 = *v1;
  v12 = v3;
  v4 = v1[3];
  v13 = v1[2];
  v14 = v4;
  v15 = *((_WORD *)v1 + 32);
  v16 = *((_QWORD *)&v11 + 1);
  v17 = v12;
  sub_1BA742590(&v16, (uint64_t)v18);
  sub_1BA742590(v18, (uint64_t)&v19);
  if (HIBYTE(v20) << 8 == 3072)
  {
    sub_1BA7425CC();
    v5 = *((_QWORD *)&v12 + 1);
    sub_1BA742630((uint64_t)&v11);
    sub_1BA6E3968(v5);
    sub_1BA742608((uint64_t)&v11);
    v6 = (void *)sub_1BB87366C();
  }
  else
  {
    v21 = v19;
    v22 = v20;
    sub_1BA744E38((uint64_t)&v21, (uint64_t)v23, &qword_1ED3B0778);
    sub_1BA744E38((uint64_t)v23, (uint64_t)v24, &qword_1ED3B0778);
    v7 = sub_1BA74658C();
    sub_1BA7425CC();
    v8 = *((_QWORD *)&v12 + 1);
    sub_1BA742630((uint64_t)&v11);
    sub_1BA6E3968(v8);
    sub_1BA742608((uint64_t)&v11);
    v6 = (void *)sub_1BB873684();

  }
  v9 = sub_1BB377030(v6, a1, (uint64_t)&v11);

  return v9;
}

double FormatSystemFont.size.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void FormatSystemFont.weight.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 18);
}

uint64_t FormatSystemFont.traits.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatSystemFont.scaling.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;

  v2 = *(_WORD *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_WORD *)(a1 + 8) = v2;
}

__n128 FormatSystemFont.init(size:scaling:weight:traits:attributes:)@<Q0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v6;
  __int16 v7;
  char v8;
  __int16 v9;
  __n128 result;
  __int128 v11;

  v6 = *a1;
  v7 = *((_WORD *)a1 + 4);
  v8 = *a2;
  v9 = *(_WORD *)(a4 + 32);
  *(double *)a5 = a6;
  *(_QWORD *)(a5 + 8) = v6;
  *(_WORD *)(a5 + 16) = v7;
  *(_BYTE *)(a5 + 18) = v8;
  *(_QWORD *)(a5 + 24) = a3;
  result = *(__n128 *)a4;
  v11 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a5 + 32) = *(_OWORD *)a4;
  *(_OWORD *)(a5 + 48) = v11;
  *(_WORD *)(a5 + 64) = v9;
  return result;
}

void FormatSystemFont.size.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*FormatSystemFont.size.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSystemFont.scaling.setter(uint64_t result)
{
  uint64_t v1;
  __int16 v2;

  v2 = *(_WORD *)(result + 8);
  *(_QWORD *)(v1 + 8) = *(_QWORD *)result;
  *(_WORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*FormatSystemFont.scaling.modify())(_QWORD)
{
  return nullsub_1;
}

_BYTE *FormatSystemFont.weight.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 18) = *result;
  return result;
}

uint64_t (*FormatSystemFont.weight.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSystemFont.traits.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*FormatSystemFont.traits.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 FormatSystemFont.attributes.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_WORD *)(v1 + 64);
  result = *(__n128 *)(v1 + 32);
  v4 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = v2;
  return result;
}

__n128 FormatSystemFont.attributes.setter(uint64_t a1)
{
  uint64_t v1;
  __int16 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_WORD *)(a1 + 32);
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v4;
  *(_WORD *)(v1 + 64) = v2;
  return result;
}

uint64_t (*FormatSystemFont.attributes.modify())(_QWORD)
{
  return nullsub_1;
}

id sub_1BB377030(void *a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;
  double v8;
  id v9;
  uint64_t v11[5];
  _BYTE v12[40];

  sub_1BA744E38(a3 + 32, (uint64_t)v12, &qword_1ED3BE7E8);
  sub_1BA744E38((uint64_t)v12, (uint64_t)v11, &qword_1ED3BE7E8);
  if (*(_QWORD *)(sub_1BB5D8D74(a2, v11) + 16))
  {
    v5 = objc_msgSend(a1, sel_fontDescriptor);
    type metadata accessor for AttributeName(0);
    sub_1BA785CB4();
    v6 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v5, sel_fontDescriptorByAddingAttributes_, v6);

    objc_msgSend(a1, sel_pointSize);
    v9 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v7, v8);

  }
  else
  {
    v9 = a1;
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t _s8NewsFeed16FormatSystemFontV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __int16 v2;
  char v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int16 v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  double v32[2];
  char v33;
  uint64_t v34;
  __int16 v35;
  _OWORD v36[2];
  __int16 v37;

  if (*(double *)a1 != *(double *)a2)
    return 0;
  v2 = *(_WORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 18);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_OWORD *)(a1 + 32);
  v6 = *(_OWORD *)(a1 + 48);
  v7 = *(_WORD *)(a1 + 64);
  v8 = *(_WORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v12 = *(double *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a2 + 56);
  v14 = *(_WORD *)(a2 + 64);
  if ((v2 & 0xFF00) != 0xC00)
  {
    if ((v8 & 0xFF00) != 0xC00)
    {
      if ((v2 & 1) == 0)
      {
        v15 = 0;
        if ((v8 & 1) != 0 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
          return v15;
        goto LABEL_11;
      }
      if ((v8 & 1) != 0)
      {
LABEL_11:
        v28 = *(_OWORD *)(a1 + 48);
        v30 = *(_OWORD *)(a1 + 32);
        v26 = *(_QWORD *)(a2 + 32);
        v27 = *(_QWORD *)(a2 + 56);
        LOBYTE(v36[0]) = HIBYTE(*(_WORD *)(a1 + 16));
        LOBYTE(v32[0]) = HIBYTE(v8);
        v16 = FormatFontScalingStyle.rawValue.getter();
        v18 = v17;
        if (v16 == FormatFontScalingStyle.rawValue.getter() && v18 == v19)
        {
          swift_bridgeObjectRelease_n();
          v13 = v27;
          LOBYTE(v9) = v26;
          v6 = v28;
          v5 = v30;
        }
        else
        {
          v20 = sub_1BB874398();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 = 0;
          v13 = v27;
          LOBYTE(v9) = v26;
          v6 = v28;
          v5 = v30;
          if ((v20 & 1) == 0)
            return v15;
        }
        goto LABEL_15;
      }
    }
    return 0;
  }
  if ((v8 & 0xFF00) != 0xC00)
    return 0;
LABEL_15:
  v29 = v6;
  v31 = v5;
  v21 = v9;
  sub_1BB800E44(v3);
  if ((v22 & 1) == 0)
    return 0;
  v23 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_1BA85AF78(v4, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
    return 0;
  if ((v7 & 0xFF00) == 0x500)
  {
    if ((v14 & 0xFF00) != 0x500)
      return 0;
  }
  else
  {
    v36[0] = v31;
    v36[1] = v29;
    v37 = v7;
    if ((v14 & 0xFF00) == 0x500)
      return 0;
    LOBYTE(v32[0]) = v21;
    v32[1] = v12;
    v33 = v23 & 1;
    v34 = v13;
    v35 = v14 & 0xFF01;
    if ((_s8NewsFeed20FormatFontAttributesV2eeoiySbAC_ACtFZ_0((double *)v36, v32) & 1) == 0)
      return 0;
  }
  return 1;
}

unint64_t sub_1BB3773C8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3773EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3773EC()
{
  unint64_t result;

  result = qword_1EF2C1DD8;
  if (!qword_1EF2C1DD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSystemFont, &type metadata for FormatSystemFont);
    atomic_store(result, (unint64_t *)&qword_1EF2C1DD8);
  }
  return result;
}

unint64_t sub_1BB377430(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA606D08();
  a1[2] = sub_1BA5EAE94();
  result = sub_1BB377464();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB377464()
{
  unint64_t result;

  result = qword_1EF2C1DE0;
  if (!qword_1EF2C1DE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSystemFont, &type metadata for FormatSystemFont);
    atomic_store(result, (unint64_t *)&qword_1EF2C1DE0);
  }
  return result;
}

double sub_1BB3774A8@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

double sub_1BB3774B4(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

uint64_t sub_1BB3774C0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int16 v2;

  v2 = *(_WORD *)(result + 16);
  *(_QWORD *)a2 = *(_QWORD *)(result + 8);
  *(_WORD *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1BB3774D4(uint64_t result, uint64_t a2)
{
  __int16 v2;

  v2 = *(_WORD *)(result + 8);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)result;
  *(_WORD *)(a2 + 16) = v2;
  return result;
}

uint64_t sub_1BB3774E8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 18);
  return result;
}

_BYTE *sub_1BB3774F4(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 18) = *result;
  return result;
}

uint64_t sub_1BB377500@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB37750C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t initializeWithCopy for FormatSystemFont(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatSystemFont(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  return a1;
}

__n128 __swift_memcpy66_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FormatSystemFont(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSystemFont()
{
  return &type metadata for FormatSystemFont;
}

uint64_t static FeedPersonalizationServiceError.== infix(_:_:)()
{
  return 1;
}

uint64_t FeedPersonalizationServiceError.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FeedPersonalizationServiceError.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB37771C()
{
  unint64_t result;

  result = qword_1EF2C1DE8;
  if (!qword_1EF2C1DE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPersonalizationServiceError, &type metadata for FeedPersonalizationServiceError);
    atomic_store(result, (unint64_t *)&qword_1EF2C1DE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedPersonalizationServiceError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB3777A0 + 4 * asc_1BB90D250[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB3777C0 + 4 * byte_1BB90D255[v4]))();
}

_BYTE *sub_1BB3777A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB3777C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB3777C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB3777D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB3777D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB3777E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedPersonalizationServiceError()
{
  return &type metadata for FeedPersonalizationServiceError;
}

uint64_t PuzzleEmbedMessageHandlerKind.eventName.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BB377834
                                                                     + 4 * asc_1BB90D340[*v0]))(0xD000000000000012, 0x80000001BB966C50);
}

unint64_t sub_1BB377834()
{
  return 0xD000000000000017;
}

void sub_1BB3778C8()
{
  JUMPOUT(0x1BB3778D4);
}

BOOL static PuzzleEmbedMessageHandlerKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PuzzleEmbedMessageHandlerKind.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t PuzzleEmbedMessageHandlerKind.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

void SWMessageHandlerManager.add(handler:for:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

void sub_1BB3779B0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  void *v17;
  void *v18;

  v18 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_addMessageHandler_name_, v16, v18);

}

unint64_t sub_1BB377AA0()
{
  unint64_t result;

  result = qword_1EF2C1DF0;
  if (!qword_1EF2C1DF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleEmbedMessageHandlerKind, &type metadata for PuzzleEmbedMessageHandlerKind);
    atomic_store(result, (unint64_t *)&qword_1EF2C1DF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PuzzleEmbedMessageHandlerKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BB377B30 + 4 * byte_1BB90D35B[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BB377B64 + 4 * byte_1BB90D356[v4]))();
}

uint64_t sub_1BB377B64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB377B6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB377B74);
  return result;
}

uint64_t sub_1BB377B80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB377B88);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BB377B8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB377B94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleEmbedMessageHandlerKind()
{
  return &type metadata for PuzzleEmbedMessageHandlerKind;
}

__n128 FormatProgressViewLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:kind:zIndex:visibility:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t *a15, uint64_t a16, uint64_t *a17)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __n128 result;
  __int128 v35;

  v27 = swift_allocObject();
  v28 = *a8;
  v29 = *(_QWORD *)(a13 + 32);
  v30 = *(_BYTE *)(a13 + 40);
  v31 = *a15;
  v32 = *a17;
  v33 = *((_BYTE *)a17 + 8);
  *(_QWORD *)(v27 + 16) = a1;
  *(_QWORD *)(v27 + 24) = a2;
  *(_QWORD *)(v27 + 32) = a3;
  *(_QWORD *)(v27 + 40) = a4;
  *(_QWORD *)(v27 + 48) = a5;
  *(_QWORD *)(v27 + 56) = a6;
  *(double *)(v27 + 64) = a9;
  *(double *)(v27 + 72) = a10;
  *(double *)(v27 + 80) = a11;
  *(double *)(v27 + 88) = a12;
  *(_QWORD *)(v27 + 96) = a7;
  *(_QWORD *)(v27 + 104) = v28;
  result = *(__n128 *)a13;
  v35 = *(_OWORD *)(a13 + 16);
  *(_OWORD *)(v27 + 112) = *(_OWORD *)a13;
  *(_OWORD *)(v27 + 128) = v35;
  *(_QWORD *)(v27 + 144) = v29;
  *(_BYTE *)(v27 + 152) = v30;
  *(_QWORD *)(v27 + 160) = a14;
  *(_QWORD *)(v27 + 168) = v31;
  *(_QWORD *)(v27 + 176) = a16;
  *(_QWORD *)(v27 + 184) = v32;
  *(_BYTE *)(v27 + 192) = v33;
  *(_QWORD *)(v27 + 200) = MEMORY[0x1E0DEE9E8];
  return result;
}

uint64_t FormatProgressViewLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatProgressViewLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t FormatProgressViewLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatProgressViewLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 104);
  return swift_retain();
}

__n128 FormatProgressViewLayoutAttributes.kind.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *(_QWORD *)(v1 + 144);
  v3 = *(_BYTE *)(v1 + 152);
  result = *(__n128 *)(v1 + 112);
  v5 = *(_OWORD *)(v1 + 128);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  return result;
}

uint64_t FormatProgressViewLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

unint64_t FormatProgressViewLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 168);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatProgressViewLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatProgressViewLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 192);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 184);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatProgressViewLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:kind:zIndex:visibility:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t *a15, uint64_t a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;

  v18 = *a8;
  v19 = *(_QWORD *)(a13 + 32);
  v20 = *(_BYTE *)(a13 + 40);
  v21 = *a15;
  v22 = *a17;
  v23 = *((_BYTE *)a17 + 8);
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  *(_QWORD *)(v17 + 32) = a3;
  *(_QWORD *)(v17 + 40) = a4;
  *(_QWORD *)(v17 + 48) = a5;
  *(_QWORD *)(v17 + 56) = a6;
  *(double *)(v17 + 64) = a9;
  *(double *)(v17 + 72) = a10;
  *(double *)(v17 + 80) = a11;
  *(double *)(v17 + 88) = a12;
  *(_QWORD *)(v17 + 96) = a7;
  *(_QWORD *)(v17 + 104) = v18;
  v24 = *(_OWORD *)(a13 + 16);
  *(_OWORD *)(v17 + 112) = *(_OWORD *)a13;
  *(_OWORD *)(v17 + 128) = v24;
  *(_QWORD *)(v17 + 144) = v19;
  *(_BYTE *)(v17 + 152) = v20;
  *(_QWORD *)(v17 + 160) = a14;
  *(_QWORD *)(v17 + 168) = v21;
  *(_QWORD *)(v17 + 176) = a16;
  *(_QWORD *)(v17 + 184) = v22;
  *(_BYTE *)(v17 + 192) = v23;
  *(_QWORD *)(v17 + 200) = MEMORY[0x1E0DEE9E8];
  return v17;
}

uint64_t sub_1BB377E20(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB377E58 + 4 * byte_1BB90D420[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BB377E58()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB377E74()
{
  return 0x6E65644965646F6ELL;
}

uint64_t sub_1BB377E98()
{
  return 0x656D617266;
}

uint64_t sub_1BB377EAC()
{
  return 0x656C797473;
}

uint64_t sub_1BB377EC0()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB377ED8()
{
  return 1684957547;
}

uint64_t sub_1BB377EE8()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB377EFC()
{
  return 0x696C696269736976;
}

unint64_t sub_1BB377F14()
{
  return 0xD000000000000014;
}

uint64_t sub_1BB377F64()
{
  unsigned __int8 *v0;

  return sub_1BB377E20(*v0);
}

uint64_t sub_1BB377F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB378F78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB377F90()
{
  sub_1BB37849C();
  return sub_1BB874710();
}

uint64_t sub_1BB377FB8()
{
  sub_1BB37849C();
  return sub_1BB87471C();
}

uint64_t FormatProgressViewLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 168));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatProgressViewLayoutAttributes.__deallocating_deinit()
{
  FormatProgressViewLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatProgressViewLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  char v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C1DF8, (uint64_t (*)(void))sub_1BB37849C, (uint64_t)&type metadata for FormatProgressViewLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB37849C();
  sub_1BB8746C8();
  LOBYTE(v16) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v16) = 1;
    sub_1BB87417C();
    LOBYTE(v16) = 2;
    sub_1BB87417C();
    v10 = *(_OWORD *)(v3 + 80);
    v16 = *(_OWORD *)(v3 + 64);
    v17 = v10;
    v20 = 3;
    type metadata accessor for CGRect(0);
    sub_1BA50AD30(&qword_1EF2A9A18, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
    sub_1BB8741AC();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 96);
    v20 = 4;
    type metadata accessor for FormatProgressViewNodeStyle();
    sub_1BA50AD30(&qword_1ED3A8028, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressViewNodeStyle, (uint64_t)&protocol conformance descriptor for FormatProgressViewNodeStyle);
    sub_1BB87414C();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 104);
    v20 = 5;
    sub_1BA994B40();
    sub_1BB87414C();
    v11 = *(_QWORD *)(v3 + 144);
    v12 = *(_BYTE *)(v3 + 152);
    v13 = *(_OWORD *)(v3 + 128);
    v16 = *(_OWORD *)(v3 + 112);
    v17 = v13;
    v18 = v11;
    v19 = v12;
    v20 = 6;
    sub_1BB3784E0();
    sub_1BB8741AC();
    LOBYTE(v16) = 7;
    sub_1BB8741A0();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 168);
    v20 = 8;
    sub_1BA84B088();
    sub_1BB8741AC();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 176);
    v20 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    v14 = *(_BYTE *)(v3 + 192);
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 184);
    BYTE8(v16) = v14;
    v20 = 10;
    sub_1BA5FB410();
    sub_1BB87414C();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + 200);
    v20 = 11;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA9952AC(&qword_1EF2AC0D8, (uint64_t (*)(void))sub_1BA994B84, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB37849C()
{
  unint64_t result;

  result = qword_1EF2C1E00;
  if (!qword_1EF2C1E00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90D6DC, &type metadata for FormatProgressViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1E00);
  }
  return result;
}

unint64_t sub_1BB3784E0()
{
  unint64_t result;

  result = qword_1EF2C1E08;
  if (!qword_1EF2C1E08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressKind.Resolved, &type metadata for FormatProgressKind.Resolved);
    atomic_store(result, (unint64_t *)&qword_1EF2C1E08);
  }
  return result;
}

uint64_t FormatProgressViewLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatProgressViewLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatProgressViewLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v13;
  char v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  char v26;

  sub_1BA4CDF6C(0, &qword_1EF2C1E10, (uint64_t (*)(void))sub_1BB37849C, (uint64_t)&type metadata for FormatProgressViewLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v20 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB37849C();
  v19 = v6;
  v7 = v21;
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
    v17 = (uint64_t)a1;
  }
  else
  {
    v21 = a1;
    LOBYTE(v22) = 0;
    *(_QWORD *)(v1 + 16) = sub_1BB874098();
    *(_QWORD *)(v1 + 24) = v8;
    LOBYTE(v22) = 1;
    *(_QWORD *)(v1 + 32) = sub_1BB874098();
    *(_QWORD *)(v1 + 40) = v9;
    LOBYTE(v22) = 2;
    *(_QWORD *)(v1 + 48) = sub_1BB874098();
    *(_QWORD *)(v1 + 56) = v10;
    type metadata accessor for CGRect(0);
    v26 = 3;
    sub_1BA50AD30((unint64_t *)&unk_1ED3B9910, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    v18 = 0;
    sub_1BB8740D4();
    v11 = v23;
    *(_OWORD *)(v1 + 64) = v22;
    *(_OWORD *)(v1 + 80) = v11;
    type metadata accessor for FormatProgressViewNodeStyle();
    v26 = 4;
    sub_1BA50AD30(qword_1ED3A8030, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressViewNodeStyle, (uint64_t)&protocol conformance descriptor for FormatProgressViewNodeStyle);
    sub_1BB874068();
    *(_QWORD *)(v1 + 96) = v22;
    v26 = 5;
    sub_1BA995268();
    sub_1BB874068();
    *(_QWORD *)(v1 + 104) = v22;
    v26 = 6;
    sub_1BB378B7C();
    sub_1BB8740D4();
    v13 = v24;
    v14 = v25;
    v15 = v23;
    *(_OWORD *)(v1 + 112) = v22;
    *(_OWORD *)(v1 + 128) = v15;
    *(_QWORD *)(v1 + 144) = v13;
    *(_BYTE *)(v1 + 152) = v14;
    LOBYTE(v22) = 7;
    *(_QWORD *)(v1 + 160) = sub_1BB8740C8();
    v26 = 8;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 168) = v22;
    type metadata accessor for FormatContextLayoutOptions();
    v26 = 9;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 176) = v22;
    v26 = 10;
    sub_1BA650BA0();
    sub_1BB874068();
    v16 = BYTE8(v22);
    *(_QWORD *)(v1 + 184) = v22;
    *(_BYTE *)(v1 + 192) = v16;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v26 = 11;
    sub_1BA9952AC(&qword_1EF2AC100, (uint64_t (*)(void))sub_1BA995330, MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v19, v20);
    v17 = (uint64_t)v21;
    *(_QWORD *)(v1 + 200) = v22;
  }
  __swift_destroy_boxed_opaque_existential_1(v17);
  return v1;
}

unint64_t sub_1BB378B7C()
{
  unint64_t result;

  result = qword_1EF2C1E18;
  if (!qword_1EF2C1E18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressKind.Resolved, &type metadata for FormatProgressKind.Resolved);
    atomic_store(result, (unint64_t *)&qword_1EF2C1E18);
  }
  return result;
}

uint64_t sub_1BB378BC0(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C1E20, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatProgressViewLayoutAttributes);
}

uint64_t type metadata accessor for FormatProgressViewLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t sub_1BB378C0C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB378C18(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C1E28, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatProgressViewLayoutAttributes);
}

uint64_t sub_1BB378C44(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C1E30, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatProgressViewLayoutAttributes);
}

uint64_t sub_1BB378C70(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C1E38, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatProgressViewLayoutAttributes);
}

uint64_t sub_1BB378C9C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatProgressViewLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB378CF0(_QWORD *a1)
{
  return FormatProgressViewLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BB378D10(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1EF2C1E58, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressViewLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatProgressViewLayoutAttributes);
  return sub_1BB86D96C();
}

uint64_t method lookup function for FormatProgressViewLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatProgressViewLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:kind:zIndex:visibility:contextLayoutOptions:accessibilityRole:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FormatProgressViewLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t storeEnumTagSinglePayload for FormatProgressViewLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BB378E20 + 4 * byte_1BB90D431[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BB378E54 + 4 * byte_1BB90D42C[v4]))();
}

uint64_t sub_1BB378E54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB378E5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB378E64);
  return result;
}

uint64_t sub_1BB378E70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB378E78);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BB378E7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB378E84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressViewLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatProgressViewLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB378EA4()
{
  unint64_t result;

  result = qword_1EF2C1E40;
  if (!qword_1EF2C1E40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90D6B4, &type metadata for FormatProgressViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1E40);
  }
  return result;
}

unint64_t sub_1BB378EEC()
{
  unint64_t result;

  result = qword_1EF2C1E48;
  if (!qword_1EF2C1E48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90D624, &type metadata for FormatProgressViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1E48);
  }
  return result;
}

unint64_t sub_1BB378F34()
{
  unint64_t result;

  result = qword_1EF2C1E50;
  if (!qword_1EF2C1E50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90D64C, &type metadata for FormatProgressViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C1E50);
  }
  return result;
}

uint64_t sub_1BB378F78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB961EB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB965970)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

void sub_1BB379430()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB379488@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for RepoolFeedRefreshStrategy(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a1);
  sub_1BA632A2C(v5, v6, v4);
  swift_retain();
  swift_retain();
  v7 = sub_1BB221D08(v3, v2);
  swift_release();
  return v7;
}

NewsFeed::FeedRefreshStrategy_optional __swiftcall FeedRefreshStrategy.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedRefreshStrategy_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedRefreshStrategy.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB3796F8 + 4 * byte_1BB90D734[*v0]))(0x6C6F6F706572, 0xE600000000000000);
}

uint64_t sub_1BB3796F8()
{
  return 0x446873696C627570;
}

uint64_t sub_1BB379718()
{
  return 0x6563726F66;
}

uint64_t sub_1BB37972C()
{
  return 0x6F6C6F6E6F726863;
}

void sub_1BB379750(char *a1)
{
  sub_1BB804830(*a1);
}

void sub_1BB37975C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB3797A4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB379824()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB37985C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB3798C8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB37990C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedRefreshStrategy_optional sub_1BB37998C(Swift::String *a1)
{
  return FeedRefreshStrategy.init(rawValue:)(*a1);
}

uint64_t sub_1BB379998()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB3799C4 + 4 * byte_1BB90D744[*v0]))();
}

void sub_1BB3799C4(_QWORD *a1@<X8>)
{
  *a1 = 0x446873696C627570;
  a1[1] = 0xEB00000000657461;
}

void sub_1BB3799E8(_QWORD *a1@<X8>)
{
  *a1 = 0x6563726F66;
  a1[1] = 0xE500000000000000;
}

void sub_1BB379A00(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "chronological");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1BB379A28()
{
  sub_1BB37A540();
  return sub_1BB872CDC();
}

uint64_t sub_1BB379A68()
{
  sub_1BB37A540();
  return sub_1BB872CD0();
}

uint64_t sub_1BB379AB0()
{
  sub_1BB37A540();
  return sub_1BB872CC4();
}

NewsFeed::FeedRefreshStrategy __swiftcall FeedRefreshStrategyOption.feedRefreshStrategy(fromConfig:)(NewsFeed::FeedRefreshStrategy fromConfig)
{
  _BYTE *v1;
  unsigned __int8 *v2;
  unsigned int v3;

  v3 = *v2;
  if (v3 >= 4)
    LOBYTE(v3) = *(_BYTE *)fromConfig;
  *v1 = v3;
  return fromConfig;
}

NewsFeed::FeedRefreshStrategyOption_optional __swiftcall FeedRefreshStrategyOption.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedRefreshStrategyOption_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedRefreshStrategyOption.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB379B8C + 4 * byte_1BB90D748[*v0]))(0x6C6F6F706572, 0xE600000000000000);
}

uint64_t sub_1BB379B8C()
{
  return 0x446873696C627570;
}

uint64_t sub_1BB379BAC()
{
  return 0x6563726F66;
}

uint64_t sub_1BB379BC0()
{
  return 0x6F6C6F6E6F726863;
}

uint64_t sub_1BB379BE4()
{
  return 0x6769666E6F63;
}

void sub_1BB379BF4(char *a1)
{
  sub_1BB805414(*a1);
}

void sub_1BB379C00()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB379C48()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB379CD8()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB379D10()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB379D8C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB379DD0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedRefreshStrategyOption_optional sub_1BB379E60(Swift::String *a1)
{
  return FeedRefreshStrategyOption.init(rawValue:)(*a1);
}

uint64_t sub_1BB379E6C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB379E98 + 4 * byte_1BB90D75C[*v0]))();
}

void sub_1BB379E98(_QWORD *a1@<X8>)
{
  *a1 = 0x446873696C627570;
  a1[1] = 0xEB00000000657461;
}

void sub_1BB379EBC(_QWORD *a1@<X8>)
{
  *a1 = 0x6563726F66;
  a1[1] = 0xE500000000000000;
}

void sub_1BB379ED4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "chronological");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1BB379EFC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6769666E6F63;
  a1[1] = v1;
}

uint64_t sub_1BB379F10()
{
  sub_1BB37A4FC();
  return sub_1BB872CDC();
}

uint64_t sub_1BB379F50()
{
  sub_1BB37A4FC();
  return sub_1BB872CD0();
}

uint64_t sub_1BB379F98()
{
  sub_1BB37A4FC();
  return sub_1BB872CC4();
}

NewsFeed::FeedAutoRefreshStrategy_optional __swiftcall FeedAutoRefreshStrategy.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedAutoRefreshStrategy_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedAutoRefreshStrategy.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64656C6261736964;
  if (*v0 != 1)
    v1 = 0x6563726F66;
  if (*v0)
    return v1;
  else
    return 0x64656C62616E65;
}

unint64_t sub_1BB37A08C()
{
  unint64_t result;

  result = qword_1EF2C1E60;
  if (!qword_1EF2C1E60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedRefreshStrategy, &type metadata for FeedRefreshStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2C1E60);
  }
  return result;
}

unint64_t sub_1BB37A0D4()
{
  unint64_t result;

  result = qword_1ED39C710;
  if (!qword_1ED39C710)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedRefreshStrategyOption, &type metadata for FeedRefreshStrategyOption);
    atomic_store(result, (unint64_t *)&qword_1ED39C710);
  }
  return result;
}

uint64_t sub_1BB37A118(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB805B8C(*a1, *a2);
}

uint64_t sub_1BB37A124()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB37A1C0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB37A238()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedAutoRefreshStrategy_optional sub_1BB37A2D0(Swift::String *a1)
{
  return FeedAutoRefreshStrategy.init(rawValue:)(*a1);
}

uint64_t sub_1BB37A2DC()
{
  sub_1BA83A0E8();
  return sub_1BB872CDC();
}

uint64_t sub_1BB37A31C()
{
  sub_1BA83A0E8();
  return sub_1BB872CD0();
}

uint64_t storeEnumTagSinglePayload for FeedRefreshStrategy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB37A3B0 + 4 * byte_1BB90D766[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB37A3E4 + 4 * byte_1BB90D761[v4]))();
}

uint64_t sub_1BB37A3E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB37A3EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB37A3F4);
  return result;
}

uint64_t sub_1BB37A400(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB37A408);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB37A40C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB37A414(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedRefreshStrategy()
{
  return &type metadata for FeedRefreshStrategy;
}

uint64_t storeEnumTagSinglePayload for FeedRefreshStrategyOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB37A47C + 4 * byte_1BB90D770[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB37A4B0 + 4 * byte_1BB90D76B[v4]))();
}

uint64_t sub_1BB37A4B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB37A4B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB37A4C0);
  return result;
}

uint64_t sub_1BB37A4CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB37A4D4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB37A4D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB37A4E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedRefreshStrategyOption()
{
  return &type metadata for FeedRefreshStrategyOption;
}

unint64_t sub_1BB37A4FC()
{
  unint64_t result;

  result = qword_1ED39C718[0];
  if (!qword_1ED39C718[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedRefreshStrategyOption, &type metadata for FeedRefreshStrategyOption);
    atomic_store(result, qword_1ED39C718);
  }
  return result;
}

unint64_t sub_1BB37A540()
{
  unint64_t result;

  result = qword_1EF2C1E68;
  if (!qword_1EF2C1E68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedRefreshStrategy, &type metadata for FeedRefreshStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2C1E68);
  }
  return result;
}

uint64_t FormatPurchaseLandingPageData.articleIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPurchaseLandingPageData.postPurchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatPurchaseLandingPageData() + 20);
  return sub_1BB353D70(v3, a1);
}

_QWORD *assignWithCopy for FormatPurchaseLandingPageData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for FormatPostPurchaseData();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v18 = sub_1BB86C67C();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
      v21 = v20(v7, 2, v18);
      v22 = v20(v8, 2, v18);
      if (v21)
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v7, v8, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 2, v18);
          return a1;
        }
      }
      else
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v7, v8, v18);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
      }
      v17 = *(_QWORD *)(v10 + 64);
      goto LABEL_8;
    }
    sub_1BB37A7D4((uint64_t)v7);
LABEL_7:
    sub_1BA829D7C(0);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v17);
    return a1;
  }
  if (v13)
    goto LABEL_7;
  v14 = sub_1BB86C67C();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1BB37A7D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatPostPurchaseData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *assignWithTake for FormatPurchaseLandingPageData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FormatPostPurchaseData();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      v19 = sub_1BB86C67C();
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
      v22 = v21(v8, 2, v19);
      v23 = v21(v9, 2, v19);
      if (v22)
      {
        if (!v23)
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v8, v9, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 2, v19);
          return a1;
        }
      }
      else
      {
        if (!v23)
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v8, v9, v19);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
      }
      v18 = *(_QWORD *)(v11 + 64);
      goto LABEL_8;
    }
    sub_1BB37A7D4((uint64_t)v8);
LABEL_7:
    sub_1BA829D7C(0);
    v18 = *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64);
LABEL_8:
    memcpy(v8, v9, v18);
    return a1;
  }
  if (v14)
    goto LABEL_7;
  v15 = sub_1BB86C67C();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 2, v15))
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v9, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPurchaseLandingPageData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB37AA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA829D7C(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FormatPurchaseLandingPageData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB37AA88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA829D7C(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB37AAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA50F0D4(0, &qword_1ED3A3790);
  v10[1] = 0;
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  sub_1BB37CFE4();
  sub_1BB37D038();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87FC80;
  v10[0] = 0;
  sub_1BB86D384();
  v10[0] = 1;
  sub_1BB86D384();
  v10[0] = 2;
  sub_1BB86D384();
  result = sub_1BB86D39C();
  qword_1EF2C1E70 = result;
  return result;
}

uint64_t static Settings.Sports.hidesIgnoredTags.getter()
{
  return sub_1BA499934(&qword_1EF2A70F0);
}

uint64_t sub_1BB37AD64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001BB989BE0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1E78 = result;
  return result;
}

uint64_t static Settings.Sports.BoxScoreEmbed.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A70F8);
}

uint64_t sub_1BB37AEF0(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.BoxScoreEmbed.ConfigOverrides, 0xD000000000000039, 0x80000001BB98A010, &qword_1ED3A3440);
}

uint64_t static Settings.Sports.BoxScoreEmbed.configOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3A3450);
}

uint64_t sub_1BB37AF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001BB989BE0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1E80 = result;
  return result;
}

uint64_t static Settings.Sports.InjuryReportEmbed.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A7108);
}

uint64_t sub_1BB37B0C4(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.InjuryReportEmbed.ConfigOverrides, 0xD00000000000003DLL, 0x80000001BB989F90, &qword_1ED3A3610);
}

uint64_t static Settings.Sports.InjuryReportEmbed.configOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3A3620);
}

uint64_t sub_1BB37B10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001BB989BE0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1E88 = result;
  return result;
}

uint64_t static Settings.Sports.KeyPlayersEmbed.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A7118);
}

uint64_t sub_1BB37B298(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.KeyPlayersEmbed.ConfigOverrides, 0xD00000000000003BLL, 0x80000001BB989F10, &qword_1ED3A35C0);
}

uint64_t static Settings.Sports.KeyPlayersEmbed.configOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3A35D0);
}

uint64_t sub_1BB37B2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001BB989BE0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1E90 = result;
  return result;
}

uint64_t static Settings.Sports.LineScoreEmbed.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A7128);
}

uint64_t sub_1BB37B46C(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.LineScoreEmbed.ConfigOverrides, 0xD00000000000003ALL, 0x80000001BB989E90, &qword_1ED3A3520);
}

uint64_t static Settings.Sports.LineScoreEmbed.configOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3A3530);
}

uint64_t sub_1BB37B4B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001BB989BE0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1E98 = result;
  return result;
}

uint64_t static Settings.Sports.ScoreEmbed.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A7138);
}

uint64_t Settings.Sports.ScoreEmbed.ConfigOverrides.__deallocating_deinit()
{
  _s11TeaSettings0B0C8NewsFeedE6SportsV10ScoreEmbedV15ConfigOverridesCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB37B660(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.ScoreEmbed.ConfigOverrides, 0xD000000000000035, 0x80000001BB989E10, &qword_1ED3A33F8);
}

uint64_t static Settings.Sports.ScoreEmbed.configOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3A3400);
}

uint64_t sub_1BB37B6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001BB989BE0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1EA0 = result;
  return result;
}

uint64_t static Settings.Sports.MastheadScoreEmbed.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A7148);
}

uint64_t sub_1BB37B834(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.MastheadScoreEmbed.ConfigOverrides, 0xD00000000000003ELL, 0x80000001BB989D90, &qword_1ED3A3660);
}

uint64_t static Settings.Sports.MastheadScoreEmbed.configOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3A3670);
}

uint64_t sub_1BB37B87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001BB989BE0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1EA8 = result;
  return result;
}

uint64_t static Settings.Sports.StandingEmbed.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A7158);
}

uint64_t sub_1BB37BA08(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.StandingEmbed.ConfigOverrides, 0xD000000000000038, 0x80000001BB989D10, &qword_1ED3A34D8);
}

uint64_t static Settings.Sports.StandingEmbed.configOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3A34E0);
}

uint64_t sub_1BB37BA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD000000000000043;
  v10[1] = 0x80000001BB989CC0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1EB0 = result;
  return result;
}

uint64_t static Settings.Sports.StandingConfig.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A7168);
}

uint64_t sub_1BB37BBE4(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.StandingConfig.ConfigOverrides, 0xD000000000000039, 0x80000001BB989C40, &qword_1ED3A3570);
}

uint64_t static Settings.Sports.StandingConfig.configOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3A3580);
}

uint64_t sub_1BB37BC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[16];

  v0 = sub_1BB86D378();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1BB86D36C();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E8], v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  v9[15] = 0;
  sub_1BA50F0D4(0, (unint64_t *)&qword_1ED3D5FD0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1ED3A3678 = result;
  return result;
}

uint64_t static Settings.Sports.useAllFetchForStandingsAndBrackets.getter()
{
  return sub_1BA499934(&qword_1ED3A3688);
}

uint64_t sub_1BB37BD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD00000000000001CLL;
  v10[1] = 0x80000001BB989BE0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1EB8 = result;
  return result;
}

uint64_t static Settings.Sports.BracketEmbed.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A7170);
}

uint64_t sub_1BB37BF04(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.BracketEmbed.ConfigOverrides, 0xD000000000000037, 0x80000001BB989B60, &qword_1ED3ABAC0);
}

uint64_t static Settings.Sports.BracketEmbed.configOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3ABAC8);
}

uint64_t sub_1BB37BF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD000000000000044;
  v10[1] = 0x80000001BB989B10;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1EC0 = result;
  return result;
}

uint64_t static Settings.Sports.BoxScoreConfig.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A7180);
}

uint64_t sub_1BB37C0E0(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.BoxScoreConfig.ConfigOverrides, 0xD00000000000003ALL, 0x80000001BB989A90, &qword_1EF2C1EC8);
}

uint64_t static Settings.Sports.BoxScoreConfig.configOverrides.getter()
{
  return sub_1BA499934(&qword_1EF2A7188);
}

uint64_t sub_1BB37C128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD000000000000042;
  v10[1] = 0x80000001BB989A40;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1ED0 = result;
  return result;
}

uint64_t static Settings.Sports.BracketConfig.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A7190);
}

uint64_t sub_1BB37C2BC(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.BracketConfig.ConfigOverrides, 0xD000000000000038, 0x80000001BB9899C0, &qword_1ED3A3490);
}

uint64_t static Settings.Sports.BracketConfig.configOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3A3498);
}

uint64_t sub_1BB37C304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD000000000000045;
  v10[1] = 0x80000001BB989970;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1ED8 = result;
  return result;
}

uint64_t static Settings.Sports.KeyPlayersConfig.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A71A0);
}

uint64_t sub_1BB37C498(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.KeyPlayersConfig.ConfigOverrides, 0xD00000000000003CLL, 0x80000001BB9898F0, &qword_1EF2C1EE0);
}

uint64_t static Settings.Sports.KeyPlayersConfig.configOverrides.getter()
{
  return sub_1BA499934(&qword_1EF2A71A8);
}

uint64_t sub_1BB37C4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD000000000000045;
  v10[1] = 0x80000001BB9898A0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1EE8 = result;
  return result;
}

uint64_t static Settings.Sports.LineScoreConfig.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A71B0);
}

uint64_t sub_1BB37C674(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.LineScoreConfig.ConfigOverrides, 0xD00000000000003BLL, 0x80000001BB989820, &qword_1EF2C1EF0);
}

uint64_t static Settings.Sports.LineScoreConfig.configOverrides.getter()
{
  return sub_1BA499934(&qword_1EF2A71B8);
}

uint64_t sub_1BB37C6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD000000000000048;
  v10[1] = 0x80000001BB9897D0;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1EF8 = result;
  return result;
}

uint64_t static Settings.Sports.InjuryReportConfig.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A71C0);
}

uint64_t sub_1BB37C850(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.InjuryReportConfig.ConfigOverrides, 0xD00000000000003ELL, 0x80000001BB989750, &qword_1EF2C1F00);
}

uint64_t static Settings.Sports.InjuryReportConfig.configOverrides.getter()
{
  return sub_1BA499934(&qword_1EF2A71C8);
}

uint64_t sub_1BB37C898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86D378();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = sub_1BB8729A0();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  v10[0] = 0xD000000000000040;
  v10[1] = 0x80000001BB989700;
  sub_1BA50F0D4(0, &qword_1EF2B10B0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1EF2C1F08 = result;
  return result;
}

uint64_t static Settings.Sports.ScoreConfig.ConfigOverrides.url.getter()
{
  return sub_1BA499934(&qword_1EF2A71D0);
}

uint64_t _s11TeaSettings0B0C8NewsFeedE6SportsV13BoxScoreEmbedV15ConfigOverridesC3key12defaultValue6accessAJSSSg_SbAA6AccessOtcfc_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1BB86D36C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5, v7);
  v9 = sub_1BB86D24C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t sub_1BB37CAE8(uint64_t a1)
{
  return sub_1BA4C5308(a1, (void (*)(_QWORD))type metadata accessor for Settings.Sports.ScoreConfig.ConfigOverrides, 0xD000000000000036, 0x80000001BB989680, &qword_1ED3A2540);
}

uint64_t static Settings.Sports.ScoreConfig.configOverrides.getter()
{
  return sub_1BA499934(&qword_1ED3A2548);
}

uint64_t sub_1BB37CB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[16];

  v0 = sub_1BB86D36C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1BB86D378();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v9[15] = 0;
  sub_1BA50F0D4(0, (unint64_t *)&qword_1ED3D5FD0);
  swift_allocObject();
  result = sub_1BB86D3D8();
  qword_1ED3A3690 = result;
  return result;
}

uint64_t static Settings.Sports.Scores.debug.getter()
{
  return sub_1BA499934(&qword_1ED3A36A0);
}

ValueMetadata *type metadata accessor for Settings.Sports()
{
  return &type metadata for Settings.Sports;
}

ValueMetadata *type metadata accessor for Settings.Sports.BoxScoreEmbed()
{
  return &type metadata for Settings.Sports.BoxScoreEmbed;
}

uint64_t type metadata accessor for Settings.Sports.BoxScoreEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A3408);
}

uint64_t sub_1BB37CCB0()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CCBC()
{
  return type metadata accessor for Settings.Sports.BoxScoreEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.InjuryReportEmbed()
{
  return &type metadata for Settings.Sports.InjuryReportEmbed;
}

uint64_t type metadata accessor for Settings.Sports.InjuryReportEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A35D8);
}

uint64_t sub_1BB37CCE8()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CCF4()
{
  return type metadata accessor for Settings.Sports.InjuryReportEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.KeyPlayersEmbed()
{
  return &type metadata for Settings.Sports.KeyPlayersEmbed;
}

uint64_t type metadata accessor for Settings.Sports.KeyPlayersEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A3588);
}

uint64_t sub_1BB37CD20()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CD2C()
{
  return type metadata accessor for Settings.Sports.KeyPlayersEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.LineScoreEmbed()
{
  return &type metadata for Settings.Sports.LineScoreEmbed;
}

uint64_t type metadata accessor for Settings.Sports.LineScoreEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A34E8);
}

uint64_t sub_1BB37CD58()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CD64()
{
  return type metadata accessor for Settings.Sports.LineScoreEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.ScoreEmbed()
{
  return &type metadata for Settings.Sports.ScoreEmbed;
}

uint64_t type metadata accessor for Settings.Sports.ScoreEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A33C0);
}

uint64_t sub_1BB37CD90()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CD9C()
{
  return type metadata accessor for Settings.Sports.ScoreEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.MastheadScoreEmbed()
{
  return &type metadata for Settings.Sports.MastheadScoreEmbed;
}

uint64_t type metadata accessor for Settings.Sports.MastheadScoreEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A3628);
}

uint64_t sub_1BB37CDC8()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CDD4()
{
  return type metadata accessor for Settings.Sports.MastheadScoreEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.StandingEmbed()
{
  return &type metadata for Settings.Sports.StandingEmbed;
}

uint64_t type metadata accessor for Settings.Sports.StandingEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A34A0);
}

uint64_t sub_1BB37CE00()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CE0C()
{
  return type metadata accessor for Settings.Sports.StandingEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.StandingConfig()
{
  return &type metadata for Settings.Sports.StandingConfig;
}

uint64_t type metadata accessor for Settings.Sports.StandingConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A3538);
}

uint64_t sub_1BB37CE38()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CE44()
{
  return type metadata accessor for Settings.Sports.StandingConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.BracketEmbed()
{
  return &type metadata for Settings.Sports.BracketEmbed;
}

uint64_t type metadata accessor for Settings.Sports.BracketEmbed.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3ABA88);
}

uint64_t sub_1BB37CE70()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CE7C()
{
  return type metadata accessor for Settings.Sports.BracketEmbed.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.BoxScoreConfig()
{
  return &type metadata for Settings.Sports.BoxScoreConfig;
}

uint64_t type metadata accessor for Settings.Sports.BoxScoreConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1EF2C1FE8);
}

uint64_t sub_1BB37CEA8()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CEB4()
{
  return type metadata accessor for Settings.Sports.BoxScoreConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.BracketConfig()
{
  return &type metadata for Settings.Sports.BracketConfig;
}

uint64_t type metadata accessor for Settings.Sports.BracketConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A3458);
}

uint64_t sub_1BB37CEE0()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CEEC()
{
  return type metadata accessor for Settings.Sports.BracketConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.KeyPlayersConfig()
{
  return &type metadata for Settings.Sports.KeyPlayersConfig;
}

uint64_t type metadata accessor for Settings.Sports.KeyPlayersConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1EF2C2050);
}

uint64_t sub_1BB37CF18()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CF24()
{
  return type metadata accessor for Settings.Sports.KeyPlayersConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.LineScoreConfig()
{
  return &type metadata for Settings.Sports.LineScoreConfig;
}

uint64_t type metadata accessor for Settings.Sports.LineScoreConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1EF2C20A0);
}

uint64_t sub_1BB37CF50()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CF5C()
{
  return type metadata accessor for Settings.Sports.LineScoreConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.InjuryReportConfig()
{
  return &type metadata for Settings.Sports.InjuryReportConfig;
}

uint64_t type metadata accessor for Settings.Sports.InjuryReportConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1EF2C20F0);
}

uint64_t sub_1BB37CF88()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CF94()
{
  return type metadata accessor for Settings.Sports.InjuryReportConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.ScoreConfig()
{
  return &type metadata for Settings.Sports.ScoreConfig;
}

uint64_t type metadata accessor for Settings.Sports.ScoreConfig.ConfigOverrides(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A2530);
}

uint64_t sub_1BB37CFC0()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB37CFCC()
{
  return type metadata accessor for Settings.Sports.ScoreConfig.ConfigOverrides(0);
}

ValueMetadata *type metadata accessor for Settings.Sports.Scores()
{
  return &type metadata for Settings.Sports.Scores;
}

void sub_1BB37CFE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2158)
  {
    sub_1BB37D038();
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2158);
  }
}

void sub_1BB37D038()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2160)
  {
    v0 = sub_1BB86D390();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2160);
  }
}

ValueMetadata *type metadata accessor for DebugFormatCompilerResult()
{
  return &type metadata for DebugFormatCompilerResult;
}

uint64_t sub_1BB37D10C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB37D11C(uint64_t a1)
{
  uint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t (*v19)();
  int EnumCaseMultiPayload;
  uint64_t (*v21)();
  uint64_t (*v22)();
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1E0C80A78](v29);
  v3 = (id *)((char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for DebugFormatCompilerResultEntry();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v30 = (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  v10 = MEMORY[0x1E0DEE9D8];
  v31 = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    v12 = *(unsigned __int8 *)(v5 + 80);
    v13 = *(_QWORD *)(v5 + 72);
    v26 = a1;
    v28 = (v12 + 32) & ~v12;
    v14 = a1 + v28;
    v15 = MEMORY[0x1E0DEE9D8];
    v16 = type metadata accessor for DebugFormatCompilerResultEntry;
    v17 = type metadata accessor for DebugFormatCompilerResultOutput;
    v27 = v4;
    while (1)
    {
      sub_1BA4C2DD8(v14, (uint64_t)v9, (uint64_t (*)(_QWORD))v16);
      sub_1BA4C2DD8((uint64_t)&v9[*(int *)(v4 + 20)], (uint64_t)v3, (uint64_t (*)(_QWORD))v17);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          v21 = v16;
          v22 = v17;

          sub_1BB37D380((uint64_t)v9, v30);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1BAC7ADD8(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v15 = v31;
          v24 = *(_QWORD *)(v31 + 16);
          v23 = *(_QWORD *)(v31 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1BAC7ADD8(v23 > 1, v24 + 1, 1);
            v15 = v31;
          }
          *(_QWORD *)(v15 + 16) = v24 + 1;
          sub_1BB37D380(v30, v15 + v28 + v24 * v13);
          v17 = v22;
          v16 = v21;
          v4 = v27;
          goto LABEL_5;
        }
        sub_1BAF05E00();

        v19 = type metadata accessor for FormatFile;
      }
      else
      {
        v19 = v17;
      }
      sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))v19);
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))v16);
LABEL_5:
      v14 += v13;
      if (!--v11)
      {
        v10 = v31;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BB37D380(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatCompilerResultEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB37D3C4(uint64_t a1)
{
  uint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t (*v17)();
  int EnumCaseMultiPayload;
  uint64_t (*v19)();
  uint64_t (*v20)();
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1E0C80A78](v28);
  v3 = (id *)((char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for DebugFormatCompilerResultEntry();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v29 = (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - v8;
  v10 = MEMORY[0x1E0DEE9D8];
  v30 = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    v12 = *(unsigned __int8 *)(v5 + 80);
    v13 = *(_QWORD *)(v5 + 72);
    v25 = a1;
    v27 = (v12 + 32) & ~v12;
    v14 = a1 + v27;
    v15 = MEMORY[0x1E0DEE9D8];
    v16 = type metadata accessor for DebugFormatCompilerResultEntry;
    v17 = type metadata accessor for DebugFormatCompilerResultOutput;
    v26 = v4;
    while (1)
    {
      sub_1BA4C2DD8(v14, (uint64_t)v9, (uint64_t (*)(_QWORD))v16);
      sub_1BA4C2DD8((uint64_t)&v9[*(int *)(v4 + 20)], (uint64_t)v3, (uint64_t (*)(_QWORD))v17);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
        {
          v19 = v16;
          v20 = v17;
          sub_1BAF05E00();

          sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
          sub_1BB37D380((uint64_t)v9, v29);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1BAC7ADD8(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v15 = v30;
          v23 = *(_QWORD *)(v30 + 16);
          v22 = *(_QWORD *)(v30 + 24);
          if (v23 >= v22 >> 1)
          {
            sub_1BAC7ADD8(v22 > 1, v23 + 1, 1);
            v15 = v30;
          }
          *(_QWORD *)(v15 + 16) = v23 + 1;
          sub_1BB37D380(v29, v15 + v27 + v23 * v13);
          v17 = v20;
          v16 = v19;
          v4 = v26;
          goto LABEL_5;
        }

      }
      else
      {
        sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))v17);
      }
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))v16);
LABEL_5:
      v14 += v13;
      if (!--v11)
      {
        v10 = v30;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BB37D630(uint64_t a1)
{
  uint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t (*v17)();
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t (*v20)();
  uint64_t (*v21)();
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1E0C80A78](v28);
  v3 = (id *)((char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for DebugFormatCompilerResultEntry();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v29 = (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - v8;
  v10 = MEMORY[0x1E0DEE9D8];
  v30 = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    v12 = *(unsigned __int8 *)(v5 + 80);
    v13 = *(_QWORD *)(v5 + 72);
    v25 = a1;
    v27 = (v12 + 32) & ~v12;
    v14 = a1 + v27;
    v15 = MEMORY[0x1E0DEE9D8];
    v16 = type metadata accessor for DebugFormatCompilerResultEntry;
    v17 = type metadata accessor for DebugFormatCompilerResultOutput;
    v26 = v4;
    do
    {
      sub_1BA4C2DD8(v14, (uint64_t)v9, (uint64_t (*)(_QWORD))v16);
      sub_1BA4C2DD8((uint64_t)&v9[*(int *)(v4 + 20)], (uint64_t)v3, (uint64_t (*)(_QWORD))v17);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {

        }
        else
        {
          sub_1BAF05E00();

          sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
        }
        sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))v16);
      }
      else
      {
        v20 = v16;
        v21 = v17;
        sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))v17);
        sub_1BB37D380((uint64_t)v9, v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BAC7ADD8(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v30;
        v23 = *(_QWORD *)(v30 + 16);
        v22 = *(_QWORD *)(v30 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_1BAC7ADD8(v22 > 1, v23 + 1, 1);
          v15 = v30;
        }
        *(_QWORD *)(v15 + 16) = v23 + 1;
        sub_1BB37D380(v29, v15 + v27 + v23 * v13);
        v17 = v21;
        v16 = v20;
        v4 = v26;
      }
      v14 += v13;
      --v11;
    }
    while (v11);
    v10 = v30;
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BB37D89C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  v5 = sub_1BA6E35A8(v4, v3);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

void FormatLayoutExpression.operator.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *FormatLayoutExpression.operator.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*FormatLayoutExpression.operator.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static FormatLayoutExpression.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (*a1 == *a2)
  {
    v2 = FormatOperator.rawValue.getter();
    v4 = v3;
    if (v2 == FormatOperator.rawValue.getter() && v4 == v5)
      v6 = 1;
    else
      v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

unint64_t sub_1BB37D9F0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB37DA14();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB37DA14()
{
  unint64_t result;

  result = qword_1EF2C2168;
  if (!qword_1EF2C2168)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayoutExpression, &type metadata for FormatLayoutExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C2168);
  }
  return result;
}

unint64_t sub_1BB37DA58(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA675338();
  a1[2] = sub_1BA6529F0();
  result = sub_1BB37DA8C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB37DA8C()
{
  unint64_t result;

  result = qword_1EF2C2170;
  if (!qword_1EF2C2170)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayoutExpression, &type metadata for FormatLayoutExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C2170);
  }
  return result;
}

uint64_t sub_1BB37DAD0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    return sub_1BB807F80();
  else
    return 0;
}

uint64_t sub_1BB37DAF4@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 8);
  return result;
}

_BYTE *sub_1BB37DB00(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 8) = *result;
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutExpression()
{
  return &type metadata for FormatLayoutExpression;
}

uint64_t sub_1BB37DB1C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t FormatSlotItemTagFilterOrCondition.lhsCondition.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1BA739250(v2);
}

unint64_t FormatSlotItemTagFilterOrCondition.rhsCondition.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  return sub_1BA739250(v2);
}

uint64_t sub_1BB37DB5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSlotItemTagFilterOrCondition.init(from:)(a1, a2);
}

uint64_t sub_1BB37DB70(_QWORD *a1)
{
  return FormatSlotItemTagFilterOrCondition.encode(to:)(a1);
}

unint64_t sub_1BB37DB84(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB37DBA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB37DBA8()
{
  unint64_t result;

  result = qword_1EF2C2178;
  if (!qword_1EF2C2178)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterOrCondition, &type metadata for FormatSlotItemTagFilterOrCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2C2178);
  }
  return result;
}

unint64_t sub_1BB37DBEC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE732A4();
  a1[2] = sub_1BAEFB018();
  result = sub_1BB37DC20();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB37DC20()
{
  unint64_t result;

  result = qword_1EF2C2180;
  if (!qword_1EF2C2180)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterOrCondition, &type metadata for FormatSlotItemTagFilterOrCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2C2180);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotItemTagFilterOrCondition()
{
  return &type metadata for FormatSlotItemTagFilterOrCondition;
}

ValueMetadata *type metadata accessor for DebugFormatHistorySection()
{
  return &type metadata for DebugFormatHistorySection;
}

uint64_t sub_1BB37DC84(__int128 *a1, double a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v37;
  _QWORD v38[7];
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v3 = a1[11];
  v50 = a1[10];
  v51 = v3;
  v52 = *((_QWORD *)a1 + 24);
  v4 = a1[7];
  v46 = a1[6];
  v47 = v4;
  v5 = a1[9];
  v48 = a1[8];
  v49 = v5;
  v6 = a1[3];
  v42 = a1[2];
  v43 = v6;
  v7 = a1[5];
  v44 = a1[4];
  v45 = v7;
  v8 = a1[1];
  v40 = *a1;
  v41 = v8;
  v9 = MEMORY[0x1E0DEE9D8];
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1BB37E000();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB898AA0;
  *(_QWORD *)(inited + 32) = 0x6567616B636150;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v11 = (uint64_t *)(*((_QWORD *)&v50 + 1) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
  swift_beginAccess();
  v12 = MEMORY[0x1E0DEA968];
  v13 = MEMORY[0x1E0DEA9D8];
  if (v11[1])
  {
    v14 = *v11;
    v15 = MEMORY[0x1E0DEA9D8];
    v16 = v11[1];
    v17 = MEMORY[0x1E0DEA968];
  }
  else
  {
    v14 = 0;
    v16 = 0;
    v17 = 0;
    v15 = 0;
    *(_QWORD *)(inited + 64) = 0;
  }
  *(_QWORD *)(inited + 48) = v14;
  *(_QWORD *)(inited + 56) = v16;
  *(_QWORD *)(inited + 72) = v17;
  *(_QWORD *)(inited + 80) = v15;
  *(_BYTE *)(inited + 88) = 0;
  *(_QWORD *)(inited + 96) = 0x70756F7247;
  *(_QWORD *)(inited + 104) = 0xE500000000000000;
  v18 = *((_QWORD *)&v42 + 1);
  v19 = v43;
  *(_QWORD *)(inited + 136) = v12;
  *(_QWORD *)(inited + 144) = v13;
  if (v19)
  {
    v20 = v19;
  }
  else
  {
    v18 = *((_QWORD *)&v41 + 1);
    v20 = swift_bridgeObjectRetain();
  }
  *(_QWORD *)(inited + 112) = v18;
  *(_QWORD *)(inited + 120) = v20;
  *(_BYTE *)(inited + 152) = 0;
  *(_QWORD *)(inited + 160) = 0x656369766544;
  *(_QWORD *)(inited + 168) = 0xE600000000000000;
  v21 = sub_1BB532AE8(v51);
  *(_QWORD *)(inited + 200) = v12;
  *(_QWORD *)(inited + 208) = v13;
  *(_QWORD *)(inited + 176) = v21;
  *(_QWORD *)(inited + 184) = v22;
  *(_BYTE *)(inited + 216) = 0;
  strcpy((char *)(inited + 224), "Calculations");
  *(_BYTE *)(inited + 237) = 0;
  *(_WORD *)(inited + 238) = -5120;
  v23 = v40;
  v24 = MEMORY[0x1E0DEB418];
  v25 = MEMORY[0x1E0DEB478];
  *(_QWORD *)(inited + 264) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 272) = v25;
  *(_QWORD *)(inited + 240) = v23;
  *(_BYTE *)(inited + 280) = 0;
  *(_QWORD *)(inited + 288) = 0x7373615020646E32;
  *(_QWORD *)(inited + 296) = 0xEA00000000007365;
  v26 = *((_QWORD *)&v40 + 1);
  *(_QWORD *)(inited + 328) = v24;
  *(_QWORD *)(inited + 336) = v25;
  *(_QWORD *)(inited + 304) = v26;
  *(_BYTE *)(inited + 344) = 0;
  strcpy((char *)(inited + 352), "Resize Passes");
  *(_WORD *)(inited + 366) = -4864;
  v27 = v41;
  *(_QWORD *)(inited + 392) = v24;
  *(_QWORD *)(inited + 400) = v25;
  *(_QWORD *)(inited + 368) = v27;
  *(_BYTE *)(inited + 408) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB3870A4(inited);
  v28 = *(_QWORD *)(*((_QWORD *)&v51 + 1) + 16);
  if (v28)
  {
    swift_bridgeObjectRetain();
    sub_1BAC7B3C8(0, v28, 0);
    v29 = (void **)(*((_QWORD *)&v51 + 1) + 56);
    do
    {
      v30 = (uint64_t)*(v29 - 2);
      v31 = (uint64_t)*(v29 - 1);
      v32 = *v29;
      v38[0] = *(v29 - 3);
      v38[1] = v30;
      v38[2] = v31;
      v38[3] = v32;
      *(double *)&v38[4] = a2;
      v39 = 1;
      v34 = *(_QWORD *)(v9 + 16);
      v33 = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      v35 = v32;
      if (v34 >= v33 >> 1)
        sub_1BAC7B3C8(v33 > 1, v34 + 1, 1);
      *(_QWORD *)(v9 + 16) = v34 + 1;
      sub_1BB37E054((uint64_t)v38, v9 + (v34 << 6) + 32);
      v29 += 4;
      --v28;
    }
    while (v28);
    sub_1BA985138((uint64_t)&v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA985138((uint64_t)&v40);
  }
  sub_1BB3870A4(v9);
  return v37;
}

void sub_1BB37E000()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B14C0)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B14C0);
  }
}

uint64_t sub_1BB37E054(uint64_t a1, uint64_t a2)
{
  __swift_memcpy57_8(a2, a1);
  return a2;
}

uint64_t AdPresentationDelegateProvider.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v0 + 24) = 1;
  return v0;
}

uint64_t AdPresentationDelegateProvider.viewController.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 16);
}

void AdPresentationDelegateProvider.viewController.setter(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*AdPresentationDelegateProvider.viewController.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCE5D40](v1 + 16);
  return sub_1BB37E1C8;
}

void sub_1BB37E1C8(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

uint64_t sub_1BB37E230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = v1;
  if (v1 == 1)
  {
    swift_beginAccess();
    v3 = MEMORY[0x1BCCE5D40](v0 + 16);
    if (v3)
    {
      v4 = (void *)v3;
      type metadata accessor for AdPresentationDelegate();
      v2 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();

    }
    else
    {
      v2 = 0;
    }
    v5 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v2;
    swift_retain();
    sub_1BB37E334(v5);
  }
  sub_1BB37E49C(v1);
  return v2;
}

uint64_t AdPresentationDelegateProvider.init()()
{
  uint64_t v0;

  swift_unknownObjectWeakInit();
  *(_QWORD *)(v0 + 24) = 1;
  return v0;
}

uint64_t AdPresentationDelegateProvider.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  sub_1BB37E334(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t sub_1BB37E334(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t AdPresentationDelegateProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  sub_1BB37E334(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t sub_1BB37E370@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1BB37E3BC()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for AdPresentationDelegateProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdPresentationDelegateProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BB37E458()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdPresentationDelegate()
{
  return objc_opt_self();
}

uint64_t sub_1BB37E49C(uint64_t result)
{
  if (result != 1)
    return swift_retain();
  return result;
}

uint64_t FormatSportsEventBinding.Asset.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static FormatSportsEventBinding.Asset.allCases.getter()
{
  return &unk_1E7270D68;
}

uint64_t FormatSportsEventBinding.Asset.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65756761656CLL;
  if (*v0 != 1)
    v1 = 0x74697465706D6F63;
  if (*v0)
    return v1;
  else
    return 0x746E657665;
}

unint64_t sub_1BB37E56C()
{
  unint64_t result;

  result = qword_1EF2C2188;
  if (!qword_1EF2C2188)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Asset, &type metadata for FormatSportsEventBinding.Asset);
    atomic_store(result, (unint64_t *)&qword_1EF2C2188);
  }
  return result;
}

uint64_t sub_1BB37E5B0@<X0>(char *a1@<X8>)
{
  return FormatSportsEventBinding.Asset.init(rawValue:)(a1);
}

unint64_t sub_1BB37E5C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C2190;
  if (!qword_1EF2C2190)
  {
    sub_1BB37E608();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2190);
  }
  return result;
}

void sub_1BB37E608()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2198)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2198);
  }
}

void sub_1BB37E65C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252BC0;
}

uint64_t _s5AssetOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB37E6B8 + 4 * byte_1BB90DEFD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB37E6EC + 4 * asc_1BB90DEF8[v4]))();
}

uint64_t sub_1BB37E6EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB37E6F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB37E6FCLL);
  return result;
}

uint64_t sub_1BB37E708(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB37E710);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB37E714(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB37E71C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.Asset()
{
  return &type metadata for FormatSportsEventBinding.Asset;
}

uint64_t getEnumTagSinglePayload for LayeredMediaEffects(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && a1[25])
    return (*(_DWORD *)a1 + 253);
  v3 = *a1;
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatPatternPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects()
{
  return &type metadata for LayeredMediaEffects;
}

uint64_t sub_1BB37E7F8()
{
  _BYTE *v0;

  if (*v0)
    return 0x647574696C706D61;
  else
    return 0x6F756E69746E6F63;
}

uint64_t sub_1BB37E83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB37F620(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB37E860()
{
  sub_1BB37F280();
  return sub_1BB874710();
}

uint64_t sub_1BB37E888()
{
  sub_1BB37F280();
  return sub_1BB87471C();
}

void sub_1BB37E8B0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  double v5;

  v5 = sub_1BB37EC0C(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = v4;
    *(double *)(a2 + 8) = v5;
  }
}

uint64_t sub_1BB37E8DC()
{
  return 0x647574696C706D61;
}

uint64_t sub_1BB37E8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x647574696C706D61 && a2 == 0xE900000000000065)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB37E998()
{
  sub_1BB37F2C4();
  return sub_1BB874710();
}

uint64_t sub_1BB37E9C0()
{
  sub_1BB37F2C4();
  return sub_1BB87471C();
}

uint64_t sub_1BB37E9E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  _QWORD *v14;

  v14 = a2;
  sub_1BB2F3C6C(0, &qword_1ED39DB98, (void (*)(void))sub_1BB37F2C4);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB37F2C4();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v14;
  sub_1BB8740B0();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v9 = v11;
  return result;
}

uint64_t sub_1BB37EB2C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F69746F6DLL;
  else
    return 0x78616C6C61726170;
}

uint64_t sub_1BB37EB64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB37F198(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB37EB88()
{
  sub_1BB37EF20();
  return sub_1BB874710();
}

uint64_t sub_1BB37EBB0()
{
  sub_1BB37EF20();
  return sub_1BB87471C();
}

uint64_t sub_1BB37EBD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;

  result = sub_1BB37ED7C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 24) = v7 & 1;
  }
  return result;
}

double sub_1BB37EC0C(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  double v10;
  _BYTE v11[16];

  sub_1BB2F3C6C(0, &qword_1EF2C21A8, (void (*)(void))sub_1BB37F280);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v11[-v7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB37F280();
  sub_1BB87468C();
  if (!v1)
  {
    v11[15] = 0;
    sub_1BB874038();
    v11[14] = 1;
    sub_1BB8740B0();
    v2 = v10;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t sub_1BB37ED7C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;

  sub_1BB2F3C6C(0, &qword_1ED39DB90, (void (*)(void))sub_1BB37EF20);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1BB37EF20();
  sub_1BB87468C();
  if (!v1)
  {
    v11 = 0;
    sub_1BB37EF64();
    sub_1BB874068();
    v8 = v10;
    v11 = 1;
    sub_1BB37EFA8();
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1BB37EF20()
{
  unint64_t result;

  result = qword_1ED39CEC0;
  if (!qword_1ED39CEC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E180, &type metadata for LayeredMediaEffects.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CEC0);
  }
  return result;
}

unint64_t sub_1BB37EF64()
{
  unint64_t result;

  result = qword_1ED39CEF8;
  if (!qword_1ED39CEF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E158, &type metadata for LayeredMediaEffects.Parallax);
    atomic_store(result, (unint64_t *)&qword_1ED39CEF8);
  }
  return result;
}

unint64_t sub_1BB37EFA8()
{
  unint64_t result;

  result = qword_1ED39CEF0;
  if (!qword_1ED39CEF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E130, &type metadata for LayeredMediaEffects.Motion);
    atomic_store(result, (unint64_t *)&qword_1ED39CEF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects.CodingKeys()
{
  return &type metadata for LayeredMediaEffects.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects.Motion()
{
  return &type metadata for LayeredMediaEffects.Motion;
}

uint64_t getEnumTagSinglePayload for LayeredMediaEffects.Parallax(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[16])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LayeredMediaEffects.Parallax(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects.Parallax()
{
  return &type metadata for LayeredMediaEffects.Parallax;
}

unint64_t sub_1BB37F0C4()
{
  unint64_t result;

  result = qword_1EF2C21A0;
  if (!qword_1EF2C21A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E108, &type metadata for LayeredMediaEffects.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C21A0);
  }
  return result;
}

unint64_t sub_1BB37F10C()
{
  unint64_t result;

  result = qword_1ED39CED0;
  if (!qword_1ED39CED0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E078, &type metadata for LayeredMediaEffects.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CED0);
  }
  return result;
}

unint64_t sub_1BB37F154()
{
  unint64_t result;

  result = qword_1ED39CEC8;
  if (!qword_1ED39CEC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E0A0, &type metadata for LayeredMediaEffects.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CEC8);
  }
  return result;
}

uint64_t sub_1BB37F198(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x78616C6C61726170 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746F6DLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BB37F280()
{
  unint64_t result;

  result = qword_1EF2C21B0;
  if (!qword_1EF2C21B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E390, &type metadata for LayeredMediaEffects.Parallax.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C21B0);
  }
  return result;
}

unint64_t sub_1BB37F2C4()
{
  unint64_t result;

  result = qword_1ED39CED8;
  if (!qword_1ED39CED8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E340, &type metadata for LayeredMediaEffects.Motion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CED8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LayeredMediaEffects.Motion.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB37F348 + 4 * byte_1BB90E000[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB37F368 + 4 * byte_1BB90E005[v4]))();
}

_BYTE *sub_1BB37F348(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB37F368(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB37F370(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB37F378(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB37F380(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB37F388(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects.Motion.CodingKeys()
{
  return &type metadata for LayeredMediaEffects.Motion.CodingKeys;
}

uint64_t _s8NewsFeed19LayeredMediaEffectsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB37F3F0 + 4 * byte_1BB90E00F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB37F424 + 4 * byte_1BB90E00A[v4]))();
}

uint64_t sub_1BB37F424(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB37F42C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB37F434);
  return result;
}

uint64_t sub_1BB37F440(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB37F448);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB37F44C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB37F454(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaEffects.Parallax.CodingKeys()
{
  return &type metadata for LayeredMediaEffects.Parallax.CodingKeys;
}

unint64_t sub_1BB37F474()
{
  unint64_t result;

  result = qword_1EF2C21B8;
  if (!qword_1EF2C21B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E260, &type metadata for LayeredMediaEffects.Parallax.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C21B8);
  }
  return result;
}

unint64_t sub_1BB37F4BC()
{
  unint64_t result;

  result = qword_1EF2C21C0;
  if (!qword_1EF2C21C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E318, &type metadata for LayeredMediaEffects.Motion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C21C0);
  }
  return result;
}

unint64_t sub_1BB37F504()
{
  unint64_t result;

  result = qword_1ED39CEE8;
  if (!qword_1ED39CEE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E288, &type metadata for LayeredMediaEffects.Motion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CEE8);
  }
  return result;
}

unint64_t sub_1BB37F54C()
{
  unint64_t result;

  result = qword_1ED39CEE0;
  if (!qword_1ED39CEE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E2B0, &type metadata for LayeredMediaEffects.Motion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CEE0);
  }
  return result;
}

unint64_t sub_1BB37F594()
{
  unint64_t result;

  result = qword_1EF2C21C8;
  if (!qword_1EF2C21C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E1D0, &type metadata for LayeredMediaEffects.Parallax.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C21C8);
  }
  return result;
}

unint64_t sub_1BB37F5DC()
{
  unint64_t result;

  result = qword_1EF2C21D0;
  if (!qword_1EF2C21D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E1F8, &type metadata for LayeredMediaEffects.Parallax.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C21D0);
  }
  return result;
}

uint64_t sub_1BB37F620(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F756E69746E6F63 && a2 == 0xEA00000000007375;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x647574696C706D61 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void FeedItemPrefetcher.prefetch(with:in:at:)(void **a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  double Height;
  void *v27;
  id v28[2];
  CGRect v29;
  CGRect v30;

  v3 = v2;
  v6 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FeedBannerAdViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  if ((unint64_t)*a1 >> 60 == 3)
  {
    v28[0] = a2;
    sub_1BA64109C();
    v13 = swift_projectBox();
    sub_1BA4C2DD8(v13, (uint64_t)v11, type metadata accessor for FeedBannerAdViewLayout.Context);
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v14 = (void *)qword_1ED476858;
    sub_1BA7AA598();
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
    v16 = v14;
    v17 = sub_1BB872178();
    v19 = v18;
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v15 + 32) = v17;
    *(_QWORD *)(v15 + 40) = v19;
    v20 = sub_1BB87330C();
    sub_1BB86EF44("Prefetching banner ad view for placement=%{public}@", 51, 2, &dword_1BA493000, v16, v20, v15);

    swift_bridgeObjectRelease();
    v21 = v3[7];
    __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
    v22 = sub_1BB872178();
    (*(void (**)(uint64_t))(v21 + 16))(v22);
    swift_bridgeObjectRelease();
    v23 = (void *)sub_1BB86CB8C();
    v24 = v28[0];
    v25 = objc_msgSend(v28[0], sel_layoutAttributesForItemAtIndexPath_, v23);

    sub_1BB8719B0();
    sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
    v28[1] = v12;
    FeedItemLayoutAttributes.frame.getter();
    CGRectGetWidth(v29);
    objc_msgSend(v24, sel_bounds);
    Height = CGRectGetHeight(v30);
    if (v25)
      objc_msgSend(v25, sel_frame, Height);
    v27 = (void *)sub_1BB871EB4();

    swift_release();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FeedBannerAdViewLayout.Context);
  }
}

uint64_t FeedItemPrefetcher.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t FeedItemPrefetcher.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

void sub_1BB37FA60(void **a1, void *a2)
{
  FeedItemPrefetcher.prefetch(with:in:at:)(a1, a2);
}

uint64_t dispatch thunk of FeedItemPrefetcherType.prefetch(with:in:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for FeedItemPrefetcher()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB37FA94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for FormatContentSubgroupFilterContext();
  if (*(_QWORD *)(v0 + *(int *)(v1 + 28)))
  {
    ObjectType = swift_getObjectType();
    v3 = sub_1BA781D28(0x2D70756F7267, 0xE600000000000000, ObjectType);
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  sub_1BB1741A4(v0 + *(int *)(v1 + 20), (uint64_t)&v12);
  v4 = v13;
  if (v13)
  {
    v5 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, v13);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(v0, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  else
  {
    sub_1BB17423C((uint64_t)&v12);
    v6 = MEMORY[0x1E0DEE9E8];
  }
  v7 = v3[2];
  if (v7)
  {
    v8 = v3 + 5;
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(&v12, v9, v10);
      swift_bridgeObjectRelease();
      v8 += 2;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t type metadata accessor for FormatContentSubgroupFilterContext()
{
  uint64_t result;

  result = qword_1ED3CE328;
  if (!qword_1ED3CE328)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1BB37FC0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  id v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  void *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  id v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int *v63;
  uint64_t v64;
  unsigned int (*v65)(char *, uint64_t, int *);
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  void (*v80)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  id v100;
  id v101;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;
  _BYTE *__dsta;
  _QWORD *v111;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = (int *)type metadata accessor for FormatContent(0);
    v8 = v7[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C8B0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = v7[6];
    v14 = (_QWORD *)((char *)v4 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = v7[7];
    v18 = (_QWORD *)((char *)v4 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v7[8];
    v22 = (_QWORD *)((char *)v4 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = v7[9];
    v26 = (_QWORD *)((char *)v4 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v7[10];
    __dst = (char *)v4 + v29;
    v111 = a2;
    v30 = (char *)a2 + v29;
    v31 = sub_1BB871E24();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33(v30, 1, v31))
    {
      sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
    }
    *(_QWORD *)((char *)v4 + v7[11]) = *(_QWORD *)((char *)v111 + v7[11]);
    *(_QWORD *)((char *)v4 + v7[12]) = *(_QWORD *)((char *)v111 + v7[12]);
    *(_QWORD *)((char *)v4 + v7[13]) = *(_QWORD *)((char *)v111 + v7[13]);
    *(_QWORD *)((char *)v4 + v7[14]) = *(_QWORD *)((char *)v111 + v7[14]);
    *(_QWORD *)((char *)v4 + v7[15]) = *(_QWORD *)((char *)v111 + v7[15]);
    *(_QWORD *)((char *)v4 + v7[16]) = *(_QWORD *)((char *)v111 + v7[16]);
    *(_QWORD *)((char *)v4 + v7[17]) = *(_QWORD *)((char *)v111 + v7[17]);
    v36 = *(int *)(a3 + 20);
    v37 = (char *)v4 + v36;
    v38 = (char *)v111 + v36;
    v39 = *(_QWORD *)((char *)v111 + v36 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39)
    {
      v40 = *((_QWORD *)v38 + 4);
      *((_QWORD *)v37 + 3) = v39;
      *((_QWORD *)v37 + 4) = v40;
      (**(void (***)(char *, char *, uint64_t))(v39 - 8))(v37, v38, v39);
    }
    else
    {
      v41 = *((_OWORD *)v38 + 1);
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v41;
      *((_QWORD *)v37 + 4) = *((_QWORD *)v38 + 4);
    }
    *((_QWORD *)v37 + 5) = *((_QWORD *)v38 + 5);
    v37[48] = v38[48];
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    v107 = type metadata accessor for FormatServiceOptions();
    __dsta = v37;
    v42 = *(int *)(v107 + 40);
    v43 = &v37[v42];
    v44 = &v38[v42];
    v45 = *(void **)&v38[v42];
    if (v45)
    {
      *(_QWORD *)v43 = v45;
      *((_DWORD *)v43 + 2) = *((_DWORD *)v44 + 2);
      v46 = *((_QWORD *)v44 + 3);
      *((_QWORD *)v43 + 2) = *((_QWORD *)v44 + 2);
      *((_QWORD *)v43 + 3) = v46;
      v47 = v44 + 32;
      v48 = *((_QWORD *)v44 + 5);
      v49 = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((unint64_t)(v48 - 1) >= 3)
      {
        *((_QWORD *)v43 + 4) = *v47;
        *((_QWORD *)v43 + 5) = v48;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v43 + 2) = *(_OWORD *)v47;
      }
      v43[48] = v44[48];
      v53 = (void *)*((_QWORD *)v44 + 7);
      v54 = *((_QWORD *)v44 + 8);
      *((_QWORD *)v43 + 7) = v53;
      *((_QWORD *)v43 + 8) = v54;
      *((_QWORD *)v43 + 9) = *((_QWORD *)v44 + 9);
      v55 = *(_OWORD *)(v44 + 104);
      *(_OWORD *)(v43 + 104) = v55;
      v56 = v55;
      v57 = **(void (***)(char *, char *, uint64_t))(v55 - 8);
      v58 = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v43 + 80, v44 + 80, v56);
    }
    else
    {
      v50 = *((_OWORD *)v44 + 5);
      *((_OWORD *)v43 + 4) = *((_OWORD *)v44 + 4);
      *((_OWORD *)v43 + 5) = v50;
      *((_OWORD *)v43 + 6) = *((_OWORD *)v44 + 6);
      *((_QWORD *)v43 + 14) = *((_QWORD *)v44 + 14);
      v51 = *((_OWORD *)v44 + 1);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v51;
      v52 = *((_OWORD *)v44 + 3);
      *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
      *((_OWORD *)v43 + 3) = v52;
    }
    v59 = *((_QWORD *)v44 + 16);
    *((_QWORD *)v43 + 15) = *((_QWORD *)v44 + 15);
    *((_QWORD *)v43 + 16) = v59;
    *((_QWORD *)v43 + 17) = *((_QWORD *)v44 + 17);
    *((_WORD *)v43 + 72) = *((_WORD *)v44 + 72);
    v60 = *(int *)(type metadata accessor for FormatTransformData() + 40);
    v61 = &v43[v60];
    v62 = &v44[v60];
    v63 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
    v64 = *((_QWORD *)v63 - 1);
    v65 = *(unsigned int (**)(char *, uint64_t, int *))(v64 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v65(v62, 1, v63))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      v68 = a3;
      v67 = v111;
      v69 = (int *)v107;
    }
    else
    {
      v106 = v64;
      *(_QWORD *)v61 = *(_QWORD *)v62;
      v61[8] = v62[8];
      *((_QWORD *)v61 + 2) = *((_QWORD *)v62 + 2);
      v61[24] = v62[24];
      v70 = v63[6];
      v71 = &v61[v70];
      v72 = &v62[v70];
      v73 = type metadata accessor for FeedGroupBundleArticleQuotas();
      v74 = *(_QWORD *)(v73 - 8);
      v67 = v111;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        v76 = *((_QWORD *)v72 + 1);
        *(_QWORD *)v71 = *(_QWORD *)v72;
        *((_QWORD *)v71 + 1) = v76;
        v77 = *(int *)(v73 + 24);
        v104 = &v72[v77];
        v105 = &v71[v77];
        v78 = v71;
        v79 = sub_1BB86D078();
        v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16);
        swift_bridgeObjectRetain();
        v103(v105, v104, v79);
        *(_QWORD *)((char *)v78 + *(int *)(v73 + 28)) = *(_QWORD *)&v72[*(int *)(v73 + 28)];
        v80 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v74 + 56);
        swift_bridgeObjectRetain();
        v80(v78, 0, 1, v73);
        v67 = v111;
      }
      v81 = v63[7];
      v82 = &v61[v81];
      v83 = &v62[v81];
      *(_QWORD *)v82 = *(_QWORD *)v83;
      v82[8] = v83[8];
      v84 = v63[8];
      v85 = &v61[v84];
      v86 = &v62[v84];
      v85[8] = v86[8];
      *(_QWORD *)v85 = *(_QWORD *)v86;
      v87 = v63[9];
      v88 = &v61[v87];
      v89 = &v62[v87];
      *(_QWORD *)v88 = *(_QWORD *)v89;
      v88[8] = v89[8];
      v90 = v63[10];
      v91 = &v61[v90];
      v92 = &v62[v90];
      v93 = *((_QWORD *)v92 + 4);
      if (v93 == 1)
      {
        v94 = *((_OWORD *)v92 + 1);
        *(_OWORD *)v91 = *(_OWORD *)v92;
        *((_OWORD *)v91 + 1) = v94;
        *((_QWORD *)v91 + 4) = *((_QWORD *)v92 + 4);
      }
      else
      {
        *(_QWORD *)v91 = *(_QWORD *)v92;
        v91[8] = v92[8];
        *((_QWORD *)v91 + 2) = *((_QWORD *)v92 + 2);
        v91[24] = v92[24];
        *((_QWORD *)v91 + 4) = v93;
        swift_bridgeObjectRetain();
      }
      v68 = a3;
      v69 = (int *)v107;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v106 + 56))(v61, 0, 1, v63);
    }
    *(_QWORD *)&__dsta[v69[11]] = *(_QWORD *)&v38[v69[11]];
    v95 = v69[12];
    v96 = *(void **)&v38[v95];
    *(_QWORD *)&__dsta[v95] = v96;
    v97 = v69[13];
    v98 = *(void **)&v38[v97];
    *(_QWORD *)&__dsta[v97] = v98;
    __dsta[v69[14]] = v38[v69[14]];
    *(_QWORD *)&__dsta[v69[15]] = *(_QWORD *)&v38[v69[15]];
    v99 = *(int *)(v68 + 28);
    *(_QWORD *)((char *)v4 + *(int *)(v68 + 24)) = *(_QWORD *)((char *)v67 + *(int *)(v68 + 24));
    *(_QWORD *)((char *)v4 + v99) = *(_QWORD *)((char *)v67 + v99);
    swift_bridgeObjectRetain();
    v100 = v96;
    v101 = v98;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  return v4;
}

uint64_t sub_1BB3802C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  swift_bridgeObjectRelease();
  v4 = type metadata accessor for FormatContent(0);
  v5 = a1 + *(int *)(v4 + 20);
  v6 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(v4 + 40);
  v8 = sub_1BB871E24();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + *(int *)(a2 + 20);
  if (*(_QWORD *)(v10 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 20));
  v11 = (int *)type metadata accessor for FormatServiceOptions();
  v12 = v10 + v11[10];
  if (*(_QWORD *)v12)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v12 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v12 + 80);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v12 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v14 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v15 = v13 + *(int *)(v14 + 24);
    v16 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
    {
      swift_bridgeObjectRelease();
      v17 = v15 + *(int *)(v16 + 24);
      v18 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v13 + *(int *)(v14 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

_QWORD *sub_1BB3805A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  void *v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  id v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int *v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, int *);
  uint64_t v64;
  _QWORD *v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  void (*v78)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  id v98;
  id v99;
  void (*v101)(char *, char *, uint64_t);
  char *v102;
  char *v103;
  uint64_t v104;
  char *__dst;
  int *__dsta;
  _QWORD *v107;
  _QWORD *v109;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = (int *)type metadata accessor for FormatContent(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = v6[6];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v6[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v6[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = v6[9];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = v6[10];
  __dst = (char *)a1 + v28;
  v107 = a1;
  v109 = a2;
  v29 = (char *)a2 + v28;
  v30 = sub_1BB871E24();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v29, 1, v30))
  {
    sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
    memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  *(_QWORD *)((char *)v107 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
  *(_QWORD *)((char *)v107 + v6[12]) = *(_QWORD *)((char *)a2 + v6[12]);
  *(_QWORD *)((char *)v107 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
  *(_QWORD *)((char *)v107 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
  *(_QWORD *)((char *)v107 + v6[15]) = *(_QWORD *)((char *)a2 + v6[15]);
  *(_QWORD *)((char *)v107 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
  *(_QWORD *)((char *)v107 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  v34 = a3[5];
  v35 = (char *)v107 + v34;
  v36 = (char *)a2 + v34;
  v37 = *(_QWORD *)((char *)a2 + v34 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37)
  {
    v38 = *((_QWORD *)v36 + 4);
    *((_QWORD *)v35 + 3) = v37;
    *((_QWORD *)v35 + 4) = v38;
    (**(void (***)(char *, char *, uint64_t))(v37 - 8))(v35, v36, v37);
  }
  else
  {
    v39 = *((_OWORD *)v36 + 1);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v39;
    *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
  }
  *((_QWORD *)v35 + 5) = *((_QWORD *)v36 + 5);
  v35[48] = v36[48];
  *(_OWORD *)(v35 + 56) = *(_OWORD *)(v36 + 56);
  *(_OWORD *)(v35 + 72) = *(_OWORD *)(v36 + 72);
  __dsta = (int *)type metadata accessor for FormatServiceOptions();
  v40 = __dsta[10];
  v41 = &v35[v40];
  v42 = &v36[v40];
  v43 = *(void **)&v36[v40];
  if (v43)
  {
    *(_QWORD *)v41 = v43;
    *((_DWORD *)v41 + 2) = *((_DWORD *)v42 + 2);
    v44 = *((_QWORD *)v42 + 3);
    *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
    *((_QWORD *)v41 + 3) = v44;
    v45 = v42 + 32;
    v46 = *((_QWORD *)v42 + 5);
    v47 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v46 - 1) >= 3)
    {
      *((_QWORD *)v41 + 4) = *v45;
      *((_QWORD *)v41 + 5) = v46;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v41 + 2) = *(_OWORD *)v45;
    }
    v41[48] = v42[48];
    v51 = (void *)*((_QWORD *)v42 + 7);
    v52 = *((_QWORD *)v42 + 8);
    *((_QWORD *)v41 + 7) = v51;
    *((_QWORD *)v41 + 8) = v52;
    *((_QWORD *)v41 + 9) = *((_QWORD *)v42 + 9);
    v53 = *(_OWORD *)(v42 + 104);
    *(_OWORD *)(v41 + 104) = v53;
    v54 = v53;
    v55 = **(void (***)(char *, char *, uint64_t))(v53 - 8);
    v56 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v55(v41 + 80, v42 + 80, v54);
  }
  else
  {
    v48 = *((_OWORD *)v42 + 5);
    *((_OWORD *)v41 + 4) = *((_OWORD *)v42 + 4);
    *((_OWORD *)v41 + 5) = v48;
    *((_OWORD *)v41 + 6) = *((_OWORD *)v42 + 6);
    *((_QWORD *)v41 + 14) = *((_QWORD *)v42 + 14);
    v49 = *((_OWORD *)v42 + 1);
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *((_OWORD *)v41 + 1) = v49;
    v50 = *((_OWORD *)v42 + 3);
    *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
    *((_OWORD *)v41 + 3) = v50;
  }
  v57 = *((_QWORD *)v42 + 16);
  *((_QWORD *)v41 + 15) = *((_QWORD *)v42 + 15);
  *((_QWORD *)v41 + 16) = v57;
  *((_QWORD *)v41 + 17) = *((_QWORD *)v42 + 17);
  *((_WORD *)v41 + 72) = *((_WORD *)v42 + 72);
  v58 = *(int *)(type metadata accessor for FormatTransformData() + 40);
  v59 = &v41[v58];
  v60 = &v42[v58];
  v61 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v62 = *((_QWORD *)v61 - 1);
  v63 = *(unsigned int (**)(char *, uint64_t, int *))(v62 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v63(v60, 1, v61))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    v66 = __dsta;
    v65 = v107;
  }
  else
  {
    v104 = v62;
    *(_QWORD *)v59 = *(_QWORD *)v60;
    v59[8] = v60[8];
    *((_QWORD *)v59 + 2) = *((_QWORD *)v60 + 2);
    v59[24] = v60[24];
    v67 = v61[6];
    v68 = &v59[v67];
    v69 = &v60[v67];
    v70 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v71 = *(_QWORD *)(v70 - 8);
    v72 = v59;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      v74 = *((_QWORD *)v69 + 1);
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *((_QWORD *)v68 + 1) = v74;
      v75 = *(int *)(v70 + 24);
      v102 = &v69[v75];
      v103 = &v68[v75];
      v76 = v68;
      v77 = sub_1BB86D078();
      v101 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
      swift_bridgeObjectRetain();
      v101(v103, v102, v77);
      *(_QWORD *)((char *)v76 + *(int *)(v70 + 28)) = *(_QWORD *)&v69[*(int *)(v70 + 28)];
      v78 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v71 + 56);
      swift_bridgeObjectRetain();
      v78(v76, 0, 1, v70);
    }
    v79 = v61[7];
    v80 = (char *)v72 + v79;
    v81 = &v60[v79];
    *(_QWORD *)v80 = *(_QWORD *)v81;
    v80[8] = v81[8];
    v82 = v61[8];
    v83 = (char *)v72 + v82;
    v84 = &v60[v82];
    v83[8] = v84[8];
    *(_QWORD *)v83 = *(_QWORD *)v84;
    v85 = v61[9];
    v86 = (char *)v72 + v85;
    v87 = &v60[v85];
    *(_QWORD *)v86 = *(_QWORD *)v87;
    v86[8] = v87[8];
    v88 = v61[10];
    v89 = (char *)v72 + v88;
    v90 = &v60[v88];
    v91 = *((_QWORD *)v90 + 4);
    if (v91 == 1)
    {
      v92 = *((_OWORD *)v90 + 1);
      *(_OWORD *)v89 = *(_OWORD *)v90;
      *((_OWORD *)v89 + 1) = v92;
      *((_QWORD *)v89 + 4) = *((_QWORD *)v90 + 4);
    }
    else
    {
      *(_QWORD *)v89 = *(_QWORD *)v90;
      v89[8] = v90[8];
      *((_QWORD *)v89 + 2) = *((_QWORD *)v90 + 2);
      v89[24] = v90[24];
      *((_QWORD *)v89 + 4) = v91;
      swift_bridgeObjectRetain();
    }
    v66 = __dsta;
    v65 = v107;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v104 + 56))(v72, 0, 1, v61);
  }
  *(_QWORD *)&v35[v66[11]] = *(_QWORD *)&v36[v66[11]];
  v93 = v66[12];
  v94 = *(void **)&v36[v93];
  *(_QWORD *)&v35[v93] = v94;
  v95 = v66[13];
  v96 = *(void **)&v36[v95];
  *(_QWORD *)&v35[v95] = v96;
  v35[v66[14]] = v36[v66[14]];
  *(_QWORD *)&v35[v66[15]] = *(_QWORD *)&v36[v66[15]];
  v97 = a3[7];
  *(_QWORD *)((char *)v65 + a3[6]) = *(_QWORD *)((char *)v109 + a3[6]);
  *(_QWORD *)((char *)v65 + v97) = *(_QWORD *)((char *)v109 + v97);
  swift_bridgeObjectRetain();
  v98 = v94;
  v99 = v96;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return v65;
}

_QWORD *sub_1BB380C2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  void *v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  void *v61;
  uint64_t v62;
  void (*v63)(uint64_t, char *, uint64_t);
  id v64;
  void *v65;
  void *v66;
  id v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int *v71;
  uint64_t v72;
  uint64_t (*v73)(char *, uint64_t, int *);
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t (*v91)(char *, uint64_t, uint64_t);
  int v92;
  uint64_t v93;
  size_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  void *v118;
  id v119;
  uint64_t v120;
  void *v121;
  void *v122;
  id v123;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  void (*v157)(char *, char *, uint64_t);
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  _QWORD *v167;
  void (*v168)(char *, _QWORD, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  int *v171;
  uint64_t v172;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for FormatContent(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v6[7];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v6[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v6[9];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v6[10];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_1BB871E24();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
LABEL_6:
    sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
LABEL_7:
  *(_QWORD *)((char *)a1 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[12]) = *(_QWORD *)((char *)a2 + v6[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[15]) = *(_QWORD *)((char *)a2 + v6[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = *(int *)(a3 + 20);
  v33 = (uint64_t)a1 + v32;
  v34 = (_QWORD *)((char *)a2 + v32);
  v35 = *(_QWORD *)((char *)a2 + v32 + 24);
  if (*(_QWORD *)((char *)a1 + v32 + 24))
  {
    if (v35)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v33, v34);
      goto LABEL_14;
    }
    __swift_destroy_boxed_opaque_existential_1(v33);
  }
  else if (v35)
  {
    *(_QWORD *)(v33 + 24) = v35;
    *(_QWORD *)(v33 + 32) = v34[4];
    (**(void (***)(uint64_t, char *))(v35 - 8))(v33, (char *)v34);
    goto LABEL_14;
  }
  v36 = *(_OWORD *)v34;
  v37 = *((_OWORD *)v34 + 1);
  *(_QWORD *)(v33 + 32) = v34[4];
  *(_OWORD *)v33 = v36;
  *(_OWORD *)(v33 + 16) = v37;
LABEL_14:
  v38 = v34[5];
  *(_BYTE *)(v33 + 48) = *((_BYTE *)v34 + 48);
  *(_QWORD *)(v33 + 40) = v38;
  *(_QWORD *)(v33 + 56) = v34[7];
  *(_QWORD *)(v33 + 64) = v34[8];
  *(_QWORD *)(v33 + 72) = v34[9];
  *(_QWORD *)(v33 + 80) = v34[10];
  v39 = type metadata accessor for FormatServiceOptions();
  v40 = *(int *)(v39 + 40);
  v41 = v33 + v40;
  v42 = (char *)v34 + v40;
  v43 = *(void **)(v33 + v40);
  v44 = *(void **)((char *)v34 + v40);
  v171 = (int *)v39;
  v172 = a3;
  if (v43)
  {
    if (!v44)
    {
      sub_1BAFD9668(v41);
      v49 = *((_OWORD *)v42 + 3);
      v51 = *(_OWORD *)v42;
      v50 = *((_OWORD *)v42 + 1);
      *(_OWORD *)(v41 + 32) = *((_OWORD *)v42 + 2);
      *(_OWORD *)(v41 + 48) = v49;
      *(_OWORD *)v41 = v51;
      *(_OWORD *)(v41 + 16) = v50;
      v53 = *((_OWORD *)v42 + 5);
      v52 = *((_OWORD *)v42 + 6);
      v54 = *((_OWORD *)v42 + 4);
      *(_QWORD *)(v41 + 112) = *((_QWORD *)v42 + 14);
      *(_OWORD *)(v41 + 80) = v53;
      *(_OWORD *)(v41 + 96) = v52;
      *(_OWORD *)(v41 + 64) = v54;
      goto LABEL_32;
    }
    *(_QWORD *)v41 = v44;
    v45 = v44;

    *(_BYTE *)(v41 + 8) = v42[8];
    *(_BYTE *)(v41 + 9) = v42[9];
    *(_BYTE *)(v41 + 10) = v42[10];
    *(_BYTE *)(v41 + 11) = v42[11];
    *(_QWORD *)(v41 + 16) = *((_QWORD *)v42 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v41 + 24) = *((_QWORD *)v42 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v46 = *((_QWORD *)v42 + 5) - 1;
    if ((unint64_t)(*(_QWORD *)(v41 + 40) - 1) >= 3)
    {
      if (v46 >= 3)
      {
        *(_QWORD *)(v41 + 32) = *((_QWORD *)v42 + 4);
        *(_QWORD *)(v41 + 40) = *((_QWORD *)v42 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      sub_1BA4A2E80(v41 + 32, (uint64_t (*)(_QWORD))sub_1BA76D834);
    }
    else if (v46 >= 3)
    {
      *(_QWORD *)(v41 + 32) = *((_QWORD *)v42 + 4);
      *(_QWORD *)(v41 + 40) = *((_QWORD *)v42 + 5);
      swift_bridgeObjectRetain();
LABEL_31:
      *(_BYTE *)(v41 + 48) = v42[48];
      v65 = *(void **)(v41 + 56);
      v66 = (void *)*((_QWORD *)v42 + 7);
      *(_QWORD *)(v41 + 56) = v66;
      v67 = v66;

      *(_QWORD *)(v41 + 64) = *((_QWORD *)v42 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v41 + 72) = *((_QWORD *)v42 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(v41 + 80), (uint64_t *)v42 + 10);
      goto LABEL_32;
    }
    *(_OWORD *)(v41 + 32) = *((_OWORD *)v42 + 2);
    goto LABEL_31;
  }
  if (v44)
  {
    *(_QWORD *)v41 = v44;
    *(_BYTE *)(v41 + 8) = v42[8];
    *(_BYTE *)(v41 + 9) = v42[9];
    *(_BYTE *)(v41 + 10) = v42[10];
    *(_BYTE *)(v41 + 11) = v42[11];
    *(_QWORD *)(v41 + 16) = *((_QWORD *)v42 + 2);
    *(_QWORD *)(v41 + 24) = *((_QWORD *)v42 + 3);
    v47 = *((_QWORD *)v42 + 5) - 1;
    v48 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v47 >= 3)
    {
      *(_QWORD *)(v41 + 32) = *((_QWORD *)v42 + 4);
      *(_QWORD *)(v41 + 40) = *((_QWORD *)v42 + 5);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v41 + 32) = *((_OWORD *)v42 + 2);
    }
    *(_BYTE *)(v41 + 48) = v42[48];
    v61 = (void *)*((_QWORD *)v42 + 7);
    *(_QWORD *)(v41 + 56) = v61;
    *(_QWORD *)(v41 + 64) = *((_QWORD *)v42 + 8);
    *(_QWORD *)(v41 + 72) = *((_QWORD *)v42 + 9);
    v62 = *((_QWORD *)v42 + 13);
    *(_QWORD *)(v41 + 104) = v62;
    *(_QWORD *)(v41 + 112) = *((_QWORD *)v42 + 14);
    v63 = **(void (***)(uint64_t, char *, uint64_t))(v62 - 8);
    v64 = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v63(v41 + 80, v42 + 80, v62);
  }
  else
  {
    v55 = *(_OWORD *)v42;
    v56 = *((_OWORD *)v42 + 1);
    v57 = *((_OWORD *)v42 + 3);
    *(_OWORD *)(v41 + 32) = *((_OWORD *)v42 + 2);
    *(_OWORD *)(v41 + 48) = v57;
    *(_OWORD *)v41 = v55;
    *(_OWORD *)(v41 + 16) = v56;
    v58 = *((_OWORD *)v42 + 4);
    v59 = *((_OWORD *)v42 + 5);
    v60 = *((_OWORD *)v42 + 6);
    *(_QWORD *)(v41 + 112) = *((_QWORD *)v42 + 14);
    *(_OWORD *)(v41 + 80) = v59;
    *(_OWORD *)(v41 + 96) = v60;
    *(_OWORD *)(v41 + 64) = v58;
  }
LABEL_32:
  *(_QWORD *)(v41 + 120) = *((_QWORD *)v42 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v41 + 128) = *((_QWORD *)v42 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v41 + 136) = *((_QWORD *)v42 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v41 + 144) = v42[144];
  *(_BYTE *)(v41 + 145) = v42[145];
  v68 = *(int *)(type metadata accessor for FormatTransformData() + 40);
  v69 = (char *)(v41 + v68);
  v70 = &v42[v68];
  v71 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v72 = *((_QWORD *)v71 - 1);
  v73 = *(uint64_t (**)(char *, uint64_t, int *))(v72 + 48);
  v74 = v73(v69, 1, v71);
  v75 = v73(v70, 1, v71);
  if (!v74)
  {
    v77 = v172;
    if (v75)
    {
      sub_1BA4A2E80((uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for FeedPersonalizationClusteringRules);
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      goto LABEL_37;
    }
    v86 = *(_QWORD *)v70;
    v69[8] = v70[8];
    *(_QWORD *)v69 = v86;
    v87 = *((_QWORD *)v70 + 2);
    v69[24] = v70[24];
    *((_QWORD *)v69 + 2) = v87;
    v88 = v71[6];
    v89 = &v69[v88];
    __dsta = &v70[v88];
    v90 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v161 = *(_QWORD *)(v90 - 8);
    v91 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v161 + 48);
    v167 = v89;
    LODWORD(v89) = v91(v89, 1, v90);
    v164 = v90;
    v92 = v91(__dsta, 1, v90);
    if ((_DWORD)v89)
    {
      if (v92)
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        v94 = *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64);
        v95 = v167;
LABEL_51:
        memcpy(v95, __dsta, v94);
        goto LABEL_54;
      }
      *v167 = *(_QWORD *)__dsta;
      v167[1] = *((_QWORD *)__dsta + 1);
      v126 = *(int *)(v90 + 24);
      v158 = &__dsta[v126];
      v159 = (char *)v167 + v126;
      v127 = sub_1BB86D078();
      v155 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16);
      swift_bridgeObjectRetain();
      v155(v159, v158, v127);
      *(_QWORD *)((char *)v167 + *(int *)(v90 + 28)) = *(_QWORD *)&__dsta[*(int *)(v90 + 28)];
      v128 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v161 + 56);
      swift_bridgeObjectRetain();
      v128(v167, 0, 1, v164);
    }
    else
    {
      if (v92)
      {
        sub_1BA4A2E80((uint64_t)v167, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        v94 = *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64);
        v95 = v167;
        goto LABEL_51;
      }
      *v167 = *(_QWORD *)__dsta;
      v167[1] = *((_QWORD *)__dsta + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v129 = *(int *)(v90 + 24);
      v160 = &__dsta[v129];
      v163 = (char *)v167 + v129;
      v130 = sub_1BB86D078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 24))(v163, v160, v130);
      *(_QWORD *)((char *)v167 + *(int *)(v90 + 28)) = *(_QWORD *)&__dsta[*(int *)(v90 + 28)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
LABEL_54:
    v77 = v172;
    v131 = v71[7];
    v132 = &v69[v131];
    v133 = &v70[v131];
    v134 = *(_QWORD *)v133;
    v132[8] = v133[8];
    *(_QWORD *)v132 = v134;
    v135 = v71[8];
    v136 = &v69[v135];
    v137 = &v70[v135];
    v138 = *(_QWORD *)v137;
    v136[8] = v137[8];
    *(_QWORD *)v136 = v138;
    v139 = v71[9];
    v140 = &v69[v139];
    v141 = &v70[v139];
    v142 = *(_QWORD *)v141;
    v140[8] = v141[8];
    *(_QWORD *)v140 = v142;
    v143 = v71[10];
    v144 = (uint64_t)&v69[v143];
    v145 = &v70[v143];
    v146 = *(_QWORD *)&v70[v143 + 32];
    if (*(_QWORD *)(v144 + 32) == 1)
    {
      if (v146 == 1)
      {
        v147 = *(_OWORD *)v145;
        v148 = *((_OWORD *)v145 + 1);
        *(_QWORD *)(v144 + 32) = *((_QWORD *)v145 + 4);
        *(_OWORD *)v144 = v147;
        *(_OWORD *)(v144 + 16) = v148;
      }
      else
      {
        v151 = *(_QWORD *)v145;
        *(_BYTE *)(v144 + 8) = v145[8];
        *(_QWORD *)v144 = v151;
        v152 = *((_QWORD *)v145 + 2);
        *(_BYTE *)(v144 + 24) = v145[24];
        *(_QWORD *)(v144 + 16) = v152;
        *(_QWORD *)(v144 + 32) = *((_QWORD *)v145 + 4);
        swift_bridgeObjectRetain();
      }
    }
    else if (v146 == 1)
    {
      sub_1BAF10C4C(v144);
      v149 = *((_QWORD *)v145 + 4);
      v150 = *((_OWORD *)v145 + 1);
      *(_OWORD *)v144 = *(_OWORD *)v145;
      *(_OWORD *)(v144 + 16) = v150;
      *(_QWORD *)(v144 + 32) = v149;
    }
    else
    {
      v153 = *(_QWORD *)v145;
      *(_BYTE *)(v144 + 8) = v145[8];
      *(_QWORD *)v144 = v153;
      v154 = *((_QWORD *)v145 + 2);
      *(_BYTE *)(v144 + 24) = v145[24];
      *(_QWORD *)(v144 + 16) = v154;
      *(_QWORD *)(v144 + 32) = *((_QWORD *)v145 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    goto LABEL_37;
  }
  if (v75)
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    v77 = v172;
LABEL_37:
    v79 = v171;
    goto LABEL_48;
  }
  v80 = *(_QWORD *)v70;
  v69[8] = v70[8];
  *(_QWORD *)v69 = v80;
  v81 = *((_QWORD *)v70 + 2);
  v69[24] = v70[24];
  *((_QWORD *)v69 + 2) = v81;
  v82 = v71[6];
  __dst = &v69[v82];
  v83 = &v70[v82];
  v84 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v166 = *(_QWORD *)(v84 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(v83, 1, v84))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(__dst, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    *(_QWORD *)__dst = *(_QWORD *)v83;
    *((_QWORD *)__dst + 1) = *((_QWORD *)v83 + 1);
    v96 = *(int *)(v84 + 24);
    v162 = &v83[v96];
    v165 = &__dst[v96];
    v156 = sub_1BB86D078();
    v157 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16);
    swift_bridgeObjectRetain();
    v157(v165, v162, v156);
    *(_QWORD *)&__dst[*(int *)(v84 + 28)] = *(_QWORD *)&v83[*(int *)(v84 + 28)];
    v168 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v166 + 56);
    swift_bridgeObjectRetain();
    v168(__dst, 0, 1, v84);
  }
  v97 = v71[7];
  v98 = &v69[v97];
  v99 = &v70[v97];
  v100 = *(_QWORD *)v99;
  v98[8] = v99[8];
  *(_QWORD *)v98 = v100;
  v101 = v71[8];
  v102 = &v69[v101];
  v103 = &v70[v101];
  v104 = *(_QWORD *)v103;
  v102[8] = v103[8];
  *(_QWORD *)v102 = v104;
  v105 = v71[9];
  v106 = &v69[v105];
  v107 = &v70[v105];
  v108 = *(_QWORD *)v107;
  v106[8] = v107[8];
  *(_QWORD *)v106 = v108;
  v109 = v71[10];
  v110 = &v69[v109];
  v111 = &v70[v109];
  v79 = v171;
  if (*((_QWORD *)v111 + 4) == 1)
  {
    v112 = *(_OWORD *)v111;
    v113 = *((_OWORD *)v111 + 1);
    *((_QWORD *)v110 + 4) = *((_QWORD *)v111 + 4);
    *(_OWORD *)v110 = v112;
    *((_OWORD *)v110 + 1) = v113;
  }
  else
  {
    v114 = *(_QWORD *)v111;
    v110[8] = v111[8];
    *(_QWORD *)v110 = v114;
    v115 = *((_QWORD *)v111 + 2);
    v110[24] = v111[24];
    *((_QWORD *)v110 + 2) = v115;
    *((_QWORD *)v110 + 4) = *((_QWORD *)v111 + 4);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v72 + 56))(v69, 0, 1, v71);
  v77 = v172;
LABEL_48:
  *(_QWORD *)(v33 + v79[11]) = *(uint64_t *)((char *)v34 + v79[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v116 = v79[12];
  v117 = *(void **)((char *)v34 + v116);
  v118 = *(void **)(v33 + v116);
  *(_QWORD *)(v33 + v116) = v117;
  v119 = v117;

  v120 = v79[13];
  v121 = *(void **)((char *)v34 + v120);
  v122 = *(void **)(v33 + v120);
  *(_QWORD *)(v33 + v120) = v121;
  v123 = v121;

  *(_BYTE *)(v33 + v79[14]) = *((_BYTE *)v34 + v79[14]);
  *(_QWORD *)(v33 + v79[15]) = *(uint64_t *)((char *)v34 + v79[15]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(v77 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v77 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + *(int *)(v77 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v77 + 28));
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *sub_1BB38191C(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  uint64_t v54;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  char *__dst;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for FormatContent(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  v11 = v6[10];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1BB871E24();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(_QWORD *)((char *)a1 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
  *(_QWORD *)((char *)a1 + v6[12]) = *(_QWORD *)((char *)a2 + v6[12]);
  *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
  *(_QWORD *)((char *)a1 + v6[14]) = *(_QWORD *)((char *)a2 + v6[14]);
  *(_QWORD *)((char *)a1 + v6[15]) = *(_QWORD *)((char *)a2 + v6[15]);
  *(_QWORD *)((char *)a1 + v6[16]) = *(_QWORD *)((char *)a2 + v6[16]);
  *(_QWORD *)((char *)a1 + v6[17]) = *(_QWORD *)((char *)a2 + v6[17]);
  v17 = a3[5];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_OWORD *)((char *)a2 + v17 + 16);
  *(_OWORD *)v18 = *(_OWORD *)((char *)a2 + v17);
  *((_OWORD *)v18 + 1) = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 40);
  *((_QWORD *)v18 + 4) = *(_QWORD *)((char *)a2 + v17 + 32);
  *((_QWORD *)v18 + 5) = v21;
  v18[48] = *((_BYTE *)a2 + v17 + 48);
  *(_OWORD *)(v18 + 56) = *(_OWORD *)((char *)a2 + v17 + 56);
  *(_OWORD *)(v18 + 72) = *(_OWORD *)((char *)a2 + v17 + 72);
  v22 = (int *)type metadata accessor for FormatServiceOptions();
  v23 = v22[10];
  v24 = &v18[v23];
  v25 = &v19[v23];
  v26 = *(_OWORD *)&v19[v23 + 80];
  *((_OWORD *)v24 + 4) = *(_OWORD *)&v19[v23 + 64];
  *((_OWORD *)v24 + 5) = v26;
  *((_OWORD *)v24 + 6) = *(_OWORD *)&v19[v23 + 96];
  *((_QWORD *)v24 + 14) = *(_QWORD *)&v19[v23 + 112];
  v27 = *(_OWORD *)&v19[v23 + 16];
  *(_OWORD *)v24 = *(_OWORD *)&v19[v23];
  *((_OWORD *)v24 + 1) = v27;
  v28 = *(_OWORD *)&v19[v23 + 48];
  *((_OWORD *)v24 + 2) = *(_OWORD *)&v19[v23 + 32];
  *((_OWORD *)v24 + 3) = v28;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)&v19[v23 + 120];
  *((_QWORD *)v24 + 17) = *(_QWORD *)&v19[v23 + 136];
  *((_WORD *)v24 + 72) = *(_WORD *)&v19[v23 + 144];
  v29 = *(int *)(type metadata accessor for FormatTransformData() + 40);
  v30 = &v24[v29];
  v31 = &v25[v29];
  v32 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v33 = *((_QWORD *)v32 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v59 = v33;
    v60 = a3;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
    v30[24] = v31[24];
    v35 = v32[6];
    __dst = &v30[v35];
    v36 = &v31[v35];
    v37 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v58 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v36, 1, v37))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(__dst, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)v36;
      v39 = *(int *)(v37 + 24);
      v56 = &v36[v39];
      v57 = &__dst[v39];
      v40 = sub_1BB86D078();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v57, v56, v40);
      *(_QWORD *)&__dst[*(int *)(v37 + 28)] = *(_QWORD *)&v36[*(int *)(v37 + 28)];
      (*(void (**)(void))(v58 + 56))();
    }
    v41 = v32[7];
    v42 = &v30[v41];
    v43 = &v31[v41];
    *(_QWORD *)v42 = *(_QWORD *)v43;
    v42[8] = v43[8];
    v44 = v32[8];
    v45 = &v30[v44];
    v46 = &v31[v44];
    v45[8] = v46[8];
    *(_QWORD *)v45 = *(_QWORD *)v46;
    v47 = v32[9];
    v48 = &v30[v47];
    v49 = &v31[v47];
    *(_QWORD *)v48 = *(_QWORD *)v49;
    v48[8] = v49[8];
    v50 = v32[10];
    v51 = &v30[v50];
    v52 = &v31[v50];
    v53 = *((_OWORD *)v52 + 1);
    *(_OWORD *)v51 = *(_OWORD *)v52;
    *((_OWORD *)v51 + 1) = v53;
    *((_QWORD *)v51 + 4) = *((_QWORD *)v52 + 4);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v59 + 56))(v30, 0, 1, v32);
    a3 = v60;
  }
  *(_QWORD *)&v18[v22[11]] = *(_QWORD *)&v19[v22[11]];
  *(_QWORD *)&v18[v22[12]] = *(_QWORD *)&v19[v22[12]];
  *(_QWORD *)&v18[v22[13]] = *(_QWORD *)&v19[v22[13]];
  v18[v22[14]] = v19[v22[14]];
  *(_QWORD *)&v18[v22[15]] = *(_QWORD *)&v19[v22[15]];
  v54 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v54) = *(_QWORD *)((char *)a2 + v54);
  return a1;
}

_QWORD *sub_1BB381D88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void *v49;
  _QWORD *v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  void *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int *v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, int *);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t);
  int v74;
  uint64_t v75;
  size_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  void *v98;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  __int128 v117;
  uint64_t v118;
  __int128 v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  _OWORD *__dst;
  char *__dsta;
  uint64_t v131;
  int *v132;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for FormatContent(0);
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = v7[6];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = v7[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = v7[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = v7[9];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = v7[10];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_1BB871E24();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  LODWORD(v9) = v37(v33, 1, v35);
  v38 = v37(v34, 1, v35);
  if ((_DWORD)v9)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v35);
LABEL_6:
    sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v33, v34, v35);
LABEL_7:
  *(_QWORD *)((char *)a1 + v7[11]) = *(_QWORD *)((char *)a2 + v7[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[12]) = *(_QWORD *)((char *)a2 + v7[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[13]) = *(_QWORD *)((char *)a2 + v7[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[14]) = *(_QWORD *)((char *)a2 + v7[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[15]) = *(_QWORD *)((char *)a2 + v7[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[16]) = *(_QWORD *)((char *)a2 + v7[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v7[17]) = *(_QWORD *)((char *)a2 + v7[17]);
  swift_bridgeObjectRelease();
  v40 = *(int *)(a3 + 20);
  v41 = (uint64_t)a1 + v40;
  v42 = (char *)a2 + v40;
  if (*(_QWORD *)((char *)a1 + v40 + 24))
    __swift_destroy_boxed_opaque_existential_1(v41);
  v43 = *((_OWORD *)v42 + 1);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v43;
  v44 = *((_QWORD *)v42 + 5);
  *(_QWORD *)(v41 + 32) = *((_QWORD *)v42 + 4);
  *(_QWORD *)(v41 + 40) = v44;
  *(_BYTE *)(v41 + 48) = v42[48];
  *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
  *(_QWORD *)(v41 + 72) = *((_QWORD *)v42 + 9);
  *(_QWORD *)(v41 + 80) = *((_QWORD *)v42 + 10);
  v45 = type metadata accessor for FormatServiceOptions();
  v46 = *(int *)(v45 + 40);
  v47 = v41 + v46;
  v48 = &v42[v46];
  v49 = *(void **)(v41 + v46);
  v131 = a3;
  v132 = (int *)v45;
  if (!v49)
    goto LABEL_16;
  if (!*(_QWORD *)v48)
  {
    sub_1BAFD9668(v47);
LABEL_16:
    v52 = *((_OWORD *)v48 + 5);
    *(_OWORD *)(v47 + 64) = *((_OWORD *)v48 + 4);
    *(_OWORD *)(v47 + 80) = v52;
    *(_OWORD *)(v47 + 96) = *((_OWORD *)v48 + 6);
    *(_QWORD *)(v47 + 112) = *((_QWORD *)v48 + 14);
    v53 = *((_OWORD *)v48 + 1);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v53;
    v54 = *((_OWORD *)v48 + 3);
    *(_OWORD *)(v47 + 32) = *((_OWORD *)v48 + 2);
    *(_OWORD *)(v47 + 48) = v54;
    goto LABEL_20;
  }
  *(_QWORD *)v47 = *(_QWORD *)v48;

  *(_BYTE *)(v47 + 8) = v48[8];
  *(_BYTE *)(v47 + 9) = v48[9];
  *(_BYTE *)(v47 + 10) = v48[10];
  *(_BYTE *)(v47 + 11) = v48[11];
  *(_QWORD *)(v47 + 16) = *((_QWORD *)v48 + 2);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v47 + 24) = *((_QWORD *)v48 + 3);
  swift_bridgeObjectRelease();
  v50 = v48 + 32;
  if ((unint64_t)(*(_QWORD *)(v47 + 40) - 1) >= 3)
  {
    v51 = *((_QWORD *)v48 + 5);
    if ((unint64_t)(v51 - 1) >= 3)
    {
      *(_QWORD *)(v47 + 32) = *v50;
      *(_QWORD *)(v47 + 40) = v51;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_1BA4A2E80(v47 + 32, (uint64_t (*)(_QWORD))sub_1BA76D834);
  }
  *(_OWORD *)(v47 + 32) = *(_OWORD *)v50;
LABEL_19:
  *(_BYTE *)(v47 + 48) = v48[48];
  v55 = *(void **)(v47 + 56);
  *(_QWORD *)(v47 + 56) = *((_QWORD *)v48 + 7);

  *(_QWORD *)(v47 + 64) = *((_QWORD *)v48 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v47 + 72) = *((_QWORD *)v48 + 9);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v47 + 80);
  v56 = *((_OWORD *)v48 + 6);
  *(_OWORD *)(v47 + 80) = *((_OWORD *)v48 + 5);
  *(_OWORD *)(v47 + 96) = v56;
  *(_QWORD *)(v47 + 112) = *((_QWORD *)v48 + 14);
LABEL_20:
  *(_QWORD *)(v47 + 120) = *((_QWORD *)v48 + 15);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v47 + 128) = *((_QWORD *)v48 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v47 + 136) = *((_QWORD *)v48 + 17);
  swift_bridgeObjectRelease();
  *(_WORD *)(v47 + 144) = *((_WORD *)v48 + 72);
  v57 = *(int *)(type metadata accessor for FormatTransformData() + 40);
  v58 = v47 + v57;
  v59 = &v48[v57];
  v60 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v61 = *((_QWORD *)v60 - 1);
  v62 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v61 + 48);
  v63 = v62(v58, 1, v60);
  v64 = v62((uint64_t)v59, 1, v60);
  if (v63)
  {
    if (!v64)
    {
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *(_BYTE *)(v58 + 8) = v59[8];
      *(_QWORD *)(v58 + 16) = *((_QWORD *)v59 + 2);
      *(_BYTE *)(v58 + 24) = v59[24];
      v66 = v60[6];
      __dst = (_OWORD *)(v58 + v66);
      v67 = &v59[v66];
      v68 = type metadata accessor for FeedGroupBundleArticleQuotas();
      v127 = *(_QWORD *)(v68 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v67, 1, v68))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(__dst, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        *__dst = *(_OWORD *)v67;
        v78 = *(int *)(v68 + 24);
        v124 = &v67[v78];
        v126 = (char *)__dst + v78;
        v79 = sub_1BB86D078();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v126, v124, v79);
        *(_QWORD *)((char *)__dst + *(int *)(v68 + 28)) = *(_QWORD *)&v67[*(int *)(v68 + 28)];
        (*(void (**)(void))(v127 + 56))();
      }
      v80 = v60[7];
      v81 = v58 + v80;
      v82 = &v59[v80];
      *(_QWORD *)v81 = *(_QWORD *)v82;
      *(_BYTE *)(v81 + 8) = v82[8];
      v83 = v60[8];
      v84 = v58 + v83;
      v85 = &v59[v83];
      *(_BYTE *)(v84 + 8) = v85[8];
      *(_QWORD *)v84 = *(_QWORD *)v85;
      v86 = v60[9];
      v87 = v58 + v86;
      v88 = &v59[v86];
      *(_QWORD *)v87 = *(_QWORD *)v88;
      *(_BYTE *)(v87 + 8) = v88[8];
      v89 = v60[10];
      v90 = v58 + v89;
      v91 = &v59[v89];
      v92 = *((_OWORD *)v91 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *(_OWORD *)(v90 + 16) = v92;
      *(_QWORD *)(v90 + 32) = *((_QWORD *)v91 + 4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v61 + 56))(v58, 0, 1, v60);
      goto LABEL_33;
    }
LABEL_25:
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy((void *)v58, v59, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
LABEL_33:
    v93 = v131;
LABEL_34:
    v94 = v132;
    goto LABEL_35;
  }
  if (v64)
  {
    sub_1BA4A2E80(v58, (uint64_t (*)(_QWORD))type metadata accessor for FeedPersonalizationClusteringRules);
    goto LABEL_25;
  }
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *(_BYTE *)(v58 + 8) = v59[8];
  *(_QWORD *)(v58 + 16) = *((_QWORD *)v59 + 2);
  *(_BYTE *)(v58 + 24) = v59[24];
  v70 = v60[6];
  v71 = v58 + v70;
  __dsta = &v59[v70];
  v72 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v123 = *(_QWORD *)(v72 - 8);
  v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 48);
  v128 = v71;
  LODWORD(v71) = v73(v71, 1, v72);
  v74 = v73((uint64_t)__dsta, 1, v72);
  if ((_DWORD)v71)
  {
    if (v74)
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      v76 = *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64);
      v77 = (void *)v128;
LABEL_38:
      memcpy(v77, __dsta, v76);
      goto LABEL_41;
    }
    *(_OWORD *)v128 = *(_OWORD *)__dsta;
    v101 = *(int *)(v72 + 24);
    v120 = &__dsta[v101];
    v121 = v128 + v101;
    v102 = sub_1BB86D078();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v121, v120, v102);
    *(_QWORD *)(v128 + *(int *)(v72 + 28)) = *(_QWORD *)&__dsta[*(int *)(v72 + 28)];
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v123 + 56))(v128, 0, 1, v72);
  }
  else
  {
    if (v74)
    {
      sub_1BA4A2E80(v128, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      v76 = *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64);
      v77 = (void *)v128;
      goto LABEL_38;
    }
    *(_QWORD *)v128 = *(_QWORD *)__dsta;
    *(_QWORD *)(v128 + 8) = *((_QWORD *)__dsta + 1);
    swift_bridgeObjectRelease();
    v103 = *(int *)(v72 + 24);
    v122 = &__dsta[v103];
    v125 = v128 + v103;
    v104 = sub_1BB86D078();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 40))(v125, v122, v104);
    *(_QWORD *)(v128 + *(int *)(v72 + 28)) = *(_QWORD *)&__dsta[*(int *)(v72 + 28)];
    swift_bridgeObjectRelease();
  }
LABEL_41:
  v93 = v131;
  v105 = v60[7];
  v106 = v58 + v105;
  v107 = &v59[v105];
  *(_QWORD *)v106 = *(_QWORD *)v107;
  *(_BYTE *)(v106 + 8) = v107[8];
  v108 = v60[8];
  v109 = v58 + v108;
  v110 = &v59[v108];
  *(_BYTE *)(v109 + 8) = v110[8];
  *(_QWORD *)v109 = *(_QWORD *)v110;
  v111 = v60[9];
  v112 = v58 + v111;
  v113 = &v59[v111];
  *(_QWORD *)v112 = *(_QWORD *)v113;
  *(_BYTE *)(v112 + 8) = v113[8];
  v114 = v60[10];
  v115 = v58 + v114;
  v116 = &v59[v114];
  if (*(_QWORD *)(v58 + v114 + 32) == 1)
  {
    v117 = *((_OWORD *)v116 + 1);
    *(_OWORD *)v115 = *(_OWORD *)v116;
    *(_OWORD *)(v115 + 16) = v117;
    *(_QWORD *)(v115 + 32) = *((_QWORD *)v116 + 4);
    goto LABEL_34;
  }
  v118 = *((_QWORD *)v116 + 4);
  v94 = v132;
  if (v118 == 1)
  {
    sub_1BAF10C4C(v115);
    v119 = *((_OWORD *)v116 + 1);
    *(_OWORD *)v115 = *(_OWORD *)v116;
    *(_OWORD *)(v115 + 16) = v119;
    *(_QWORD *)(v115 + 32) = *((_QWORD *)v116 + 4);
  }
  else
  {
    *(_QWORD *)v115 = *(_QWORD *)v116;
    *(_BYTE *)(v115 + 8) = v116[8];
    *(_QWORD *)(v115 + 16) = *((_QWORD *)v116 + 2);
    *(_BYTE *)(v115 + 24) = v116[24];
    *(_QWORD *)(v115 + 32) = v118;
    swift_bridgeObjectRelease();
  }
LABEL_35:
  *(_QWORD *)(v41 + v94[11]) = *(_QWORD *)&v42[v94[11]];
  swift_bridgeObjectRelease();
  v95 = v94[12];
  v96 = *(void **)(v41 + v95);
  *(_QWORD *)(v41 + v95) = *(_QWORD *)&v42[v95];

  v97 = v94[13];
  v98 = *(void **)(v41 + v97);
  *(_QWORD *)(v41 + v97) = *(_QWORD *)&v42[v97];

  *(_BYTE *)(v41 + v94[14]) = v42[v94[14]];
  *(_QWORD *)(v41 + v94[15]) = *(_QWORD *)&v42[v94[15]];
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(v93 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v93 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + *(int *)(v93 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v93 + 28));
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1BB3826FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB382708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for FormatContent(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for FormatServiceOptions();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1BB3827B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3827BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for FormatContent(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for FormatServiceOptions();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1BB382860()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FormatContent(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FormatServiceOptions();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BB3828FC(uint64_t a1, void *a2)
{
  return sub_1BB3830E4(a2);
}

void sub_1BB382924(void **a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *a1;
  v3 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image) = *a1;
  v4 = v2;

}

uint64_t sub_1BB382960(void *a1)
{
  id v1;
  void *v2;
  uint64_t v4;

  v1 = objc_msgSend(a1, sel_filePath);
  if (v1)
  {
    v2 = v1;
    sub_1BB8729A0();

    sub_1BA4AD288(0, (unint64_t *)&qword_1ED39C340, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    MEMORY[0x1E0C80A78](0);
    sub_1BA4AD288(v4, (unint64_t *)&qword_1ED39C340, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86EA58();
  }
}

void sub_1BB382A64(_QWORD *a1@<X8>)
{
  id v2;
  void *v3;
  id v4;

  v2 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithContentsOfFile_, v3);

  *a1 = v4;
}

void sub_1BB382AEC(void *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_1ED3C0B50 != -1)
    swift_once();
  v4 = sub_1BB86EFEC();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED476918);
  swift_unknownObjectRetain_n();
  v5 = sub_1BB86EFC8();
  v6 = sub_1BB8732F4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v13 = v12;
    *(_DWORD *)v7 = 136315138;
    v8 = objc_msgSend(a1, sel_identifier);
    v9 = sub_1BB8729A0();
    v11 = v10;

    sub_1BA5D2E14(v9, v11, &v13);
    sub_1BB873A8C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v5, v6, "Failed downloading asset handle for Puzzle ID: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v12, -1, -1);
    MEMORY[0x1BCCE5C38](v7, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  *a2 = 0;
}

id SharingPuzzleImageActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingPuzzleImageActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingPuzzleImageActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id SharingPuzzleImageActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v4;
  __int128 v5;
  unint64_t v6;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image))
  {
    v4 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image);
    v6 = sub_1BA49DEA8();
    *(_QWORD *)&v5 = v4;
    sub_1BA76EAE0(&v5, (_OWORD *)a1);
    return v4;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = sub_1BAFA52EC();
    *(_QWORD *)a1 = MEMORY[0x1E0DEE9B8] + 8;
    return 0;
  }
}

void SharingPuzzleImageActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  char v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  unint64_t v14;

  if (!a1)
    goto LABEL_9;
  if (sub_1BB8729A0() == 0xD000000000000026 && v5 == 0x80000001BB968360)
  {
    v6 = a1;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v7 = sub_1BB874398();
  v8 = a1;
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {

LABEL_9:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
LABEL_6:
  v9 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed36SharingPuzzleImageActivityItemSource_image);
  if (v9)
  {
    v14 = sub_1BA49DEA8();
    *(_QWORD *)&v13 = v9;
    v10 = v9;

    sub_1BA76EAE0(&v13, (_OWORD *)a2);
  }
  else
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v12 = v11;
    *(_QWORD *)(a2 + 24) = sub_1BAFA54B8();

    *(_QWORD *)a2 = v12;
  }
}

uint64_t type metadata accessor for SharingPuzzleImageActivityItemSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingPuzzleImageActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB3830E4(void *a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v2 = objc_msgSend(a1, sel_thumbnailSmallImageAssetHandle);
  if (v2)
  {
    v3 = v2;
    MEMORY[0x1E0C80A78](v2);
    sub_1BB86EC14();
    v4 = (void *)sub_1BB86E854();
    sub_1BB04C524();
    sub_1BB86E974();
    swift_release();

    *(_QWORD *)(swift_allocObject() + 16) = a1;
    swift_unknownObjectRetain();
    v5 = (void *)sub_1BB86E854();
    v6 = sub_1BB86EA1C();

    swift_release();
    swift_release();

  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C2210, (uint64_t (*)(uint64_t))sub_1BB04C524, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  return v6;
}

uint64_t sub_1BB38324C()
{
  uint64_t v0;

  return sub_1BB382960(*(void **)(v0 + 16));
}

uint64_t sub_1BB383264()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1BB383288(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1BB382AEC(*(void **)(v1 + 16), a1);
}

uint64_t FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t (*v52)(_QWORD);
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t (*v65)(void);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t result;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;

  v17 = v16;
  v95 = a6;
  v96 = a8;
  v104 = a5;
  v105 = a7;
  v102 = a1;
  v103 = a3;
  v99 = a14;
  sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v21);
  v107 = (uint64_t)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v106 = (uint64_t)&v90 - v24;
  v25 = sub_1BB86C8B0();
  v109 = *(_QWORD *)(v25 - 8);
  v110 = v25;
  MEMORY[0x1E0C80A78](v25);
  v108 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (int *)type metadata accessor for FormatContent(0);
  MEMORY[0x1E0C80A78](v27);
  v101 = (uint64_t)&v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v100 = (uint64_t)&v90 - v30;
  MEMORY[0x1E0C80A78](v31);
  v92 = (char *)&v90 - v32;
  MEMORY[0x1E0C80A78](v33);
  v91 = (uint64_t)&v90 - v34;
  MEMORY[0x1E0C80A78](v35);
  v93 = (uint64_t)&v90 - v36;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v90 - v38;
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v90 - v41;
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)&v90 - v44;
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v90 - v47;
  MEMORY[0x1E0C80A78](v49);
  v51 = (uint64_t *)((char *)&v90 - v50);
  v90 = *v99;
  sub_1BA4C2DD8(v17, (uint64_t)&v90 - v50, v52);
  if (a2)
  {
    v99 = a2;
  }
  else
  {
    v53 = (uint64_t *)v51[1];
    v102 = *v51;
    v99 = v53;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v51, type metadata accessor for FormatContent);
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v108, v17 + v27[5], v110);
  sub_1BA4C2DD8(v17, (uint64_t)v48, type metadata accessor for FormatContent);
  v54 = a4;
  if (!a4)
  {
    v103 = *(_QWORD *)&v48[v27[6]];
    v54 = swift_bridgeObjectRetain();
  }
  v98 = v54;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v48, type metadata accessor for FormatContent);
  sub_1BA4C2DD8(v17, (uint64_t)v45, type metadata accessor for FormatContent);
  v55 = v95;
  if (!v95)
  {
    v104 = *(_QWORD *)&v45[v27[7]];
    v55 = swift_bridgeObjectRetain();
  }
  v97 = v55;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v45, type metadata accessor for FormatContent);
  sub_1BA4C2DD8(v17, (uint64_t)v42, type metadata accessor for FormatContent);
  v57 = v96;
  if (!v96)
  {
    v58 = &v42[v27[8]];
    v57 = *((_QWORD *)v58 + 1);
    v105 = *(_QWORD *)v58;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v42, type metadata accessor for FormatContent);
  sub_1BA4C2DD8(v17, (uint64_t)v39, type metadata accessor for FormatContent);
  v59 = a11;
  if (!a11)
  {
    a10 = *(_QWORD *)&v39[v27[9]];
    v59 = swift_bridgeObjectRetain();
  }
  v94 = v59;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v39, type metadata accessor for FormatContent);
  v60 = v107;
  sub_1BA6050C4(a12, v107, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  v61 = v93;
  sub_1BA4C2DD8(v17, v93, type metadata accessor for FormatContent);
  v62 = sub_1BB871E24();
  v63 = *(_QWORD *)(v62 - 8);
  v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v60, 1, v62);
  v95 = v57;
  if (v64 == 1)
  {
    v65 = MEMORY[0x1E0D52E40];
    sub_1BA6050C4(v61 + v27[10], v106, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    sub_1BA4A2E80(v61, type metadata accessor for FormatContent);
    sub_1BA6ED6EC(v60, (uint64_t)&qword_1ED3C20E0, (uint64_t)v65, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  }
  else
  {
    sub_1BA4A2E80(v61, type metadata accessor for FormatContent);
    v66 = v106;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v106, v60, v62);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v66, 0, 1, v62);
  }
  v68 = v91;
  v67 = (uint64_t)v92;
  v69 = v90;
  v70 = *(_QWORD *)(v17 + v27[11]);
  v107 = *(_QWORD *)(v17 + v27[12]);
  v71 = *(_QWORD *)(v17 + v27[13]);
  sub_1BA4C2DD8(v17, v91, type metadata accessor for FormatContent);
  v96 = a10;
  if (v69)
  {
    v93 = v69;
  }
  else
  {
    v93 = *(_QWORD *)(v68 + v27[14]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v68, type metadata accessor for FormatContent);
  sub_1BA4C2DD8(v17, v67, type metadata accessor for FormatContent);
  if (a15)
  {
    v72 = a15;
  }
  else
  {
    v72 = *(_QWORD *)(v67 + v27[15]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v67, type metadata accessor for FormatContent);
  v73 = v100;
  sub_1BA4C2DD8(v17, v100, type metadata accessor for FormatContent);
  if (a13)
  {
    v74 = a13;
  }
  else
  {
    v74 = *(_QWORD *)(v73 + v27[16]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v73, type metadata accessor for FormatContent);
  v75 = v17;
  v76 = v101;
  sub_1BA4C2DD8(v75, v101, type metadata accessor for FormatContent);
  v77 = v76;
  if (a16)
  {
    v78 = a16;
  }
  else
  {
    v78 = *(_QWORD *)(v76 + v27[17]);
    swift_bridgeObjectRetain();
  }
  v79 = v97;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v77, type metadata accessor for FormatContent);
  v80 = v99;
  *(_QWORD *)a9 = v102;
  *((_QWORD *)a9 + 1) = v80;
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(&a9[v27[5]], v108, v110);
  v81 = &a9[v27[6]];
  v82 = v98;
  *(_QWORD *)v81 = v103;
  *((_QWORD *)v81 + 1) = v82;
  v83 = &a9[v27[7]];
  *(_QWORD *)v83 = v104;
  *((_QWORD *)v83 + 1) = v79;
  v84 = &a9[v27[8]];
  v85 = v106;
  v86 = v95;
  *(_QWORD *)v84 = v105;
  *((_QWORD *)v84 + 1) = v86;
  v87 = &a9[v27[9]];
  v88 = v94;
  *(_QWORD *)v87 = v96;
  *((_QWORD *)v87 + 1) = v88;
  result = sub_1BB388484(v85, (uint64_t)&a9[v27[10]]);
  *(_QWORD *)&a9[v27[11]] = v70;
  *(_QWORD *)&a9[v27[12]] = v107;
  *(_QWORD *)&a9[v27[13]] = v71;
  *(_QWORD *)&a9[v27[14]] = v93;
  *(_QWORD *)&a9[v27[15]] = v72;
  *(_QWORD *)&a9[v27[16]] = v74;
  *(_QWORD *)&a9[v27[17]] = v78;
  return result;
}

uint64_t sub_1BB3839E4(uint64_t a1)
{
  return sub_1BB383BD0(a1, &qword_1ED3AB8B0, (uint64_t)&type metadata for SportsDataVisualization);
}

uint64_t sub_1BB3839F8(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BA6C2E20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1BB383A0C(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA860EAC);
}

uint64_t sub_1BB383A18(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BB38C590, type metadata accessor for FormatVersioningModeSelection);
}

uint64_t sub_1BB383A2C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(_QWORD *)(v5 + 24) >> 1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      goto LABEL_5;
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
  v5 = a2();
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_15;
LABEL_5:
  v11 = *(_QWORD *)(v5 + 16);
  v12 = (*(_QWORD *)(v5 + 24) >> 1) - v11;
  v13 = a3(0);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v5 + v15 + v16 * v11;
  v18 = a1 + v15;
  v19 = v16 * v10;
  v20 = v17 + v19;
  v21 = v18 + v19;
  if (v18 < v20 && v17 < v21)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v23 = *(_QWORD *)(v5 + 16);
  v24 = __OFADD__(v23, v10);
  v25 = v23 + v10;
  if (!v24)
  {
    *(_QWORD *)(v5 + 16) = v25;
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB383BA8(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB38C7D4, type metadata accessor for FormatInspectionItem);
}

uint64_t sub_1BB383BBC(uint64_t a1)
{
  return sub_1BB383BD0(a1, (unint64_t *)&unk_1ED3AB8C0, (uint64_t)&type metadata for SportsTaxonomyGraphNode);
}

uint64_t sub_1BB383BD0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  int64_t v6;
  int64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  int64_t v19;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    v12 = *(_QWORD *)(a1 + 16);
    if (v12)
      goto LABEL_5;
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v6 <= v7)
    v19 = v6 + v4;
  else
    v19 = v6;
  v5 = sub_1BB38C848(isUniquelyReferenced_nonNull_native, v19, 1, v5, a2, a3);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    goto LABEL_18;
LABEL_5:
  v13 = v5[2];
  if ((v5[3] >> 1) - v13 < (uint64_t)v12)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v14 = (unint64_t)&v5[v13 + 4];
  if (a1 + 32 < v14 + 8 * v12 && v14 < a1 + 32 + 8 * v12)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v12 < v4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v16 = v5[2];
  v17 = __OFADD__(v16, v12);
  v18 = v16 + v12;
  if (!v17)
  {
    v5[2] = v18;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v5;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB383D38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB38CBFC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB383E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB38CD34(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB383FE8(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA860ED0);
}

uint64_t sub_1BB383FF4(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA7B9B10);
}

uint64_t sub_1BB384000(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA65EC9C);
}

uint64_t sub_1BB38400C(uint64_t a1)
{
  return sub_1BB384E4C(a1, (void (*)(_QWORD))sub_1BAC88438, qword_1ED3B0C60);
}

uint64_t sub_1BB384028(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = *v5;
  v8 = *(_QWORD *)(*v5 + 16);
  if (__OFADD__(v8, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v8 + v6) <= *(_QWORD *)(v7 + 24) >> 1)
  {
    v14 = *(_QWORD *)(a1 + 16);
    if (v14)
      goto LABEL_5;
LABEL_15:
    if (!v6)
      goto LABEL_16;
    goto LABEL_18;
  }
  v7 = a2();
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    goto LABEL_15;
LABEL_5:
  v15 = *(_QWORD *)(v7 + 16);
  v16 = (*(_QWORD *)(v7 + 24) >> 1) - v15;
  sub_1BA4CDF6C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  if (v16 < (uint64_t)v14)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = *(_QWORD *)(v18 + 72);
  v21 = v7 + v19 + v20 * v15;
  v22 = a1 + v19;
  v23 = v20 * v14;
  v24 = v21 + v23;
  v25 = v22 + v23;
  if (v22 < v24 && v21 < v25)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (v14 < v6)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v27 = *(_QWORD *)(v7 + 16);
  v28 = __OFADD__(v27, v14);
  v29 = v27 + v14;
  if (!v28)
  {
    *(_QWORD *)(v7 + 16) = v29;
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v5 = v7;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3841C8(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = *v5;
  v8 = *(_QWORD *)(*v5 + 16);
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v8 + v6 <= *(_QWORD *)(v7 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v7 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v6)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v14 = *(_QWORD *)(v7 + 16);
  v15 = (*(_QWORD *)(v7 + 24) >> 1) - v14;
  sub_1BA4CDF6C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  if (v15 < v6)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = *(_QWORD *)(v17 + 72);
  v20 = v7 + v18 + v19 * v14;
  v21 = a1 + v18;
  v22 = v19 * v6;
  v23 = v20 + v22;
  v24 = v21 + v22;
  if (v21 < v23 && v20 < v24)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v5 = v7;
    return result;
  }
  v26 = *(_QWORD *)(v7 + 16);
  v27 = __OFADD__(v26, v6);
  v28 = v26 + v6;
  if (!v27)
  {
    *(_QWORD *)(v7 + 16) = v28;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB384364(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA8610F4);
}

uint64_t sub_1BB384370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB38D34C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3844C0(uint64_t a1)
{
  return sub_1BA72B228(a1, &qword_1EF2C24D8, (uint64_t)&type metadata for FormatDerivedDataContextScope);
}

uint64_t sub_1BB3844D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB38ED20(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB384624(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB38EE70(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[16 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 7) && v9 < a1 + 32 + (v2 << 7))
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB384774(uint64_t a1)
{
  return sub_1BB386F0C(a1, (uint64_t (*)(void))sub_1BB38F5E0, sub_1BA89EA04);
}

uint64_t sub_1BB384788(uint64_t a1)
{
  return sub_1BB3870B8(a1, (unint64_t *)&qword_1EF2C2430, (uint64_t)&type metadata for DebugInspectionDataItem);
}

uint64_t sub_1BB38479C(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BB3905D8, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatsProcessingData);
}

uint64_t sub_1BB3847B0(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB3905EC, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStreak);
}

uint64_t sub_1BB3847C4(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB38CBE8, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
}

uint64_t sub_1BB3847D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB38F890(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB384928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB390C04(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB384A78(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB390D4C, type metadata accessor for FormatPropertyDefinition);
}

uint64_t sub_1BB384A8C(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB3914A0, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataWarningError);
}

uint64_t sub_1BB384AA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  _QWORD *v34;
  int64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = a1;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_1BB38CAB4(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    v8 = v3[3] >> 1;
  }
  v10 = v3[2];
  v11 = v8 - v10;
  result = (uint64_t)sub_1BA766D68(v42, &v3[v10 + 4], v8 - v10, v6);
  if (result < v2)
    goto LABEL_15;
  if (result)
  {
    v16 = v3[2];
    v17 = __OFADD__(v16, result);
    v18 = v16 + result;
    if (v17)
    {
      __break(1u);
      goto LABEL_47;
    }
    v3[2] = v18;
  }
  if (result != v11)
  {
LABEL_13:
    result = sub_1BA6EBD18();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_16:
  v6 = v3[2];
  result = v42[0];
  v13 = v42[1];
  v14 = v43;
  v15 = v44;
  if (v45)
  {
    v19 = (v45 - 1) & v45;
    v20 = __clz(__rbit64(v45)) | (v44 << 6);
    v21 = (unint64_t)(v43 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_47:
  v35 = v15 + 1;
  if (__OFADD__(v15, 1))
    goto LABEL_65;
  v21 = (unint64_t)(v14 + 64) >> 6;
  if (v35 >= v21)
    goto LABEL_13;
  v36 = *(_QWORD *)(v13 + 8 * v35);
  v37 = v15 + 1;
  if (!v36)
  {
    v37 = v15 + 2;
    if (v15 + 2 >= v21)
      goto LABEL_13;
    v36 = *(_QWORD *)(v13 + 8 * v37);
    if (!v36)
    {
      v37 = v15 + 3;
      if (v15 + 3 >= v21)
        goto LABEL_13;
      v36 = *(_QWORD *)(v13 + 8 * v37);
      if (!v36)
      {
        v37 = v15 + 4;
        if (v15 + 4 >= v21)
          goto LABEL_13;
        v36 = *(_QWORD *)(v13 + 8 * v37);
        if (!v36)
        {
          v37 = v15 + 5;
          if (v15 + 5 >= v21)
            goto LABEL_13;
          v36 = *(_QWORD *)(v13 + 8 * v37);
          if (!v36)
          {
            v38 = v15 + 6;
            do
            {
              if (v21 == v38)
                goto LABEL_13;
              v36 = *(_QWORD *)(v13 + 8 * v38++);
            }
            while (!v36);
            v37 = v38 - 1;
          }
        }
      }
    }
  }
  v19 = (v36 - 1) & v36;
  v20 = __clz(__rbit64(v36)) + (v37 << 6);
  v15 = v37;
LABEL_18:
  v22 = *(_QWORD *)(*(_QWORD *)(result + 48) + 8 * v20);
  while (1)
  {
    v23 = v3[3];
    v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v6 + 1)
      break;
    if (v6 < v24)
      goto LABEL_25;
LABEL_19:
    v3[2] = v6;
  }
  v40 = v13;
  v41 = result;
  v39 = v14;
  v31 = v15;
  v32 = v3;
  v33 = v19;
  v34 = sub_1BB38CAB4((_QWORD *)(v23 > 1), v6 + 1, 1, v32);
  v19 = v33;
  v15 = v31;
  v14 = v39;
  v13 = v40;
  v3 = v34;
  result = v41;
  v24 = v3[3] >> 1;
  if (v6 >= v24)
    goto LABEL_19;
  while (1)
  {
LABEL_25:
    v3[v6++ + 4] = v22;
    if (v19)
    {
      v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v26 = v25 | (v15 << 6);
      goto LABEL_24;
    }
    v27 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v27 >= v21)
      goto LABEL_44;
    v28 = *(_QWORD *)(v13 + 8 * v27);
    v29 = v15 + 1;
    if (!v28)
    {
      v29 = v15 + 2;
      if (v15 + 2 >= v21)
        goto LABEL_44;
      v28 = *(_QWORD *)(v13 + 8 * v29);
      if (!v28)
      {
        v29 = v15 + 3;
        if (v15 + 3 >= v21)
          goto LABEL_44;
        v28 = *(_QWORD *)(v13 + 8 * v29);
        if (!v28)
        {
          v29 = v15 + 4;
          if (v15 + 4 >= v21)
            goto LABEL_44;
          v28 = *(_QWORD *)(v13 + 8 * v29);
          if (!v28)
          {
            v29 = v15 + 5;
            if (v15 + 5 >= v21)
              goto LABEL_44;
            v28 = *(_QWORD *)(v13 + 8 * v29);
            if (!v28)
            {
              v30 = v15 + 6;
              while (v21 != v30)
              {
                v28 = *(_QWORD *)(v13 + 8 * v30++);
                if (v28)
                {
                  v29 = v30 - 1;
                  goto LABEL_41;
                }
              }
LABEL_44:
              v3[2] = v6;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_41:
    v19 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    v15 = v29;
LABEL_24:
    v22 = *(_QWORD *)(*(_QWORD *)(result + 48) + 8 * v26);
    if (v6 >= v24)
      goto LABEL_19;
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_1BB384E30(uint64_t a1)
{
  return sub_1BB384E4C(a1, (void (*)(_QWORD))sub_1BAC88114, &qword_1ED3B0A40);
}

uint64_t sub_1BB384E4C(uint64_t a1, void (*a2)(_QWORD), unint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  int64_t v6;
  int64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  int64_t v19;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    v12 = *(_QWORD *)(a1 + 16);
    if (v12)
      goto LABEL_5;
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v6 <= v7)
    v19 = v6 + v4;
  else
    v19 = v6;
  v5 = sub_1BA6ECD60(isUniquelyReferenced_nonNull_native, v19, 1, v5, a2, a3);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    goto LABEL_18;
LABEL_5:
  v13 = v5[2];
  if ((v5[3] >> 1) - v13 < (uint64_t)v12)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v14 = (unint64_t)&v5[5 * v13 + 4];
  if (a1 + 32 < v14 + 40 * v12 && v14 < a1 + 32 + 40 * v12)
    goto LABEL_24;
  sub_1BA505288(0, a3);
  swift_arrayInitWithCopy();
  if (v12 < v4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v16 = v5[2];
  v17 = __OFADD__(v16, v12);
  v18 = v16 + v12;
  if (!v17)
  {
    v5[2] = v18;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v5;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB384FE8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  _QWORD **v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  int64_t v46;
  void (*v47)(uint64_t *);
  int64_t v48;
  _OWORD v49[15];
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  v11 = a4 >> 1;
  v12 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_26;
  }
  v9 = *v5;
  v10 = (*v5)[2];
  v13 = v10 + v12;
  if (__OFADD__(v10, v12))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v6 = a4;
  v7 = a3;
  v8 = a2;
  v4 = a1;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *v5 = v9;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v15 = v9[3] >> 1, v15 < v13))
  {
    if (v10 <= v13)
      v16 = v10 + v12;
    else
      v16 = v10;
    v9 = sub_1BB39152C(isUniquelyReferenced_nonNull_native, v16, 1, v9);
    *v5 = v9;
    v15 = v9[3] >> 1;
  }
  v17 = v9[2];
  v18 = v15 - v17;
  if (v11 != v7)
  {
    if (v18 < v12)
    {
      __break(1u);
    }
    else
    {
      if (v12 < 0
        || ((v19 = (unint64_t)&v9[31 * v17 + 4], v20 = v8 + 248 * v7, v20 < v19 + 248 * v12)
          ? (v21 = v19 >= v20 + 248 * v12)
          : (v21 = 1),
            !v21))
      {
LABEL_52:
        result = sub_1BB873F84();
        __break(1u);
        return result;
      }
      swift_arrayInitWithCopy();
      if (!v12)
      {
LABEL_22:
        v10 = v11;
LABEL_23:
        if (v12 != v18)
          return swift_unknownObjectRelease();
        goto LABEL_28;
      }
      v22 = v9[2];
      v23 = __OFADD__(v22, v12);
      v24 = v22 + v12;
      if (!v23)
      {
        v9[2] = v24;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v12 <= 0)
  {
    v12 = 0;
    v10 = v7;
    goto LABEL_23;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  v46 = v9[2];
  v82 = 0;
  v80 = 0u;
  v81 = 0u;
  v78 = 0u;
  v79 = 0u;
  v76 = 0u;
  v77 = 0u;
  v74 = 0u;
  v75 = 0u;
  v72 = 0u;
  v73 = 0u;
  v70 = 0u;
  v71 = 0u;
  v68 = 0u;
  v69 = 0u;
  v67 = 0u;
  sub_1BA6050C4((uint64_t)&v67, (uint64_t)&v51, (uint64_t)&unk_1ED3AC198, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  while (*((_QWORD *)&v51 + 1))
  {
    sub_1BA6ED6EC((uint64_t)&v51, (uint64_t)&unk_1ED3AC198, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
    v27 = *v5;
    v28 = (*v5)[3];
    v29 = v28 >> 1;
    if ((uint64_t)(v28 >> 1) < v46 + 1)
    {
      v27 = sub_1BB39152C((_QWORD *)(v28 > 1), v46 + 1, 1, *v5);
      *v5 = v27;
      v29 = v27[3] >> 1;
    }
    sub_1BA6050C4((uint64_t)&v67, (uint64_t)v49, (uint64_t)&unk_1ED3AC198, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
    if (*((_QWORD *)&v49[0] + 1))
    {
      if (v46 <= v29)
        v30 = v29;
      else
        v30 = v46;
      v31 = &v27[31 * v46];
      v26 = v46;
      v32 = v31 + 4;
      v48 = v30;
      while (1)
      {
        v63 = v49[12];
        v64 = v49[13];
        v65 = v49[14];
        v66 = v50;
        v59 = v49[8];
        v60 = v49[9];
        v61 = v49[10];
        v62 = v49[11];
        v55 = v49[4];
        v56 = v49[5];
        v57 = v49[6];
        v58 = v49[7];
        v51 = v49[0];
        v52 = v49[1];
        v53 = v49[2];
        v54 = v49[3];
        if (v30 == v26)
          break;
        sub_1BA6ED6EC((uint64_t)&v67, (uint64_t)&unk_1ED3AC198, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
        v33 = v54;
        v35 = v51;
        v34 = v52;
        *((_OWORD *)v32 + 2) = v53;
        *((_OWORD *)v32 + 3) = v33;
        *(_OWORD *)v32 = v35;
        *((_OWORD *)v32 + 1) = v34;
        v36 = v58;
        v38 = v55;
        v37 = v56;
        *((_OWORD *)v32 + 6) = v57;
        *((_OWORD *)v32 + 7) = v36;
        *((_OWORD *)v32 + 4) = v38;
        *((_OWORD *)v32 + 5) = v37;
        v39 = v62;
        v41 = v59;
        v40 = v60;
        *((_OWORD *)v32 + 10) = v61;
        *((_OWORD *)v32 + 11) = v39;
        *((_OWORD *)v32 + 8) = v41;
        *((_OWORD *)v32 + 9) = v40;
        v43 = v64;
        v42 = v65;
        v44 = v63;
        v32[30] = v66;
        *((_OWORD *)v32 + 13) = v43;
        *((_OWORD *)v32 + 14) = v42;
        *((_OWORD *)v32 + 12) = v44;
        if (v10 == v11)
        {
          v82 = 0;
          v80 = 0u;
          v81 = 0u;
          v78 = 0u;
          v79 = 0u;
          v76 = 0u;
          v77 = 0u;
          v74 = 0u;
          v75 = 0u;
          v72 = 0u;
          v73 = 0u;
          v70 = 0u;
          v71 = 0u;
          v68 = 0u;
          v69 = 0u;
          v10 = v11;
          v67 = 0u;
        }
        else
        {
          v47 = sub_1BB23D03C((void (**)(uint64_t *))v49, v10, v4, v8, v7, v6);
          sub_1BA670450(v45, (uint64_t)&v67);
          ((void (*)(_OWORD *, _QWORD))v47)(v49, 0);
          v23 = __OFADD__(v10++, 1);
          if (v23)
            goto LABEL_51;
        }
        sub_1BA6050C4((uint64_t)&v67, (uint64_t)v49, (uint64_t)&unk_1ED3AC198, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
        v32 += 31;
        ++v26;
        v30 = v48;
        if (!*((_QWORD *)&v49[0] + 1))
          goto LABEL_47;
      }
      sub_1BAA7D0B0((uint64_t)&v51);
      v26 = v48;
    }
    else
    {
      v26 = v46;
LABEL_47:
      sub_1BA6ED6EC((uint64_t)v49, (uint64_t)&unk_1ED3AC198, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
    }
    v46 = v26;
    (*v5)[2] = v26;
    sub_1BA6050C4((uint64_t)&v67, (uint64_t)&v51, (uint64_t)&unk_1ED3AC198, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  }
  sub_1BA6ED6EC((uint64_t)&v67, (uint64_t)&unk_1ED3AC198, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  swift_unknownObjectRelease();
  return sub_1BA6ED6EC((uint64_t)&v51, (uint64_t)&unk_1ED3AC198, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
}

uint64_t sub_1BB385554(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  _QWORD *v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  int64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  _QWORD v64[3];
  int64_t v65;
  unint64_t v66;

  v2 = *(_QWORD *)(result + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_1BB391680(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    v8 = v3[3] >> 1;
  }
  v10 = v3[2];
  v11 = v8 - v10;
  result = (uint64_t)sub_1BA8601F0(v64, &v3[8 * v10 + 4], v8 - v10, v6);
  if (result < v2)
    goto LABEL_15;
  if (result)
  {
    v14 = v3[2];
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_51;
    }
    v3[2] = v16;
  }
  if (result != v11)
    goto LABEL_13;
LABEL_16:
  v13 = v3[2];
  v55 = v64[0];
  v54 = v64[1];
  v12 = v65;
  v52 = v64[2];
  if (!v66)
  {
LABEL_51:
    v41 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      return result;
    }
    v32 = (unint64_t)(v52 + 64) >> 6;
    if (v41 >= v32)
      goto LABEL_13;
    v62 = v13;
    v49 = *(_QWORD *)(v54 + 8 * v41);
    if (!v49)
    {
      v50 = v12 + 2;
      if (v12 + 2 >= v32)
        goto LABEL_13;
      v49 = *(_QWORD *)(v54 + 8 * v50);
      if (v49)
      {
LABEL_60:
        v41 = v50;
      }
      else
      {
        if (v12 + 3 >= v32)
          goto LABEL_13;
        v49 = *(_QWORD *)(v54 + 8 * (v12 + 3));
        if (!v49)
          goto LABEL_66;
        v41 = v12 + 3;
      }
    }
LABEL_54:
    v17 = (v49 - 1) & v49;
    v18 = __clz(__rbit64(v49)) + (v41 << 6);
    v59 = v41;
    goto LABEL_18;
  }
  v59 = v65;
  v62 = v3[2];
  v17 = (v66 - 1) & v66;
  v18 = __clz(__rbit64(v66)) | (v65 << 6);
LABEL_18:
  v19 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * v18);
  v20 = *v19;
  v21 = v19[1];
  v22 = (uint64_t *)(*(_QWORD *)(v55 + 56) + 48 * v18);
  v23 = v22[1];
  v57 = *v22;
  v25 = v22[2];
  v24 = v22[3];
  v26 = v22[4];
  v27 = v22[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v21)
    goto LABEL_13;
  v53 = (unint64_t)(v52 + 64) >> 6;
  v12 = v59;
  v28 = v62;
  v29 = v57;
  v30 = v26;
  while (1)
  {
    v31 = v3[3];
    v32 = v31 >> 1;
    v56 = v31 >> 1;
    if ((uint64_t)(v31 >> 1) < v28 + 1)
    {
      v61 = v12;
      v63 = v30;
      v45 = v3;
      v46 = v28;
      v47 = v29;
      v48 = sub_1BB391680((_QWORD *)(v31 > 1), v28 + 1, 1, v45);
      v12 = v61;
      v30 = v63;
      v29 = v47;
      v28 = v46;
      v3 = v48;
      v56 = v48[3] >> 1;
    }
    if (v28 < v56)
      break;
LABEL_20:
    v3[2] = v28;
    if (!v21)
      goto LABEL_13;
  }
  while (1)
  {
    v39 = &v3[8 * v28 + 4];
    *v39 = v20;
    v39[1] = v21;
    v39[2] = v29;
    v39[3] = v23;
    v39[4] = v25;
    v39[5] = v24;
    v40 = v28 + 1;
    v39[6] = v30;
    v39[7] = v27;
    v62 = v40;
    if (!v17)
      break;
    v58 = (v17 - 1) & v17;
    v60 = v12;
    v33 = __clz(__rbit64(v17)) | (v12 << 6);
LABEL_26:
    v34 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * v33);
    v20 = *v34;
    v21 = v34[1];
    v35 = (uint64_t *)(*(_QWORD *)(v55 + 56) + 48 * v33);
    v36 = *v35;
    v23 = v35[1];
    v25 = v35[2];
    v24 = v35[3];
    v37 = v35[4];
    v27 = v35[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v37;
    v29 = v36;
    v12 = v60;
    v28 = v62;
    v17 = v58;
    if (v21)
      v38 = v62 < v56;
    else
      v38 = 0;
    if (!v38)
      goto LABEL_20;
  }
  v41 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v41 >= v53)
      goto LABEL_56;
    v42 = *(_QWORD *)(v54 + 8 * v41);
    if (v42)
      goto LABEL_41;
    v43 = v12 + 2;
    if (v12 + 2 >= v53)
      goto LABEL_56;
    v42 = *(_QWORD *)(v54 + 8 * v43);
    if (!v42)
    {
      if (v12 + 3 >= v53)
        goto LABEL_56;
      v42 = *(_QWORD *)(v54 + 8 * (v12 + 3));
      if (v42)
      {
        v41 = v12 + 3;
        goto LABEL_41;
      }
      v43 = v12 + 4;
      if (v12 + 4 >= v53)
        goto LABEL_56;
      v42 = *(_QWORD *)(v54 + 8 * v43);
      if (!v42)
      {
        v41 = v12 + 5;
        if (v12 + 5 >= v53)
          goto LABEL_56;
        v42 = *(_QWORD *)(v54 + 8 * v41);
        if (!v42)
        {
          v44 = v12 + 6;
          while (v53 != v44)
          {
            v42 = *(_QWORD *)(v54 + 8 * v44++);
            if (v42)
            {
              v41 = v44 - 1;
              goto LABEL_41;
            }
          }
LABEL_56:
          v3[2] = v40;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    v41 = v43;
LABEL_41:
    v58 = (v42 - 1) & v42;
    v60 = v41;
    v33 = __clz(__rbit64(v42)) + (v41 << 6);
    goto LABEL_26;
  }
  __break(1u);
LABEL_66:
  v50 = v41 + 3;
  if (v41 + 3 < v32)
  {
    v49 = *(_QWORD *)(v54 + 8 * v50);
    if (v49)
      goto LABEL_60;
    v41 += 4;
    if (v41 >= v32)
      goto LABEL_13;
    v49 = *(_QWORD *)(v54 + 8 * v41);
    if (!v49)
    {
      v51 = v12 + 6;
      while (v32 != v51)
      {
        v49 = *(_QWORD *)(v54 + 8 * v51++);
        if (v49)
        {
          v41 = v51 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  result = sub_1BA6EBD18();
  *(_QWORD *)v1 = v3;
  return result;
}

uint64_t sub_1BB385A58(uint64_t a1)
{
  return sub_1BB385A80(a1, (uint64_t (*)(void))sub_1BB3917A0, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_1BA86048C);
}

uint64_t sub_1BB385A6C(uint64_t a1)
{
  return sub_1BB385A80(a1, (uint64_t (*)(void))sub_1BB3917B4, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_1BA86048C);
}

uint64_t sub_1BB385A80(uint64_t result, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD *, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t (*v4)(void);
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v6 = *(_QWORD *)(result + 16);
  v7 = *v3;
  v8 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = a2;
  v10 = result;
  if (!swift_isUniquelyReferenced_nonNull_native() || (v11 = *(_QWORD *)(v7 + 24) >> 1, v11 < v8 + v6))
  {
    v7 = v4();
    v11 = *(_QWORD *)(v7 + 24) >> 1;
  }
  v12 = *(_QWORD *)(v7 + 16);
  v13 = v11 - v12;
  result = a3(v42, v7 + 24 * v12 + 32, v11 - v12, v10);
  if (result < v6)
    goto LABEL_12;
  if (result)
  {
    v16 = *(_QWORD *)(v7 + 16);
    v17 = __OFADD__(v16, result);
    v18 = v16 + result;
    if (v17)
    {
      __break(1u);
      goto LABEL_44;
    }
    *(_QWORD *)(v7 + 16) = v18;
  }
  if (result != v13)
  {
LABEL_10:
    result = sub_1BA6EBD18();
    *v3 = v7;
    return result;
  }
LABEL_13:
  v5 = *(_QWORD *)(v7 + 16);
  v41 = v42[0];
  v14 = v43;
  v40 = v42[1];
  v15 = v44;
  if (v45)
  {
    v19 = (v45 - 1) & v45;
    v20 = v44;
    v21 = __clz(__rbit64(v45)) | (v44 << 6);
    v39 = (unint64_t)(v43 + 64) >> 6;
    goto LABEL_15;
  }
LABEL_44:
  v36 = v15 + 1;
  if (__OFADD__(v15, 1))
    goto LABEL_63;
  v39 = (unint64_t)(v14 + 64) >> 6;
  if (v36 >= v39)
    goto LABEL_10;
  v37 = *(_QWORD *)(v40 + 8 * v36);
  v20 = v15 + 1;
  if (!v37)
  {
    v20 = v15 + 2;
    if (v15 + 2 >= v39)
      goto LABEL_10;
    v37 = *(_QWORD *)(v40 + 8 * v20);
    if (!v37)
    {
      v20 = v15 + 3;
      if (v15 + 3 >= v39)
        goto LABEL_10;
      v37 = *(_QWORD *)(v40 + 8 * v20);
      if (!v37)
      {
        v20 = v15 + 4;
        if (v15 + 4 >= v39)
          goto LABEL_10;
        v37 = *(_QWORD *)(v40 + 8 * v20);
        if (!v37)
        {
          v20 = v15 + 5;
          if (v15 + 5 >= v39)
            goto LABEL_10;
          v37 = *(_QWORD *)(v40 + 8 * v20);
          if (!v37)
          {
            v38 = v15 + 6;
            do
            {
              if (v39 == v38)
                goto LABEL_10;
              v37 = *(_QWORD *)(v40 + 8 * v38++);
            }
            while (!v37);
            v20 = v38 - 1;
          }
        }
      }
    }
  }
  v19 = (v37 - 1) & v37;
  v21 = __clz(__rbit64(v37)) + (v20 << 6);
LABEL_15:
  v22 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v21);
  v23 = *v22;
  v24 = v22[1];
  v25 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v21);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  while (1)
  {
    v26 = *(_QWORD *)(v7 + 24);
    v27 = v26 >> 1;
    if ((uint64_t)(v26 >> 1) < v5 + 1)
      break;
    if (v5 < v27)
      goto LABEL_20;
LABEL_17:
    *(_QWORD *)(v7 + 16) = v5;
  }
  result = ((uint64_t (*)(BOOL))v4)(v26 > 1);
  v7 = result;
  v27 = *(_QWORD *)(result + 24) >> 1;
  if (v5 >= v27)
    goto LABEL_17;
  while (1)
  {
LABEL_20:
    v28 = (_QWORD *)(v7 + 32 + 24 * v5);
    *v28 = v23;
    v28[1] = v24;
    v28[2] = v25;
    ++v5;
    if (v19)
    {
      v29 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v30 = v29 | (v20 << 6);
      goto LABEL_38;
    }
    v31 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v31 >= v39)
      goto LABEL_42;
    v32 = *(_QWORD *)(v40 + 8 * v31);
    v33 = v20 + 1;
    if (!v32)
    {
      v33 = v20 + 2;
      if (v20 + 2 >= v39)
        goto LABEL_42;
      v32 = *(_QWORD *)(v40 + 8 * v33);
      if (!v32)
      {
        v33 = v20 + 3;
        if (v20 + 3 >= v39)
          goto LABEL_42;
        v32 = *(_QWORD *)(v40 + 8 * v33);
        if (!v32)
        {
          v33 = v20 + 4;
          if (v20 + 4 >= v39)
            goto LABEL_42;
          v32 = *(_QWORD *)(v40 + 8 * v33);
          if (!v32)
          {
            v33 = v20 + 5;
            if (v20 + 5 >= v39)
              goto LABEL_42;
            v32 = *(_QWORD *)(v40 + 8 * v33);
            if (!v32)
            {
              v34 = v20 + 6;
              while (v39 != v34)
              {
                v32 = *(_QWORD *)(v40 + 8 * v34++);
                if (v32)
                {
                  v33 = v34 - 1;
                  goto LABEL_37;
                }
              }
LABEL_42:
              *(_QWORD *)(v7 + 16) = v5;
              goto LABEL_10;
            }
          }
        }
      }
    }
LABEL_37:
    v19 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v33 << 6);
    v20 = v33;
LABEL_38:
    v35 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v30);
    v23 = *v35;
    v24 = v35[1];
    v25 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v30);
    if (v5 >= v27)
    {
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

uint64_t sub_1BB385EA8(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA861318);
}

void sub_1BB385EB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_1BB391924(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    *(_QWORD *)v1 = v3;
    v8 = v3[3] >> 1;
  }
  v10 = v3[2];
  v11 = v8 - v10;
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_19;
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v11 < v2)
  {
    __break(1u);
    goto LABEL_25;
  }
  v12 = (unint64_t)&v3[4 * v10 + 4];
  if (a1 + 32 < v12 + 32 * v2 && v12 < a1 + 32 + 32 * v2)
    goto LABEL_26;
  swift_arrayInitWithCopy();
  if (v2)
  {
    v14 = v3[2];
    v15 = __OFADD__(v14, v2);
    v16 = v14 + v2;
    if (!v15)
    {
      v3[2] = v16;
      goto LABEL_19;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    sub_1BB873F84();
    __break(1u);
    return;
  }
LABEL_19:
  swift_bridgeObjectRelease();
  if (v2 == v11)
  {
LABEL_23:
    sub_1BA4AD288(0, &qword_1ED3C0400, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    *(_QWORD *)v1 = v3;
  }
}

uint64_t sub_1BB386040(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BB391A70, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB74E8]);
}

uint64_t sub_1BB386054(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BB391AD4, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatVersioningModeItem);
}

uint64_t sub_1BB386068(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB38FBF8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3861B8(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB391C44, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
}

uint64_t sub_1BB3861CC(uint64_t a1)
{
  return sub_1BA64AE30(a1, (unint64_t *)&unk_1EF2C22B0, (uint64_t)&type metadata for DebugInspectViewSection);
}

uint64_t sub_1BB3861E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB39208C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB386330(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA861798);
}

uint64_t sub_1BB38633C(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BB3921C0, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
}

uint64_t sub_1BB386350(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB3914F0, type metadata accessor for FeedItem);
}

uint64_t sub_1BB386364(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63[4])(uint64_t *);

  v61 = a2;
  v9 = type metadata accessor for FeedItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B2A50, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v57 = (uint64_t)&v51 - v15;
  v18.n128_f64[0] = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v51 - v19;
  v58 = a4;
  v21 = a4 >> 1;
  v22 = __OFSUB__(a4 >> 1, a3);
  v23 = (a4 >> 1) - a3;
  if (v22)
  {
    __break(1u);
    goto LABEL_26;
  }
  v62 = a1;
  a1 = *v4;
  v24 = *(_QWORD *)(*v4 + 16);
  v5 = v24 + v23;
  if (__OFADD__(v24, v23))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v60 = v17;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (v26 = *(_QWORD *)(a1 + 24) >> 1, v26 < v5))
  {
    if (v24 <= v5)
      v27 = v24 + v23;
    else
      v27 = v24;
    a1 = sub_1BB3914F0(isUniquelyReferenced_nonNull_native, v27, 1, a1);
    *v4 = a1;
    v26 = *(_QWORD *)(a1 + 24) >> 1;
  }
  v28 = *(_QWORD *)(a1 + 16);
  v29 = v26 - v28;
  if (v21 == a3)
  {
    if (v23 <= 0)
    {
      v23 = 0;
      v5 = a3;
      goto LABEL_23;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v29 < v23)
  {
    __break(1u);
    goto LABEL_34;
  }
  if ((v23 & 0x8000000000000000) == 0)
  {
    v30 = *(_QWORD *)(v10 + 72);
    v31 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)) + v30 * v28;
    v32 = v61 + v30 * a3;
    if (v32 >= v31 + v30 * v23 || v31 >= v32 + v30 * v23)
    {
      swift_arrayInitWithCopy();
      if (v23)
      {
        v34 = *(_QWORD *)(a1 + 16);
        v22 = __OFADD__(v34, v23);
        v35 = v34 + v23;
        if (v22)
        {
          __break(1u);
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        *(_QWORD *)(a1 + 16) = v35;
      }
      v5 = v21;
LABEL_23:
      if (v23 != v29)
        return swift_unknownObjectRelease();
LABEL_28:
      v23 = *(_QWORD *)(a1 + 16);
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
      v52(v20, 1, 1, v9, v18);
      a1 = v57;
      sub_1BA6050C4((uint64_t)v20, v57, (uint64_t)&qword_1ED3B2A50, (uint64_t)type metadata accessor for FeedItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (v55(a1, 1, v9) == 1)
      {
LABEL_29:
        sub_1BA6ED6EC((uint64_t)v20, (uint64_t)&qword_1ED3B2A50, (uint64_t)type metadata accessor for FeedItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
        swift_unknownObjectRelease();
        return sub_1BA6ED6EC(a1, (uint64_t)&qword_1ED3B2A50, (uint64_t)type metadata accessor for FeedItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      }
      do
      {
LABEL_34:
        sub_1BA6ED6EC(a1, (uint64_t)&qword_1ED3B2A50, (uint64_t)type metadata accessor for FeedItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
        v38 = *v4;
        v39 = *(_QWORD *)(*v4 + 24);
        v56 = v5;
        if ((uint64_t)(v39 >> 1) < v23 + 1)
        {
          v50 = sub_1BB3914F0(v39 > 1, v23 + 1, 1, v38);
          *v4 = v50;
          v54 = v50;
          v51 = *(_QWORD *)(v50 + 24) >> 1;
        }
        else
        {
          v51 = v39 >> 1;
          v54 = v38;
        }
        v40 = *(unsigned __int8 *)(v10 + 80);
        v41 = v60;
        sub_1BA6050C4((uint64_t)v20, v60, (uint64_t)&qword_1ED3B2A50, (uint64_t)type metadata accessor for FeedItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
        if (v55(v41, 1, v9) == 1)
        {
          v42 = v60;
LABEL_38:
          sub_1BA6ED6EC(v42, (uint64_t)&qword_1ED3B2A50, (uint64_t)type metadata accessor for FeedItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
          v37 = v23;
        }
        else
        {
          v53 = v54 + ((v40 + 32) & ~v40);
          v43 = v51;
          if (v23 > v51)
            v43 = v23;
          v54 = v43;
          v44 = (uint64_t)v59;
          v42 = v60;
          while (1)
          {
            sub_1BA5193C4(v42, v44, type metadata accessor for FeedItem);
            if (v54 == v23)
              break;
            sub_1BA6ED6EC((uint64_t)v20, (uint64_t)&qword_1ED3B2A50, (uint64_t)type metadata accessor for FeedItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
            sub_1BA5193C4(v44, v53 + *(_QWORD *)(v10 + 72) * v23, type metadata accessor for FeedItem);
            v46 = v56;
            if (v56 == v21)
            {
              v45 = 1;
              v56 = v21;
            }
            else
            {
              v47 = sub_1BB23D0E4(v63, v56, v62, v61, a3, v58);
              sub_1BA4C2DD8(v48, (uint64_t)v20, type metadata accessor for FeedItem);
              ((void (*)(void (**)(uint64_t *), _QWORD))v47)(v63, 0);
              v22 = __OFADD__(v46, 1);
              v49 = v46 + 1;
              if (v22)
                goto LABEL_50;
              v56 = v49;
              v45 = 0;
              v44 = (uint64_t)v59;
            }
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v52)(v20, v45, 1, v9);
            v42 = v60;
            sub_1BA6050C4((uint64_t)v20, v60, (uint64_t)&qword_1ED3B2A50, (uint64_t)type metadata accessor for FeedItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
            ++v23;
            if (v55(v42, 1, v9) == 1)
              goto LABEL_38;
          }
          sub_1BA4A2E80(v44, type metadata accessor for FeedItem);
          v37 = v54;
          v23 = v54;
        }
        v5 = v56;
        a1 = v57;
        *(_QWORD *)(*v4 + 16) = v37;
        sub_1BA6050C4((uint64_t)v20, a1, (uint64_t)&qword_1ED3B2A50, (uint64_t)type metadata accessor for FeedItem, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      }
      while (v55(a1, 1, v9) != 1);
      goto LABEL_29;
    }
  }
LABEL_51:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB386990(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BB38E480(isUniquelyReferenced_nonNull_native, v15, 1, v3, &qword_1EF2C2410, (uint64_t)&type metadata for DebugFormatTestSection);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB386AFC(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BB39247C, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatTestSuiteResultItem);
}

uint64_t sub_1BB386B10(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA8617BC);
}

uint64_t sub_1BB386B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB3924CC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB386C6C(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB392890, (uint64_t (*)(_QWORD))type metadata accessor for ZIndexable);
}

uint64_t sub_1BB386C80(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BB392B10, (uint64_t (*)(_QWORD))type metadata accessor for SportsDataVisualizationResponseItem);
}

uint64_t sub_1BB386C94(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB391A84, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB79E8]);
}

uint64_t sub_1BB386CA8(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BB392D9C, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatGroupItem);
}

uint64_t sub_1BB386CBC(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA8617E0);
}

uint64_t sub_1BB386CC8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD **)v4;
  v8 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native)
    goto LABEL_8;
  v13 = v7[3] >> 1;
  if (v13 < v9)
    goto LABEL_8;
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9)
        v14 = v8 + v6;
      else
        v14 = v8;
      isUniquelyReferenced_nonNull_native = sub_1BB38ED20(isUniquelyReferenced_nonNull_native, v14, 1, v7);
      v7 = isUniquelyReferenced_nonNull_native;
      v13 = isUniquelyReferenced_nonNull_native[3] >> 1;
      if (v5 != a3)
        goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_12:
  v15 = v7[2];
  if (v13 - v15 < v6)
    goto LABEL_25;
  if (v6 < 0)
    goto LABEL_27;
  v16 = (unint64_t)&v7[4 * v15 + 4];
  v17 = a2 + 32 * a3;
  if (v17 < v16 + 32 * v6 && v16 < v17 + 32 * v6)
    goto LABEL_27;
  swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_22:
    result = swift_unknownObjectRelease();
    *(_QWORD *)v4 = v7;
    return result;
  }
  v19 = v7[2];
  v20 = __OFADD__(v19, v6);
  v21 = v19 + v6;
  if (!v20)
  {
    v7[2] = v21;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB386E84(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BB393168, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
}

uint64_t sub_1BB386E98(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA861804);
}

uint64_t sub_1BB386EA4(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA861828);
}

uint64_t sub_1BB386EB0(uint64_t a1)
{
  return sub_1BA72B228(a1, &qword_1ED3CFC70, (uint64_t)&type metadata for FormatAccessibilityCustomAction);
}

uint64_t sub_1BB386EC4(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA86184C);
}

uint64_t sub_1BB386ED0(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB392734, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
}

uint64_t sub_1BB386EE4(uint64_t a1)
{
  return sub_1BB3874E4(a1, &qword_1ED3C0560, (uint64_t)&type metadata for FormatSlotTransform);
}

uint64_t sub_1BB386EF8(uint64_t a1)
{
  return sub_1BB386F0C(a1, (uint64_t (*)(void))sub_1BB393424, (void (*)(_QWORD))sub_1BA93CD14);
}

uint64_t sub_1BB386F0C(uint64_t a1, uint64_t (*a2)(void), void (*a3)(_QWORD))
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(_QWORD *)(v5 + 24) >> 1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      goto LABEL_5;
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
  v5 = a2();
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_15;
LABEL_5:
  v11 = *(_QWORD *)(v5 + 16);
  if ((*(_QWORD *)(v5 + 24) >> 1) - v11 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = v5 + 40 * v11 + 32;
  if (a1 + 32 < v12 + 40 * v10 && v12 < a1 + 32 + 40 * v10)
    goto LABEL_21;
  a3(0);
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v14 = *(_QWORD *)(v5 + 16);
  v15 = __OFADD__(v14, v10);
  v16 = v14 + v10;
  if (!v15)
  {
    *(_QWORD *)(v5 + 16) = v16;
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB387084(unint64_t a1)
{
  return sub_1BA65EAE0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1BA861A70);
}

uint64_t sub_1BB387090(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB38D310, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
}

uint64_t sub_1BB3870A4(uint64_t a1)
{
  return sub_1BB3870B8(a1, (unint64_t *)&qword_1EF2B14C0, (uint64_t)&type metadata for DebugFormatHistoryItem);
}

uint64_t sub_1BB3870B8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  int64_t v6;
  int64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  int64_t v19;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    v12 = *(_QWORD *)(a1 + 16);
    if (v12)
      goto LABEL_5;
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v6 <= v7)
    v19 = v6 + v4;
  else
    v19 = v6;
  v5 = sub_1BB38FAD0(isUniquelyReferenced_nonNull_native, v19, 1, v5, a2, a3);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    goto LABEL_18;
LABEL_5:
  v13 = v5[2];
  if ((v5[3] >> 1) - v13 < (uint64_t)v12)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v14 = (unint64_t)&v5[8 * v13 + 4];
  if (a1 + 32 < v14 + (v12 << 6) && v14 < a1 + 32 + (v12 << 6))
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v12 < v4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v16 = v5[2];
  v17 = __OFADD__(v16, v12);
  v18 = v16 + v12;
  if (!v17)
  {
    v5[2] = v18;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v5;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB387220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BA6493B4(isUniquelyReferenced_nonNull_native, v14, 1, v3, &qword_1EF2C24D0, (uint64_t)&type metadata for FormatDerivedDataBindingScope);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB387388(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BB3937FC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[25 * v9 + 4];
  if (a1 + 32 < v10 + 200 * v8 && v10 < a1 + 32 + 200 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3874E4(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  int64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  int64_t v18;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v6 <= v7)
    v18 = v6 + v4;
  else
    v18 = v6;
  v5 = sub_1BB38C848(isUniquelyReferenced_nonNull_native, v18, 1, v5, a2, a3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v12 = v5[2];
  if ((v5[3] >> 1) - v12 < v4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v13 = (unint64_t)&v5[v12 + 4];
  if (a1 + 32 < v13 + 8 * v4 && v13 < a1 + 32 + 8 * v4)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v5;
    return result;
  }
  v15 = v5[2];
  v16 = __OFADD__(v15, v4);
  v17 = v15 + v4;
  if (!v16)
  {
    v5[2] = v17;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB387648(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB39398C, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
}

uint64_t sub_1BB38765C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BB38E5E0(isUniquelyReferenced_nonNull_native, v15, 1, v3, (unint64_t *)&unk_1EF2B1320, (uint64_t)&type metadata for PuzzleHistoryServiceChange);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[3 * v9 + 4];
  if (a1 + 32 < v10 + 24 * v8 && v10 < a1 + 32 + 24 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3877C8(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BB393D98, (uint64_t (*)(_QWORD))MEMORY[0x1E0DDA848]);
}

uint64_t sub_1BB3877DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB393DAC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB387920(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BB393EE0, (uint64_t (*)(_QWORD))sub_1BAC88048);
}

uint64_t sub_1BB387934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB390720(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB387A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB3917C8(isUniquelyReferenced_nonNull_native, v14, 1, v3, (unint64_t *)&unk_1ED3AB9A0, (uint64_t (*)(uint64_t))sub_1BA98B3AC);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  sub_1BA98B3AC();
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB387C00(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BB394090(isUniquelyReferenced_nonNull_native, v15, 1, v3, (unint64_t *)&unk_1EF2B1400, (uint64_t)&type metadata for DebugFormatCompilerSection);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t FormatContent.properties.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.selectors.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.resolved(themes:subgroups:tag:issue:headline:webEmbed:subscription:subscriptionPaidAccess:options:selectors:sponsoredAdBanner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, char *a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t *v12;
  int *v17;
  char *v18;
  int *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v27;
  char v29;
  uint64_t v33;

  v29 = *a8;
  v27 = *v12;
  v33 = v12[1];
  v17 = (int *)type metadata accessor for FormatContent(0);
  v18 = (char *)v12 + v17[5];
  v19 = (int *)type metadata accessor for FormatContent.Resolved();
  v20 = (char *)a9 + v19[5];
  v21 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v18, v21);
  sub_1BA6050C4(a6, (uint64_t)a9 + v19[14], (uint64_t)&qword_1ED3D54C0, (uint64_t)type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  v22 = *(uint64_t *)((char *)v12 + v17[12]);
  v23 = *(uint64_t *)((char *)v12 + v17[13]);
  sub_1BA6050C4(a12, (uint64_t)a9 + v19[18], (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  *a9 = v27;
  a9[1] = v33;
  *(_QWORD *)((char *)a9 + v19[6]) = v23;
  *(_QWORD *)((char *)a9 + v19[7]) = a1;
  *(_QWORD *)((char *)a9 + v19[8]) = a2;
  *(_QWORD *)((char *)a9 + v19[9]) = a10;
  *(_QWORD *)((char *)a9 + v19[11]) = a3;
  *(_QWORD *)((char *)a9 + v19[12]) = a4;
  *(_QWORD *)((char *)a9 + v19[13]) = a5;
  *(_QWORD *)((char *)a9 + v19[15]) = a7;
  *((_BYTE *)a9 + v19[16]) = v29;
  *(_QWORD *)((char *)a9 + v19[17]) = v22;
  *(_QWORD *)((char *)a9 + v19[10]) = a11;
  v24 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v25 = a4;
  return swift_unknownObjectRetain();
}

uint64_t FormatContent.init(identifier:publishDate:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:equivalentTopicIDs:affinityTagIDs:iAdKeywords:themes:subgroups:properties:selectors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t result;
  uint64_t v34;

  v34 = *a17;
  *a9 = a1;
  a9[1] = a2;
  v24 = (int *)type metadata accessor for FormatContent(0);
  v25 = (char *)a9 + v24[5];
  v26 = sub_1BB86C8B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25, a3, v26);
  v27 = (_QWORD *)((char *)a9 + v24[6]);
  *v27 = a4;
  v27[1] = a5;
  v28 = (_QWORD *)((char *)a9 + v24[7]);
  *v28 = a6;
  v28[1] = a7;
  v29 = (_QWORD *)((char *)a9 + v24[8]);
  *v29 = a8;
  v29[1] = a10;
  v30 = (_QWORD *)((char *)a9 + v24[9]);
  *v30 = a11;
  v30[1] = a12;
  result = sub_1BB388484(a13, (uint64_t)a9 + v24[10]);
  *(_QWORD *)((char *)a9 + v24[11]) = a14;
  *(_QWORD *)((char *)a9 + v24[12]) = a15;
  *(_QWORD *)((char *)a9 + v24[13]) = a16;
  *(_QWORD *)((char *)a9 + v24[14]) = v34;
  *(_QWORD *)((char *)a9 + v24[15]) = a18;
  *(_QWORD *)((char *)a9 + v24[16]) = a19;
  *(_QWORD *)((char *)a9 + v24[17]) = a20;
  return result;
}

uint64_t FormatContent.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatContent(0) + 20);
  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FormatContent.tagID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatContent(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.issueID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatContent(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.articleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatContent(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.webEmbedID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatContent(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.sponsoredAdBanner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatContent(0);
  return sub_1BA6050C4(v1 + *(int *)(v3 + 40), a1, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
}

uint64_t FormatContent.equivalentTopicIDs.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3882E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatContent(0) + 44);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContent.equivalentTopicIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatContent(0) + 44);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContent.equivalentTopicIDs.modify())()
{
  type metadata accessor for FormatContent(0);
  return nullsub_1;
}

uint64_t FormatContent.affinityTagIDs.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3883B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatContent(0) + 48);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContent.affinityTagIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatContent(0) + 48);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContent.affinityTagIDs.modify())()
{
  type metadata accessor for FormatContent(0);
  return nullsub_1;
}

uint64_t FormatContent.iAdKeywords.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB388484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB3884E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatContent(0) + 52);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContent.iAdKeywords.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatContent(0) + 52);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContent.iAdKeywords.modify())()
{
  type metadata accessor for FormatContent(0);
  return nullsub_1;
}

uint64_t FormatContent.themes.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for FormatContent(0) + 56));
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.subgroups.getter()
{
  type metadata accessor for FormatContent(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB3885E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatContent(0) + 64);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContent.properties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatContent(0) + 64);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContent.properties.modify())()
{
  type metadata accessor for FormatContent(0);
  return nullsub_1;
}

uint64_t sub_1BB388690(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatContent(0) + 68);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContent.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatContent(0) + 68);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContent.selectors.modify())()
{
  type metadata accessor for FormatContent(0);
  return nullsub_1;
}

uint64_t FormatContent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v23 = (char *)&v22 - v6;
  sub_1BA4B07F0(0, &qword_1ED3C0980, (uint64_t (*)(uint64_t))sub_1BA64D4C8, v4);
  MEMORY[0x1E0C80A78](v7);
  v22 = (uint64_t)&v22 - v8;
  sub_1BA4CDF6C(0, &qword_1ED39DBC8, (uint64_t (*)(void))sub_1BA64D56C, (uint64_t)&type metadata for FormatContent.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA64D56C();
  sub_1BB8746C8();
  LOBYTE(v26) = 0;
  v14 = v24;
  sub_1BB87417C();
  if (!v14)
  {
    v15 = (uint64_t)v23;
    v24 = a1;
    v16 = (int *)type metadata accessor for FormatContent(0);
    LOBYTE(v26) = 1;
    sub_1BB86C8B0();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B0510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1BB8741AC();
    LOBYTE(v26) = 2;
    sub_1BB87411C();
    LOBYTE(v26) = 3;
    sub_1BB87411C();
    LOBYTE(v26) = 5;
    sub_1BB87411C();
    v17 = v15;
    sub_1BA6050C4(v2 + v16[10], v15, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v18 = v22;
    Reference<A>.init(value:)(v17, v22);
    LOBYTE(v26) = 13;
    sub_1BA64D4C8(0);
    sub_1BA4A2870((unint64_t *)&unk_1ED3A0D80, (uint64_t (*)(uint64_t))sub_1BA64D4C8, MEMORY[0x1E0DB5098]);
    sub_1BB87414C();
    sub_1BA6ED6EC(v18, (uint64_t)&qword_1ED3C0980, (uint64_t)sub_1BA64D4C8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    LOBYTE(v26) = 4;
    sub_1BB87411C();
    v26 = *(_QWORD *)(v2 + v16[11]);
    v25 = 6;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA585B04((unint64_t *)&qword_1ED39DA10, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v26 = *(_QWORD *)(v2 + v16[12]);
    v25 = 7;
    sub_1BB8741AC();
    v26 = *(_QWORD *)(v2 + v16[13]);
    v25 = 8;
    sub_1BB8741AC();
    v26 = *(_QWORD *)(v2 + v16[15]);
    v25 = 10;
    sub_1BA4B07F0(0, &qword_1ED3B9518, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAF62C30();
    sub_1BB8741AC();
    v26 = *(_QWORD *)(v2 + v16[16]);
    v25 = 11;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9470, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5DBC08((unint64_t *)&qword_1ED39D9A0, (uint64_t (*)(void))sub_1BA89B7F8, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v26 = *(_QWORD *)(v2 + v16[17]);
    v25 = 12;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B96C0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA64D430((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
    __swift_project_boxed_opaque_existential_1(v24, v24[3]);
    v19 = sub_1BB872874();
    v20 = Dictionary<>.bindingContent.getter(v19);
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      v26 = *(_QWORD *)(v2 + v16[14]);
      v25 = 9;
      sub_1BA64D5B0(0);
      sub_1BA4A2870(&qword_1ED39D440, (uint64_t (*)(uint64_t))sub_1BA64D5B0, (uint64_t)&protocol conformance descriptor for FormatFileReferenceCollection<A>);
      sub_1BB8741AC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1BB388E08(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB388E40 + 4 * byte_1BB90E4E0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB388E40()
{
  return 0x446873696C627570;
}

uint64_t sub_1BB388E60()
{
  return 0x4449676174;
}

uint64_t sub_1BB388E74()
{
  return 0x44496575737369;
}

uint64_t sub_1BB388E8C()
{
  return 0x49656C6369747261;
}

uint64_t sub_1BB388EAC()
{
  return 0x6465626D45626577;
}

unint64_t sub_1BB388EC8()
{
  return 0xD000000000000012;
}

uint64_t sub_1BB388EE8()
{
  return 0x7974696E69666661;
}

uint64_t sub_1BB388F0C()
{
  return 0x6F7779654B644169;
}

uint64_t sub_1BB388F2C()
{
  return 0x73656D656874;
}

uint64_t sub_1BB388F40()
{
  return 0x70756F7267627573;
}

unint64_t sub_1BB388F88()
{
  return 0xD000000000000011;
}

uint64_t sub_1BB388FA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB388E08(*a1);
  v5 = v4;
  if (v3 == sub_1BB388E08(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB38902C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB388E08(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB38908C()
{
  unsigned __int8 *v0;

  sub_1BB388E08(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB3890CC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB388E08(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB389128@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB398EB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BB389154@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB388E08(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB38917C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB398EB8();
  *a1 = result;
  return result;
}

uint64_t sub_1BB3891A0()
{
  sub_1BA64D56C();
  return sub_1BB874710();
}

uint64_t sub_1BB3891C8()
{
  sub_1BA64D56C();
  return sub_1BB87471C();
}

uint64_t sub_1BB3891F0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB389240()
{
  return sub_1BB872A90();
}

uint64_t sub_1BB389258()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB3892A4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BB3892F4(_QWORD *a1@<X8>)
{
  *a1 = 0x3273656D656874;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1BB389310@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BB389364()
{
  sub_1BA64D528();
  return sub_1BB874710();
}

uint64_t sub_1BB38938C()
{
  sub_1BA64D528();
  return sub_1BB87471C();
}

uint64_t sub_1BB3893B4(_QWORD *a1)
{
  return FormatContent.encode(to:)(a1);
}

uint64_t FormatContent.copy(sidecars:sidecarConfig:log:name:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)();
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t (*v57)();
  uint64_t v58;
  char isUniquelyReferenced_nonNull_native;
  char v60;
  unint64_t v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  _QWORD *v68;
  unint64_t *v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int64_t v107;
  int64_t v108;
  char v109;
  int64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t *v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t result;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  BOOL v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int64_t v180;
  int64_t v181;
  _QWORD *v182;
  int64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  int64_t v190;
  int64_t v191;
  _QWORD *v192;
  unint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v197;
  uint64_t v198;
  int64_t v199;
  uint64_t v200;
  int64_t v201;
  int64_t v202;
  uint64_t v203;
  int64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int64_t v210;
  int64_t v211;
  uint64_t v212;
  int64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  uint64_t v220;
  _QWORD *v221;
  int64_t v222;
  int64_t v223;
  uint64_t v224;
  int64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  _QWORD *v232;
  uint64_t v233;
  _BYTE *v234;
  _QWORD *v235;
  _QWORD *v236;
  uint64_t v237;
  char v238;
  __int128 v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  int64_t v261;
  int64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int64_t v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t (*v284)(void);
  uint64_t v285;
  _QWORD v286[2];
  __int128 v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  _QWORD *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  char *v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  _QWORD *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  __int128 v322;
  unint64_t v323;
  uint64_t v324;
  __int128 v325;
  unint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t *v334;
  uint64_t v335;
  unint64_t v336;
  _QWORD *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  _OWORD v341[2];
  uint64_t v342;
  char v343;
  uint64_t v344;
  uint64_t v345;

  v320 = a3;
  v311 = a6;
  sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v286 - v11;
  v13 = type metadata accessor for FormatContentSlotItemObject();
  v314 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v331 = (uint64_t)v286 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v318 = type metadata accessor for FormatContentSlotItem();
  v15 = *(_QWORD *)(v318 - 8);
  MEMORY[0x1E0C80A78](v318);
  v319 = (uint64_t)v286 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FormatContentSubgroup();
  v307 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v305 = (uint64_t)v286 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v308 = (uint64_t)v286 - v20;
  MEMORY[0x1E0C80A78](v21);
  v310 = (char *)v286 - v22;
  v306 = type metadata accessor for FeedGroupConfigSidecar();
  v23 = *(_QWORD *)(v306 - 8);
  MEMORY[0x1E0C80A78](v306);
  v335 = (uint64_t)v286 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v334 = (_QWORD *)((char *)v286 - v26);
  v27 = type metadata accessor for FormatContentSidecarPlacement(0);
  v28 = *(_QWORD *)(v27 - 8);
  v338 = v27;
  v339 = v28;
  MEMORY[0x1E0C80A78](v27);
  v309 = (char *)v286 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v286 - v31;
  v33 = *a2;
  sub_1BA7AA598();
  v327 = v34;
  v35 = swift_allocObject();
  v322 = xmmword_1BB87FC80;
  *(_OWORD *)(v35 + 16) = xmmword_1BB87FC80;
  *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
  v36 = sub_1BA6A2D8C();
  v328 = a4;
  *(_QWORD *)(v35 + 32) = a4;
  *(_QWORD *)(v35 + 40) = a5;
  v333 = a1;
  v37 = *(_QWORD *)(a1 + 16);
  v38 = MEMORY[0x1E0DEB418];
  v39 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v35 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v35 + 104) = v39;
  v326 = v36;
  *(_QWORD *)(v35 + 64) = v36;
  *(_QWORD *)(v35 + 72) = v37;
  v40 = *(_QWORD *)(v33 + 16);
  *(_QWORD *)(v35 + 136) = v38;
  *(_QWORD *)(v35 + 144) = v39;
  *(_QWORD *)(v35 + 112) = v40;
  v321 = a5;
  v41 = v320;
  swift_bridgeObjectRetain();
  v42 = sub_1BB87330C();
  sub_1BB86EF44("%{public}@ will resolve content with %ld sidecar configs and %ld placements", 75, 2, &dword_1BA493000, v41, v42, v35);
  swift_bridgeObjectRelease();
  v312 = v33;
  if (!*(_QWORD *)(v33 + 16) || !v37)
  {
    v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_1BB87CE70;
    v74 = v326;
    *(_QWORD *)(v73 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v73 + 64) = v74;
    *(_QWORD *)(v73 + 32) = v328;
    *(_QWORD *)(v73 + 40) = v321;
    swift_bridgeObjectRetain();
    v75 = sub_1BB87330C();
    sub_1BB86EF44("%{public}@ no sidecar configs or placements for config", 54, 2, &dword_1BA493000, v41, v75, v73);
LABEL_68:
    swift_bridgeObjectRelease();
    return sub_1BA4C2DD8(v313, (uint64_t)v311, type metadata accessor for FormatContent);
  }
  v303 = v17;
  v304 = v15;
  v296 = v12;
  v323 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v43 = v333 + v323;
  v337 = *(_QWORD **)(v23 + 72);
  swift_bridgeObjectRetain();
  v44 = MEMORY[0x1E0DEE9E0];
  v45 = type metadata accessor for FeedGroupConfigSidecar;
  v46 = v334;
  do
  {
    sub_1BA4C2DD8(v43, (uint64_t)v46, (uint64_t (*)(_QWORD))v45);
    v48 = *v46;
    v49 = v46[1];
    v50 = *(_QWORD *)(v44 + 16);
    swift_bridgeObjectRetain();
    v336 = v48;
    if (v50)
    {
      v51 = sub_1BA6E35A8(v48, v49);
      v52 = MEMORY[0x1E0DEE9D8];
      if ((v53 & 1) != 0)
      {
        v52 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v51);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v52 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8((uint64_t)v46, v335, (uint64_t (*)(_QWORD))v45);
    v54 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v52 = sub_1BB38C5A4(0, *(_QWORD *)(v52 + 16) + 1, 1, v52, &qword_1ED3AB818, (uint64_t (*)(uint64_t))v45);
    v56 = *(_QWORD *)(v52 + 16);
    v55 = *(_QWORD *)(v52 + 24);
    if (v56 >= v55 >> 1)
      v52 = sub_1BB38C5A4(v55 > 1, v56 + 1, 1, v52, &qword_1ED3AB818, (uint64_t (*)(uint64_t))v45);
    *(_QWORD *)(v52 + 16) = v56 + 1;
    v57 = v45;
    sub_1BA5193C4(v335, v52 + v323 + v56 * (_QWORD)v337, (uint64_t (*)(_QWORD))v45);
    swift_bridgeObjectRetain();
    v58 = v54;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v341[0] = v54;
    v61 = sub_1BA6E35A8(v336, v49);
    v62 = *(_QWORD *)(v54 + 16);
    v63 = (v60 & 1) == 0;
    v64 = v62 + v63;
    if (__OFADD__(v62, v63))
    {
      __break(1u);
LABEL_230:
      __break(1u);
LABEL_231:
      __break(1u);
LABEL_232:
      __break(1u);
LABEL_233:
      __break(1u);
LABEL_234:
      __break(1u);
LABEL_235:
      __break(1u);
LABEL_236:
      __break(1u);
LABEL_237:
      __break(1u);
LABEL_238:
      __break(1u);
LABEL_239:
      __break(1u);
LABEL_240:
      __break(1u);
LABEL_241:
      __break(1u);
LABEL_242:
      __break(1u);
      goto LABEL_243;
    }
    v65 = v60;
    if (*(_QWORD *)(v58 + 24) >= v64)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v68 = *(_QWORD **)&v341[0];
        if ((v60 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BB4C9BF4();
        v68 = *(_QWORD **)&v341[0];
        if ((v65 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1BB4BAC08(v64, isUniquelyReferenced_nonNull_native);
      v66 = sub_1BA6E35A8(v336, v49);
      if ((v65 & 1) != (v67 & 1))
      {
LABEL_250:
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v61 = v66;
      v68 = *(_QWORD **)&v341[0];
      if ((v65 & 1) != 0)
      {
LABEL_4:
        v47 = v68[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v47 + 8 * v61) = v52;
        v44 = (uint64_t)v68;
        goto LABEL_5;
      }
    }
    v68[(v61 >> 6) + 8] |= 1 << v61;
    v69 = (unint64_t *)(v68[6] + 16 * v61);
    *v69 = v336;
    v69[1] = v49;
    *(_QWORD *)(v68[7] + 8 * v61) = v52;
    v70 = v68[2];
    v71 = __OFADD__(v70, 1);
    v72 = v70 + 1;
    if (v71)
      goto LABEL_234;
    v44 = (uint64_t)v68;
    v68[2] = v72;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = v334;
    v45 = v57;
    sub_1BA4A2E80((uint64_t)v334, (uint64_t (*)(_QWORD))v57);
    v43 += (uint64_t)v337;
    --v37;
    v332 = v44;
  }
  while (v37);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v341[0] = MEMORY[0x1E0DEE9D8];
  v316 = *(_QWORD *)(v312 + 16);
  if (!v316)
  {
    swift_bridgeObjectRelease();
    v119 = MEMORY[0x1E0DEE9D8];
    v77 = v320;
    v78 = v321;
    goto LABEL_65;
  }
  v315 = (_QWORD *)(v312 + 32);
  swift_bridgeObjectRetain();
  v76 = 0;
  v325 = xmmword_1BB87A390;
  v77 = v320;
  v78 = v321;
  while (2)
  {
    v79 = &v315[4 * v76];
    v80 = v79[2];
    v330 = *(_QWORD *)(v80 + 16);
    if (v330)
    {
      v317 = v76;
      v81 = v79[1];
      v336 = *v79;
      v329 = (char *)(v80 + 32);
      LODWORD(v335) = *((unsigned __int8 *)v79 + 24);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v82 = 0;
      v83 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v333 = v82;
        v334 = (uint64_t *)v83;
        v84 = (uint64_t *)&v329[16 * v82];
        v85 = *v84;
        v86 = v84[1];
        v87 = *(_QWORD *)(v44 + 16);
        swift_bridgeObjectRetain();
        if (v87 && (v88 = sub_1BA6E35A8(v85, v86), (v89 & 1) != 0))
        {
          v90 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v88);
          v91 = swift_allocObject();
          *(_OWORD *)(v91 + 16) = v322;
          v92 = MEMORY[0x1E0DEA968];
          v93 = v326;
          *(_QWORD *)(v91 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v91 + 64) = v93;
          *(_QWORD *)(v91 + 32) = v328;
          *(_QWORD *)(v91 + 40) = v78;
          v94 = *(_QWORD *)(v90 + 16);
          *(_QWORD *)(v91 + 96) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v91 + 104) = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v91 + 112) = v85;
          *(_QWORD *)(v91 + 72) = v94;
          *(_QWORD *)(v91 + 136) = v92;
          *(_QWORD *)(v91 + 144) = v93;
          *(_QWORD *)(v91 + 120) = v86;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v95 = sub_1BB87330C();
          sub_1BB86EF44("%{public}@ found %ld sidecar placements for subtype %{public}@", 62, 2, &dword_1BA493000, v77, v95, v91);
          swift_bridgeObjectRelease();
          v96 = *(_QWORD *)(v90 + 16);
          if (v96)
          {
            v345 = MEMORY[0x1E0DEE9D8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BAC7B3F4(0, v96, 0);
            v97 = v345;
            v324 = v90;
            v98 = v90 + v323;
            do
            {
              sub_1BA4C2DD8(v98, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupConfigSidecar);
              v99 = &v32[*(int *)(v338 + 20)];
              *(_QWORD *)v99 = v336;
              *((_QWORD *)v99 + 1) = v81;
              *((_QWORD *)v99 + 2) = v80;
              v99[24] = v335;
              v345 = v97;
              v100 = *(_QWORD *)(v97 + 16);
              v101 = *(_QWORD *)(v97 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v100 >= v101 >> 1)
              {
                sub_1BAC7B3F4(v101 > 1, v100 + 1, 1);
                v97 = v345;
              }
              *(_QWORD *)(v97 + 16) = v100 + 1;
              sub_1BA5193C4((uint64_t)v32, v97+ ((*(unsigned __int8 *)(v339 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80))+ *(_QWORD *)(v339 + 72) * v100, type metadata accessor for FormatContentSidecarPlacement);
              v98 += (uint64_t)v337;
              --v96;
            }
            while (v96);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v77 = v320;
            v78 = v321;
            goto LABEL_44;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v102 = swift_allocObject();
          *(_OWORD *)(v102 + 16) = v325;
          v103 = MEMORY[0x1E0DEA968];
          v104 = v326;
          *(_QWORD *)(v102 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v102 + 64) = v104;
          *(_QWORD *)(v102 + 32) = v328;
          *(_QWORD *)(v102 + 40) = v78;
          *(_QWORD *)(v102 + 96) = v103;
          *(_QWORD *)(v102 + 104) = v104;
          *(_QWORD *)(v102 + 72) = v85;
          *(_QWORD *)(v102 + 80) = v86;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v105 = sub_1BB87330C();
          sub_1BB86EF44("%{public}@ no sidecars found for subtype %{public}@", 51, 2, &dword_1BA493000, v77, v105, v102);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v97 = MEMORY[0x1E0DEE9D8];
LABEL_44:
        v106 = *(_QWORD *)(v97 + 16);
        v83 = (uint64_t)v334;
        v107 = v334[2];
        v108 = v107 + v106;
        if (__OFADD__(v107, v106))
          goto LABEL_222;
        v109 = swift_isUniquelyReferenced_nonNull_native();
        if ((v109 & 1) == 0 || v108 > *(_QWORD *)(v83 + 24) >> 1)
        {
          if (v107 <= v108)
            v110 = v107 + v106;
          else
            v110 = v107;
          v83 = sub_1BB393574(v109, v110, 1, v83);
        }
        v111 = v333;
        if (*(_QWORD *)(v97 + 16))
        {
          v112 = *(_QWORD *)(v83 + 16);
          if ((*(_QWORD *)(v83 + 24) >> 1) - v112 < v106)
            goto LABEL_225;
          v113 = (*(unsigned __int8 *)(v339 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80);
          v114 = *(_QWORD *)(v339 + 72);
          v115 = v83 + v113 + v114 * v112;
          if (v97 + v113 < v115 + v114 * v106 && v115 < v97 + v113 + v114 * v106)
          {
LABEL_249:
            sub_1BB873F84();
            __break(1u);
            goto LABEL_250;
          }
          swift_arrayInitWithCopy();
          if (v106)
          {
            v117 = *(_QWORD *)(v83 + 16);
            v71 = __OFADD__(v117, v106);
            v118 = v117 + v106;
            if (v71)
              goto LABEL_227;
            *(_QWORD *)(v83 + 16) = v118;
          }
        }
        else if (v106)
        {
          goto LABEL_223;
        }
        v82 = v111 + 1;
        swift_bridgeObjectRelease();
        v44 = v332;
        if (v82 == v330)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v76 = v317;
          goto LABEL_29;
        }
      }
    }
    v83 = MEMORY[0x1E0DEE9D8];
LABEL_29:
    ++v76;
    sub_1BA6BABB4(v83, (uint64_t (*)(void))sub_1BB393574, type metadata accessor for FormatContentSidecarPlacement);
    if (v76 != v316)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v119 = *(_QWORD *)&v341[0];
LABEL_65:
  v120 = *(_QWORD *)(v119 + 16);
  v121 = v310;
  v122 = (uint64_t *)v309;
  if (!v120)
  {
    swift_bridgeObjectRelease();
    v130 = swift_allocObject();
    *(_OWORD *)(v130 + 16) = xmmword_1BB87CE70;
    v131 = v326;
    *(_QWORD *)(v130 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v130 + 64) = v131;
    *(_QWORD *)(v130 + 32) = v328;
    *(_QWORD *)(v130 + 40) = v78;
    swift_bridgeObjectRetain();
    v132 = sub_1BB87330C();
    sub_1BB86EF44("%{public}@ config has sidecars but not placements found for sidecar configuration", 81, 2, &dword_1BA493000, v77, v132, v130);
    goto LABEL_68;
  }
  v123 = swift_allocObject();
  v287 = xmmword_1BB87A390;
  *(_OWORD *)(v123 + 16) = xmmword_1BB87A390;
  v124 = v326;
  *(_QWORD *)(v123 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v123 + 64) = v124;
  *(_QWORD *)(v123 + 32) = v328;
  *(_QWORD *)(v123 + 40) = v78;
  v125 = *(_QWORD *)(v119 + 16);
  *(_QWORD *)(v123 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v123 + 104) = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v123 + 72) = v125;
  swift_bridgeObjectRetain();
  v126 = sub_1BB87330C();
  sub_1BB86EF44("%{public}@ will attempt to place %ld sidecars", 45, 2, &dword_1BA493000, v77, v126, v123);
  swift_bridgeObjectRelease();
  v297 = type metadata accessor for FormatContent(0);
  v127 = *(_QWORD *)(v313 + *(int *)(v297 + 60));
  v344 = MEMORY[0x1E0DEE9E8];
  v345 = v127;
  v128 = v119 + ((*(unsigned __int8 *)(v339 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80));
  swift_bridgeObjectRetain();
  v129 = 0;
  v294 = v119;
  v293 = v120;
  v295 = v128;
LABEL_71:
  if (v129 >= *(_QWORD *)(v119 + 16))
    goto LABEL_239;
  v140 = *(_QWORD *)(v339 + 72);
  v323 = v129;
  sub_1BA4C2DD8(v128 + v140 * v129, (uint64_t)v122, type metadata accessor for FormatContentSidecarPlacement);
  v141 = *(_QWORD *)(v345 + 16);
  if (!v141)
    goto LABEL_70;
  v329 = (char *)v122 + *(int *)(v338 + 20);
  v142 = (*(unsigned __int8 *)(v307 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v307 + 80);
  v143 = v345 + v142;
  *(_QWORD *)&v325 = *(_QWORD *)(v307 + 72);
  swift_bridgeObjectRetain();
  v144 = 0;
  while (1)
  {
    v336 = v144;
    sub_1BA4C2DD8(v143, (uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
    v145 = *v121 == *(_QWORD *)v329 && v121[1] == *((_QWORD *)v329 + 1);
    if (v145)
      break;
    v146 = sub_1BB874398();
    sub_1BA4A2E80((uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
    if ((v146 & 1) != 0)
      goto LABEL_82;
    v144 = v336 + 1;
    v143 += v325;
    if (v141 == v336 + 1)
    {
      swift_bridgeObjectRelease();
      v119 = v294;
      v120 = v293;
      v128 = v295;
      goto LABEL_70;
    }
  }
  sub_1BA4A2E80((uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
LABEL_82:
  swift_bridgeObjectRelease();
  v147 = *(int *)(v297 + 60);
  v290 = (char *)v122 + *(int *)(v306 + 20);
  v289 = v147;
  v148 = *(_QWORD *)&v290[v147];
  v291 = *(_QWORD *)(v148 + 16);
  if (!v291)
  {
    v232 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v233 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v233)
      goto LABEL_204;
    goto LABEL_194;
  }
  v149 = v148 + v142;
  v286[0] = v148;
  swift_bridgeObjectRetain_n();
  v150 = 0;
  v298 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v288 = v149;
LABEL_84:
  v292 = v150;
  v151 = v149 + v150 * v325;
  v152 = v308;
  sub_1BA4C2DD8(v151, v308, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  v153 = *(_QWORD *)(v152 + *(int *)(v303 + 32));
  v316 = *(_QWORD *)(v153 + 16);
  if (!v316)
  {
    v155 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_171;
  }
  v317 = v153 + 32;
  v286[1] = v153;
  swift_bridgeObjectRetain_n();
  v154 = 0;
  v155 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (2)
  {
    v324 = v154;
    v156 = (_QWORD *)(v317 + 48 * v154);
    v157 = v156[4];
    v335 = *(_QWORD *)(v157 + 16);
    if (!v335)
    {
      v164 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      goto LABEL_152;
    }
    v315 = v155;
    v158 = v156[1];
    v159 = v156[2];
    v160 = v156[3];
    v161 = v156[5];
    v162 = v304;
    v334 = (uint64_t *)(v157
                     + ((*(unsigned __int8 *)(v304 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v304 + 80)));
    v302 = v158;
    swift_bridgeObjectRetain_n();
    v301 = v159;
    swift_bridgeObjectRetain_n();
    v300 = v160;
    swift_bridgeObjectRetain_n();
    v312 = v157;
    swift_bridgeObjectRetain_n();
    v299 = v161;
    swift_bridgeObjectRetain_n();
    v163 = 0;
    v333 = *(_QWORD *)(v162 + 72);
    v164 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_92:
    v165 = v319;
    sub_1BA4C2DD8((uint64_t)v334 + v333 * v163, v319, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
    sub_1BA64B454();
    v167 = v166;
    v168 = (uint64_t *)(v165 + *(int *)(v318 + 20));
    v169 = *v168;
    v337 = v164;
    if (!v169 || (v170 = v168[1], (v171 = *(_QWORD *)(v170 + 16)) == 0))
    {
      v175 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_117:
      v189 = v175[2];
      v190 = v167[2];
      v191 = v190 + v189;
      if (__OFADD__(v190, v189))
        goto LABEL_230;
      v192 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if ((_DWORD)v192 && v191 <= v167[3] >> 1)
      {
        v193 = v175[2];
        if (v193)
        {
LABEL_121:
          v194 = v167[2];
          if ((v167[3] >> 1) - v194 < (uint64_t)v193)
            goto LABEL_235;
          v195 = (unint64_t)&v167[6 * v194 + 4];
          if ((unint64_t)(v175 + 4) < v195 + 48 * v193 && v195 < (unint64_t)&v175[6 * v193 + 4])
            goto LABEL_249;
          swift_arrayInitWithCopy();
          if (v193 < v189)
            goto LABEL_231;
          v197 = v167[2];
          v71 = __OFADD__(v197, v193);
          v198 = v197 + v193;
          if (v71)
            goto LABEL_236;
          v167[2] = v198;
LABEL_135:
          swift_bridgeObjectRelease();
          sub_1BA4A2E80(v319, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
          v200 = v167[2];
          v164 = v337;
          v201 = v337[2];
          v202 = v201 + v200;
          if (__OFADD__(v201, v200))
            goto LABEL_232;
          v203 = swift_isUniquelyReferenced_nonNull_native();
          if ((v203 & 1) != 0 && v202 <= v164[3] >> 1)
          {
            if (!v167[2])
              goto LABEL_90;
          }
          else
          {
            if (v201 <= v202)
              v204 = v201 + v200;
            else
              v204 = v201;
            v164 = sub_1BA6493B4((_QWORD *)v203, v204, 1, v164, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
            if (!v167[2])
            {
LABEL_90:
              if (v200)
                goto LABEL_233;
              goto LABEL_91;
            }
          }
          v205 = v164[2];
          if ((v164[3] >> 1) - v205 < v200)
            goto LABEL_237;
          v206 = (unint64_t)&v164[6 * v205 + 4];
          if ((unint64_t)(v167 + 4) < v206 + 48 * v200 && v206 < (unint64_t)&v167[6 * v200 + 4])
            goto LABEL_249;
          swift_arrayInitWithCopy();
          if (v200)
          {
            v207 = v164[2];
            v71 = __OFADD__(v207, v200);
            v208 = v207 + v200;
            if (v71)
              goto LABEL_238;
            v164[2] = v208;
          }
LABEL_91:
          ++v163;
          swift_bridgeObjectRelease();
          if (v163 == v335)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            v121 = v310;
            v122 = (uint64_t *)v309;
            v155 = v315;
LABEL_152:
            v209 = v164[2];
            v210 = v155[2];
            v211 = v210 + v209;
            if (__OFADD__(v210, v209))
              goto LABEL_240;
            v212 = swift_isUniquelyReferenced_nonNull_native();
            if ((v212 & 1) == 0 || v211 > v155[3] >> 1)
            {
              if (v210 <= v211)
                v213 = v210 + v209;
              else
                v213 = v210;
              v155 = sub_1BA6493B4((_QWORD *)v212, v213, 1, v155, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
              if (v164[2])
                goto LABEL_161;
LABEL_86:
              if (!v209)
                goto LABEL_87;
              goto LABEL_241;
            }
            if (!v164[2])
              goto LABEL_86;
LABEL_161:
            v214 = v155[2];
            if ((v155[3] >> 1) - v214 < v209)
              goto LABEL_242;
            v215 = (unint64_t)&v155[6 * v214 + 4];
            if ((unint64_t)(v164 + 4) < v215 + 48 * v209 && v215 < (unint64_t)&v164[6 * v209 + 4])
              goto LABEL_249;
            swift_arrayInitWithCopy();
            if (v209)
            {
              v217 = v155[2];
              v71 = __OFADD__(v217, v209);
              v218 = v217 + v209;
              if (!v71)
              {
                v155[2] = v218;
                goto LABEL_87;
              }
LABEL_243:
              __break(1u);
LABEL_244:
              __break(1u);
LABEL_245:
              __break(1u);
LABEL_246:
              __break(1u);
LABEL_247:
              __break(1u);
LABEL_248:
              __break(1u);
              goto LABEL_249;
            }
LABEL_87:
            v154 = v324 + 1;
            swift_bridgeObjectRelease();
            if (v154 != v316)
              continue;
            swift_bridgeObjectRelease_n();
LABEL_171:
            sub_1BA4A2E80(v308, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
            v219 = v155;
            v220 = v155[2];
            v221 = v298;
            v222 = v298[2];
            v223 = v222 + v220;
            if (__OFADD__(v222, v220))
              goto LABEL_244;
            v224 = swift_isUniquelyReferenced_nonNull_native();
            if ((v224 & 1) == 0 || v223 > v221[3] >> 1)
            {
              if (v222 <= v223)
                v225 = v222 + v220;
              else
                v225 = v222;
              v298 = sub_1BA6493B4((_QWORD *)v224, v225, 1, v221, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
            }
            if (v219[2])
            {
              v226 = v298[2];
              if ((v298[3] >> 1) - v226 < v220)
                goto LABEL_246;
              v227 = (unint64_t)&v298[6 * v226 + 4];
              if ((unint64_t)(v219 + 4) < v227 + 48 * v220 && v227 < (unint64_t)&v219[6 * v220 + 4])
                goto LABEL_249;
              swift_arrayInitWithCopy();
              if (v220)
              {
                v229 = v298[2];
                v71 = __OFADD__(v229, v220);
                v230 = v229 + v220;
                if (v71)
                  goto LABEL_247;
                v298[2] = v230;
              }
            }
            else if (v220)
            {
              goto LABEL_245;
            }
            v231 = v292 + 1;
            swift_bridgeObjectRelease();
            v150 = v231;
            v145 = v231 == v291;
            v149 = v288;
            if (!v145)
              goto LABEL_84;
            swift_bridgeObjectRelease_n();
            v232 = v298;
            v233 = v298[2];
            if (!v233)
            {
LABEL_204:
              v235 = (_QWORD *)MEMORY[0x1E0DEE9D8];
              goto LABEL_205;
            }
LABEL_194:
            swift_bridgeObjectRetain();
            v298 = v232;
            v234 = v232 + 9;
            v235 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            do
            {
              v237 = *((_QWORD *)v234 - 1);
              v238 = *v234;
              v239 = *(_OWORD *)(v234 - 24);
              v341[0] = *(_OWORD *)(v234 - 40);
              v341[1] = v239;
              v342 = v237;
              v343 = v238;
              FormatContentRequirement.sidecarDedupeIdentifier.getter();
              if (v241)
              {
                v242 = v240;
                v243 = v241;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v235 = sub_1BA6EA0D0(0, v235[2] + 1, 1, v235);
                v245 = v235[2];
                v244 = v235[3];
                if (v245 >= v244 >> 1)
                  v235 = sub_1BA6EA0D0((_QWORD *)(v244 > 1), v245 + 1, 1, v235);
                v235[2] = v245 + 1;
                v236 = &v235[2 * v245];
                v236[4] = v242;
                v236[5] = v243;
                v78 = v321;
              }
              v234 += 48;
              --v233;
            }
            while (v233);
            swift_bridgeObjectRelease();
LABEL_205:
            swift_bridgeObjectRelease();
            v340 = sub_1BB873060();
            v246 = v235[2];
            if (v246)
            {
              v247 = v235 + 5;
              do
              {
                v248 = *(v247 - 1);
                v249 = *v247;
                swift_bridgeObjectRetain();
                sub_1BA6EE5AC((uint64_t *)v341, v248, v249);
                swift_bridgeObjectRelease();
                v247 += 2;
                --v246;
              }
              while (v246);
            }
            swift_bridgeObjectRelease();
            v250 = v340;
            v251 = v344;
            swift_bridgeObjectRetain();
            v252 = sub_1BA6EBD20(v250, v251);
            swift_bridgeObjectRelease();
            if ((v252 & 1) != 0)
            {
              sub_1BA6E3FB8(v250);
              v128 = v295;
              if (!v329[24])
              {
                v264 = swift_allocObject();
                *(_OWORD *)(v264 + 16) = v322;
                v265 = MEMORY[0x1E0DEA968];
                v266 = v326;
                *(_QWORD *)(v264 + 56) = MEMORY[0x1E0DEA968];
                *(_QWORD *)(v264 + 64) = v266;
                *(_QWORD *)(v264 + 32) = v328;
                *(_QWORD *)(v264 + 40) = v78;
                v267 = *v122;
                v268 = v122[1];
                *(_QWORD *)(v264 + 96) = v265;
                *(_QWORD *)(v264 + 104) = v266;
                *(_QWORD *)(v264 + 72) = v267;
                *(_QWORD *)(v264 + 80) = v268;
                v269 = *(_QWORD *)v329;
                v270 = *((_QWORD *)v329 + 1);
                *(_QWORD *)(v264 + 136) = v265;
                *(_QWORD *)(v264 + 144) = v266;
                *(_QWORD *)(v264 + 112) = v269;
                *(_QWORD *)(v264 + 120) = v270;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v271 = sub_1BB87330C();
                sub_1BB86EF44("%{public}@ inserting sidecar %{public}@ before %{public}@", 57, 2, &dword_1BA493000, v77, v271, v264);
                swift_bridgeObjectRelease();
                v263 = *(_QWORD *)&v290[v289];
                swift_bridgeObjectRetain();
                v272 = v336;
                v273 = v336;
                goto LABEL_217;
              }
              if (v329[24] != 1)
              {
                v274 = swift_allocObject();
                *(_OWORD *)(v274 + 16) = v322;
                v275 = MEMORY[0x1E0DEA968];
                v276 = v326;
                *(_QWORD *)(v274 + 56) = MEMORY[0x1E0DEA968];
                *(_QWORD *)(v274 + 64) = v276;
                *(_QWORD *)(v274 + 32) = v328;
                *(_QWORD *)(v274 + 40) = v78;
                v277 = *v122;
                v278 = v122[1];
                *(_QWORD *)(v274 + 96) = v275;
                *(_QWORD *)(v274 + 104) = v276;
                *(_QWORD *)(v274 + 72) = v277;
                *(_QWORD *)(v274 + 80) = v278;
                v279 = *(_QWORD *)v329;
                v280 = *((_QWORD *)v329 + 1);
                *(_QWORD *)(v274 + 136) = v275;
                *(_QWORD *)(v274 + 144) = v276;
                *(_QWORD *)(v274 + 112) = v279;
                *(_QWORD *)(v274 + 120) = v280;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v281 = sub_1BB87330C();
                sub_1BB86EF44("%{public}@ inserting sidecar %{public}@ replacing %{public}@", 60, 2, &dword_1BA493000, v77, v281, v274);
                swift_bridgeObjectRelease();
                v282 = v305;
                v261 = v336;
                sub_1BAA67D80(v336, v305);
                sub_1BA4A2E80(v282, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
                v263 = *(_QWORD *)&v290[v289];
                swift_bridgeObjectRetain();
                goto LABEL_216;
              }
              v253 = swift_allocObject();
              *(_OWORD *)(v253 + 16) = v322;
              v254 = MEMORY[0x1E0DEA968];
              v255 = v326;
              *(_QWORD *)(v253 + 56) = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v253 + 64) = v255;
              *(_QWORD *)(v253 + 32) = v328;
              *(_QWORD *)(v253 + 40) = v78;
              v256 = *v122;
              v257 = v122[1];
              *(_QWORD *)(v253 + 96) = v254;
              *(_QWORD *)(v253 + 104) = v255;
              *(_QWORD *)(v253 + 72) = v256;
              *(_QWORD *)(v253 + 80) = v257;
              v258 = *(_QWORD *)v329;
              v259 = *((_QWORD *)v329 + 1);
              *(_QWORD *)(v253 + 136) = v254;
              *(_QWORD *)(v253 + 144) = v255;
              *(_QWORD *)(v253 + 112) = v258;
              *(_QWORD *)(v253 + 120) = v259;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v260 = sub_1BB87330C();
              sub_1BB86EF44("%{public}@ inserting sidecar %{public}@ after %{public}@", 56, 2, &dword_1BA493000, v77, v260, v253);
              swift_bridgeObjectRelease();
              v261 = v336 + 1;
              if (__OFADD__(v336, 1))
                goto LABEL_248;
              v262 = *(_QWORD *)(v345 + 16);
              v263 = *(_QWORD *)&v290[v289];
              swift_bridgeObjectRetain();
              if (v261 >= v262)
              {
                sub_1BA6BABB4(v263, (uint64_t (*)(void))sub_1BA6D347C, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
              }
              else
              {
LABEL_216:
                v272 = v261;
                v273 = v261;
LABEL_217:
                sub_1BAA69154(v272, v273, v263);
                swift_bridgeObjectRelease();
              }
              v119 = v294;
              v120 = v293;
            }
            else
            {
              swift_bridgeObjectRelease();
              v134 = swift_allocObject();
              *(_OWORD *)(v134 + 16) = v287;
              v135 = MEMORY[0x1E0DEA968];
              v136 = v326;
              *(_QWORD *)(v134 + 56) = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v134 + 64) = v136;
              *(_QWORD *)(v134 + 32) = v328;
              *(_QWORD *)(v134 + 40) = v78;
              v137 = *(_QWORD *)v329;
              v138 = *((_QWORD *)v329 + 1);
              *(_QWORD *)(v134 + 96) = v135;
              *(_QWORD *)(v134 + 104) = v136;
              *(_QWORD *)(v134 + 72) = v137;
              *(_QWORD *)(v134 + 80) = v138;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v139 = sub_1BB87330C();
              sub_1BB86EF44("%{public}@ ignoring subgroup placement for %{public}@ because the requirements overlap with an existing subgroup", 112, 2, &dword_1BA493000, v77, v139, v134);
              swift_bridgeObjectRelease();
              v119 = v294;
              v120 = v293;
              v128 = v295;
            }
LABEL_70:
            v129 = v323 + 1;
            sub_1BA4A2E80((uint64_t)v122, type metadata accessor for FormatContentSidecarPlacement);
            if (v129 == v120)
              goto LABEL_228;
            goto LABEL_71;
          }
          goto LABEL_92;
        }
      }
      else
      {
        if (v190 <= v191)
          v199 = v190 + v189;
        else
          v199 = v190;
        v167 = sub_1BA6493B4(v192, v199, 1, v167, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
        v193 = v175[2];
        if (v193)
          goto LABEL_121;
      }
      if (v189)
        goto LABEL_231;
      goto LABEL_135;
    }
    break;
  }
  v172 = v314;
  v173 = v170 + ((*(unsigned __int8 *)(v314 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v314 + 80));
  swift_bridgeObjectRetain_n();
  v332 = v169;
  v330 = v170;
  sub_1BA5DCC20(v169);
  v174 = *(_QWORD *)(v172 + 72);
  v175 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v176 = v331;
    sub_1BA4C2DD8(v173, v331, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
    sub_1BA64B454();
    v178 = v177;
    sub_1BA4A2E80(v176, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
    v179 = *(_QWORD *)(v178 + 16);
    v180 = v175[2];
    v181 = v180 + v179;
    if (__OFADD__(v180, v179))
      break;
    v182 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)v182 && v181 <= v175[3] >> 1)
    {
      if (*(_QWORD *)(v178 + 16))
        goto LABEL_106;
    }
    else
    {
      if (v180 <= v181)
        v183 = v180 + v179;
      else
        v183 = v180;
      v175 = sub_1BA6493B4(v182, v183, 1, v175, (unint64_t *)&unk_1ED3CFBE0, (uint64_t)&type metadata for FormatContentRequirement);
      if (*(_QWORD *)(v178 + 16))
      {
LABEL_106:
        v184 = v175[2];
        if ((v175[3] >> 1) - v184 < v179)
          goto LABEL_224;
        v185 = (unint64_t)&v175[6 * v184 + 4];
        if (v178 + 32 < v185 + 48 * v179 && v185 < v178 + 32 + 48 * v179)
          goto LABEL_249;
        swift_arrayInitWithCopy();
        if (v179)
        {
          v187 = v175[2];
          v71 = __OFADD__(v187, v179);
          v188 = v187 + v179;
          if (v71)
            goto LABEL_226;
          v175[2] = v188;
        }
        goto LABEL_96;
      }
    }
    if (v179)
      goto LABEL_221;
LABEL_96:
    swift_bridgeObjectRelease();
    v173 += v174;
    if (!--v171)
    {
      swift_bridgeObjectRelease_n();
      sub_1BA5DCC4C(v332);
      v77 = v320;
      v78 = v321;
      goto LABEL_117;
    }
  }
  __break(1u);
LABEL_221:
  __break(1u);
LABEL_222:
  __break(1u);
LABEL_223:
  __break(1u);
LABEL_224:
  __break(1u);
LABEL_225:
  __break(1u);
LABEL_226:
  __break(1u);
LABEL_227:
  __break(1u);
LABEL_228:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v283 = sub_1BB871E24();
  v284 = MEMORY[0x1E0D52E40];
  v285 = (uint64_t)v296;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v283 - 8) + 56))(v296, 1, 1, v283);
  *(_QWORD *)&v341[0] = 0;
  FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, v311, 0, 0, v285, 0, (uint64_t *)v341, v345, 0);
  swift_bridgeObjectRelease();
  return sub_1BA6ED6EC(v285, (uint64_t)&qword_1ED3C20E0, (uint64_t)v284, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
}

uint64_t FormatContent.expand(placeholder:placeholders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  _QWORD v21[2];
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v21 - v10;
  v12 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for FormatContent(0) + 60));
  v13 = MEMORY[0x1E0DEE9D8];
  v26 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(v12 + 16);
  if (v14)
  {
    v22 = v11;
    v23 = a4;
    v24 = v4;
    v15 = *(_QWORD *)(type metadata accessor for FormatContentSubgroup() - 8);
    v16 = v12 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v17 = *(_QWORD *)(v15 + 72);
    v21[1] = v12;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_1BB38B40C(v16, a1, a2, a3, &v25);
      sub_1BA6BABB4(v25, (uint64_t (*)(void))sub_1BA6D347C, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
      v16 += v17;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
    v13 = v26;
    a4 = v23;
    v11 = v22;
  }
  v18 = sub_1BB871E24();
  v19 = MEMORY[0x1E0D52E40];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
  v26 = 0;
  FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, a4, 0, 0, (uint64_t)v11, 0, &v26, v13, 0);
  swift_bridgeObjectRelease();
  return sub_1BA6ED6EC((uint64_t)v11, (uint64_t)&qword_1ED3C20E0, (uint64_t)v19, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
}

uint64_t sub_1BB38B40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v47 = a5;
  v43 = a4;
  v44 = a2;
  v45 = a3;
  v6 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FormatContentSlotItem();
  v54 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for FormatContentSubgroup();
  v12 = *(int *)(v42 + 32);
  v46 = a1;
  v13 = *(_QWORD *)(a1 + v12);
  v14 = MEMORY[0x1E0DEE9D8];
  v59 = MEMORY[0x1E0DEE9D8];
  v49 = *(_QWORD *)(v13 + 16);
  if (v49)
  {
    v48 = v13 + 32;
    v41[1] = v13;
    swift_bridgeObjectRetain_n();
    v15 = 0;
    v57 = v6;
    do
    {
      v16 = (_QWORD *)(v48 + 48 * v15);
      v17 = v16[4];
      if (*(_QWORD *)(v17 + 16))
      {
        v53 = v15;
        v18 = v16[1];
        v19 = v16[2];
        v20 = v16[3];
        v55 = v16[5];
        v56 = v20;
        v21 = v17 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
        v51 = v18;
        swift_bridgeObjectRetain_n();
        v50 = v19;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v52 = v17;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v58 = MEMORY[0x1E0DEE9D8];
        sub_1BA4C2DD8(v21, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
        sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
        v22 = (char *)&loc_1BB38B65C + 4 * byte_1BB90E4FC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      ++v15;
      sub_1BA72B228(MEMORY[0x1E0DEE9D8], &qword_1ED3AC608, (uint64_t)&type metadata for FormatPlaceholder);
    }
    while (v15 != v49);
    swift_bridgeObjectRelease_n();
    v23 = v59;
    v14 = MEMORY[0x1E0DEE9D8];
    v24 = *(_QWORD *)(v59 + 16);
    if (v24)
      goto LABEL_8;
LABEL_14:
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v23 = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (!v24)
    goto LABEL_14;
LABEL_8:
  v59 = v14;
  sub_1BA7447E8(0, v24, 0);
  v25 = v59;
  v26 = (uint64_t *)(v23 + 40);
  do
  {
    v28 = *(v26 - 1);
    v27 = *v26;
    v59 = v25;
    v30 = *(_QWORD *)(v25 + 16);
    v29 = *(_QWORD *)(v25 + 24);
    swift_bridgeObjectRetain();
    if (v30 >= v29 >> 1)
    {
      sub_1BA7447E8(v29 > 1, v30 + 1, 1);
      v25 = v59;
    }
    v26 += 3;
    *(_QWORD *)(v25 + 16) = v30 + 1;
    v31 = v25 + 16 * v30;
    *(_QWORD *)(v31 + 32) = v28;
    *(_QWORD *)(v31 + 40) = v27;
    --v24;
  }
  while (v24);
  swift_bridgeObjectRelease();
LABEL_15:
  v32 = sub_1BA6E43EC(v25);
  swift_bridgeObjectRelease();
  v34 = v44;
  v33 = v45;
  v35 = sub_1BA761FE4(v44, v45, v32);
  v36 = swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
  {
    MEMORY[0x1E0C80A78](v36);
    v41[-4] = v46;
    v41[-3] = v34;
    v41[-2] = v33;
    result = sub_1BA8A3618((void (*)(_QWORD *))sub_1BB39CA70, (uint64_t)&v41[-6], v43);
    v38 = result;
  }
  else
  {
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9EC8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v39 = *(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80);
    v40 = (v39 + 32) & ~v39;
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1BB87CE70;
    result = sub_1BA4C2DD8(v46, v38 + v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  }
  *v47 = v38;
  return result;
}

uint64_t sub_1BB38B988@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[4];
  _BYTE v35[8];

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - v11;
  v13 = a1[1];
  v34[0] = *a1;
  v34[1] = v13;
  v14 = a1[3];
  v34[2] = a1[2];
  v34[3] = v14;
  v15 = a2[1];
  v32 = *a2;
  v33 = v15;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v16);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v17);
  swift_bridgeObjectRelease();
  v29 = v33;
  v30 = v32;
  v18 = (int *)type metadata accessor for FormatContentSubgroup();
  sub_1BB39C9A8((uint64_t)a2 + v18[5], (uint64_t)a5 + v18[5]);
  v19 = *(uint64_t *)((char *)a2 + v18[6]);
  v20 = *(uint64_t *)((char *)a2 + v18[7]);
  swift_bridgeObjectRetain();
  sub_1BA79EDD0((uint64_t)v34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = swift_bridgeObjectRetain();
  v22 = v31;
  v23 = sub_1BB3953C8(v21, a3, a4, (uint64_t *)v34, (uint64_t)v35, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, _BYTE *))sub_1BB3950EC);
  v31 = v22;
  sub_1BA79ED54((uint64_t)v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = *(uint64_t *)((char *)a2 + v18[9]);
  sub_1BA6D3418((uint64_t)a2 + v18[10], (uint64_t)v12);
  sub_1BA5193C4((uint64_t)v12, (uint64_t)a5 + v18[10], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v25 = *(uint64_t *)((char *)a2 + v18[11]);
  v26 = v29;
  *a5 = v30;
  a5[1] = v26;
  *(_QWORD *)((char *)a5 + v18[6]) = v19;
  *(_QWORD *)((char *)a5 + v18[7]) = v20;
  *(_QWORD *)((char *)a5 + v18[9]) = v24;
  *(_QWORD *)((char *)a5 + v18[8]) = v23;
  *(_QWORD *)((char *)a5 + v18[12]) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)a5 + v18[11]) = v25;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.expandAsSections(placeholder:placeholders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v8 = MEMORY[0x1E0D52E40];
  sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - v10;
  type metadata accessor for FormatContent(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1BB39572C(v12, a1, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = sub_1BB871E24();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
  v17 = 0;
  FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, a4, 0, 0, (uint64_t)v11, 0, &v17, v13, 0);
  swift_bridgeObjectRelease();
  return sub_1BA6ED6EC((uint64_t)v11, (uint64_t)&qword_1ED3C20E0, (uint64_t)v8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
}

uint64_t sub_1BB38BD34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v65 = (_QWORD *)a5;
  v62 = a4;
  v63 = a2;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v7);
  v61 = (uint64_t)v57 - v8;
  sub_1BA6BCB7C(0, &qword_1ED3B8BB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatLatestCompatibleFileReference);
  MEMORY[0x1E0C80A78](v9);
  v60 = (uint64_t)v57 - v10;
  v11 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatContentSlotItem();
  v74 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for FormatContentSubgroup();
  v17 = *(int *)(v59 + 32);
  v64 = a1;
  v18 = *(_QWORD *)((char *)a1 + v17);
  v19 = MEMORY[0x1E0DEE9D8];
  v79 = MEMORY[0x1E0DEE9D8];
  v68 = *(_QWORD *)(v18 + 16);
  if (v68)
  {
    v58 = a3;
    v67 = v18 + 32;
    v57[1] = v18;
    swift_bridgeObjectRetain_n();
    v20 = 0;
    v77 = v11;
    do
    {
      v21 = (_QWORD *)(v67 + 48 * v20);
      v22 = v21[4];
      if (*(_QWORD *)(v22 + 16))
      {
        v73 = v20;
        v23 = v21[1];
        v24 = v21[2];
        v25 = v21[3];
        v75 = v21[5];
        v26 = v22 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
        v71 = v23;
        swift_bridgeObjectRetain_n();
        v70 = v24;
        swift_bridgeObjectRetain_n();
        v69 = v25;
        swift_bridgeObjectRetain_n();
        v72 = v22;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v78 = MEMORY[0x1E0DEE9D8];
        sub_1BA4C2DD8(v26, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
        sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
        v27 = (char *)&loc_1BB38C02C + 4 * byte_1BB90E50E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      ++v20;
      sub_1BA72B228(MEMORY[0x1E0DEE9D8], &qword_1ED3AC608, (uint64_t)&type metadata for FormatPlaceholder);
    }
    while (v20 != v68);
    swift_bridgeObjectRelease_n();
    v28 = v79;
    a3 = v58;
    v19 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9D8];
  }
  v29 = *(_QWORD *)(v28 + 16);
  v30 = v66;
  if (v29)
  {
    v31 = a3;
    v79 = v19;
    sub_1BA7447E8(0, v29, 0);
    v32 = v79;
    v33 = (uint64_t *)(v28 + 40);
    do
    {
      v35 = *(v33 - 1);
      v34 = *v33;
      v79 = v32;
      v37 = *(_QWORD *)(v32 + 16);
      v36 = *(_QWORD *)(v32 + 24);
      swift_bridgeObjectRetain();
      if (v37 >= v36 >> 1)
      {
        sub_1BA7447E8(v36 > 1, v37 + 1, 1);
        v32 = v79;
      }
      v33 += 3;
      *(_QWORD *)(v32 + 16) = v37 + 1;
      v38 = v32 + 16 * v37;
      *(_QWORD *)(v38 + 32) = v35;
      *(_QWORD *)(v38 + 40) = v34;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
    a3 = v31;
    v30 = v66;
  }
  else
  {
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x1E0DEE9D8];
  }
  v39 = sub_1BA6E43EC(v32);
  swift_bridgeObjectRelease();
  v40 = v63;
  v41 = sub_1BA761FE4(v63, a3, v39);
  swift_bridgeObjectRelease();
  if ((v41 & 1) == 0)
    return sub_1BA4C2DD8((uint64_t)v64, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  v42 = v64;
  v43 = *v64;
  v77 = v64[1];
  v78 = v43;
  v44 = (int *)v59;
  v45 = v40;
  v46 = v60;
  v47 = sub_1BB39C9A8((uint64_t)v64 + *(int *)(v59 + 20), v60);
  v76 = v57;
  v48 = *(_QWORD *)((char *)v42 + v44[6]);
  v49 = *(_QWORD *)((char *)v42 + v44[7]);
  MEMORY[0x1E0C80A78](v47);
  v57[-4] = v42;
  v57[-3] = v45;
  v57[-2] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50 = sub_1BA8A385C((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB39C9FC, (uint64_t)&v57[-6], v62);
  v66 = v30;
  v51 = *(_QWORD *)((char *)v42 + v44[9]);
  v52 = v61;
  sub_1BA6D3418((uint64_t)v42 + v44[10], v61);
  v53 = v65;
  sub_1BA5193C4(v52, (uint64_t)v65 + v44[10], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v54 = *(_QWORD *)((char *)v42 + v44[11]);
  v55 = v77;
  *v53 = v78;
  v53[1] = v55;
  sub_1BB39CA1C(v46, (uint64_t)v53 + v44[5]);
  *(_QWORD *)((char *)v53 + v44[6]) = v48;
  *(_QWORD *)((char *)v53 + v44[7]) = v49;
  *(_QWORD *)((char *)v53 + v44[9]) = v51;
  *(_QWORD *)((char *)v53 + v44[8]) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)v53 + v44[12]) = v50;
  *(_QWORD *)((char *)v53 + v44[11]) = v54;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB38C410@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[4];
  _BYTE v27[8];

  v23 = a3;
  v9 = sub_1BB86C8E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[1];
  v26[0] = *a1;
  v26[1] = v13;
  v14 = a1[3];
  v26[2] = a1[2];
  v26[3] = v14;
  v15 = a2[1];
  v24 = *a2;
  v25 = v15;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v16);
  sub_1BB86C8D4();
  sub_1BB86C8C8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1BB872AFC(v17);
  swift_bridgeObjectRelease();
  v18 = v24;
  v19 = v25;
  type metadata accessor for FormatContentSubgroup();
  swift_bridgeObjectRetain();
  sub_1BA79EDD0((uint64_t)v26);
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BB3953C8(v20, v23, a4, (uint64_t *)v26, (uint64_t)v27, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, _BYTE *))sub_1BB3950EC);
  sub_1BA79ED54((uint64_t)v26);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a5 = v18;
  a5[1] = v19;
  a5[2] = v21;
  return result;
}

_QWORD *sub_1BB38C57C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38C848(a1, a2, a3, a4, &qword_1ED3AB8B0, (uint64_t)&type metadata for SportsDataVisualization);
}

uint64_t sub_1BB38C590(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2AE5B8, type metadata accessor for FormatVersioningModeSelection);
}

uint64_t sub_1BB38C5A4(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BA4B07F0(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BB3949A8(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_1BB38C7C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C2308, type metadata accessor for FormatDeprecationWarning);
}

uint64_t sub_1BB38C7D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem);
}

_QWORD *sub_1BB38C7E8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB394090(a1, a2, a3, a4, (unint64_t *)&qword_1EF2B14F0, (uint64_t)&type metadata for FormatInspectionGroup);
}

_QWORD *sub_1BB38C7FC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6ECD60(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BAC86ECC, (unint64_t *)&qword_1EF2A9760);
}

_QWORD *sub_1BB38C818(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB393AF4(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB39CCE0, &qword_1ED39EE60);
}

_QWORD *sub_1BB38C834(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38C848(a1, a2, a3, a4, &qword_1ED3A3220, (uint64_t)&type metadata for FormatDOMNode);
}

_QWORD *sub_1BB38C848(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 25;
      v12[2] = v10;
      v12[3] = 2 * (v14 >> 3);
      v15 = v12 + 4;
      if ((v7 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[v10 + 4])
          memmove(v15, a4 + 4, 8 * v10);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB3994E8(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB38C970(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3CFBF0, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject.Resolved);
}

_QWORD *sub_1BB38C984(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6D7628(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9E50, (uint64_t)&type metadata for FormatContentSlot.Resolved);
}

uint64_t sub_1BB38C998(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&qword_1ED3AB858, (uint64_t (*)(uint64_t))type metadata accessor for FormatModel);
}

_QWORD *sub_1BB38C9AC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BB39C918();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB39596C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38CAB4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9FF0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB395884(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38CBD4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38C848(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AB8C0, (uint64_t)&type metadata for SportsTaxonomyGraphNode);
}

uint64_t sub_1BB38CBE8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8);
}

_QWORD *sub_1BB38CBFC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3A3228, (uint64_t)&type metadata for FormatMergeConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB396B84(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38CD34(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2B1428, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB396C78(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38CE6C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED39C1E0, (uint64_t)&type metadata for FormatWebArchiveResource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB396D6C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38CF8C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3AF470, (uint64_t)&type metadata for FormatPuzzleStatistic, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB396E5C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38D0C0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BB39C1E0();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB396F50(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38D1C8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E86C(a1, a2, a3, a4, &qword_1EF2B1CD8, (uint64_t)&type metadata for FormatContentResource);
}

_QWORD *sub_1BB38D1DC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3AB958, (uint64_t)&type metadata for FormatContentSlotItemAuxiliary.Resolved, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BA77A194(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38D2FC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38F4A0(a1, a2, a3, a4, &qword_1EF2C26C0, (uint64_t)&type metadata for FormatContentSubgroupSection.Resolved);
}

uint64_t sub_1BB38D310(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AF460, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatistic);
}

uint64_t sub_1BB38D324(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2A9160, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleLeaderboardEntry);
}

_QWORD *sub_1BB38D338(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E86C(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C2550, (uint64_t)&type metadata for FormatGroupColumnSystem);
}

_QWORD *sub_1BB38D34C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C24F0, (uint64_t)&type metadata for FormatDerivedDataOptionReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB394BE8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38D46C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E5E0(a1, a2, a3, a4, &qword_1EF2C24D8, (uint64_t)&type metadata for FormatDerivedDataContextScope);
}

_QWORD *sub_1BB38D480(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BB39C2BC();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4])
          memmove(v12, a4 + 4, 72 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB397B30(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38D5A4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38FAD0(a1, a2, a3, a4, &qword_1ED3AB8A8, (uint64_t)&type metadata for FormatWebEmbedNodeStyle.Selector);
}

_QWORD *sub_1BB38D5B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BB39C330();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB397C58(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38D6D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3C29A8, (uint64_t)&type metadata for FormatCustomNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB395B44(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38D7F4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BB39C3A4();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[19 * v8 + 4])
          memmove(v12, a4 + 4, 152 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB397D80(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38D918(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB39044C(a1, a2, a3, a4, &qword_1EF2C2358, (uint64_t)&type metadata for FormatMicaNodeStyle.Selector);
}

_QWORD *sub_1BB38D92C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BB39C45C();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 216);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[27 * v8 + 4])
          memmove(v12, a4 + 4, 216 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB397EA4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38DA50(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3AF878, (uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 208);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[26 * v8 + 4])
          memmove(v12, a4 + 4, 208 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3962EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38DB8C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38DF70(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB39C4D0, (unint64_t *)&qword_1EF2BA4D8, (uint64_t (*)(void))sub_1BB071678, (uint64_t)&type metadata for FormatVideoNodeStyle.Selector);
}

_QWORD *sub_1BB38DBB0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E0D0(a1, a2, a3, a4, &qword_1EF2C2378, (uint64_t)&type metadata for FormatVideoNodeStyle.Selector);
}

_QWORD *sub_1BB38DBC4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BB39C544();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[20 * v8 + 4])
          memmove(v12, a4 + 4, 160 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB397FC8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38DCE0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C2398, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[19 * v8 + 4])
          memmove(v12, a4 + 4, 152 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB396018(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38DE1C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BB39C248();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[20 * v8 + 4])
          memmove(v12, a4 + 4, 160 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB397A08(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38DF38(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB3902D4(a1, a2, a3, a4, &qword_1EF2C2340, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector);
}

_QWORD *sub_1BB38DF4C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38DF70(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB39C5B8, (unint64_t *)&qword_1EF2C23C8, (uint64_t (*)(void))sub_1BB39C62C, (uint64_t)&type metadata for FormatVideoPlayerNodeStyle.Selector);
}

_QWORD *sub_1BB38DF70(_QWORD *result, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), unint64_t *a6, uint64_t (*a7)(void), uint64_t a8)
{
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  size_t v18;
  _QWORD *v19;

  v12 = (char)result;
  if ((a3 & 1) == 0)
  {
    v14 = a2;
    goto LABEL_8;
  }
  v13 = a4[3];
  v14 = v13 >> 1;
  if ((uint64_t)(v13 >> 1) >= a2)
    goto LABEL_8;
  if (v14 + 0x4000000000000000 >= 0)
  {
    v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v13 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v14 = a2;
LABEL_8:
    v15 = a4[2];
    if (v14 <= v15)
      v16 = a4[2];
    else
      v16 = v14;
    if (v16)
    {
      a5(0);
      v17 = (_QWORD *)swift_allocObject();
      v18 = _swift_stdlib_malloc_size(v17);
      v17[2] = v15;
      v17[3] = 2 * ((uint64_t)(v18 - 32) / 176);
      v19 = v17 + 4;
      if ((v12 & 1) != 0)
      {
LABEL_13:
        if (v17 != a4 || v19 >= &a4[22 * v15 + 4])
          memmove(v19, a4 + 4, 176 * v15);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v19 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3980F0(0, v15, (unint64_t)v19, (uint64_t)a4, a6, a7, a8);
LABEL_22:
    swift_bridgeObjectRelease();
    return v17;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38E0BC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E0D0(a1, a2, a3, a4, &qword_1EF2C23B8, (uint64_t)&type metadata for FormatVideoPlayerNodeStyle.Selector);
}

_QWORD *sub_1BB38E0D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 168);
      v14 = v12 + 4;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[21 * v10 + 4])
          memmove(v14, a4 + 4, 168 * v10);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3963DC(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38E214(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BB39C670();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB39820C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38E338(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6493B4(a1, a2, a3, a4, &qword_1EF2C23D8, (uint64_t)&type metadata for FormatProgressViewNodeStyle.Selector);
}

_QWORD *sub_1BB38E34C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BB39C6E4();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB398334(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38E46C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E480(a1, a2, a3, a4, &qword_1ED3AF838, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle.Selector);
}

_QWORD *sub_1BB38E480(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 40);
      v14 = v12 + 4;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[5 * v10 + 4])
          memmove(v14, a4 + 4, 40 * v10);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB397830(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB38E5B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AF440, (uint64_t (*)(uint64_t))type metadata accessor for FormatSourceItemTipSource);
}

_QWORD *sub_1BB38E5CC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E5E0(a1, a2, a3, a4, (unint64_t *)&qword_1ED3BBB90, (uint64_t)&type metadata for FormatNodeCacheKey);
}

_QWORD *sub_1BB38E5E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 24);
      v14 = v12 + 4;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[3 * v10 + 4])
          memmove(v14, a4 + 4, 24 * v10);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3996C8(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38E71C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      sub_1BA4B07F0(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB394EE4(0, v11, (unint64_t)v16, (uint64_t)a4, (void (*)(_QWORD))a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB38E844(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AF820, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonKeyValue);
}

uint64_t sub_1BB38E858(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C2350, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
}

_QWORD *sub_1BB38E86C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 17;
      v12[2] = v10;
      v12[3] = 2 * (v14 >> 4);
      v15 = v12 + 4;
      if ((v7 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[2 * v10 + 4])
          memmove(v15, a4 + 4, 16 * v10);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BA6E6FF8(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38E994(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3AF840, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB39845C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38EAB4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3A0A08, (uint64_t)&type metadata for FormatMenuItemData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB395C34(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1BB38EBEC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3A3248, MEMORY[0x1E0DEE720], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1BB397920(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38ED0C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38C848(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C2260, (uint64_t)&type metadata for FormatDerivedDataInstruction);
}

_QWORD *sub_1BB38ED20(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2B14D0, (uint64_t)&type metadata for FormatSourceMap, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB3967B8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38EE40(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6ECD60(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA6F616C, (unint64_t *)&qword_1ED3B0A08);
}

_QWORD *sub_1BB38EE5C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E480(a1, a2, a3, a4, &qword_1ED3B9E38, (uint64_t)&type metadata for FormatBorderEdge.Path);
}

_QWORD *sub_1BB38EE70(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED39DC60, (uint64_t)&type metadata for LayeredMediaLayer, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 95;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 7);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB395D28(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38EF90(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1EF2C2638, (uint64_t)&type metadata for PuzzleAccessoryButtonConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB398640(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38F0CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C26A8, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4])
          memmove(v12, a4 + 4, 72 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB39854C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38F208(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB393AF4(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB39CA90, &qword_1EF2C25F8);
}

_QWORD *sub_1BB38F224(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3CFBC8, (uint64_t)&type metadata for GroupLayoutRequirement, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB398734(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38F344(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E480(a1, a2, a3, a4, &qword_1EF2C2280, (uint64_t)&type metadata for FormatBindResult.FailureReason);
}

_QWORD *sub_1BB38F358(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C2278, (uint64_t)&type metadata for FormatBindExpression, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB398824(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38F48C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38F4A0(a1, a2, a3, a4, &qword_1EF2C2418, (uint64_t)&type metadata for DebugFormatErrorModel.Section);
}

_QWORD *sub_1BB38F4A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 24);
      v14 = v12 + 4;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[3 * v10 + 4])
          memmove(v14, a4 + 4, 24 * v10);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3996C8(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38F5E0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB393438(a1, a2, a3, a4, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04);
}

_QWORD *sub_1BB38F5F4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E5E0(a1, a2, a3, a4, &qword_1ED3AC608, (uint64_t)&type metadata for FormatPlaceholder);
}

_QWORD *sub_1BB38F608(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3C0540, (uint64_t)&type metadata for SlotReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA6D7220(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38F740(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2B1410, (uint64_t)&type metadata for DebugFormatAlert, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB398DC4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38F87C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E86C(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C25B8, (uint64_t)&type metadata for DebugFormatUploadEntryResult);
}

_QWORD *sub_1BB38F890(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9CF0, (uint64_t)&type metadata for FeedScoredHeadline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB395A54(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38F9B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C26A0, (uint64_t)&type metadata for FeedScoredIssue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB395F28(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38FAD0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 + 31;
      v12[2] = v10;
      v12[3] = 2 * (v14 >> 6);
      v15 = v12 + 4;
      if ((v7 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[8 * v10 + 4])
          memmove(v15, a4 + 4, v10 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BA6D7750(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38FBF8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, qword_1ED3AF4A0, (uint64_t)&type metadata for SportsConfigResourceParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB39724C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB38FD18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3A3210, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemAuxiliaryItem);
}

uint64_t sub_1BB38FD2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2B1820, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAdRequester.ScheduledRequest);
}

uint64_t sub_1BB38FD40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED39EAD0, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem);
}

_QWORD *sub_1BB38FD54(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB3901A8(a1, a2, a3, a4, &qword_1ED39EB08, &qword_1ED39EA50, &qword_1ED39EA58, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
}

uint64_t sub_1BB38FD78(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2A92F0, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
}

_QWORD *sub_1BB38FD8C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB3901A8(a1, a2, a3, a4, &qword_1EF2C2678, (unint64_t *)&unk_1EF2C2680, &qword_1EF2B1A50, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
}

_QWORD *sub_1BB38FDB0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2B17D0, (uint64_t)&type metadata for FeedPuzzleType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB398918(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB38FED0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38FEF4(a1, a2, a3, a4, &qword_1EF2C2658, &qword_1EF2C2660, (unint64_t *)&unk_1EF2C2668);
}

_QWORD *sub_1BB38FEF4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, unint64_t *a7)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      sub_1BB39CB58(0, a5, a6, a7);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 17;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4])
          memmove(v16, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB394FE8(0, v11, (unint64_t)v16, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB39000C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3AB850, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 168);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[21 * v8 + 4])
          memmove(v12, a4 + 4, 168 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB398A08(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB39014C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38FEF4(a1, a2, a3, a4, &qword_1ED3AB9C8, &qword_1ED3AB130, (unint64_t *)&unk_1ED3A16E0);
}

uint64_t sub_1BB390170(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED39C1C0, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed);
}

_QWORD *sub_1BB390184(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB3901A8(a1, a2, a3, a4, (unint64_t *)&unk_1ED39C1E8, &qword_1ED39BFA0, (unint64_t *)&unk_1ED39BFE0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
}

_QWORD *sub_1BB3901A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, unint64_t *a7, void (*a8)(uint64_t))
{
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    v11 = a2;
    goto LABEL_8;
  }
  v10 = a4[3];
  v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2)
    goto LABEL_8;
  if (v11 + 0x4000000000000000 >= 0)
  {
    v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v11 = a2;
LABEL_8:
    v12 = a4[2];
    if (v11 <= v12)
      v13 = a4[2];
    else
      v13 = v11;
    if (v13)
    {
      sub_1BA7892C4(0, a5, a6, a7, a8);
      v14 = (_QWORD *)swift_allocObject();
      v15 = _swift_stdlib_malloc_size(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 17;
      v14[2] = v12;
      v14[3] = 2 * (v16 >> 4);
      v17 = v14 + 4;
      if ((v9 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v17 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[2 * v12 + 4])
          memmove(v17, a4 + 4, 16 * v12);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB394FE8(0, v12, (unint64_t)v17, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB3902C0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB3902D4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AB840, (uint64_t)&type metadata for FeedTag);
}

_QWORD *sub_1BB3902D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 152);
      v14 = v12 + 4;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[19 * v10 + 4])
          memmove(v14, a4 + 4, 152 * v10);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB398AF8(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB390414(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38FEF4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AB9B8, (unint64_t *)&unk_1ED3AB120, &qword_1ED3AB1C0);
}

_QWORD *sub_1BB390438(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB39044C(a1, a2, a3, a4, (unint64_t *)&unk_1ED39DC38, (uint64_t)&type metadata for FeedIssue);
}

_QWORD *sub_1BB39044C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 144);
      v14 = v12 + 4;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[18 * v10 + 4])
          memmove(v14, a4 + 4, 144 * v10);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB398BE4(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB39058C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38FEF4(a1, a2, a3, a4, &qword_1ED3A0A60, &qword_1ED3A08C8, (unint64_t *)&unk_1ED3A08F0);
}

_QWORD *sub_1BB3905B0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E71C(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C2240, (uint64_t (*)(uint64_t))sub_1BA78647C);
}

uint64_t sub_1BB3905C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2B1578, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
}

uint64_t sub_1BB3905D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2B1340, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatsProcessingData);
}

uint64_t sub_1BB3905EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2B1330, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak);
}

_QWORD *sub_1BB390600(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED39EAE8, (uint64_t)&type metadata for GeoLocation, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB39596C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB390720(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED39DC30, (uint64_t)&type metadata for FeedTopicCluster, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB39699C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB390858(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38F4A0(a1, a2, a3, a4, (unint64_t *)&qword_1EF2B1500, (uint64_t)&type metadata for DebugInspectionDataSection);
}

_QWORD *sub_1BB39086C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA58281C(0, &qword_1EF2C2438, (unint64_t *)&unk_1EF2C2440, (uint64_t)&type metadata for DebugInspectionDataSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB398FF0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB390994(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6493B4(a1, a2, a3, a4, &qword_1EF2C24D0, (uint64_t)&type metadata for FormatDerivedDataBindingScope);
}

_QWORD *sub_1BB3909A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C24E0, (uint64_t)&type metadata for FormatDerivedDataResultBlock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 95;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 7);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB39910C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB390AC8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C24E8, (uint64_t)&type metadata for FormatDerivedDataResultBlockReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4])
          memmove(v12, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3991FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB390C04(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2B15D0, (uint64_t)&type metadata for FormatDerivedDataResultItemReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB397068(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB390D24(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2A99F0, type metadata accessor for FormatDerivedDataResultOptionReference);
}

uint64_t sub_1BB390D38(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C24F8, (uint64_t (*)(uint64_t))sub_1BAA9864C);
}

uint64_t sub_1BB390D4C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9F30, type metadata accessor for FormatPropertyDefinition);
}

uint64_t sub_1BB390D60(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BB39C758();
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BB394AC0(0, v8, v20, a4, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1BB390FC4(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BB39C7CC();
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BB394AC0(0, v8, v20, a4, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1BB391228(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C24C0, (uint64_t (*)(uint64_t))sub_1BA8CED28);
}

uint64_t sub_1BB39123C(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BB39C840();
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BB394AC0(0, v8, v20, a4, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1BB3914A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2B1548, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataWarningError);
}

uint64_t sub_1BB3914B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3BBAD0, type metadata accessor for FormatCompilingSlotDefinition);
}

uint64_t sub_1BB3914C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2B15A8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataBinderResult);
}

uint64_t sub_1BB3914DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2B1598, (uint64_t (*)(uint64_t))sub_1BAC8739C);
}

uint64_t sub_1BB3914F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3A1738, type metadata accessor for FeedItem);
}

_QWORD *sub_1BB391504(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38F4A0(a1, a2, a3, a4, &qword_1EF2C2428, (uint64_t)&type metadata for DebugJournalGroupSection);
}

uint64_t sub_1BB391518(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C2338, (uint64_t (*)(uint64_t))sub_1BA5D21D4);
}

_QWORD *sub_1BB39152C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3AB810, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 248);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[31 * v8 + 4])
          memmove(v12, a4 + 4, 248 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB396108(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB39166C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3AB818, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupConfigSidecar);
}

_QWORD *sub_1BB391680(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C23F0, (uint64_t (*)(uint64_t))sub_1BA9831EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB394DE0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB3917A0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB3917C8(a1, a2, a3, a4, &qword_1EF2C2400, (uint64_t (*)(uint64_t))sub_1BA9832B8);
}

_QWORD *sub_1BB3917B4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB3917C8(a1, a2, a3, a4, &qword_1EF2C2408, (uint64_t (*)(uint64_t))sub_1BA9833B4);
}

_QWORD *sub_1BB3917C8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      sub_1BA4B07F0(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[3 * v11 + 4])
          memmove(v15, a4 + 4, 24 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB394CD8(0, v11, (unint64_t)v15, (uint64_t)a4, (void (*)(_QWORD))a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB391908(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB393AF4(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB39CC00, (unint64_t *)&unk_1ED3B0A30);
}

_QWORD *sub_1BB391924(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3D4478, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB397158(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB391A48(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E5E0(a1, a2, a3, a4, &qword_1ED3CFC70, (uint64_t)&type metadata for FormatAccessibilityCustomAction);
}

_QWORD *sub_1BB391A5C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E86C(a1, a2, a3, a4, &qword_1ED3A0A58, (uint64_t)&type metadata for FormatGroupMaskSupplementaryLayer);
}

uint64_t sub_1BB391A70(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AFBA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB74E8]);
}

uint64_t sub_1BB391A84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB79E8]);
}

uint64_t sub_1BB391A98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3AF450, type metadata accessor for WebEmbedDataVisualizationDataRequest);
}

uint64_t sub_1BB391AAC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3AB8D0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate);
}

_QWORD *sub_1BB391AC0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E86C(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C2648, MEMORY[0x1E0DEA2D0]);
}

uint64_t sub_1BB391AD4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2B1530, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatVersioningModeItem);
}

_QWORD *sub_1BB391AE8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1EF2C2490, (uint64_t)&type metadata for DebugFormatVersioningModeSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3992EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB391C1C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB39044C(a1, a2, a3, a4, &qword_1EF2C2630, (uint64_t)&type metadata for PuzzleMenuConfig);
}

char *sub_1BB391C30(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA78B0D8(a1, a2, a3, a4, &qword_1EF2C2628, (uint64_t)&type metadata for PuzzleMenuConfig.Attribute);
}

uint64_t sub_1BB391C44(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2B1360, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectViewItem);
}

uint64_t sub_1BB391C58(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3A09D0, (uint64_t (*)(uint64_t))type metadata accessor for FeedEngagementBanner);
}

_QWORD *sub_1BB391C6C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3AC810, (uint64_t)&type metadata for FeedGapOffline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4])
          memmove(v12, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB398CD4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB391DA8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6493B4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C22B0, (uint64_t)&type metadata for DebugInspectViewSection);
}

_QWORD *sub_1BB391DBC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38C848(a1, a2, a3, a4, &qword_1ED3B9ED8, (uint64_t)&type metadata for FormatDataLayoutValue);
}

_QWORD *sub_1BB391DD0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C26C8, (uint64_t)&type metadata for HGroupLayoutContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 400);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[50 * v8 + 4])
          memmove(v12, a4 + 4, 400 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3961FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB391F0C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C22A0, (uint64_t (*)(uint64_t))sub_1BACD6034, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3993E0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB392048(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6ECD60(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA6F41A0, (unint64_t *)&qword_1ED3B6FC0);
}

char *sub_1BB392064(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BA78B0D8(a1, a2, a3, a4, &qword_1EF2C25B0, (uint64_t)&type metadata for DebugFormatInventoryStatus);
}

uint64_t sub_1BB392078(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C25C8, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem);
}

_QWORD *sub_1BB39208C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1EF2C2618, (uint64_t)&type metadata for SharedItemManager.ShareAttributionViewContext, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB39733C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB3921AC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38C848(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AB820, (uint64_t)&type metadata for FeedPluginFactoryResult);
}

uint64_t sub_1BB3921C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2B1380, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilerResultEntry);
}

_QWORD *sub_1BB3921D4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E5E0(a1, a2, a3, a4, &qword_1EF2C2568, (uint64_t)&type metadata for DebugFormatDebuggerSourceHighlighter.Token);
}

_QWORD *sub_1BB3921E8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3AB878, (uint64_t)&type metadata for FormatWebEmbed.Traits, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB395884(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB392308(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, qword_1ED3A3230, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3995D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB392440(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38C848(a1, a2, a3, a4, &qword_1EF2C2330, (uint64_t)&type metadata for DebugFormatTestCase);
}

_QWORD *sub_1BB392454(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E480(a1, a2, a3, a4, &qword_1EF2C2410, (uint64_t)&type metadata for DebugFormatTestSection);
}

_QWORD *sub_1BB392468(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38C848(a1, a2, a3, a4, &qword_1ED3B9D00, (uint64_t)&type metadata for FeedGroupDecoration);
}

uint64_t sub_1BB39247C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2B7808, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatTestSuiteResultItem);
}

uint64_t sub_1BB392490(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2B1440, type metadata accessor for DebugFormatTestCaseResult);
}

uint64_t sub_1BB3924A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C25A0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatUploadHiddenEntry);
}

uint64_t sub_1BB3924B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C25A8, type metadata accessor for DebugFormatUploadPrivateEntry);
}

_QWORD *sub_1BB3924CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2B16F0, (uint64_t)&type metadata for DebugFormatUploadSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB397548(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB3925EC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E5E0(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C24A0, (uint64_t)&type metadata for FormatFileKey);
}

_QWORD *sub_1BB392600(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C2570, (uint64_t)&type metadata for FormatDebuggerBreakpoint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB3997B8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB392720(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB393438(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C2450, (uint64_t (*)(uint64_t))sub_1BAA85C90);
}

uint64_t sub_1BB392734(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3BBAE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution);
}

uint64_t sub_1BB392748(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C2608, (uint64_t (*)(uint64_t))type metadata accessor for FeedPrerollAdRequester.ScheduledRequest);
}

uint64_t sub_1BB39275C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2B1748, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52F40]);
}

_QWORD *sub_1BB392770(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C2328, (uint64_t)&type metadata for DebugFormatTestCaseMultiResultSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB3998A8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB392890(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C2320, (uint64_t (*)(uint64_t))type metadata accessor for ZIndexable);
}

uint64_t sub_1BB3928A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C2310, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItem);
}

_QWORD *sub_1BB3928B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1EF2C22C0, (uint64_t)&type metadata for DebugPersonalizationSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB398F00(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB3929D8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9CD0, (uint64_t)&type metadata for FeedScoredItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3964C8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB392B10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AB970, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseItem);
}

uint64_t sub_1BB392B24(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C22E0, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseScoreItem);
}

_QWORD *sub_1BB392B38(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1EF2C22D0, (uint64_t)&type metadata for SportsDataVisualizationResponseBracketItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4])
          memmove(v12, a4 + 4, 80 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB399998(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB392C68(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C2538, (uint64_t)&type metadata for DebugFormatHistoryMeasurement, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB399A8C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB392D88(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED39EAF8, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Resolved);
}

uint64_t sub_1BB392D9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2BC5B0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatGroupItem);
}

uint64_t sub_1BB392DB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C2470, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile);
}

_QWORD *sub_1BB392DC4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1EF2C2480, (uint64_t)&type metadata for DebugFormatGroupSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB399B7C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB392EE4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2B16B8, (uint64_t)&type metadata for FormatInspectionIssue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB399C6C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB393018(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&qword_1EF2BF538, (uint64_t)&type metadata for DebugFormatLayoutModel, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 200);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[25 * v8 + 4])
          memmove(v12, a4 + 4, 200 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB399D60(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB393154(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38F4A0(a1, a2, a3, a4, &qword_1EF2C2530, (uint64_t)&type metadata for DebugFormatLayoutSection);
}

uint64_t sub_1BB393168(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C2520, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatLayoutOrderingModel);
}

uint64_t sub_1BB39317C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C2600, type metadata accessor for PuzzleBarButtonItem);
}

uint64_t sub_1BB393190(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2B16C0, (uint64_t (*)(uint64_t))sub_1BAC87DF0);
}

_QWORD *sub_1BB3931A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BA000, (uint64_t (*)(uint64_t))sub_1BAC87F60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4])
          memmove(v12, a4 + 4, 80 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3965BC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB3932D8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1EF2C2468, (uint64_t)&type metadata for DebugFormatInventoryViewController.VisibleItemFrame, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3966C4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB393410(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E71C(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C2540, (uint64_t (*)(uint64_t))sub_1BB39C8B4);
}

_QWORD *sub_1BB393424(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB393438(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AFB60, (uint64_t (*)(uint64_t))sub_1BA93CD14);
}

_QWORD *sub_1BB393438(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      sub_1BA4B07F0(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB397638(0, v11, (unint64_t)v15, (uint64_t)a4, (void (*)(_QWORD))a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB393574(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AB940, type metadata accessor for FormatContentSidecarPlacement);
}

_QWORD *sub_1BB393588(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA58281C(0, (unint64_t *)&qword_1ED3B9FB0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB39BCD4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB3936B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1EF2C2290, (uint64_t)&type metadata for DebugInspectionTagMetadata, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 112);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[14 * v8 + 4])
          memmove(v12, a4 + 4, 112 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB39BDF0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB3937E8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6493B4(a1, a2, a3, a4, &qword_1EF2C2288, (uint64_t)&type metadata for DebugInspectionCohort);
}

_QWORD *sub_1BB3937FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1EF2C2510, (uint64_t)&type metadata for DebugFormatHistory, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 200);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[25 * v8 + 4])
          memmove(v12, a4 + 4, 200 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB397740(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB39393C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C2420, type metadata accessor for FormatDebuggerCallStackFrame);
}

uint64_t sub_1BB393950(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AB918, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreProperty);
}

_QWORD *sub_1BB393964(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38C848(a1, a2, a3, a4, &qword_1EF2C2270, (uint64_t)&type metadata for WebEmbedDatastoreContents);
}

uint64_t sub_1BB393978(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C2560, (uint64_t (*)(uint64_t))type metadata accessor for FormatBindingContent);
}

uint64_t sub_1BB39398C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2B1528, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
}

_QWORD *sub_1BB3939A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1EF2C22E8, (uint64_t)&type metadata for PuzzleGameCenterPendingScoreEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB39BEE4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB393AD8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB393AF4(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB39C0DC, &qword_1ED3ADC88);
}

_QWORD *sub_1BB393AF4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), unint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      a5(0);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 17;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4])
          memmove(v16, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB395E18(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB393C14(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C22F8, (uint64_t (*)(uint64_t))sub_1BAA28D68);
}

uint64_t sub_1BB393C28(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C2590, (uint64_t (*)(uint64_t))sub_1BB39C98C);
}

uint64_t sub_1BB393C3C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C26B0, (uint64_t (*)(uint64_t))type metadata accessor for FeedFontManager.LocalFont);
}

uint64_t sub_1BB393C50(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED39C1D0, (uint64_t (*)(uint64_t))type metadata accessor for WebArchive);
}

_QWORD *sub_1BB393C64(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E5E0(a1, a2, a3, a4, (unint64_t *)&unk_1EF2B1320, (uint64_t)&type metadata for PuzzleHistoryServiceChange);
}

_QWORD *sub_1BB393C78(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4B07F0(0, &qword_1ED39ED38, (uint64_t (*)(uint64_t))sub_1BAC88080, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB39BFD8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB393D98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1EF2C25E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA848]);
}

_QWORD *sub_1BB393DAC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3B9FE0, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BB395884(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB393ECC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1EF2C25D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
}

uint64_t sub_1BB393EE0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3A3200, (uint64_t (*)(uint64_t))sub_1BAC88048);
}

uint64_t sub_1BB393EF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3AB7C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA188]);
}

uint64_t sub_1BB393F08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3A09B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA248]);
}

_QWORD *sub_1BB393F1C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3AC108, (uint64_t)&type metadata for FeedChannelCluster, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB3968A8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB394054(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3AB7F0, (uint64_t (*)(uint64_t))sub_1BB39C144);
}

_QWORD *sub_1BB394068(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E480(a1, a2, a3, a4, &qword_1EF2C25D0, (uint64_t)&type metadata for PuzzleAlertAction);
}

_QWORD *sub_1BB39407C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6D7628(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9D30, (uint64_t)&type metadata for FeedSlot);
}

_QWORD *sub_1BB394090(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 40);
      v14 = v12 + 4;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[5 * v10 + 4])
          memmove(v14, a4 + 4, 40 * v10);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB397830(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB3941CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED39C1B8, (uint64_t)&type metadata for FeedSuggestionCluster, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BB396A90(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB394304(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3A1720, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDADC0]);
}

uint64_t _s8NewsFeed13FormatContentV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  int *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v47)(void);
  uint64_t (*v48)(void);
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t (*v52)(void);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v4 = sub_1BB871E24();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40];
  v68 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB39CC68();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v67 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3C20E0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v65 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v65 - v19;
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v21 = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v21 & 1;
  }
  v22 = (int *)type metadata accessor for FormatContent(0);
  if ((sub_1BB86C868() & 1) == 0)
    goto LABEL_47;
  v23 = v22[6];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = *(_QWORD *)((char *)a1 + v23 + 8);
  v26 = (_QWORD *)((char *)a2 + v23);
  v27 = v26[1];
  if (v25)
  {
    if (!v27)
      goto LABEL_47;
    if (*v24 != *v26 || v25 != v27)
    {
      v21 = 0;
      if ((sub_1BB874398() & 1) == 0)
        return v21 & 1;
    }
  }
  else if (v27)
  {
    goto LABEL_47;
  }
  v28 = v22[7];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = *(_QWORD *)((char *)a1 + v28 + 8);
  v31 = (_QWORD *)((char *)a2 + v28);
  v32 = v31[1];
  if (v30)
  {
    if (!v32)
      goto LABEL_47;
    if (*v29 != *v31 || v30 != v32)
    {
      v21 = 0;
      if ((sub_1BB874398() & 1) == 0)
        return v21 & 1;
    }
  }
  else if (v32)
  {
    goto LABEL_47;
  }
  v33 = v22[8];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = *(_QWORD *)((char *)a1 + v33 + 8);
  v36 = (_QWORD *)((char *)a2 + v33);
  v37 = v36[1];
  if (v35)
  {
    if (!v37)
      goto LABEL_47;
    if (*v34 != *v36 || v35 != v37)
    {
      v21 = 0;
      if ((sub_1BB874398() & 1) == 0)
        return v21 & 1;
    }
  }
  else if (v37)
  {
    goto LABEL_47;
  }
  v38 = v22[9];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = *(_QWORD *)((char *)a1 + v38 + 8);
  v41 = (_QWORD *)((char *)a2 + v38);
  v42 = v41[1];
  if (!v40)
  {
    if (v42)
      goto LABEL_47;
    goto LABEL_33;
  }
  if (!v42)
    goto LABEL_47;
  if (*v39 == *v41 && v40 == v42 || (v21 = 0, (sub_1BB874398() & 1) != 0))
  {
LABEL_33:
    sub_1BA6050C4((uint64_t)a1 + v22[10], (uint64_t)v20, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    sub_1BA6050C4((uint64_t)a2 + v22[10], (uint64_t)v17, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v43 = *(int *)(v10 + 48);
    v44 = v67;
    v45 = v67 + v43;
    sub_1BA6050C4((uint64_t)v20, v67, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v66 = v45;
    sub_1BA6050C4((uint64_t)v17, v45, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v46(v44, 1, v68) == 1)
    {
      v47 = MEMORY[0x1E0D52E40];
      sub_1BA6ED6EC((uint64_t)v17, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      sub_1BA6ED6EC((uint64_t)v20, (uint64_t)&qword_1ED3C20E0, (uint64_t)v47, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      if (v46(v66, 1, v68) == 1)
      {
        sub_1BA6ED6EC(v67, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
LABEL_40:
        if ((sub_1BA6A45BC(*(_QWORD **)((char *)a1 + v22[11]), *(_QWORD **)((char *)a2 + v22[11])) & 1) != 0
          && (sub_1BA6A45BC(*(_QWORD **)((char *)a1 + v22[12]), *(_QWORD **)((char *)a2 + v22[12])) & 1) != 0
          && (sub_1BA6A45BC(*(_QWORD **)((char *)a1 + v22[13]), *(_QWORD **)((char *)a2 + v22[13])) & 1) != 0)
        {
          v53 = v22[14];
          v54 = *(_QWORD *)((char *)a1 + v53);
          v55 = *(_QWORD *)((char *)a2 + v53);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v56 = sub_1BA888320(v54, v55);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 & 1) != 0
            && (sub_1BA882058(*(_QWORD *)((char *)a1 + v22[15]), *(_QWORD *)((char *)a2 + v22[15])) & 1) != 0)
          {
            v57 = v22[16];
            v58 = *(_QWORD *)((char *)a1 + v57);
            v59 = *(_QWORD *)((char *)a2 + v57);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v60 = sub_1BA8880B0(v58, v59);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v60 & 1) != 0)
            {
              v61 = v22[17];
              v62 = *(_QWORD *)((char *)a1 + v61);
              v63 = *(_QWORD *)((char *)a2 + v61);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v21 = sub_1BA6EB330(v62, v63);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v21 & 1;
            }
          }
        }
LABEL_47:
        v21 = 0;
        return v21 & 1;
      }
    }
    else
    {
      sub_1BA6050C4(v44, (uint64_t)v14, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      if (v46(v66, 1, v68) != 1)
      {
        v49 = v68;
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v66, v68);
        sub_1BA4A2870(&qword_1EF2C2698, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], MEMORY[0x1E0D52E50]);
        LODWORD(v66) = sub_1BB872958();
        v50 = *(void (**)(char *, uint64_t))(v6 + 8);
        v50(v8, v49);
        v51 = (uint64_t)v17;
        v52 = MEMORY[0x1E0D52E40];
        sub_1BA6ED6EC(v51, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
        sub_1BA6ED6EC((uint64_t)v20, (uint64_t)&qword_1ED3C20E0, (uint64_t)v52, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
        v50(v14, v49);
        sub_1BA6ED6EC(v44, (uint64_t)&qword_1ED3C20E0, (uint64_t)v52, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
        if ((v66 & 1) == 0)
          goto LABEL_47;
        goto LABEL_40;
      }
      v48 = MEMORY[0x1E0D52E40];
      sub_1BA6ED6EC((uint64_t)v17, (uint64_t)&qword_1ED3C20E0, (uint64_t)MEMORY[0x1E0D52E40], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      sub_1BA6ED6EC((uint64_t)v20, (uint64_t)&qword_1ED3C20E0, (uint64_t)v48, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v68);
    }
    sub_1BA4A2E80(v67, (uint64_t (*)(_QWORD))sub_1BB39CC68);
    goto LABEL_47;
  }
  return v21 & 1;
}

uint64_t type metadata accessor for FormatContentSidecarPlacement(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3A8738);
}

uint64_t sub_1BB3949A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB394AC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(void), uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;

  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    sub_1BA4CDF6C(0, a5, a6, a7, a8);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned __int8 *)(v13 + 80);
    v15 = *(_QWORD *)(v13 + 72);
    v16 = a4 + ((v14 + 32) & ~v14) + v15 * a1;
    v17 = v15 * v8;
    v18 = a3 + v17;
    v19 = v16 + v17;
    if (v16 >= v18 || v19 <= a3)
    {
      swift_arrayInitWithCopy();
      return v18;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB394BE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB394CD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 24 * a1 + 32;
    v7 = a3 + 24 * v5;
    if (v6 >= v7 || v6 + 24 * v5 <= a3)
    {
      a5(0);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB394DE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_1BA9831EC();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB394EE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      a5(0);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB394FE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BA7528CC();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3950EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_1BB395100(a1, a2, a3, a4);
}

uint64_t sub_1BB395100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v35 = a4;
  v8 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1E0C80A78](v8);
  v36 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v40 = (uint64_t)&v33 - v11;
  v34 = type metadata accessor for FormatContentSlotItem();
  v12 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v33 = v4;
    v41 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B420(0, v15, 0);
    v39 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v17 = a1 + v39;
    v38 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_1BA4C2DD8(v17, v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
      if (swift_getEnumCaseMultiPayload() != 9)
        goto LABEL_11;
      v18 = v36;
      sub_1BA4C2DD8(v40, v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
      v19 = *(_QWORD *)v18;
      v20 = *(_QWORD *)(v18 + 8);
      v21 = *(unsigned __int8 *)(v18 + 16);
      v22 = v19 == a2 && v20 == a3;
      if (!v22 && (sub_1BB874398() & 1) == 0)
        break;
      v37 = v21;
      v23 = v8;
      v24 = a2;
      v25 = a3;
      v27 = *v35;
      v26 = v35[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)v14 = v27;
      *((_QWORD *)v14 + 1) = v26;
      a3 = v25;
      a2 = v24;
      v8 = v23;
      v14[16] = v37;
      swift_storeEnumTagMultiPayload();
      v28 = &v14[*(int *)(v34 + 20)];
      *(_QWORD *)v28 = 0;
      *((_QWORD *)v28 + 1) = 0;
LABEL_12:
      sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
      v16 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B420(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v41;
      }
      v30 = *(_QWORD *)(v16 + 16);
      v29 = *(_QWORD *)(v16 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1BAC7B420(v29 > 1, v30 + 1, 1);
        v16 = v41;
      }
      *(_QWORD *)(v16 + 16) = v30 + 1;
      v31 = v38;
      sub_1BA5193C4((uint64_t)v14, v16 + v39 + v30 * v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
      v17 += v31;
      if (!--v15)
        return v16;
    }
    swift_bridgeObjectRelease();
LABEL_11:
    sub_1BA4C2DD8(v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
    goto LABEL_12;
  }
  return v16;
}

uint64_t sub_1BB3953C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t *, _BYTE *))
{
  uint64_t v6;
  uint64_t v7;
  int64_t v9;
  uint64_t result;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v46[8];
  uint64_t v47;
  uint64_t v48;

  v7 = v6;
  v9 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v48 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AFF0(0, v9, 0);
    v12 = a4;
    v13 = 0;
    result = v48;
    v35 = a1 + 32;
    v36 = v9;
    v44 = a3;
    do
    {
      v42 = result;
      v43 = v13;
      v14 = (uint64_t *)(v35 + 48 * v13);
      v15 = v14[1];
      v17 = v14[2];
      v16 = v14[3];
      v18 = *(_QWORD *)(v17 + 16);
      v40 = v14[5];
      v41 = *v14;
      if (v18)
      {
        v39 = v7;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v38 = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA79EDD0((uint64_t)v12);
        v47 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1BAC7AFD4(0, v18, 0);
        v12 = a4;
        v19 = v47;
        v20 = (uint64_t *)(v17 + 48);
        do
        {
          v22 = *(v20 - 2);
          v21 = *(v20 - 1);
          v23 = *v20;
          if ((~*v20 & 0xF000000000000007) == 0
            && (v22 == a2 ? (v24 = v21 == v44) : (v24 = 0), v24 || (sub_1BB874398() & 1) != 0))
          {
            v22 = *v12;
            v21 = v12[1];
            swift_bridgeObjectRetain();
            v23 = 0xF000000000000007;
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_1BA5E7FF4(v23);
          }
          v47 = v19;
          v26 = *(_QWORD *)(v19 + 16);
          v25 = *(_QWORD *)(v19 + 24);
          if (v26 >= v25 >> 1)
          {
            sub_1BAC7AFD4(v25 > 1, v26 + 1, 1);
            v12 = a4;
            v19 = v47;
          }
          v20 += 3;
          *(_QWORD *)(v19 + 16) = v26 + 1;
          v27 = (_QWORD *)(v19 + 24 * v26);
          v27[4] = v22;
          v27[5] = v21;
          v27[6] = v23;
          --v18;
        }
        while (v18);
        sub_1BA79ED54((uint64_t)v12);
        swift_bridgeObjectRelease();
        a3 = v44;
        swift_bridgeObjectRelease();
        v7 = v39;
        v16 = v38;
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRetain();
      sub_1BA79EDD0((uint64_t)v12);
      swift_bridgeObjectRetain();
      v28 = swift_bridgeObjectRetain();
      v29 = a6(v28, a2, a3, v12, v46);
      sub_1BA79ED54((uint64_t)v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = v42;
      v48 = v42;
      v30 = v16;
      v32 = *(_QWORD *)(v42 + 16);
      v31 = *(_QWORD *)(v42 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1BAC7AFF0(v31 > 1, v32 + 1, 1);
        v12 = a4;
        result = v48;
      }
      v13 = v43 + 1;
      *(_QWORD *)(result + 16) = v32 + 1;
      v33 = (_QWORD *)(result + 48 * v32);
      v33[4] = v41;
      v33[5] = v15;
      v33[6] = v19;
      v33[7] = v30;
      v33[8] = v29;
      v33[9] = v40;
    }
    while (v43 + 1 != v36);
  }
  return result;
}

uint64_t sub_1BB39572C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = v4;
  v21 = a3;
  v22 = a4;
  v20 = a2;
  v7 = type metadata accessor for FormatContentSubgroup();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79FF0(0, v11, 0);
    v12 = v23;
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v14 = (_QWORD *)(a1 + v13);
    v15 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_1BB38BD34(v14, v20, v21, v22, (uint64_t)v10);
      if (v5)
        break;
      v5 = 0;
      v23 = v12;
      v17 = *(_QWORD *)(v12 + 16);
      v16 = *(_QWORD *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BAC79FF0(v16 > 1, v17 + 1, 1);
        v12 = v23;
      }
      *(_QWORD *)(v12 + 16) = v17 + 1;
      sub_1BA5193C4((uint64_t)v10, v12 + v13 + v17 * v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
      v14 = (_QWORD *)((char *)v14 + v15);
      if (!--v11)
        return v12;
    }
    swift_release();
  }
  return v12;
}

char *sub_1BB395884(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1BB873F84();
  __break(1u);
  return result;
}

char *sub_1BB39596C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB395A54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB395B44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB395C34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB395D28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 7) + 32;
    v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB395E18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      sub_1BA505288(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB395F28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB396018(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 152 * a1 + 32;
    v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB396108(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 248 * a1 + 32;
    v6 = a3 + 248 * v4;
    if (v5 >= v6 || v5 + 248 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3961FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 400 * a1 + 32;
    v6 = a3 + 400 * v4;
    if (v5 >= v6 || v5 + 400 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3962EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 208 * a1 + 32;
    v6 = a3 + 208 * v4;
    if (v5 >= v6 || v5 + 208 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3963DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 168 * a1 + 32;
    v6 = a3 + 168 * v4;
    if (v5 >= v6 || v5 + 168 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3964C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3965BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      sub_1BAC87F60();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3966C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3967B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3968A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB39699C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB396A90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB396B84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB396C78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB396D6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB396E5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB396F50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1BB39CBB0(0, &qword_1ED3B9218);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397068(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397158(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB39724C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB39733C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB39742C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1BA4AD288(0, &qword_1ED39FF70, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397548(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397638(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      a5(0);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397740(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 200 * a1 + 32;
    v6 = a3 + 200 * v4;
    if (v5 >= v6 || v5 + 200 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397830(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

char *sub_1BB397920(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397A08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 160 * a1 + 32;
    v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3A8430, (uint64_t (*)(void))sub_1BA9F066C, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397B30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3A8438, (uint64_t (*)(void))sub_1BAB18C84, (uint64_t)&type metadata for FormatWebEmbedNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397C58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1BA4CDF6C(0, &qword_1ED3CC6A0, (uint64_t (*)(void))sub_1BAADA988, (uint64_t)&type metadata for FormatCustomNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397D80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 152 * a1 + 32;
    v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2C2368, (uint64_t (*)(void))sub_1BB39C418, (uint64_t)&type metadata for FormatMicaNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397EA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 216 * a1 + 32;
    v6 = a3 + 216 * v4;
    if (v5 >= v6 || v5 + 216 * v4 <= a3)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3AFB08, (uint64_t (*)(void))sub_1BAFA1410, (uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB397FC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 160 * a1 + 32;
    v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1EF2AFD88, (uint64_t (*)(void))sub_1BAADEE7C, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3980F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = a4 + 176 * a1 + 32;
    v9 = a3 + 176 * v7;
    if (v8 >= v9 || v8 + 176 * v7 <= a3)
    {
      sub_1BA4CDF6C(0, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v9;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB39820C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3A8418, (uint64_t (*)(void))sub_1BAAF2DD8, (uint64_t)&type metadata for FormatProgressViewNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398334(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3AF7A0, (uint64_t (*)(void))sub_1BB1E88B0, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB39845C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB39854C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398640(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398734(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398824(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398918(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398A08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 168 * a1 + 32;
    v6 = a3 + 168 * v4;
    if (v5 >= v6 || v5 + 168 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398AF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 152 * a1 + 32;
    v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398BE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 144 * a1 + 32;
    v6 = a3 + 144 * v4;
    if (v5 >= v6 || v5 + 144 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398CD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398DC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398EB8()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE)
    return 14;
  else
    return v0;
}

uint64_t sub_1BB398F00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB398FF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1EF2C2440, (uint64_t)&type metadata for DebugInspectionDataSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB39910C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 7) + 32;
    v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3991FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3992EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3993E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_1BACD6034();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3994E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3995D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3996C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3997B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB3998A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB399998(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB399A8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB399B7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB399C6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB399D60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 200 * a1 + 32;
    v6 = a3 + 200 * v4;
    if (v5 >= v6 || v5 + 200 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB399E50(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1EF2B2570, type metadata accessor for FormatContent, (uint64_t)&protocol conformance descriptor for FormatContent);
  a1[2] = sub_1BA4A2870(&qword_1EF2C2220, type metadata accessor for FormatContent, (uint64_t)&protocol conformance descriptor for FormatContent);
  result = sub_1BA4A2870(&qword_1EF2C2228, type metadata accessor for FormatContent, (uint64_t)&protocol conformance descriptor for FormatContent);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB399EC8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 44));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB399F00@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 48));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB399F38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 52));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB399F70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 64));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB399FA8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 68));
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatContent(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C8B0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (uint64_t *)((char *)v4 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[8];
    v22 = a3[9];
    v23 = (uint64_t *)((char *)v4 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (uint64_t *)((char *)v4 + v22);
    v27 = (uint64_t *)((char *)a2 + v22);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = a3[10];
    __dst = (char *)v4 + v29;
    v30 = (char *)a2 + v29;
    v31 = sub_1BB871E24();
    v32 = *(_QWORD *)(v31 - 8);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39(v30, 1, v31))
    {
      sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
    }
    v35 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v35) = *(uint64_t *)((char *)a2 + v35);
    v36 = a3[14];
    *(uint64_t *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)v4 + v36) = *(uint64_t *)((char *)a2 + v36);
    v37 = a3[16];
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)v4 + v37) = *(uint64_t *)((char *)a2 + v37);
    *(uint64_t *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

_QWORD *assignWithCopy for FormatContent(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[10];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_1BB871E24();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatContent(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[10];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1BB871E24();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
  v20 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  return a1;
}

_QWORD *assignWithTake for FormatContent(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[10];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_1BB871E24();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v32, v33, v34);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
    goto LABEL_6;
  }
  if (v38)
  {
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB39A8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C8B0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BB39A99C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1BB86C8B0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

_QWORD *sub_1BB39AA50(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  char *__dst;
  _QWORD *v48;
  _QWORD *v49;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v38 = *a2;
    *a1 = *a2;
    v39 = (_QWORD *)(v38 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
    v48 = a2;
    v49 = a1;
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = *(_QWORD *)((char *)a2 + v7 + 8);
    *v8 = *(_QWORD *)((char *)a2 + v7);
    v8[1] = v10;
    v11 = (int *)type metadata accessor for FormatContent(0);
    v12 = v11[5];
    v13 = (char *)v8 + v12;
    v14 = &v9[v12];
    v15 = sub_1BB86C8B0();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v17 = v11[6];
    v18 = (_QWORD *)((char *)v8 + v17);
    v19 = &v9[v17];
    v20 = *((_QWORD *)v19 + 1);
    *v18 = *(_QWORD *)v19;
    v18[1] = v20;
    v21 = v11[7];
    v22 = (_QWORD *)((char *)v8 + v21);
    v23 = &v9[v21];
    v24 = *((_QWORD *)v23 + 1);
    *v22 = *(_QWORD *)v23;
    v22[1] = v24;
    v25 = v11[8];
    v26 = (_QWORD *)((char *)v8 + v25);
    v27 = &v9[v25];
    v28 = *((_QWORD *)v27 + 1);
    *v26 = *(_QWORD *)v27;
    v26[1] = v28;
    v29 = v11[9];
    v30 = (_QWORD *)((char *)v8 + v29);
    v31 = &v9[v29];
    v32 = *((_QWORD *)v31 + 1);
    *v30 = *(_QWORD *)v31;
    v30[1] = v32;
    v33 = v11[10];
    __dst = (char *)v8 + v33;
    v34 = &v9[v33];
    v35 = sub_1BB871E24();
    v36 = *(_QWORD *)(v35 - 8);
    v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v45(v34, 1, v35))
    {
      sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
    }
    *(_QWORD *)((char *)v8 + v11[11]) = *(_QWORD *)&v9[v11[11]];
    *(_QWORD *)((char *)v8 + v11[12]) = *(_QWORD *)&v9[v11[12]];
    *(_QWORD *)((char *)v8 + v11[13]) = *(_QWORD *)&v9[v11[13]];
    *(_QWORD *)((char *)v8 + v11[14]) = *(_QWORD *)&v9[v11[14]];
    *(_QWORD *)((char *)v8 + v11[15]) = *(_QWORD *)&v9[v11[15]];
    *(_QWORD *)((char *)v8 + v11[16]) = *(_QWORD *)&v9[v11[16]];
    *(_QWORD *)((char *)v8 + v11[17]) = *(_QWORD *)&v9[v11[17]];
    v40 = *(int *)(a3 + 20);
    v39 = v49;
    v41 = (char *)v49 + v40;
    v42 = (char *)v48 + v40;
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
    v41[24] = v42[24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v39;
}

uint64_t sub_1BB39AD1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  swift_bridgeObjectRelease();
  v3 = type metadata accessor for FormatContent(0);
  v4 = v2 + *(int *)(v3 + 20);
  v5 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v2 + *(int *)(v3 + 40);
  v7 = sub_1BB871E24();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BB39AE8C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  char *__dst;
  _QWORD *v45;
  _QWORD *v46;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  v45 = a2;
  v46 = a1;
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = (int *)type metadata accessor for FormatContent(0);
  v11 = v10[5];
  v12 = (char *)v7 + v11;
  v13 = (char *)v8 + v11;
  v14 = sub_1BB86C8B0();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v16 = v10[6];
  v17 = (_QWORD *)((char *)v7 + v16);
  v18 = (_QWORD *)((char *)v8 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v10[7];
  v21 = (_QWORD *)((char *)v7 + v20);
  v22 = (_QWORD *)((char *)v8 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = v10[8];
  v25 = (_QWORD *)((char *)v7 + v24);
  v26 = (_QWORD *)((char *)v8 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = v10[9];
  v29 = (_QWORD *)((char *)v7 + v28);
  v30 = (_QWORD *)((char *)v8 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = v10[10];
  __dst = (char *)v7 + v32;
  v33 = (char *)v8 + v32;
  v34 = sub_1BB871E24();
  v35 = *(_QWORD *)(v34 - 8);
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v42(v33, 1, v34))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
  }
  *(_QWORD *)((char *)v7 + v10[11]) = *(_QWORD *)((char *)v8 + v10[11]);
  *(_QWORD *)((char *)v7 + v10[12]) = *(_QWORD *)((char *)v8 + v10[12]);
  *(_QWORD *)((char *)v7 + v10[13]) = *(_QWORD *)((char *)v8 + v10[13]);
  *(_QWORD *)((char *)v7 + v10[14]) = *(_QWORD *)((char *)v8 + v10[14]);
  *(_QWORD *)((char *)v7 + v10[15]) = *(_QWORD *)((char *)v8 + v10[15]);
  *(_QWORD *)((char *)v7 + v10[16]) = *(_QWORD *)((char *)v8 + v10[16]);
  *(_QWORD *)((char *)v7 + v10[17]) = *(_QWORD *)((char *)v8 + v10[17]);
  v37 = *(int *)(a3 + 20);
  v38 = (char *)v46 + v37;
  v39 = (char *)v45 + v37;
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
  v38[24] = v39[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v46;
}

_QWORD *sub_1BB39B12C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  _QWORD *v39;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v39 = a2;
  v7 = (char *)a2 + v5;
  *v6 = *(_QWORD *)((char *)a2 + v5);
  v6[1] = *(_QWORD *)((char *)a2 + v5 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for FormatContent(0);
  v9 = v8[5];
  v10 = (char *)v6 + v9;
  v11 = &v7[v9];
  v12 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = v8[6];
  v14 = (_QWORD *)((char *)v6 + v13);
  v15 = &v7[v13];
  *v14 = *(_QWORD *)v15;
  v14[1] = *((_QWORD *)v15 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v8[7];
  v17 = (_QWORD *)((char *)v6 + v16);
  v18 = &v7[v16];
  *v17 = *(_QWORD *)v18;
  v17[1] = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v8[8];
  v20 = (_QWORD *)((char *)v6 + v19);
  v21 = &v7[v19];
  *v20 = *(_QWORD *)v21;
  v20[1] = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v8[9];
  v23 = (_QWORD *)((char *)v6 + v22);
  v24 = &v7[v22];
  *v23 = *(_QWORD *)v24;
  v23[1] = *((_QWORD *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v8[10];
  v26 = (char *)v6 + v25;
  v27 = &v7[v25];
  v28 = sub_1BB871E24();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 24))(v26, v27, v28);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_6;
  }
  if (v32)
  {
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_7:
  *(_QWORD *)((char *)v6 + v8[11]) = *(_QWORD *)&v7[v8[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + v8[12]) = *(_QWORD *)&v7[v8[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + v8[13]) = *(_QWORD *)&v7[v8[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + v8[14]) = *(_QWORD *)&v7[v8[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + v8[15]) = *(_QWORD *)&v7[v8[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + v8[16]) = *(_QWORD *)&v7[v8[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + v8[17]) = *(_QWORD *)&v7[v8[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = *(int *)(a3 + 20);
  v35 = (char *)a1 + v34;
  v36 = (char *)v39 + v34;
  *(_QWORD *)v35 = *(_QWORD *)((char *)v39 + v34);
  *((_QWORD *)v35 + 1) = *(_QWORD *)((char *)v39 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[24] = v36[24];
  return a1;
}

_OWORD *sub_1BB39B4AC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for FormatContent(0);
  v10 = v9[5];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_OWORD *)&v7[v9[6]] = *(_OWORD *)&v8[v9[6]];
  *(_OWORD *)&v7[v9[7]] = *(_OWORD *)&v8[v9[7]];
  *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
  *(_OWORD *)&v7[v9[9]] = *(_OWORD *)&v8[v9[9]];
  v14 = v9[10];
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = sub_1BB871E24();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(_QWORD *)&v7[v9[11]] = *(_QWORD *)&v8[v9[11]];
  *(_QWORD *)&v7[v9[12]] = *(_QWORD *)&v8[v9[12]];
  *(_QWORD *)&v7[v9[13]] = *(_QWORD *)&v8[v9[13]];
  *(_QWORD *)&v7[v9[14]] = *(_QWORD *)&v8[v9[14]];
  *(_QWORD *)&v7[v9[15]] = *(_QWORD *)&v8[v9[15]];
  *(_QWORD *)&v7[v9[16]] = *(_QWORD *)&v8[v9[16]];
  *(_QWORD *)&v7[v9[17]] = *(_QWORD *)&v8[v9[17]];
  v20 = *(int *)(a3 + 20);
  v21 = (_OWORD *)((char *)a1 + v20);
  v22 = (_OWORD *)((char *)a2 + v20);
  *v21 = *v22;
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v22 + 9);
  return a1;
}

_QWORD *sub_1BB39B688(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v50;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for FeedGroupConfigSidecar() + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v50 = a2;
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v10 = (int *)type metadata accessor for FormatContent(0);
  v11 = v10[5];
  v12 = (char *)v7 + v11;
  v13 = &v8[v11];
  v14 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = v10[6];
  v16 = (_QWORD *)((char *)v7 + v15);
  v17 = &v8[v15];
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = v10[7];
  v21 = (_QWORD *)((char *)v7 + v20);
  v22 = &v8[v20];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = v10[8];
  v26 = (_QWORD *)((char *)v7 + v25);
  v27 = &v8[v25];
  v29 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v27 + 1);
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v30 = v10[9];
  v31 = (_QWORD *)((char *)v7 + v30);
  v32 = &v8[v30];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = v10[10];
  v36 = (char *)v7 + v35;
  v37 = &v8[v35];
  v38 = sub_1BB871E24();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v41 = v40(v36, 1, v38);
  v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 40))(v36, v37, v38);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
    goto LABEL_6;
  }
  if (v42)
  {
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_7:
  *(_QWORD *)((char *)v7 + v10[11]) = *(_QWORD *)&v8[v10[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v10[12]) = *(_QWORD *)&v8[v10[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v10[13]) = *(_QWORD *)&v8[v10[13]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v10[14]) = *(_QWORD *)&v8[v10[14]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v10[15]) = *(_QWORD *)&v8[v10[15]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v10[16]) = *(_QWORD *)&v8[v10[16]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v10[17]) = *(_QWORD *)&v8[v10[17]];
  swift_bridgeObjectRelease();
  v44 = *(int *)(a3 + 20);
  v45 = (char *)a1 + v44;
  v46 = (char *)v50 + v44;
  v47 = *(_QWORD *)((char *)v50 + v44 + 8);
  *(_QWORD *)v45 = *(_QWORD *)((char *)v50 + v44);
  *((_QWORD *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);
  swift_bridgeObjectRelease();
  v45[24] = v46[24];
  return a1;
}

uint64_t sub_1BB39B958()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB39B964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for FeedGroupConfigSidecar();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BB39B9E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB39B9F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FeedGroupConfigSidecar();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1BB39BA6C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FeedGroupConfigSidecar();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatContent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1BB39BB28 + 4 * byte_1BB90E525[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1BB39BB5C + 4 * byte_1BB90E520[v4]))();
}

uint64_t sub_1BB39BB5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB39BB64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB39BB6CLL);
  return result;
}

uint64_t sub_1BB39BB78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB39BB80);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1BB39BB84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB39BB8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatContent.CodingKeys()
{
  return &type metadata for FormatContent.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FormatContent.AltCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB39BBE8 + 4 * byte_1BB90E52A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB39BC08 + 4 * byte_1BB90E52F[v4]))();
}

_BYTE *sub_1BB39BBE8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB39BC08(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB39BC10(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB39BC18(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB39BC20(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB39BC28(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatContent.AltCodingKeys()
{
  return &type metadata for FormatContent.AltCodingKeys;
}

unint64_t sub_1BB39BC48()
{
  unint64_t result;

  result = qword_1EF2C2230;
  if (!qword_1EF2C2230)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E79C, &type metadata for FormatContent.AltCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2230);
  }
  return result;
}

unint64_t sub_1BB39BC90()
{
  unint64_t result;

  result = qword_1EF2C2238;
  if (!qword_1EF2C2238)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E88C, &type metadata for FormatContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2238);
  }
  return result;
}

uint64_t sub_1BB39BCD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB39BDF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 112 * a1 + 32;
    v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB39BEE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB39BFD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1BAC88080();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BB39C0DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF480)
  {
    sub_1BA505288(255, &qword_1ED3ADC88);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF480);
  }
}

void sub_1BB39C144()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3EA8)
  {
    type metadata accessor for FormatLayoutSectionDescriptor(255);
    sub_1BA4A2870((unint64_t *)&qword_1ED3D4E30, type metadata accessor for FormatLayoutSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatLayoutSectionDescriptor);
    sub_1BA83171C();
    v0 = sub_1BB870600();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3EA8);
  }
}

void sub_1BB39C1E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9FC0)
  {
    sub_1BB39CBB0(255, &qword_1ED3B9218);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9FC0);
  }
}

void sub_1BB39C248()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2348)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3A8430, (uint64_t (*)(void))sub_1BA9F066C, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2348);
  }
}

void sub_1BB39C2BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB930)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3A8438, (uint64_t (*)(void))sub_1BAB18C84, (uint64_t)&type metadata for FormatWebEmbedNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB930);
  }
}

void sub_1BB39C330()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFC50)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CC6A0, (uint64_t (*)(void))sub_1BAADA988, (uint64_t)&type metadata for FormatCustomNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFC50);
  }
}

void sub_1BB39C3A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2360)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1EF2C2368, (uint64_t (*)(void))sub_1BB39C418, (uint64_t)&type metadata for FormatMicaNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2360);
  }
}

unint64_t sub_1BB39C418()
{
  unint64_t result;

  result = qword_1EF2C2370;
  if (!qword_1EF2C2370)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91D604, &type metadata for FormatMicaNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2C2370);
  }
  return result;
}

void sub_1BB39C45C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AFB70)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3AFB08, (uint64_t (*)(void))sub_1BAFA1410, (uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AFB70);
  }
}

void sub_1BB39C4D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2380)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1EF2BA4D8, (uint64_t (*)(void))sub_1BB071678, (uint64_t)&type metadata for FormatVideoNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2380);
  }
}

void sub_1BB39C544()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C23A0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1EF2AFD88, (uint64_t (*)(void))sub_1BAADEE7C, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C23A0);
  }
}

void sub_1BB39C5B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C23C0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1EF2C23C8, (uint64_t (*)(void))sub_1BB39C62C, (uint64_t)&type metadata for FormatVideoPlayerNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C23C0);
  }
}

unint64_t sub_1BB39C62C()
{
  unint64_t result;

  result = qword_1EF2C23D0;
  if (!qword_1EF2C23D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94EC24, &type metadata for FormatVideoPlayerNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2C23D0);
  }
  return result;
}

void sub_1BB39C670()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C23E0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3A8418, (uint64_t (*)(void))sub_1BAAF2DD8, (uint64_t)&type metadata for FormatProgressViewNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C23E0);
  }
}

void sub_1BB39C6E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF848)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3AF7A0, (uint64_t (*)(void))sub_1BB1E88B0, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF848);
  }
}

void sub_1BB39C758()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C24B0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C24B0);
  }
}

void sub_1BB39C7CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C24B8)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C24B8);
  }
}

void sub_1BB39C840()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C24C8)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C24C8);
  }
}

void sub_1BB39C8B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39BF80)
  {
    sub_1BA49A224(255, (unint64_t *)&qword_1ED3B97E0);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39BF80);
  }
}

void sub_1BB39C918()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2578)
  {
    sub_1BA50CAA8(255, (unint64_t *)&unk_1EF2C2580, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB430], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEA4B0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2578);
  }
}

void sub_1BB39C98C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C2598, type metadata accessor for DebugFormatUploadPrivateEntryResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
}

uint64_t sub_1BB39C9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA6BCB7C(0, &qword_1ED3B8BB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatLatestCompatibleFileReference);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB39C9FC@<X0>(_OWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB38C410(a1, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1BB39CA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA6BCB7C(0, &qword_1ED3B8BB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatLatestCompatibleFileReference);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB39CA70@<X0>(_OWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB38B988(a1, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

void sub_1BB39CA90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C25F0)
  {
    sub_1BA505288(255, &qword_1EF2C25F8);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C25F0);
  }
}

uint64_t sub_1BB39CAF8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    sub_1BB39CBB0(255, a3);
    result = swift_getFunctionTypeMetadata2();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1BB39CB58(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BB39CAF8(255, a3, a4);
    v5 = sub_1BB874218();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BB39CBB0(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BB39CC00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9CA8)
  {
    sub_1BA505288(255, (unint64_t *)&unk_1ED3B0A30);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9CA8);
  }
}

void sub_1BB39CC68()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C2690)
  {
    sub_1BA4B07F0(255, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C2690);
  }
}

void sub_1BB39CCE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC5F8)
  {
    sub_1BA505288(255, &qword_1ED39EE60);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC5F8);
  }
}

double sub_1BB39CD48@<D0>(uint64_t a1@<X8>)
{
  return FeedGroupDescribing.feedGroupDebug.getter(a1);
}

double FeedGroupDescribing.feedGroupDebug.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t dispatch thunk of FeedGroupDescribing.feedLayoutOrder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedGroupDescribing.feedGroupKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedGroupDescribing.feedSlots.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedGroupDescribing.feedGroupItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedGroupDescribing.feedGroupDebug.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

double FormatTransformKnobs.expireContentThreshold.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  double v13;
  double v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v19;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  v4 = *(void **)v0;
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(void **)(v0 + 56);
  v9 = *(_QWORD *)(v3 + 24);
  v19 = *(void **)v0;
  if (v9 >> 62)
  {
    v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v16 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v13 = *(double *)(v3 + 16);
    if (v17)
      goto LABEL_3;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    goto LABEL_6;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v6, v7);
  v12 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = *(double *)(v3 + 16);
  if (!v10)
    goto LABEL_5;
LABEL_3:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAAA7084(v9, v5);
  v13 = v14;
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_6:
  sub_1BA6DB13C(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v13;
}

uint64_t FormatTransformKnobs.init(context:knobs:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  __int128 v9;

  v3 = *(_BYTE *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 9);
  v5 = *(_BYTE *)(a1 + 10);
  v6 = *(_BYTE *)(a1 + 11);
  v7 = *(_BYTE *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a3 = *(_QWORD *)a1;
  *(_BYTE *)(a3 + 8) = v3;
  *(_BYTE *)(a3 + 9) = v4;
  *(_BYTE *)(a3 + 10) = v5;
  *(_BYTE *)(a3 + 11) = v6;
  v9 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a3 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 32) = v9;
  *(_BYTE *)(a3 + 48) = v7;
  *(_QWORD *)(a3 + 56) = v8;
  *(_OWORD *)(a3 + 64) = *(_OWORD *)(a1 + 64);
  return sub_1BA4CECCC(a2, a3 + 80);
}

uint64_t FormatTransformKnobs.maxNumberOfItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v19;
  void *v20;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  v4 = *(void **)v0;
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(void **)(v0 + 56);
  v9 = *(_QWORD *)(v3 + 24);
  v20 = v8;
  v19 = *(void **)v0;
  if (v9 >> 62)
  {
    v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v16 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v3 + 16);
    if (v17)
      goto LABEL_3;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    goto LABEL_6;
  }
  v10 = *(void **)(v0 + 56);
  v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  v12 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v6, v7);
  v13 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = *(_QWORD *)(v3 + 16);
  if (!v11)
    goto LABEL_5;
LABEL_3:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1BA8711CC(v14, v9, v5);
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_6:
  sub_1BA6DB13C(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t FormatTransformKnobs.minNumberOfItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v19;
  void *v20;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  v4 = *(void **)v0;
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(void **)(v0 + 56);
  v9 = *(_QWORD *)(v3 + 24);
  v20 = v8;
  v19 = *(void **)v0;
  if (v9 >> 62)
  {
    v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v6, v7);
    v16 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v3 + 16);
    if (v17)
      goto LABEL_3;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    goto LABEL_6;
  }
  v10 = *(void **)(v0 + 56);
  v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  v12 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v6, v7);
  v13 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = *(_QWORD *)(v3 + 16);
  if (!v11)
    goto LABEL_5;
LABEL_3:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1BA8711CC(v14, v9, v5);
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_6:
  sub_1BA6DB13C(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t sub_1BB39D390()
{
  uint64_t result;

  sub_1BA5ECD38();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t FormatTransformKnobsProviding.expireContent.getter()
{
  uint64_t result;

  sub_1BA5ECD38();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_1BB39D3F8()
{
  uint64_t result;
  uint64_t v1;

  sub_1BA5ECCB8();
  result = swift_allocObject();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

uint64_t FormatTransformKnobsProviding.expireContentThreshold.getter()
{
  uint64_t result;
  uint64_t v1;

  sub_1BA5ECCB8();
  result = swift_allocObject();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

uint64_t destroy for FormatTransformKnobs(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 80);
}

uint64_t initializeWithCopy for FormatTransformKnobs(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = (_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)(v7 - 1) >= 3)
  {
    *(_QWORD *)(a1 + 32) = *v6;
    *(_QWORD *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
  }
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(void **)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v11 = a2 + 80;
  v12 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v12;
  v13 = v12;
  v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
  v15 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(a1 + 80, v11, v13);
  return a1;
}

uint64_t assignWithCopy for FormatTransformKnobs(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40) - 1;
  if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 3)
  {
    if (v7 >= 3)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BB1E4E14(a1 + 32);
    goto LABEL_6;
  }
  if (v7 < 3)
  {
LABEL_6:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
LABEL_8:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(void **)(a1 + 56);
  v9 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = v9;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for FormatTransformKnobs(uint64_t a1, uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  __int128 v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a2 + 32);
  if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 3)
  {
    v6 = *(_QWORD *)(a2 + 40);
    if ((unint64_t)(v6 - 1) >= 3)
    {
      *(_QWORD *)(a1 + 32) = *v5;
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BB1E4E14(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v5;
LABEL_6:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t storeEnumTagSinglePayload for FormatTransformKnobs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTransformKnobs()
{
  return &type metadata for FormatTransformKnobs;
}

uint64_t dispatch thunk of FormatTransformKnobsProviding.maxNumberOfItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatTransformKnobsProviding.minNumberOfItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FormatTransformKnobsProviding.expireContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FormatTransformKnobsProviding.expireContentThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void sub_1BB39D8E4()
{
  __asm { BR              X11 }
}

void sub_1BB39D930()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = swift_allocObject();
  sub_1BB525134();
  *v0 = v1;
}

uint64_t sub_1BB39DCC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageBackground.init(from:)(a1, a2);
}

uint64_t sub_1BB39DCD8(_QWORD *a1)
{
  return FormatImageBackground.encode(to:)(a1);
}

uint64_t sub_1BB39DCF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMicaBackground.init(from:)(a1, a2);
}

uint64_t sub_1BB39DD04(_QWORD *a1)
{
  return FormatMicaBackground.encode(to:)(a1);
}

BOOL _s8NewsFeed20FormatMicaBackgroundV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  _OWORD v7[7];
  _OWORD v8[2];
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v16[2];
  _BYTE v17[10];
  _OWORD v18[7];
  _OWORD v19[2];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[2];
  uint64_t v28[18];
  uint64_t v29;
  uint64_t v30[18];
  _BYTE v31[144];
  _BYTE v32[144];

  v3 = *a1;
  sub_1BB004424((uint64_t)(a1 + 1), (uint64_t)v31);
  v4 = *a2;
  sub_1BB004424((uint64_t)(a2 + 1), (uint64_t)v32);
  v28[0] = v3;
  v30[0] = v4;
  if ((static FormatMicaNodeContent.== infix(_:_:)((unint64_t *)v28, (unint64_t *)v30) & 1) == 0)
    return 0;
  sub_1BB004424((uint64_t)v31, (uint64_t)v30);
  if (sub_1BA896370(v30) == 1)
  {
    sub_1BB004424((uint64_t)v32, (uint64_t)v28);
    if (sub_1BA896370(v28) == 1)
      return 1;
    goto LABEL_7;
  }
  sub_1BB004424((uint64_t)v31, (uint64_t)&v20);
  sub_1BB004424((uint64_t)v32, (uint64_t)v28);
  if (sub_1BA896370(v28) == 1)
  {
    v15 = v26;
    v16[0] = v27[0];
    *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v27 + 9);
    v11 = v22;
    v12 = v23;
    v13 = v24;
    v14 = v25;
    v9 = v20;
    v10 = v21;
    sub_1BB004424((uint64_t)v31, (uint64_t)v17);
    sub_1BB004424((uint64_t)v31, (uint64_t)v18);
    sub_1BA89652C((uint64_t)v18);
    sub_1BA89652C((uint64_t)v17);
    sub_1BA896610((uint64_t)&v9);
LABEL_7:
    sub_1BB004424((uint64_t)v31, (uint64_t)v28);
    sub_1BB004424((uint64_t)v32, (uint64_t)&v29);
    sub_1BA8966F8((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
    sub_1BA8963E0((uint64_t)v28);
    return 0;
  }
  sub_1BB004424((uint64_t)v32, (uint64_t)&v9);
  v7[6] = v15;
  v8[0] = v16[0];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)v16 + 9);
  v7[2] = v11;
  v7[3] = v12;
  v7[4] = v13;
  v7[5] = v14;
  v7[0] = v9;
  v7[1] = v10;
  sub_1BB004424((uint64_t)v31, (uint64_t)v17);
  sub_1BA8966F8((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
  sub_1BA89652C((uint64_t)v17);
  v5 = _s8NewsFeed17FormatMediaTimingV2eeoiySbAC_ACtFZ_0((uint64_t)&v20, (uint64_t)v7);
  v18[6] = v26;
  v19[0] = v27[0];
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v27 + 9);
  v18[2] = v22;
  v18[3] = v23;
  v18[4] = v24;
  v18[5] = v25;
  v18[0] = v20;
  v18[1] = v21;
  sub_1BA896610((uint64_t)v18);
  sub_1BA8966F8((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
  return v5;
}

uint64_t _s8NewsFeed21FormatImageBackgroundV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  v4 = a2[1];
  v8 = *a2;
  v9 = v2;
  if ((static FormatAsyncImageContent.== infix(_:_:)(&v9, &v8) & 1) != 0)
  {
    if (v3)
    {
      if (v4)
      {
        type metadata accessor for FormatImageNodeStyle();
        swift_retain();
        v5 = swift_retain();
        v6 = static FormatImageNodeStyle.== infix(_:_:)(v5, v4);
        swift_release();
        swift_release();
        if ((v6 & 1) != 0)
          return 1;
      }
    }
    else if (!v4)
    {
      return 1;
    }
  }
  return 0;
}

void _s8NewsFeed16FormatBackgroundO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB39E008@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  char v2;
  char v3;
  uint64_t v5;

  if (v1 >> 61)
  {
    v3 = 0;
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 16);
    swift_retain();
    swift_retain();
    static FormatColor.== infix(_:_:)((uint64_t)&v5);
    v3 = v2;
    swift_release();
    swift_release();
  }
  return v3 & 1;
}

unint64_t sub_1BB39E3CC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB39E3F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB39E3F0()
{
  unint64_t result;

  result = qword_1EF2C26D0;
  if (!qword_1EF2C26D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBackground, &type metadata for FormatBackground);
    atomic_store(result, (unint64_t *)&qword_1EF2C26D0);
  }
  return result;
}

uint64_t sub_1BB39E434(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA69A538, (uint64_t (*)(void))sub_1BA68A818, (uint64_t (*)(void))sub_1BB39E450);
}

unint64_t sub_1BB39E450()
{
  unint64_t result;

  result = qword_1EF2C26D8;
  if (!qword_1EF2C26D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBackground, &type metadata for FormatBackground);
    atomic_store(result, (unint64_t *)&qword_1EF2C26D8);
  }
  return result;
}

unint64_t sub_1BB39E494(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB39E4B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB39E4B8()
{
  unint64_t result;

  result = qword_1EF2C26E0;
  if (!qword_1EF2C26E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageBackground, &type metadata for FormatImageBackground);
    atomic_store(result, (unint64_t *)&qword_1EF2C26E0);
  }
  return result;
}

uint64_t sub_1BB39E4FC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE82760, (uint64_t (*)(void))sub_1BAEF61C0, (uint64_t (*)(void))sub_1BB39E518);
}

unint64_t sub_1BB39E518()
{
  unint64_t result;

  result = qword_1EF2C26E8;
  if (!qword_1EF2C26E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageBackground, &type metadata for FormatImageBackground);
    atomic_store(result, (unint64_t *)&qword_1EF2C26E8);
  }
  return result;
}

unint64_t sub_1BB39E55C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB39E580();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB39E580()
{
  unint64_t result;

  result = qword_1EF2C26F0;
  if (!qword_1EF2C26F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaBackground, &type metadata for FormatMicaBackground);
    atomic_store(result, (unint64_t *)&qword_1EF2C26F0);
  }
  return result;
}

uint64_t sub_1BB39E5C4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE82670, (uint64_t (*)(void))sub_1BAEF3D14, (uint64_t (*)(void))sub_1BB39E5E0);
}

unint64_t sub_1BB39E5E0()
{
  unint64_t result;

  result = qword_1EF2C26F8;
  if (!qword_1EF2C26F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaBackground, &type metadata for FormatMicaBackground);
    atomic_store(result, (unint64_t *)&qword_1EF2C26F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBackground()
{
  return &type metadata for FormatBackground;
}

uint64_t destroy for FormatImageBackground()
{
  swift_release();
  return swift_release();
}

_QWORD *_s8NewsFeed21FormatImageBackgroundVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for FormatImageBackground(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for FormatImageBackground(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatImageBackground()
{
  return &type metadata for FormatImageBackground;
}

uint64_t destroy for FormatMicaBackground(uint64_t a1)
{
  uint64_t result;
  int v3;
  int v4;
  int v5;

  swift_release();
  result = *(_QWORD *)(a1 + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v3 = *(unsigned __int8 *)(a1 + 80);
    if (v3 != 255)
      result = sub_1BA69C828(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v3 & 1);
    v4 = *(unsigned __int8 *)(a1 + 120);
    if (v4 != 255)
      result = sub_1BA8964E0(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v4 & 1);
    v5 = *(unsigned __int8 *)(a1 + 144);
    if (v5 != 255)
      return sub_1BA69C828(*(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), v5 & 1);
  }
  return result;
}

uint64_t initializeWithCopy for FormatMicaBackground(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  __int128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v6 = (_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  swift_retain();
  if (v5 == 1)
  {
    v7 = v6[7];
    *(_OWORD *)(a1 + 104) = v6[6];
    *(_OWORD *)(a1 + 120) = v7;
    *(_OWORD *)(a1 + 129) = *(_OWORD *)((char *)v6 + 121);
    v8 = v6[3];
    *(_OWORD *)(a1 + 40) = v6[2];
    *(_OWORD *)(a1 + 56) = v8;
    v9 = v6[5];
    *(_OWORD *)(a1 + 72) = v6[4];
    *(_OWORD *)(a1 + 88) = v9;
    v10 = v6[1];
    *v4 = *v6;
    *(_OWORD *)(a1 + 24) = v10;
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 16);
    v12 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v11;
    v13 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v12;
    *(_QWORD *)(a1 + 32) = v13;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v14 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v14;
    v15 = *(unsigned __int8 *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15 == 255)
    {
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    }
    else
    {
      v16 = *(_QWORD *)(a2 + 64);
      v17 = *(_QWORD *)(a2 + 72);
      sub_1BA69C808(v16, v17, v15 & 1);
      *(_QWORD *)(a1 + 64) = v16;
      *(_QWORD *)(a1 + 72) = v17;
      *(_BYTE *)(a1 + 80) = v15 & 1;
    }
    v18 = *(unsigned __int8 *)(a2 + 120);
    if (v18 == 255)
    {
      v19 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v19;
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
    }
    else
    {
      v20 = v18 & 1;
      v21 = *(_QWORD *)(a2 + 88);
      v22 = *(_QWORD *)(a2 + 96);
      v23 = *(_QWORD *)(a2 + 104);
      v24 = *(_QWORD *)(a2 + 112);
      sub_1BA896394(v21, v22, v23, v24, v18 & 1);
      *(_QWORD *)(a1 + 88) = v21;
      *(_QWORD *)(a1 + 96) = v22;
      *(_QWORD *)(a1 + 104) = v23;
      *(_QWORD *)(a1 + 112) = v24;
      *(_BYTE *)(a1 + 120) = v20;
    }
    v25 = *(unsigned __int8 *)(a2 + 144);
    if (v25 == 255)
    {
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    }
    else
    {
      v26 = v25 & 1;
      v28 = *(_QWORD *)(a2 + 128);
      v27 = *(_QWORD *)(a2 + 136);
      sub_1BA69C808(v28, v27, v25 & 1);
      *(_QWORD *)(a1 + 128) = v28;
      *(_QWORD *)(a1 + 136) = v27;
      *(_BYTE *)(a1 + 144) = v26;
    }
  }
  return a1;
}

uint64_t assignWithCopy for FormatMicaBackground(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  int v19;
  __int128 v20;
  __int128 *v21;
  __int128 *v22;
  int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  __int128 v28;
  __int128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  __int128 v36;
  __int128 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int128 *v47;
  __int128 *v48;
  int v49;
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 *v69;
  __int128 *v70;
  char v71;
  __int128 v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = (_OWORD *)(a1 + 8);
  v6 = (_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
  {
    if (v5 == 1)
    {
      *v4 = *v6;
      v7 = *(_OWORD *)(a2 + 24);
      v8 = *(_OWORD *)(a2 + 40);
      v9 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v9;
      *(_OWORD *)(a1 + 24) = v7;
      *(_OWORD *)(a1 + 40) = v8;
      v10 = *(_OWORD *)(a2 + 88);
      v11 = *(_OWORD *)(a2 + 104);
      v12 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
      *(_OWORD *)(a1 + 104) = v11;
      *(_OWORD *)(a1 + 120) = v12;
      *(_OWORD *)(a1 + 88) = v10;
      return a1;
    }
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    v19 = *(unsigned __int8 *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19 == 255)
    {
      v20 = *(_OWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = v20;
    }
    else
    {
      v25 = *(_QWORD *)(a2 + 64);
      v26 = *(_QWORD *)(a2 + 72);
      sub_1BA69C808(v25, v26, v19 & 1);
      *(_QWORD *)(a1 + 64) = v25;
      *(_QWORD *)(a1 + 72) = v26;
      *(_BYTE *)(a1 + 80) = v19 & 1;
    }
    v27 = *(unsigned __int8 *)(a2 + 120);
    if (v27 == 255)
    {
      v28 = *(_OWORD *)(a2 + 88);
      v29 = *(_OWORD *)(a2 + 104);
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
      *(_OWORD *)(a1 + 88) = v28;
      *(_OWORD *)(a1 + 104) = v29;
    }
    else
    {
      v30 = v27 & 1;
      v31 = *(_QWORD *)(a2 + 88);
      v32 = *(_QWORD *)(a2 + 96);
      v33 = *(_QWORD *)(a2 + 104);
      v34 = *(_QWORD *)(a2 + 112);
      sub_1BA896394(v31, v32, v33, v34, v27 & 1);
      *(_QWORD *)(a1 + 88) = v31;
      *(_QWORD *)(a1 + 96) = v32;
      *(_QWORD *)(a1 + 104) = v33;
      *(_QWORD *)(a1 + 112) = v34;
      *(_BYTE *)(a1 + 120) = v30;
    }
    v35 = *(unsigned __int8 *)(a2 + 144);
    if (v35 == 255)
    {
      v36 = *(_OWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = v36;
      return a1;
    }
LABEL_33:
    v73 = v35 & 1;
    v75 = *(_QWORD *)(a2 + 128);
    v74 = *(_QWORD *)(a2 + 136);
    sub_1BA69C808(v75, v74, v35 & 1);
    *(_QWORD *)(a1 + 128) = v75;
    *(_QWORD *)(a1 + 136) = v74;
    *(_BYTE *)(a1 + 144) = v73;
    return a1;
  }
  if (v5 == 1)
  {
    sub_1BB39EEA0(a1 + 8);
    *v4 = *v6;
    v13 = *(_OWORD *)(a2 + 72);
    v15 = *(_OWORD *)(a2 + 24);
    v14 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v13;
    *(_OWORD *)(a1 + 24) = v15;
    *(_OWORD *)(a1 + 40) = v14;
    v17 = *(_OWORD *)(a2 + 104);
    v16 = *(_OWORD *)(a2 + 120);
    v18 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    *(_OWORD *)(a1 + 104) = v17;
    *(_OWORD *)(a1 + 120) = v16;
    *(_OWORD *)(a1 + 88) = v18;
    return a1;
  }
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = (__int128 *)(a1 + 64);
  v22 = (__int128 *)(a2 + 64);
  v23 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v23 == 255)
    {
      v37 = *v22;
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *v21 = v37;
    }
    else
    {
      v44 = v23 & 1;
      v45 = *(_QWORD *)(a2 + 64);
      v46 = *(_QWORD *)(a2 + 72);
      sub_1BA69C808(v45, v46, v23 & 1);
      *(_QWORD *)(a1 + 64) = v45;
      *(_QWORD *)(a1 + 72) = v46;
      *(_BYTE *)(a1 + 80) = v44;
    }
  }
  else if (v23 == 255)
  {
    sub_1BAB10C5C(a1 + 64);
    v24 = *(_BYTE *)(a2 + 80);
    *v21 = *v22;
    *(_BYTE *)(a1 + 80) = v24;
  }
  else
  {
    v38 = v23 & 1;
    v39 = *(_QWORD *)(a2 + 64);
    v40 = *(_QWORD *)(a2 + 72);
    sub_1BA69C808(v39, v40, v23 & 1);
    v41 = *(_QWORD *)(a1 + 64);
    v42 = *(_QWORD *)(a1 + 72);
    v43 = *(_BYTE *)(a1 + 80);
    *(_QWORD *)(a1 + 64) = v39;
    *(_QWORD *)(a1 + 72) = v40;
    *(_BYTE *)(a1 + 80) = v38;
    sub_1BA69C828(v41, v42, v43);
  }
  v47 = (__int128 *)(a1 + 88);
  v48 = (__int128 *)(a2 + 88);
  v49 = *(unsigned __int8 *)(a2 + 120);
  if (*(unsigned __int8 *)(a1 + 120) == 255)
  {
    if (v49 == 255)
    {
      v52 = *v48;
      v53 = *(_OWORD *)(a2 + 104);
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
      *v47 = v52;
      *(_OWORD *)(a1 + 104) = v53;
    }
    else
    {
      v64 = v49 & 1;
      v65 = *(_QWORD *)(a2 + 88);
      v66 = *(_QWORD *)(a2 + 96);
      v67 = *(_QWORD *)(a2 + 104);
      v68 = *(_QWORD *)(a2 + 112);
      sub_1BA896394(v65, v66, v67, v68, v49 & 1);
      *(_QWORD *)(a1 + 88) = v65;
      *(_QWORD *)(a1 + 96) = v66;
      *(_QWORD *)(a1 + 104) = v67;
      *(_QWORD *)(a1 + 112) = v68;
      *(_BYTE *)(a1 + 120) = v64;
    }
  }
  else if (v49 == 255)
  {
    sub_1BB00420C(a1 + 88);
    v50 = *(_BYTE *)(a2 + 120);
    v51 = *(_OWORD *)(a2 + 104);
    *v47 = *v48;
    *(_OWORD *)(a1 + 104) = v51;
    *(_BYTE *)(a1 + 120) = v50;
  }
  else
  {
    v54 = v49 & 1;
    v55 = *(_QWORD *)(a2 + 88);
    v56 = *(_QWORD *)(a2 + 96);
    v57 = *(_QWORD *)(a2 + 104);
    v58 = *(_QWORD *)(a2 + 112);
    sub_1BA896394(v55, v56, v57, v58, v49 & 1);
    v59 = *(_QWORD *)(a1 + 88);
    v60 = *(_QWORD *)(a1 + 96);
    v61 = *(_QWORD *)(a1 + 104);
    v62 = *(_QWORD *)(a1 + 112);
    v63 = *(_BYTE *)(a1 + 120);
    *(_QWORD *)(a1 + 88) = v55;
    *(_QWORD *)(a1 + 96) = v56;
    *(_QWORD *)(a1 + 104) = v57;
    *(_QWORD *)(a1 + 112) = v58;
    *(_BYTE *)(a1 + 120) = v54;
    sub_1BA8964E0(v59, v60, v61, v62, v63);
  }
  v69 = (__int128 *)(a1 + 128);
  v70 = (__int128 *)(a2 + 128);
  v35 = *(unsigned __int8 *)(a2 + 144);
  if (*(unsigned __int8 *)(a1 + 144) == 255)
  {
    if (v35 == 255)
    {
      v72 = *v70;
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *v69 = v72;
      return a1;
    }
    goto LABEL_33;
  }
  if (v35 == 255)
  {
    sub_1BAB10C5C(a1 + 128);
    v71 = *(_BYTE *)(a2 + 144);
    *v69 = *v70;
    *(_BYTE *)(a1 + 144) = v71;
  }
  else
  {
    v76 = v35 & 1;
    v78 = *(_QWORD *)(a2 + 128);
    v77 = *(_QWORD *)(a2 + 136);
    sub_1BA69C808(v78, v77, v35 & 1);
    v79 = *(_QWORD *)(a1 + 128);
    v80 = *(_QWORD *)(a1 + 136);
    v81 = *(_BYTE *)(a1 + 144);
    *(_QWORD *)(a1 + 128) = v78;
    *(_QWORD *)(a1 + 136) = v77;
    *(_BYTE *)(a1 + 144) = v76;
    sub_1BA69C828(v79, v80, v81);
  }
  return a1;
}

uint64_t sub_1BB39EEA0(uint64_t a1)
{
  destroy for FormatMediaTiming(a1);
  return a1;
}

uint64_t assignWithTake for FormatMicaBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  if (v4 == 1)
  {
    sub_1BB39EEA0(a1 + 8);
LABEL_4:
    v5 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v5;
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    v6 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v6;
    v7 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v7;
    v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v8;
    return a1;
  }
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v9 = (_OWORD *)(a2 + 64);
  v10 = *(unsigned __int8 *)(a1 + 80);
  if (v10 == 255)
    goto LABEL_8;
  v11 = *(unsigned __int8 *)(a2 + 80);
  if (v11 == 255)
  {
    sub_1BAB10C5C(a1 + 64);
LABEL_8:
    *(_OWORD *)(a1 + 64) = *v9;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *v9;
  *(_BYTE *)(a1 + 80) = v11 & 1;
  sub_1BA69C828(v12, v13, v10 & 1);
LABEL_10:
  v14 = *(unsigned __int8 *)(a1 + 120);
  if (v14 != 255)
  {
    v15 = *(unsigned __int8 *)(a2 + 120);
    if (v15 != 255)
    {
      v17 = *(_QWORD *)(a1 + 88);
      v18 = *(_QWORD *)(a1 + 96);
      v19 = *(_QWORD *)(a1 + 104);
      v20 = *(_QWORD *)(a1 + 112);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_BYTE *)(a1 + 120) = v15 & 1;
      sub_1BA8964E0(v17, v18, v19, v20, v14 & 1);
      goto LABEL_15;
    }
    sub_1BB00420C(a1 + 88);
  }
  v16 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v16;
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
LABEL_15:
  v21 = (_OWORD *)(a2 + 128);
  v22 = *(unsigned __int8 *)(a1 + 144);
  if (v22 != 255)
  {
    v23 = *(unsigned __int8 *)(a2 + 144);
    if (v23 != 255)
    {
      v24 = *(_QWORD *)(a1 + 128);
      v25 = *(_QWORD *)(a1 + 136);
      *(_OWORD *)(a1 + 128) = *v21;
      *(_BYTE *)(a1 + 144) = v23 & 1;
      sub_1BA69C828(v24, v25, v22 & 1);
      return a1;
    }
    sub_1BAB10C5C(a1 + 128);
  }
  *(_OWORD *)(a1 + 128) = *v21;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMicaBackground(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 145))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatMicaBackground(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 144) = 0;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 145) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 145) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMicaBackground()
{
  return &type metadata for FormatMicaBackground;
}

uint64_t sub_1BB39F1C8()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  swift_release();
  if (*(_QWORD *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = *(unsigned __int8 *)(v0 + 96);
    if (v1 != 255)
      sub_1BA69C828(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v1 & 1);
    v2 = *(unsigned __int8 *)(v0 + 136);
    if (v2 != 255)
      sub_1BA8964E0(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v2 & 1);
    v3 = *(unsigned __int8 *)(v0 + 160);
    if (v3 != 255)
      sub_1BA69C828(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), v3 & 1);
  }
  return swift_deallocObject();
}

uint64_t sub_1BB39F274()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB39F2A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BAA4E044(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96));
  sub_1BAA4E044(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 168));
  return swift_deallocObject();
}

uint64_t sub_1BB39F310()
{
  uint64_t v0;

  sub_1BA756FBC(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BB39F334()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB39F360()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB39F3A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB39F3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  result = type metadata accessor for FormatAlphaColor(0, a4, a5, v11);
  v13 = a6 + *(int *)(result + 36);
  *(_QWORD *)v13 = a2;
  *(_BYTE *)(v13 + 8) = a3 & 1;
  return result;
}

uint64_t static FormatAlphaColor.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double *v10;
  char v11;
  double *v12;
  char v13;

  if ((sub_1BB872958() & 1) == 0)
    return 0;
  v9 = *(int *)(type metadata accessor for FormatAlphaColor(0, a3, a4, v8) + 36);
  v10 = (double *)(a1 + v9);
  v11 = *(_BYTE *)(a1 + v9 + 8);
  v12 = (double *)(a2 + v9);
  v13 = *(_BYTE *)(a2 + v9 + 8);
  if ((v11 & 1) != 0)
  {
    if ((v13 & 1) == 0)
      return 0;
  }
  else
  {
    if (*v10 != *v12)
      v13 = 1;
    if ((v13 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t type metadata accessor for FormatAlphaColor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatAlphaColor);
}

uint64_t sub_1BB39F4D4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAlphaColor<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB39F500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FormatAlphaColor.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1BB39F50C(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAlphaColor<A>);
  a1[2] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAlphaColor<A>, a2);
  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAlphaColor<A>, a2);
  a1[3] = result;
  return result;
}

void sub_1BB39F564(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  FormatAlphaColor.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_1BB39F580(uint64_t a1, uint64_t a2)
{
  FormatAlphaColor.encode(to:)(a1, a2);
}

uint64_t sub_1BB39F594()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BB39F608(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = *(_BYTE *)(v10 + 8);
    v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v12 = *(_QWORD *)v10;
    *(_BYTE *)(v12 + 8) = v11;
  }
  return v4;
}

uint64_t sub_1BB39F6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1BB39F724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1BB39F788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1BB39F7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1BB39F850(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  v6 = ((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  v7 = (a2 - v5 + 255) >> (8 * v6);
  if (v6 < 4)
    v8 = v7 + 1;
  else
    v8 = 2;
  if (v8 >= 0x10000)
    v9 = 4;
  else
    v9 = 2;
  if (v8 < 0x100)
    v9 = 1;
  if (v8 >= 2)
    v10 = v9;
  else
    v10 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1BB39F8CC + 4 * byte_1BB90ED40[v10]))();
}

void sub_1BB39F934(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v7 >= a3)
  {
    v12 = 0u;
    if (v7 >= a2)
      goto LABEL_14;
  }
  else
  {
    v9 = (a3 - v7 + 255) >> (8 * v8);
    if (v8 <= 3)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    if (v7 >= a2)
LABEL_14:
      __asm { BR              X11 }
  }
  if (v8 >= 4)
    v13 = ~v7 + a2;
  else
    v13 = (~(_BYTE)v7 + a2);
  bzero(a1, v8);
  if ((_DWORD)v8 == 1)
    *a1 = v13;
  else
    *(_DWORD *)a1 = v13;
  __asm { BR              X10 }
}

void sub_1BB39FA44()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1BB39FA4C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BB39FA54);
}

void sub_1BB39FA70()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1BB39FA78()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_1BB39FA80(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x1BB39FA88);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

uint64_t FormatBlock.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBlock.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBlock.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBlock.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBlock.children.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlock.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatBlock.options.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlock.options.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatBlock.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlock.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *FormatBlock.__allocating_init(identifier:children:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  swift_beginAccess();
  v10[4] = a3;
  swift_beginAccess();
  v10[5] = a4;
  swift_beginAccess();
  v10[6] = a5;
  return v10;
}

_QWORD *FormatBlock.init(identifier:children:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a1;
  v5[3] = a2;
  swift_beginAccess();
  v5[4] = a3;
  swift_beginAccess();
  v5[5] = a4;
  swift_beginAccess();
  v5[6] = a5;
  return v5;
}

uint64_t FormatBlock.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatBlock.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB39FE84(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB39FF1C(&qword_1EF2C2700, (uint64_t)&protocol conformance descriptor for FormatBlock);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB39FEB8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB39FF1C(&qword_1ED3BCBE0, (uint64_t)&protocol conformance descriptor for FormatBlock);
  a1[2] = sub_1BB39FF1C(&qword_1ED3BCBD8, (uint64_t)&protocol conformance descriptor for FormatBlock);
  result = sub_1BB39FF1C(&qword_1EF2C2708, (uint64_t)&protocol conformance descriptor for FormatBlock);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB39FF1C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatBlock();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB39FF58(_QWORD **a1, _QWORD **a2)
{
  return _s8NewsFeed11FormatBlockC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BB39FF64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB39FFB0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB39FFFC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatBlock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatBlock.__allocating_init(identifier:children:options:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1BB3A005C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v11 = v2;
    v5 = (char *)(v2 + 40);
    while (1)
    {
      v6 = *((_QWORD *)v5 - 1);
      v7 = *v5;
      v9 = v6;
      v10 = v7;
      sub_1BA8C88B0(v6, v7);
      v8 = objc_msgSend(v4, sel_mainBundle);
      sub_1BB3A0170((uint64_t)&v9);
      if (v1)
        break;
      v5 += 16;

      sub_1BA8C88BC(v6, v7);
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }

    swift_bridgeObjectRelease();
    sub_1BA8C88BC(v6, v7);
  }
}

void sub_1BB3A0170(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB3A01C4()
{
  uint64_t v0;
  char v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BB86D738();
  v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  if (sub_1BAB0CAA0((uint64_t)v3, v0))
    return sub_1BA8C88BC(v0, v1);
  sub_1BA7E415C();
  swift_allocError();
  v5 = v4;
  v6 = (void *)sub_1BB86D738();
  v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

  *(_QWORD *)v5 = v7;
  *(_QWORD *)(v5 + 8) = v0;
  *(_BYTE *)(v5 + 40) = 8;
  return swift_willThrow();
}

uint64_t FeedGroupExplicitSlotBundleArticleQuota.slot.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double FeedGroupExplicitSlotBundleArticleQuota.ratio.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t FeedGroupExplicitSlotBundleArticleQuota.depthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota() + 24);
  return sub_1BB3A0708(v3, a1);
}

uint64_t type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota()
{
  uint64_t result;

  result = qword_1ED3A2938;
  if (!qword_1ED3A2938)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB3A0708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB3A074C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BB3A074C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A2500)
  {
    sub_1BB86D078();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A2500);
  }
}

uint64_t sub_1BB3A07A4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F69746172;
  if (*v0 != 1)
    v1 = 0x6172546874706564;
  if (*v0)
    return v1;
  else
    return 1953459315;
}

uint64_t sub_1BB3A0800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB3A17A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB3A0824()
{
  sub_1BB3A0F70();
  return sub_1BB874710();
}

uint64_t sub_1BB3A084C()
{
  sub_1BB3A0F70();
  return sub_1BB87471C();
}

uint64_t FeedGroupExplicitSlotBundleArticleQuota.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BB3A0FB4(0, &qword_1EF2C2710, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3A0F70();
  sub_1BB8746C8();
  v9[15] = 0;
  sub_1BB8741A0();
  if (!v1)
  {
    v9[14] = 1;
    sub_1BB874194();
    type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota();
    v9[13] = 2;
    sub_1BB86D078();
    sub_1BB3A1960(&qword_1ED3A24E8, MEMORY[0x1E0DDA858]);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FeedGroupExplicitSlotBundleArticleQuota.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;

  v18 = a2;
  sub_1BB3A074C();
  MEMORY[0x1E0C80A78](v3);
  v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB3A0FB4(0, &qword_1EF2C2720, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v20 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota();
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB3A0F70();
  v12 = v21;
  sub_1BB87468C();
  if (v12)
  {
    v17 = (uint64_t)a1;
  }
  else
  {
    v13 = a1;
    v14 = (uint64_t)v19;
    v24 = 0;
    *v11 = sub_1BB8740C8();
    v23 = 1;
    sub_1BB8740B0();
    v11[1] = v15;
    sub_1BB86D078();
    v22 = 2;
    sub_1BB3A1960(&qword_1ED3A24F8, MEMORY[0x1E0DDA868]);
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
    sub_1BA5193C4(v14, (uint64_t)v11 + *(int *)(v9 + 24), (uint64_t (*)(_QWORD))sub_1BB3A074C);
    sub_1BA5193C4((uint64_t)v11, v18, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
    v17 = (uint64_t)v13;
  }
  return __swift_destroy_boxed_opaque_existential_1(v17);
}

uint64_t sub_1BB3A0C44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupExplicitSlotBundleArticleQuota.init(from:)(a1, a2);
}

uint64_t sub_1BB3A0C58(_QWORD *a1)
{
  return FeedGroupExplicitSlotBundleArticleQuota.encode(to:)(a1);
}

BOOL _s8NewsFeed0B35GroupExplicitSlotBundleArticleQuotaV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v4 = sub_1BB86D078();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB3A1900();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB3A074C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v28 - v19;
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  v29 = v7;
  v21 = type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota();
  sub_1BB3A0708(a1 + *(int *)(v21 + 24), (uint64_t)v20);
  sub_1BB3A0708(a2 + *(int *)(v21 + 24), (uint64_t)v17);
  v22 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1BB3A0708((uint64_t)v20, (uint64_t)v11);
  sub_1BB3A0708((uint64_t)v17, v22);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v11, 1, v4) == 1)
  {
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    if (v23(v22, 1, v4) == 1)
    {
      sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB3A074C);
      return 1;
    }
    goto LABEL_8;
  }
  sub_1BB3A0708((uint64_t)v11, (uint64_t)v14);
  if (v23(v22, 1, v4) == 1)
  {
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BB3A074C);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_8:
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB3A1900);
    return 0;
  }
  v24 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v22, v4);
  sub_1BB3A1960(&qword_1ED3A24F0, MEMORY[0x1E0DDA860]);
  v25 = sub_1BB872958();
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v24, v4);
  sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  v26(v14, v4);
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB3A074C);
  return (v25 & 1) != 0;
}

unint64_t sub_1BB3A0F70()
{
  unint64_t result;

  result = qword_1EF2C2718;
  if (!qword_1EF2C2718)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90F11C, &type metadata for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2718);
  }
  return result;
}

void sub_1BB3A0FB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB3A0F70();
    v7 = a3(a1, &type metadata for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedGroupExplicitSlotBundleArticleQuota(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1BB86D078();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_1BB3A074C();
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for FeedGroupExplicitSlotBundleArticleQuota(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_1BB86D078();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_OWORD *initializeWithCopy for FeedGroupExplicitSlotBundleArticleQuota(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86D078();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BB3A074C();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithCopy for FeedGroupExplicitSlotBundleArticleQuota(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86D078();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_1BB3A074C();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

_OWORD *initializeWithTake for FeedGroupExplicitSlotBundleArticleQuota(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86D078();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BB3A074C();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for FeedGroupExplicitSlotBundleArticleQuota(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86D078();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_1BB3A074C();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupExplicitSlotBundleArticleQuota()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3A14F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  sub_1BB3A074C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for FeedGroupExplicitSlotBundleArticleQuota()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB3A1540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  sub_1BB3A074C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

void sub_1BB3A1584()
{
  unint64_t v0;

  sub_1BB3A074C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB3A1648 + 4 * byte_1BB90EF95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB3A167C + 4 * asc_1BB90EF90[v4]))();
}

uint64_t sub_1BB3A167C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3A1684(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB3A168CLL);
  return result;
}

uint64_t sub_1BB3A1698(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB3A16A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB3A16A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB3A16AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys()
{
  return &type metadata for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys;
}

unint64_t sub_1BB3A16CC()
{
  unint64_t result;

  result = qword_1EF2C2728;
  if (!qword_1EF2C2728)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90F0F4, &type metadata for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2728);
  }
  return result;
}

unint64_t sub_1BB3A1714()
{
  unint64_t result;

  result = qword_1EF2C2730;
  if (!qword_1EF2C2730)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90F064, &type metadata for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C2730);
  }
  return result;
}

unint64_t sub_1BB3A175C()
{
  unint64_t result;

  result = qword_1EF2C2738[0];
  if (!qword_1EF2C2738[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90F08C, &type metadata for FeedGroupExplicitSlotBundleArticleQuota.CodingKeys);
    atomic_store(result, qword_1EF2C2738);
  }
  return result;
}

uint64_t sub_1BB3A17A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1953459315 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746172 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6172546874706564 && a2 == 0xEE006D726F66736ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1BB3A1900()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2A96C8)
  {
    sub_1BB3A074C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2A96C8);
  }
}

uint64_t sub_1BB3A1960(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BB86D078();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB3A19A0()
{
  return swift_retain();
}

uint64_t FeedCursorReference.serviceContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v15;

  v3 = *v1;
  v4 = v1[2];
  if ((v4 & 0x4000000000000000) != 0)
  {
    v12 = v3 + 80;
    v11 = *(_QWORD *)(v3 + 80);
    v10 = *(_QWORD *)(v12 + 8);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    *(_QWORD *)(a1 + 24) = swift_getAssociatedTypeWitness();
    *(_QWORD *)(a1 + 32) = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
    swift_retain();
    FeedCursorContainer.serviceContext.getter(v4 & 0xBFFFFFFFFFFFFFFFLL, v11, v10, (uint64_t)boxed_opaque_existential_0);
    return sub_1BA4B0900();
  }
  v5 = qword_1ED3C5AA8;
  swift_retain();
  if (v5 != -1)
    swift_once();
  v6 = *(_QWORD *)(v3 + 80);
  v7 = *(_QWORD *)(v3 + 88);
  v8 = swift_retain();
  v9 = FeedCursorStoreManager.get<A>(token:)(v8, v6, v7);
  sub_1BA4B0900();
  if ((~v9 & 0xF000000000000007) == 0)
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return sub_1BA4B0900();
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  *(_QWORD *)(a1 + 24) = swift_getAssociatedTypeWitness();
  *(_QWORD *)(a1 + 32) = swift_getAssociatedConformanceWitness();
  v15 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
  FeedCursorContainer.serviceContext.getter(v9, v6, v7, (uint64_t)v15);
  sub_1BA4B0900();
  return sub_1BA62ECD4(v9);
}

uint64_t FeedCursorReference.identifier.getter()
{
  uint64_t v0;

  v0 = sub_1BB3A1D68();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FeedCursorReference.__allocating_init(cursorContainer:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FeedCursorReference.init(cursorContainer:)(a1);
  return v2;
}

uint64_t FeedCursorReference.deinit()
{
  uint64_t v0;

  sub_1BA4B0900();
  return v0;
}

uint64_t sub_1BB3A1D24()
{
  uint64_t v0;

  v0 = sub_1BB3A1D68();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BB3A1D5C(uint64_t *a1, uint64_t *a2)
{
  return static FeedCursorReference.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BB3A1D68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if ((v1 & 0x4000000000000000) != 0)
    return sub_1BA630F34(v1 & 0xBFFFFFFFFFFFFFFFLL);
  else
    return *(_QWORD *)(v1 + 16);
}

uint64_t method lookup function for FeedCursorReference()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedCursorReference.__allocating_init(cursorContainer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

_QWORD *sub_1BB3A1DB0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  sub_1BB3A19A0();
  *a1 = v3;
  return a1;
}

uint64_t sub_1BB3A1DE0()
{
  return sub_1BA4B0900();
}

_QWORD *sub_1BB3A1DE8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  sub_1BB3A19A0();
  *a1 = v3;
  sub_1BA4B0900();
  return a1;
}

_QWORD *sub_1BB3A1E20(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1BA4B0900();
  return a1;
}

uint64_t sub_1BB3A1E50(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 63);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) & 1 | (2 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x3F;
  if (v3 >= 0x3E)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1BB3A1EA8(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x3E)
  {
    *(_QWORD *)result = a2 - 63;
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x1F | (32 * (-a2 & 0x3F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0x7000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BB3A1EFC(_QWORD *a1)
{
  return (*a1 >> 62) & 1;
}

_QWORD *sub_1BB3A1F08(_QWORD *result)
{
  *result &= ~0x4000000000000000uLL;
  return result;
}

unint64_t *sub_1BB3A1F18(unint64_t *result, char a2)
{
  *result = *result & 0x8FFFFFFFFFFFFFF8 | ((unint64_t)(a2 & 1) << 62);
  return result;
}

uint64_t type metadata accessor for FeedCursorReference.Reference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedCursorReference.Reference);
}

void FormatVideoPlayerNodeBinding.bind(binder:context:)()
{
  sub_1BB3A2950();
}

uint64_t sub_1BB3A1F5C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8[3];

  if (*(unsigned __int8 *)(v1 + 24) >= 2u)
  {
    v4 = *(_QWORD *)(v1 + 8);
    v3 = *(_QWORD *)(v1 + 16);
    v5 = *(_QWORD *)v1;
    v8[0] = v5;
    v8[1] = v4;
    v8[2] = v3;
    v7 = 6;
    sub_1BA896AAC(v5, v4, v3, 2);
    result = sub_1BB6B84D4(v8, &v7);
    if (!v2)
    {
      v6 = result;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1BB3A2020(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;

  v66 = a1;
  v59 = (char *)a2;
  v60 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v60);
  v58 = (uint64_t *)((char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v56 - v5;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v57 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v56 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v56 - v16;
  v18 = sub_1BB86C67C();
  v61 = *(_QWORD *)(v18 - 8);
  v62 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v56 - v22;
  v24 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)v2;
  if (*(_BYTE *)(v2 + 24))
  {
    if (*(_BYTE *)(v2 + 24) == 1)
    {
      v28 = v63;
      sub_1BB49C2A0(v66, v27, (uint64_t)v14);
      if (!v28)
      {
        v29 = v61;
        v30 = v62;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v14, 1, v62) == 1)
        {
          sub_1BA502AD0((uint64_t)v14, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          sub_1BA689E84();
          swift_allocError();
          *v31 = 0xD00000000000002BLL;
          v31[1] = 0x80000001BB98A710;
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
        }
        else
        {
          v54 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
          v54(v20, v14, v30);
          v54(v59, v20, v30);
        }
      }
    }
    else
    {
      v41 = *(_QWORD *)(v2 + 8);
      v42 = *(_QWORD *)(v2 + 16);
      v43 = v66;
      v44 = *(_QWORD *)v2;
      FormatOptionCollection.subscript.getter(v27, v41, (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_1BA502AD0((uint64_t)v6, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
        v45 = (uint64_t)v58;
        *v58 = v44;
        *(_QWORD *)(v45 + 8) = v41;
        swift_storeEnumTagMultiPayload();
        v46 = *(_BYTE *)(v43 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
        sub_1BA689E84();
        v48 = (void *)swift_allocError();
        if ((v46 & 1) != 0)
        {
          sub_1BAB53980(v45, v47);
          swift_bridgeObjectRetain();
          v49 = v56;
          sub_1BB86C634();
          v51 = v61;
          v50 = v62;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v49, 1, v62) == 1)
          {
            __break(1u);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v59, v49, v50);
            sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);

          }
        }
        else
        {
          sub_1BAB53980(v45, v47);
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
        }
      }
      else
      {
        v52 = v57;
        sub_1BA8569CC((uint64_t)v6, v57);
        swift_retain();
        v53 = v63;
        sub_1BA711ECC();
        swift_release();
        if (!v53)
        {
          sub_1BA7E0DB4(v64, v44, v41, v42, v43, (uint64_t)v59);
          swift_release();
        }
        sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      }
    }
  }
  else
  {
    v32 = *(_QWORD *)v2;
    v33 = v63;
    sub_1BA70DDB0(*(_QWORD *)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v26);
    if (!v33)
    {
      LOBYTE(v64) = v32;
      sub_1BB2CB030();
      v34 = v61;
      v35 = v62;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v17, 1, v62) == 1)
      {
        sub_1BA502AD0((uint64_t)v17, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        sub_1BA689E84();
        swift_allocError();
        v37 = v36;
        v64 = 0;
        v65 = 0xE000000000000000;
        sub_1BB873CB4();
        sub_1BB872AFC("L for bound group headline.");
        swift_bridgeObjectRetain();
        sub_1BB872AFC(v38);
        swift_bridgeObjectRelease();
        sub_1BB872AFC(v39);
        v40 = v65;
        *v37 = v64;
        v37[1] = v40;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_1BA4A2E80((uint64_t)v26, type metadata accessor for FeedHeadline);
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v26, type metadata accessor for FeedHeadline);
        v55 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
        v55(v23, v17, v35);
        v55(v59, v23, v35);
      }
    }
  }
}

uint64_t sub_1BB3A2674(_QWORD *a1)
{
  return FormatVideoPlayerNodeBinding.encode(to:)(a1);
}

uint64_t sub_1BB3A268C(uint64_t a1)
{
  return sub_1BB3A1F5C(a1);
}

void sub_1BB3A26A0()
{
  sub_1BB3A2950();
}

BOOL _s8NewsFeed28FormatVideoPlayerNodeBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(unsigned __int8 *)(a2 + 24);
  if (!*(_BYTE *)(a1 + 24))
  {
    if (!*(_BYTE *)(a2 + 24))
    {
      sub_1BA896AE4(*(_QWORD *)a1, v3, v4, 0);
      sub_1BA896AE4(v6, v7, v8, 0);
      return v6 == v2;
    }
    goto LABEL_19;
  }
  if (v5 == 1)
  {
    if (v9 == 1)
    {
      sub_1BA896AE4(*(_QWORD *)a1, v3, v4, 1);
      sub_1BA896AE4(v6, v7, v8, 1);
      if ((v2 & 0x80) != 0)
      {
        if ((char)v6 < 0 && ((v6 ^ v2) & 1) == 0)
          return 1;
      }
      else if (((char)v6 & 0x80000000) == 0 && v6 == v2)
      {
        return 1;
      }
      return 0;
    }
    goto LABEL_19;
  }
  if (v9 != 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_19:
    sub_1BA896AAC(v6, v7, v8, v9);
    sub_1BA896AE4(v2, v3, v4, v5);
    v13 = v6;
    v14 = v7;
    v15 = v8;
    v16 = v9;
LABEL_20:
    sub_1BA896AE4(v13, v14, v15, v16);
    return 0;
  }
  v11 = v2 == v6 && v3 == v7;
  if (!v11 && (sub_1BB874398() & 1) == 0)
  {
    sub_1BA896AAC(v6, v7, v8, 2);
    sub_1BA896AAC(v2, v3, v4, 2);
    sub_1BA896AE4(v2, v3, v4, 2);
    v13 = v6;
    v14 = v7;
    v15 = v8;
    v16 = 2;
    goto LABEL_20;
  }
  sub_1BA896AAC(v6, v7, v8, 2);
  sub_1BA896AAC(v2, v3, v4, 2);
  sub_1BA896AAC(v6, v7, v8, 2);
  sub_1BA896AAC(v2, v3, v4, 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_1BA8869D0(v4, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA896AE4(v2, v3, v4, 2);
  sub_1BA896AE4(v6, v7, v8, 2);
  sub_1BA896AE4(v6, v7, v8, 2);
  sub_1BA896AE4(v2, v3, v4, 2);
  return (v12 & 1) != 0;
}

void sub_1BB3A2950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];
  char v12;

  v2 = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11[-1] - v4;
  if (*(unsigned __int8 *)(v0 + 24) >= 2u)
  {
    v7 = *(_QWORD *)(v0 + 8);
    v6 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)v0;
    v11[0] = *(_QWORD *)v0;
    v11[1] = v7;
    v11[2] = v6;
    v12 = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1BB6B84D4(v11, &v12);
    if (!v2)
    {
      sub_1BB3757A0(v8, v7, v9, 1, (uint64_t)v5);
      sub_1BA502AD0((uint64_t)v5, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1BB3A2A6C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB3A2A90();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB3A2A90()
{
  unint64_t result;

  result = qword_1EF2C27C0;
  if (!qword_1EF2C27C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerNodeBinding, &type metadata for FormatVideoPlayerNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C27C0);
  }
  return result;
}

unint64_t sub_1BB3A2AD4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4F0C8C();
  a1[2] = sub_1BAEE8BE0();
  result = sub_1BB3A2B08();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB3A2B08()
{
  unint64_t result;

  result = qword_1EF2C27C8;
  if (!qword_1EF2C27C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerNodeBinding, &type metadata for FormatVideoPlayerNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2C27C8);
  }
  return result;
}

uint64_t destroy for FormatVideoPlayerNodeBinding(uint64_t a1)
{
  return sub_1BA896AE4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatVideoPlayerNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA896AAC(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatVideoPlayerNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA896AAC(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BA896AE4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatVideoPlayerNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BA896AE4(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerNodeBinding()
{
  return &type metadata for FormatVideoPlayerNodeBinding;
}

uint64_t PublisherLogoProcessor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PublisherLogoProcessor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t PublisherLogoProcessor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PublisherLogoProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s8NewsFeed22PublisherLogoProcessorC7processySo7UIImageCSg5TeaUI25ProcessedImageRequestType_pF_0(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[40];

  sub_1BA4C010C(a1, (uint64_t)v16);
  sub_1BA54B1AC();
  type metadata accessor for PublisherLogoProcessorRequest(0);
  if (!swift_dynamicCast())
    return 0;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v15 + OBJC_IVAR____TtC8NewsFeed29PublisherLogoProcessorRequest_assetHandle), *(_QWORD *)(v15 + OBJC_IVAR____TtC8NewsFeed29PublisherLogoProcessorRequest_assetHandle + 24));
  result = sub_1BB86FA78();
  if (v2)
  {
    v3 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
    v4 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v3, sel_initWithContentsOfFile_, v4);

    if (v5)
    {
      if (*(_BYTE *)(v15 + 64) == 1 && (*(_BYTE *)(v15 + 65) & 1) == 0)
      {
        v6 = objc_msgSend(v5, sel_imageWithRenderingMode_, 2);

        v7 = (void *)objc_opt_self();
        v8 = v6;
        v9 = objc_msgSend(v7, sel_whiteColor);
        v5 = (id)sub_1BB873864();

      }
      v11 = *(double *)(v15 + 40);
      v10 = *(double *)(v15 + 48);
      objc_msgSend(v5, sel_size);
      if (v10 >= v12 && (objc_msgSend(v5, sel_size), v11 >= v13))
      {
        swift_release();
        return (uint64_t)v5;
      }
      else
      {
        v14 = sub_1BB873828();

        swift_release();
      }
      return v14;
    }
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

id _s8NewsFeed22PublisherLogoProcessorC7process_14imageFromCacheSo7UIImageC5TeaUI25ProcessedImageRequestType_p_AGtF_0(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v5;
  _BYTE v6[40];

  sub_1BA4C010C(a1, (uint64_t)v6);
  sub_1BA54B1AC();
  type metadata accessor for PublisherLogoProcessorRequest(0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    if (*(_BYTE *)(v5 + 64) == 1)
    {
      v2 = objc_msgSend(a2, sel_imageWithRenderingMode_, 2);
      swift_release();
      return v2;
    }
    swift_release();
  }
  return a2;
}

uint64_t method lookup function for PublisherLogoProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PublisherLogoProcessor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of FormatLayoutViewRouterType.route(to:sourceView:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1BB3A2F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17[3];
  uint64_t v18;
  uint64_t v19;

  v6 = v4;
  v11 = *a4;
  v10 = a4[1];
  sub_1BA57B488(v6 + 40, (uint64_t)&v15, &qword_1ED3CB978, (void (*)(uint64_t))sub_1BB3A4D40);
  if (v16)
  {
    sub_1BA4CECCC(&v15, (uint64_t)v17);
    v12 = v18;
    v13 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(a1, a2, a3, v12, v13);
    if (v5)
    {
      *(_QWORD *)&v15 = v11;
      *((_QWORD *)&v15 + 1) = v10;
      sub_1BB3A30D0(a1, a2, (uint64_t *)&v15);

    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    sub_1BA502AD0((uint64_t)&v15, &qword_1ED3CB978, (void (*)(uint64_t))sub_1BB3A4D40);
    v17[0] = v11;
    v17[1] = v10;
    return sub_1BB3A30D0(a1, a2, v17);
  }
}

uint64_t sub_1BB3A30D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - v10;
  v12 = type metadata accessor for FormatLayoutViewRoute();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a3;
  v15 = a3[1];
  sub_1BA4C2DD8(a1, (uint64_t)v14, v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BAB4832C();
    v11 = &v14[*(int *)(v18 + 48)];
    sub_1BA5193C4((uint64_t)v14, (uint64_t)v8, type metadata accessor for FeedItem);
    v21 = v16;
    v22 = v15;
    sub_1BB3A3280((uint64_t)v8, a2, &v21);
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedItem);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v14, (uint64_t)v11, type metadata accessor for FeedItem);
    v21 = v16;
    v22 = v15;
    sub_1BB3A3280((uint64_t)v11, a2, &v21);
  }
  return sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FeedItem);
}

void sub_1BB3A3280(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(_QWORD);
  char *v72;
  _QWORD v73[11];
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;

  v100 = a2;
  v104 = a3;
  v105 = a1;
  v74 = type metadata accessor for WebEmbedDataVisualization();
  v73[9] = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v73[6] = (char *)v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3CB5E0, v4);
  MEMORY[0x1E0C80A78](v5);
  v73[10] = (char *)v73 - v6;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1E0C80A78](v7);
  v82 = (char *)v73 - v8;
  v98 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v98);
  v99 = (char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  MEMORY[0x1E0C80A78](v10);
  v96 = (char *)v73 - v11;
  v12 = type metadata accessor for FormatCustomItem.Action();
  v92 = *(_QWORD *)(v12 - 8);
  v93 = v12;
  MEMORY[0x1E0C80A78](v12);
  v80 = (char *)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v81 = (char *)v73 - v15;
  v87 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v87);
  v97 = (char *)v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB86C67C();
  v18 = *(_QWORD *)(v17 - 8);
  v102 = v17;
  v103 = v18;
  MEMORY[0x1E0C80A78](v17);
  v73[3] = (char *)v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v73[4] = (char *)v73 - v21;
  MEMORY[0x1E0C80A78](v22);
  v73[1] = (char *)v73 - v23;
  MEMORY[0x1E0C80A78](v24);
  v78 = (char *)v73 - v25;
  MEMORY[0x1E0C80A78](v26);
  v79 = (char *)v73 - v27;
  MEMORY[0x1E0C80A78](v28);
  v95 = (char *)v73 - v29;
  MEMORY[0x1E0C80A78](v30);
  v94 = (char *)v73 - v31;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, v32);
  MEMORY[0x1E0C80A78](v33);
  v89 = (char *)v73 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v91 = (char *)v73 - v36;
  MEMORY[0x1E0C80A78](v37);
  v88 = (char *)v73 - v38;
  MEMORY[0x1E0C80A78](v39);
  v90 = (char *)v73 - v40;
  MEMORY[0x1E0C80A78](v41);
  v73[2] = (char *)v73 - v42;
  MEMORY[0x1E0C80A78](v43);
  v73[5] = (char *)v73 - v44;
  MEMORY[0x1E0C80A78](v45);
  v73[0] = (char *)v73 - v46;
  MEMORY[0x1E0C80A78](v47);
  v73[7] = (char *)v73 - v48;
  MEMORY[0x1E0C80A78](v49);
  v73[8] = (char *)v73 - v50;
  MEMORY[0x1E0C80A78](v51);
  v76 = (char *)v73 - v52;
  MEMORY[0x1E0C80A78](v53);
  MEMORY[0x1E0C80A78](v54);
  v77 = (char *)v73 - v55;
  MEMORY[0x1E0C80A78](v56);
  v84 = (char *)v73 - v57;
  MEMORY[0x1E0C80A78](v58);
  v86 = (char *)v73 - v59;
  MEMORY[0x1E0C80A78](v60);
  v85 = (char *)v73 - v61;
  MEMORY[0x1E0C80A78](v62);
  v83 = (char *)v73 - v63;
  MEMORY[0x1E0C80A78](v64);
  MEMORY[0x1E0C80A78](v65);
  v66 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v66);
  v75 = (char *)v73 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v68);
  v69 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v69);
  v101 = *v104;
  v104 = (uint64_t *)v104[1];
  sub_1BA4C2DD8(v105, (uint64_t)v73 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0), v71);
  v72 = (char *)&loc_1BB3A38B4 + dword_1BB3A496C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB3A38C4()
{
  uint64_t v0;

  return sub_1BA4A2E80(v0, type metadata accessor for FeedItem);
}

void sub_1BB3A38F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v1, v2);
  JUMPOUT(0x1BB3A38D4);
}

void sub_1BB3A3914()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v1, v2);
  JUMPOUT(0x1BB3A38D4);
}

void sub_1BB3A3948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1BA5193C4(v4, v2, type metadata accessor for FeedHeadline);
  v6 = objc_msgSend(*(id *)(v2 + 40), sel_identifier);
  if (!v6)
  {
    sub_1BB8729A0();
    v6 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForArticleID_, v6);

  v8 = *(_QWORD *)(v0 + 320);
  if (v7)
  {
    sub_1BB86C5EC();

    v9 = 0;
  }
  else
  {
    v9 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 328) + 56))(v3, v9, 1, v8);
  sub_1BA7F0AD4(v3, v1);
  v10 = *(_QWORD *)(v5 - 72);
  sub_1BB3A49D0(v1, *(_QWORD *)(v0 + 296), *(void **)(v0 + 304), *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 336));
  sub_1BA502AD0(v1, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1BA4A2E80(v2, type metadata accessor for FeedHeadline);
  *(_QWORD *)(v5 - 72) = v10;
  JUMPOUT(0x1BB3A38D4);
}

void sub_1BB3A4520()
{
  swift_release();
  JUMPOUT(0x1BB3A38D0);
}

void sub_1BB3A4538()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)(*(_QWORD *)(v1 + 16) + 56);
  if (v4)
  {
    swift_retain();
    if ((objc_msgSend((id)swift_unknownObjectRetain(), sel_isRouteable) & 1) != 0)
    {
      v5 = objc_msgSend(v4, sel_identifier);
      if (!v5)
      {
        sub_1BB8729A0();
        v5 = (id)sub_1BB872970();
        swift_bridgeObjectRelease();
      }
      v6 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_, v5);

      v7 = v0[1];
      sub_1BB86C5EC();

      v8 = v7;
      v9 = v0[41];
      v10 = *v0;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(*v0, v8, v2);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v10, 0, 1, v2);
      v11 = *(_QWORD *)(v3 - 72);
      sub_1BB3A49D0(v10, v0[37], (void *)v0[38], v0[39], v0[42]);
      *(_QWORD *)(v3 - 72) = v11;
      swift_unknownObjectRelease();
      swift_release();
      sub_1BA502AD0(v10, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v2);
      sub_1BA4A2E80(v0[36], (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
LABEL_9:
      swift_release();
      JUMPOUT(0x1BB3A38D4);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    swift_retain();
  }
  sub_1BA4A2E80(v0[36], (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  swift_release();
  goto LABEL_9;
}

uint64_t sub_1BB3A49D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  char v35;

  v27 = a2;
  v28 = a5;
  v24 = a4;
  v26 = a3;
  v6 = sub_1BB8709F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v25 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v10);
  v29 = (uint64_t)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - v13;
  v15 = sub_1BB86C67C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA57B488(a1, (uint64_t)v14, (unint64_t *)&qword_1ED3D2E70, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    return sub_1BA502AD0((uint64_t)v14, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v25, *MEMORY[0x1E0DB9EF8], v6);
  v20 = *(_QWORD *)(v27 + 32);
  v31 = sub_1BB86DC0C();
  v32 = sub_1BB3A4D94();
  v30 = v20;
  v33 = 0u;
  v34 = 0u;
  v35 = 1;
  sub_1BB87069C();
  swift_allocObject();
  swift_retain();
  v21 = v26;
  sub_1BB870684();
  if (qword_1ED3BA8B8 != -1)
    swift_once();
  v22 = v29;
  if (v28)
    sub_1BA7EDAF0((uint64_t)v18, v24, v28, v29);
  else
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v29, v18, v15);
  swift_getObjectType();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
  swift_retain();
  sub_1BB86FF4C();
  swift_release_n();
  sub_1BA502AD0(v22, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_1BB3A4CFC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_1BA502AD0(v0 + 40, &qword_1ED3CB978, (void (*)(uint64_t))sub_1BB3A4D40);
  return swift_deallocClassInstance();
}

unint64_t sub_1BB3A4D40()
{
  unint64_t result;

  result = qword_1ED3CB970;
  if (!qword_1ED3CB970)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3CB970);
  }
  return result;
}

unint64_t sub_1BB3A4D94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B0750;
  if (!qword_1ED3B0750)
  {
    v1 = sub_1BB86DC0C();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for Tracker, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B0750);
  }
  return result;
}

uint64_t sub_1BB3A4DDC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v5;
  uint64_t v6;

  v1 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = *(void **)(v0 + 16);
  if (*(_BYTE *)(v0 + 32) == 1)
  {
    sub_1BB3A4F60();
    swift_allocObject();
    v3 = v2;
    return sub_1BB86E9C8();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 24);
    sub_1BA69D44C((uint64_t)v2, v5);
    sub_1BB8729DC();
    sub_1BAA30E30();
    sub_1BB8729C4();
    sub_1BB3A4F60();
    swift_allocObject();
    v6 = sub_1BB86E9E0();
    sub_1BB185614(v2, v5, 0);
    return v6;
  }
}

uint64_t sub_1BB3A4EE8()
{
  uint64_t v0;

  sub_1BB185614(*(id *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatCodeJSONLoader()
{
  return objc_opt_self();
}

uint64_t sub_1BB3A4F30()
{
  return 1313821514;
}

uint64_t sub_1BB3A4F40()
{
  return sub_1BB3A4DDC();
}

void sub_1BB3A4F60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C2870)
  {
    sub_1BA76D834();
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C2870);
  }
}

void sub_1BB3A5060()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  objc_super v12;

  v1 = v0;
  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    v5 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_textView];
    v6 = objc_msgSend((id)objc_opt_self(), sel_monospacedSystemFontOfSize_weight_, 12.0, *MEMORY[0x1E0DC1440]);
    objc_msgSend(v5, sel_setFont_, v6);

    v7 = objc_msgSend(v1, sel_view);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_addSubview_, v5);

      MEMORY[0x1E0C80A78](v9);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1BB86EC14();
      sub_1BA657D64();
      v10 = (void *)sub_1BB87345C();
      sub_1BB86E98C();
      swift_release();

      v11 = (void *)sub_1BB87345C();
      sub_1BB86E9B0();
      swift_release();
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BB3A5294(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_textView);
  if (*(_QWORD *)(a1 + 8))
    v3 = (void *)sub_1BB872970();
  else
    v3 = 0;
  objc_msgSend(v2, sel_setText_, v3);

}

void sub_1BB3A5300(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_textView);
  sub_1BB872AFC((_QWORD *)0xE000000000000000);
  sub_1BA8EBDF8();
  sub_1BB873E34();
  v3 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v3);

}

uint64_t type metadata accessor for DebugFormatCodeDisplayViewController()
{
  return objc_opt_self();
}

void sub_1BB3A5664()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BB8856E0;
  v2 = (void *)sub_1BB872970();
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v2);

  if (v3)
  {
    v4 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v5 = v0;
    v6 = objc_msgSend(v4, sel_initWithImage_style_target_action_, v3, 0, v5, sel_doDismiss);

    *(_QWORD *)(v1 + 32) = v6;
    sub_1BB872DCC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BB3A5788()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_loader);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

void sub_1BB3A57E8()
{
  sub_1BB3A5664();
}

uint64_t sub_1BB3A5808()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_loader);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

void sub_1BB3A5884()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  char *v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  char *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  void *v55;
  uint64_t *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  objc_class *v67;
  uint64_t *v68;
  char *v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  objc_super v76;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1BB8716B0();
  v70 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v69 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB8716BC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v68 = (uint64_t *)((char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76.receiver = v0;
  v76.super_class = ObjectType;
  objc_msgSendSuper2(&v76, sel_viewDidLoad, v7);
  v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = v9;
  v64 = v6;
  v65 = v5;
  v67 = ObjectType;
  v11 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  v12 = objc_msgSend(v1, sel_navigationItem);
  v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 24];
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 32];
  __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem], v14);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v13 + 8) + 40))(&v74, v14);
  v16 = v74;
  v15 = v75;
  v72 = v74;
  v73 = v75;
  v17 = FeedItem.Kind.description.getter();
  v19 = v18;
  sub_1BA6E0CBC(v16, v15);
  swift_bridgeObjectRetain();
  v20 = sub_1BA689E44(v17, v19);
  v22 = v21;
  swift_bridgeObjectRelease();
  if (v22)
  {
    v72 = v20;
    v73 = v22;
    sub_1BA7114A0();
    v23 = sub_1BB873ABC();
    v25 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v26 = sub_1BA9C0430(1uLL, v17, v19);
    v28 = v27;
    v30 = v29;
    v32 = v31;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCE334C](v26, v28, v30, v32);
    swift_bridgeObjectRelease();
    v72 = v23;
    v73 = v25;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v66 = v3;
  v34 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setTitle_, v34);

  v35 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v35, sel_setLeftItemsSupplementBackButton_, 1);

  v36 = objc_msgSend(v1, sel_navigationItem);
  sub_1BA65FBAC(0, (unint64_t *)&qword_1ED3BA020);
  v37 = swift_allocObject();
  v71 = xmmword_1BB8856E0;
  *(_OWORD *)(v37 + 16) = xmmword_1BB8856E0;
  v38 = (void *)sub_1BB872970();
  v39 = (void *)objc_opt_self();
  v40 = objc_msgSend(v39, sel_systemImageNamed_, v38);

  if (!v40)
    goto LABEL_9;
  v41 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v42 = v1;
  v43 = objc_msgSend(v41, sel_initWithImage_style_target_action_, v40, 0, v42, sel_doTapToRadar);

  *(_QWORD *)(v37 + 32) = v43;
  v74 = v37;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v44 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_setLeftBarButtonItems_, v44);

  v45 = objc_msgSend(v42, (SEL)&selRef_accentColor + 2);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v71;
  v47 = (void *)sub_1BB872970();
  v48 = objc_msgSend(v39, sel_systemImageNamed_, v47);

  if (!v48)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v49 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v50 = v42;
  v51 = objc_msgSend(v49, sel_initWithImage_style_target_action_, v48, 2, v50, sel_doDismiss);

  *(_QWORD *)(v46 + 32) = v51;
  v74 = v46;
  sub_1BB872DCC();
  v52 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v45, sel_setRightBarButtonItems_, v52);

  v53 = objc_msgSend(v50, sel_view);
  if (v53)
  {
    v54 = v53;
    v55 = *(void **)&v50[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_tableView];
    objc_msgSend(v53, sel_addSubview_, v55);

    objc_msgSend(v55, sel_setDelegate_, v50);
    objc_msgSend(v55, sel_setDataSource_, v50);
    objc_msgSend(v55, sel_setAlwaysBounceVertical_, 1);
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
    sub_1BB873234();
    type metadata accessor for SubtitleTableViewCell();
    sub_1BB873234();
    sub_1BB86FDCC();
    v56 = v68;
    static CoverView.loading.getter(v68);
    v58 = v69;
    v57 = v70;
    v59 = v66;
    (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v69, *MEMORY[0x1E0DBC810], v66);
    sub_1BB86FDC0();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
    (*(void (**)(uint64_t *, uint64_t))(v64 + 8))(v56, v65);
    sub_1BB3F5C54();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    v60 = (void *)sub_1BB87345C();
    sub_1BB86E98C();
    swift_release();

    v61 = (void *)sub_1BB87345C();
    sub_1BB86E9B0();
    swift_release();

    v62 = (void *)sub_1BB87345C();
    sub_1BB86E9F8();
    swift_release();
    swift_release();

    return;
  }
LABEL_11:
  __break(1u);
}

id sub_1BB3A6020(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(_QWORD, _QWORD, _QWORD);
  void *v53;
  uint64_t v54;
  char *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v80)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v81)(_QWORD, _QWORD, _QWORD);
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  _QWORD v108[3];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v4 = type metadata accessor for DebugInspectionWebEmbed();
  MEMORY[0x1E0C80A78](v4);
  v90 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for DebugInspectionArticleData(0);
  MEMORY[0x1E0C80A78](v89);
  v88 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DebugInspectionHeadline(0);
  MEMORY[0x1E0C80A78](v7);
  v87 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C2920, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v91 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v92 = (char *)&v80 - v12;
  v111 = type metadata accessor for DebugInspectionItem();
  v95 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v106 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v104 = (char *)&v80 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v80 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v80 - v20;
  MEMORY[0x1E0C80A78](v22);
  v84 = (uint64_t)&v80 - v23;
  v24 = a1[1];
  v25 = a1[3];
  v94 = a1[4];
  v100 = a1[5];
  v101 = v24;
  v26 = a1[6];
  v98 = a1[7];
  v99 = v26;
  v27 = a1[8];
  v96 = a1[9];
  v97 = v27;
  v102 = a1[11];
  v103 = v25;
  if (qword_1EF2A7360 != -1)
    swift_once();
  v107 = (id)qword_1EF3D0928;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v83 = v28;
  v29 = swift_allocObject();
  v93 = xmmword_1BB87CE70;
  *(_OWORD *)(v29 + 16) = xmmword_1BB87CE70;
  v86 = a2;
  v30 = (_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem);
  v31 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 24);
  v32 = v30[4];
  __swift_project_boxed_opaque_existential_1(v30, v31);
  v33 = *(_QWORD *)(v32 + 8);
  v34 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8);
  v107 = v107;
  v35 = v34(v31, v33);
  v37 = v36;
  *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
  v82 = sub_1BA6A2D8C();
  *(_QWORD *)(v29 + 64) = v82;
  *(_QWORD *)(v29 + 32) = v35;
  *(_QWORD *)(v29 + 40) = v37;
  v38 = sub_1BB87330C();
  v39 = v107;
  sub_1BB86EF44("Loaded inspections for feedItem %@", 34, 2, &dword_1BA493000, v107, v38, v29);

  swift_bridgeObjectRelease();
  v41 = v30[3];
  v40 = v30[4];
  v85 = v30;
  __swift_project_boxed_opaque_existential_1(v30, v41);
  (*(void (**)(uint64_t))(*(_QWORD *)(v40 + 8) + 8))(v41);
  v107 = v42;
  v43 = v94;
  if (*(_QWORD *)(v94 + 16))
  {
    v44 = v94 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
    v105 = *(_QWORD *)(v95 + 72);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA4C2DD8(v44, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
    sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
    v45 = (char *)&loc_1BB3A645C + 4 * byte_1BB90F4B0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46 = v95;
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v95 + 56);
  v48 = (uint64_t)v91;
  v49 = v111;
  v47(v91, 1, 1, v111);
  v50 = (uint64_t)v92;
  v51 = (uint64_t)v104;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v52 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v46 + 48);
  if (v52(v48, 1, v49) == 1)
  {
    v80 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v47;
    v81 = v52;
    __swift_project_boxed_opaque_existential_1(v85, v85[3]);
    sub_1BB86DEE8();
    v107 = v53;
    if (*(_QWORD *)(v43 + 16))
    {
      v54 = v43 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
      v105 = *(_QWORD *)(v95 + 72);
      swift_bridgeObjectRetain_n();
      sub_1BA4C2DD8(v54, v51, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
      sub_1BA4C2DD8(v51, v106, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
      v55 = (char *)&loc_1BB3A675C + 4 * byte_1BB90F4B8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    swift_bridgeObjectRetain();
    v52 = v81;
    v80(v50, 1, 1, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5C699C(v48, (unint64_t *)&unk_1EF2C2920, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionItem);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5193C4(v48, v50, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
    v47((char *)v50, 0, 1, v49);
  }
  if (v52(v50, 1, v49) == 1)
  {
    sub_1BA5C699C(v50, (unint64_t *)&unk_1EF2C2920, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionItem);
    v56 = (id)qword_1EF3D0928;
    v57 = sub_1BB8732F4();
    v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = v93;
    v59 = v85;
    v61 = v85[3];
    v60 = v85[4];
    __swift_project_boxed_opaque_existential_1(v85, v61);
    v62 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v60 + 8) + 8))(v61);
    v63 = v82;
    *(_QWORD *)(v58 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v58 + 64) = v63;
    *(_QWORD *)(v58 + 32) = v62;
    *(_QWORD *)(v58 + 40) = v64;
    sub_1BB86EF44("Loaded inspections for feedItems but was missing inspection for %@", 66, 2, &dword_1BA493000, v56, v57, v58);

    swift_bridgeObjectRelease();
    sub_1BA65FBAC(0, (unint64_t *)&qword_1EF2B1500);
    v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = v93;
    sub_1BA65FBAC(0, (unint64_t *)&qword_1EF2C2430);
    v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = v93;
    v68 = v59[3];
    v67 = v59[4];
    __swift_project_boxed_opaque_existential_1(v59, v68);
    v69 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v67 + 8) + 8))(v68);
    v71 = v70;
    sub_1BB3A93BC();
    v72 = swift_allocError();
    *(_QWORD *)v73 = v69;
    *(_QWORD *)(v73 + 8) = v71;
    *(_BYTE *)(v73 + 16) = 0;
    *(_QWORD *)(v66 + 32) = v72;
    *(_BYTE *)(v66 + 88) = 1;
    *(_QWORD *)(v65 + 32) = 0x726F727245;
    *(_QWORD *)(v65 + 40) = 0xE500000000000000;
    *(_QWORD *)(v65 + 48) = v66;
    v74 = v86;
    *(_QWORD *)(v86 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections) = v65;
    swift_bridgeObjectRelease();
  }
  else
  {
    v75 = v84;
    sub_1BA5193C4(v50, v84, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
    sub_1BB75F1B0();
    v76 = v109;
    v77 = v110;
    __swift_project_boxed_opaque_existential_1(v108, v109);
    v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 8))(v76, v77);
    sub_1BA4A2E80(v75, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
    v74 = v86;
    *(_QWORD *)(v86 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections) = v78;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
  }
  return objc_msgSend(*(id *)(v74 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_tableView), sel_reloadData);
}

id sub_1BB3A6CC4(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  if (qword_1EF2A7360 != -1)
    swift_once();
  v4 = (id)qword_1EF3D0928;
  v5 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87A390;
  v8 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 24);
  v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem), v8);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 8))(v8);
  v11 = v10;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1BA6A2D8C();
  *(_QWORD *)(v6 + 64) = v13;
  *(_QWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 40) = v11;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v6 + 96) = v12;
  *(_QWORD *)(v6 + 104) = v13;
  *(_QWORD *)(v6 + 72) = 0;
  *(_QWORD *)(v6 + 80) = 0xE000000000000000;
  sub_1BB86EF44("Failed to load inspections for feedItem %@, error=%@", 52, 2, &dword_1BA493000, v4, v5, v6);

  swift_bridgeObjectRelease();
  sub_1BA65FBAC(0, (unint64_t *)&qword_1EF2B1500);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  sub_1BA65FBAC(0, (unint64_t *)&qword_1EF2C2430);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v15 + 32) = a1;
  *(_BYTE *)(v15 + 88) = 1;
  *(_QWORD *)(v14 + 32) = 0x726F727245;
  *(_QWORD *)(v14 + 40) = 0xE500000000000000;
  *(_QWORD *)(v14 + 48) = v15;
  *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_sections) = v14;
  v16 = a1;
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_tableView), sel_reloadData);
}

uint64_t sub_1BB3A6F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v0 = sub_1BB8716B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB8716BC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DBC7E8], v4, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DBC808], v0);
  sub_1BB86FDC0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t type metadata accessor for DebugInspectionViewController()
{
  return objc_opt_self();
}

void sub_1BB3A7290()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;

  v1 = v0;
  swift_getObjectType();
  v2 = objc_msgSend(v0, sel_navigationItem);
  sub_1BA65FBAC(0, (unint64_t *)&qword_1ED3BA020);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8856E0;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_init);
  objc_msgSend(v4, sel_sizeToFit);
  objc_msgSend(v4, sel_startAnimating);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithCustomView_, v4);

  *(_QWORD *)(v3 + 32) = v5;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v6 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setLeftBarButtonItems_, v6);

  sub_1BB86EC14();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v7 = (void *)sub_1BB87345C();
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  v8 = v1;
  sub_1BB86E98C();
  swift_release();

  swift_release();
  v9 = (void *)sub_1BB87345C();
  sub_1BB86E9B0();
  swift_release();
  swift_release();

}

uint64_t sub_1BB3A74D0(_QWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t **v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  char *v36;
  id v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t **v59;
  uint64_t *v60;
  uint64_t *boxed_opaque_existential_0;
  uint64_t **v62;
  uint64_t v63;
  void (*v64)(uint64_t **, uint64_t, uint64_t);
  void (*v65)(uint64_t *);
  uint64_t *v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t **v76;
  uint64_t *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  id v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t *v102;
  void (*v103)(void);
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  _QWORD *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t **v121;
  uint64_t *v122;
  uint64_t v123;
  id v124;
  id v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t *v139;
  void (*v140)(void);
  uint64_t **v141;
  uint64_t v142;
  id v143;
  id v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  id v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  void (*v165)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v166;
  uint64_t v167;
  id v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  char *v189;
  void *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t ObjectType;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t **v204;
  uint64_t v205;
  unint64_t v206;
  _QWORD *v207;

  v178 = a3;
  v5 = sub_1BB86FE2C();
  v179 = *(_QWORD *)(v5 - 8);
  v180 = v5;
  MEMORY[0x1E0C80A78](v5);
  v181 = (char *)&v176 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C0530, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB74E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v189 = (char *)&v176 - v9;
  sub_1BA4B07F0(0, &qword_1EF2CC0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC2A8], v7);
  MEMORY[0x1E0C80A78](v10);
  v182 = (char *)&v176 - v11;
  v12 = type metadata accessor for DebugInspectionWebEmbed();
  MEMORY[0x1E0C80A78](v12);
  v186 = (char *)&v176 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = type metadata accessor for DebugInspectionArticleData(0);
  MEMORY[0x1E0C80A78](v185);
  v184 = (char *)&v176 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DebugInspectionHeadline(0);
  MEMORY[0x1E0C80A78](v15);
  v183 = (char *)&v176 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C2920, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionItem, v7);
  MEMORY[0x1E0C80A78](v17);
  v187 = (char *)&v176 - v18;
  v207 = (_QWORD *)type metadata accessor for DebugInspectionItem();
  v193 = *(v207 - 1);
  MEMORY[0x1E0C80A78](v207);
  v20 = (char *)&v176 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v200 = (char *)&v176 - v22;
  v24 = MEMORY[0x1E0C80A78](v23);
  v188 = (uint64_t)&v176 - v25;
  v26 = a1[1];
  v195 = a1[3];
  ObjectType = v26;
  v197 = a1[4];
  v27 = a1[5];
  v191 = a1[6];
  v192 = v27;
  v28 = (uint64_t **)a1[7];
  v203 = a1[8];
  v204 = v28;
  v202 = a1[9];
  v29 = a1[11];
  v30 = a2;
  v194 = v29;
  v31 = objc_msgSend(a2, sel_navigationItem, v24);
  sub_1BA65FBAC(0, (unint64_t *)&qword_1ED3BA020);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1BB8856E0;
  v33 = (void *)sub_1BB872970();
  v34 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v33);

  if (!v34)
  {
    __break(1u);
    JUMPOUT(0x1BB3A880CLL);
  }
  v35 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v36 = v30;
  v37 = objc_msgSend(v35, sel_initWithImage_style_target_action_, v34, 0, v36, sel_doTapToRadar);

  *(_QWORD *)(v32 + 32) = v37;
  v205 = v32;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v38 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setLeftBarButtonItems_, v38);

  v177 = v36;
  v39 = &v36[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem];
  v41 = *(_QWORD *)&v36[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_feedItem + 24];
  v40 = *((_QWORD *)v39 + 4);
  __swift_project_boxed_opaque_existential_1(v39, v41);
  v42 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v40 + 8) + 8))(v41);
  v201 = v43;
  if (*(_QWORD *)(v197 + 16))
  {
    v44 = v197 + ((*(unsigned __int8 *)(v193 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v193 + 80));
    v198 = *(_QWORD *)(v193 + 72);
    v199 = (_QWORD *)v42;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45 = (uint64_t)v200;
    sub_1BA4C2DD8(v44, (uint64_t)v200, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
    sub_1BA4C2DD8(v45, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
    v46 = (char *)&loc_1BB3A79C4 + dword_1BB3A880C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47 = (uint64_t)v187;
  v48 = v193;
  v49 = v207;
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v193 + 56))(v187, 1, 1, v207);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v48 + 48))(v47, 1, v49) == 1)
    return sub_1BA5C699C(v47, (unint64_t *)&unk_1EF2C2920, (uint64_t (*)(uint64_t))type metadata accessor for DebugInspectionItem);
  v51 = v188;
  sub_1BA5193C4(v47, v188, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
  v52 = *(_QWORD *)&v177[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_commandCenter + 8];
  v197 = *(_QWORD *)&v177[OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_commandCenter];
  v198 = v52;
  ObjectType = swift_getObjectType();
  sub_1BB8714A0();
  v195 = sub_1BB871464();
  v53 = sub_1BB86F9A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v189, 1, 1, v53);
  sub_1BA4B07F0(0, &qword_1EF2C0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB79E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v54 = sub_1BB86FC28();
  v55 = *(_QWORD *)(v54 - 8);
  v56 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v201 = *(_QWORD *)(v55 + 72);
  v57 = v201;
  v58 = swift_allocObject();
  v194 = v58;
  *(_OWORD *)(v58 + 16) = xmmword_1BB881B80;
  v59 = (uint64_t **)(v58 + v56);
  v60 = (uint64_t *)swift_allocObject();
  v60[5] = (uint64_t)v207;
  v60[6] = sub_1BB3A9350();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v60 + 2);
  sub_1BA4C2DD8(v51, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
  v60[7] = 0xD000000000000014;
  v60[8] = 0x80000001BB98A910;
  v62 = v59;
  v204 = v59;
  *v59 = v60;
  v63 = *MEMORY[0x1E0DB79C8];
  v64 = *(void (**)(uint64_t **, uint64_t, uint64_t))(v55 + 104);
  v203 = v54;
  v64(v59, v63, v54);
  v65 = (void (*)(uint64_t *))v64;
  v207 = v64;
  v66 = (uint64_t *)((char *)v62 + v57);
  v67 = swift_allocObject();
  v200 = *(char **)(v178 + OBJC_IVAR____TtC8NewsFeed29DebugInspectionViewController_cloudContext);
  v68 = v200;
  v69 = objc_msgSend(v200, sel_privateDataDirectory);
  v70 = sub_1BB8729A0();
  v72 = v71;

  v205 = v70;
  v206 = v72;
  sub_1BB872AFC(v73);
  v74 = v206;
  *(_QWORD *)(v67 + 16) = v205;
  *(_QWORD *)(v67 + 24) = v74;
  *v66 = v67;
  LODWORD(v202) = *MEMORY[0x1E0DB79E0];
  v65(v66);
  v75 = v201;
  v199 = (_QWORD *)(2 * v201);
  v76 = v204;
  v77 = (uint64_t *)((char *)v204 + 2 * v201);
  v78 = swift_allocObject();
  v205 = 0;
  v206 = 0xE000000000000000;
  sub_1BB873CB4();
  v79 = objc_msgSend(v68, sel_privateDataDirectory);
  v80 = sub_1BB8729A0();
  v82 = v81;
  swift_bridgeObjectRelease();

  v205 = v80;
  v206 = v82;
  sub_1BB872AFC("inspection-group-data");
  v83 = v206;
  *(_QWORD *)(v78 + 16) = v205;
  *(_QWORD *)(v78 + 24) = v83;
  *v77 = v78;
  v84 = v203;
  ((void (*)(char *, _QWORD, uint64_t))v207)((char *)v76 + 2 * v75, v202, v203);
  v85 = (_QWORD *)((char *)v199 + v75 + (_QWORD)v76);
  v86 = swift_allocObject();
  v205 = 0;
  v206 = 0xE000000000000000;
  sub_1BB873CB4();
  v87 = v200;
  v88 = objc_msgSend(v200, sel_privateDataDirectory);
  v89 = sub_1BB8729A0();
  v91 = v90;
  swift_bridgeObjectRelease();

  v205 = v89;
  v206 = v91;
  sub_1BB872AFC("-aggregates.json");
  v92 = v206;
  *(_QWORD *)(v86 + 16) = v205;
  *(_QWORD *)(v86 + 24) = v92;
  *v85 = v86;
  v93 = v85;
  v94 = v202;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v207)(v93, v202, v84);
  v199 = (_QWORD *)(4 * v201);
  v95 = (uint64_t *)((char *)v204 + 4 * v201);
  v96 = swift_allocObject();
  v205 = 0;
  v206 = 0xE000000000000000;
  sub_1BB873CB4();
  v97 = objc_msgSend(v87, sel_privateDataDirectory);
  v98 = sub_1BB8729A0();
  v100 = v99;
  swift_bridgeObjectRelease();

  v205 = v98;
  v206 = v100;
  sub_1BB872AFC("/personalization-sessions");
  v101 = v206;
  *(_QWORD *)(v96 + 16) = v205;
  *(_QWORD *)(v96 + 24) = v101;
  *v95 = v96;
  v102 = v95;
  v103 = (void (*)(void))v207;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v207)(v102, v94, v203);
  v104 = v201;
  v199 = (_QWORD *)((char *)v199 + v201 + (_QWORD)v204);
  v105 = swift_allocObject();
  v205 = 0;
  v206 = 0xE000000000000000;
  sub_1BB873CB4();
  v106 = objc_msgSend(v200, sel_privateDataDirectory);
  v107 = sub_1BB8729A0();
  v109 = v108;
  swift_bridgeObjectRelease();

  v205 = v107;
  v206 = v109;
  sub_1BB872AFC("/user_embedding_transformer.pkg");
  v110 = v206;
  *(_QWORD *)(v105 + 16) = v205;
  *(_QWORD *)(v105 + 24) = v110;
  *v199 = v105;
  v111 = v203;
  v103();
  v112 = (uint64_t *)((char *)v204 + 6 * v104);
  v113 = swift_allocObject();
  v205 = 0;
  v206 = 0xE000000000000000;
  sub_1BB873CB4();
  v114 = objc_msgSend(v200, sel_privateDataDirectory);
  v115 = sub_1BB8729A0();
  v117 = v116;
  swift_bridgeObjectRelease();

  v205 = v115;
  v206 = v117;
  sub_1BB872AFC(v118);
  v119 = v206;
  *(_QWORD *)(v113 + 16) = v205;
  *(_QWORD *)(v113 + 24) = v119;
  *v112 = v113;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v207)(v112, v202, v111);
  v199 = (_QWORD *)(8 * v104);
  v120 = 7 * v104;
  v121 = v204;
  v122 = (uint64_t *)((char *)v204 + v120);
  v123 = swift_allocObject();
  v205 = 0;
  v206 = 0xE000000000000000;
  sub_1BB873CB4();
  v124 = v200;
  v125 = objc_msgSend(v200, sel_privateDataDirectory);
  v126 = sub_1BB8729A0();
  v128 = v127;
  swift_bridgeObjectRelease();

  v205 = v126;
  v206 = v128;
  sub_1BB872AFC("/subscriptions.json");
  v129 = v206;
  *(_QWORD *)(v123 + 16) = v205;
  *(_QWORD *)(v123 + 24) = v129;
  *v122 = v123;
  v130 = v122;
  v131 = v202;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v207)(v130, v202, v203);
  v132 = (_QWORD *)((char *)v199 + (_QWORD)v121);
  v133 = swift_allocObject();
  v205 = 0;
  v206 = 0xE000000000000000;
  sub_1BB873CB4();
  v134 = objc_msgSend(v124, sel_privateDataDirectory);
  v135 = sub_1BB8729A0();
  v137 = v136;
  swift_bridgeObjectRelease();

  v205 = v135;
  v206 = v137;
  sub_1BB872AFC("_human_readable.json");
  v138 = v206;
  *(_QWORD *)(v133 + 16) = v205;
  *(_QWORD *)(v133 + 24) = v138;
  *v132 = v133;
  v139 = v132;
  v140 = (void (*)(void))v207;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v207)(v139, v131, v203);
  v141 = v204;
  v199 = (_QWORD *)((char *)v199 + v201 + (_QWORD)v204);
  v142 = swift_allocObject();
  v205 = 0;
  v206 = 0xE000000000000000;
  sub_1BB873CB4();
  v143 = v200;
  v144 = objc_msgSend(v200, sel_privateDataDirectory);
  v145 = sub_1BB8729A0();
  v147 = v146;
  swift_bridgeObjectRelease();

  v205 = v145;
  v206 = v147;
  sub_1BB872AFC("_human_readable_previous.json");
  v148 = v206;
  *(_QWORD *)(v142 + 16) = v205;
  *(_QWORD *)(v142 + 24) = v148;
  *v199 = v142;
  v140();
  v149 = v201;
  v150 = (uint64_t *)((char *)v141 + 10 * v201);
  v151 = swift_allocObject();
  v205 = 0;
  v206 = 0xE000000000000000;
  sub_1BB873CB4();
  v152 = objc_msgSend(v143, sel_privateDataDirectory);
  v153 = sub_1BB8729A0();
  v155 = v154;
  swift_bridgeObjectRelease();

  v205 = v153;
  v206 = v155;
  sub_1BB872AFC("user_embedding_parameters.json");
  v156 = v206;
  *(_QWORD *)(v151 + 16) = v205;
  *(_QWORD *)(v151 + 24) = v156;
  *v150 = v151;
  v157 = v203;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v207)(v150, v202, v203);
  v199 = (uint64_t **)((char *)v204 + 11 * v149);
  v158 = swift_allocObject();
  v205 = 0;
  v206 = 0xE000000000000000;
  sub_1BB873CB4();
  v159 = v200;
  v160 = objc_msgSend(v200, sel_contentDirectory);
  v161 = sub_1BB8729A0();
  v163 = v162;
  swift_bridgeObjectRelease();

  v205 = v161;
  v206 = v163;
  sub_1BB872AFC("embedding_training_history.json");
  v164 = v206;
  *(_QWORD *)(v158 + 16) = v205;
  *(_QWORD *)(v158 + 24) = v164;
  *v199 = v158;
  v165 = (void (*)(uint64_t *, _QWORD, uint64_t))v207;
  ((void (*)(void))v207)();
  v166 = (uint64_t *)((char *)v204 + 12 * v201);
  v167 = swift_allocObject();
  v205 = 0;
  v206 = 0xE000000000000000;
  sub_1BB873CB4();
  v168 = objc_msgSend(v159, sel_contentDirectory);
  v169 = sub_1BB8729A0();
  v171 = v170;
  swift_bridgeObjectRelease();

  v205 = v169;
  v206 = v171;
  sub_1BB872AFC("/tabi_user_features");
  v172 = v206;
  *(_QWORD *)(v167 + 16) = v205;
  *(_QWORD *)(v167 + 24) = v172;
  *v166 = v167;
  v165(v166, v202, v157);
  (*(void (**)(char *, _QWORD, uint64_t))(v179 + 104))(v181, *MEMORY[0x1E0DB7E18], v180);
  v173 = (uint64_t)v182;
  sub_1BB871320();
  v174 = sub_1BB87132C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 56))(v173, 0, 1, v174);
  v175 = v190;
  sub_1BB86FF70();
  swift_release();
  if (v175)

  sub_1BA5C699C(v173, &qword_1EF2CC0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC2A8]);
  return sub_1BA4A2E80(v188, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectionItem);
}

