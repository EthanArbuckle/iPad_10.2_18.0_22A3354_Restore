uint64_t sub_1BB44201C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v17 - v6;
  sub_1BB444E18(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB444DFC(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BB444E18);
  v14 = type metadata accessor for FormatDebuggerContext();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v10, 1, v14) == 1)
  {
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BB444E18);
    v15 = type metadata accessor for FormatDebuggerCallStackFrame(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 1, 1, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &v10[*(int *)(v14 + 24)], v4);
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
    sub_1BB86E800();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1BB4421EC(a2, (uint64_t)v13);
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BB444DFC);
}

id sub_1BB4421EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  void (*v56)(uint64_t);
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id result;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  uint64_t v77;
  __int128 v78;
  unint64_t v79;
  unint64_t v80;
  int64_t v81;
  char *v82;
  int EnumCaseMultiPayload;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  void (*v103)(unint64_t, _QWORD, uint64_t, int *);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _UNKNOWN **v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _UNKNOWN **v122;
  void (*v123)(uint64_t, _UNKNOWN **);
  _UNKNOWN **v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  __int128 *v129;
  char *v130;
  uint64_t v131;
  _QWORD *v132;
  char *v133;
  uint64_t v134;
  __int128 *v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v139;
  _QWORD *v140;
  char *v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  __int128 v148;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  __int128 *v156;
  char *v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  __int128 *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  __int128 v172;
  unint64_t v173;
  unint64_t v174;
  void (*v175)(char *);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __int128 v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  __int128 v195;
  unint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  int *v203;
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  void (*v209)(unint64_t, _QWORD, uint64_t, int *);
  _QWORD *v210;
  unsigned __int8 v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t *v215;
  int v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  uint64_t v224;
  __int128 v225;
  char *v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  unint64_t v237;
  _QWORD *v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  char v255;
  uint64_t v256;
  int *v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  void (*v261)(__int128 *, _QWORD);
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  unint64_t v270;
  _QWORD *v271;
  void *v272;
  _QWORD *v273;
  id v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unsigned int (*v288)(uint64_t, uint64_t, uint64_t);
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  uint64_t *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  _QWORD *v313;
  uint64_t v314;
  char *v315;
  _QWORD *v316;
  _QWORD *v317;
  __int128 v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  __int128 *v325;
  char *v326;
  uint64_t v327;
  char *v328;
  __int128 v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  int *v333;
  unint64_t v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  _OWORD v340[3];
  _QWORD v341[16];
  __int128 v342;
  __int128 v343;
  _UNKNOWN **v344;
  uint64_t v345;
  uint64_t v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  char v350;
  _QWORD v351[8];
  _OWORD v352[2];
  uint64_t v353;
  _OWORD v354[2];
  uint64_t v355;
  _OWORD v356[2];
  uint64_t v357;
  _OWORD v358[2];
  uint64_t v359;
  _OWORD v360[2];
  uint64_t v361;
  _OWORD v362[2];
  uint64_t v363;
  _OWORD v364[2];
  uint64_t v365;
  _OWORD v366[2];
  uint64_t v367;

  *(_QWORD *)&v318 = a2;
  v324 = a1;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v2);
  v296 = (uint64_t)&v286 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v304 = (uint64_t)&v286 - v5;
  v305 = type metadata accessor for DebugFormatCacheFile();
  v303 = *(_QWORD *)(v305 - 8);
  MEMORY[0x1E0C80A78](v305);
  v297 = (uint64_t)&v286 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  v319 = v7;
  v301 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v300 = (char *)&v286 - v8;
  v9 = type metadata accessor for FormatInspectionFeedGroupItem();
  v322 = *(_QWORD *)(v9 - 8);
  v323 = v9;
  MEMORY[0x1E0C80A78](v9);
  v312 = (uint64_t)&v286 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatInspectionItem(0);
  v332 = *(_QWORD *)(v11 - 8);
  v333 = (int *)v11;
  MEMORY[0x1E0C80A78](v11);
  v330 = (char *)&v286 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v325 = (__int128 *)((char *)&v286 - v14);
  sub_1BA93EAAC(0);
  MEMORY[0x1E0C80A78](v15);
  v315 = (char *)&v286 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v321 = (char *)&v286 - v18;
  *(_QWORD *)&v329 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v329);
  v328 = (char *)&v286 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1484DC(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v286 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8C88C8(0);
  v331 = v23;
  v334 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v326 = (char *)&v286 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v327 = (uint64_t)&v286 - v26;
  MEMORY[0x1E0C80A78](v27);
  v320 = (uint64_t)&v286 - v28;
  sub_1BA75C00C();
  v309 = v29;
  v306 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v317 = (uint64_t *)((char *)&v286 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v308 = type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  MEMORY[0x1E0C80A78](v308);
  v302 = (uint64_t *)((char *)&v286 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v32);
  v310 = (char *)&v286 - v33;
  sub_1BB444DFC(0);
  MEMORY[0x1E0C80A78](v34);
  v295 = (char *)&v286 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v311 = (uint64_t)&v286 - v37;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v286 - v39;
  v41 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v294 = (uint64_t)&v286 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v44);
  v316 = (uint64_t *)((char *)&v286 - v45);
  MEMORY[0x1E0C80A78](v46);
  v313 = (uint64_t *)((char *)&v286 - v47);
  sub_1BB444E18(0);
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)&v286 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for FormatDebuggerContext();
  v52 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v54 = (char *)&v286 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v324, (uint64_t)v50, (uint64_t (*)(_QWORD))sub_1BB444E18);
  v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
  v299 = v51;
  if (v55(v50, 1, v51) == 1)
  {
    v56 = sub_1BB444E18;
    v57 = (uint64_t)v50;
LABEL_5:
    sub_1BA4A2E80(v57, (uint64_t (*)(_QWORD))v56);
    v60 = v314;
    *(_QWORD *)(v314 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    sub_1BB20A0CC();
    v61 = v311;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v311, 1, 1, v41);
    v62 = v60 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_selectedCallStackFrame;
    swift_beginAccess();
    sub_1BB444E34(v61, v62);
    swift_endAccess();
    return sub_1BB7D508C();
  }
  sub_1BA5193C4((uint64_t)v50, (uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
  sub_1BA4C2DD8(v318, (uint64_t)v40, (uint64_t (*)(_QWORD))sub_1BB444DFC);
  v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v59 = v54;
  if (v58(v40, 1, v41) == 1)
  {
    sub_1BA4A2E80((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
    v56 = sub_1BB444DFC;
    v57 = (uint64_t)v40;
    goto LABEL_5;
  }
  v324 = v42;
  v288 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v58;
  v64 = v313;
  sub_1BA5193C4((uint64_t)v40, (uint64_t)v313, type metadata accessor for FormatDebuggerCallStackFrame);
  v291 = v41;
  v65 = (uint64_t)v64 + *(int *)(v41 + 24);
  v292 = *(_QWORD *)(sub_1BB0A0F44() + 40);
  swift_retain();
  swift_release();
  v298 = v65;
  v66 = sub_1BB0A0F44();
  v67 = *(_QWORD *)(*(_QWORD *)(v66 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v67 + 16) + 16))
  {
    *(_QWORD *)&v342 = *(_QWORD *)(v66 + 56);
    v68 = swift_bridgeObjectRetain();
    v69 = sub_1BA6E42A0(v68);
    sub_1BA6E3FB8(v69);
    swift_release();
    v290 = v342;
  }
  else
  {
    v290 = sub_1BA6E3F38();
    swift_release();
  }
  v70 = (uint64_t)v325;
  v71 = (uint64_t)v315;
  v72 = (_OWORD *)*((_QWORD *)v59 + 4);
  v73 = (char *)MEMORY[0x1E0DEE9D8];
  if ((unint64_t)v72 < 4)
    goto LABEL_12;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v74 = (*(unsigned __int8 *)(v334 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v334 + 80);
  v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_1BB87CE70;
  sub_1BB445734(v72);
  v76 = v72;
  sub_1BAB02710(0x726F727245, 0xE500000000000000, v72, (uint64_t *)(v75 + v74));
  (*(void (**)(unint64_t, _QWORD, uint64_t, int *))(v332 + 56))(v75 + v74, 0, 1, v333);
  sub_1BAF89090(0x726F727245, 0xE500000000000000, 0, 0, v75, v352);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *((_QWORD *)&v343 + 1) = &type metadata for FormatInspectionGroup;
  v344 = &off_1E72D2F60;
  v77 = swift_allocObject();
  *(_QWORD *)&v342 = v77;
  v78 = v352[1];
  *(_OWORD *)(v77 + 16) = v352[0];
  *(_OWORD *)(v77 + 32) = v78;
  *(_QWORD *)(v77 + 48) = v353;
  v73 = (char *)sub_1BB38F5E0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v80 = *((_QWORD *)v73 + 2);
  v79 = *((_QWORD *)v73 + 3);
  v81 = v80 + 1;
  if (v80 >= v79 >> 1)
    goto LABEL_107;
  while (1)
  {
    *((_QWORD *)v73 + 2) = v81;
    sub_1BA5193C4((uint64_t)&v342, (uint64_t)&v73[40 * v80 + 32], (uint64_t (*)(_QWORD))sub_1BA89EA04);
    sub_1BB445724(v72);
LABEL_12:
    v82 = v310;
    sub_1BA4C2DD8(v298, (uint64_t)v310, type metadata accessor for FormatDebuggerCallStackFrameContext);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v84 = *(_QWORD *)v82;
    v293 = (uint64_t)v59;
    if (EnumCaseMultiPayload == 1)
    {
      v289 = v84;
      sub_1BACCA574();
      (*(void (**)(_QWORD *, char *, uint64_t))(v306 + 32))(v317, &v82[*(int *)(v85 + 48)], v309);
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v286 = *(_QWORD *)(v334 + 72);
      v86 = (*(unsigned __int8 *)(v334 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v334 + 80);
      v87 = swift_allocObject();
      v287 = v87;
      *(_OWORD *)(v87 + 16) = xmmword_1BB87D7A0;
      v88 = v87 + v86;
      v89 = sub_1BB86DBA0();
      v90 = v333;
      v91 = (uint64_t *)(v88 + v333[6]);
      *v91 = v89;
      v92 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v91, 0, 1, v92);
      *(_OWORD *)v88 = xmmword_1BB8D4900;
      *(_QWORD *)(v88 + 16) = 0;
      *(_QWORD *)(v88 + 24) = 0;
      v93 = v88 + v90[7];
      *(_QWORD *)v93 = 0;
      *(_QWORD *)(v93 + 8) = 0;
      *(_BYTE *)(v93 + 16) = -1;
      *(_QWORD *)&v318 = *(_QWORD *)(v332 + 56);
      ((void (*)(unint64_t, _QWORD, uint64_t, int *))v318)(v88, 0, 1, v90);
      v94 = v286;
      v95 = (_QWORD *)(v88 + v286);
      sub_1BB86DBA0();
      sub_1BB86DAD4();
      v97 = v96;
      v99 = v98;
      swift_release();
      sub_1BAAFB8C4(0x6E6F697469736F50, 0xE800000000000000, v97, v99, 0, v95);
      ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v318)(v95, 0, 1, v333);
      v310 = v73;
      sub_1BB86DBA0();
      sub_1BB86DA74();
      swift_release();
      v100 = sub_1BB19B14C();
      sub_1BAAF7494(0x412064656C6C6946, 0xEB00000000616572, v100, v101, (_QWORD *)(v88 + 2 * v94));
      v102 = v333;
      v103 = (void (*)(unint64_t, _QWORD, uint64_t, int *))v318;
      ((void (*)(unint64_t, _QWORD, uint64_t, int *))v318)(v88 + 2 * v94, 0, 1, v333);
      v73 = v310;
      sub_1BB86DBA0();
      sub_1BB86DAA4();
      swift_release();
      v104 = sub_1BB6ED5D4();
      sub_1BAAF7494(0xD000000000000010, 0x80000001BB98D250, v104, v105, (_QWORD *)(v88 + 3 * v94));
      v103(v88 + 3 * v94, 0, 1, v102);
      sub_1BAF89090(0x74756F79614CLL, 0xE600000000000000, 0, 0, v287, v354);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *((_QWORD *)&v343 + 1) = &type metadata for FormatInspectionGroup;
      v344 = &off_1E72D2F60;
      v106 = swift_allocObject();
      *(_QWORD *)&v342 = v106;
      v107 = v354[1];
      *(_OWORD *)(v106 + 16) = v354[0];
      *(_OWORD *)(v106 + 32) = v107;
      *(_QWORD *)(v106 + 48) = v355;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v73 = (char *)sub_1BB38F5E0(0, *((_QWORD *)v73 + 2) + 1, 1, v73);
      v109 = *((_QWORD *)v73 + 2);
      v108 = *((_QWORD *)v73 + 3);
      v59 = (char *)v293;
      v70 = (uint64_t)v325;
      if (v109 >= v108 >> 1)
        v73 = (char *)sub_1BB38F5E0((_QWORD *)(v108 > 1), v109 + 1, 1, v73);
      *((_QWORD *)v73 + 2) = v109 + 1;
      sub_1BA5193C4((uint64_t)&v342, (uint64_t)&v73[40 * v109 + 32], (uint64_t (*)(_QWORD))sub_1BA89EA04);
      swift_release();
      (*(void (**)(_QWORD *, uint64_t))(v306 + 8))(v317, v309);
    }
    else
    {
      swift_release();
    }
    sub_1BB0A1040();
    v111 = v110;
    swift_bridgeObjectRetain();
    sub_1BA85CB34(v111);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B17D0);
    v112 = sub_1BB872E14();
    swift_release();
    v113 = *(_QWORD *)(v112 + 16);
    if (v113)
    {
      v310 = v73;
      v114 = v112 + 32;
      v317 = (_QWORD *)(v70 + 16);
      v289 = v112;
      swift_bridgeObjectRetain();
      v115 = MEMORY[0x1E0DEE9D8];
      v318 = xmmword_1BB8D4900;
      v307 = v22;
      do
      {
        sub_1BA4C010C(v114, (uint64_t)&v342);
        v116 = *((_QWORD *)&v343 + 1);
        v117 = v344;
        __swift_project_boxed_opaque_existential_1(&v342, *((uint64_t *)&v343 + 1));
        v118 = v116;
        v119 = (uint64_t)v328;
        ((void (*)(uint64_t, _UNKNOWN **))v117[1])(v118, v117);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v120 = 1;
        }
        else
        {
          sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
          v121 = *((_QWORD *)&v343 + 1);
          v122 = v344;
          __swift_project_boxed_opaque_existential_1(&v342, *((uint64_t *)&v343 + 1));
          v123 = (void (*)(uint64_t, _UNKNOWN **))v122[1];
          v124 = v122;
          v125 = (uint64_t)v321;
          v123(v121, v124);
          v126 = v322;
          v127 = v323;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v322 + 56))(v125, 0, 1, v323);
          sub_1BA4C2DD8(v125, v71, (uint64_t (*)(_QWORD))sub_1BA93EAAC);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v71, 1, v127) == 1)
          {
            sub_1BA4A2E80(v125, (uint64_t (*)(_QWORD))sub_1BA93EAAC);
            v128 = v333;
            v129 = v325;
            v130 = (char *)v325 + v333[6];
            v131 = type metadata accessor for FormatInspectionItem.Value(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v130, 1, 1, v131);
            *v129 = v318;
            v132 = v317;
            *v317 = 0;
            v132[1] = 0;
            v133 = (char *)v129 + v128[7];
            *(_QWORD *)v133 = 0;
            *((_QWORD *)v133 + 1) = 0;
            v133[16] = -1;
          }
          else
          {
            v134 = v312;
            sub_1BA4C2DD8(v71, v312, (uint64_t (*)(_QWORD))type metadata accessor for FormatInspectionFeedGroupItem);
            sub_1BA4A2E80(v125, (uint64_t (*)(_QWORD))sub_1BA93EAAC);
            v128 = v333;
            v135 = v325;
            v136 = (uint64_t)v325 + v333[6];
            sub_1BA5193C4(v134, v136, (uint64_t (*)(_QWORD))type metadata accessor for FormatInspectionFeedGroupItem);
            v137 = type metadata accessor for FormatInspectionItem.Value(0);
            swift_storeEnumTagMultiPayload();
            v138 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56);
            v139 = v137;
            v129 = v135;
            v71 = (uint64_t)v315;
            v138(v136, 0, 1, v139);
            *v129 = v318;
            v140 = v317;
            *v317 = 0;
            v140[1] = 0;
            v141 = (char *)v129 + v128[7];
            *(_QWORD *)v141 = 0;
            *((_QWORD *)v141 + 1) = 0;
            v141[16] = -1;
            v22 = v307;
            sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatInspectionFeedGroupItem);
          }
          sub_1BA5193C4((uint64_t)v129, (uint64_t)v22, type metadata accessor for FormatInspectionItem);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v332 + 56))(v22, 0, 1, v128);
          v120 = 0;
        }
        v142 = v334;
        v143 = v331;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v334 + 56))(v22, v120, 1, v331);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v342);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v22, 1, v143) == 1)
        {
          sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BB1484DC);
        }
        else
        {
          v144 = v320;
          sub_1BA5193C4((uint64_t)v22, v320, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
          sub_1BA5193C4(v144, v327, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v115 = sub_1BB38CBE8(0, *(_QWORD *)(v115 + 16) + 1, 1, v115);
          v146 = *(_QWORD *)(v115 + 16);
          v145 = *(_QWORD *)(v115 + 24);
          if (v146 >= v145 >> 1)
            v115 = sub_1BB38CBE8(v145 > 1, v146 + 1, 1, v115);
          *(_QWORD *)(v115 + 16) = v146 + 1;
          sub_1BA5193C4(v327, v115+ ((*(unsigned __int8 *)(v334 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v334 + 80))+ *(_QWORD *)(v334 + 72) * v146, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
        }
        v114 += 40;
        --v113;
      }
      while (v113);
      swift_bridgeObjectRelease_n();
      v81 = (int64_t)v313;
      v59 = (char *)v293;
      v73 = v310;
    }
    else
    {
      swift_bridgeObjectRelease();
      v115 = MEMORY[0x1E0DEE9D8];
      v81 = (int64_t)v313;
    }
    sub_1BAF89090(0x69422070756F7247, 0xEE0073676E69646ELL, 0, 0, v115, v356);
    swift_bridgeObjectRelease();
    *((_QWORD *)&v343 + 1) = &type metadata for FormatInspectionGroup;
    v344 = &off_1E72D2F60;
    v147 = swift_allocObject();
    *(_QWORD *)&v342 = v147;
    v148 = v356[1];
    *(_OWORD *)(v147 + 16) = v356[0];
    *(_OWORD *)(v147 + 32) = v148;
    *(_QWORD *)(v147 + 48) = v357;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v71 = (uint64_t)v333;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v73 = (char *)sub_1BB38F5E0(0, *((_QWORD *)v73 + 2) + 1, 1, v73);
    v151 = *((_QWORD *)v73 + 2);
    v150 = *((_QWORD *)v73 + 3);
    if (v151 >= v150 >> 1)
      v73 = (char *)sub_1BB38F5E0((_QWORD *)(v150 > 1), v151 + 1, 1, v73);
    *((_QWORD *)v73 + 2) = v151 + 1;
    sub_1BA5193C4((uint64_t)&v342, (uint64_t)&v73[40 * v151 + 32], (uint64_t (*)(_QWORD))sub_1BA89EA04);
    v70 = sub_1BB0A1040();
    v80 = (unint64_t)v152;
    v22 = *(char **)(v70 + 16);
    if (!v22)
    {
      swift_bridgeObjectRelease();
      v168 = MEMORY[0x1E0DEE9D8];
      goto LABEL_54;
    }
    v328 = v152;
    v310 = v73;
    *(_QWORD *)&v364[0] = MEMORY[0x1E0DEE9D8];
    v72 = v364;
    sub_1BAC79E1C(0, (int64_t)v22, 0);
    v79 = *(_QWORD *)(v70 + 16);
    if ((unint64_t)v22 <= v79)
      break;
    __break(1u);
LABEL_107:
    v73 = (char *)sub_1BB38F5E0((_QWORD *)(v79 > 1), v81, 1, v73);
  }
  v327 = v70;
  v153 = v70 + 32;
  v154 = v330 + 16;
  v329 = xmmword_1BB8D4900;
  v155 = (uint64_t)v326;
  do
  {
    sub_1BA4C010C(v153, (uint64_t)v366);
    sub_1BA4C010C((uint64_t)v366, (uint64_t)&v342);
    v345 = MEMORY[0x1E0DEE9D8];
    v346 = MEMORY[0x1E0DEE9E8];
    v347 = 0u;
    v348 = 0u;
    v349 = 0u;
    v350 = 1;
    sub_1BB444EAC((uint64_t)&v342, (uint64_t)v341);
    if (v341[3])
    {
      sub_1BAB05BDC((uint64_t)v341, (uint64_t)&v335);
      sub_1BB444F00((uint64_t)&v342);
      v156 = (__int128 *)v330;
      v157 = &v330[*(int *)(v71 + 24)];
      v158 = v340[0];
      *((_OWORD *)v157 + 4) = v339;
      *((_OWORD *)v157 + 5) = v158;
      *(_OWORD *)(v157 + 89) = *(_OWORD *)((char *)v340 + 9);
      v159 = v336;
      *(_OWORD *)v157 = v335;
      *((_OWORD *)v157 + 1) = v159;
      v160 = v338;
      *((_OWORD *)v157 + 2) = v337;
      *((_OWORD *)v157 + 3) = v160;
      v161 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 56))(v157, 0, 1, v161);
      *v156 = v329;
      *v154 = 0;
      v154[1] = 0;
      v162 = (char *)v156 + *(int *)(v71 + 28);
      *(_QWORD *)v162 = 0;
      *((_QWORD *)v162 + 1) = 0;
      v162[16] = -1;
      sub_1BAB05C18((uint64_t)v341);
      v163 = (uint64_t)v156;
      v155 = (uint64_t)v326;
    }
    else
    {
      sub_1BB444F00((uint64_t)&v342);
      v164 = (__int128 *)v330;
      v165 = &v330[*(int *)(v71 + 24)];
      v166 = type metadata accessor for FormatInspectionItem.Value(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v166 - 8) + 56))(v165, 1, 1, v166);
      v163 = (uint64_t)v164;
      *v164 = v329;
      *v154 = 0;
      v154[1] = 0;
      v167 = (char *)v164 + *(int *)(v71 + 28);
      *(_QWORD *)v167 = 0;
      *((_QWORD *)v167 + 1) = 0;
      v167[16] = -1;
    }
    sub_1BA5193C4(v163, v155, type metadata accessor for FormatInspectionItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v332 + 56))(v155, 0, 1, v71);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v366);
    v168 = *(_QWORD *)&v364[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC79E1C(0, *(_QWORD *)(v168 + 16) + 1, 1);
      v168 = *(_QWORD *)&v364[0];
    }
    v170 = *(_QWORD *)(v168 + 16);
    v169 = *(_QWORD *)(v168 + 24);
    if (v170 >= v169 >> 1)
    {
      sub_1BAC79E1C(v169 > 1, v170 + 1, 1);
      v168 = *(_QWORD *)&v364[0];
    }
    *(_QWORD *)(v168 + 16) = v170 + 1;
    sub_1BA5193C4(v155, v168+ ((*(unsigned __int8 *)(v334 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v334 + 80))+ *(_QWORD *)(v334 + 72) * v170, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
    v153 += 40;
    --v22;
    v71 = (uint64_t)v333;
  }
  while (v22);
  swift_bridgeObjectRelease();
  v81 = (int64_t)v313;
  v59 = (char *)v293;
  v73 = v310;
LABEL_54:
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x6E6942206D657449, 0xED000073676E6964, 0, 0, v168, v358);
  swift_bridgeObjectRelease();
  *((_QWORD *)&v343 + 1) = &type metadata for FormatInspectionGroup;
  v344 = &off_1E72D2F60;
  v171 = swift_allocObject();
  *(_QWORD *)&v342 = v171;
  *(_QWORD *)(v171 + 48) = v359;
  v172 = v358[1];
  *(_OWORD *)(v171 + 16) = v358[0];
  *(_OWORD *)(v171 + 32) = v172;
  v174 = *((_QWORD *)v73 + 2);
  v173 = *((_QWORD *)v73 + 3);
  if (v174 >= v173 >> 1)
    v73 = (char *)sub_1BB38F5E0((_QWORD *)(v173 > 1), v174 + 1, 1, v73);
  *((_QWORD *)v73 + 2) = v174 + 1;
  sub_1BA5193C4((uint64_t)&v342, (uint64_t)&v73[40 * v174 + 32], (uint64_t (*)(_QWORD))sub_1BA89EA04);
  v175 = *(void (**)(char *))(v301 + 16);
  v330 = &v59[*(int *)(v299 + 24)];
  v175(v300);
  v176 = sub_1BB32DCFC();
  MEMORY[0x1E0C80A78](v176);
  v177 = v314;
  *(&v286 - 4) = v81;
  *(&v286 - 3) = v177;
  *(&v286 - 2) = (uint64_t)v59;
  v178 = sub_1BA8A3A3C((void (*)(uint64_t))sub_1BB444F4C, (uint64_t)(&v286 - 6), v176);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x617453206C6C6143, 0xEA00000000006B63, 0, 0, v178, v360);
  swift_bridgeObjectRelease();
  v351[3] = &type metadata for FormatInspectionGroup;
  v351[4] = &off_1E72D2F60;
  v179 = swift_allocObject();
  v351[0] = v179;
  *(_QWORD *)(v179 + 48) = v361;
  v180 = v360[1];
  *(_OWORD *)(v179 + 16) = v360[0];
  *(_OWORD *)(v179 + 32) = v180;
  v182 = *((_QWORD *)v73 + 2);
  v181 = *((_QWORD *)v73 + 3);
  if (v182 >= v181 >> 1)
    v73 = (char *)sub_1BB38F5E0((_QWORD *)(v181 > 1), v182 + 1, 1, v73);
  *((_QWORD *)v73 + 2) = v182 + 1;
  sub_1BA5193C4((uint64_t)v351, (uint64_t)&v73[40 * v182 + 32], (uint64_t (*)(_QWORD))sub_1BA89EA04);
  v183 = *(_QWORD *)(v314 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_editor);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v184 = v342;
  v185 = v292;
  swift_retain();
  v186 = sub_1BB444F6C(v184, v185);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BAF89090(0x704F206863746157, 0xED0000736E6F6974, 0, 0, v186, v362);
  swift_bridgeObjectRelease();
  *((_QWORD *)&v343 + 1) = &type metadata for FormatInspectionGroup;
  v344 = &off_1E72D2F60;
  v187 = swift_allocObject();
  *(_QWORD *)&v342 = v187;
  *(_QWORD *)(v187 + 48) = v363;
  v188 = v362[1];
  *(_OWORD *)(v187 + 16) = v362[0];
  *(_OWORD *)(v187 + 32) = v188;
  v190 = *((_QWORD *)v73 + 2);
  v189 = *((_QWORD *)v73 + 3);
  if (v190 >= v189 >> 1)
    v73 = (char *)sub_1BB38F5E0((_QWORD *)(v189 > 1), v190 + 1, 1, v73);
  *((_QWORD *)v73 + 2) = v190 + 1;
  sub_1BA5193C4((uint64_t)&v342, (uint64_t)&v73[40 * v190 + 32], (uint64_t (*)(_QWORD))sub_1BA89EA04);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v191 = v342;
  v192 = v290;
  swift_bridgeObjectRetain();
  v193 = sub_1BB4453DC(v191, v192);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1BAF89090(0x6553206863746157, 0xEF73726F7463656CLL, 0, 0, v193, v364);
  swift_bridgeObjectRelease();
  *((_QWORD *)&v343 + 1) = &type metadata for FormatInspectionGroup;
  v344 = &off_1E72D2F60;
  v194 = swift_allocObject();
  *(_QWORD *)&v342 = v194;
  *(_QWORD *)(v194 + 48) = v365;
  v195 = v364[1];
  *(_OWORD *)(v194 + 16) = v364[0];
  *(_OWORD *)(v194 + 32) = v195;
  v197 = *((_QWORD *)v73 + 2);
  v196 = *((_QWORD *)v73 + 3);
  *(_QWORD *)&v329 = v183;
  if (v197 >= v196 >> 1)
    v73 = (char *)sub_1BB38F5E0((_QWORD *)(v196 > 1), v197 + 1, 1, v73);
  *((_QWORD *)v73 + 2) = v197 + 1;
  v310 = v73;
  sub_1BA5193C4((uint64_t)&v342, (uint64_t)&v73[40 * v197 + 32], (uint64_t (*)(_QWORD))sub_1BA89EA04);
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v198 = *(_QWORD *)(v334 + 72);
  v199 = (*(unsigned __int8 *)(v334 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v334 + 80);
  v200 = swift_allocObject();
  *(_OWORD *)(v200 + 16) = xmmword_1BB87FC80;
  v201 = v200 + v199;
  *(_QWORD *)&v342 = *v313;
  v202 = v342;
  sub_1BB57F380();
  v203 = v333;
  v204 = (_QWORD *)(v200 + v199 + v333[6]);
  *v204 = v205;
  v204[1] = v206;
  v207 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v207 - 8) + 56))(v204, 0, 1, v207);
  *(_OWORD *)v201 = xmmword_1BB918EB0;
  *(_QWORD *)(v201 + 16) = 0;
  *(_QWORD *)(v201 + 24) = 0;
  v208 = v201 + v203[7];
  *(_QWORD *)v208 = 0;
  *(_QWORD *)(v208 + 8) = 0;
  *(_BYTE *)(v208 + 16) = -1;
  v209 = *(void (**)(unint64_t, _QWORD, uint64_t, int *))(v332 + 56);
  v209(v201, 0, 1, v203);
  v334 = v198;
  v210 = (_QWORD *)(v201 + v198);
  *(_QWORD *)&v342 = v202;
  v211 = sub_1BB57DC18();
  v212 = sub_1BB57DC38(v211);
  v214 = v213;
  swift_bridgeObjectRetain();
  sub_1BAAF7494(1684957515, 0xE400000000000000, v212, v214, v210);
  v209((unint64_t)v210, 0, 1, v203);
  v215 = v302;
  sub_1BA4C2DD8(v298, (uint64_t)v302, type metadata accessor for FormatDebuggerCallStackFrameContext);
  v216 = swift_getEnumCaseMultiPayload();
  v217 = *v215;
  if (v216 == 1)
  {
    sub_1BACCA574();
    v219 = (char *)v215 + *(int *)(v218 + 48);
    v221 = *(_QWORD *)(v217 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    v220 = *(_QWORD *)(v217 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    swift_bridgeObjectRetain();
    swift_release();
    (*(void (**)(char *, uint64_t))(v306 + 8))(v219, v309);
  }
  else
  {
    v221 = *(_QWORD *)(v217 + 32);
    v220 = *(_QWORD *)(v217 + 40);
    swift_bridgeObjectRetain();
    swift_release();
  }
  if (v220)
    v222 = v221;
  else
    v222 = 0;
  v223 = (_QWORD *)(v201 + 2 * v334);
  sub_1BAAF8000(1953459283, 0xE400000000000000, v222, v220, v223);
  v209((unint64_t)v223, 0, 1, v333);
  sub_1BAF89090(1701080910, 0xE400000000000000, 0, 0, v200, v366);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *((_QWORD *)&v343 + 1) = &type metadata for FormatInspectionGroup;
  v344 = &off_1E72D2F60;
  v224 = swift_allocObject();
  *(_QWORD *)&v342 = v224;
  *(_QWORD *)(v224 + 48) = v367;
  v225 = v366[1];
  *(_OWORD *)(v224 + 16) = v366[0];
  *(_OWORD *)(v224 + 32) = v225;
  v226 = v310;
  v228 = *((_QWORD *)v310 + 2);
  v227 = *((_QWORD *)v310 + 3);
  if (v228 >= v227 >> 1)
    v226 = (char *)sub_1BB38F5E0((_QWORD *)(v227 > 1), v228 + 1, 1, v310);
  *((_QWORD *)v226 + 2) = v228 + 1;
  sub_1BA5193C4((uint64_t)&v342, (uint64_t)&v226[40 * v228 + 32], (uint64_t (*)(_QWORD))sub_1BA89EA04);
  v229 = swift_bridgeObjectRetain();
  v230 = sub_1BB6DF010(v229);
  swift_bridgeObjectRelease();
  v231 = sub_1BB6DED58((uint64_t)v230);
  swift_bridgeObjectRelease();
  v232 = *(_QWORD *)(v231 + 16);
  v310 = v226;
  v332 = v231;
  if (v232)
  {
    v233 = v231 + 64;
    v234 = MEMORY[0x1E0DEE9D8];
    v235 = v324;
    do
    {
      v239 = *(_QWORD *)v233;
      if (*(_QWORD *)(*(_QWORD *)v233 + 16))
      {
        v240 = *(_QWORD *)(v233 - 32);
        v241 = *(_QWORD *)(v233 - 24);
        v242 = *(_QWORD *)(v233 - 8);
        v333 = *(int **)(v233 - 16);
        v334 = v240;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v243 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v342 = v234;
        if ((v243 & 1) == 0)
        {
          sub_1BAC7AD80(0, *(_QWORD *)(v234 + 16) + 1, 1);
          v234 = v342;
        }
        v237 = *(_QWORD *)(v234 + 16);
        v236 = *(_QWORD *)(v234 + 24);
        if (v237 >= v236 >> 1)
        {
          sub_1BAC7AD80(v236 > 1, v237 + 1, 1);
          v234 = v342;
        }
        *(_QWORD *)(v234 + 16) = v237 + 1;
        v238 = (_QWORD *)(v234 + 40 * v237);
        v238[4] = v334;
        v238[5] = v241;
        v238[6] = v333;
        v238[7] = v242;
        v238[8] = v239;
        v235 = v324;
      }
      v233 += 40;
      --v232;
    }
    while (v232);
  }
  else
  {
    v234 = MEMORY[0x1E0DEE9D8];
    v235 = v324;
  }
  swift_bridgeObjectRelease();
  v244 = v314;
  *(_QWORD *)(v314 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups) = v234;
  swift_bridgeObjectRelease();
  sub_1BB20A0CC();
  v245 = v313;
  v246 = v311;
  sub_1BA4C2DD8((uint64_t)v313, v311, type metadata accessor for FormatDebuggerCallStackFrame);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v235 + 56))(v246, 0, 1, v291);
  v247 = v244 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_selectedCallStackFrame;
  swift_beginAccess();
  sub_1BB444E34(v246, v247);
  swift_endAccess();
  sub_1BB7D51A0((uint64_t)v245);
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if (!(_QWORD)v342)
  {
    v256 = v304;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v304, 1, 1, v305);
    v250 = v293;
LABEL_89:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA4A2E80((uint64_t)v245, type metadata accessor for FormatDebuggerCallStackFrame);
    sub_1BA4A2E80(v250, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
    return (id)sub_1BA4A2E80(v256, (uint64_t (*)(_QWORD))sub_1BAA197E8);
  }
  v248 = *(_QWORD *)(v342 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  v249 = v305;
  v250 = v293;
  v251 = v303;
  if (*(_QWORD *)(v248 + 16))
  {
    v253 = v245[1];
    v252 = v245[2];
    swift_bridgeObjectRetain();
    v254 = sub_1BA6E35A8(v253, v252);
    if ((v255 & 1) != 0)
    {
      v256 = v304;
      sub_1BA4C2DD8(*(_QWORD *)(v248 + 56) + *(_QWORD *)(v251 + 72) * v254, v304, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v257 = *(int **)(v251 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v257)(v256, 0, 1, v249);
    }
    else
    {
      v257 = *(int **)(v251 + 56);
      v256 = v304;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v257)(v304, 1, 1, v249);
    }
    swift_bridgeObjectRelease();
    v245 = v313;
  }
  else
  {
    v257 = *(int **)(v303 + 56);
    v256 = v304;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v257)(v304, 1, 1, v305);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v251 + 48))(v256, 1, v249) == 1)
    goto LABEL_89;
  sub_1BA5193C4(v256, v297, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  v258 = sub_1BB4456C4();
  v259 = sub_1BB8730FC();
  v333 = v257;
  if (!v259)
  {
    swift_bridgeObjectRelease();
    v268 = MEMORY[0x1E0DEE9D8];
    goto LABEL_100;
  }
  v260 = v259;
  v341[0] = MEMORY[0x1E0DEE9D8];
  sub_1BAC7B55C(0, v259 & ~(v259 >> 63), 0);
  result = (id)sub_1BB8730D8();
  if ((v260 & 0x8000000000000000) == 0)
  {
    v334 = v258;
    do
    {
      v261 = (void (*)(__int128 *, _QWORD))sub_1BB873198();
      v262 = v316;
      sub_1BA4C2DD8(v263, (uint64_t)v316, type metadata accessor for FormatDebuggerCallStackFrame);
      v261(&v342, 0);
      v264 = v262[1];
      v265 = v262[2];
      v267 = v262[3];
      v266 = v262[4];
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v262, type metadata accessor for FormatDebuggerCallStackFrame);
      v268 = v341[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B55C(0, *(_QWORD *)(v268 + 16) + 1, 1);
        v268 = v341[0];
      }
      v270 = *(_QWORD *)(v268 + 16);
      v269 = *(_QWORD *)(v268 + 24);
      if (v270 >= v269 >> 1)
      {
        sub_1BAC7B55C(v269 > 1, v270 + 1, 1);
        v268 = v341[0];
      }
      *(_QWORD *)(v268 + 16) = v270 + 1;
      v271 = (_QWORD *)(v268 + 32 * v270);
      v271[4] = v264;
      v271[5] = v265;
      v271[6] = v267;
      v271[7] = v266;
      sub_1BB873120();
      --v260;
    }
    while (v260);
    swift_bridgeObjectRelease();
    v249 = v305;
    v250 = v293;
LABEL_100:
    *(_QWORD *)&v342 = v268;
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    v272 = *(void **)(v250 + 32);
    v273 = v313;
    if ((unint64_t)v272 >= 4)
    {
      v274 = v272;
      v275 = (uint64_t)v295;
      sub_1BB86E800();
      if (v288(v275, 1, v291) != 1)
      {
        v280 = v275;
        v281 = v294;
        sub_1BA5193C4(v280, v294, type metadata accessor for FormatDebuggerCallStackFrame);
        v283 = v296;
        v282 = v297;
        sub_1BA4C2DD8(v297, v296, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v333)(v283, 0, 1, v249);
        v284 = v273[2];
        *(_QWORD *)&v335 = v273[1];
        *((_QWORD *)&v335 + 1) = v284;
        v336 = *(_OWORD *)(v273 + 3);
        v285 = *(_QWORD *)(v281 + 16);
        *(_QWORD *)&v342 = *(_QWORD *)(v281 + 8);
        *((_QWORD *)&v342 + 1) = v285;
        v343 = *(_OWORD *)(v281 + 24);
        v344 = (_UNKNOWN **)v272;
        sub_1BB445734(v272);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA8EB6E0(v283, (uint64_t *)&v335, (uint64_t *)&v342, (uint64_t)v341);
        sub_1BAF97E40((uint64_t)v341, (uint64_t)&v342);
        sub_1BAF97E40((uint64_t)&v342, (uint64_t)&v335);
        swift_retain();
        sub_1BB86E4A0();
        swift_release();
        swift_release();
        sub_1BB445724(v272);
        sub_1BA4A2E80(v281, type metadata accessor for FormatDebuggerCallStackFrame);
        sub_1BA4A2E80(v282, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
        v279 = (uint64_t)v273;
        goto LABEL_105;
      }
      sub_1BB445724(v272);
      sub_1BA4A2E80(v275, (uint64_t (*)(_QWORD))sub_1BB444DFC);
    }
    v276 = v296;
    v277 = v297;
    sub_1BA4C2DD8(v297, v296, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v333)(v276, 0, 1, v249);
    v278 = v273[2];
    *(_QWORD *)&v335 = v273[1];
    *((_QWORD *)&v335 + 1) = v278;
    v336 = *(_OWORD *)(v273 + 3);
    v344 = 0;
    v342 = 0u;
    v343 = 0u;
    swift_bridgeObjectRetain();
    sub_1BA8EB6E0(v276, (uint64_t *)&v335, (uint64_t *)&v342, (uint64_t)v341);
    sub_1BAF97E40((uint64_t)v341, (uint64_t)&v342);
    sub_1BAF97E40((uint64_t)&v342, (uint64_t)&v335);
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    swift_release();
    sub_1BA4A2E80(v277, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v279 = (uint64_t)v273;
LABEL_105:
    sub_1BA4A2E80(v279, type metadata accessor for FormatDebuggerCallStackFrame);
    return (id)sub_1BA4A2E80(v250, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB4445DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  sub_1BB444DFC(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB444E18(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  swift_release();
  v8 = a1 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_selectedCallStackFrame;
  swift_beginAccess();
  sub_1BA4C2DD8(v8, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BB444DFC);
  sub_1BB4421EC((uint64_t)v7, (uint64_t)v4);
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BB444DFC);
  return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BB444E18);
}

uint64_t sub_1BB444764@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  sub_1BA6CF304();
  v10 = v9;
  v12 = v11;
  result = sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
  *a2 = v10;
  a2[1] = v12;
  return result;
}

uint64_t sub_1BB444824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)();
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a4;
  v34 = a5;
  v31[0] = a2;
  v31[1] = a3;
  v6 = type metadata accessor for FormatDebuggerContext();
  v32 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v32 + 64);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v31 - v14;
  v35 = (uint64_t)v31 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v31 - v17;
  sub_1BA4C2DD8(a1, (uint64_t)v31 - v17, type metadata accessor for FormatDebuggerCallStackFrame);
  sub_1BA4C2DD8(v31[0], (uint64_t)v15, type metadata accessor for FormatDebuggerCallStackFrame);
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BA4C2DD8(v33, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
  sub_1BA4C2DD8(a1, (uint64_t)v12, type metadata accessor for FormatDebuggerCallStackFrame);
  v20 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v21 = (v7 + *(unsigned __int8 *)(v10 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v19;
  sub_1BA5193C4((uint64_t)v8, v22 + v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
  sub_1BA5193C4((uint64_t)v12, v22 + v21, type metadata accessor for FormatDebuggerCallStackFrame);
  type metadata accessor for DebugFormatDebuggerCallStackEntry();
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v18, v23 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerCallStackEntry_callStackFrame, type metadata accessor for FormatDebuggerCallStackFrame);
  sub_1BA5193C4(v35, v23 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerCallStackEntry_selectedCallStackFrame, type metadata accessor for FormatDebuggerCallStackFrame);
  v24 = (uint64_t (**)())(v23 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerCallStackEntry_onSelectBlock);
  *v24 = sub_1BB4458C4;
  v24[1] = (uint64_t (*)())v22;
  v25 = type metadata accessor for FormatInspectionItem(0);
  v26 = v34;
  v27 = (uint64_t *)(v34 + *(int *)(v25 + 24));
  *v27 = v23;
  v28 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 0, 1, v28);
  *(_OWORD *)v26 = xmmword_1BB8D4900;
  *(_QWORD *)(v26 + 16) = 0;
  *(_QWORD *)(v26 + 24) = 0;
  v29 = v26 + *(int *)(v25 + 28);
  *(_QWORD *)v29 = 0;
  *(_QWORD *)(v29 + 8) = 0;
  *(_BYTE *)(v29 + 16) = -1;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v26, 0, 1, v25);
}

uint64_t sub_1BB444AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1BB444DFC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB444E18(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](a1 + 16);
  if (result)
  {
    v13 = (void *)result;
    sub_1BA4C2DD8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
    v14 = type metadata accessor for FormatDebuggerContext();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 0, 1, v14);
    sub_1BA4C2DD8(a3, (uint64_t)v8, type metadata accessor for FormatDebuggerCallStackFrame);
    v15 = type metadata accessor for FormatDebuggerCallStackFrame(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
    sub_1BB4421EC(v11, v8);

    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BB444DFC);
    return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB444E18);
  }
  return result;
}

void sub_1BB444C68()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BB444C94()
{
  uint64_t v0;

  swift_release();
  return sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerViewController_selectedCallStackFrame, (uint64_t (*)(_QWORD))sub_1BB444DFC);
}

uint64_t sub_1BB444D30()
{
  return type metadata accessor for DebugFormatDebuggerViewController();
}

uint64_t type metadata accessor for DebugFormatDebuggerViewController()
{
  uint64_t result;

  result = qword_1EF2C4160;
  if (!qword_1EF2C4160)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB444D74()
{
  unint64_t v0;

  sub_1BB444DFC(319);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1BB444DFC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C0AD8, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB444E18(uint64_t a1)
{
  sub_1BA4B07F0(a1, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB444E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB444DFC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB444E78()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB444EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4CF8F4(0, (unint64_t *)&qword_1EF2C8DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB444F00(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4CF8F4(0, (unint64_t *)&qword_1EF2C8DD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB444F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1BB444824(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1BB444F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  int64_t v19;
  uint64_t result;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;

  v62 = a2;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v4);
  v61 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatInspectionItem(0);
  v60 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatOption();
  v58 = *(_QWORD *)(v12 - 8);
  v59 = v12;
  MEMORY[0x1E0C80A78](v12);
  v53 = (uint64_t *)((char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v57 = (uint64_t)&v49 - v15;
  sub_1BA8C88C8(0);
  v56 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)((char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v19)
  {
    v49 = v2;
    v65 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v19, 0);
    v64 = v65;
    v50 = v18 + 2;
    v51 = v8 + 2;
    v21 = (uint64_t *)(a1 + 40);
    v52 = v11;
    do
    {
      v63 = v19;
      v23 = *(v21 - 1);
      v22 = *v21;
      swift_bridgeObjectRetain();
      FormatOptionCollection.subscript.getter(v23, v22, (uint64_t)v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v11, 1, v59) == 1)
      {
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA856968);
        v24 = (char *)v8 + *(int *)(v6 + 24);
        v25 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
        *v8 = v23;
        v8[1] = v22;
        v26 = v51;
        *v51 = 0;
        v26[1] = 0;
        v27 = (char *)v8 + *(int *)(v6 + 28);
        *(_QWORD *)v27 = 0;
        *((_QWORD *)v27 + 1) = 0;
        v27[16] = -1;
        v28 = (uint64_t)v24;
        v29 = v61;
        sub_1BA4C2DD8(v28, v61, (uint64_t (*)(_QWORD))sub_1BAB0582C);
        swift_bridgeObjectRetain_n();
        sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatInspectionItem);
        *v18 = v23;
        v18[1] = v22;
        v30 = v50;
        *v50 = 0;
        v30[1] = 0;
        sub_1BA5193C4(v29, (uint64_t)v18 + *(int *)(v6 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        v31 = (char *)v18 + *(int *)(v6 + 28);
        *(_QWORD *)v31 = v23;
        *((_QWORD *)v31 + 1) = v22;
        v31[16] = 0;
      }
      else
      {
        v32 = v57;
        sub_1BA5193C4((uint64_t)v11, v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v33 = v32;
        v34 = v53;
        sub_1BA4C2DD8(v33, (uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        sub_1BB0798DC(v34, v8);
        v35 = *v8;
        v36 = v8[1];
        v37 = v8[3];
        v54 = v8[2];
        v55 = v35;
        v38 = (uint64_t)v8 + *(int *)(v6 + 24);
        v39 = (uint64_t)v8;
        v40 = v6;
        v41 = v61;
        sub_1BA4C2DD8(v38, v61, (uint64_t (*)(_QWORD))sub_1BAB0582C);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA4A2E80(v39, type metadata accessor for FormatInspectionItem);
        *v18 = v55;
        v18[1] = v36;
        v18[2] = v54;
        v18[3] = v37;
        v42 = (uint64_t)v18 + *(int *)(v40 + 24);
        v43 = v41;
        v6 = v40;
        v8 = (uint64_t *)v39;
        v11 = v52;
        sub_1BA5193C4(v43, v42, (uint64_t (*)(_QWORD))sub_1BAB0582C);
        v44 = (char *)v18 + *(int *)(v6 + 28);
        *(_QWORD *)v44 = v23;
        *((_QWORD *)v44 + 1) = v22;
        v44[16] = 0;
        sub_1BA4A2E80(v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v18, 0, 1, v6);
      swift_bridgeObjectRelease();
      v45 = v64;
      v65 = v64;
      v47 = *(_QWORD *)(v64 + 16);
      v46 = *(_QWORD *)(v64 + 24);
      if (v47 >= v46 >> 1)
      {
        sub_1BAC79E1C(v46 > 1, v47 + 1, 1);
        v45 = v65;
      }
      v21 += 2;
      *(_QWORD *)(v45 + 16) = v47 + 1;
      v48 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      v64 = v45;
      sub_1BA5193C4((uint64_t)v18, v45 + v48 + *(_QWORD *)(v56 + 72) * v47, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v19 = v63 - 1;
    }
    while (v63 != 1);
    return v64;
  }
  return result;
}

uint64_t sub_1BB4453DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD v32[2];
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;

  v39 = a2;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v4);
  v38 = (uint64_t)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatInspectionItem(0);
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA8C88C8(0);
  v35 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v32[1] = v2;
    v41 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v12, 0);
    v13 = v41;
    v33 = v11 + 2;
    v34 = v8 + 2;
    v14 = (uint64_t *)(a1 + 40);
    v15 = v37;
    do
    {
      v40 = v12;
      v17 = *(v14 - 1);
      v16 = *v14;
      swift_bridgeObjectRetain_n();
      v18 = sub_1BA761FE4(v17, v16, v39);
      v19 = v11;
      v20 = v13;
      v21 = (char *)v8 + *(int *)(v15 + 24);
      *v21 = v18 & 1;
      v22 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
      *v8 = v17;
      v8[1] = v16;
      v23 = v34;
      *v34 = 0;
      v23[1] = 0;
      v24 = (char *)v8 + *(int *)(v15 + 28);
      *(_QWORD *)v24 = 0;
      *((_QWORD *)v24 + 1) = 0;
      v24[16] = -1;
      v25 = (uint64_t)v21;
      v13 = v20;
      v11 = v19;
      v26 = v38;
      sub_1BA4C2DD8(v25, v38, (uint64_t (*)(_QWORD))sub_1BAB0582C);
      swift_bridgeObjectRetain_n();
      sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatInspectionItem);
      *v19 = v17;
      v19[1] = v16;
      v27 = v33;
      *v33 = 0;
      v27[1] = 0;
      sub_1BA5193C4(v26, (uint64_t)v19 + *(int *)(v15 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v28 = (char *)v19 + *(int *)(v15 + 28);
      *(_QWORD *)v28 = v17;
      *((_QWORD *)v28 + 1) = v16;
      v28[16] = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v19, 0, 1, v15);
      swift_bridgeObjectRelease();
      v41 = v13;
      v30 = *(_QWORD *)(v13 + 16);
      v29 = *(_QWORD *)(v13 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1BAC79E1C(v29 > 1, v30 + 1, 1);
        v13 = v41;
      }
      v14 += 2;
      *(_QWORD *)(v13 + 16) = v30 + 1;
      sub_1BA5193C4((uint64_t)v19, v13+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v30, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v12 = v40 - 1;
    }
    while (v40 != 1);
  }
  return v13;
}

unint64_t sub_1BB4456C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C4170;
  if (!qword_1EF2C4170)
  {
    sub_1BA4B07F0(255, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB4A80], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C4170);
  }
  return result;
}

void sub_1BB445724(id a1)
{
  if ((unint64_t)a1 >= 4)

}

id sub_1BB445734(id result)
{
  if ((unint64_t)result >= 4)
    return result;
  return result;
}

uint64_t sub_1BB445744()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB445768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for FormatDebuggerContext();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  swift_release();
  v8 = v0 + v3;
  swift_bridgeObjectRelease();
  v9 = *(void **)(v8 + 32);
  if ((unint64_t)v9 >= 4)

  v10 = v8 + *(int *)(v1 + 24);
  sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_bridgeObjectRelease();
  v12 = v0 + v7 + *(int *)(v5 + 24);
  type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  LODWORD(v10) = swift_getEnumCaseMultiPayload();
  swift_release();
  if ((_DWORD)v10 == 1)
  {
    sub_1BACCA574();
    v14 = v12 + *(int *)(v13 + 48);
    sub_1BA75C00C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  return swift_deallocObject();
}

uint64_t sub_1BB4458C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for FormatDebuggerContext() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatDebuggerCallStackFrame(0) - 8) + 80);
  return sub_1BB444AF8(*(_QWORD *)(v0 + 16), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

id CoverChannelView.moreActionsButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed16CoverChannelView_moreActionsButton);
}

id CoverChannelView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *CoverChannelView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8NewsFeed16CoverChannelView_moreActionsButton;
  v11 = objc_allocWithZone((Class)type metadata accessor for CoverViewActionButton());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8NewsFeed16CoverChannelView_followButton;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoverViewFollowSwitch()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8NewsFeed16CoverChannelView_titleLabel;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage;
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone((Class)sub_1BB87171C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC8NewsFeed16CoverChannelView_accessoryLabel;
  *(_QWORD *)&v12[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BB445EF4();
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_debugButton] = sub_1BB86DD98();

  v26.receiver = v12;
  v26.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v26, sel_initWithFrame_, a1, a2, a3, a4);
  v18 = *(_QWORD *)&v17[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_titleLabel];
  v19 = v17;
  objc_msgSend(v19, sel_addSubview_, v18);
  v20 = *(void **)&v19[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage];
  objc_msgSend(v19, sel_addSubview_, v20);
  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_accessoryLabel]);
  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_followButton]);
  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v19[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_moreActionsButton]);
  objc_msgSend(v20, sel_setAccessibilityIgnoresInvertColors_, 1);
  v21 = *MEMORY[0x1E0DC46E0];
  v22 = v19;
  v23 = (unint64_t)objc_msgSend(v22, sel_accessibilityTraits);
  if ((v21 & ~v23) != 0)
    v24 = v21;
  else
    v24 = 0;
  objc_msgSend(v22, sel_setAccessibilityTraits_, v24 | v23);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1BB86DD8C();
  swift_release();
  swift_release();

  return v22;
}

id CoverChannelView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id CoverChannelView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall CoverChannelView.prepareForReuse()()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;

  v1 = v0;
  objc_msgSend(v0, sel_setAccessibilityCustomActions_, 0);
  objc_msgSend(v0, sel_setAccessibilityLabel_, 0);
  objc_msgSend(v0, sel_setAccessibilityValue_, 0);
  sub_1BB86DD68();
  if (v5)
  {
    v2 = (void *)sub_1BB871344();

  }
  v3 = objc_retain(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_followButton]
                         + OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_onTap));

  v4 = objc_retain(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_moreActionsButton]
                         + OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap));

}

void sub_1BB445E9C()
{
  CoverChannelView.prepareForReuse()();
}

void sub_1BB445EBC()
{
  sub_1BA83347C(&qword_1ED3B4730, (uint64_t)&protocol conformance descriptor for CoverChannelView);
  JUMPOUT(0x1BCCE1E7CLL);
}

void sub_1BB445EF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4618)
  {
    type metadata accessor for DebugButton();
    v0 = sub_1BB86DDA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4618);
  }
}

uint64_t sub_1BB445F48()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void _s8NewsFeed16CoverChannelViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC8NewsFeed16CoverChannelView_moreActionsButton;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoverViewActionButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtC8NewsFeed16CoverChannelView_followButton;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoverViewFollowSwitch()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8NewsFeed16CoverChannelView_titleLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)sub_1BB87171C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC8NewsFeed16CoverChannelView_accessoryLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1BB873EAC();
  __break(1u);
}

BOOL static FormatHeadlineBinding.Float.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1BB4460D8(char *a1, char *a2)
{
  return sub_1BB7F91FC(*a1, *a2);
}

uint64_t sub_1BB4460E4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB446170()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB4461D0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB446258@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB4462B4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x7275446B63617274;
  if (*v1)
    v2 = 0x7275446F65646976;
  *a1 = v2;
  a1[1] = 0xED00006E6F697461;
}

uint64_t sub_1BB4462F8()
{
  sub_1BB4466F0();
  return sub_1BB872D60();
}

uint64_t sub_1BB446354()
{
  sub_1BB4466F0();
  return sub_1BB872D0C();
}

void sub_1BB4463A0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252390;
}

uint64_t FormatHeadlineBinding.Float.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatHeadlineBinding.Float.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB446420()
{
  unint64_t result;

  result = qword_1EF2C41A8;
  if (!qword_1EF2C41A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Float, &type metadata for FormatHeadlineBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1EF2C41A8);
  }
  return result;
}

unint64_t sub_1BB446464(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB446488();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB446488()
{
  unint64_t result;

  result = qword_1EF2C41B0;
  if (!qword_1EF2C41B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Float, &type metadata for FormatHeadlineBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1EF2C41B0);
  }
  return result;
}

unint64_t sub_1BB4464CC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE717FC();
  a1[2] = sub_1BAEF37B4();
  result = sub_1BB446420();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB446500@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatHeadlineBinding.Float.init(from:)(a1, a2);
}

uint64_t sub_1BB446514(_QWORD *a1)
{
  return FormatHeadlineBinding.Float.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.Float()
{
  return &type metadata for FormatHeadlineBinding.Float;
}

uint64_t _s14descr1E7310681C5FloatOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB446588 + 4 * byte_1BB918F8D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB4465BC + 4 * byte_1BB918F88[v4]))();
}

uint64_t sub_1BB4465BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4465C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4465CCLL);
  return result;
}

uint64_t sub_1BB4465D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4465E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB4465E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4465EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1E7310681C5FloatO10CodingTypeOMa()
{
  return &_s14descr1E7310681C5FloatO10CodingTypeON;
}

unint64_t sub_1BB44660C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C41B8;
  if (!qword_1EF2C41B8)
  {
    sub_1BB446654();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C41B8);
  }
  return result;
}

void sub_1BB446654()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C41C0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C41C0);
  }
}

unint64_t sub_1BB4466AC()
{
  unint64_t result;

  result = qword_1EF2C41C8;
  if (!qword_1EF2C41C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91918C, &_s14descr1E7310681C5FloatO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2C41C8);
  }
  return result;
}

unint64_t sub_1BB4466F0()
{
  unint64_t result;

  result = qword_1ED3A6B78;
  if (!qword_1ED3A6B78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB919114, &_s14descr1E7310681C5FloatO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B78);
  }
  return result;
}

uint64_t sub_1BB446734@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (id *)((char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v11 = (id *)((char *)v18 - v10);
  if ((*a1 & 1) != 0)
  {
    sub_1BA76C878(a2, (uint64_t)v8);
    objc_msgSend(v8[5], sel_videoDuration);
    sub_1BAAF3A18(0x7544206F65646956, 0xEE006E6F69746172, v12, 0, a3);
    v11 = v8;
  }
  else
  {
    sub_1BA76C878(a2, (uint64_t)v18 - v10);
    v13 = *(id *)((char *)v11 + *(int *)(v6 + 56));
    if (v13)
    {
      objc_msgSend(v13, sel_duration);
      v15 = v14;
    }
    else
    {
      v15 = 0;
    }
    sub_1BAAF3A18(0x7544206B63617254, 0xEE006E6F69746172, v15, 0, a3);
  }
  sub_1BA717468((uint64_t)v11);
  v16 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 0, 1, v16);
}

uint64_t sub_1BB446A3C()
{
  return type metadata accessor for DebugFormatCanvasFrameView();
}

uint64_t type metadata accessor for DebugFormatCanvasFrameView()
{
  uint64_t result;

  result = qword_1EF2C4200;
  if (!qword_1EF2C4200)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB446A80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86D57C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t SportsSyncingConfigResource.watchlistKitSyncMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsSyncingConfigResource.umcIDs.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v1 = sub_1BB446B60(v0);
    *(_QWORD *)(v0 + 24) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigResource.umcIDs.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB446B60(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v2, 0);
    v3 = v12;
    v4 = (uint64_t *)(v1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v7 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1)
        sub_1BA7447E8(v8 > 1, v7 + 1, 1);
      v4 += 4;
      *(_QWORD *)(v12 + 16) = v7 + 1;
      v9 = v12 + 16 * v7;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v10 = sub_1BA6E43EC(v3);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t (*SportsSyncingConfigResource.umcIDs.modify(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = SportsSyncingConfigResource.umcIDs.getter();
  return sub_1BAFD1530;
}

uint64_t SportsSyncingConfigResource.tagIDs.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(_QWORD *)(v0 + 32);
  }
  else
  {
    v1 = sub_1BB446CF8(v0);
    *(_QWORD *)(v0 + 32) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigResource.tagIDs.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB446CF8(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v2, 0);
    v3 = v12;
    v4 = (uint64_t *)(v1 + 56);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v7 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1)
        sub_1BA7447E8(v8 > 1, v7 + 1, 1);
      *(_QWORD *)(v12 + 16) = v7 + 1;
      v9 = v12 + 16 * v7;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      v4 += 4;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v10 = sub_1BA6E43EC(v3);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t (*SportsSyncingConfigResource.tagIDs.modify(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = SportsSyncingConfigResource.tagIDs.getter();
  return sub_1BAFD16C8;
}

uint64_t SportsSyncingConfigResource.teamUMCIDToTagIDMap.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    v1 = sub_1BB446E90(v0);
    *(_QWORD *)(v0 + 40) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigResource.teamUMCIDToTagIDMap.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB446E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  v2 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v6 = *(v2 - 3);
    v5 = *(v2 - 2);
    v7 = *(v2 - 1);
    v8 = *v2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = sub_1BA6E35A8(v6, v5);
    v12 = v3[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
      break;
    v15 = v10;
    if (v3[3] >= v14)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v10 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BB4C216C();
        if ((v15 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BB4AE750(v14, isUniquelyReferenced_nonNull_native);
      v16 = sub_1BA6E35A8(v6, v5);
      if ((v15 & 1) != (v17 & 1))
        goto LABEL_21;
      v11 = v16;
      if ((v15 & 1) != 0)
      {
LABEL_3:
        v4 = (_QWORD *)(v3[7] + 16 * v11);
        swift_bridgeObjectRelease();
        *v4 = v7;
        v4[1] = v8;
        goto LABEL_4;
      }
    }
    v3[(v11 >> 6) + 8] |= 1 << v11;
    v18 = (uint64_t *)(v3[6] + 16 * v11);
    *v18 = v6;
    v18[1] = v5;
    v19 = (_QWORD *)(v3[7] + 16 * v11);
    *v19 = v7;
    v19[1] = v8;
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_20;
    v3[2] = v22;
    swift_bridgeObjectRetain();
LABEL_4:
    v2 += 4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t (*SportsSyncingConfigResource.teamUMCIDToTagIDMap.modify(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = SportsSyncingConfigResource.teamUMCIDToTagIDMap.getter();
  return sub_1BAFD1788;
}

unint64_t SportsSyncingConfigResource.leagueUMCIDToTagIDMap.getter()
{
  uint64_t v0;
  unint64_t v1;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v1 = sub_1BA8F2B44(MEMORY[0x1E0DEE9D8]);
    *(_QWORD *)(v0 + 48) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigResource.leagueUMCIDToTagIDMap.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*SportsSyncingConfigResource.leagueUMCIDToTagIDMap.modify(unint64_t *a1))(_QWORD *a1)
{
  unint64_t v1;

  a1[1] = v1;
  *a1 = SportsSyncingConfigResource.leagueUMCIDToTagIDMap.getter();
  return sub_1BAFD1A58;
}

unint64_t sub_1BB44714C()
{
  return 0xD000000000000013;
}

uint64_t sub_1BB447168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB448030(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BB447190()
{
  sub_1BB447398();
  return sub_1BB874710();
}

uint64_t sub_1BB4471B8()
{
  sub_1BB447398();
  return sub_1BB87471C();
}

uint64_t SportsSyncingConfigResource.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsSyncingConfigResource.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SportsSyncingConfigResource.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C4210, (uint64_t (*)(void))sub_1BB447398, (uint64_t)&type metadata for SportsSyncingConfigResource.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB447398();
  sub_1BB8746C8();
  v10[1] = *(_QWORD *)(v2 + 16);
  sub_1BAFD1FC4();
  sub_1BAFD23BC(&qword_1EF2B8878, (uint64_t (*)(void))sub_1BAFD2098, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BB447398()
{
  unint64_t result;

  result = qword_1EF2C4218;
  if (!qword_1EF2C4218)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91953C, &type metadata for SportsSyncingConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4218);
  }
  return result;
}

uint64_t SportsSyncingConfigResource.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SportsSyncingConfigResource.init(from:)(a1);
  return v2;
}

uint64_t SportsSyncingConfigResource.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];

  v10[1] = *(_QWORD *)v1;
  sub_1BA4CDF6C(0, &qword_1EF2C4220, (uint64_t (*)(void))sub_1BB447398, (uint64_t)&type metadata for SportsSyncingConfigResource.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v10[0] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - v6;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB447398();
  sub_1BB87468C();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1BAFD1FC4();
    sub_1BAFD23BC(&qword_1EF2B8898, (uint64_t (*)(void))sub_1BAFD2420, MEMORY[0x1E0DEAF40]);
    v8 = v10[0];
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v8);
    *(_QWORD *)(v1 + 16) = v10[3];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1BB4475E4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = SportsSyncingConfigResource.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB447638(_QWORD *a1)
{
  return SportsSyncingConfigResource.encode(to:)(a1);
}

uint64_t sub_1BB447658()
{
  return SportsSyncingConfigResource.umcIDs.getter();
}

uint64_t sub_1BB447678()
{
  return SportsSyncingConfigResource.tagIDs.getter();
}

uint64_t sub_1BB447698()
{
  return SportsSyncingConfigResource.teamUMCIDToTagIDMap.getter();
}

unint64_t sub_1BB4476B8()
{
  return SportsSyncingConfigResource.leagueUMCIDToTagIDMap.getter();
}

uint64_t SportsSyncingConfigResourceItem.umcId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsSyncingConfigResourceItem.tagId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB447730()
{
  _BYTE *v0;

  if (*v0)
    return 0x6449676174;
  else
    return 0x6449636D75;
}

uint64_t sub_1BB44775C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB4480B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB447780()
{
  sub_1BB447914();
  return sub_1BB874710();
}

uint64_t sub_1BB4477A8()
{
  sub_1BB447914();
  return sub_1BB87471C();
}

uint64_t SportsSyncingConfigResourceItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1BA4CDF6C(0, &qword_1EF2C4228, (uint64_t (*)(void))sub_1BB447914, (uint64_t)&type metadata for SportsSyncingConfigResourceItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB447914();
  sub_1BB8746C8();
  v13 = 0;
  v9 = v11[3];
  sub_1BB87417C();
  if (!v9)
  {
    v12 = 1;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB447914()
{
  unint64_t result;

  result = qword_1EF2C4230;
  if (!qword_1EF2C4230)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9194EC, &type metadata for SportsSyncingConfigResourceItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4230);
  }
  return result;
}

uint64_t SportsSyncingConfigResourceItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  char v22;

  v20 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C4238, (uint64_t (*)(void))sub_1BB447914, (uint64_t)&type metadata for SportsSyncingConfigResourceItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB447914();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v20;
  v22 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v21 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17 = v13;
  v16(v8, v5);
  *v9 = v10;
  v9[1] = v12;
  v9[2] = v17;
  v9[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB447B1C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsSyncingConfigResourceItem.init(from:)(a1, a2);
}

uint64_t sub_1BB447B30(_QWORD *a1)
{
  return SportsSyncingConfigResourceItem.encode(to:)(a1);
}

uint64_t sub_1BB447B44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SportsSyncingConfigResource.umcIDs.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BB447B6C(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 24) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB447B9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SportsSyncingConfigResource.tagIDs.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BB447BC4(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 32) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB447BF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SportsSyncingConfigResource.teamUMCIDToTagIDMap.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BB447C1C(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 40) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BB447C4C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = SportsSyncingConfigResource.leagueUMCIDToTagIDMap.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BB447C74(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 48) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of SportsSyncingConfigResourceType.umcIDs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SportsSyncingConfigResourceType.tagIDs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SportsSyncingConfigResourceType.teamUMCIDToTagIDMap.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SportsSyncingConfigResourceType.leagueUMCIDToTagIDMap.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata accessor for SportsSyncingConfigResource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SportsSyncingConfigResource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsSyncingConfigResource.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for SportsSyncingConfigResourceItem()
{
  return &type metadata for SportsSyncingConfigResourceItem;
}

uint64_t storeEnumTagSinglePayload for SportsSyncingConfigResourceItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB447D64 + 4 * byte_1BB919205[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB447D98 + 4 * asc_1BB919200[v4]))();
}

uint64_t sub_1BB447D98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB447DA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB447DA8);
  return result;
}

uint64_t sub_1BB447DB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB447DBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB447DC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB447DC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsSyncingConfigResourceItem.CodingKeys()
{
  return &type metadata for SportsSyncingConfigResourceItem.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SportsSyncingConfigResource.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB447E24 + 4 * byte_1BB91920A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB447E44 + 4 * byte_1BB91920F[v4]))();
}

_BYTE *sub_1BB447E24(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB447E44(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB447E4C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB447E54(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB447E5C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB447E64(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsSyncingConfigResource.CodingKeys()
{
  return &type metadata for SportsSyncingConfigResource.CodingKeys;
}

unint64_t sub_1BB447E84()
{
  unint64_t result;

  result = qword_1EF2C4300;
  if (!qword_1EF2C4300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91940C, &type metadata for SportsSyncingConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4300);
  }
  return result;
}

unint64_t sub_1BB447ECC()
{
  unint64_t result;

  result = qword_1EF2C4308;
  if (!qword_1EF2C4308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9194C4, &type metadata for SportsSyncingConfigResourceItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4308);
  }
  return result;
}

unint64_t sub_1BB447F14()
{
  unint64_t result;

  result = qword_1EF2C4310;
  if (!qword_1EF2C4310)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB919434, &type metadata for SportsSyncingConfigResourceItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4310);
  }
  return result;
}

unint64_t sub_1BB447F5C()
{
  unint64_t result;

  result = qword_1EF2C4318;
  if (!qword_1EF2C4318)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91945C, &type metadata for SportsSyncingConfigResourceItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4318);
  }
  return result;
}

unint64_t sub_1BB447FA4()
{
  unint64_t result;

  result = qword_1EF2C4320;
  if (!qword_1EF2C4320)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91937C, &type metadata for SportsSyncingConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4320);
  }
  return result;
}

unint64_t sub_1BB447FEC()
{
  unint64_t result;

  result = qword_1EF2C4328;
  if (!qword_1EF2C4328)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9193A4, &type metadata for SportsSyncingConfigResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4328);
  }
  return result;
}

uint64_t sub_1BB448030(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001BB98D3F0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1BB4480B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6449636D75 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449676174 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t destroy for FormatDerivedDataResultBlockReference(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1BA8D5088(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatDerivedDataResultBlockReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_1BA8D4E00(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataResultBlockReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  sub_1BA8D4E00(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v9 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v6;
  sub_1BA8D5088(v7, v8, v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataResultBlockReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v5;
  sub_1BA8D5088(v6, v7, v8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatDerivedDataResultBlockReference()
{
  return &type metadata for FormatDerivedDataResultBlockReference;
}

uint64_t sub_1BB448434(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  int64_t v58;
  int v59;
  int64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  int64_t v74;
  char v75;
  int64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  int64_t v89;
  char v90;
  uint64_t v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int64_t v106;
  int64_t v107;
  char v108;
  uint64_t v109;
  int64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int64_t v123;
  int64_t v124;
  char v125;
  uint64_t v126;
  int64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t (*v137)(uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int64_t v141;
  int64_t v142;
  char v143;
  uint64_t v144;
  int64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t (*v156)(uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int64_t v160;
  int64_t v161;
  char v162;
  uint64_t v163;
  int64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int64_t v179;
  int64_t v180;
  char v181;
  uint64_t v182;
  int64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t (*v194)(uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int64_t v198;
  int64_t v199;
  char v200;
  uint64_t v201;
  int64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t (*v213)(uint64_t);
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int64_t v217;
  int64_t v218;
  char v219;
  uint64_t v220;
  int64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t (*v232)(uint64_t);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int64_t v236;
  int64_t v237;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v239;
  int64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t (*v252)(uint64_t);
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  void (*v259)(char *, unint64_t, uint64_t);
  char *v260;
  char *v261;
  uint64_t v262;
  void (*v263)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v264;
  uint64_t result;
  _QWORD v266[10];
  uint64_t v267;
  unint64_t v268;
  uint64_t v269;
  unint64_t v270;
  unint64_t v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v274;
  unint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  unint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  unint64_t v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  char *v314;
  char *v315;
  unint64_t v316;
  uint64_t v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  unint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3ADAE0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreCacheKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v315 = (char *)v266 - v4;
  v5 = sub_1BB86C67C();
  v323 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v314 = (char *)v266 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v313 = (char *)v266 - v8;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v9, v2);
  MEMORY[0x1E0C80A78](v10);
  v296 = (char *)v266 - v11;
  v12 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1E0C80A78](v12);
  v316 = (unint64_t)v266 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, v316, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  v295 = sub_1BB47BEC4();
  v14 = sub_1BB47B828();
  v15 = *(_QWORD *)(v14 + 16);
  v324 = v5;
  if (!v15)
  {
    swift_bridgeObjectRelease();
    v251 = MEMORY[0x1E0DEE9D8];
    goto LABEL_255;
  }
  v16 = *(_QWORD *)(type metadata accessor for WebEmbedDataVisualization() - 8);
  v318 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v17 = v14 + v318;
  v18 = *(_QWORD *)(v16 + 72);
  v266[7] = v14;
  swift_bridgeObjectRetain();
  v19 = 0;
  v307 = MEMORY[0x1E0DEE9D8];
  v277 = v17;
  v325 = v18;
  v278 = v15;
  while (1)
  {
    v293 = v19;
    v294 = sub_1BB47BEC4();
    v20 = sub_1BB47B828();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
      break;
    swift_bridgeObjectRelease();
    v250 = MEMORY[0x1E0DEE9D8];
LABEL_234:
    v327 = v250;
    v232 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v232);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v232, MEMORY[0x1E0CB0018]);
    v233 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v327 = v294;
    sub_1BB3839F8(v233);
    v234 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v235 = *(_QWORD *)(v234 + 16);
    v236 = *(_QWORD *)(v307 + 16);
    v237 = v236 + v235;
    if (__OFADD__(v236, v235))
      goto LABEL_281;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v239 = v307;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v237 > *(_QWORD *)(v307 + 24) >> 1)
    {
      if (v236 <= v237)
        v240 = v236 + v235;
      else
        v240 = v236;
      v239 = sub_1BA6C2E20(isUniquelyReferenced_nonNull_native, v240, 1, v307);
    }
    v241 = *(_QWORD *)(v234 + 16);
    v307 = v239;
    if (v241)
    {
      v242 = *(_QWORD *)(v239 + 16);
      if ((*(_QWORD *)(v239 + 24) >> 1) - v242 < v235)
        goto LABEL_296;
      v243 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
      v244 = *(_QWORD *)(v323 + 72);
      v245 = v239 + v243 + v244 * v242;
      if (v234 + v243 < v245 + v244 * v235 && v245 < v234 + v243 + v244 * v235)
        goto LABEL_310;
      swift_arrayInitWithCopy();
      if (v235)
      {
        v247 = *(_QWORD *)(v307 + 16);
        v67 = __OFADD__(v247, v235);
        v248 = v247 + v235;
        if (v67)
          goto LABEL_304;
        *(_QWORD *)(v307 + 16) = v248;
      }
    }
    else if (v235)
    {
      goto LABEL_283;
    }
    v249 = v293 + 1;
    swift_bridgeObjectRelease();
    v19 = v249;
    if (v249 == v278)
      goto LABEL_269;
  }
  v22 = v20 + v318;
  v266[6] = v20;
  swift_bridgeObjectRetain();
  v23 = 0;
  v306 = MEMORY[0x1E0DEE9D8];
  v276 = v21;
  v275 = v22;
  while (1)
  {
    v291 = v23;
    v292 = sub_1BB47BEC4();
    v24 = sub_1BB47B828();
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
      break;
    swift_bridgeObjectRelease();
    v231 = MEMORY[0x1E0DEE9D8];
LABEL_213:
    v327 = v231;
    v213 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v213);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v213, MEMORY[0x1E0CB0018]);
    v214 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v327 = v292;
    sub_1BB3839F8(v214);
    v215 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v216 = *(_QWORD *)(v215 + 16);
    v217 = *(_QWORD *)(v306 + 16);
    v218 = v217 + v216;
    if (__OFADD__(v217, v216))
      goto LABEL_284;
    v219 = swift_isUniquelyReferenced_nonNull_native();
    v220 = v306;
    if ((v219 & 1) == 0 || v218 > *(_QWORD *)(v306 + 24) >> 1)
    {
      if (v217 <= v218)
        v221 = v217 + v216;
      else
        v221 = v217;
      v220 = sub_1BA6C2E20(v219, v221, 1, v306);
    }
    v222 = *(_QWORD *)(v215 + 16);
    v306 = v220;
    if (v222)
    {
      v223 = *(_QWORD *)(v220 + 16);
      if ((*(_QWORD *)(v220 + 24) >> 1) - v223 < v216)
        goto LABEL_297;
      v224 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
      v225 = *(_QWORD *)(v323 + 72);
      v226 = v220 + v224 + v225 * v223;
      if (v215 + v224 < v226 + v225 * v216 && v226 < v215 + v224 + v225 * v216)
        goto LABEL_310;
      swift_arrayInitWithCopy();
      if (v216)
      {
        v228 = *(_QWORD *)(v306 + 16);
        v67 = __OFADD__(v228, v216);
        v229 = v228 + v216;
        if (v67)
          goto LABEL_305;
        *(_QWORD *)(v306 + 16) = v229;
      }
    }
    else if (v216)
    {
      goto LABEL_285;
    }
    v230 = v291 + 1;
    swift_bridgeObjectRelease();
    v23 = v230;
    if (v230 == v276)
    {
      swift_bridgeObjectRelease_n();
      v250 = v306;
      goto LABEL_234;
    }
  }
  v26 = v24 + v318;
  v266[5] = v24;
  swift_bridgeObjectRetain();
  v27 = 0;
  v304 = MEMORY[0x1E0DEE9D8];
  v274 = v25;
  v273 = v26;
  while (1)
  {
    v288 = v27;
    v290 = sub_1BB47BEC4();
    v28 = sub_1BB47B828();
    v29 = *(_QWORD *)(v28 + 16);
    if (v29)
      break;
    swift_bridgeObjectRelease();
    v212 = MEMORY[0x1E0DEE9D8];
LABEL_192:
    v327 = v212;
    v194 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v194);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v194, MEMORY[0x1E0CB0018]);
    v195 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v327 = v290;
    sub_1BB3839F8(v195);
    v196 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v197 = *(_QWORD *)(v196 + 16);
    v198 = *(_QWORD *)(v304 + 16);
    v199 = v198 + v197;
    if (__OFADD__(v198, v197))
      goto LABEL_286;
    v200 = swift_isUniquelyReferenced_nonNull_native();
    v201 = v304;
    if ((v200 & 1) == 0 || v199 > *(_QWORD *)(v304 + 24) >> 1)
    {
      if (v198 <= v199)
        v202 = v198 + v197;
      else
        v202 = v198;
      v201 = sub_1BA6C2E20(v200, v202, 1, v304);
    }
    v203 = *(_QWORD *)(v196 + 16);
    v304 = v201;
    if (v203)
    {
      v204 = *(_QWORD *)(v201 + 16);
      if ((*(_QWORD *)(v201 + 24) >> 1) - v204 < v197)
        goto LABEL_298;
      v205 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
      v206 = *(_QWORD *)(v323 + 72);
      v207 = v201 + v205 + v206 * v204;
      if (v196 + v205 < v207 + v206 * v197 && v207 < v196 + v205 + v206 * v197)
        goto LABEL_310;
      swift_arrayInitWithCopy();
      if (v197)
      {
        v209 = *(_QWORD *)(v304 + 16);
        v67 = __OFADD__(v209, v197);
        v210 = v209 + v197;
        if (v67)
          goto LABEL_306;
        *(_QWORD *)(v304 + 16) = v210;
      }
    }
    else if (v197)
    {
      goto LABEL_287;
    }
    v211 = v288 + 1;
    swift_bridgeObjectRelease();
    v27 = v211;
    if (v211 == v274)
    {
      swift_bridgeObjectRelease_n();
      v231 = v304;
      goto LABEL_213;
    }
  }
  v30 = v28 + v318;
  v266[3] = v28;
  swift_bridgeObjectRetain();
  v31 = 0;
  v303 = MEMORY[0x1E0DEE9D8];
  v272 = v29;
  v271 = v30;
  while (1)
  {
    v285 = v31;
    v286 = sub_1BB47BEC4();
    v32 = sub_1BB47B828();
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
      break;
    swift_bridgeObjectRelease();
    v193 = MEMORY[0x1E0DEE9D8];
LABEL_171:
    v327 = v193;
    v175 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v175);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v175, MEMORY[0x1E0CB0018]);
    v176 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v327 = v286;
    sub_1BB3839F8(v176);
    v177 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v178 = *(_QWORD *)(v177 + 16);
    v179 = *(_QWORD *)(v303 + 16);
    v180 = v179 + v178;
    if (__OFADD__(v179, v178))
      goto LABEL_288;
    v181 = swift_isUniquelyReferenced_nonNull_native();
    v182 = v303;
    if ((v181 & 1) == 0 || v180 > *(_QWORD *)(v303 + 24) >> 1)
    {
      if (v179 <= v180)
        v183 = v179 + v178;
      else
        v183 = v179;
      v182 = sub_1BA6C2E20(v181, v183, 1, v303);
    }
    v184 = *(_QWORD *)(v177 + 16);
    v303 = v182;
    if (v184)
    {
      v185 = *(_QWORD *)(v182 + 16);
      if ((*(_QWORD *)(v182 + 24) >> 1) - v185 < v178)
        goto LABEL_299;
      v186 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
      v187 = *(_QWORD *)(v323 + 72);
      v188 = v182 + v186 + v187 * v185;
      if (v177 + v186 < v188 + v187 * v178 && v188 < v177 + v186 + v187 * v178)
        goto LABEL_310;
      swift_arrayInitWithCopy();
      if (v178)
      {
        v190 = *(_QWORD *)(v303 + 16);
        v67 = __OFADD__(v190, v178);
        v191 = v190 + v178;
        if (v67)
          goto LABEL_307;
        *(_QWORD *)(v303 + 16) = v191;
      }
    }
    else if (v178)
    {
      goto LABEL_289;
    }
    v192 = v285 + 1;
    swift_bridgeObjectRelease();
    v31 = v192;
    if (v192 == v272)
    {
      swift_bridgeObjectRelease_n();
      v212 = v303;
      goto LABEL_192;
    }
  }
  v34 = v32 + v318;
  v266[2] = v32;
  swift_bridgeObjectRetain();
  v35 = 0;
  v302 = MEMORY[0x1E0DEE9D8];
  v269 = v33;
  v268 = v34;
  while (1)
  {
    v282 = v35;
    v283 = sub_1BB47BEC4();
    v36 = sub_1BB47B828();
    v37 = *(_QWORD *)(v36 + 16);
    if (v37)
      break;
    swift_bridgeObjectRelease();
    v174 = MEMORY[0x1E0DEE9D8];
LABEL_150:
    v327 = v174;
    v156 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v156);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v156, MEMORY[0x1E0CB0018]);
    v157 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v327 = v283;
    sub_1BB3839F8(v157);
    v158 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v159 = *(_QWORD *)(v158 + 16);
    v160 = *(_QWORD *)(v302 + 16);
    v161 = v160 + v159;
    if (__OFADD__(v160, v159))
      goto LABEL_290;
    v162 = swift_isUniquelyReferenced_nonNull_native();
    v163 = v302;
    if ((v162 & 1) == 0 || v161 > *(_QWORD *)(v302 + 24) >> 1)
    {
      if (v160 <= v161)
        v164 = v160 + v159;
      else
        v164 = v160;
      v163 = sub_1BA6C2E20(v162, v164, 1, v302);
    }
    v165 = *(_QWORD *)(v158 + 16);
    v302 = v163;
    if (v165)
    {
      v166 = *(_QWORD *)(v163 + 16);
      if ((*(_QWORD *)(v163 + 24) >> 1) - v166 < v159)
        goto LABEL_300;
      v167 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
      v168 = *(_QWORD *)(v323 + 72);
      v169 = v163 + v167 + v168 * v166;
      if (v158 + v167 < v169 + v168 * v159 && v169 < v158 + v167 + v168 * v159)
        goto LABEL_310;
      swift_arrayInitWithCopy();
      if (v159)
      {
        v171 = *(_QWORD *)(v302 + 16);
        v67 = __OFADD__(v171, v159);
        v172 = v171 + v159;
        if (v67)
          goto LABEL_308;
        *(_QWORD *)(v302 + 16) = v172;
      }
    }
    else if (v159)
    {
      goto LABEL_292;
    }
    v173 = v282 + 1;
    swift_bridgeObjectRelease();
    v35 = v173;
    if (v173 == v269)
    {
      swift_bridgeObjectRelease_n();
      v193 = v302;
      goto LABEL_171;
    }
  }
  v38 = v36 + v318;
  v266[1] = v36;
  swift_bridgeObjectRetain();
  v39 = 0;
  v301 = MEMORY[0x1E0DEE9D8];
  v267 = v37;
  v266[9] = v38;
  while (1)
  {
    v280 = v39;
    v281 = sub_1BB47BEC4();
    v40 = sub_1BB47B828();
    v284 = *(_QWORD *)(v40 + 16);
    if (v284)
      break;
    swift_bridgeObjectRelease();
    v155 = MEMORY[0x1E0DEE9D8];
LABEL_129:
    v327 = v155;
    v137 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v137);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v137, MEMORY[0x1E0CB0018]);
    v138 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v327 = v281;
    sub_1BB3839F8(v138);
    v139 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v140 = *(_QWORD *)(v139 + 16);
    v141 = *(_QWORD *)(v301 + 16);
    v142 = v141 + v140;
    if (__OFADD__(v141, v140))
      goto LABEL_291;
    v143 = swift_isUniquelyReferenced_nonNull_native();
    v144 = v301;
    if ((v143 & 1) == 0 || v142 > *(_QWORD *)(v301 + 24) >> 1)
    {
      if (v141 <= v142)
        v145 = v141 + v140;
      else
        v145 = v141;
      v144 = sub_1BA6C2E20(v143, v145, 1, v301);
    }
    v146 = *(_QWORD *)(v139 + 16);
    v301 = v144;
    if (v146)
    {
      v147 = *(_QWORD *)(v144 + 16);
      if ((*(_QWORD *)(v144 + 24) >> 1) - v147 < v140)
        goto LABEL_301;
      v148 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
      v149 = *(_QWORD *)(v323 + 72);
      v150 = v144 + v148 + v149 * v147;
      if (v139 + v148 < v150 + v149 * v140 && v150 < v139 + v148 + v149 * v140)
        goto LABEL_310;
      swift_arrayInitWithCopy();
      if (v140)
      {
        v152 = *(_QWORD *)(v301 + 16);
        v67 = __OFADD__(v152, v140);
        v153 = v152 + v140;
        if (v67)
          goto LABEL_309;
        *(_QWORD *)(v301 + 16) = v153;
      }
    }
    else if (v140)
    {
      goto LABEL_293;
    }
    v154 = v280 + 1;
    swift_bridgeObjectRelease();
    v39 = v154;
    if (v154 == v267)
    {
      swift_bridgeObjectRelease_n();
      v174 = v301;
      goto LABEL_150;
    }
  }
  v41 = v40 + v318;
  v266[0] = v40;
  swift_bridgeObjectRetain();
  v42 = 0;
  v305 = MEMORY[0x1E0DEE9D8];
  v270 = v41;
  while (1)
  {
    v287 = v42;
    v289 = sub_1BB47BEC4();
    v43 = sub_1BB47B828();
    v297 = *(_QWORD *)(v43 + 16);
    if (v297)
      break;
    swift_bridgeObjectRelease();
    v136 = MEMORY[0x1E0DEE9D8];
LABEL_108:
    v327 = v136;
    v119 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v119);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v119, MEMORY[0x1E0CB0018]);
    v120 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v327 = v289;
    sub_1BB3839F8(v120);
    v121 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v122 = *(_QWORD *)(v121 + 16);
    v123 = *(_QWORD *)(v305 + 16);
    v124 = v123 + v122;
    if (__OFADD__(v123, v122))
      goto LABEL_280;
    v125 = swift_isUniquelyReferenced_nonNull_native();
    v126 = v305;
    if ((v125 & 1) == 0 || v124 > *(_QWORD *)(v305 + 24) >> 1)
    {
      if (v123 <= v124)
        v127 = v123 + v122;
      else
        v127 = v123;
      v126 = sub_1BA6C2E20(v125, v127, 1, v305);
    }
    v128 = *(_QWORD *)(v121 + 16);
    v305 = v126;
    if (v128)
    {
      v129 = *(_QWORD *)(v126 + 16);
      if ((*(_QWORD *)(v126 + 24) >> 1) - v129 < v122)
        goto LABEL_295;
      v130 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
      v131 = *(_QWORD *)(v323 + 72);
      v132 = v126 + v130 + v131 * v129;
      if (v121 + v130 < v132 + v131 * v122 && v132 < v121 + v130 + v131 * v122)
        goto LABEL_310;
      swift_arrayInitWithCopy();
      if (v122)
      {
        v134 = *(_QWORD *)(v305 + 16);
        v67 = __OFADD__(v134, v122);
        v135 = v134 + v122;
        if (v67)
          goto LABEL_303;
        *(_QWORD *)(v305 + 16) = v135;
      }
    }
    else if (v122)
    {
      goto LABEL_282;
    }
    v42 = v287 + 1;
    swift_bridgeObjectRelease();
    if (v42 == v284)
    {
      swift_bridgeObjectRelease_n();
      v155 = v305;
      goto LABEL_129;
    }
  }
  v44 = v43 + v318;
  v266[4] = v43;
  swift_bridgeObjectRetain();
  v45 = 0;
  v308 = MEMORY[0x1E0DEE9D8];
  v279 = v44;
  while (1)
  {
    v298 = v45;
    v299 = sub_1BB47BEC4();
    v46 = sub_1BB47B828();
    v309 = *(_QWORD *)(v46 + 16);
    if (v309)
      break;
    swift_bridgeObjectRelease();
    v101 = MEMORY[0x1E0DEE9D8];
LABEL_86:
    v327 = v101;
    v102 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v102);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v102, MEMORY[0x1E0CB0018]);
    v103 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v327 = v299;
    sub_1BB3839F8(v103);
    v104 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v105 = *(_QWORD *)(v104 + 16);
    v106 = *(_QWORD *)(v308 + 16);
    v107 = v106 + v105;
    if (__OFADD__(v106, v105))
      goto LABEL_278;
    v108 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v308;
    if ((v108 & 1) == 0 || v107 > *(_QWORD *)(v308 + 24) >> 1)
    {
      if (v106 <= v107)
        v110 = v106 + v105;
      else
        v110 = v106;
      v109 = sub_1BA6C2E20(v108, v110, 1, v308);
    }
    v111 = *(_QWORD *)(v104 + 16);
    v308 = v109;
    if (v111)
    {
      v112 = *(_QWORD *)(v109 + 16);
      if ((*(_QWORD *)(v109 + 24) >> 1) - v112 < v105)
        goto LABEL_294;
      v113 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
      v114 = *(_QWORD *)(v323 + 72);
      v115 = v109 + v113 + v114 * v112;
      if (v104 + v113 < v115 + v114 * v105 && v115 < v104 + v113 + v114 * v105)
        goto LABEL_310;
      swift_arrayInitWithCopy();
      if (v105)
      {
        v117 = *(_QWORD *)(v308 + 16);
        v67 = __OFADD__(v117, v105);
        v118 = v117 + v105;
        if (v67)
          goto LABEL_302;
        *(_QWORD *)(v308 + 16) = v118;
      }
    }
    else if (v105)
    {
      goto LABEL_279;
    }
    v45 = v298 + 1;
    swift_bridgeObjectRelease();
    if (v45 == v297)
    {
      swift_bridgeObjectRelease_n();
      v136 = v308;
      goto LABEL_108;
    }
  }
  v310 = v46 + v318;
  v266[8] = v46;
  swift_bridgeObjectRetain();
  v47 = 0;
  v317 = MEMORY[0x1E0DEE9D8];
LABEL_21:
  v311 = v47;
  v312 = sub_1BB47BEC4();
  v48 = sub_1BB47B828();
  v320 = *(_QWORD *)(v48 + 16);
  if (!v320)
  {
    swift_bridgeObjectRelease();
    v50 = MEMORY[0x1E0DEE9D8];
    goto LABEL_68;
  }
  v319 = v48 + v318;
  v300 = v48;
  swift_bridgeObjectRetain();
  v49 = 0;
  v50 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v322 = v50;
    v321 = sub_1BB47BEC4();
    v51 = sub_1BB47B828();
    v52 = *(_QWORD *)(v51 + 16);
    if (v52)
      break;
    swift_bridgeObjectRelease();
    v54 = MEMORY[0x1E0DEE9D8];
LABEL_49:
    v327 = v54;
    v69 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v69);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v69, MEMORY[0x1E0CB0018]);
    v70 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v327 = v321;
    sub_1BB3839F8(v70);
    v71 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v72 = *(_QWORD *)(v71 + 16);
    v50 = v322;
    v73 = *(_QWORD *)(v322 + 16);
    v74 = v73 + v72;
    if (__OFADD__(v73, v72))
    {
      __break(1u);
LABEL_271:
      __break(1u);
LABEL_272:
      __break(1u);
LABEL_273:
      __break(1u);
LABEL_274:
      __break(1u);
LABEL_275:
      __break(1u);
LABEL_276:
      __break(1u);
      goto LABEL_277;
    }
    v75 = swift_isUniquelyReferenced_nonNull_native();
    if ((v75 & 1) == 0 || v74 > *(_QWORD *)(v50 + 24) >> 1)
    {
      if (v73 <= v74)
        v76 = v73 + v72;
      else
        v76 = v73;
      v50 = sub_1BA6C2E20(v75, v76, 1, v50);
    }
    if (*(_QWORD *)(v71 + 16))
    {
      v77 = *(_QWORD *)(v50 + 16);
      if ((*(_QWORD *)(v50 + 24) >> 1) - v77 < v72)
        goto LABEL_272;
      v78 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
      v79 = *(_QWORD *)(v323 + 72);
      v80 = v50 + v78 + v79 * v77;
      if (v71 + v78 < v80 + v79 * v72 && v80 < v71 + v78 + v79 * v72)
        goto LABEL_310;
      swift_arrayInitWithCopy();
      if (v72)
      {
        v82 = *(_QWORD *)(v50 + 16);
        v67 = __OFADD__(v82, v72);
        v83 = v82 + v72;
        if (v67)
          goto LABEL_273;
        *(_QWORD *)(v50 + 16) = v83;
      }
    }
    else if (v72)
    {
      goto LABEL_271;
    }
    ++v49;
    swift_bridgeObjectRelease();
    if (v49 == v320)
    {
      swift_bridgeObjectRelease_n();
LABEL_68:
      v327 = v50;
      v84 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v84);
      sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v84, MEMORY[0x1E0CB0018]);
      v85 = sub_1BB872BC8();
      swift_bridgeObjectRelease();
      v327 = v312;
      sub_1BB3839F8(v85);
      v86 = sub_1BB872BC8();
      swift_bridgeObjectRelease();
      v87 = *(_QWORD *)(v86 + 16);
      v88 = *(_QWORD *)(v317 + 16);
      v89 = v88 + v87;
      if (__OFADD__(v88, v87))
        goto LABEL_274;
      v90 = swift_isUniquelyReferenced_nonNull_native();
      v91 = v317;
      if ((v90 & 1) == 0 || v89 > *(_QWORD *)(v317 + 24) >> 1)
      {
        if (v88 <= v89)
          v92 = v88 + v87;
        else
          v92 = v88;
        v91 = sub_1BA6C2E20(v90, v92, 1, v317);
      }
      v93 = *(_QWORD *)(v86 + 16);
      v317 = v91;
      if (!v93)
      {
        if (!v87)
          goto LABEL_20;
        goto LABEL_275;
      }
      v94 = *(_QWORD *)(v91 + 16);
      if ((*(_QWORD *)(v91 + 24) >> 1) - v94 < v87)
        goto LABEL_276;
      v95 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
      v96 = *(_QWORD *)(v323 + 72);
      v97 = v91 + v95 + v96 * v94;
      if (v86 + v95 < v97 + v96 * v87 && v97 < v86 + v95 + v96 * v87)
        goto LABEL_310;
      swift_arrayInitWithCopy();
      if (v87)
      {
        v99 = *(_QWORD *)(v317 + 16);
        v67 = __OFADD__(v99, v87);
        v100 = v99 + v87;
        if (!v67)
        {
          *(_QWORD *)(v317 + 16) = v100;
          goto LABEL_20;
        }
LABEL_277:
        __break(1u);
LABEL_278:
        __break(1u);
LABEL_279:
        __break(1u);
LABEL_280:
        __break(1u);
LABEL_281:
        __break(1u);
LABEL_282:
        __break(1u);
LABEL_283:
        __break(1u);
LABEL_284:
        __break(1u);
LABEL_285:
        __break(1u);
LABEL_286:
        __break(1u);
LABEL_287:
        __break(1u);
LABEL_288:
        __break(1u);
LABEL_289:
        __break(1u);
LABEL_290:
        __break(1u);
LABEL_291:
        __break(1u);
LABEL_292:
        __break(1u);
LABEL_293:
        __break(1u);
LABEL_294:
        __break(1u);
LABEL_295:
        __break(1u);
LABEL_296:
        __break(1u);
LABEL_297:
        __break(1u);
LABEL_298:
        __break(1u);
LABEL_299:
        __break(1u);
LABEL_300:
        __break(1u);
LABEL_301:
        __break(1u);
LABEL_302:
        __break(1u);
LABEL_303:
        __break(1u);
LABEL_304:
        __break(1u);
LABEL_305:
        __break(1u);
LABEL_306:
        __break(1u);
LABEL_307:
        __break(1u);
LABEL_308:
        __break(1u);
LABEL_309:
        __break(1u);
LABEL_310:
        result = sub_1BB873F84();
        __break(1u);
        return result;
      }
LABEL_20:
      v47 = v311 + 1;
      swift_bridgeObjectRelease();
      if (v47 == v309)
      {
        swift_bridgeObjectRelease_n();
        v101 = v317;
        goto LABEL_86;
      }
      goto LABEL_21;
    }
  }
  v53 = v51 + v318;
  swift_bridgeObjectRetain();
  v54 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    sub_1BB47C23C(&v327);
    v55 = v327;
    v56 = *(_QWORD *)(v327 + 16);
    v57 = *(_QWORD *)(v54 + 16);
    v58 = v57 + v56;
    if (__OFADD__(v57, v56))
    {
      __break(1u);
LABEL_263:
      __break(1u);
      goto LABEL_264;
    }
    v59 = swift_isUniquelyReferenced_nonNull_native();
    if (v59 && v58 <= *(_QWORD *)(v54 + 24) >> 1)
    {
      if (!*(_QWORD *)(v55 + 16))
        goto LABEL_27;
    }
    else
    {
      if (v57 <= v58)
        v60 = v57 + v56;
      else
        v60 = v57;
      v54 = sub_1BA6C2E20(v59, v60, 1, v54);
      if (!*(_QWORD *)(v55 + 16))
      {
LABEL_27:
        if (v56)
          goto LABEL_263;
        goto LABEL_28;
      }
    }
    v61 = *(_QWORD *)(v54 + 16);
    if ((*(_QWORD *)(v54 + 24) >> 1) - v61 < v56)
      break;
    v62 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
    v63 = *(_QWORD *)(v323 + 72);
    v64 = v54 + v62 + v63 * v61;
    if (v55 + v62 < v64 + v63 * v56 && v64 < v55 + v62 + v63 * v56)
      goto LABEL_310;
    swift_arrayInitWithCopy();
    if (v56)
    {
      v66 = *(_QWORD *)(v54 + 16);
      v67 = __OFADD__(v66, v56);
      v68 = v66 + v56;
      if (v67)
        goto LABEL_268;
      *(_QWORD *)(v54 + 16) = v68;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    v53 += v325;
    if (!--v52)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_49;
    }
  }
  __break(1u);
LABEL_268:
  __break(1u);
LABEL_269:
  swift_bridgeObjectRelease_n();
  v251 = v307;
LABEL_255:
  v327 = v251;
  v252 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v252);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v252, MEMORY[0x1E0CB0018]);
  v253 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v327 = v295;
  sub_1BB3839F8(v253);
  v254 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v255 = *(_QWORD *)(v254 + 16);
  v322 = v254;
  if (v255)
  {
    v256 = v323;
    v257 = v324;
    v258 = v254 + ((*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80));
    v325 = *(_QWORD *)(v323 + 72);
    v259 = *(void (**)(char *, unint64_t, uint64_t))(v323 + 16);
    v260 = v296;
    v261 = v313;
    v262 = (uint64_t)v315;
    while (1)
    {
      v259(v260, v258, v257);
      v263 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v256 + 56);
      v263(v260, 0, 1, v257);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v256 + 48))(v260, 1, v257) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v256 + 32))(v261, v260, v257);
      swift_retain();
      sub_1BB86E7D0();
      swift_release();
      v264 = v326;
      if (!v326)
        v264 = MEMORY[0x1E0DEE9E8];
      v327 = v264;
      sub_1BAC75D2C(v316, v262);
      sub_1BA6B0510(v262, &qword_1ED3ADAE0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreCacheKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v259(v314, (unint64_t)v261, v257);
      v326 = v327;
      swift_retain();
      sub_1BB86E7DC();
      v256 = v323;
      swift_release();
      (*(void (**)(char *, uint64_t))(v256 + 8))(v261, v257);
      v258 += v325;
      if (!--v255)
        goto LABEL_265;
    }
  }
  else
  {
LABEL_264:
    v263 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v323 + 56);
    v260 = v296;
LABEL_265:
    v263(v260, 1, 1, v324);
  }
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80(v316, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
}

uint64_t sub_1BB44A21C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[12];
  uint64_t v37;
  _QWORD *v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v36 - v6;
  v8 = type metadata accessor for WebEmbedDatastoreUpdate();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v36[6] = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v36[4] = (char *)v36 - v12;
  MEMORY[0x1E0C80A78](v13);
  v36[3] = (char *)v36 - v14;
  MEMORY[0x1E0C80A78](v15);
  v36[2] = (char *)v36 - v16;
  MEMORY[0x1E0C80A78](v17);
  v36[1] = (char *)v36 - v18;
  MEMORY[0x1E0C80A78](v19);
  v36[0] = (char *)v36 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v36 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v36 - v25;
  v42 = *a1;
  v40 = *((unsigned __int8 *)a1 + 8);
  v27 = sub_1BB86E788();
  v28 = *(_QWORD *)(v27 + 64);
  v38 = (_QWORD *)(v27 + 64);
  v41 = v27;
  v29 = 1 << *(_BYTE *)(v27 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v36[11] = v9;
  v37 = MEMORY[0x1E0DEE9D8];
  v39 = (unint64_t)(v29 + 63) >> 6;
  v36[7] = v2;
  v36[8] = v4;
  v36[9] = v7;
  v36[10] = v26;
  if ((v30 & v28) != 0)
  {
    v31 = __clz(__rbit64(v30 & v28));
    goto LABEL_20;
  }
  if (v39 > 1)
  {
    v32 = v38[1];
    v33 = 1;
    if (v32)
      goto LABEL_19;
    v33 = 2;
    if (v39 <= 2)
      goto LABEL_24;
    v32 = v38[2];
    if (v32)
      goto LABEL_19;
    v33 = 3;
    if (v39 <= 3)
      goto LABEL_24;
    v32 = v38[3];
    if (v32)
      goto LABEL_19;
    v33 = 4;
    if (v39 <= 4)
      goto LABEL_24;
    v32 = v38[4];
    if (v32)
    {
LABEL_19:
      v31 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_20:
      sub_1BA4C2DD8(*(_QWORD *)(v41 + 56) + *(_QWORD *)(v9 + 72) * v31, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
      sub_1BA5193C4((uint64_t)v26, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
      sub_1BA4C2DD8((uint64_t)v23, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_unknownObjectRetain();
        sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      }
      else
      {
        swift_unknownObjectRetain();
      }
      __asm { BR              X8 }
    }
    v34 = 5;
    if (v39 > 5)
    {
      v32 = v38[5];
      if (v32)
      {
        v33 = 5;
        goto LABEL_19;
      }
      while (1)
      {
        v33 = v34 + 1;
        if (__OFADD__(v34, 1))
        {
          __break(1u);
          JUMPOUT(0x1BB44B054);
        }
        if (v33 >= v39)
          break;
        v32 = v38[v33];
        ++v34;
        if (v32)
          goto LABEL_19;
      }
    }
  }
LABEL_24:
  swift_release();
  return v37;
}

uint64_t sub_1BB44B088(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  dispatch_group_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *updated;
  char *v30;
  uint64_t (**v31)@<X0>(uint64_t@<X8>);
  NSObject *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  dispatch_group_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  dispatch_group_t v55;
  uint64_t v56;
  objc_super v57;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v43 - v3;
  v5 = type metadata accessor for WebEmbedDatastoreCacheKey();
  v50 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v48 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v54 = (uint64_t)&v43 - v8;
  v49 = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - v11;
  v13 = type metadata accessor for WebEmbedDataVisualization();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = dispatch_group_create();
  v55 = v17;
  v18 = *(_QWORD *)(a1 + 16);
  if (v18)
  {
    v53 = *(_QWORD *)(v56 + 40);
    v19 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v20 = *(_QWORD *)(v14 + 72);
    v43 = a1;
    swift_bridgeObjectRetain();
    v46 = v12;
    v47 = v4;
    v44 = v20;
    v45 = v16;
    do
    {
      sub_1BA4C2DD8(v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BB44BEF4((uint64_t)v16);
      sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BB86E7D0();
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      v21 = type metadata accessor for WebEmbedDatastoreUpdate();
      v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v4, 1, v21);
      sub_1BA6B0510((uint64_t)v4, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v22 == 1)
      {
        v23 = v55;
        dispatch_group_enter(v55);
        v24 = v54;
        sub_1BA4C2DD8((uint64_t)v16, v54, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        v52 = swift_allocObject();
        *(_QWORD *)(v52 + 16) = v23;
        v25 = swift_allocObject();
        swift_weakInit();
        v26 = v48;
        sub_1BA4C2DD8(v24, v48, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
        v27 = *(unsigned __int8 *)(v50 + 80);
        v51 = v27 | 7;
        v28 = swift_allocObject();
        *(_QWORD *)(v28 + 16) = v25;
        sub_1BA5193C4(v26, v28 + ((v27 + 24) & ~v27), (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
        updated = (objc_class *)type metadata accessor for WebEmbedDataSourceCacheUpdateOperation();
        v30 = (char *)objc_allocWithZone(updated);
        v31 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v30[qword_1ED3AE3B0];
        *v31 = sub_1BB44F2E4;
        v31[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v28;
        v57.receiver = v30;
        v57.super_class = updated;
        v32 = v55;
        v33 = objc_msgSendSuper2(&v57, sel_init);
        v34 = swift_allocObject();
        swift_weakInit();
        v35 = v54;
        sub_1BA4C2DD8(v54, v26, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
        v36 = (_QWORD *)swift_allocObject();
        v37 = v52;
        v36[2] = sub_1BAFC3800;
        v36[3] = v37;
        v36[4] = v34;
        v12 = v46;
        v4 = v47;
        v38 = (uint64_t)v36 + ((v27 + 40) & ~v27);
        v20 = v44;
        sub_1BA5193C4(v26, v38, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
        swift_retain();
        v16 = v45;
        sub_1BB86E0BC();
        objc_msgSend(*(id *)(v56 + 72), sel_addOperation_, v33);
        swift_release();

        sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      }
      sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v19 += v20;
      --v18;
    }
    while (v18);
    v17 = swift_bridgeObjectRelease();
  }
  MEMORY[0x1E0C80A78](v17);
  v40 = v55;
  v39 = v56;
  *(&v43 - 2) = (uint64_t)v55;
  *(&v43 - 1) = v39;
  sub_1BA84125C();
  swift_allocObject();
  v41 = sub_1BB86EA58();

  return v41;
}

void sub_1BB44B534(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *);
  char *v30;
  char *v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  void *v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;

  v57 = type metadata accessor for WebEmbedDataSourceJson();
  MEMORY[0x1E0C80A78](v57);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1BB86C8B0();
  v58 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - v7;
  v60 = sub_1BB86BC8C();
  v9 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v63 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3A8680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  v14 = sub_1BB86C67C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v45 - v20;
  v22 = *(_QWORD *)a1;
  v23 = *((_QWORD *)a1 + 1);
  v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0)
    v24 = *(_QWORD *)a1 & 0xFFFFFFFFFFFFLL;
  if (v24)
  {
    v56 = *(_QWORD *)(v1 + 32);
    v46 = v23;
    v47 = v8;
    v54 = v21;
    v49 = v17;
    v50 = v15;
    v62 = v19;
    v51 = v22;
    v25 = type metadata accessor for WebEmbedDataVisualizationDataResult(0);
    v53 = v13;
    v26 = v25;
    v27 = *(int *)(v25 + 24);
    v55 = v1;
    v28 = v9;
    v29 = *(void (**)(char *))(v15 + 16);
    v30 = v21;
    v31 = &a1[v27];
    v52 = &a1[v27];
    v32 = v62;
    v29(v30);
    v33 = (double)*((uint64_t *)a1 + 2);
    ((void (*)(char *, char *, uint64_t))v29)(v17, v31, v32);
    v34 = v60;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v63, &a1[*(int *)(v26 + 28)], v60);
    v35 = *(void **)&a1[*(int *)(v26 + 32)];
    v36 = v46;
    swift_bridgeObjectRetain();
    v48 = v35;
    v37 = v47;
    sub_1BB86C8A4();
    v38 = v58;
    v39 = v61;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v4, v37, v61);
    v40 = (int *)v57;
    *(double *)&v4[*(int *)(v57 + 20)] = v33;
    v41 = v59;
    sub_1BB86C7FC();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v4[v40[7]], v41, v39);
    v42 = &v4[v40[6]];
    *(_QWORD *)v42 = v51;
    *((_QWORD *)v42 + 1) = v36;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v4[v40[8]], v49, v62);
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v4[v40[9]], v63, v34);
    *(_QWORD *)&v4[v40[10]] = v48;
    v43 = (uint64_t)v53;
    sub_1BA5193C4((uint64_t)v4, (uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
    v44 = type metadata accessor for WebEmbedDataSourceCacheEntry();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v43, 0, 1, v44);
    sub_1BB86E7DC();
    sub_1BB44E0EC();
  }
}

uint64_t sub_1BB44B8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v27 = a3;
  v5 = sub_1BB86C67C();
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3A8680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - v11;
  v13 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v23 - v18;
  sub_1BB86E7D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1BA6B0510((uint64_t)v12, &qword_1ED3A8680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  }
  else
  {
    v24 = a2;
    sub_1BA5193C4((uint64_t)v12, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
    sub_1BA4C2DD8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
    a2 = v24;
    result = sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
    if (EnumCaseMultiPayload != 1)
      return result;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, a1, v26);
  v22 = v27;
  *v9 = a2;
  v9[1] = v22;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_retain();
  sub_1BB86E7DC();
  return sub_1BB44E0EC();
}

_QWORD *sub_1BB44BB48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  _QWORD v20[3];
  _QWORD *v21;
  char *v22;
  uint64_t v23;

  v1 = sub_1BB873450();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = v1;
  MEMORY[0x1E0C80A78](v1);
  v22 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB87342C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v7);
  v0[3] = 0;
  swift_unknownObjectWeakInit();
  sub_1BA53CC84(0, &qword_1ED3C4800, (void (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry);
  swift_allocObject();
  v0[4] = sub_1BB86E7AC();
  sub_1BA841594();
  swift_allocObject();
  v0[5] = sub_1BB86E7AC();
  v21 = v0;
  sub_1BA53CC84(0, &qword_1ED3C4810, (void (*)(uint64_t))sub_1BA81D604);
  swift_allocObject();
  v0[6] = sub_1BB86E7AC();
  v20[0] = sub_1BA657D64();
  sub_1BB872640();
  v23 = MEMORY[0x1E0DEE9D8];
  v20[2] = sub_1BA4A2870((unint64_t *)&unk_1ED3B9840, v6, MEMORY[0x1E0DEF828]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9650, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v20[1] = v8;
  sub_1BA547334((unint64_t *)&qword_1ED3B9660, (unint64_t *)&unk_1ED3B9650, v6);
  sub_1BB873BC4();
  v9 = *MEMORY[0x1E0DEF8D0];
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v11 = v22;
  v10(v22, v9, v3);
  v12 = sub_1BB87348C();
  v13 = v21;
  v21[8] = v12;
  sub_1BB872640();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1BB873BC4();
  v10(v11, v9, v3);
  v14 = (void *)sub_1BB87348C();
  v13[7] = v14;
  v15 = objc_allocWithZone(MEMORY[0x1E0CB3828]);
  v16 = v14;
  v17 = objc_msgSend(v15, sel_init);
  v18 = (void *)sub_1BB872970();
  objc_msgSend(v17, sel_setName_, v18);

  objc_msgSend(v17, sel_setUnderlyingQueue_, v16);
  objc_msgSend(v17, sel_setQualityOfService_, 25);

  v13[9] = v17;
  return v13;
}

uint64_t sub_1BB44BEF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  int64_t v57;
  int v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  int64_t v74;
  char v75;
  int64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  int64_t v89;
  char v90;
  uint64_t v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int64_t v106;
  int64_t v107;
  char v108;
  uint64_t v109;
  int64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int64_t v123;
  int64_t v124;
  char v125;
  uint64_t v126;
  int64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t (*v137)(uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int64_t v141;
  int64_t v142;
  char v143;
  uint64_t v144;
  int64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t (*v156)(uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int64_t v160;
  int64_t v161;
  char v162;
  uint64_t v163;
  int64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int64_t v179;
  int64_t v180;
  char v181;
  uint64_t v182;
  int64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t (*v194)(uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int64_t v198;
  int64_t v199;
  char v200;
  uint64_t v201;
  int64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t (*v213)(uint64_t);
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int64_t v217;
  int64_t v218;
  char v219;
  uint64_t v220;
  int64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t (*v232)(uint64_t);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int64_t v236;
  int64_t v237;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v239;
  int64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t (*v252)(uint64_t);
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  void (*v258)(char *, unint64_t, uint64_t);
  char *v259;
  char *v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  unint64_t v264;
  uint64_t result;
  _QWORD v266[11];
  uint64_t v267;
  unint64_t v268;
  uint64_t v269;
  unint64_t v270;
  unint64_t v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v274;
  unint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  unint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  unint64_t v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  char *v314;
  char *v315;
  unint64_t v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void (*v324)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;

  v2 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1E0C80A78](v2);
  v316 = (unint64_t)v266 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v315 = (char *)v266 - v5;
  v6 = sub_1BB86C67C();
  v325 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v314 = (char *)v266 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v313 = (char *)v266 - v9;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v296 = (char *)v266 - v12;
  v295 = sub_1BB47BEC4();
  v317 = a1;
  v13 = sub_1BB47B828();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    v251 = MEMORY[0x1E0DEE9D8];
    goto LABEL_255;
  }
  v15 = *(_QWORD *)(type metadata accessor for WebEmbedDataVisualization() - 8);
  v319 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v16 = v13 + v319;
  v17 = *(_QWORD *)(v15 + 72);
  v266[8] = v13;
  swift_bridgeObjectRetain();
  v18 = 0;
  v307 = MEMORY[0x1E0DEE9D8];
  v277 = v16;
  v326 = v17;
  v278 = v14;
  while (1)
  {
    v293 = v18;
    v294 = sub_1BB47BEC4();
    v19 = sub_1BB47B828();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
      break;
    swift_bridgeObjectRelease();
    v250 = MEMORY[0x1E0DEE9D8];
LABEL_234:
    v328 = v250;
    v232 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v232);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v232, MEMORY[0x1E0CB0018]);
    v233 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v328 = v294;
    sub_1BB3839F8(v233);
    v234 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v235 = *(_QWORD *)(v234 + 16);
    v236 = *(_QWORD *)(v307 + 16);
    v237 = v236 + v235;
    if (__OFADD__(v236, v235))
      goto LABEL_280;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v239 = v307;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v237 > *(_QWORD *)(v307 + 24) >> 1)
    {
      if (v236 <= v237)
        v240 = v236 + v235;
      else
        v240 = v236;
      v239 = sub_1BA6C2E20(isUniquelyReferenced_nonNull_native, v240, 1, v307);
    }
    v241 = *(_QWORD *)(v234 + 16);
    v307 = v239;
    if (v241)
    {
      v242 = *(_QWORD *)(v239 + 16);
      if ((*(_QWORD *)(v239 + 24) >> 1) - v242 < v235)
        goto LABEL_295;
      v243 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
      v244 = *(_QWORD *)(v325 + 72);
      v245 = v239 + v243 + v244 * v242;
      if (v234 + v243 < v245 + v244 * v235 && v245 < v234 + v243 + v244 * v235)
        goto LABEL_309;
      swift_arrayInitWithCopy();
      if (v235)
      {
        v247 = *(_QWORD *)(v307 + 16);
        v67 = __OFADD__(v247, v235);
        v248 = v247 + v235;
        if (v67)
          goto LABEL_303;
        *(_QWORD *)(v307 + 16) = v248;
      }
    }
    else if (v235)
    {
      goto LABEL_282;
    }
    v249 = v293 + 1;
    swift_bridgeObjectRelease();
    v18 = v249;
    if (v249 == v278)
      goto LABEL_268;
  }
  v21 = v19 + v319;
  v266[7] = v19;
  swift_bridgeObjectRetain();
  v22 = 0;
  v306 = MEMORY[0x1E0DEE9D8];
  v276 = v20;
  v275 = v21;
  while (1)
  {
    v291 = v22;
    v292 = sub_1BB47BEC4();
    v23 = sub_1BB47B828();
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
      break;
    swift_bridgeObjectRelease();
    v231 = MEMORY[0x1E0DEE9D8];
LABEL_213:
    v328 = v231;
    v213 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v213);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v213, MEMORY[0x1E0CB0018]);
    v214 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v328 = v292;
    sub_1BB3839F8(v214);
    v215 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v216 = *(_QWORD *)(v215 + 16);
    v217 = *(_QWORD *)(v306 + 16);
    v218 = v217 + v216;
    if (__OFADD__(v217, v216))
      goto LABEL_283;
    v219 = swift_isUniquelyReferenced_nonNull_native();
    v220 = v306;
    if ((v219 & 1) == 0 || v218 > *(_QWORD *)(v306 + 24) >> 1)
    {
      if (v217 <= v218)
        v221 = v217 + v216;
      else
        v221 = v217;
      v220 = sub_1BA6C2E20(v219, v221, 1, v306);
    }
    v222 = *(_QWORD *)(v215 + 16);
    v306 = v220;
    if (v222)
    {
      v223 = *(_QWORD *)(v220 + 16);
      if ((*(_QWORD *)(v220 + 24) >> 1) - v223 < v216)
        goto LABEL_296;
      v224 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
      v225 = *(_QWORD *)(v325 + 72);
      v226 = v220 + v224 + v225 * v223;
      if (v215 + v224 < v226 + v225 * v216 && v226 < v215 + v224 + v225 * v216)
        goto LABEL_309;
      swift_arrayInitWithCopy();
      if (v216)
      {
        v228 = *(_QWORD *)(v306 + 16);
        v67 = __OFADD__(v228, v216);
        v229 = v228 + v216;
        if (v67)
          goto LABEL_304;
        *(_QWORD *)(v306 + 16) = v229;
      }
    }
    else if (v216)
    {
      goto LABEL_284;
    }
    v230 = v291 + 1;
    swift_bridgeObjectRelease();
    v22 = v230;
    if (v230 == v276)
    {
      swift_bridgeObjectRelease_n();
      v250 = v306;
      goto LABEL_234;
    }
  }
  v25 = v23 + v319;
  v266[6] = v23;
  swift_bridgeObjectRetain();
  v26 = 0;
  v304 = MEMORY[0x1E0DEE9D8];
  v274 = v24;
  v273 = v25;
  while (1)
  {
    v288 = v26;
    v290 = sub_1BB47BEC4();
    v27 = sub_1BB47B828();
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
      break;
    swift_bridgeObjectRelease();
    v212 = MEMORY[0x1E0DEE9D8];
LABEL_192:
    v328 = v212;
    v194 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v194);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v194, MEMORY[0x1E0CB0018]);
    v195 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v328 = v290;
    sub_1BB3839F8(v195);
    v196 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v197 = *(_QWORD *)(v196 + 16);
    v198 = *(_QWORD *)(v304 + 16);
    v199 = v198 + v197;
    if (__OFADD__(v198, v197))
      goto LABEL_285;
    v200 = swift_isUniquelyReferenced_nonNull_native();
    v201 = v304;
    if ((v200 & 1) == 0 || v199 > *(_QWORD *)(v304 + 24) >> 1)
    {
      if (v198 <= v199)
        v202 = v198 + v197;
      else
        v202 = v198;
      v201 = sub_1BA6C2E20(v200, v202, 1, v304);
    }
    v203 = *(_QWORD *)(v196 + 16);
    v304 = v201;
    if (v203)
    {
      v204 = *(_QWORD *)(v201 + 16);
      if ((*(_QWORD *)(v201 + 24) >> 1) - v204 < v197)
        goto LABEL_297;
      v205 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
      v206 = *(_QWORD *)(v325 + 72);
      v207 = v201 + v205 + v206 * v204;
      if (v196 + v205 < v207 + v206 * v197 && v207 < v196 + v205 + v206 * v197)
        goto LABEL_309;
      swift_arrayInitWithCopy();
      if (v197)
      {
        v209 = *(_QWORD *)(v304 + 16);
        v67 = __OFADD__(v209, v197);
        v210 = v209 + v197;
        if (v67)
          goto LABEL_305;
        *(_QWORD *)(v304 + 16) = v210;
      }
    }
    else if (v197)
    {
      goto LABEL_286;
    }
    v211 = v288 + 1;
    swift_bridgeObjectRelease();
    v26 = v211;
    if (v211 == v274)
    {
      swift_bridgeObjectRelease_n();
      v231 = v304;
      goto LABEL_213;
    }
  }
  v29 = v27 + v319;
  v266[4] = v27;
  swift_bridgeObjectRetain();
  v30 = 0;
  v303 = MEMORY[0x1E0DEE9D8];
  v272 = v28;
  v271 = v29;
  while (1)
  {
    v285 = v30;
    v286 = sub_1BB47BEC4();
    v31 = sub_1BB47B828();
    v32 = *(_QWORD *)(v31 + 16);
    if (v32)
      break;
    swift_bridgeObjectRelease();
    v193 = MEMORY[0x1E0DEE9D8];
LABEL_171:
    v328 = v193;
    v175 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v175);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v175, MEMORY[0x1E0CB0018]);
    v176 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v328 = v286;
    sub_1BB3839F8(v176);
    v177 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v178 = *(_QWORD *)(v177 + 16);
    v179 = *(_QWORD *)(v303 + 16);
    v180 = v179 + v178;
    if (__OFADD__(v179, v178))
      goto LABEL_287;
    v181 = swift_isUniquelyReferenced_nonNull_native();
    v182 = v303;
    if ((v181 & 1) == 0 || v180 > *(_QWORD *)(v303 + 24) >> 1)
    {
      if (v179 <= v180)
        v183 = v179 + v178;
      else
        v183 = v179;
      v182 = sub_1BA6C2E20(v181, v183, 1, v303);
    }
    v184 = *(_QWORD *)(v177 + 16);
    v303 = v182;
    if (v184)
    {
      v185 = *(_QWORD *)(v182 + 16);
      if ((*(_QWORD *)(v182 + 24) >> 1) - v185 < v178)
        goto LABEL_298;
      v186 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
      v187 = *(_QWORD *)(v325 + 72);
      v188 = v182 + v186 + v187 * v185;
      if (v177 + v186 < v188 + v187 * v178 && v188 < v177 + v186 + v187 * v178)
        goto LABEL_309;
      swift_arrayInitWithCopy();
      if (v178)
      {
        v190 = *(_QWORD *)(v303 + 16);
        v67 = __OFADD__(v190, v178);
        v191 = v190 + v178;
        if (v67)
          goto LABEL_306;
        *(_QWORD *)(v303 + 16) = v191;
      }
    }
    else if (v178)
    {
      goto LABEL_288;
    }
    v192 = v285 + 1;
    swift_bridgeObjectRelease();
    v30 = v192;
    if (v192 == v272)
    {
      swift_bridgeObjectRelease_n();
      v212 = v303;
      goto LABEL_192;
    }
  }
  v33 = v31 + v319;
  v266[3] = v31;
  swift_bridgeObjectRetain();
  v34 = 0;
  v302 = MEMORY[0x1E0DEE9D8];
  v269 = v32;
  v268 = v33;
  while (1)
  {
    v282 = v34;
    v283 = sub_1BB47BEC4();
    v35 = sub_1BB47B828();
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
      break;
    swift_bridgeObjectRelease();
    v174 = MEMORY[0x1E0DEE9D8];
LABEL_150:
    v328 = v174;
    v156 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v156);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v156, MEMORY[0x1E0CB0018]);
    v157 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v328 = v283;
    sub_1BB3839F8(v157);
    v158 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v159 = *(_QWORD *)(v158 + 16);
    v160 = *(_QWORD *)(v302 + 16);
    v161 = v160 + v159;
    if (__OFADD__(v160, v159))
      goto LABEL_289;
    v162 = swift_isUniquelyReferenced_nonNull_native();
    v163 = v302;
    if ((v162 & 1) == 0 || v161 > *(_QWORD *)(v302 + 24) >> 1)
    {
      if (v160 <= v161)
        v164 = v160 + v159;
      else
        v164 = v160;
      v163 = sub_1BA6C2E20(v162, v164, 1, v302);
    }
    v165 = *(_QWORD *)(v158 + 16);
    v302 = v163;
    if (v165)
    {
      v166 = *(_QWORD *)(v163 + 16);
      if ((*(_QWORD *)(v163 + 24) >> 1) - v166 < v159)
        goto LABEL_299;
      v167 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
      v168 = *(_QWORD *)(v325 + 72);
      v169 = v163 + v167 + v168 * v166;
      if (v158 + v167 < v169 + v168 * v159 && v169 < v158 + v167 + v168 * v159)
        goto LABEL_309;
      swift_arrayInitWithCopy();
      if (v159)
      {
        v171 = *(_QWORD *)(v302 + 16);
        v67 = __OFADD__(v171, v159);
        v172 = v171 + v159;
        if (v67)
          goto LABEL_307;
        *(_QWORD *)(v302 + 16) = v172;
      }
    }
    else if (v159)
    {
      goto LABEL_291;
    }
    v173 = v282 + 1;
    swift_bridgeObjectRelease();
    v34 = v173;
    if (v173 == v269)
    {
      swift_bridgeObjectRelease_n();
      v193 = v302;
      goto LABEL_171;
    }
  }
  v37 = v35 + v319;
  v266[2] = v35;
  swift_bridgeObjectRetain();
  v38 = 0;
  v301 = MEMORY[0x1E0DEE9D8];
  v267 = v36;
  v266[10] = v37;
  while (1)
  {
    v280 = v38;
    v281 = sub_1BB47BEC4();
    v39 = sub_1BB47B828();
    v284 = *(_QWORD *)(v39 + 16);
    if (v284)
      break;
    swift_bridgeObjectRelease();
    v155 = MEMORY[0x1E0DEE9D8];
LABEL_129:
    v328 = v155;
    v137 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v137);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v137, MEMORY[0x1E0CB0018]);
    v138 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v328 = v281;
    sub_1BB3839F8(v138);
    v139 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v140 = *(_QWORD *)(v139 + 16);
    v141 = *(_QWORD *)(v301 + 16);
    v142 = v141 + v140;
    if (__OFADD__(v141, v140))
      goto LABEL_290;
    v143 = swift_isUniquelyReferenced_nonNull_native();
    v144 = v301;
    if ((v143 & 1) == 0 || v142 > *(_QWORD *)(v301 + 24) >> 1)
    {
      if (v141 <= v142)
        v145 = v141 + v140;
      else
        v145 = v141;
      v144 = sub_1BA6C2E20(v143, v145, 1, v301);
    }
    v146 = *(_QWORD *)(v139 + 16);
    v301 = v144;
    if (v146)
    {
      v147 = *(_QWORD *)(v144 + 16);
      if ((*(_QWORD *)(v144 + 24) >> 1) - v147 < v140)
        goto LABEL_300;
      v148 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
      v149 = *(_QWORD *)(v325 + 72);
      v150 = v144 + v148 + v149 * v147;
      if (v139 + v148 < v150 + v149 * v140 && v150 < v139 + v148 + v149 * v140)
        goto LABEL_309;
      swift_arrayInitWithCopy();
      if (v140)
      {
        v152 = *(_QWORD *)(v301 + 16);
        v67 = __OFADD__(v152, v140);
        v153 = v152 + v140;
        if (v67)
          goto LABEL_308;
        *(_QWORD *)(v301 + 16) = v153;
      }
    }
    else if (v140)
    {
      goto LABEL_292;
    }
    v154 = v280 + 1;
    swift_bridgeObjectRelease();
    v38 = v154;
    if (v154 == v267)
    {
      swift_bridgeObjectRelease_n();
      v174 = v301;
      goto LABEL_150;
    }
  }
  v40 = v39 + v319;
  v266[1] = v39;
  swift_bridgeObjectRetain();
  v41 = 0;
  v305 = MEMORY[0x1E0DEE9D8];
  v270 = v40;
  while (1)
  {
    v287 = v41;
    v289 = sub_1BB47BEC4();
    v42 = sub_1BB47B828();
    v297 = *(_QWORD *)(v42 + 16);
    if (v297)
      break;
    swift_bridgeObjectRelease();
    v136 = MEMORY[0x1E0DEE9D8];
LABEL_108:
    v328 = v136;
    v119 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v119);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v119, MEMORY[0x1E0CB0018]);
    v120 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v328 = v289;
    sub_1BB3839F8(v120);
    v121 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v122 = *(_QWORD *)(v121 + 16);
    v123 = *(_QWORD *)(v305 + 16);
    v124 = v123 + v122;
    if (__OFADD__(v123, v122))
      goto LABEL_279;
    v125 = swift_isUniquelyReferenced_nonNull_native();
    v126 = v305;
    if ((v125 & 1) == 0 || v124 > *(_QWORD *)(v305 + 24) >> 1)
    {
      if (v123 <= v124)
        v127 = v123 + v122;
      else
        v127 = v123;
      v126 = sub_1BA6C2E20(v125, v127, 1, v305);
    }
    v128 = *(_QWORD *)(v121 + 16);
    v305 = v126;
    if (v128)
    {
      v129 = *(_QWORD *)(v126 + 16);
      if ((*(_QWORD *)(v126 + 24) >> 1) - v129 < v122)
        goto LABEL_294;
      v130 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
      v131 = *(_QWORD *)(v325 + 72);
      v132 = v126 + v130 + v131 * v129;
      if (v121 + v130 < v132 + v131 * v122 && v132 < v121 + v130 + v131 * v122)
        goto LABEL_309;
      swift_arrayInitWithCopy();
      if (v122)
      {
        v134 = *(_QWORD *)(v305 + 16);
        v67 = __OFADD__(v134, v122);
        v135 = v134 + v122;
        if (v67)
          goto LABEL_302;
        *(_QWORD *)(v305 + 16) = v135;
      }
    }
    else if (v122)
    {
      goto LABEL_281;
    }
    v41 = v287 + 1;
    swift_bridgeObjectRelease();
    if (v41 == v284)
    {
      swift_bridgeObjectRelease_n();
      v155 = v305;
      goto LABEL_129;
    }
  }
  v43 = v42 + v319;
  v266[5] = v42;
  swift_bridgeObjectRetain();
  v44 = 0;
  v308 = MEMORY[0x1E0DEE9D8];
  v279 = v43;
  while (1)
  {
    v298 = v44;
    v299 = sub_1BB47BEC4();
    v45 = sub_1BB47B828();
    v309 = *(_QWORD *)(v45 + 16);
    if (v309)
      break;
    swift_bridgeObjectRelease();
    v101 = MEMORY[0x1E0DEE9D8];
LABEL_86:
    v328 = v101;
    v102 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v102);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v102, MEMORY[0x1E0CB0018]);
    v103 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v328 = v299;
    sub_1BB3839F8(v103);
    v104 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v105 = *(_QWORD *)(v104 + 16);
    v106 = *(_QWORD *)(v308 + 16);
    v107 = v106 + v105;
    if (__OFADD__(v106, v105))
      goto LABEL_277;
    v108 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v308;
    if ((v108 & 1) == 0 || v107 > *(_QWORD *)(v308 + 24) >> 1)
    {
      if (v106 <= v107)
        v110 = v106 + v105;
      else
        v110 = v106;
      v109 = sub_1BA6C2E20(v108, v110, 1, v308);
    }
    v111 = *(_QWORD *)(v104 + 16);
    v308 = v109;
    if (v111)
    {
      v112 = *(_QWORD *)(v109 + 16);
      if ((*(_QWORD *)(v109 + 24) >> 1) - v112 < v105)
        goto LABEL_293;
      v113 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
      v114 = *(_QWORD *)(v325 + 72);
      v115 = v109 + v113 + v114 * v112;
      if (v104 + v113 < v115 + v114 * v105 && v115 < v104 + v113 + v114 * v105)
        goto LABEL_309;
      swift_arrayInitWithCopy();
      if (v105)
      {
        v117 = *(_QWORD *)(v308 + 16);
        v67 = __OFADD__(v117, v105);
        v118 = v117 + v105;
        if (v67)
          goto LABEL_301;
        *(_QWORD *)(v308 + 16) = v118;
      }
    }
    else if (v105)
    {
      goto LABEL_278;
    }
    v44 = v298 + 1;
    swift_bridgeObjectRelease();
    if (v44 == v297)
    {
      swift_bridgeObjectRelease_n();
      v136 = v308;
      goto LABEL_108;
    }
  }
  v310 = v45 + v319;
  v266[9] = v45;
  swift_bridgeObjectRetain();
  v46 = 0;
  v318 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v311 = v46;
    v312 = sub_1BB47BEC4();
    v47 = sub_1BB47B828();
    v321 = *(_QWORD *)(v47 + 16);
    if (v321)
      break;
    swift_bridgeObjectRelease();
    v49 = MEMORY[0x1E0DEE9D8];
LABEL_68:
    v328 = v49;
    v84 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v84);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v84, MEMORY[0x1E0CB0018]);
    v85 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v328 = v312;
    sub_1BB3839F8(v85);
    v86 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v87 = *(_QWORD *)(v86 + 16);
    v88 = *(_QWORD *)(v318 + 16);
    v89 = v88 + v87;
    if (__OFADD__(v88, v87))
      goto LABEL_273;
    v90 = swift_isUniquelyReferenced_nonNull_native();
    v91 = v318;
    if ((v90 & 1) == 0 || v89 > *(_QWORD *)(v318 + 24) >> 1)
    {
      if (v88 <= v89)
        v92 = v88 + v87;
      else
        v92 = v88;
      v91 = sub_1BA6C2E20(v90, v92, 1, v318);
    }
    v93 = *(_QWORD *)(v86 + 16);
    v318 = v91;
    if (v93)
    {
      v94 = *(_QWORD *)(v91 + 16);
      if ((*(_QWORD *)(v91 + 24) >> 1) - v94 < v87)
        goto LABEL_275;
      v95 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
      v96 = *(_QWORD *)(v325 + 72);
      v97 = v91 + v95 + v96 * v94;
      if (v86 + v95 < v97 + v96 * v87 && v97 < v86 + v95 + v96 * v87)
        goto LABEL_309;
      swift_arrayInitWithCopy();
      if (v87)
      {
        v99 = *(_QWORD *)(v318 + 16);
        v67 = __OFADD__(v99, v87);
        v100 = v99 + v87;
        if (v67)
          goto LABEL_276;
        *(_QWORD *)(v318 + 16) = v100;
      }
    }
    else if (v87)
    {
      goto LABEL_274;
    }
    v46 = v311 + 1;
    swift_bridgeObjectRelease();
    if (v46 == v309)
    {
      swift_bridgeObjectRelease_n();
      v101 = v318;
      goto LABEL_86;
    }
  }
  v320 = v47 + v319;
  v300 = v47;
  swift_bridgeObjectRetain();
  v48 = 0;
  v49 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v324 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v49;
    v322 = v48;
    v323 = sub_1BB47BEC4();
    v50 = sub_1BB47B828();
    v51 = *(_QWORD *)(v50 + 16);
    if (v51)
      break;
    swift_bridgeObjectRelease();
    v53 = MEMORY[0x1E0DEE9D8];
LABEL_48:
    v328 = v53;
    v69 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v69);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v69, MEMORY[0x1E0CB0018]);
    v70 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v328 = v323;
    sub_1BB3839F8(v70);
    v71 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v72 = *(_QWORD *)(v71 + 16);
    v49 = (unint64_t)v324;
    v73 = *((_QWORD *)v324 + 2);
    v74 = v73 + v72;
    if (__OFADD__(v73, v72))
    {
      __break(1u);
LABEL_270:
      __break(1u);
LABEL_271:
      __break(1u);
LABEL_272:
      __break(1u);
LABEL_273:
      __break(1u);
LABEL_274:
      __break(1u);
LABEL_275:
      __break(1u);
LABEL_276:
      __break(1u);
LABEL_277:
      __break(1u);
LABEL_278:
      __break(1u);
LABEL_279:
      __break(1u);
LABEL_280:
      __break(1u);
LABEL_281:
      __break(1u);
LABEL_282:
      __break(1u);
LABEL_283:
      __break(1u);
LABEL_284:
      __break(1u);
LABEL_285:
      __break(1u);
LABEL_286:
      __break(1u);
LABEL_287:
      __break(1u);
LABEL_288:
      __break(1u);
LABEL_289:
      __break(1u);
LABEL_290:
      __break(1u);
LABEL_291:
      __break(1u);
LABEL_292:
      __break(1u);
LABEL_293:
      __break(1u);
LABEL_294:
      __break(1u);
LABEL_295:
      __break(1u);
LABEL_296:
      __break(1u);
LABEL_297:
      __break(1u);
LABEL_298:
      __break(1u);
LABEL_299:
      __break(1u);
LABEL_300:
      __break(1u);
LABEL_301:
      __break(1u);
LABEL_302:
      __break(1u);
LABEL_303:
      __break(1u);
LABEL_304:
      __break(1u);
LABEL_305:
      __break(1u);
LABEL_306:
      __break(1u);
LABEL_307:
      __break(1u);
LABEL_308:
      __break(1u);
LABEL_309:
      result = sub_1BB873F84();
      __break(1u);
      return result;
    }
    v75 = swift_isUniquelyReferenced_nonNull_native();
    if ((v75 & 1) != 0 && v74 <= *(_QWORD *)(v49 + 24) >> 1)
    {
      if (*(_QWORD *)(v71 + 16))
        goto LABEL_57;
    }
    else
    {
      if (v73 <= v74)
        v76 = v73 + v72;
      else
        v76 = v73;
      v49 = sub_1BA6C2E20(v75, v76, 1, v49);
      if (*(_QWORD *)(v71 + 16))
      {
LABEL_57:
        v77 = *(_QWORD *)(v49 + 16);
        if ((*(_QWORD *)(v49 + 24) >> 1) - v77 < v72)
          goto LABEL_271;
        v78 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
        v79 = *(_QWORD *)(v325 + 72);
        v80 = v49 + v78 + v79 * v77;
        if (v71 + v78 < v80 + v79 * v72 && v80 < v71 + v78 + v79 * v72)
          goto LABEL_309;
        swift_arrayInitWithCopy();
        if (v72)
        {
          v82 = *(_QWORD *)(v49 + 16);
          v67 = __OFADD__(v82, v72);
          v83 = v82 + v72;
          if (v67)
            goto LABEL_272;
          *(_QWORD *)(v49 + 16) = v83;
        }
        goto LABEL_24;
      }
    }
    if (v72)
      goto LABEL_270;
LABEL_24:
    v48 = v322 + 1;
    swift_bridgeObjectRelease();
    if (v48 == v321)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_68;
    }
  }
  v52 = v50 + v319;
  swift_bridgeObjectRetain();
  v53 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    sub_1BB47C23C(&v328);
    v54 = v328;
    v55 = *(_QWORD *)(v328 + 16);
    v56 = *(_QWORD *)(v53 + 16);
    v57 = v56 + v55;
    if (__OFADD__(v56, v55))
    {
      __break(1u);
LABEL_263:
      __break(1u);
      goto LABEL_264;
    }
    v58 = swift_isUniquelyReferenced_nonNull_native();
    if (!v58 || v57 > *(_QWORD *)(v53 + 24) >> 1)
    {
      if (v56 <= v57)
        v59 = v56 + v55;
      else
        v59 = v56;
      v53 = sub_1BA6C2E20(v58, v59, 1, v53);
    }
    v60 = v326;
    if (!*(_QWORD *)(v54 + 16))
    {
      if (v55)
        goto LABEL_263;
      goto LABEL_28;
    }
    v61 = *(_QWORD *)(v53 + 16);
    if ((*(_QWORD *)(v53 + 24) >> 1) - v61 < v55)
      break;
    v62 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
    v63 = *(_QWORD *)(v325 + 72);
    v64 = v53 + v62 + v63 * v61;
    if (v54 + v62 < v64 + v63 * v55 && v64 < v54 + v62 + v63 * v55)
      goto LABEL_309;
    swift_arrayInitWithCopy();
    if (v55)
    {
      v66 = *(_QWORD *)(v53 + 16);
      v67 = __OFADD__(v66, v55);
      v68 = v66 + v55;
      if (v67)
        goto LABEL_267;
      *(_QWORD *)(v53 + 16) = v68;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    v52 += v60;
    if (!--v51)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_48;
    }
  }
  __break(1u);
LABEL_267:
  __break(1u);
LABEL_268:
  swift_bridgeObjectRelease_n();
  v251 = v307;
LABEL_255:
  v328 = v251;
  v252 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3AAD58, &qword_1ED3AAD50, v252);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v252, MEMORY[0x1E0CB0018]);
  v253 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v328 = v295;
  sub_1BB3839F8(v253);
  v254 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v255 = *(_QWORD *)(v254 + 16);
  v323 = v254;
  if (v255)
  {
    v256 = v325;
    v257 = v254 + ((*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80));
    v326 = *(_QWORD *)(v325 + 72);
    v258 = *(void (**)(char *, unint64_t, uint64_t))(v325 + 16);
    v259 = v296;
    v260 = v313;
    v261 = (uint64_t)v315;
    while (1)
    {
      v258(v259, v257, v6);
      v262 = *(_QWORD **)(v256 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v262)(v259, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v256 + 48))(v259, 1, v6) == 1)
        break;
      v324 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v262;
      (*(void (**)(char *, char *, uint64_t))(v256 + 32))(v260, v259, v6);
      swift_retain();
      sub_1BB86E7D0();
      swift_release();
      v263 = v327;
      if (!v327)
        v263 = MEMORY[0x1E0DEE9E8];
      v328 = v263;
      v264 = v316;
      sub_1BA4C2DD8(v317, v316, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA9DA56C(v261, v264);
      sub_1BA4A2E80(v261, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      v258(v314, (unint64_t)v260, v6);
      v327 = v328;
      swift_retain();
      sub_1BB86E7DC();
      v256 = v325;
      swift_release();
      (*(void (**)(char *, uint64_t))(v256 + 8))(v260, v6);
      v257 += v326;
      if (!--v255)
      {
        v324(v259, 1, 1, v6);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
LABEL_264:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v325 + 56))(v296, 1, 1, v6);
  }
  return swift_bridgeObjectRelease();
}

void sub_1BB44DCD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *updated;
  char *v13;
  uint64_t (**v14)@<X0>(uint64_t@<X8>);
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;

  v21 = a2;
  v22 = a3;
  v5 = type metadata accessor for WebEmbedDatastoreCacheKey();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject();
  swift_weakInit();
  sub_1BA4C2DD8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v9;
  sub_1BA5193C4((uint64_t)v8, v11 + ((v10 + 24) & ~v10), (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  updated = (objc_class *)type metadata accessor for WebEmbedDataSourceCacheUpdateOperation();
  v13 = (char *)objc_allocWithZone(updated);
  v14 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v13[qword_1ED3AE3B0];
  *v14 = sub_1BB44F2E4;
  v14[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v11;
  v23.receiver = v13;
  v23.super_class = updated;
  v15 = objc_msgSendSuper2(&v23, sel_init);
  v16 = swift_allocObject();
  swift_weakInit();
  sub_1BA4C2DD8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  v17 = (_QWORD *)swift_allocObject();
  v19 = v21;
  v18 = v22;
  v17[2] = v21;
  v17[3] = v18;
  v17[4] = v16;
  sub_1BA5193C4((uint64_t)v8, (uint64_t)v17 + ((v10 + 40) & ~v10), (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  v20 = v15;
  sub_1BA4BEB58(v19);
  sub_1BB86E0BC();

  objc_msgSend(*(id *)(v3 + 72), sel_addOperation_, v20);
}

uint64_t sub_1BB44DEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v20 = a5;
  v7 = sub_1BB872610();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BB872664();
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1BA4D7948;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_1BA4D7950;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_71;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1BB872634();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, v8, MEMORY[0x1E0DEF510]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3B9320, (unint64_t *)&qword_1ED3B9310, v8);
  sub_1BB873BC4();
  sub_1BB873414();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v18);
  return swift_release();
}

uint64_t sub_1BB44E0EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *updated;
  char *v24;
  uint64_t (**v25)@<X0>(uint64_t@<X8>);
  id v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  objc_super v44;
  uint64_t v45;

  v1 = type metadata accessor for WebEmbedDatastoreCacheKey();
  v39 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v37 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)&v33 - v4;
  v38 = v5;
  MEMORY[0x1E0C80A78](v6);
  v35 = (uint64_t)&v33 - v7;
  v40 = v0;
  swift_retain();
  sub_1BB86E7D0();
  result = swift_release();
  if (!v45)
    return result;
  v9 = 0;
  v41 = v45;
  v10 = *(_QWORD *)(v45 + 56);
  v33 = v45 + 56;
  v11 = 1 << *(_BYTE *)(v45 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v34 = (unint64_t)(v11 + 63) >> 6;
  v15 = (uint64_t)v36;
  v14 = (uint64_t)v37;
  v16 = v40;
  while (1)
  {
    if (v13)
    {
      v42 = (v13 - 1) & v13;
      v43 = v9;
      v17 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_6;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v29 >= v34)
      return swift_release();
    v30 = *(_QWORD *)(v33 + 8 * v29);
    v31 = v9 + 1;
    if (!v30)
    {
      v31 = v9 + 2;
      if (v9 + 2 >= v34)
        return swift_release();
      v30 = *(_QWORD *)(v33 + 8 * v31);
      if (!v30)
      {
        v31 = v9 + 3;
        if (v9 + 3 >= v34)
          return swift_release();
        v30 = *(_QWORD *)(v33 + 8 * v31);
        if (!v30)
          break;
      }
    }
LABEL_21:
    v42 = (v30 - 1) & v30;
    v43 = v31;
    v17 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_6:
    v18 = v39;
    v19 = v35;
    sub_1BA4C2DD8(*(_QWORD *)(v41 + 48) + *(_QWORD *)(v39 + 72) * v17, v35, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1BA5193C4(v19, v15, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    v20 = swift_allocObject();
    swift_weakInit();
    sub_1BA4C2DD8(v15, v14, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    v21 = *(unsigned __int8 *)(v18 + 80);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v20;
    sub_1BA5193C4(v14, v22 + ((v21 + 24) & ~v21), (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    updated = (objc_class *)type metadata accessor for WebEmbedDataSourceCacheUpdateOperation();
    v24 = (char *)objc_allocWithZone(updated);
    v25 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v24[qword_1ED3AE3B0];
    *v25 = sub_1BB44F2E4;
    v25[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v22;
    v44.receiver = v24;
    v44.super_class = updated;
    v26 = objc_msgSendSuper2(&v44, sel_init);
    v27 = swift_allocObject();
    swift_weakInit();
    sub_1BA4C2DD8(v15, v14, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v27;
    sub_1BA5193C4(v14, (uint64_t)v28 + ((v21 + 40) & ~v21), (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    sub_1BB86E0BC();
    objc_msgSend(*(id *)(v16 + 72), sel_addOperation_, v26);

    result = sub_1BA4A2E80(v15, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
    v13 = v42;
    v9 = v43;
  }
  v32 = v9 + 4;
  if (v9 + 4 >= v34)
    return swift_release();
  v30 = *(_QWORD *)(v33 + 8 * v32);
  if (v30)
  {
    v31 = v9 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v34)
      return swift_release();
    v30 = *(_QWORD *)(v33 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BB44E4AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t Strong;
  _QWORD *v17;
  unint64_t v18;
  _BYTE *v19;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v33 = a2;
  v32 = type metadata accessor for WebEmbedDatastoreUpdate();
  MEMORY[0x1E0C80A78](v32);
  v34 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v31 - v14);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v17 = (_QWORD *)Strong;
    sub_1BA4C2DD8(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BA5193C4((uint64_t)v15, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
      v18 = *(_QWORD *)&v6[*(int *)(v4 + 24)];
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    }
    else
    {
      v36 = *v15;
      SportsDataVisualization.urlDataSources.getter();
      v18 = v21;
      swift_release();
    }
    swift_retain();
    v22 = v35;
    v23 = sub_1BB44F52C(v18, v17);
    swift_release();
    v24 = v23[2];
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      v25 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v25 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v24 == v25)
    {
      sub_1BA4C2DD8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v26 = sub_1BB47B828();
      if (*(_QWORD *)(v26 + 16))
      {
        swift_retain();
        sub_1BB44F98C(v26, v17);
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v28 = v34;
      sub_1BA4C2DD8((uint64_t)v12, v34, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v29 = sub_1BAB2FC70((uint64_t)v9, (uint64_t)v23);
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (v22)
      {
        sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      }
      else
      {
        v30 = v33;
        *(_QWORD *)(v28 + *(int *)(v32 + 20)) = v29;
        sub_1BA5193C4(v28, v30, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BB44F4E8();
      swift_allocError();
      *v27 = 0;
      swift_willThrow();
    }
    return swift_release();
  }
  else
  {
    sub_1BB44F4E8();
    swift_allocError();
    *v19 = 1;
    return swift_willThrow();
  }
}

void sub_1BB44E864(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  uint64_t Strong;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v50)(void);
  uint64_t (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char updated;
  uint64_t (*v58)(uint64_t, uint64_t);
  uint64_t (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void (*v66)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(void);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  unint64_t v80;

  v76 = a3;
  v77 = a5;
  v7 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1E0C80A78](v7);
  v70 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB44F300();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v69 = (uint64_t)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v68 = (uint64_t)&v66 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v66 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v66 - v21;
  v75 = type metadata accessor for WebEmbedDatastoreUpdate();
  v73 = *(_QWORD *)(v75 - 8);
  v23 = *(_QWORD *)(v73 + 64);
  MEMORY[0x1E0C80A78](v75);
  v71 = (uint64_t)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v74 = (uint64_t)&v66 - v25;
  sub_1BA4B07F0(0, &qword_1ED3AD1C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v26);
  v28 = (void **)((char *)&v66 - v27);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_6;
  v30 = Strong;
  v72 = a2;
  sub_1BB44F378(a1, (uint64_t)v28, &qword_1ED3AD1C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = *v28;
    if (qword_1ED3A6A08 != -1)
      swift_once();
    v32 = (id)qword_1ED476638;
    v33 = sub_1BB8732F4();
    sub_1BA7AA598();
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1BB87A390;
    v35 = sub_1BAC73668();
    v37 = v36;
    v38 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
    v39 = sub_1BA6A2D8C();
    *(_QWORD *)(v34 + 64) = v39;
    *(_QWORD *)(v34 + 32) = v35;
    *(_QWORD *)(v34 + 40) = v37;
    v79 = 0;
    v80 = 0xE000000000000000;
    v78 = v31;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    sub_1BB873E34();
    v40 = v79;
    v41 = v80;
    *(_QWORD *)(v34 + 96) = v38;
    *(_QWORD *)(v34 + 104) = v39;
    *(_QWORD *)(v34 + 72) = v40;
    *(_QWORD *)(v34 + 80) = v41;
    sub_1BB86EF44("Web embed datastore cache failed to create a datastore for %{public}@, error=%{public}@", 87, 2, &dword_1BA493000, v32, v33, v34);

    swift_bridgeObjectRelease();
    swift_release();

    a2 = v72;
LABEL_6:
    if (!a2)
      return;
    goto LABEL_7;
  }
  v42 = (uint64_t)v28;
  v43 = v74;
  sub_1BA5193C4(v42, v74, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  v67 = v30;
  sub_1BB86E7D0();
  sub_1BA4C2DD8(v43, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  v44 = v73;
  v45 = (uint64_t)v12;
  v46 = v75;
  v66 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56);
  v66(v19, 0, 1, v75);
  v47 = v45 + *(int *)(v10 + 48);
  v48 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BB44F378((uint64_t)v22, v45, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BB44F378((uint64_t)v19, v47, (unint64_t *)&unk_1ED3A7370, v48);
  v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  if (v49(v45, 1, v46) == 1)
  {
    v50 = MEMORY[0x1E0DEB940];
    sub_1BA6B0510((uint64_t)v19, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v51 = (uint64_t (*)(uint64_t, uint64_t))v50;
    v43 = v74;
    v52 = v75;
    sub_1BA6B0510((uint64_t)v22, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, v51);
    v53 = v49(v47, 1, v52);
    v54 = v67;
    if (v53 == 1)
    {
      sub_1BA6B0510(v45, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  v55 = v68;
  sub_1BB44F378(v45, v68, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v49(v47, 1, v46) == 1)
  {
    sub_1BA6B0510((uint64_t)v19, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, v48);
    sub_1BA6B0510((uint64_t)v22, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, v48);
    sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
    v54 = v67;
    v52 = v75;
LABEL_14:
    sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))sub_1BB44F300);
    goto LABEL_18;
  }
  v56 = v71;
  sub_1BA5193C4(v47, v71, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  updated = _s8NewsFeed23WebEmbedDatastoreUpdateV2eeoiySbAC_ACtFZ_0(v55, v56);
  sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  v58 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA6B0510((uint64_t)v19, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BA6B0510((uint64_t)v22, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, v58);
  sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  v59 = v58;
  v43 = v74;
  sub_1BA6B0510(v45, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, v59);
  v54 = v67;
  v52 = v75;
  if ((updated & 1) != 0)
  {
LABEL_16:
    sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
    swift_release();
    a2 = v72;
    if (!v72)
      return;
LABEL_7:
    a2();
    return;
  }
LABEL_18:
  sub_1BA4C2DD8(v77, v70, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  v60 = v69;
  sub_1BA4C2DD8(v43, v69, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  v66((char *)v60, 0, 1, v52);
  sub_1BB86E7DC();
  v61 = MEMORY[0x1BCCE5D40](v54 + 16);
  if (v61)
  {
    v62 = v61;
    v63 = v71;
    sub_1BA4C2DD8(v43, v71, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
    v64 = (*(unsigned __int8 *)(v73 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = v62;
    sub_1BA5193C4(v63, v65 + v64, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
    swift_retain();
    sub_1BB86ED4C();
    swift_release();
    swift_release();
  }
  swift_release();
  a2 = v72;
  sub_1BA4A2E80(v43, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  if (a2)
    goto LABEL_7;
}

uint64_t sub_1BB44EFC4()
{
  id *v0;

  sub_1BA8FD860((uint64_t)(v0 + 2));
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WebEmbedDataSourceCacheUpdateOperation()
{
  uint64_t result;

  result = qword_1ED3ACA78;
  if (!qword_1ED3ACA78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB44F054()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BB44F0A0(void (*a1)(_BYTE *))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  sub_1BA4B07F0(0, &qword_1ED3AD1C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v11[-v4];
  v6 = type metadata accessor for WebEmbedDatastoreUpdate();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(double))(v1 + qword_1ED3AE3B0))(v7);
  sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
  swift_storeEnumTagMultiPayload();
  a1(v5);
  sub_1BA6B0510((uint64_t)v5, &qword_1ED3AD1C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreUpdate);
}

void sub_1BB44F230()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BB44F25C()
{
  return swift_release();
}

uint64_t sub_1BB44F270()
{
  return swift_release();
}

uint64_t sub_1BB44F288()
{
  return type metadata accessor for WebEmbedDataSourceCacheUpdateOperation();
}

uint64_t sub_1BB44F290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB44DEC0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1BB44F298()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB44F2BC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB44F2E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB44FDF0(a1);
}

void sub_1BB44F300()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A7380)
  {
    sub_1BA4B07F0(255, (unint64_t *)&unk_1ED3A7370, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A7380);
  }
}

uint64_t sub_1BB44F378(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;

  sub_1BA4B07F0(0, a3, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreUpdate, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BB44F3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WebEmbedDatastoreUpdate() - 8) + 80);
  swift_release();
  type metadata accessor for WebEmbedDataVisualization();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v2 = v0 + ((v1 + 24) & ~v1) + *(int *)(type metadata accessor for GenericDataVisualization() + 20);
    v3 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB44F4B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WebEmbedDatastoreUpdate() - 8) + 80);
  return sub_1BAC757EC(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

unint64_t sub_1BB44F4E8()
{
  unint64_t result;

  result = qword_1EF2C4348;
  if (!qword_1EF2C4348)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92CD28, &type metadata for WebEmbedDataSourceCacheError);
    atomic_store(result, (unint64_t *)&qword_1EF2C4348);
  }
  return result;
}

_QWORD *sub_1BB44F52C(unint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;

  v3 = v2;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3A8680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - v8;
  v45 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  v10 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v41 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, qword_1ED3A7AB0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreProperty, v6);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v37 - v13);
  v46 = type metadata accessor for WebEmbedDatastoreProperty();
  v15 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v44 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v40 = (uint64_t)&v37 - v18;
  v19 = a1;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    v20 = sub_1BB873F30();
    if (v20)
      goto LABEL_3;
  }
  else
  {
    v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
    {
LABEL_3:
      v37 = v3;
      v42 = a2[4];
      v43 = v19 & 0xC000000000000001;
      a2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v3 = 4;
      v38 = v20;
      v39 = v10;
      v47 = v15;
      while (1)
      {
        v15 = v3 - 4;
        if (v43)
        {
          v21 = MEMORY[0x1BCCE4630](v3 - 4, v19);
          v22 = v3 - 3;
          if (__OFADD__(v15, 1))
            goto LABEL_21;
        }
        else
        {
          v21 = *(_QWORD *)(v19 + 8 * v3);
          swift_retain();
          v22 = v3 - 3;
          if (__OFADD__(v15, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        v48 = v22;
        v49 = a2;
        sub_1BB86E7D0();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v45) == 1)
        {
          sub_1BA6B0510((uint64_t)v9, &qword_1ED3A8680, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceCacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          v24 = v46;
          v23 = v47;
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v14, 1, 1, v46);
        }
        else
        {
          v25 = v14;
          v26 = v41;
          sub_1BA5193C4((uint64_t)v9, v41, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
          v27 = v9;
          v28 = v19;
          v29 = *(_QWORD *)(v21 + 32);
          v30 = *(_QWORD *)(v21 + 40);
          v31 = (uint64_t)v25 + *(int *)(v46 + 20);
          v32 = v26;
          v14 = v25;
          v24 = v46;
          sub_1BA5193C4(v32, v31, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
          *v14 = v29;
          v14[1] = v30;
          v19 = v28;
          v9 = v27;
          v10 = v39;
          v23 = v47;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v14, 0, 1, v24);
          v20 = v38;
          swift_bridgeObjectRetain();
        }
        swift_release();
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v14, 1, v24) == 1)
        {
          sub_1BA6B0510((uint64_t)v14, qword_1ED3A7AB0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreProperty, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          a2 = v49;
        }
        else
        {
          v33 = v40;
          sub_1BA5193C4((uint64_t)v14, v40, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
          sub_1BA5193C4(v33, v44, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
          a2 = v49;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            a2 = (_QWORD *)sub_1BB393950(0, a2[2] + 1, 1, (unint64_t)a2);
          v35 = a2[2];
          v34 = a2[3];
          if (v35 >= v34 >> 1)
            a2 = (_QWORD *)sub_1BB393950(v34 > 1, v35 + 1, 1, (unint64_t)a2);
          a2[2] = v35 + 1;
          sub_1BA5193C4(v44, (uint64_t)a2+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v35, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
        }
        ++v3;
        if (v48 == v20)
        {
          swift_bridgeObjectRelease();
          return a2;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1BB44F98C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v21 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v21);
  v20 = (uint64_t)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v9 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v22 = *(_QWORD *)(v5 + 72);
  v19[1] = a1;
  swift_bridgeObjectRetain();
  v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1BA4C2DD8(v9, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() != 1)
      __asm { BR              X10 }
    v10 = v20;
    sub_1BA5193C4((uint64_t)v7, v20, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v11 = *(_QWORD *)(v10 + *(int *)(v21 + 24));
    swift_bridgeObjectRetain();
    sub_1BA4A2E80(v10, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    swift_retain();
    v12 = sub_1BB44F52C(v11, a2);
    swift_release();
    v13 = v12[2];
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v13 == v14)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v15 = v24;
      else
        v15 = sub_1BB393964(0, v24[2] + 1, 1, v24);
      v17 = v15[2];
      v16 = v15[3];
      if (v17 >= v16 >> 1)
        v15 = sub_1BB393964((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
      v15[2] = v17 + 1;
      v24 = v15;
      v15[v17 + 4] = v12;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v9 += v22;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1BB44FCEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WebEmbedDatastoreCacheKey() - 8) + 80);
  swift_release();
  type metadata accessor for WebEmbedDataVisualization();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v2 = v0 + ((v1 + 24) & ~v1) + *(int *)(type metadata accessor for GenericDataVisualization() + 20);
    v3 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1BB44FDF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WebEmbedDatastoreCacheKey() - 8) + 80);
  return sub_1BB44E4AC(v1 + ((v3 + 24) & ~v3), a1);
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WebEmbedDatastoreCacheKey() - 8) + 80);
  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  type metadata accessor for WebEmbedDataVisualization();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v2 = v0 + ((v1 + 40) & ~v1) + *(int *)(type metadata accessor for GenericDataVisualization() + 20);
    v3 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1BB44FF24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WebEmbedDatastoreCacheKey() - 8) + 80);
  sub_1BB44E864(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_1BB44FF6C(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1BB86C8B0();
  v32 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v11 = v1[3];
  v23 = v1[2];
  v24 = v9;
  v13 = v1[4];
  v12 = v1[5];
  v14 = v1[6];
  sub_1BA739250(v10);
  sub_1BB614A64(a1, v10);
  sub_1BA6F5D74(v10);
  if (!v2)
  {
    v20 = v12;
    v21 = v13;
    v22 = v11;
    v16 = v23;
    v15 = v24;
    v17 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v6, 1, v25) == 1)
    {
      sub_1BA76D750((uint64_t)v6);
      v14 = type metadata accessor for FormatLayoutError();
      sub_1BA689E84();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    else
    {
      v18 = v32;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v8, v6, v17);
      v26 = v15;
      v27 = v16;
      v28 = v22;
      v29 = v21;
      v30 = v20;
      v31 = v14;
      v14 = FormatDateFormat.format(_:)((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v17);
    }
  }
  return v14;
}

uint64_t sub_1BB450144@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeDateTimeFormat.init(from:)(a1, a2);
}

uint64_t sub_1BB450158(_QWORD *a1)
{
  return FormatTextNodeDateTimeFormat.encode(to:)(a1);
}

BOOL _s8NewsFeed022FormatTextNodeDateTimeC0V2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[6];
  uint64_t v19[6];

  v2 = a1[3];
  v16 = a1[2];
  v17 = a1[1];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[6];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  v11 = a2[4];
  v10 = a2[5];
  v12 = a2[6];
  v19[0] = *a1;
  v18[0] = v6;
  static FormatDateTime.== infix(_:_:)((uint64_t)v19);
  if ((v13 & 1) != 0)
  {
    v19[0] = v17;
    v19[1] = v16;
    v19[2] = v2;
    v19[3] = v3;
    v19[4] = v4;
    v19[5] = v5;
    v18[0] = v7;
    v18[1] = v8;
    v18[2] = v9;
    v18[3] = v11;
    v18[4] = v10;
    v18[5] = v12;
    return _s8NewsFeed010FormatDateC0O2eeoiySbAC_ACtFZ_0(v19, v18);
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1BB450224(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB450248();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB450248()
{
  unint64_t result;

  result = qword_1EF2C4350;
  if (!qword_1EF2C4350)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeDateTimeFormat, &type metadata for FormatTextNodeDateTimeFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2C4350);
  }
  return result;
}

unint64_t sub_1BB45028C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEC46B4();
  a1[2] = sub_1BAEE9C40();
  result = sub_1BB4502C0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4502C0()
{
  unint64_t result;

  result = qword_1EF2C4358;
  if (!qword_1EF2C4358)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeDateTimeFormat, &type metadata for FormatTextNodeDateTimeFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2C4358);
  }
  return result;
}

uint64_t destroy for FormatTextNodeDateTimeFormat(unint64_t *a1)
{
  uint64_t result;

  sub_1BA6F5D74(*a1);
  result = a1[3];
  if ((unint64_t)(result - 1) >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FormatTextNodeDateTimeFormat(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  sub_1BA739250(*(_QWORD *)a2);
  *(_QWORD *)a1 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  if ((unint64_t)(v5 - 1) >= 2)
  {
    *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v7 = *(_QWORD *)(a2 + 40);
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v6;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for FormatTextNodeDateTimeFormat(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)a2;
  sub_1BA739250(*(_QWORD *)a2);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v4;
  sub_1BA6F5D74(v5);
  v6 = (_OWORD *)(a1 + 8);
  v7 = (_OWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 24) - 1;
  if ((unint64_t)(*(_QWORD *)(a1 + 24) - 1) >= 2)
  {
    if (v8 >= 2)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BB450528(a1 + 8);
      v12 = *(_OWORD *)(a2 + 24);
      v11 = *(_OWORD *)(a2 + 40);
      *v6 = *v7;
      *(_OWORD *)(a1 + 24) = v12;
      *(_OWORD *)(a1 + 40) = v11;
    }
  }
  else if (v8 >= 2)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v7;
    v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v10;
    *v6 = v9;
  }
  return a1;
}

uint64_t sub_1BB450528(uint64_t a1)
{
  destroy for FormatDateFormat.Custom();
  return a1;
}

uint64_t assignWithTake for FormatTextNodeDateTimeFormat(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1BA6F5D74(v4);
  if ((unint64_t)(*(_QWORD *)(a1 + 24) - 1) >= 2)
  {
    v5 = *(_QWORD *)(a2 + 24);
    if ((unint64_t)(v5 - 1) >= 2)
    {
      *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v7 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v7;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BB450528(a1 + 8);
  }
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatTextNodeDateTimeFormat(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 2);
  v6 = v4 - 2;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatTextNodeDateTimeFormat(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextNodeDateTimeFormat()
{
  return &type metadata for FormatTextNodeDateTimeFormat;
}

uint64_t FormatJsonConfig.keys.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatJsonConfig.keys.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatJsonConfig.keys.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BB45079C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v38;

  v36 = a1;
  v38 = a2;
  v35 = type metadata accessor for FormatJsonKeyValue();
  v37 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v5 = (unint64_t *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v8 = (unint64_t *)((char *)&v34 - v7);
  v9 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_9;
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  v11 = sub_1BB874608();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    v16 = MEMORY[0x1E0DEE9D8];
    goto LABEL_14;
  }
  v34 = v3;
  v14 = ~v12;
  while ((*(_BYTE *)(*(_QWORD *)(v10 + 48) + v13) & 1) != 0)
  {
    v15 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
      goto LABEL_11;
    v13 = (v13 + 1) & v14;
    if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v16 = MEMORY[0x1E0DEE9D8];
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  v17 = v36;
  sub_1BB86DD80();
  swift_retain();
  swift_release();
  v18 = sub_1BB62E78C();
  swift_release();
  swift_retain();
  v19 = sub_1BB4519EC(v18, v17);
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)((char *)v8 + *(int *)(v35 + 20)) = v19;
  type metadata accessor for FormatJson();
  swift_storeEnumTagMultiPayload();
  *v8 = 0x736E6F6974706FLL;
  v8[1] = 0xE700000000000000;
  v16 = sub_1BB38E844(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v21 = *(_QWORD *)(v16 + 16);
  v20 = *(_QWORD *)(v16 + 24);
  v22 = v21 + 1;
  if (v21 >= v20 >> 1)
  {
    v34 = v21 + 1;
    v33 = sub_1BB38E844(v20 > 1, v21 + 1, 1, v16);
    v22 = v34;
    v16 = v33;
  }
  *(_QWORD *)(v16 + 16) = v22;
  sub_1BA5193C4((uint64_t)v8, v16+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
LABEL_14:
  v23 = *v9;
  if (!*(_QWORD *)(*v9 + 16))
  {
LABEL_21:
    v29 = v38;
    goto LABEL_28;
  }
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  v24 = sub_1BB874608();
  v25 = -1 << *(_BYTE *)(v23 + 32);
  v26 = v24 & ~v25;
  if (((*(_QWORD *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v27 = ~v25;
  while (*(_BYTE *)(*(_QWORD *)(v23 + 48) + v26) != 1)
  {
    v28 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      goto LABEL_23;
    v26 = (v26 + 1) & v27;
    if (((*(_QWORD *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
      goto LABEL_20;
  }
  swift_bridgeObjectRelease();
LABEL_23:
  swift_bridgeObjectRelease();
  sub_1BB450C88(v36, (_QWORD *)((char *)v5 + *(int *)(v35 + 20)));
  *v5 = 0x73676E69646E6962;
  v5[1] = 0xE800000000000000;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_1BB38E844(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
  v29 = v38;
  v31 = *(_QWORD *)(v16 + 16);
  v30 = *(_QWORD *)(v16 + 24);
  if (v31 >= v30 >> 1)
    v16 = sub_1BB38E844(v30 > 1, v31 + 1, 1, v16);
  *(_QWORD *)(v16 + 16) = v31 + 1;
  sub_1BA5193C4((uint64_t)v5, v16+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
LABEL_28:
  *v29 = v16;
  type metadata accessor for FormatJson();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB450C88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;

  v22 = a2;
  v3 = type metadata accessor for FormatJson();
  MEMORY[0x1E0C80A78](v3);
  v5 = (unint64_t *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB452170(0, (unint64_t *)&unk_1ED3AF820, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = type metadata accessor for FormatJsonKeyValue();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87A390;
  v11 = (_QWORD *)(v10 + v9);
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1BA85CB34(v12);
  swift_bridgeObjectRelease();
  swift_retain();
  v14 = sub_1BB451CE0((uint64_t)v13, a1);
  swift_release();
  swift_release();
  *v5 = v14;
  swift_storeEnumTagMultiPayload();
  *v11 = 0x70756F7267;
  v11[1] = 0xE500000000000000;
  sub_1BA5193C4((uint64_t)v5, (uint64_t)v11 + *(int *)(v6 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  v15 = (_QWORD *)((char *)v11 + v8);
  v23 = MEMORY[0x1E0DEE9E8];
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = sub_1BB32D9EC(v16, v17);
  swift_retain();
  v19 = sub_1BB451F24(v18, &v23, a1);
  swift_bridgeObjectRelease();
  swift_release();
  *v5 = v19;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  *v15 = 1835365481;
  v15[1] = 0xE400000000000000;
  sub_1BA5193C4((uint64_t)v5, (uint64_t)v15 + *(int *)(v6 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  *v22 = v10;
  return swift_storeEnumTagMultiPayload();
}

void sub_1BB450EC8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v2 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v2);
  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v5 = (char *)sub_1BB450F84 + 4 * byte_1BB919770[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB450F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = type metadata accessor for FormatJsonKeyValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
  return sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
}

uint64_t sub_1BB451304@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v19 = a3;
  v20 = a4;
  v6 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - v10;
  sub_1BA4C010C(a1, (uint64_t)&v21);
  sub_1BA7BC210(&v21, (uint64_t)v11);
  v12 = *a2;
  swift_bridgeObjectRetain();
  FeedItem.kind.getter();
  v13 = v21;
  v14 = v22;
  v15 = sub_1BAB0CB8C(v21, v22, v12);
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v13, v14);
  if ((v15 & 1) == 0)
  {
    FeedItem.kind.getter();
    sub_1BA9D742C(&v21, v23, v24);
    sub_1BA6E0CBC(v21, v22);
    sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v8, type metadata accessor for FeedItem);
    v17 = (char *)&loc_1BB45147C + 4 * byte_1BB91977D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FeedItem);
  v16 = type metadata accessor for FormatJsonKeyValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v20, 1, 1, v16);
}

uint64_t FormatJsonConfig.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatJsonConfig.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB45180C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB4518A4(&qword_1EF2C4360, (uint64_t)&protocol conformance descriptor for FormatJsonConfig);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB451840(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB4518A4(&qword_1ED3C7478, (uint64_t)&protocol conformance descriptor for FormatJsonConfig);
  a1[2] = sub_1BB4518A4(&qword_1ED3A59F0, (uint64_t)&protocol conformance descriptor for FormatJsonConfig);
  result = sub_1BB4518A4(qword_1EF2C4368, (uint64_t)&protocol conformance descriptor for FormatJsonConfig);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB4518A4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatJsonConfig();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB4518E0(_QWORD *a1)
{
  return FormatJsonConfig.encode(to:)(a1);
}

uint64_t sub_1BB451900(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA858CBC(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1BB451994@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatJsonConfig()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1BB4519EC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v38 = a2;
  v5 = type metadata accessor for FormatScopedOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v37 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatOption();
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v8);
  v35 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v31 - v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v31 - v14);
  MEMORY[0x1E0C80A78](v16);
  v32 = (uint64_t)&v31 - v17;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return MEMORY[0x1E0DEE9D8];
  v19 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v36 = *(_QWORD *)(v6 + 72);
  v31 = a1;
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x1E0DEE9D8];
  do
  {
    v21 = v37;
    sub_1BA4C2DD8(v19, v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatScopedOption);
    sub_1BA5193C4(v21, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v22 = *v12;
    v23 = v12[1];
    swift_bridgeObjectRetain();
    sub_1BA711ECC();
    if (v3)
    {
      swift_bridgeObjectRelease();

      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v3 = 0;
    }
    else
    {
      v24 = v39;
      *v15 = v22;
      v15[1] = v23;
      v15[2] = v24;
      v15[3] = 1;
      v25 = (char *)v15 + *(int *)(v34 + 28);
      v26 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v27 = v32;
      sub_1BA5193C4((uint64_t)v15, v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BA5193C4(v27, v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1BA7AD174(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v29 = *(_QWORD *)(v20 + 16);
      v28 = *(_QWORD *)(v20 + 24);
      if (v29 >= v28 >> 1)
        v20 = sub_1BA7AD174(v28 > 1, v29 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v29 + 1;
      sub_1BA5193C4(v35, v20+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    }
    v19 += v36;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t sub_1BB451CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  sub_1BB452170(0, &qword_1ED3AF790, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v19 - v6;
  v21 = type metadata accessor for FormatJsonKeyValue();
  v8 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v20 = (uint64_t)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v19 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v14 = (_QWORD *)(a1 + 32);
  v19[1] = a1;
  swift_bridgeObjectRetain();
  v15 = MEMORY[0x1E0DEE9D8];
  v19[2] = a2;
  do
  {
    sub_1BB450EC8(v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v21) == 1)
    {
      sub_1BB1F607C((uint64_t)v7);
    }
    else
    {
      sub_1BA5193C4((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      sub_1BA5193C4((uint64_t)v12, v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_1BB38E844(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      if (v17 >= v16 >> 1)
        v15 = sub_1BB38E844(v16 > 1, v17 + 1, 1, v15);
      *(_QWORD *)(v15 + 16) = v17 + 1;
      sub_1BA5193C4(v20, v15+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
    }
    v14 += 5;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_1BB451F24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;

  v24 = a2;
  sub_1BB452170(0, &qword_1ED3AF790, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - v7;
  v23 = type metadata accessor for FormatJsonKeyValue();
  v9 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v22 = (uint64_t)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return MEMORY[0x1E0DEE9D8];
  v15 = a1 + 32;
  v20 = a1;
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x1E0DEE9D8];
  v21 = a3;
  do
  {
    sub_1BB451304(v15, v24, a3, (uint64_t)v8);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v23) == 1)
    {
      sub_1BB1F607C((uint64_t)v8);
    }
    else
    {
      sub_1BA5193C4((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      sub_1BA5193C4((uint64_t)v13, v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1BB38E844(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v18 = *(_QWORD *)(v16 + 16);
      v17 = *(_QWORD *)(v16 + 24);
      if (v18 >= v17 >> 1)
        v16 = sub_1BB38E844(v17 > 1, v18 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v18 + 1;
      sub_1BA5193C4(v22, v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      a3 = v21;
    }
    v15 += 40;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v16;
}

void sub_1BB452170(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for FormatJsonKeyValue();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void FeedGroupKnobsRuleList.value(for:)()
{
  type metadata accessor for FeedGroupKnobsRuleList.Selector();
}

uint64_t sub_1BB452220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v3);
  v4 = sub_1BB873168();
  if ((v4 & 1) != 0)
    return swift_bridgeObjectRetain();
  *(_QWORD *)(v2 - 88) = v0;
  *(_QWORD *)(v2 - 160) = *(_QWORD *)(v1 + 16);
  MEMORY[0x1E0C80A78](v4);
  sub_1BB872EE0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v3);
  sub_1BB872C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v2 - 152);
}

void FeedGroupKnobsRuleList.encode(to:)()
{
  type metadata accessor for FeedGroupKnobsRuleList.CodingKeys();
}

void sub_1BB452388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v14 - 216) = MEMORY[0x1BCCE5B24](&unk_1BB919C28, a1);
  v15 = sub_1BB8741D0();
  *(_QWORD *)(v14 - 200) = v15;
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v14 - 208) = (char *)&a9 - v16;
  *(_QWORD *)(v14 - 192) = v11;
  *(_QWORD *)(v14 - 184) = v9;
  *(_QWORD *)(v14 - 72) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v14 - 144) = v11;
  *(_QWORD *)(v14 - 136) = v11;
  *(_QWORD *)(v14 - 128) = v12;
  *(_QWORD *)(v14 - 120) = v13;
  *(_QWORD *)(v14 - 112) = v10;
  *(_QWORD *)(v14 - 104) = v12;
  *(_QWORD *)(v14 - 96) = v13;
  *(_QWORD *)(v14 - 88) = v10;
  type metadata accessor for FeedGroupKnobsRuleList.Selector();
}

uint64_t sub_1BB452408(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v7);
  if ((sub_1BB873168() & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    sub_1BB8746B0();
    *(_QWORD *)(v5 - 72) = *(_QWORD *)(*(_QWORD *)(v5 - 184) + 16);
    __swift_mutable_project_boxed_opaque_existential_1(v5 - 144, *(_QWORD *)(v5 - 120));
    v8 = sub_1BB872EE0();
    *(_QWORD *)(v5 - 168) = v2;
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v8, v5 - 168);
    sub_1BB874404();
    return __swift_destroy_boxed_opaque_existential_1(v5 - 144);
  }
  else
  {
    *(_QWORD *)(v5 - 232) = v1;
    *(_QWORD *)(v5 - 224) = v4;
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    v10 = *(_QWORD *)(v5 - 208);
    v11 = *(_QWORD *)(v5 - 200);
    sub_1BB8746C8();
    *(_QWORD *)(v5 - 144) = *(_QWORD *)(*(_QWORD *)(v5 - 184) + 16);
    *(_BYTE *)(v5 - 72) = 0;
    v12 = sub_1BB872EE0();
    *(_QWORD *)(v5 - 152) = v2;
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v12, v5 - 152);
    v13 = *(_QWORD *)(v5 - 176);
    sub_1BB8741AC();
    if (!v13)
    {
      *(_QWORD *)(v5 - 144) = *(_QWORD *)(v5 - 232);
      *(_BYTE *)(v5 - 72) = 1;
      *(_QWORD *)(v5 - 160) = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupKnobsRuleList<A>.Selector<A1>, a1);
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v7, v5 - 160);
      sub_1BB8741AC();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 224) + 8))(v10, v11);
  }
}

uint64_t FeedGroupKnobsRuleList.__allocating_init(value:selectors:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t FeedGroupKnobsRuleList.init(value:selectors:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t static FeedGroupKnobsRuleList.== infix(_:_:)()
{
  if ((sub_1BB872EEC() & 1) != 0)
    type metadata accessor for FeedGroupKnobsRuleList.Selector();
  return 0;
}

_QWORD *FeedGroupKnobsRuleList.Selector.__allocating_init(value:selector:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *result;
  uint64_t v5;

  result = (_QWORD *)swift_allocObject();
  v5 = *a2;
  result[3] = a2[1];
  result[4] = a1;
  result[2] = v5;
  return result;
}

_QWORD *FeedGroupKnobsRuleList.Selector.init(value:selector:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *a2;
  v2[3] = a2[1];
  v2[4] = a1;
  v2[2] = v3;
  return v2;
}

void FeedGroupKnobsRuleList.Selector.__allocating_init(from:)(uint64_t a1)
{
  swift_allocObject();
  FeedGroupKnobsRuleList.Selector.init(from:)(a1);
}

uint64_t sub_1BB45278C()
{
  uint64_t v0;

  return v0;
}

void FeedGroupKnobsRuleList.Selector.init(from:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v10[7] = a1;
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 120);
  v5 = *(_QWORD *)(v2 + 128);
  v10[3] = sub_1BB86DF60();
  v6 = sub_1BB873A2C();
  v10[0] = *(_QWORD *)(v6 - 8);
  v10[1] = v6;
  MEMORY[0x1E0C80A78](v6);
  v10[4] = (char *)v10 - v7;
  v8 = *(_QWORD *)(v2 + 112);
  v9 = *(_QWORD *)(v2 + 136);
  v10[8] = *(_QWORD *)(v2 + 80);
  v10[9] = v3;
  v10[2] = v3;
  v11 = *(_OWORD *)(v2 + 96);
  v12 = v8;
  v13 = v4;
  v14 = v5;
  v15 = v9;
  type metadata accessor for FeedGroupKnobsRuleList.Selector.CodingKeys();
}

_QWORD *sub_1BB45285C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  MEMORY[0x1BCCE5B24](&unk_1BB919BD8, a1);
  v3 = sub_1BB874104();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v8 = *(_QWORD **)(v2 - 168);
  v7 = *(_QWORD *)(v2 - 160);
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v2 - 160) = v4;
    *(_BYTE *)(v2 - 144) = 1;
    v9 = *(_QWORD *)(v2 - 184);
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v9);
    v10 = *(_QWORD *)(v2 - 176);
    sub_1BB874020();
    v11 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v10, 1, v9) == 1)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 208) + 8))(*(_QWORD *)(v2 - 176), *(_QWORD *)(v2 - 200));
      v12 = sub_1BB872E68();
    }
    else
    {
      v14 = *(_QWORD *)(v2 - 184);
      v13 = *(_QWORD *)(v2 - 176);
      v12 = sub_1BB86DD08();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v14);
    }
    v15 = *(_QWORD *)(v2 - 160);
    v8[4] = v12;
    *(_BYTE *)(v2 - 65) = 0;
    sub_1BA69C13C();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v3);
    v17 = *(_QWORD *)(v2 - 136);
    v8[2] = *(_QWORD *)(v2 - 144);
    v8[3] = v17;
  }
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v2 - 152));
  return v8;
}

uint64_t static FeedGroupKnobsRuleList.Selector.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v2 || (sub_1BB874398() & 1) != 0)
    return sub_1BB872EEC();
  else
    return 0;
}

uint64_t sub_1BB452AC4(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB919BD8, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB452AF8(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB919BD8, a1);
  return sub_1BB87471C();
}

uint64_t FeedGroupKnobsRuleList.Selector.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedGroupKnobsRuleList.Selector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void FeedGroupKnobsRuleList.Selector.encode(to:)()
{
  type metadata accessor for FeedGroupKnobsRuleList.Selector.CodingKeys();
}

uint64_t sub_1BB452BE8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  MEMORY[0x1BCCE5B24](&unk_1BB919BD8, a1);
  v4 = sub_1BB8741D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1BB8746C8();
  v8 = v2[3];
  *(_QWORD *)(v3 - 144) = v2[2];
  *(_QWORD *)(v3 - 136) = v8;
  *(_BYTE *)(v3 - 65) = 0;
  sub_1BA68660C();
  v9 = *(_QWORD *)(v3 - 160);
  sub_1BB8741AC();
  if (!v9)
  {
    *(_QWORD *)(v3 - 144) = v2[4];
    *(_BYTE *)(v3 - 65) = 1;
    v10 = sub_1BB872EE0();
    *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 176);
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v10, v3 - 152);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB452D44()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

void sub_1BB452D94(uint64_t a1)
{
  FeedGroupKnobsRuleList.Selector.__allocating_init(from:)(a1);
}

uint64_t sub_1BB452DA8(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

void sub_1BB452DBC()
{
  FeedGroupKnobsRuleList.Selector.encode(to:)();
}

uint64_t sub_1BB452DDC(uint64_t *a1, uint64_t *a2)
{
  return static FeedGroupKnobsRuleList.Selector.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BB452DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCE5B24](&unk_1BB919A80, a3);
  return sub_1BB874440();
}

uint64_t sub_1BB452E3C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB919A80, a1);
  return sub_1BB872D3C();
}

uint64_t sub_1BB452E88()
{
  MEMORY[0x1BCCE5B24](&unk_1BB919A80);
  return sub_1BB872D54();
}

uint64_t sub_1BB452ED8()
{
  MEMORY[0x1BCCE5B24](&unk_1BB919A80);
  return sub_1BB872D48();
}

uint64_t sub_1BB452F28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB452D44();
  *a1 = result;
  return result;
}

uint64_t sub_1BB452F60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB452D44();
  *a1 = result;
  return result;
}

uint64_t sub_1BB452F90(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB919C28, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB452FC4(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB919C28, a1);
  return sub_1BB87471C();
}

uint64_t FeedGroupKnobsRuleList.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedGroupKnobsRuleList.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1BB453048()
{
  FeedGroupKnobsRuleList.encode(to:)();
}

uint64_t sub_1BB453068()
{
  return static FeedGroupKnobsRuleList.== infix(_:_:)();
}

void type metadata accessor for FeedGroupKnobsRuleList.Selector.CodingKeys()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t method lookup function for FeedGroupKnobsRuleList()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleList.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleList.__allocating_init(value:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for FeedGroupKnobsRuleList.Selector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleList.Selector.__allocating_init(value:selector:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleList.Selector.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_1BB4530DC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB453128 + 4 * byte_1BB919885[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB45315C + 4 * byte_1BB919880[v4]))();
}

uint64_t sub_1BB45315C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB453164(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB45316CLL);
  return result;
}

uint64_t sub_1BB453178(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB453180);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB453184(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB45318C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BB453198()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB4531A8()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB4531B8()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB4531C8()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t static FormatEquationToken.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _BYTE *v20;
  void (*v21)(char *, uint64_t, uint64_t, double);
  char v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  _QWORD v27[2];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a1;
  v31 = a2;
  v29 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v27[1] = v5;
  v28 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatEquationToken(0, v6, v5, v5);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v27 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v15 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v16 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v18 = (char *)v27 - v17;
  v20 = (char *)v27 + *(int *)(v19 + 48) - v17;
  v21 = *(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16);
  v21((char *)v27 - v17, v30, v7, v16);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v21)(v20, v31, v7);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    ((void (*)(char *, char *, uint64_t))v21)(v13, v18, v7);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v24 = v28;
      v23 = v29;
      (*(void (**)(char *, _BYTE *, uint64_t))(v29 + 32))(v28, v20, a3);
      v22 = sub_1BB872958();
      v25 = *(void (**)(char *, uint64_t))(v23 + 8);
      v25(v24, a3);
      v25(v13, a3);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, a3);
    goto LABEL_6;
  }
  ((void (*)(_BYTE *, char *, uint64_t))v21)(v10, v18, v7);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_6:
    v22 = 0;
    v8 = v15;
    v7 = TupleTypeMetadata2;
    goto LABEL_8;
  }
  v22 = (0x29282F2A2D2BuLL >> (8 * *v10)) == (0x29282F2A2D2BuLL >> (8 * *v20));
LABEL_8:
  (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v7);
  return v22 & 1;
}

uint64_t sub_1BB45343C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FormatEquationToken.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t *sub_1BB45344C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 1uLL)
    v5 = 1;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if (v6 > 7 || (*(_DWORD *)(v4 + 80) & 0x100000) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  else
  {
    v10 = *((unsigned __int8 *)a2 + v5);
    if (v10 >= 2)
    {
      if (v5 <= 3)
        v11 = v5;
      else
        v11 = 4;
      __asm { BR              X13 }
    }
    if (v10 == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *((_BYTE *)a1 + v5) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

_BYTE *sub_1BB453558(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 1uLL)
      v7 = 1;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = a1[v7];
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 != 1)
      (*(void (**)(_BYTE *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = a2[v7];
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
      v12 = 0;
    }
    a1[v7] = v12;
  }
  return a1;
}

_BYTE *sub_1BB4536D4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 1uLL)
    v5 = 1;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = a2[v5];
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 32))(a1);
    v8 = 0;
  }
  a1[v5] = v8;
  return a1;
}

_BYTE *sub_1BB4537A4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 1uLL)
      v7 = 1;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = a1[v7];
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 != 1)
      (*(void (**)(_BYTE *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = a2[v7];
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    a1[v7] = v12;
  }
  return a1;
}

uint64_t sub_1BB453920(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 1uLL)
    v3 = 1;
  else
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_22;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v8 < 2)
    {
LABEL_22:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_22;
LABEL_15:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB4539E0 + 4 * byte_1BB919CA8[(v4 - 1)]))();
}

void sub_1BB453A2C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 1)
    v5 = 1;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1BB453BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) <= 1uLL)
    v2 = 1;
  else
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB453C14 + 4 * byte_1BB919CB6[v3]))();
}

void sub_1BB453C5C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 1uLL)
    v4 = 1;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

void sub_1BB453D20(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BB453E80(a1, (SEL *)&selRef_sportsTaxonomyResourceId, 6, a2);
}

void sub_1BB453D40(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BB453E80(a1, (SEL *)&selRef_sportsStandingConfigurationResourceId, 7, a2);
}

void sub_1BB453D60(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BB453E80(a1, (SEL *)&selRef_sportsBoxScoreConfigurationResourceId, 8, a2);
}

void sub_1BB453D80(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BB453E80(a1, (SEL *)&selRef_sportsBracketConfigurationResourceId, 9, a2);
}

void sub_1BB453DA0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BB453E80(a1, (SEL *)&selRef_sportsKeyPlayerConfigurationResourceId, 10, a2);
}

void sub_1BB453DC0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BB453E80(a1, (SEL *)&selRef_sportsLineScoreConfigurationResourceId, 11, a2);
}

void sub_1BB453DE0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BB453E80(a1, (SEL *)&selRef_sportsInjuryReportConfigurationResourceId, 12, a2);
}

void sub_1BB453E00(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BB453E80(a1, (SEL *)&selRef_sportsScoreConfigurationResourceId, 13, a2);
}

void sub_1BB453E20(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BB453E80(a1, (SEL *)&selRef_sportsSyncingConfigurationResourceId, 14, a2);
}

void sub_1BB453E40(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BB453E80(a1, (SEL *)&selRef_sportsSyncingConfigurationV2ResourceId, 15, a2);
}

void sub_1BB453E60(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BB453E80(a1, (SEL *)&selRef_sportsFeaturedEventsResourceId, 16, a2);
}

void sub_1BB453E80(id *a1@<X0>, SEL *a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;

  v7 = *a1;
  if ((objc_msgSend(*a1, sel_respondsToSelector_, *a2) & 1) != 0
    && (v8 = objc_msgSend(v7, *a2)) != 0)
  {
    v9 = v8;
    v10 = sub_1BB8729A0();
    v12 = v11;

    *a4 = v10;
    a4[1] = v12;
  }
  else
  {
    sub_1BA98B368();
    swift_allocError();
    *v13 = a3;
    swift_willThrow();
  }
}

uint64_t sub_1BB453F38()
{
  return sub_1BB453F60();
}

uint64_t sub_1BB453F4C()
{
  return sub_1BB453F60();
}

uint64_t sub_1BB453F60()
{
  void *v0;
  uint64_t v1;

  sub_1BA53FAC4();
  sub_1BB86EC14();
  v0 = (void *)sub_1BB86E854();
  v1 = sub_1BB86E974();
  swift_release();

  return v1;
}

uint64_t sub_1BB453FD8()
{
  return sub_1BB453F60();
}

uint64_t sub_1BB453FEC()
{
  return sub_1BB453F60();
}

uint64_t sub_1BB454000()
{
  return sub_1BB453F60();
}

uint64_t sub_1BB454014()
{
  return sub_1BB453F60();
}

uint64_t sub_1BB454028()
{
  return sub_1BB453F60();
}

uint64_t sub_1BB45403C()
{
  return sub_1BB453F60();
}

uint64_t sub_1BB454050()
{
  return sub_1BB453F60();
}

uint64_t sub_1BB454064()
{
  return sub_1BB453F60();
}

uint64_t sub_1BB454078()
{
  return sub_1BB453F60();
}

uint64_t sub_1BB45408C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatCanvasLayoutViewResult()
{
  return objc_opt_self();
}

uint64_t sub_1BB4540D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;

  v68 = a1;
  v62 = a2;
  v2 = sub_1BB870CA8();
  v63 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  v3 = *(_QWORD *)(v63 + 64);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v54 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v54 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v54 - v11;
  v13 = type metadata accessor for FormatDecorationContext();
  v59 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v60 = v14;
  v61 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA73C29C();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1BB86C67C();
  v56 = *(_QWORD *)(v58 - 8);
  v18 = *(_QWORD *)(v56 + 64);
  MEMORY[0x1E0C80A78](v58);
  v57 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v65 = (char *)&v54 - v20;
  v21 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *v67;
  if ((*v67 & 0x8000000000000000) == 0)
  {
    v25 = swift_projectBox();
    sub_1BA4C2DD8(v25, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    v26 = v68;
    sub_1BB86D774();
    v28 = v27;
    sub_1BB86D624();
    v29 = sub_1BB86DA68();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v17, 0, 1, v29);
    v31 = (uint64_t)v65;
    v30 = v66;
    sub_1BB49C850(v26, (uint64_t)v17, (uint64_t)v65, v28);
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA73C29C);
    result = sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    if (v30)
      return result;
    v67 = 0;
    v33 = swift_allocObject();
    v34 = v61;
    sub_1BA4C2DD8(v68, v61, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
    v35 = v56;
    v36 = v57;
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 32);
    v38 = v58;
    v37(v57, v31, v58);
    v39 = (*(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    v40 = (v60 + *(unsigned __int8 *)(v35 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    v41 = swift_allocObject();
    sub_1BB454C24(v34, v41 + v39);
    v37((char *)(v41 + v40), (uint64_t)v36, v38);
    *(_QWORD *)(v33 + 16) = sub_1BB454C68;
    v42 = v63;
    goto LABEL_4;
  }
  v43 = v9;
  v44 = v6;
  v65 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *(_QWORD *)(v24 + 24);
  v69 = *(_QWORD *)(v24 + 16);
  swift_retain();
  swift_retain_n();
  v46 = v66;
  sub_1BB4540D8(v68);
  if (!v46)
  {
    swift_release();
    v69 = v45;
    swift_retain();
    sub_1BB4540D8(v68);
    v67 = 0;
    swift_release_n();
    swift_release();
    v33 = swift_allocObject();
    v47 = v12;
    v42 = v63;
    v48 = v64;
    v49 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
    v55 = v44;
    v49(v44, v43, v64);
    v50 = (uint64_t)v65;
    v49(v65, v47, v48);
    v51 = *(unsigned __int8 *)(v42 + 80);
    v52 = (v51 + 16) & ~v51;
    v53 = (v3 + v51 + v52) & ~v51;
    v41 = swift_allocObject();
    v49((char *)(v41 + v52), v55, v48);
    v49((char *)(v41 + v53), (char *)v50, v48);
    *(_QWORD *)(v33 + 16) = sub_1BB454A6C;
LABEL_4:
    *(_QWORD *)(v33 + 24) = v41;
    *v62 = v33;
    return (*(uint64_t (**)(void))(v42 + 104))();
  }
  swift_release();
  return swift_release_n();
}

BOOL static FormatPatternContent.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  v10 = *a1;
  v11 = *a2;
  if (v10 < 0)
  {
    if (v11 < 0)
    {
      v15 = *(_QWORD *)((v10 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      v16 = *(_QWORD *)(v11 + 16);
      v17 = *(_QWORD *)(v11 + 24);
      v22 = *(_QWORD *)((v10 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      v23 = v15;
      v20 = v16;
      v21 = v17;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if ((static FormatPatternContent.== infix(_:_:)(&v22, &v20) & 1) != 0)
      {
        v18 = static FormatPatternContent.== infix(_:_:)(&v23, &v21);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if ((v18 & 1) != 0)
          return 1;
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    return 0;
  }
  if (v11 < 0)
    return 0;
  v12 = swift_projectBox();
  v13 = swift_projectBox();
  sub_1BA4C2DD8(v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
  sub_1BA4C2DD8(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
  swift_retain();
  swift_retain();
  v14 = _s8NewsFeed17FormatRemoteImageV2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v6);
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
  swift_release();
  swift_release();
  return v14;
}

unint64_t sub_1BB4547F8@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  unint64_t result;

  v3 = *(void **)(a1 + 72);
  v4 = (void *)sub_1BB86C58C();
  v5 = objc_msgSend(v3, sel_assetHandleForURL_lifetimeHint_, v4, 1);

  a2[3] = sub_1BA749984();
  result = sub_1BA7499C0();
  a2[4] = result;
  *a2 = v5;
  return result;
}

uint64_t sub_1BB45486C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
  {
    v8 = sub_1BB870CA8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, a2, v8);
  }
  else
  {
    v9 = sub_1BB870CA8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a4, a3, v9);
  }
}

uint64_t sub_1BB4548EC@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatPatternContent.init(from:)(a1, a2);
}

uint64_t sub_1BB454900(_QWORD *a1)
{
  return FormatPatternContent.encode(to:)(a1);
}

unint64_t sub_1BB454918(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAEAAB44();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB45493C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEAA988();
  a1[2] = sub_1BAEEE8EC();
  result = sub_1BB454970();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB454970()
{
  unint64_t result;

  result = qword_1ED3AD650;
  if (!qword_1ED3AD650)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternContent, &type metadata for FormatPatternContent);
    atomic_store(result, (unint64_t *)&qword_1ED3AD650);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPatternContent()
{
  return &type metadata for FormatPatternContent;
}

uint64_t sub_1BB4549C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB4549E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_1BB870CA8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  return swift_deallocObject();
}

uint64_t sub_1BB454A6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(sub_1BB870CA8() - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  return sub_1BB45486C(a1, v2 + ((v6 + 16) & ~v6), v2 + ((*(_QWORD *)(v5 + 64) + v6 + ((v6 + 16) & ~v6)) & ~v6), a2);
}

uint64_t sub_1BB454ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for FormatDecorationContext();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v0 + v3;
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v3 + 32))
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9 = (v3 + v4 + v7) & ~v7;

  v10 = v8 + *(int *)(v1 + 28);
  v11 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v8 + *(int *)(v1 + 32);
  v13 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v9, v5);
  return swift_deallocObject();
}

uint64_t sub_1BB454C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDecorationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BB454C68@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = type metadata accessor for FormatDecorationContext();
  v4 = (*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  sub_1BB86C67C();
  return sub_1BB4547F8(v1 + v4, a1);
}

uint64_t static FormatGroupBinding.IssueCover.== infix(_:_:)()
{
  return 1;
}

unint64_t sub_1BB454CEC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB454D10();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB454D10()
{
  unint64_t result;

  result = qword_1EF2C4498;
  if (!qword_1EF2C4498)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.IssueCover, &type metadata for FormatGroupBinding.IssueCover);
    atomic_store(result, (unint64_t *)&qword_1EF2C4498);
  }
  return result;
}

unint64_t sub_1BB454D54(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE9B87C();
  a1[2] = sub_1BAEF0E58();
  result = sub_1BB454D88();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB454D88()
{
  unint64_t result;

  result = qword_1EF2C44A0;
  if (!qword_1EF2C44A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.IssueCover, &type metadata for FormatGroupBinding.IssueCover);
    atomic_store(result, (unint64_t *)&qword_1EF2C44A0);
  }
  return result;
}

uint64_t sub_1BB454DCC(_QWORD *a1)
{
  return FormatGroupBinding.IssueCover.init(from:)(a1);
}

uint64_t sub_1BB454DE0(_QWORD *a1)
{
  return FormatGroupBinding.IssueCover.encode(to:)(a1);
}

uint64_t _s10IssueCoverOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB454E34 + 4 * byte_1BB919EE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB454E54 + 4 * byte_1BB919EE5[v4]))();
}

_BYTE *sub_1BB454E34(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB454E54(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB454E5C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB454E64(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB454E6C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB454E74(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.IssueCover()
{
  return &type metadata for FormatGroupBinding.IssueCover;
}

id PuzzleStackAccessoryView.__allocating_init(with:provider:colorTheme:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  char *v13;
  uint64_t ObjectType;

  v13 = (char *)objc_allocWithZone(v6);
  ObjectType = swift_getObjectType();
  return sub_1BB455758(a1, a2, a4, a5, a6, v13, ObjectType, a3);
}

uint64_t PuzzleStackAccessoryView.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PuzzleStackAccessoryView.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_identifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PuzzleStackAccessoryView.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double PuzzleStackAccessoryView.height.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_height;
  swift_beginAccess();
  return *(double *)v1;
}

void *PuzzleStackAccessoryView.containerView.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_containerView);
  v2 = v1;
  return v1;
}

uint64_t PuzzleStackAccessoryView.stackViews.getter()
{
  return swift_bridgeObjectRetain();
}

id PuzzleStackAccessoryView.init(with:provider:colorTheme:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1BB455758(a1, a2, a4, a5, a6, v6, ObjectType, a3);
}

uint64_t sub_1BB4550F0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _QWORD v21[2];
  _OWORD v22[4];
  uint64_t v23;

  v19 = a1[1];
  v20 = *a1;
  v17 = a1[3];
  v18 = a1[2];
  v13 = *((_QWORD *)a1 + 8);
  ObjectType = swift_getObjectType();
  v22[0] = v20;
  v22[1] = v19;
  v22[2] = v18;
  v22[3] = v17;
  v23 = v13;
  v21[0] = a3;
  v21[1] = a4;
  result = (*(uint64_t (**)(_OWORD *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 40))(v22, v21, a5, a6, ObjectType, a2);
  *a7 = result;
  a7[1] = v16;
  return result;
}

Swift::Void __swiftcall PuzzleStackAccessoryView.layoutSubviews()()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  double v6;
  void *v7;
  uint64_t v8;
  uint64_t ObjectType;
  double (*v10)(uint64_t, uint64_t);
  id v11;
  double v12;
  void *v13;
  objc_super v14;
  CGRect v15;
  CGRect v16;

  v1 = v0;
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_layoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_containerView];
  if (v2)
  {
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v2, sel_setFrame_);
  }
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_stackViews];
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
  {
    v6 = 0.0;
    if (!v2)
      return;
    goto LABEL_7;
  }
  v13 = v2;
  swift_bridgeObjectRetain();
  v5 = (uint64_t *)(v3 + 40);
  v6 = 0.0;
  do
  {
    v7 = (void *)*(v5 - 1);
    v8 = *v5;
    ObjectType = swift_getObjectType();
    v10 = *(double (**)(uint64_t, uint64_t))(v8 + 32);
    v11 = v7;
    v12 = v10(ObjectType, v8);
    objc_msgSend(v1, sel_bounds);
    objc_msgSend(v11, sel_setFrame_, 0.0, v6, CGRectGetWidth(v15), v12);

    v6 = v6 + v12;
    v5 += 2;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  v2 = v13;
  if (v13)
  {
LABEL_7:
    objc_msgSend(v1, sel_bounds);
    objc_msgSend(v2, sel_setFrame_, 0.0, 0.0, CGRectGetWidth(v16), v6);
  }
}

id PuzzleStackAccessoryView.updateHeight(for:)(double a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  double v7;
  void *v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, double);
  id v12;
  double v13;
  double *v14;

  v2 = v1;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_stackViews];
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(v3 + 40);
    v7 = 0.0;
    do
    {
      v8 = (void *)*(v6 - 1);
      v9 = *v6;
      ObjectType = swift_getObjectType();
      v11 = *(void (**)(uint64_t, uint64_t, double))(v9 + 40);
      v12 = v8;
      v11(ObjectType, v9, a1);
      v13 = (*(double (**)(uint64_t, uint64_t))(v9 + 32))(ObjectType, v9);

      v7 = v7 + v13;
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0.0;
  }
  v14 = (double *)&v2[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_height];
  swift_beginAccess();
  *v14 = v7;
  return objc_msgSend(v2, sel_setNeedsLayout);
}

id PuzzleStackAccessoryView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void PuzzleStackAccessoryView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PuzzleStackAccessoryView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BB45561C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BB455670(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_identifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BB4556CC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_1BB455710()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_height;
  swift_beginAccess();
  return *(double *)v1;
}

id sub_1BB455758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8)
{
  void *v15;
  void *v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t *v22;
  double v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  double v28;
  id v29;
  id v30;
  objc_class *ObjectType;
  uint64_t v33;
  char v34[16];
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  objc_super v41;

  ObjectType = (objc_class *)swift_getObjectType();
  v33 = a4;
  v15 = *(void **)a3;
  v16 = *(void **)(a3 + 8);
  v17 = &a6[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_identifier];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v35 = a2;
  v36 = a8;
  v37 = v15;
  v38 = v16;
  v39 = a4;
  v40 = a5;
  v18 = a6;
  v19 = sub_1BB1419B4((void (*)(__int128 *__return_ptr, _QWORD *))sub_1BB1B4C70, (uint64_t)v34, a1);
  sub_1BA8FD980(v15, v16);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_stackViews] = v19;
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v21 = v19[2];
  if (v21)
  {
    swift_bridgeObjectRetain();
    v22 = v19 + 5;
    v23 = 0.0;
    do
    {
      v24 = (void *)*(v22 - 1);
      v25 = *v22;
      v26 = swift_getObjectType();
      v27 = v24;
      objc_msgSend(v20, sel_addSubview_, v27);
      v28 = (*(double (**)(uint64_t, uint64_t))(v25 + 32))(v26, v25);

      v23 = v23 + v28;
      v22 += 2;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0.0;
  }
  *(double *)&v18[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_height] = v23;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_containerView] = v20;
  v29 = v20;

  v41.receiver = v18;
  v41.super_class = ObjectType;
  v30 = objc_msgSendSuper2(&v41, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v30, sel_addSubview_, v29);
  sub_1BA49EBE0(v33);

  swift_unknownObjectRelease();
  return v30;
}

uint64_t type metadata accessor for PuzzleStackAccessoryView()
{
  return objc_opt_self();
}

uint64_t method lookup function for PuzzleStackAccessoryView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PuzzleStackAccessoryView.__allocating_init(with:provider:colorTheme:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for FormatIssueBinding()
{
  return &type metadata for FormatIssueBinding;
}

uint64_t sub_1BB4559A0(uint64_t a1, void **a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  int64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  void *v37;
  __int128 v38;
  _QWORD *v39;
  _OWORD v40[2];
  _BYTE v41[24];
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_1BA8C88C8(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (__int128 *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v36 = v2;
    v47 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v9, 0);
    v10 = v47;
    v11 = *a2;
    v39 = v8 + 1;
    v38 = xmmword_1BB91A000;
    v37 = v11;
    do
    {
      v12 = (uint64_t)objc_msgSend(objc_msgSend(v11, sel_sourceChannel), sel_theme);
      swift_unknownObjectRelease();
      if (v12)
      {
        v13 = objc_msgSend((id)v12, sel_defaultHeadlineTemplate);
        swift_unknownObjectRelease();
        v14 = objc_msgSend(v13, sel_headlineTitleTextInfo);

        v15 = swift_allocObject();
        if (v14)
        {
          v16 = objc_msgSend(v14, sel_font);
          v12 = (uint64_t)v16;
          if (v16)
          {
            v17 = v6;
            v18 = objc_msgSend(v16, sel_fontName);

            if (v18)
            {
              v12 = sub_1BB8729A0();
              v20 = v19;

            }
            else
            {
              v12 = 0;
              v20 = 0xE000000000000000;
            }
            v6 = v17;
            v11 = v37;
            goto LABEL_13;
          }
        }
        else
        {
          v12 = 0;
        }
        v20 = 0xE000000000000000;
      }
      else
      {
        v15 = swift_allocObject();
        v14 = 0;
        v20 = 0xE000000000000000;
      }
LABEL_13:

      *(_QWORD *)(v15 + 16) = v12;
      *(_QWORD *)(v15 + 24) = v20;
      *(_QWORD *)(v15 + 32) = 0xBFF0000000000000;
      *(_QWORD *)(v15 + 40) = 0;
      v21 = HIBYTE(v20) & 0xF;
      if ((v20 & 0x2000000000000000) == 0)
        v21 = v12 & 0xFFFFFFFFFFFFLL;
      *(_WORD *)(v15 + 48) = 3072;
      if (v21)
      {
        swift_bridgeObjectRetain();
        swift_release();
        v43 = v12;
        v44 = v20;
        v22 = MEMORY[0x1E0DEA968];
      }
      else
      {
        swift_release();
        v22 = 0;
        v43 = 0;
        v44 = 0;
        v45 = 0;
      }
      v46 = v22;
      sub_1BA967B04((uint64_t)&v43, (uint64_t)v41);
      if (v42)
      {
        sub_1BA967BB4((uint64_t)v41, (uint64_t)v40);
        sub_1BA967B60((uint64_t)&v43);
        v23 = type metadata accessor for FormatInspectionItem(0);
        v24 = (__int128 *)((char *)v8 + *(int *)(v23 + 24));
        v25 = v40[1];
        *v24 = v40[0];
        v24[1] = v25;
        v26 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v24, 0, 1, v26);
        *v8 = v38;
        v27 = v39;
        *v39 = 0;
        v27[1] = 0;
        v28 = (char *)v8 + *(int *)(v23 + 28);
        *(_QWORD *)v28 = 0;
        *((_QWORD *)v28 + 1) = 0;
        v28[16] = -1;
        sub_1BA967BF0((uint64_t)v41);
      }
      else
      {
        sub_1BA967B60((uint64_t)&v43);
        v23 = type metadata accessor for FormatInspectionItem(0);
        v29 = (char *)v8 + *(int *)(v23 + 24);
        v30 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
        *v8 = v38;
        v31 = v39;
        *v39 = 0;
        v31[1] = 0;
        v32 = (char *)v8 + *(int *)(v23 + 28);
        *(_QWORD *)v32 = 0;
        *((_QWORD *)v32 + 1) = 0;
        v32[16] = -1;
      }
      type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(__int128 *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 0, 1, v23);
      v47 = v10;
      v34 = *(_QWORD *)(v10 + 16);
      v33 = *(_QWORD *)(v10 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1BAC79E1C(v33 > 1, v34 + 1, 1);
        v10 = v47;
      }
      *(_QWORD *)(v10 + 16) = v34 + 1;
      sub_1BA5193C4((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v34, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1BB455DBC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  void (*v19)(char *, uint64_t);
  char v20;
  uint64_t v21;

  v19 = a4;
  v5 = v4;
  sub_1BA8C88C8(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v12, 0);
    v13 = v21;
    v14 = (char *)(a1 + 32);
    while (1)
    {
      v15 = *v14++;
      v20 = v15;
      v19(&v20, a2);
      if (v5)
        break;
      v5 = 0;
      v21 = v13;
      v17 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BAC79E1C(v16 > 1, v17 + 1, 1);
        v13 = v21;
      }
      *(_QWORD *)(v13 + 16) = v17 + 1;
      sub_1BA5193C4((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v17, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      if (!--v12)
        return v13;
    }
    swift_release();
  }
  return v13;
}

unint64_t sub_1BB455F18(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[3];
  uint64_t v36;

  v27 = a3;
  sub_1BA8C88C8(0);
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - v10;
  v36 = *(_QWORD *)(a1 + 16);
  if (!v36)
    return MEMORY[0x1E0DEE9D8];
  v24 = v3;
  swift_bridgeObjectRetain();
  v12 = 0;
  v13 = MEMORY[0x1E0DEE9D8];
  v25 = a1;
  v14 = v27;
  do
  {
    v15 = *(_BYTE *)(a1 + v12 + 32);
    v16 = a2[7];
    v34 = a2[6];
    v35[0] = v16;
    *(_OWORD *)((char *)v35 + 9) = *(__int128 *)((char *)a2 + 121);
    v17 = a2[3];
    v30 = a2[2];
    v31 = v17;
    v18 = a2[5];
    v32 = a2[4];
    v33 = v18;
    v19 = a2[1];
    v28 = *a2;
    v29 = v19;
    sub_1BA8D1F08((uint64_t)a2);
    sub_1BA8DACF0(v14);
    sub_1BAB6AF80(v15);
    v20 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
    sub_1BA5193C4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1BB38CBE8(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
    v22 = *(_QWORD *)(v13 + 16);
    v21 = *(_QWORD *)(v13 + 24);
    if (v22 >= v21 >> 1)
      v13 = sub_1BB38CBE8(v21 > 1, v22 + 1, 1, v13);
    ++v12;
    *(_QWORD *)(v13 + 16) = v22 + 1;
    sub_1BA5193C4((uint64_t)v8, v13+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v22, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
    a1 = v25;
  }
  while (v36 != v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1BB45614C(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *boxed_opaque_existential_0;
  void *v49;
  id v50;
  void *v51;
  _QWORD *v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  void *v60;
  id v61;
  uint64_t v62;
  _OWORD *v63;
  __int128 v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  _OWORD *v70;
  __int128 v71;
  uint64_t v72;
  _QWORD *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  _OWORD *v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t result;
  char v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  char *v109;
  uint64_t v110;
  _QWORD *v111;
  char *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  __int128 v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _OWORD v143[2];
  uint64_t v144;
  _OWORD v145[2];
  uint64_t v146;
  _OWORD v147[2];
  uint64_t v148;
  _OWORD v149[2];
  uint64_t v150;
  _OWORD v151[2];
  uint64_t v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  unint64_t v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  _OWORD v166[3];

  v136 = a1;
  sub_1BA8C88C8(0);
  v128 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v129 = (uint64_t *)((char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA76D78C();
  v135 = v5;
  MEMORY[0x1E0C80A78](v5);
  v127 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatInspectionItem(0);
  v8 = type metadata accessor for FormatInspectionItem;
  v130 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (__int128 *)((char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v119 - v12);
  v14 = a2[6];
  v15 = a2[7];
  v16 = a2[4];
  v164 = a2[5];
  v165 = v14;
  v166[0] = v15;
  *(_OWORD *)((char *)v166 + 9) = *(__int128 *)((char *)a2 + 121);
  v17 = a2[3];
  v161 = a2[2];
  v162 = v17;
  v163 = v16;
  v18 = a2[1];
  v159 = *a2;
  v160 = v18;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB8832C0;
  sub_1BA8D1F08((uint64_t)&v159);
  v20 = sub_1BB455DBC((uint64_t)&unk_1E724F848, (uint64_t)&v159, (uint64_t)&v142, (void (*)(char *, uint64_t))sub_1BB297630);
  sub_1BA8D1FE4((uint64_t)&v159);
  sub_1BAF89090(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v20, v143);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v19 + 64) = &off_1E72D2F60;
  v21 = swift_allocObject();
  *(_QWORD *)(v19 + 32) = v21;
  v119 = v19 + 32;
  v22 = v143[1];
  *(_OWORD *)(v21 + 16) = v143[0];
  *(_OWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 48) = v144;
  sub_1BA8D1F08((uint64_t)&v159);
  v23 = sub_1BB455DBC((uint64_t)&unk_1E724F7C8, (uint64_t)&v159, (uint64_t)&v141, (void (*)(char *, uint64_t))sub_1BACCD580);
  sub_1BA8D1FE4((uint64_t)&v159);
  sub_1BAF89090(0x726F6C6F43, 0xE500000000000000, 0, 0, v23, v145);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v19 + 104) = &off_1E72D2F60;
  v24 = swift_allocObject();
  *(_QWORD *)(v19 + 72) = v24;
  v25 = v145[1];
  *(_OWORD *)(v24 + 16) = v145[0];
  *(_OWORD *)(v24 + 32) = v25;
  *(_QWORD *)(v24 + 48) = v146;
  sub_1BA8D1F08((uint64_t)&v159);
  v26 = v136;
  sub_1BA8DACF0(v136);
  v27 = sub_1BB455F18((uint64_t)&unk_1E724F7F0, &v159, v26);
  sub_1BA8DAD20(v26);
  sub_1BA8D1FE4((uint64_t)&v159);
  sub_1BAF89090(0x646E616D6D6F43, 0xE700000000000000, 0, 0, v27, v147);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v19 + 144) = &off_1E72D2F60;
  v28 = swift_allocObject();
  *(_QWORD *)(v19 + 112) = v28;
  v29 = v147[1];
  *(_OWORD *)(v28 + 16) = v147[0];
  *(_OWORD *)(v28 + 32) = v29;
  *(_QWORD *)(v28 + 48) = v148;
  sub_1BA8D1F08((uint64_t)&v159);
  v30 = sub_1BB4559A0((uint64_t)&unk_1E724F870, (void **)&v159);
  sub_1BA8D1FE4((uint64_t)&v159);
  sub_1BAF89090(1953394502, 0xE400000000000000, 0, 0, v30, v149);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 176) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v19 + 184) = &off_1E72D2F60;
  v31 = swift_allocObject();
  *(_QWORD *)(v19 + 152) = v31;
  v32 = v149[1];
  *(_OWORD *)(v31 + 16) = v149[0];
  *(_OWORD *)(v31 + 32) = v32;
  *(_QWORD *)(v31 + 48) = v150;
  sub_1BA8D1F08((uint64_t)&v159);
  v33 = sub_1BB455DBC((uint64_t)&unk_1E724F820, (uint64_t)&v159, (uint64_t)&v140, (void (*)(char *, uint64_t))sub_1BB26FEC4);
  sub_1BA8D1FE4((uint64_t)&v159);
  sub_1BAF89090(0x726F6C6F43, 0xE500000000000000, 0, 0, v33, v151);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 216) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v19 + 224) = &off_1E72D2F60;
  v34 = swift_allocObject();
  v120 = v19;
  *(_QWORD *)(v19 + 192) = v34;
  v35 = v151[1];
  *(_OWORD *)(v34 + 16) = v151[0];
  *(_OWORD *)(v34 + 32) = v35;
  *(_QWORD *)(v34 + 48) = v152;
  v139 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v125 = v10 + 1;
  v126 = v13 + 2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v36 = 0;
  v37 = 0;
  v38 = *(unsigned __int8 *)(v130 + 80);
  v133 = ((v38 + 32) & ~v38) + *(_QWORD *)(v130 + 72);
  v134 = (v38 + 32) & ~v38;
  v132 = v38 | 7;
  v131 = xmmword_1BB87CE70;
  v123 = xmmword_1BB91A010;
  v122 = (unint64_t)"tackAccessoryView.swift";
  v121 = 0x80000001BB98D770;
  v124 = v39;
  do
  {
    LODWORD(v136) = v36;
    v45 = *((_BYTE *)&unk_1E724F898 + v37 + 32);
    v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v131;
    v47 = v46 + v134;
    if ((v45 & 1) != 0)
    {
      *((_QWORD *)&v154 + 1) = v135;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v153);
      v49 = (void *)v159;
      sub_1BA8D1F08((uint64_t)&v159);
      v50 = objc_msgSend(v49, sel_sortDate);
      if (v50)
      {
        v51 = v50;
        v52 = v13;
        v53 = v10;
        v54 = v7;
        v55 = v8;
        v56 = v127;
        sub_1BB86C874();

        v57 = (uint64_t)v56;
        v8 = v55;
        v7 = v54;
        v10 = v53;
        v13 = v52;
        v58 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 0, 1, v58);
      }
      else
      {
        v69 = sub_1BB86C8B0();
        v57 = (uint64_t)v127;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v127, 1, 1, v69);
      }
      sub_1BA5193C4(v57, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))sub_1BA76D78C);
      sub_1BA8D1FE4((uint64_t)&v159);
      sub_1BA76EAE0(&v153, &v156);
      sub_1BA967B04((uint64_t)&v156, (uint64_t)&v153);
      if (*((_QWORD *)&v154 + 1))
      {
        sub_1BA967BB4((uint64_t)&v153, (uint64_t)&v137);
        sub_1BA967B60((uint64_t)&v156);
        v70 = (__int128 *)((char *)v10 + *(int *)(v7 + 24));
        v71 = v138;
        *v70 = v137;
        v70[1] = v71;
        v72 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v70, 0, 1, v72);
        *v10 = v123;
        v73 = v125;
        *v125 = 0;
        v73[1] = 0;
        v74 = (char *)v10 + *(int *)(v7 + 28);
        *(_QWORD *)v74 = 0;
        *((_QWORD *)v74 + 1) = 0;
        v74[16] = -1;
        sub_1BA967BF0((uint64_t)&v153);
      }
      else
      {
        sub_1BA967B60((uint64_t)&v156);
        v75 = (char *)v10 + *(int *)(v7 + 24);
        v76 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v75, 1, 1, v76);
        *v10 = v123;
        v77 = v125;
        *v125 = 0;
        v77[1] = 0;
        v78 = (char *)v10 + *(int *)(v7 + 28);
        *(_QWORD *)v78 = 0;
        *((_QWORD *)v78 + 1) = 0;
        v78[16] = -1;
      }
      v44 = (uint64_t)v10;
    }
    else
    {
      *((_QWORD *)&v157 + 1) = v135;
      v59 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v156);
      v60 = (void *)v159;
      sub_1BA8D1F08((uint64_t)&v159);
      v61 = objc_msgSend(v60, sel_publicationDate);
      sub_1BB86C874();

      v62 = sub_1BB86C8B0();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v59, 0, 1, v62);
      sub_1BA8D1FE4((uint64_t)&v159);
      sub_1BA967B04((uint64_t)&v156, (uint64_t)&v153);
      if (*((_QWORD *)&v154 + 1))
      {
        sub_1BA967BB4((uint64_t)&v153, (uint64_t)&v137);
        sub_1BA967B60((uint64_t)&v156);
        v63 = (_OWORD *)((char *)v13 + *(int *)(v7 + 24));
        v64 = v138;
        *v63 = v137;
        v63[1] = v64;
        v65 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v63, 0, 1, v65);
        v66 = v122 | 0x8000000000000000;
        *v13 = 0xD000000000000010;
        v13[1] = v66;
        v67 = v126;
        *v126 = 0;
        v67[1] = 0;
        v68 = (char *)v13 + *(int *)(v7 + 28);
        *(_QWORD *)v68 = 0;
        *((_QWORD *)v68 + 1) = 0;
        v68[16] = -1;
        sub_1BA967BF0((uint64_t)&v153);
      }
      else
      {
        sub_1BA967B60((uint64_t)&v156);
        v40 = (char *)v13 + *(int *)(v7 + 24);
        v41 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
        *v13 = 0xD000000000000010;
        v13[1] = v121;
        v42 = v126;
        *v126 = 0;
        v42[1] = 0;
        v43 = (char *)v13 + *(int *)(v7 + 28);
        *(_QWORD *)v43 = 0;
        *((_QWORD *)v43 + 1) = 0;
        v43[16] = -1;
      }
      v44 = (uint64_t)v13;
    }
    sub_1BA5193C4(v44, v47, v8);
    sub_1BB383BA8(v46);
    v36 = 1;
    v37 = 1u;
  }
  while ((v136 & 1) == 0);
  v79 = sub_1BA97461C((uint64_t)v139);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x6D69542065746144, 0xE900000000000065, 0, 0, v79, &v153);
  swift_bridgeObjectRelease();
  v80 = v120;
  *(_QWORD *)(v120 + 256) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v80 + 264) = &off_1E72D2F60;
  v81 = swift_allocObject();
  *(_QWORD *)(v80 + 232) = v81;
  v82 = v154;
  *(_OWORD *)(v81 + 16) = v153;
  *(_OWORD *)(v81 + 32) = v82;
  *(_QWORD *)(v81 + 48) = v155;
  *((_QWORD *)&v157 + 1) = &type metadata for FeedIssue;
  v158 = sub_1BA6B2E68();
  v83 = (_OWORD *)swift_allocObject();
  *(_QWORD *)&v156 = v83;
  v84 = v166[0];
  v83[7] = v165;
  v83[8] = v84;
  *(_OWORD *)((char *)v83 + 137) = *(_OWORD *)((char *)v166 + 9);
  v85 = v162;
  v83[3] = v161;
  v83[4] = v85;
  v86 = v164;
  v83[5] = v163;
  v83[6] = v86;
  v87 = v160;
  v83[1] = v159;
  v83[2] = v87;
  sub_1BA8D1F08((uint64_t)&v159);
  sub_1BA7592C4(&v156, (uint64_t *)&v137);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
  v88 = v137;
  *(_QWORD *)&v137 = MEMORY[0x1E0DEE9D8];
  sub_1BAC79E1C(0, 0, 0);
  v89 = v137;
  if (v88)
  {
    v135 = v129 + 2;
    v136 = v7;
    while (1)
    {
      *(_QWORD *)&v156 = 91;
      *((_QWORD *)&v156 + 1) = 0xE100000000000000;
      v139 = (_QWORD *)(v88 & -v88);
      v139 = sub_1BA78E0E8();
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA6A0BA4();
      sub_1BB872904();
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v90);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v91);
      v92 = sub_1BA9C0430(1uLL, v156, *((unint64_t *)&v156 + 1));
      v94 = v93;
      swift_bridgeObjectRelease();
      result = sub_1BB873A44();
      if (__OFSUB__(result, 1))
        break;
      result = sub_1BB873A38();
      if ((v96 & 1) != 0)
        v97 = v94;
      else
        v97 = result;
      if (v97 >> 14 < v92 >> 14)
        goto LABEL_27;
      v98 = sub_1BB873A68();
      v100 = v99;
      v102 = v101;
      v104 = v103;
      swift_bridgeObjectRelease();
      v105 = MEMORY[0x1BCCE334C](v98, v100, v102, v104);
      v107 = v106;
      swift_bridgeObjectRelease();
      v108 = v129;
      v109 = (char *)v129 + *(int *)(v7 + 24);
      *(_QWORD *)v109 = 0;
      *((_QWORD *)v109 + 1) = 0xE000000000000000;
      v110 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v109, 0, 1, v110);
      *v108 = v105;
      v108[1] = v107;
      v111 = v135;
      *v135 = 0;
      v111[1] = 0;
      v112 = (char *)v108 + *(int *)(v7 + 28);
      *(_QWORD *)v112 = 0;
      *((_QWORD *)v112 + 1) = 0;
      v112[16] = -1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v108, 0, 1, v7);
      *(_QWORD *)&v137 = v89;
      v114 = *(_QWORD *)(v89 + 16);
      v113 = *(_QWORD *)(v89 + 24);
      if (v114 >= v113 >> 1)
      {
        sub_1BAC79E1C(v113 > 1, v114 + 1, 1);
        v89 = v137;
      }
      v88 ^= v88 & -v88;
      *(_QWORD *)(v89 + 16) = v114 + 1;
      sub_1BA5193C4((uint64_t)v108, v89+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(_QWORD *)(v128 + 72) * v114, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      if (!v88)
        goto LABEL_25;
    }
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    sub_1BAF89090(0x737469617254, 0xE600000000000000, 0, 0, v89, &v156);
    swift_release();
    v115 = v120;
    *(_QWORD *)(v120 + 296) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(v115 + 304) = &off_1E72D2F60;
    v116 = swift_allocObject();
    *(_QWORD *)(v115 + 272) = v116;
    v117 = v157;
    *(_OWORD *)(v116 + 16) = v156;
    *(_OWORD *)(v116 + 32) = v117;
    *(_QWORD *)(v116 + 48) = v158;
    v118 = sub_1BB6DF010(v115);
    swift_setDeallocating();
    sub_1BA89EA04(0);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    return (uint64_t)v118;
  }
  return result;
}

uint64_t sub_1BB456EE8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB456F1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB456F80()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id SharingArticleImageActivityItemSource.__allocating_init(headline:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed37SharingArticleImageActivityItemSource_headline] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id SharingArticleImageActivityItemSource.init(headline:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed37SharingArticleImageActivityItemSource_headline] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

void SharingArticleImageActivityItemSource.activityViewControllerPlaceholderItem(_:)(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed37SharingArticleImageActivityItemSource_headline), sel_articleID);
  if (!v3)
  {
    a1[3] = MEMORY[0x1E0DEA968];
    *a1 = 0;
    a1[1] = 0xE000000000000000;
    return;
  }

  v4 = (id)FCThumbnailForHeadline();
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  v6 = objc_msgSend(v4, sel_thumbnailAssetHandle);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_filePath);

    if (v8)
    {
      sub_1BB8729A0();

      v9 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
      v10 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v11 = objc_msgSend(v9, sel_initWithContentsOfFile_, v10);

      if (v11)
      {
        a1[3] = sub_1BA49DEA8();

        *a1 = v11;
        return;
      }
    }

LABEL_9:
    a1[3] = sub_1BAFA52EC();
    *a1 = MEMORY[0x1E0DEE9B8] + 8;
    return;
  }
  __break(1u);
}

void SharingArticleImageActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  char v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;

  if (!a1)
    goto LABEL_16;
  if (sub_1BB8729A0() == 0xD000000000000026 && v5 == 0x80000001BB968360)
  {
    v6 = a1;
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_1BB874398();
    v8 = a1;
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {

LABEL_16:
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return;
    }
  }
  v9 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed37SharingArticleImageActivityItemSource_headline), sel_articleID);
  if (!v9)
  {
    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0xE000000000000000;
    return;
  }

  v10 = (id)FCThumbnailForHeadline();
  if (!v10)
  {
LABEL_15:

    goto LABEL_16;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, sel_thumbnailAssetHandle);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, sel_filePath);

    if (v14)
    {
      sub_1BB8729A0();

      v15 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
      v16 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v15, sel_initWithContentsOfFile_, v16);

      if (v17)
      {
        *(_QWORD *)(a2 + 24) = sub_1BA49DEA8();

        *(_QWORD *)a2 = v17;
        return;
      }
    }

    goto LABEL_15;
  }
  __break(1u);
}

id SharingArticleImageActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingArticleImageActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingArticleImageActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SharingArticleImageActivityItemSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingArticleImageActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingArticleImageActivityItemSource.__allocating_init(headline:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t initializeWithCopy for FormatNodeRebinder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _OWORD *v23;
  _OWORD *v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = (_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >= 0xF)
  {
    *(_QWORD *)(a1 + 56) = *v7;
    *(_QWORD *)(a1 + 64) = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v7;
  }
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v12 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  v23 = (_OWORD *)(a2 + 152);
  v24 = (_OWORD *)(a1 + 152);
  v13 = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13)
  {
    v14 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = v13;
    *(_QWORD *)(a1 + 184) = v14;
    (**(void (***)(_OWORD *, _OWORD *, uint64_t))(v13 - 8))(v24, v23, v13);
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 168);
    *v24 = *v23;
    *(_OWORD *)(a1 + 168) = v15;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  }
  v16 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v16;
  v17 = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17)
  {
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v17;
    v18 = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = v18;
    v19 = *(_QWORD *)(a2 + 240);
    v20 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = v19;
    *(_QWORD *)(a1 + 248) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v21;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  }
  return a1;
}

uint64_t assignWithCopy for FormatNodeRebinder(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) < 0xFuLL)
  {
    if (v4 >= 0xF)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 < 0xF)
  {
    sub_1BA905D68(a1 + 56);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 176);
  if (*(_QWORD *)(a1 + 176))
  {
    if (v5)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 152), (uint64_t *)(a2 + 152));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 152);
  }
  else if (v5)
  {
    *(_QWORD *)(a1 + 176) = v5;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 152, a2 + 152);
    goto LABEL_15;
  }
  v6 = *(_OWORD *)(a2 + 152);
  v7 = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 152) = v6;
  *(_OWORD *)(a1 + 168) = v7;
LABEL_15:
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = (_OWORD *)(a1 + 208);
  v9 = (_OWORD *)(a2 + 208);
  v10 = *(_QWORD *)(a2 + 216);
  if (*(_QWORD *)(a1 + 216))
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAFDE160(a1 + 208);
      v12 = *(_OWORD *)(a2 + 224);
      v11 = *(_OWORD *)(a2 + 240);
      *v8 = *v9;
      *(_OWORD *)(a1 + 224) = v12;
      *(_OWORD *)(a1 + 240) = v11;
    }
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *v9;
    v14 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v14;
    *v8 = v13;
  }
  return a1;
}

__n128 __swift_memcpy256_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v13;
  *(__n128 *)(a1 + 192) = result;
  *(_OWORD *)(a1 + 208) = v12;
  return result;
}

uint64_t assignWithTake for FormatNodeRebinder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 64) < 0xFuLL)
    goto LABEL_4;
  v8 = *(_QWORD *)(a2 + 64);
  if (v8 < 0xF)
  {
    sub_1BA905D68(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *v7;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)v7;
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v9 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v9;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 176))
    __swift_destroy_boxed_opaque_existential_1(a1 + 152);
  v10 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v10;
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 216))
    goto LABEL_12;
  v11 = *(_QWORD *)(a2 + 216);
  if (!v11)
  {
    sub_1BAFDE160(a1 + 208);
LABEL_12:
    v13 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v13;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    return a1;
  }
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatNodeRebinder(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 256))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatNodeRebinder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 256) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 256) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatNodeRebinder()
{
  return &type metadata for FormatNodeRebinder;
}

uint64_t sub_1BB457E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t *v31;
  uint64_t v32;
  _OWORD v37[8];
  uint64_t v38;

  v16 = *a6;
  v15 = a6[1];
  v17 = (uint64_t *)(v9 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders);
  swift_beginAccess();
  v18 = *v17;
  if (!*(_QWORD *)(v18 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v19 = sub_1BA6E35A8(v16, v15);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v31 = v16;
    v31[1] = v15;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  v21 = a6[5];
  v32 = a6[4];
  v22 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_slots);
  v24 = v22 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext;
  swift_beginAccess();
  v25 = v38;
  sub_1BB45BE04(v24, v23, a1, a2, a3, a4, a5, v32, (uint64_t)v37, v21, a7 & 1, a8);
  swift_endAccess();
  result = swift_release();
  if (!v25)
  {
    v27 = v37[5];
    a9[4] = v37[4];
    a9[5] = v27;
    v28 = v37[7];
    a9[6] = v37[6];
    a9[7] = v28;
    v29 = v37[1];
    *a9 = v37[0];
    a9[1] = v29;
    v30 = v37[3];
    a9[2] = v37[2];
    a9[3] = v30;
  }
  return result;
}

uint64_t sub_1BB458024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v26;
  uint64_t v27;

  v16 = *a6;
  v15 = a6[1];
  v17 = (uint64_t *)(v9 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders);
  swift_beginAccess();
  v18 = *v17;
  if (*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    v19 = sub_1BA6E35A8(v16, v15);
    if ((v20 & 1) != 0)
    {
      v21 = a6[5];
      v27 = a6[4];
      v22 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
      swift_endAccess();
      swift_retain();
      swift_bridgeObjectRelease();
      v23 = *(_QWORD *)(v22
                      + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_slots);
      v24 = v22
          + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext;
      swift_beginAccess();
      sub_1BB45DB38(v24, v23, a1, a2, a3, a4, a5, v27, a9, v21, a7 & 1, a8);
      swift_endAccess();
      return swift_release();
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v26 = v16;
  v26[1] = v15;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1BB4581EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v26;
  uint64_t v27;

  v16 = *a6;
  v15 = a6[1];
  v17 = (uint64_t *)(v9 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders);
  swift_beginAccess();
  v18 = *v17;
  if (*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    v19 = sub_1BA6E35A8(v16, v15);
    if ((v20 & 1) != 0)
    {
      v21 = a6[5];
      v27 = a6[4];
      v22 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
      swift_endAccess();
      swift_retain();
      swift_bridgeObjectRelease();
      v23 = *(_QWORD *)(v22
                      + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_slots);
      v24 = v22
          + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext;
      swift_beginAccess();
      sub_1BB460E44(v24, v23, a1, a2, a3, a4, a5, v27, a9, v21, a7 & 1, a8);
      swift_endAccess();
      return swift_release();
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v26 = v16;
  v26[1] = v15;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1BB4583B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t *v35;
  uint64_t v36;
  _OWORD v41[13];
  uint64_t v42;

  v16 = *a6;
  v15 = a6[1];
  v17 = (uint64_t *)(v9 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders);
  swift_beginAccess();
  v18 = *v17;
  if (!*(_QWORD *)(v18 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v19 = sub_1BA6E35A8(v16, v15);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v35 = v16;
    v35[1] = v15;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  v21 = a6[5];
  v36 = a6[4];
  v22 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_slots);
  v24 = v22 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext;
  swift_beginAccess();
  v25 = v42;
  sub_1BB462638(v24, v23, a1, a2, a3, a4, a5, v36, (uint64_t)v41, v21, a7 & 1, a8);
  swift_endAccess();
  result = swift_release();
  if (!v25)
  {
    v27 = v41[9];
    v28 = v41[11];
    v29 = v41[12];
    a9[10] = v41[10];
    a9[11] = v28;
    a9[12] = v29;
    v30 = v41[7];
    v31 = v41[8];
    a9[6] = v41[6];
    a9[7] = v30;
    a9[8] = v31;
    a9[9] = v27;
    v32 = v41[3];
    a9[2] = v41[2];
    a9[3] = v32;
    v33 = v41[5];
    a9[4] = v41[4];
    a9[5] = v33;
    v34 = v41[1];
    *a9 = v41[0];
    a9[1] = v34;
  }
  return result;
}

uint64_t sub_1BB4585C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, char a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE, uint64_t))
{
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v25;
  uint64_t v26;

  v15 = *a6;
  v14 = a6[1];
  v16 = (uint64_t *)(v9 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders);
  swift_beginAccess();
  v17 = *v16;
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BA6E35A8(v15, v14);
    if ((v19 & 1) != 0)
    {
      v20 = a6[5];
      v26 = a6[4];
      v21 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
      swift_endAccess();
      swift_retain();
      swift_bridgeObjectRelease();
      v22 = *(_QWORD *)(v21
                      + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_slots);
      v23 = v21
          + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext;
      swift_beginAccess();
      a9(v23, v22, a1, a2, a3, a4, a5, v26, v20, a7 & 1, a8);
      swift_endAccess();
      return swift_release();
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v25 = v15;
  v25[1] = v14;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1BB458794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t *v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  char v97;
  unint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v121;
  int EnumCaseMultiPayload;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(_QWORD);
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unsigned __int8 v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  void *v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unsigned __int8 v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unsigned __int8 v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  int v227;
  void *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  char v267;
  uint64_t v268[5];
  unint64_t v269;
  uint64_t v270[6];
  uint64_t v271;

  v261 = a8;
  v249 = a7;
  v248 = a6;
  v263 = a4;
  v264 = a5;
  v262 = a3;
  v252 = a2;
  v265 = a1;
  v247 = a9;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B78C0, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v251 = (uint64_t)&v223 - v15;
  v238 = type metadata accessor for FormatOption();
  v241 = *(_QWORD *)(v238 - 8);
  MEMORY[0x1E0C80A78](v238);
  v235 = (uint64_t)&v223 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v223 - v18);
  MEMORY[0x1E0C80A78](v20);
  v250 = (uint64_t)&v223 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (uint64_t *)((char *)&v223 - v23);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2500, v25, v13);
  MEMORY[0x1E0C80A78](v26);
  v239 = (uint64_t)&v223 - v27;
  v240 = type metadata accessor for FormatPropertyDefinition(0);
  v242 = *(_QWORD *)(v240 - 8);
  MEMORY[0x1E0C80A78](v240);
  v237 = (uint64_t)&v223 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v246 = (uint64_t)&v223 - v30;
  sub_1BA7A2A04(0);
  v232 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v233 = (uint64_t)&v223 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v33);
  v234 = (uint64_t)&v223 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v254);
  v256 = (uint64_t)&v223 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v255 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v255);
  v243 = (char *)&v223 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v245 = (uint64_t)&v223 - v38;
  MEMORY[0x1E0C80A78](v39);
  v259 = (uint64_t)&v223 - v40;
  MEMORY[0x1E0C80A78](v41);
  v257 = (uint64_t *)((char *)&v223 - v42);
  v258 = v12;
  v43 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
  v44 = *(_QWORD *)(v43 + 16);
  v253 = v24;
  if (v44)
  {
    swift_bridgeObjectRetain();
    v45 = 0;
    v46 = 0;
    do
    {
      v267 = *(_BYTE *)(v43 + v45 + 32);
      sub_1BA758024();
      v47 = v268[0];
      if ((v268[0] & ~v46) == 0)
        v47 = 0;
      v46 |= v47;
      ++v45;
    }
    while (v44 != v45);
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = 0;
  }
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = v46;
  sub_1BA4B07F0(0, &qword_1ED39E468, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v50 = v49;
  v51 = (unint64_t *)swift_allocObject();
  v51[2] = MEMORY[0x1E0DEE9D8];
  v52 = v51 + 2;
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = sub_1BB4692FC;
  *(_QWORD *)(v53 + 24) = v48;
  swift_beginAccess();
  v54 = (_QWORD *)v51[2];
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v51[2] = (unint64_t)v54;
  v236 = v19;
  v244 = v50;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v54 = sub_1BB38FD54(0, v54[2] + 1, 1, v54);
    *v52 = v54;
  }
  v266 = a11;
  v56 = a10;
  v58 = v54[2];
  v57 = v54[3];
  if (v58 >= v57 >> 1)
  {
    v54 = sub_1BB38FD54((_QWORD *)(v57 > 1), v58 + 1, 1, v54);
    *v52 = v54;
  }
  v54[2] = v58 + 1;
  v59 = &v54[2 * v58];
  v59[4] = sub_1BB469304;
  v59[5] = v53;
  swift_endAccess();
  swift_release();
  v60 = v259;
  v61 = v265;
  v62 = v261;
  v63 = (void *)v260;
  sub_1BB782388(v262, v263, v51, v264, 1, v261, a10, v266 & 1, v259);
  v64 = v63;
  if (v63)
  {
    swift_release();
    if ((*(_BYTE *)(v258 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback) & 1) == 0)
      return swift_willThrow();
    v65 = *(_QWORD *)(v43 + 16);
    if (v65)
    {
      swift_bridgeObjectRetain();
      v66 = 0;
      v67 = 0;
      v68 = (uint64_t)v243;
      do
      {
        v267 = *(_BYTE *)(v43 + v66 + 32);
        sub_1BA758024();
        v69 = v268[0];
        if ((v268[0] & ~v67) == 0)
          v69 = 0;
        v67 |= v69;
        ++v66;
      }
      while (v65 != v66);
      swift_bridgeObjectRelease();
    }
    else
    {
      v67 = 0;
      v68 = (uint64_t)v243;
    }
    v92 = swift_allocObject();
    *(_QWORD *)(v92 + 16) = v67;
    v93 = (unint64_t *)swift_allocObject();
    v93[2] = MEMORY[0x1E0DEE9D8];
    v94 = v93 + 2;
    v95 = swift_allocObject();
    *(_QWORD *)(v95 + 16) = sub_1BB469450;
    *(_QWORD *)(v95 + 24) = v92;
    swift_beginAccess();
    v96 = (_QWORD *)v93[2];
    swift_retain();
    v97 = swift_isUniquelyReferenced_nonNull_native();
    v93[2] = (unint64_t)v96;
    if ((v97 & 1) == 0)
    {
      v96 = sub_1BB38FD54(0, v96[2] + 1, 1, v96);
      *v94 = v96;
    }
    v99 = v96[2];
    v98 = v96[3];
    if (v99 >= v98 >> 1)
    {
      v96 = sub_1BB38FD54((_QWORD *)(v98 > 1), v99 + 1, 1, v96);
      *v94 = v96;
    }
    v96[2] = v99 + 1;
    v100 = &v96[2 * v99];
    v100[4] = sub_1BB469304;
    v100[5] = v95;
    swift_endAccess();
    swift_release();
    v61 = v265;
    sub_1BB782388(v262, v263, v93, v264, 1, 0, 0, v266 & 1, v68);
    swift_release();
    v70 = v257;
    sub_1BA5193C4(v68, (uint64_t)v257, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v102 = *v70;
    v101 = v70[1];
    swift_bridgeObjectRetain();
    v103 = v252;
    v104 = sub_1BA78B1DC(v252, 42, 0xE100000000000000, v102, v101);
    swift_bridgeObjectRelease();
    v243 = (char *)v104;
    v271 = v104;
    swift_bridgeObjectRetain();
    v105 = sub_1BA78B2D4(v103, 42, 0xE100000000000000, v102, v101);
    swift_bridgeObjectRelease();
    v269 = v105;
    v106 = *(_QWORD *)(v103 + 16);
    swift_bridgeObjectRetain();
    v244 = v105;
    if (v106)
    {
      v107 = sub_1BA6E35A8(42, 0xE100000000000000);
      v76 = v253;
      if ((v108 & 1) != 0)
      {
        v109 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v103 + 56) + 8 * v107) + 136);
        if (*(_QWORD *)(v109 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v110 = sub_1BA6E35A8(v102, v101);
          if ((v111 & 1) != 0)
          {
            v112 = (uint64_t *)(*(_QWORD *)(v109 + 56) + 48 * v110);
            v114 = *v112;
            v113 = v112[1];
            v115 = v112[2];
            v116 = v112[3];
            v118 = v112[4];
            v117 = v112[5];
            v263 = v118;
            v264 = v114;
            v261 = v117;
            v259 = v113;
            swift_bridgeObjectRetain();
            v262 = v115;
            swift_bridgeObjectRetain();
            v260 = v116;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v264 = 0;
            v259 = 0;
            v262 = 0;
            v260 = 0;
            v263 = 0;
            v261 = 0;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v91 = v262;
        }
        else
        {
          v264 = 0;
          v259 = 0;
          v91 = 0;
          v260 = 0;
          v263 = 0;
          v261 = 0;
        }

        swift_bridgeObjectRelease();
        v64 = 0;
        v86 = v259;
        v88 = v260;
        v77 = v263;
        v90 = v264;
        v56 = v261;
      }
      else
      {

        swift_bridgeObjectRelease();
        v90 = 0;
        v86 = 0;
        v91 = 0;
        v88 = 0;
        v77 = 0;
        v56 = 0;
        v64 = 0;
      }
    }
    else
    {

      swift_bridgeObjectRelease();
      v90 = 0;
      v86 = 0;
      v91 = 0;
      v88 = 0;
      v77 = 0;
      v56 = 0;
      v64 = 0;
      v76 = v253;
    }
    goto LABEL_51;
  }
  swift_release();
  v70 = v257;
  sub_1BA5193C4(v60, (uint64_t)v257, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  v72 = *v70;
  v71 = v70[1];
  swift_bridgeObjectRetain();
  v73 = v252;
  v74 = sub_1BA78B1DC(v252, v62, a10, v72, v71);
  swift_bridgeObjectRelease();
  v271 = v74;
  swift_bridgeObjectRetain();
  v75 = sub_1BA78B2D4(v73, v62, a10, v72, v71);
  swift_bridgeObjectRelease();
  v244 = v75;
  v269 = v75;
  v76 = v253;
  v243 = (char *)v74;
  if (a10)
  {
    v77 = *(_QWORD *)(v73 + 16);
    if (v77)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v78 = sub_1BA6E35A8(v261, a10);
      if ((v79 & 1) != 0)
      {
        v80 = *(_QWORD *)(*(_QWORD *)(v73 + 56) + 8 * v78);
        swift_retain();
        swift_bridgeObjectRelease();
        v81 = *(_QWORD *)(v80 + 136);
        swift_bridgeObjectRetain();
        swift_release();
        if (*(_QWORD *)(v81 + 16))
        {
          swift_bridgeObjectRetain();
          v82 = sub_1BA6E35A8(v72, v71);
          if ((v83 & 1) != 0)
          {
            v84 = (uint64_t *)(*(_QWORD *)(v81 + 56) + 48 * v82);
            v85 = *v84;
            v86 = v84[1];
            v87 = v84[2];
            v88 = v84[3];
            v56 = v84[5];
            v263 = v84[4];
            v264 = v85;
            swift_bridgeObjectRetain();
            v262 = v87;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v263 = 0;
            v264 = 0;
            v86 = 0;
            v262 = 0;
            v88 = 0;
            v56 = 0;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v263 = 0;
          v264 = 0;
          v86 = 0;
          v262 = 0;
          v88 = 0;
          v56 = 0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v91 = v262;
        v77 = v263;
        v90 = v264;
        goto LABEL_51;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v90 = 0;
      v86 = 0;
      v91 = 0;
      v88 = 0;
      v77 = 0;
    }
    else
    {
      v90 = 0;
      v86 = 0;
      v91 = 0;
      v88 = 0;
    }
    v56 = 0;
  }
  else
  {
    v90 = 0;
    v86 = 0;
    v91 = 0;
    v88 = 0;
    v77 = 0;
  }
LABEL_51:
  v264 = v90;
  v270[0] = v90;
  v270[1] = v86;
  v270[2] = v91;
  v270[3] = v88;
  v260 = v88;
  v263 = v77;
  v270[4] = v77;
  v270[5] = v56;
  v261 = v56;
  v119 = v255;
  v268[3] = v255;
  v268[4] = sub_1BA4A2870(&qword_1ED39E460, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t)&protocol conformance descriptor for FeedCustomItem);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v268);
  sub_1BA4C2DD8((uint64_t)v70, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  v121 = v256;
  sub_1BA7BC210(v268, v256);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v262 = v91;
  if (EnumCaseMultiPayload != 8)
  {
    v259 = v86;
    if (EnumCaseMultiPayload == 4)
    {
      v123 = v234;
      sub_1BA5193C4(v121, v234, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      v124 = sub_1BB11BDF4();
      sub_1BA6D3834(v124);
      v125 = sub_1BB11C124();
      sub_1BA6E3FB8(v125);
      v126 = v123;
      v127 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
    }
    else
    {
      v127 = type metadata accessor for FeedItem;
      v126 = v121;
    }
    sub_1BA4A2E80(v126, v127);
    v152 = v266;
LABEL_60:
    v153 = v271;
    v154 = v269;
    v155 = *(_BYTE *)(v61 + 88);
    if ((v152 & 1) != 0)
    {
      swift_beginAccess();
      sub_1BB463ECC(v70, v153, v154, v270, v248, v249, v155, v247);
    }
    else
    {
      swift_beginAccess();
      sub_1BB465458(v70, v153, v154, v270, v248, v249, v155, v247);
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA70ABF4(v264, v259);
    v156 = (uint64_t)v70;
    return sub_1BA4A2E80(v156, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  }
  v128 = v245;
  sub_1BA5193C4(v121, v245, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  v129 = (uint64_t *)(a12 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
  swift_beginAccess();
  v130 = v129[1];
  v131 = v128 + *(int *)(v119 + 20);
  v132 = *(_QWORD *)(v130 + 16);
  v255 = v131;
  if (!v132)
  {
    v230 = 0;
    v252 = 0;
    v231 = 0;
    v234 = 0;
    v256 = 0;
    v254 = 0;
    v147 = 0;
    v148 = 0;
    v149 = 0;
    v151 = 0;
    v150 = 0;
    goto LABEL_66;
  }
  v259 = v86;
  v133 = *v129;
  v134 = *(_QWORD *)(v131 + 16);
  v135 = *(_QWORD *)(v131 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v136 = sub_1BA6E35A8(v134, v135);
  if ((v137 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v230 = 0;
    v252 = 0;
    v231 = 0;
    v234 = 0;
    v256 = 0;
    v254 = 0;
    v147 = 0;
    v148 = 0;
    v149 = 0;
    v151 = 0;
    v150 = 0;
    v86 = v259;
    goto LABEL_66;
  }
  v228 = v64;
  v138 = v233;
  sub_1BA4C2DD8(*(_QWORD *)(v130 + 56) + *(_QWORD *)(v232 + 72) * v136, v233, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
  v139 = *(_QWORD *)(v138 + 8);
  v230 = *(_QWORD *)v138;
  v140 = *(_QWORD *)(v138 + 24);
  v231 = *(_QWORD *)(v138 + 16);
  v141 = *(_QWORD *)(v138 + 40);
  v256 = *(_QWORD *)(v138 + 32);
  v225 = v133;
  v143 = *(_QWORD *)(v138 + 48);
  v142 = *(_QWORD *)(v138 + 56);
  v144 = *(_QWORD *)(v138 + 64);
  v145 = *(_QWORD *)(v138 + 72);
  v227 = *(char *)(v138 + 80);
  v252 = v139;
  swift_bridgeObjectRetain();
  v234 = v140;
  swift_bridgeObjectRetain();
  v254 = v141;
  v224 = v143;
  v229 = v142;
  v232 = v144;
  v226 = v145;
  v146 = v227;
  sub_1BA709DE8(v256, v141, v143, v142, v144, v145, v227);
  sub_1BA4A2E80(v138, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v146 & 0x80000000) == 0)
  {
    v70 = v257;
    v86 = v259;
    v147 = v224;
    v148 = v229;
    v149 = v232;
    v150 = v146;
    v151 = v226;
LABEL_66:
    sub_1BA70ABF4(v264, v86);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    v157 = *(_QWORD *)(v255 + 24);
    *v158 = *(_QWORD *)(v255 + 16);
    v158[1] = v157;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1BA8CEA24(v230, v252, v231, v234, v256, v254, v147, v148, v149, v151, v150);
    sub_1BA4A2E80(v245, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v156 = (uint64_t)v70;
    return sub_1BA4A2E80(v156, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  }
  v159 = v256;
  v268[0] = v256;
  sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3A2F58, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition);
  sub_1BA4A2870(&qword_1ED3A0FB0, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
  swift_bridgeObjectRetain();
  v160 = sub_1BB872BBC();
  v161 = *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 28);
  v162 = v255;
  v163 = *(_QWORD *)(v255 + v161);
  v164 = *(_QWORD *)(v163 + 16);
  if (!v164)
  {
    v168 = v229;
LABEL_90:
    swift_bridgeObjectRelease();
    v268[0] = *(_QWORD *)(v162 + v161);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED39EA08, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
    sub_1BA4A2870(&qword_1ED39C9E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
    v189 = sub_1BB872BB0();
    v190 = *(_QWORD *)(v159 + 16);
    v191 = v232;
    if (v190)
    {
      v192 = v159 + ((*(unsigned __int8 *)(v242 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v242 + 80));
      v193 = *(_QWORD *)(v242 + 72);
      v194 = v246;
      v195 = v239;
      do
      {
        sub_1BA4C2DD8(v192, v194, type metadata accessor for FormatPropertyDefinition);
        FormatPropertyDefinition.identifier.getter();
        if (*(_QWORD *)(v189 + 16) && (v198 = sub_1BA6E35A8(v196, v197), (v199 & 1) != 0))
        {
          sub_1BA4C2DD8(*(_QWORD *)(v189 + 56) + *(_QWORD *)(v241 + 72) * v198, v239, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v200 = 0;
        }
        else
        {
          v200 = 1;
        }
        v201 = v241;
        v202 = v238;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v241 + 56))(v195, v200, 1, v238);
        swift_bridgeObjectRelease();
        LODWORD(v202) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v195, 1, v202);
        sub_1BA604728(v195, (uint64_t)&qword_1ED3D2500, (uint64_t)type metadata accessor for FormatOption, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        if ((_DWORD)v202 == 1)
        {
          sub_1BB12B170();
          if ((v203 & 1) != 0)
          {
            sub_1BA70ABF4(v264, v259);
            swift_bridgeObjectRelease();
            v204 = v256;
            v205 = v254;
            v206 = v224;
            sub_1BA6C0C20(v256, v254, v224, v229, v232, v226, v227);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            type metadata accessor for FormatLayoutError();
            sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
            swift_allocError();
            v208 = v207;
            sub_1BB468FA8();
            v210 = v208 + *(int *)(v209 + 48);
            v211 = v245;
            sub_1BA4C2DD8(v245, v208, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
            v212 = v246;
            sub_1BA4C2DD8(v246, v210, type metadata accessor for FormatPropertyDefinition);
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA6C0C20(v204, v205, v206, v229, v232, v226, v227);
            sub_1BA4A2E80(v212, type metadata accessor for FormatPropertyDefinition);
            sub_1BA4A2E80(v211, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
            v156 = (uint64_t)v257;
            return sub_1BA4A2E80(v156, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          }
        }
        v194 = v246;
        sub_1BA4A2E80(v246, type metadata accessor for FormatPropertyDefinition);
        v192 += v193;
        --v190;
        v191 = v232;
      }
      while (v190);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v159 = v256;
      v168 = v229;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v213 = v254;
    v214 = v224;
    v215 = v226;
    v216 = v227;
    sub_1BA6C0C20(v159, v254, v224, v168, v191, v226, v227);
    sub_1BA6C0C20(v159, v213, v214, v168, v191, v215, v216);
    sub_1BA4A2E80(v245, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v70 = v257;
    v61 = v265;
    v152 = v266;
    goto LABEL_60;
  }
  v231 = v161;
  v243 = (char *)((*(unsigned __int8 *)(v241 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v241 + 80));
  v165 = (uint64_t)&v243[v163];
  v166 = *(_QWORD *)(v241 + 72);
  v233 = v163;
  swift_bridgeObjectRetain();
  v167 = v251;
  v168 = v229;
  v244 = v160;
  while (1)
  {
    sub_1BA4C2DD8(v165, (uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    if (*(_QWORD *)(v160 + 16))
      break;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v242 + 56))(v167, 1, 1, v240);
LABEL_78:
    sub_1BA604728(v167, (uint64_t)&qword_1ED3B78C0, (uint64_t)type metadata accessor for FormatPropertyDefinition, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
    sub_1BA4C2DD8((uint64_t)v76, v250, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v179 = v269;
    v180 = (uint64_t)v76;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v179 = sub_1BA7AD174(0, *(_QWORD *)(v179 + 16) + 1, 1, v179);
    v182 = *(_QWORD *)(v179 + 16);
    v181 = *(_QWORD *)(v179 + 24);
    if (v182 >= v181 >> 1)
      v179 = sub_1BA7AD174(v181 > 1, v182 + 1, 1, v179);
    *(_QWORD *)(v179 + 16) = v182 + 1;
    v169 = v166;
    sub_1BA5193C4(v250, (uint64_t)&v243[v179 + v182 * v166], (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v269 = v179;
LABEL_71:
    v76 = (uint64_t *)v180;
    sub_1BA4A2E80(v180, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v165 += v169;
    --v164;
    v167 = v251;
    v160 = v244;
    if (!v164)
    {
      swift_bridgeObjectRelease();
      v159 = v256;
      v162 = v255;
      v161 = v231;
      goto LABEL_90;
    }
  }
  v170 = *v76;
  v171 = v76[1];
  swift_bridgeObjectRetain();
  v172 = sub_1BA6E35A8(v170, v171);
  if ((v173 & 1) != 0)
  {
    v174 = *(_QWORD *)(v160 + 56);
    v175 = v242;
    v167 = v251;
    sub_1BA4C2DD8(v174 + *(_QWORD *)(v242 + 72) * v172, v251, type metadata accessor for FormatPropertyDefinition);
    v176 = 0;
  }
  else
  {
    v176 = 1;
    v175 = v242;
    v167 = v251;
  }
  v177 = v240;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v175 + 56))(v167, v176, 1, v240);
  swift_bridgeObjectRelease();
  v178 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v167, 1, v177);
  v168 = v229;
  if (v178 == 1)
    goto LABEL_78;
  v183 = v237;
  sub_1BA5193C4(v167, v237, type metadata accessor for FormatPropertyDefinition);
  type metadata accessor for FormatOptionConverter();
  v184 = v236;
  v185 = v228;
  sub_1BB24F56C(v76, v183, v236);
  v228 = v185;
  if (!v185)
  {
    sub_1BA4C2DD8((uint64_t)v184, v235, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v186 = v269;
    v180 = (uint64_t)v76;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v186 = sub_1BA7AD174(0, *(_QWORD *)(v186 + 16) + 1, 1, v186);
    v188 = *(_QWORD *)(v186 + 16);
    v187 = *(_QWORD *)(v186 + 24);
    if (v188 >= v187 >> 1)
      v186 = sub_1BA7AD174(v187 > 1, v188 + 1, 1, v186);
    *(_QWORD *)(v186 + 16) = v188 + 1;
    v169 = v166;
    sub_1BA5193C4(v235, (uint64_t)&v243[v186 + v188 * v166], (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v269 = v186;
    sub_1BA4A2E80((uint64_t)v236, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    sub_1BA4A2E80(v237, type metadata accessor for FormatPropertyDefinition);
    goto LABEL_71;
  }
  swift_bridgeObjectRelease();
  v217 = v256;
  v218 = v254;
  v219 = v224;
  v220 = v232;
  v221 = v226;
  v222 = v227;
  sub_1BA6C0C20(v256, v254, v224, v168, v232, v226, v227);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6C0C20(v217, v218, v219, v168, v220, v221, v222);
  sub_1BA70ABF4(v264, v259);
  sub_1BA4A2E80(v237, type metadata accessor for FormatPropertyDefinition);
  sub_1BA4A2E80((uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v245, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v257, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
}

uint64_t sub_1BB45A2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  char v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v121;
  int EnumCaseMultiPayload;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(_QWORD);
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t (*v168)();
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t (*v172)();
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t (*v201)(uint64_t);
  uint64_t v202;
  uint64_t (*v203)(uint64_t);
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  BOOL v214;
  char v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unsigned __int8 v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unsigned __int8 v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t *v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  _QWORD *v264;
  uint64_t *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int v274;
  char v275;
  uint64_t v276[5];
  unint64_t v277;
  uint64_t v278[6];
  uint64_t v279;

  v269 = a8;
  v258 = a7;
  v257 = a6;
  v271 = a4;
  v272 = a5;
  v270 = a3;
  v261 = a2;
  v273 = a1;
  v256 = a9;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B78C0, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v260 = (uint64_t)&v233 - v15;
  v247 = type metadata accessor for FormatOption();
  v250 = *(_QWORD *)(v247 - 8);
  MEMORY[0x1E0C80A78](v247);
  v244 = (uint64_t)&v233 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v245 = (uint64_t *)((char *)&v233 - v18);
  MEMORY[0x1E0C80A78](v19);
  v259 = (uint64_t)&v233 - v20;
  MEMORY[0x1E0C80A78](v21);
  v251 = (uint64_t *)((char *)&v233 - v22);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2500, v23, v13);
  MEMORY[0x1E0C80A78](v24);
  v248 = (uint64_t)&v233 - v25;
  v249 = type metadata accessor for FormatPropertyDefinition(0);
  v252 = *(_QWORD *)(v249 - 8);
  MEMORY[0x1E0C80A78](v249);
  v246 = (uint64_t)&v233 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v233 - v28;
  sub_1BA7A2A04(0);
  v240 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v233 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v243);
  v255 = (uint64_t)&v233 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v34);
  v242 = (uint64_t)&v233 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v263);
  v264 = (uint64_t *)((char *)&v233 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v262 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v262);
  v253 = (char *)&v233 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v267 = (uint64_t)&v233 - v39;
  MEMORY[0x1E0C80A78](v40);
  v266 = v12;
  v41 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
  v42 = *(_QWORD *)(v41 + 16);
  v265 = (uint64_t *)((char *)&v233 - v43);
  if (v42)
  {
    swift_bridgeObjectRetain();
    v44 = 0;
    v45 = 0;
    do
    {
      v275 = *(_BYTE *)(v41 + v44 + 32);
      sub_1BA758024();
      v46 = v276[0];
      if ((v276[0] & ~v45) == 0)
        v46 = 0;
      v45 |= v46;
      ++v44;
    }
    while (v42 != v44);
    swift_bridgeObjectRelease();
  }
  else
  {
    v45 = 0;
  }
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v45;
  sub_1BA4B07F0(0, &qword_1EF2C4530, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v49 = v48;
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = MEMORY[0x1E0DEE9D8];
  v51 = (_QWORD *)(v50 + 16);
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = sub_1BB4692C0;
  *(_QWORD *)(v52 + 24) = v47;
  swift_beginAccess();
  v53 = *(_QWORD **)(v50 + 16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v50 + 16) = v53;
  v239 = v29;
  v241 = v32;
  v254 = v49;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v53 = sub_1BB38FD8C(0, v53[2] + 1, 1, v53);
    *v51 = v53;
  }
  v274 = a11;
  v55 = a10;
  v57 = v53[2];
  v56 = v53[3];
  if (v57 >= v56 >> 1)
  {
    v53 = sub_1BB38FD8C((_QWORD *)(v56 > 1), v57 + 1, 1, v53);
    *v51 = v53;
  }
  v53[2] = v57 + 1;
  v58 = &v53[2 * v57];
  v58[4] = sub_1BB4692C8;
  v58[5] = v52;
  swift_endAccess();
  swift_release();
  v59 = v267;
  v60 = v273;
  v61 = v269;
  v62 = (_QWORD *)v268;
  sub_1BB782724(v270, v271, v50, v272, 1, v269, a10, v274 & 1, v267);
  v63 = v62;
  if (!v62)
  {
    swift_release();
    v70 = v265;
    sub_1BA5193C4(v59, (uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v72 = v70[5];
    v71 = v70[6];
    swift_bridgeObjectRetain();
    v73 = v261;
    v74 = sub_1BA78B1DC(v261, v61, a10, v72, v71);
    swift_bridgeObjectRelease();
    v279 = v74;
    swift_bridgeObjectRetain();
    v75 = sub_1BA78B2D4(v73, v61, a10, v72, v71);
    swift_bridgeObjectRelease();
    v253 = (char *)v75;
    v277 = v75;
    v254 = v74;
    if (!a10)
    {
      v91 = 0;
      v92 = 0;
      v93 = 0;
      v89 = 0;
      v76 = 0;
      goto LABEL_50;
    }
    v76 = *(_QWORD *)(v73 + 16);
    if (v76)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v77 = sub_1BA6E35A8(v269, a10);
      if ((v78 & 1) != 0)
      {
        v79 = *(_QWORD *)(*(_QWORD *)(v73 + 56) + 8 * v77);
        swift_retain();
        swift_bridgeObjectRelease();
        v80 = *(_QWORD *)(v79 + 136);
        swift_bridgeObjectRetain();
        swift_release();
        if (*(_QWORD *)(v80 + 16))
        {
          swift_bridgeObjectRetain();
          v81 = sub_1BA6E35A8(v72, v71);
          if ((v82 & 1) != 0)
          {
            v83 = (uint64_t *)(*(_QWORD *)(v80 + 56) + 48 * v81);
            v84 = v83[1];
            v272 = *v83;
            v85 = v83[2];
            v86 = v83[3];
            v87 = v83[4];
            v88 = v83[5];
            v269 = v84;
            v270 = v87;
            swift_bridgeObjectRetain();
            v271 = v85;
            swift_bridgeObjectRetain();
            v89 = v86;
            swift_bridgeObjectRetain();
            v55 = v88;
            swift_bridgeObjectRetain();
          }
          else
          {
            v271 = 0;
            v272 = 0;
            v269 = 0;
            v270 = 0;
            v89 = 0;
            v55 = 0;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v271 = 0;
          v272 = 0;
          v269 = 0;
          v270 = 0;
          v89 = 0;
          v55 = 0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v92 = v269;
        v76 = v270;
        v93 = v271;
        v91 = v272;
        goto LABEL_50;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v91 = 0;
      v92 = 0;
      v93 = 0;
      v89 = 0;
      v76 = 0;
    }
    else
    {
      v91 = 0;
      v92 = 0;
      v93 = 0;
      v89 = 0;
    }
    v55 = 0;
    goto LABEL_50;
  }
  swift_release();
  if ((*(_BYTE *)(v266 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback) & 1) == 0)
    return swift_willThrow();
  v64 = *(_QWORD *)(v41 + 16);
  if (v64)
  {
    swift_bridgeObjectRetain();
    v65 = 0;
    v66 = 0;
    v67 = (uint64_t)v253;
    v68 = MEMORY[0x1E0DEE9D8];
    do
    {
      v275 = *(_BYTE *)(v41 + v65 + 32);
      sub_1BA758024();
      v69 = v276[0];
      if ((v276[0] & ~v66) == 0)
        v69 = 0;
      v66 |= v69;
      ++v65;
    }
    while (v64 != v65);
    swift_bridgeObjectRelease();
  }
  else
  {
    v66 = 0;
    v67 = (uint64_t)v253;
    v68 = MEMORY[0x1E0DEE9D8];
  }
  v94 = swift_allocObject();
  *(_QWORD *)(v94 + 16) = v66;
  v95 = swift_allocObject();
  *(_QWORD *)(v95 + 16) = v68;
  v96 = (_QWORD *)(v95 + 16);
  v97 = swift_allocObject();
  *(_QWORD *)(v97 + 16) = sub_1BB46944C;
  *(_QWORD *)(v97 + 24) = v94;
  swift_beginAccess();
  v98 = *(_QWORD **)(v95 + 16);
  swift_retain();
  v99 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v95 + 16) = v98;
  if ((v99 & 1) == 0)
  {
    v98 = sub_1BB38FD8C(0, v98[2] + 1, 1, v98);
    *v96 = v98;
  }
  v101 = v98[2];
  v100 = v98[3];
  if (v101 >= v100 >> 1)
  {
    v98 = sub_1BB38FD8C((_QWORD *)(v100 > 1), v101 + 1, 1, v98);
    *v96 = v98;
  }
  v98[2] = v101 + 1;
  v102 = &v98[2 * v101];
  v102[4] = sub_1BB4692C8;
  v102[5] = v97;
  swift_endAccess();
  swift_release();
  v60 = v273;
  sub_1BB782724(v270, v271, v95, v272, 1, 0, 0, v274 & 1, v67);
  swift_release();
  v70 = v265;
  sub_1BA5193C4(v67, (uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  v104 = v70[5];
  v103 = v70[6];
  swift_bridgeObjectRetain();
  v105 = v261;
  v106 = sub_1BA78B1DC(v261, 42, 0xE100000000000000, v104, v103);
  swift_bridgeObjectRelease();
  v254 = v106;
  v279 = v106;
  swift_bridgeObjectRetain();
  v107 = sub_1BA78B2D4(v105, 42, 0xE100000000000000, v104, v103);
  swift_bridgeObjectRelease();
  v253 = (char *)v107;
  v277 = v107;
  v108 = *(_QWORD *)(v105 + 16);
  swift_bridgeObjectRetain();
  if (v108 && (v109 = sub_1BA6E35A8(42, 0xE100000000000000), (v110 & 1) != 0))
  {
    v111 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v105 + 56) + 8 * v109) + 136);
    if (*(_QWORD *)(v111 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v112 = sub_1BA6E35A8(v104, v103);
      if ((v113 & 1) != 0)
      {
        v114 = (uint64_t *)(*(_QWORD *)(v111 + 56) + 48 * v112);
        v115 = v114[1];
        v272 = *v114;
        v116 = v114[2];
        v117 = v114[3];
        v118 = v114[4];
        v119 = v114[5];
        v269 = v115;
        v270 = v118;
        swift_bridgeObjectRetain();
        v271 = v116;
        swift_bridgeObjectRetain();
        v268 = v117;
        swift_bridgeObjectRetain();
        v267 = v119;
        swift_bridgeObjectRetain();
      }
      else
      {
        v271 = 0;
        v272 = 0;
        v269 = 0;
        v268 = 0;
        v270 = 0;
        v267 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = v269;
    }
    else
    {
      v271 = 0;
      v272 = 0;
      v92 = 0;
      v268 = 0;
      v270 = 0;
      v267 = 0;
    }

    swift_bridgeObjectRelease();
    v63 = 0;
    v89 = v268;
    v76 = v270;
    v93 = v271;
    v55 = v267;
    v91 = v272;
  }
  else
  {

    swift_bridgeObjectRelease();
    v91 = 0;
    v92 = 0;
    v93 = 0;
    v89 = 0;
    v76 = 0;
    v55 = 0;
    v63 = 0;
  }
LABEL_50:
  v271 = v93;
  v272 = v91;
  v278[0] = v91;
  v278[1] = v92;
  v278[2] = v93;
  v278[3] = v89;
  v268 = v89;
  v270 = v76;
  v278[4] = v76;
  v278[5] = v55;
  v267 = v55;
  v276[3] = v262;
  v276[4] = sub_1BA4A2870(&qword_1EF2B1A40, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v276);
  sub_1BA4C2DD8((uint64_t)v70, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  v121 = (uint64_t)v264;
  sub_1BA7BC210(v276, (uint64_t)v264);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v269 = v92;
  if (EnumCaseMultiPayload == 8)
  {
    v129 = v255;
    sub_1BA5193C4(v121, v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v130 = (uint64_t *)(a12 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
    swift_beginAccess();
    v131 = v130[1];
    v132 = v129 + *(int *)(v243 + 20);
    v133 = *(_QWORD *)(v131 + 16);
    v243 = v132;
    if (v133)
    {
      v134 = *v130;
      v135 = *(_QWORD *)(v132 + 16);
      v136 = *(_QWORD *)(v132 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v137 = sub_1BA6E35A8(v135, v136);
      if ((v138 & 1) != 0)
      {
        v139 = (uint64_t)v241;
        sub_1BA4C2DD8(*(_QWORD *)(v131 + 56) + *(_QWORD *)(v240 + 72) * v137, (uint64_t)v241, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
        v140 = *(_QWORD *)(v139 + 8);
        v237 = *(_QWORD *)v139;
        v141 = *(_QWORD *)(v139 + 24);
        v264 = *(_QWORD **)(v139 + 16);
        v143 = *(_QWORD *)(v139 + 32);
        v142 = *(_QWORD *)(v139 + 40);
        v144 = *(_QWORD *)(v139 + 48);
        v236 = *(_QWORD *)(v139 + 56);
        v233 = v134;
        v146 = *(_QWORD *)(v139 + 64);
        v145 = *(_QWORD *)(v139 + 72);
        v235 = *(char *)(v139 + 80);
        v242 = v140;
        swift_bridgeObjectRetain();
        v240 = v141;
        swift_bridgeObjectRetain();
        v261 = v143;
        v147 = v143;
        v263 = v142;
        v234 = v144;
        v148 = v144;
        v149 = v236;
        v238 = v146;
        v262 = v145;
        v150 = v235;
        sub_1BA709DE8(v147, v142, v148, v236, v146, v145, v235);
        sub_1BA4A2E80(v139, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v150 & 0x80000000) == 0)
        {
          v151 = v149;
          v70 = v265;
          v152 = v234;
          v153 = v238;
          v154 = v262;
LABEL_65:
          sub_1BA70ABF4(v272, v269);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          type metadata accessor for FormatLayoutError();
          sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
          swift_allocError();
          v158 = *(_QWORD *)(v243 + 24);
          *v159 = *(_QWORD *)(v243 + 16);
          v159[1] = v158;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BA8CEA24(v237, v242, (uint64_t)v264, v240, v261, v263, v152, v151, v153, v154, v150);
          sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          goto LABEL_66;
        }
        v276[0] = v261;
        sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA547334((unint64_t *)&qword_1ED3A2F58, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition);
        sub_1BA4A2870(&qword_1ED3A0FB0, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
        swift_bridgeObjectRetain();
        v161 = sub_1BB872BBC();
        v162 = *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 28);
        v163 = v243;
        v164 = *(_QWORD *)(v243 + v162);
        v165 = *(_QWORD *)(v164 + 16);
        if (!v165)
        {
          v194 = v234;
          v193 = v262;
LABEL_90:
          swift_bridgeObjectRelease();
          v276[0] = *(_QWORD *)(v163 + v162);
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1BA547334((unint64_t *)&qword_1ED39EA08, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
          sub_1BA4A2870(&qword_1ED39C9E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
          v195 = sub_1BB872BB0();
          v196 = *(_QWORD *)(v261 + 16);
          v197 = (uint64_t)v239;
          v198 = v263;
          v199 = v238;
          if (v196)
          {
            v264 = (_QWORD *)v195;
            v200 = v261
                 + ((*(unsigned __int8 *)(v252 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80));
            v260 = *(_QWORD *)(v252 + 72);
            v201 = type metadata accessor for FormatPropertyDefinition;
            do
            {
              v203 = v201;
              sub_1BA4C2DD8(v200, v197, v201);
              v204 = v197;
              FormatPropertyDefinition.identifier.getter();
              v207 = (uint64_t)v264;
              if (v264[2] && (v208 = sub_1BA6E35A8(v205, v206), (v209 & 1) != 0))
              {
                sub_1BA4C2DD8(*(_QWORD *)(v207 + 56) + *(_QWORD *)(v250 + 72) * v208, v248, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
                v210 = 0;
              }
              else
              {
                v210 = 1;
              }
              v211 = v250;
              v212 = v248;
              v213 = v247;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v250 + 56))(v248, v210, 1, v247);
              swift_bridgeObjectRelease();
              LODWORD(v213) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v211 + 48))(v212, 1, v213);
              sub_1BA604728(v212, (uint64_t)&qword_1ED3D2500, (uint64_t)type metadata accessor for FormatOption, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
              v214 = (_DWORD)v213 == 1;
              v197 = v204;
              if (v214)
              {
                sub_1BB12B170();
                if ((v215 & 1) != 0)
                {
                  sub_1BA70ABF4(v272, v269);
                  swift_bridgeObjectRelease();
                  v216 = v261;
                  v217 = v263;
                  v218 = v234;
                  sub_1BA6C0C20(v261, v263, v234, v236, v238, v262, v235);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  type metadata accessor for FormatLayoutError();
                  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
                  swift_allocError();
                  v220 = v219;
                  sub_1BB468FA8();
                  v222 = v220 + *(int *)(v221 + 48);
                  v223 = v255;
                  sub_1BA4C2DD8(v255, v220, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
                  sub_1BA4C2DD8(v197, v222, type metadata accessor for FormatPropertyDefinition);
                  swift_storeEnumTagMultiPayload();
                  swift_willThrow();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1BA6C0C20(v216, v217, v218, v236, v238, v262, v235);
                  sub_1BA4A2E80(v197, type metadata accessor for FormatPropertyDefinition);
                  sub_1BA4A2E80(v223, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
                  v160 = (uint64_t)v265;
                  return sub_1BA4A2E80(v160, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
                }
              }
              v202 = v204;
              v201 = v203;
              sub_1BA4A2E80(v202, v203);
              v200 += v260;
              --v196;
              v198 = v263;
              v199 = v238;
            }
            while (v196);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v194 = v234;
            v149 = v236;
            v193 = v262;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v224 = v261;
          v225 = v235;
          sub_1BA6C0C20(v261, v198, v194, v149, v199, v193, v235);
          sub_1BA6C0C20(v224, v198, v194, v149, v199, v193, v225);
          sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          v70 = v265;
          v60 = v273;
          goto LABEL_59;
        }
        v254 = v161;
        v237 = v162;
        v253 = (char *)((*(unsigned __int8 *)(v250 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80));
        v166 = (uint64_t)&v253[v164];
        v167 = *(_QWORD *)(v250 + 72);
        v241 = (char *)v164;
        swift_bridgeObjectRetain();
        v168 = type metadata accessor for FormatOption;
        v169 = v260;
        v170 = v262;
        v171 = v251;
        while (1)
        {
          v264 = v63;
          v172 = v168;
          sub_1BA4C2DD8(v166, (uint64_t)v171, (uint64_t (*)(_QWORD))v168);
          v173 = v254;
          if (!*(_QWORD *)(v254 + 16))
            break;
          v174 = *v171;
          v175 = v171[1];
          swift_bridgeObjectRetain();
          v176 = sub_1BA6E35A8(v174, v175);
          if ((v177 & 1) != 0)
          {
            v178 = *(_QWORD *)(v173 + 56);
            v179 = v252;
            v169 = v260;
            sub_1BA4C2DD8(v178 + *(_QWORD *)(v252 + 72) * v176, v260, type metadata accessor for FormatPropertyDefinition);
            v180 = 0;
          }
          else
          {
            v180 = 1;
            v179 = v252;
            v169 = v260;
          }
          v181 = v249;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v179 + 56))(v169, v180, 1, v249);
          swift_bridgeObjectRelease();
          v182 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v169, 1, v181);
          v170 = v262;
          if (v182 == 1)
            goto LABEL_78;
          v186 = v246;
          sub_1BA5193C4(v169, v246, type metadata accessor for FormatPropertyDefinition);
          type metadata accessor for FormatOptionConverter();
          v187 = v245;
          v188 = (uint64_t)v264;
          sub_1BB24F56C(v171, v186, v245);
          if (v188)
          {
            swift_bridgeObjectRelease();
            v226 = v261;
            v227 = v263;
            v228 = v234;
            v229 = v236;
            v230 = v238;
            v231 = v262;
            v232 = v235;
            sub_1BA6C0C20(v261, v263, v234, v236, v238, v262, v235);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA6C0C20(v226, v227, v228, v229, v230, v231, v232);
            sub_1BA70ABF4(v272, v269);
            sub_1BA4A2E80(v246, type metadata accessor for FormatPropertyDefinition);
            sub_1BA4A2E80((uint64_t)v171, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            swift_bridgeObjectRelease();
            sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return sub_1BA4A2E80((uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
          }
          v168 = v172;
          sub_1BA4C2DD8((uint64_t)v187, v244, (uint64_t (*)(_QWORD))v172);
          v189 = v277;
          v190 = swift_isUniquelyReferenced_nonNull_native();
          v170 = v262;
          if ((v190 & 1) == 0)
            v189 = sub_1BA7AD174(0, *(_QWORD *)(v189 + 16) + 1, 1, v189);
          v63 = 0;
          v192 = *(_QWORD *)(v189 + 16);
          v191 = *(_QWORD *)(v189 + 24);
          if (v192 >= v191 >> 1)
            v189 = sub_1BA7AD174(v191 > 1, v192 + 1, 1, v189);
          *(_QWORD *)(v189 + 16) = v192 + 1;
          sub_1BA5193C4(v244, (uint64_t)&v253[v189 + v192 * v167], (uint64_t (*)(_QWORD))v168);
          v277 = v189;
          sub_1BA4A2E80((uint64_t)v245, (uint64_t (*)(_QWORD))v168);
          sub_1BA4A2E80(v246, type metadata accessor for FormatPropertyDefinition);
LABEL_71:
          v171 = v251;
          sub_1BA4A2E80((uint64_t)v251, (uint64_t (*)(_QWORD))v168);
          v166 += v167;
          --v165;
          v169 = v260;
          if (!v165)
          {
            swift_bridgeObjectRelease();
            v149 = v236;
            v163 = v243;
            v162 = v237;
            v193 = v170;
            v194 = v234;
            goto LABEL_90;
          }
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v252 + 56))(v169, 1, 1, v249);
LABEL_78:
        sub_1BA604728(v169, (uint64_t)&qword_1ED3B78C0, (uint64_t)type metadata accessor for FormatPropertyDefinition, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        v168 = v172;
        sub_1BA4C2DD8((uint64_t)v171, v259, (uint64_t (*)(_QWORD))v172);
        v183 = v277;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v183 = sub_1BA7AD174(0, *(_QWORD *)(v183 + 16) + 1, 1, v183);
        v63 = v264;
        v185 = *(_QWORD *)(v183 + 16);
        v184 = *(_QWORD *)(v183 + 24);
        if (v185 >= v184 >> 1)
          v183 = sub_1BA7AD174(v184 > 1, v185 + 1, 1, v183);
        *(_QWORD *)(v183 + 16) = v185 + 1;
        sub_1BA5193C4(v259, (uint64_t)&v253[v183 + v185 * v167], (uint64_t (*)(_QWORD))v168);
        v277 = v183;
        goto LABEL_71;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v237 = 0;
    v242 = 0;
    v264 = 0;
    v240 = 0;
    v261 = 0;
    v263 = 0;
    v152 = 0;
    v151 = 0;
    v153 = 0;
    v154 = 0;
    LOBYTE(v150) = 0;
    goto LABEL_65;
  }
  if (EnumCaseMultiPayload == 4)
  {
    v123 = v121;
    v124 = v242;
    sub_1BA5193C4(v123, v242, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v125 = sub_1BB11BDF4();
    sub_1BA6D3834(v125);
    v126 = sub_1BB11C124();
    sub_1BA6E3FB8(v126);
    v127 = v124;
    v128 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
  }
  else
  {
    v128 = type metadata accessor for FeedItem;
    v127 = v121;
  }
  sub_1BA4A2E80(v127, v128);
LABEL_59:
  v155 = v279;
  v156 = v277;
  v157 = *(_BYTE *)(v60 + 88);
  if ((v274 & 1) != 0)
  {
    swift_beginAccess();
    sub_1BB464144(v70, v155, v156, v278, v257, v258, v157, v256);
  }
  else
  {
    swift_beginAccess();
    sub_1BB4656D0(v70, v155, v156, v278, v257, v258, v157, v256);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70ABF4(v272, v269);
LABEL_66:
  v160 = (uint64_t)v70;
  return sub_1BA4A2E80(v160, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
}

uint64_t sub_1BB45BE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  char v88;
  unint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  _OWORD *v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  int EnumCaseMultiPayload;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(_QWORD);
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned __int8 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t (*v164)();
  uint64_t *v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  uint64_t (*v169)();
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  _QWORD *v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unsigned __int8 v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unsigned __int8 v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  uint64_t v269;
  int v270;
  uint64_t v271;
  char v272;
  __int128 v273;
  unsigned __int8 v274;
  ValueMetadata *v275;
  unint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  uint64_t v285[6];
  uint64_t v286;

  v265 = a8;
  v256 = a6;
  v268 = a5;
  v267 = a4;
  v266 = a3;
  v260 = a2;
  v269 = a1;
  v255 = a9;
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B78C0, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v259 = (uint64_t)&v225 - v16;
  v246 = type metadata accessor for FormatOption();
  v249 = *(_QWORD *)(v246 - 8);
  MEMORY[0x1E0C80A78](v246);
  v243 = (uint64_t)&v225 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v245 = (char *)&v225 - v19;
  MEMORY[0x1E0C80A78](v20);
  v258 = (uint64_t)&v225 - v21;
  MEMORY[0x1E0C80A78](v22);
  v250 = (uint64_t *)((char *)&v225 - v23);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2500, v24, v14);
  MEMORY[0x1E0C80A78](v25);
  v247 = (uint64_t)&v225 - v26;
  v248 = type metadata accessor for FormatPropertyDefinition(0);
  v251 = *(_QWORD *)(v248 - 8);
  MEMORY[0x1E0C80A78](v248);
  v244 = (uint64_t)&v225 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v254 = (uint64_t)&v225 - v29;
  sub_1BA7A2A04(0);
  v238 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v239 = (uint64_t)&v225 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v242);
  v33 = (char *)&v225 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v34);
  v241 = (uint64_t)&v225 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v261 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v261);
  v262 = (uint64_t)&v225 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = v12;
  v37 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
  v38 = *(_QWORD *)(v37 + 16);
  if (v38)
  {
    swift_bridgeObjectRetain();
    v39 = 0;
    v40 = 0;
    do
    {
      v272 = *(_BYTE *)(v37 + v39 + 32);
      sub_1BA758024();
      v41 = v271;
      if ((v271 & ~v40) == 0)
        v41 = 0;
      v40 |= v41;
      ++v39;
    }
    while (v38 != v39);
    swift_bridgeObjectRelease();
  }
  else
  {
    v40 = 0;
  }
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v40;
  sub_1BA4AD288(0, &qword_1EF2C4528, (uint64_t)&type metadata for FeedPuzzleType, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FeedItemSorter);
  v44 = v43;
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = MEMORY[0x1E0DEE9D8];
  v46 = (_QWORD *)(v45 + 16);
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = sub_1BB469244;
  *(_QWORD *)(v47 + 24) = v42;
  swift_beginAccess();
  v48 = *(_QWORD **)(v45 + 16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v45 + 16) = v48;
  v253 = v33;
  v257 = a7;
  v252 = v44;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v48 = sub_1BB38FED0(0, v48[2] + 1, 1, v48);
    *v46 = v48;
  }
  v270 = a11;
  v50 = a10;
  v52 = v48[2];
  v51 = v48[3];
  if (v52 >= v51 >> 1)
  {
    v48 = sub_1BB38FED0((_QWORD *)(v51 > 1), v52 + 1, 1, v48);
    *v46 = v48;
  }
  v48[2] = v52 + 1;
  v53 = &v48[2 * v52];
  v53[4] = sub_1BB469248;
  v53[5] = v47;
  swift_endAccess();
  swift_release();
  v54 = v265;
  v55 = (void *)v264;
  sub_1BB782B20(v266, v267, v45, v268, 1, v265, a10, v270 & 1, &v273);
  v56 = v55;
  if (!v55)
  {
    swift_release();
    v240 = *((_QWORD *)&v273 + 1);
    v62 = v273;
    LODWORD(v237) = v274;
    v267 = (uint64_t)v275;
    v63 = v277;
    v268 = v276;
    v65 = v278;
    v64 = v279;
    swift_bridgeObjectRetain();
    v66 = v260;
    v67 = v54;
    v68 = sub_1BA78B1DC(v260, v54, a10, v63, v65);
    swift_bridgeObjectRelease();
    v286 = v68;
    swift_bridgeObjectRetain();
    v69 = sub_1BA78B2D4(v66, v67, a10, v63, v65);
    swift_bridgeObjectRelease();
    v234 = v69;
    v280 = v69;
    v235 = v68;
    if (a10)
    {
      if (*(_QWORD *)(v66 + 16))
      {
        v266 = v64;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v70 = sub_1BA6E35A8(v265, a10);
        if ((v71 & 1) != 0)
        {
          v72 = *(_QWORD *)(*(_QWORD *)(v66 + 56) + 8 * v70);
          swift_retain();
          swift_bridgeObjectRelease();
          v73 = *(_QWORD *)(v72 + 136);
          swift_bridgeObjectRetain();
          swift_release();
          if (*(_QWORD *)(v73 + 16))
          {
            swift_bridgeObjectRetain();
            v74 = sub_1BA6E35A8(v63, v65);
            if ((v75 & 1) != 0)
            {
              v76 = (uint64_t *)(*(_QWORD *)(v73 + 56) + 48 * v74);
              v50 = *v76;
              v77 = v76[1];
              v78 = v76[2];
              v79 = v76[3];
              v80 = v76[5];
              v252 = v76[4];
              v265 = v77;
              swift_bridgeObjectRetain();
              v264 = v78;
              swift_bridgeObjectRetain();
              v260 = v79;
              swift_bridgeObjectRetain();
              v81 = v80;
              swift_bridgeObjectRetain();
            }
            else
            {
              v50 = 0;
              v265 = 0;
              v264 = 0;
              v260 = 0;
              v252 = 0;
              v81 = 0;
            }
            v92 = v62;
            swift_bridgeObjectRelease();
          }
          else
          {
            v50 = 0;
            v265 = 0;
            v264 = 0;
            v260 = 0;
            v252 = 0;
            v81 = 0;
            v92 = v62;
          }
          v93 = v240;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v64 = v266;
          v108 = v265;
          v109 = v264;
          v110 = v260;
          v111 = v252;
          v112 = v81;
          goto LABEL_41;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v50 = 0;
        v108 = 0;
        v109 = 0;
        v110 = 0;
        v111 = 0;
        v112 = 0;
        v64 = v266;
LABEL_40:
        v92 = v62;
        v93 = v240;
        goto LABEL_41;
      }
      v50 = 0;
    }
    v108 = 0;
    v109 = 0;
    v110 = 0;
    v111 = 0;
    v112 = 0;
    goto LABEL_40;
  }
  swift_release();
  if ((*(_BYTE *)(v263 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback) & 1) == 0)
    return swift_willThrow();
  v57 = *(_QWORD *)(v37 + 16);
  if (v57)
  {
    swift_bridgeObjectRetain();
    v58 = 0;
    v59 = 0;
    v60 = MEMORY[0x1E0DEE9D8];
    do
    {
      v272 = *(_BYTE *)(v37 + v58 + 32);
      sub_1BA758024();
      v61 = v271;
      if ((v271 & ~v59) == 0)
        v61 = 0;
      v59 |= v61;
      ++v58;
    }
    while (v57 != v58);
    swift_bridgeObjectRelease();
  }
  else
  {
    v59 = 0;
    v60 = MEMORY[0x1E0DEE9D8];
  }
  v83 = swift_allocObject();
  *(_QWORD *)(v83 + 16) = v59;
  v84 = swift_allocObject();
  *(_QWORD *)(v84 + 16) = v60;
  v85 = (_QWORD *)(v84 + 16);
  v86 = swift_allocObject();
  *(_QWORD *)(v86 + 16) = sub_1BB469244;
  *(_QWORD *)(v86 + 24) = v83;
  swift_beginAccess();
  v87 = *(_QWORD **)(v84 + 16);
  swift_retain();
  v88 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v84 + 16) = v87;
  if ((v88 & 1) == 0)
  {
    v87 = sub_1BB38FED0(0, v87[2] + 1, 1, v87);
    *v85 = v87;
  }
  v90 = v87[2];
  v89 = v87[3];
  if (v90 >= v89 >> 1)
  {
    v87 = sub_1BB38FED0((_QWORD *)(v89 > 1), v90 + 1, 1, v87);
    *v85 = v87;
  }
  v87[2] = v90 + 1;
  v91 = &v87[2 * v90];
  v91[4] = sub_1BB469494;
  v91[5] = v86;
  swift_endAccess();
  swift_release();
  sub_1BB782B20(v266, v267, v84, v268, 1, 0, 0, v270 & 1, &v273);
  swift_release();
  v93 = *((_QWORD *)&v273 + 1);
  v92 = v273;
  LODWORD(v237) = v274;
  v267 = (uint64_t)v275;
  v63 = v277;
  v268 = v276;
  v65 = v278;
  v64 = v279;
  swift_bridgeObjectRetain();
  v94 = v260;
  v95 = sub_1BA78B1DC(v260, 42, 0xE100000000000000, v63, v65);
  swift_bridgeObjectRelease();
  v235 = v95;
  v286 = v95;
  swift_bridgeObjectRetain();
  v96 = sub_1BA78B2D4(v94, 42, 0xE100000000000000, v63, v65);
  swift_bridgeObjectRelease();
  v280 = v96;
  v97 = *(_QWORD *)(v94 + 16);
  swift_bridgeObjectRetain();
  v234 = v96;
  if (v97)
  {
    v266 = v64;
    v98 = sub_1BA6E35A8(42, 0xE100000000000000);
    if ((v99 & 1) != 0)
    {
      v100 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v94 + 56) + 8 * v98) + 136);
      if (*(_QWORD *)(v100 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v101 = sub_1BA6E35A8(v63, v65);
        if ((v102 & 1) != 0)
        {
          v103 = (uint64_t *)(*(_QWORD *)(v100 + 56) + 48 * v101);
          v104 = v103[1];
          v236 = *v103;
          v105 = v103[2];
          v106 = v103[3];
          v107 = v103[5];
          v252 = v103[4];
          v265 = v104;
          swift_bridgeObjectRetain();
          v264 = v105;
          swift_bridgeObjectRetain();
          v260 = v106;
          swift_bridgeObjectRetain();
          v240 = v107;
          swift_bridgeObjectRetain();
        }
        else
        {
          v236 = 0;
          v265 = 0;
          v264 = 0;
          v260 = 0;
          v252 = 0;
          v240 = 0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v236 = 0;
        v265 = 0;
        v264 = 0;
        v260 = 0;
        v252 = 0;
        v240 = 0;
      }

      swift_bridgeObjectRelease();
      v56 = 0;
      v64 = v266;
      v50 = v236;
      v108 = v265;
      v109 = v264;
      v110 = v260;
      v111 = v252;
      v112 = v240;
    }
    else
    {

      swift_bridgeObjectRelease();
      v50 = 0;
      v108 = 0;
      v109 = 0;
      v110 = 0;
      v111 = 0;
      v112 = 0;
      v56 = 0;
      v64 = v266;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    v50 = 0;
    v108 = 0;
    v109 = 0;
    v110 = 0;
    v111 = 0;
    v112 = 0;
    v56 = 0;
  }
LABEL_41:
  v285[0] = v50;
  v285[1] = v108;
  v265 = v108;
  v264 = v109;
  v285[2] = v109;
  v285[3] = v110;
  v260 = v110;
  v252 = v111;
  v285[4] = v111;
  v285[5] = v112;
  v240 = v112;
  *(_QWORD *)&v281 = v92;
  *((_QWORD *)&v281 + 1) = v93;
  LOBYTE(v282) = v237;
  v113 = v267;
  v114 = v268;
  *((_QWORD *)&v282 + 1) = v267;
  *(_QWORD *)&v283 = v268;
  *((_QWORD *)&v283 + 1) = v63;
  *(_QWORD *)&v284 = v65;
  *((_QWORD *)&v284 + 1) = v64;
  v275 = &type metadata for FeedPuzzleType;
  v276 = sub_1BACB5BC8();
  v115 = (_OWORD *)swift_allocObject();
  *(_QWORD *)&v273 = v115;
  v116 = v282;
  v115[1] = v281;
  v115[2] = v116;
  v117 = v284;
  v115[3] = v283;
  v115[4] = v117;
  sub_1BA75A650(v113, v114);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v118 = v262;
  sub_1BA7BC210(&v273, v262);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v266 = v64;
  if (EnumCaseMultiPayload != 8)
  {
    v236 = v50;
    if (EnumCaseMultiPayload == 4)
    {
      v120 = v118;
      v121 = v241;
      sub_1BA5193C4(v120, v241, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      v122 = sub_1BB11BDF4();
      sub_1BA6D3834(v122);
      v123 = sub_1BB11C124();
      sub_1BA6E3FB8(v123);
      v124 = v121;
      v125 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
    }
    else
    {
      v125 = type metadata accessor for FeedItem;
      v124 = v118;
    }
LABEL_49:
    sub_1BA4A2E80(v124, v125);
    v149 = v257;
    v150 = v256;
    v151 = v255;
    v152 = v286;
    v153 = v280;
    v154 = *(_BYTE *)(v269 + 88);
    if ((v270 & 1) != 0)
    {
      swift_beginAccess();
      sub_1BB4644C4((uint64_t)&v281, v152, v153, v285, v150, v149, v154, v151);
    }
    else
    {
      swift_beginAccess();
      sub_1BB465A4C((uint64_t)&v281, v152, v153, v285, v150, v149, v154, v151);
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA70ABF4(v236, v265);
LABEL_57:
    sub_1BA6E0CBC(v267, v268);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v126 = (uint64_t)v253;
  sub_1BA5193C4(v118, (uint64_t)v253, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  v127 = (uint64_t *)(a12 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
  swift_beginAccess();
  v128 = v127[1];
  v129 = v126 + *(int *)(v242 + 20);
  if (!*(_QWORD *)(v128 + 16))
    goto LABEL_54;
  v130 = *v127;
  v131 = *(_QWORD *)(v129 + 16);
  v132 = *(_QWORD *)(v129 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v133 = sub_1BA6E35A8(v131, v132);
  if ((v134 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_54:
    v232 = 0;
    v238 = 0;
    v233 = 0;
    v237 = 0;
    v241 = 0;
    v242 = 0;
    v262 = 0;
    v146 = 0;
    v147 = 0;
    v145 = 0;
    v148 = 0;
LABEL_55:
    sub_1BA70ABF4(v50, v265);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    v155 = *(_QWORD *)(v129 + 16);
    v156 = *(_QWORD *)(v129 + 24);
    *v157 = v155;
    v157[1] = v156;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1BA8CEA24(v232, v238, v233, v237, v241, v242, v262, v146, v147, v145, v148);
    v158 = (uint64_t)v253;
LABEL_56:
    sub_1BA4A2E80(v158, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    goto LABEL_57;
  }
  v230 = v129;
  v227 = v56;
  v236 = v50;
  v135 = v239;
  sub_1BA4C2DD8(*(_QWORD *)(v128 + 56) + *(_QWORD *)(v238 + 72) * v133, v239, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
  v136 = *(_QWORD *)(v135 + 8);
  v232 = *(_QWORD *)v135;
  v137 = *(_QWORD *)(v135 + 24);
  v233 = *(_QWORD *)(v135 + 16);
  v138 = *(_QWORD *)(v135 + 40);
  v241 = *(_QWORD *)(v135 + 32);
  v228 = v130;
  v139 = *(_QWORD *)(v135 + 48);
  v140 = *(_QWORD *)(v135 + 56);
  v141 = *(_QWORD *)(v135 + 64);
  v231 = *(_QWORD *)(v135 + 72);
  v142 = *(char *)(v135 + 80);
  v238 = v136;
  swift_bridgeObjectRetain();
  v237 = v137;
  v143 = v241;
  swift_bridgeObjectRetain();
  v242 = v138;
  v262 = v139;
  v261 = v140;
  v229 = v141;
  v144 = v141;
  v145 = v231;
  sub_1BA709DE8(v143, v138, v139, v140, v144, v231, v142);
  sub_1BA4A2E80(v135, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v142 & 0x80000000) == 0)
  {
    v50 = v236;
    v146 = v261;
    v147 = v229;
    v148 = v142;
    v129 = v230;
    goto LABEL_55;
  }
  LODWORD(v233) = v142;
  *(_QWORD *)&v273 = v143;
  sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA547334((unint64_t *)&qword_1ED3A2F58, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition);
  sub_1BA4A2870(&qword_1ED3A0FB0, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
  swift_bridgeObjectRetain();
  v159 = sub_1BB872BBC();
  v160 = *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 28);
  v161 = *(_QWORD *)(v230 + v160);
  v162 = *(_QWORD *)(v161 + 16);
  if (!v162)
  {
    v191 = v242;
    v168 = v262;
    v183 = v261;
LABEL_91:
    swift_bridgeObjectRelease();
    *(_QWORD *)&v273 = *(_QWORD *)(v230 + v160);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED39EA08, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
    sub_1BA4A2870(&qword_1ED39C9E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
    v192 = sub_1BB872BB0();
    v193 = v241;
    v194 = *(_QWORD *)(v241 + 16);
    if (v194)
    {
      v259 = v192;
      v195 = v241 + ((*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80));
      v258 = *(_QWORD *)(v251 + 72);
      v196 = v254;
      do
      {
        sub_1BA4C2DD8(v195, v196, type metadata accessor for FormatPropertyDefinition);
        FormatPropertyDefinition.identifier.getter();
        v199 = v259;
        if (*(_QWORD *)(v259 + 16) && (v200 = sub_1BA6E35A8(v197, v198), (v201 & 1) != 0))
        {
          sub_1BA4C2DD8(*(_QWORD *)(v199 + 56) + *(_QWORD *)(v249 + 72) * v200, v247, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v202 = 0;
        }
        else
        {
          v202 = 1;
        }
        v203 = v249;
        v204 = v247;
        v205 = v246;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v249 + 56))(v247, v202, 1, v246);
        swift_bridgeObjectRelease();
        LODWORD(v205) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v203 + 48))(v204, 1, v205);
        sub_1BA604728(v204, (uint64_t)&qword_1ED3D2500, (uint64_t)type metadata accessor for FormatOption, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        if ((_DWORD)v205 == 1)
        {
          sub_1BB12B170();
          if ((v206 & 1) != 0)
          {
            sub_1BA70ABF4(v236, v265);
            swift_bridgeObjectRelease();
            v207 = v241;
            v208 = v242;
            sub_1BA6C0C20(v241, v242, v262, v261, v229, v231, v233);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            type metadata accessor for FormatLayoutError();
            sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
            swift_allocError();
            v210 = v209;
            sub_1BB468FA8();
            v212 = v210 + *(int *)(v211 + 48);
            v213 = (uint64_t)v253;
            sub_1BA4C2DD8((uint64_t)v253, v210, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
            v214 = v254;
            sub_1BA4C2DD8(v254, v212, type metadata accessor for FormatPropertyDefinition);
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA6C0C20(v207, v208, v262, v261, v229, v231, v233);
            sub_1BA4A2E80(v214, type metadata accessor for FormatPropertyDefinition);
            v158 = v213;
            goto LABEL_56;
          }
        }
        v196 = v254;
        sub_1BA4A2E80(v254, type metadata accessor for FormatPropertyDefinition);
        v195 += v258;
        --v194;
        v191 = v242;
        v183 = v261;
      }
      while (v194);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v193 = v241;
      v168 = v262;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v215 = v229;
    v216 = v231;
    v217 = v233;
    sub_1BA6C0C20(v193, v191, v168, v183, v229, v231, v233);
    sub_1BA6C0C20(v193, v191, v168, v183, v215, v216, v217);
    v125 = (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem;
    v124 = (uint64_t)v253;
    goto LABEL_49;
  }
  v228 = v65;
  v239 = v159;
  v226 = v160;
  v235 = (*(unsigned __int8 *)(v249 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v249 + 80);
  v163 = v161 + v235;
  v234 = *(_QWORD *)(v249 + 72);
  v232 = v161;
  swift_bridgeObjectRetain();
  v164 = type metadata accessor for FormatOption;
  v165 = v250;
  v166 = v259;
  v167 = v227;
  while (1)
  {
    v169 = v164;
    sub_1BA4C2DD8(v163, (uint64_t)v165, (uint64_t (*)(_QWORD))v164);
    v170 = v239;
    if (*(_QWORD *)(v239 + 16))
      break;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v251 + 56))(v166, 1, 1, v248);
LABEL_75:
    sub_1BA604728(v166, (uint64_t)&qword_1ED3B78C0, (uint64_t)type metadata accessor for FormatPropertyDefinition, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
    sub_1BA4C2DD8((uint64_t)v165, v258, (uint64_t (*)(_QWORD))v169);
    v182 = v280;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v182 = sub_1BA7AD174(0, *(_QWORD *)(v182 + 16) + 1, 1, v182);
    v183 = v261;
    v184 = v234;
    v186 = *(_QWORD *)(v182 + 16);
    v185 = *(_QWORD *)(v182 + 24);
    if (v186 >= v185 >> 1)
      v182 = sub_1BA7AD174(v185 > 1, v186 + 1, 1, v182);
    *(_QWORD *)(v182 + 16) = v186 + 1;
    sub_1BA5193C4(v258, v182 + v235 + v186 * v184, (uint64_t (*)(_QWORD))v169);
    v280 = v182;
    v164 = v169;
LABEL_68:
    v165 = v250;
    sub_1BA4A2E80((uint64_t)v250, (uint64_t (*)(_QWORD))v164);
    v163 += v184;
    --v162;
    v166 = v259;
    v168 = v262;
    if (!v162)
    {
      swift_bridgeObjectRelease();
      v160 = v226;
      v191 = v242;
      goto LABEL_91;
    }
  }
  v171 = *v165;
  v172 = v165[1];
  swift_bridgeObjectRetain();
  v173 = sub_1BA6E35A8(v171, v172);
  if ((v174 & 1) != 0)
  {
    v175 = v251;
    v176 = *(_QWORD *)(v170 + 56) + *(_QWORD *)(v251 + 72) * v173;
    v177 = v259;
    sub_1BA4C2DD8(v176, v259, type metadata accessor for FormatPropertyDefinition);
    v178 = 0;
  }
  else
  {
    v178 = 1;
    v175 = v251;
    v177 = v259;
  }
  v179 = v248;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v175 + 56))(v177, v178, 1, v248);
  swift_bridgeObjectRelease();
  v180 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v177, 1, v179);
  v166 = v177;
  v181 = v245;
  if (v180 == 1)
    goto LABEL_75;
  v187 = v244;
  sub_1BA5193C4(v177, v244, type metadata accessor for FormatPropertyDefinition);
  type metadata accessor for FormatOptionConverter();
  sub_1BB24F56C(v165, v187, v181);
  if (!v167)
  {
    sub_1BA4C2DD8((uint64_t)v181, v243, (uint64_t (*)(_QWORD))v169);
    v188 = v280;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v188 = sub_1BA7AD174(0, *(_QWORD *)(v188 + 16) + 1, 1, v188);
    v184 = v234;
    v190 = *(_QWORD *)(v188 + 16);
    v189 = *(_QWORD *)(v188 + 24);
    if (v190 >= v189 >> 1)
      v188 = sub_1BA7AD174(v189 > 1, v190 + 1, 1, v188);
    *(_QWORD *)(v188 + 16) = v190 + 1;
    sub_1BA5193C4(v243, v188 + v235 + v190 * v184, (uint64_t (*)(_QWORD))v169);
    v280 = v188;
    v164 = v169;
    sub_1BA4A2E80((uint64_t)v181, (uint64_t (*)(_QWORD))v169);
    sub_1BA4A2E80(v244, type metadata accessor for FormatPropertyDefinition);
    v183 = v261;
    goto LABEL_68;
  }
  swift_bridgeObjectRelease();
  v218 = v241;
  v219 = v242;
  v220 = v262;
  v221 = v261;
  v222 = v229;
  v223 = v231;
  v224 = v233;
  sub_1BA6C0C20(v241, v242, v262, v261, v229, v231, v233);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6C0C20(v218, v219, v220, v221, v222, v223, v224);
  sub_1BA70ABF4(v236, v265);
  sub_1BA4A2E80(v244, type metadata accessor for FormatPropertyDefinition);
  sub_1BA4A2E80((uint64_t)v165, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v253, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E0CBC(v267, v268);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB45DB38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  char v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int EnumCaseMultiPayload;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(_QWORD);
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unsigned __int8 v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  id v175;
  unint64_t v176;
  char v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  BOOL v196;
  char v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unsigned __int8 v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  id v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  uint64_t v279;
  uint64_t v280[8];
  int v281;

  v249 = a8;
  v250 = a3;
  v239 = a6;
  v240 = a7;
  v251 = a4;
  v252 = a5;
  v243 = a2;
  v253 = a1;
  v238 = a9;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B78C0, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v233 = (uint64_t)&v213 - v15;
  v229 = type metadata accessor for FormatOption();
  v234 = *(_QWORD *)(v229 - 8);
  MEMORY[0x1E0C80A78](v229);
  v226 = (uint64_t)&v213 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v227 = (uint64_t *)((char *)&v213 - v18);
  MEMORY[0x1E0C80A78](v19);
  v241 = (uint64_t)&v213 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (uint64_t *)((char *)&v213 - v22);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2500, v24, v13);
  MEMORY[0x1E0C80A78](v25);
  v231 = (uint64_t)&v213 - v26;
  v232 = type metadata accessor for FormatPropertyDefinition(0);
  v235 = *(_QWORD *)(v232 - 8);
  MEMORY[0x1E0C80A78](v232);
  v228 = (uint64_t)&v213 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v230 = (char *)&v213 - v29;
  sub_1BA7A2A04(0);
  v222 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v223 = (unint64_t)&v213 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v225);
  v237 = (uint64_t)&v213 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v33);
  v224 = (uint64_t)&v213 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v244 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v244);
  v245 = v12;
  v246 = (uint64_t)&v213 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
  v37 = *(_QWORD *)(v36 + 16);
  v242 = v23;
  if (v37)
  {
    swift_bridgeObjectRetain();
    v38 = 0;
    v39 = 0;
    do
    {
      v255 = *(_BYTE *)(v36 + v38 + 32);
      sub_1BA758024();
      v40 = v254;
      if ((v254 & ~v39) == 0)
        v40 = 0;
      v39 |= v40;
      ++v38;
    }
    while (v37 != v38);
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = 0;
  }
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v39;
  sub_1BA4AD288(0, &qword_1ED3A4980, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FeedItemSorter);
  v43 = v42;
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = MEMORY[0x1E0DEE9D8];
  v45 = (_QWORD *)(v44 + 16);
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = sub_1BB4691E0;
  *(_QWORD *)(v46 + 24) = v41;
  swift_beginAccess();
  v47 = *(_QWORD **)(v44 + 16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v44 + 16) = v47;
  v236 = v43;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v47 = sub_1BB39014C(0, v47[2] + 1, 1, v47);
    *v45 = v47;
  }
  v281 = a11;
  v248 = a10;
  v50 = v47[2];
  v49 = v47[3];
  if (v50 >= v49 >> 1)
  {
    v47 = sub_1BB39014C((_QWORD *)(v49 > 1), v50 + 1, 1, v47);
    *v45 = v47;
  }
  v47[2] = v50 + 1;
  v51 = &v47[2 * v50];
  v51[4] = sub_1BA6AB18C;
  v51[5] = v46;
  swift_endAccess();
  swift_release();
  v52 = v253;
  v53 = v248;
  v54 = v249;
  v55 = v247;
  sub_1BB782EE0(v250, v251, v44, v252, 1, v249, v248, v281 & 1, (uint64_t)&v256);
  v56 = v55;
  if (!v55)
  {
    swift_release();
    v277 = v264;
    v278 = v265;
    v279 = v266;
    v273 = v260;
    v274 = v261;
    v275 = v262;
    v276 = v263;
    v269 = v256;
    v270 = v257;
    v271 = v258;
    v272 = v259;
    v61 = *((_QWORD *)&v258 + 1);
    v62 = v53;
    v63 = v259;
    swift_bridgeObjectRetain();
    v64 = v243;
    v65 = v54;
    v66 = sub_1BA78B1DC(v243, v54, v62, v61, v63);
    swift_bridgeObjectRelease();
    v268 = v66;
    swift_bridgeObjectRetain();
    v67 = sub_1BA78B2D4(v64, v65, v62, v61, v63);
    swift_bridgeObjectRelease();
    v221 = v67;
    v267 = v67;
    v236 = v66;
    if (v62)
    {
      v68 = v242;
      if (!*(_QWORD *)(v64 + 16))
      {
        v84 = 0;
        v78 = 0;
        v80 = 0;
        v85 = 0;
        v86 = 0;
        v87 = 0;
        goto LABEL_52;
      }
      swift_bridgeObjectRetain();
      v69 = v248;
      swift_bridgeObjectRetain();
      v70 = sub_1BA6E35A8(v249, v69);
      if ((v71 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v84 = 0;
        v78 = 0;
        v80 = 0;
        v85 = 0;
        v86 = 0;
        v87 = 0;
        goto LABEL_52;
      }
      v72 = *(_QWORD *)(*(_QWORD *)(v64 + 56) + 8 * v70);
      swift_retain();
      swift_bridgeObjectRelease();
      v73 = *(_QWORD *)(v72 + 136);
      swift_bridgeObjectRetain();
      swift_release();
      if (*(_QWORD *)(v73 + 16))
      {
        swift_bridgeObjectRetain();
        v74 = sub_1BA6E35A8(v61, v63);
        if ((v75 & 1) != 0)
        {
          v76 = (uint64_t *)(*(_QWORD *)(v73 + 56) + 48 * v74);
          v77 = *v76;
          v78 = v76[1];
          v80 = v76[2];
          v79 = v76[3];
          v82 = v76[4];
          v81 = v76[5];
          v250 = v82;
          v251 = v81;
          v252 = v77;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v249 = v79;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v251 = 0;
          v252 = 0;
          v78 = 0;
          v80 = 0;
          v249 = 0;
          v250 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v251 = 0;
        v252 = 0;
        v78 = 0;
        v80 = 0;
        v249 = 0;
        v250 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v85 = v249;
      goto LABEL_51;
    }
    v84 = 0;
    v78 = 0;
    v80 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
LABEL_41:
    v68 = v242;
    goto LABEL_52;
  }
  swift_release();
  if ((*(_BYTE *)(v245 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback) & 1) == 0)
    return swift_willThrow();
  v57 = *(_QWORD *)(v36 + 16);
  if (v57)
  {
    swift_bridgeObjectRetain();
    v58 = 0;
    v59 = 0;
    do
    {
      v255 = *(_BYTE *)(v36 + v58 + 32);
      sub_1BA758024();
      v60 = v254;
      if ((v254 & ~v59) == 0)
        v60 = 0;
      v59 |= v60;
      ++v58;
    }
    while (v57 != v58);
    swift_bridgeObjectRelease();
  }
  else
  {
    v59 = 0;
  }
  v88 = swift_allocObject();
  *(_QWORD *)(v88 + 16) = v59;
  v89 = swift_allocObject();
  *(_QWORD *)(v89 + 16) = MEMORY[0x1E0DEE9D8];
  v90 = (_QWORD *)(v89 + 16);
  v91 = swift_allocObject();
  *(_QWORD *)(v91 + 16) = sub_1BB469448;
  *(_QWORD *)(v91 + 24) = v88;
  swift_beginAccess();
  v92 = *(_QWORD **)(v89 + 16);
  swift_retain();
  v93 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v89 + 16) = v92;
  v247 = v55;
  if ((v93 & 1) == 0)
  {
    v92 = sub_1BB39014C(0, v92[2] + 1, 1, v92);
    *v90 = v92;
  }
  v95 = v92[2];
  v94 = v92[3];
  if (v95 >= v94 >> 1)
  {
    v92 = sub_1BB39014C((_QWORD *)(v94 > 1), v95 + 1, 1, v92);
    *v90 = v92;
  }
  v92[2] = v95 + 1;
  v96 = &v92[2 * v95];
  v96[4] = sub_1BA6AB18C;
  v96[5] = v91;
  swift_endAccess();
  swift_release();
  v52 = v253;
  sub_1BB782EE0(v250, v251, v89, v252, 1, 0, 0, v281 & 1, (uint64_t)&v256);
  swift_release();
  v277 = v264;
  v278 = v265;
  v279 = v266;
  v273 = v260;
  v274 = v261;
  v275 = v262;
  v276 = v263;
  v269 = v256;
  v270 = v257;
  v271 = v258;
  v272 = v259;
  v97 = *((_QWORD *)&v258 + 1);
  v98 = v259;
  swift_bridgeObjectRetain();
  v99 = v243;
  v100 = sub_1BA78B1DC(v243, 42, 0xE100000000000000, v97, v98);
  swift_bridgeObjectRelease();
  v236 = v100;
  v268 = v100;
  swift_bridgeObjectRetain();
  v101 = sub_1BA78B2D4(v99, 42, 0xE100000000000000, v97, v98);
  swift_bridgeObjectRelease();
  v221 = v101;
  v267 = v101;
  v102 = *(_QWORD *)(v99 + 16);
  swift_bridgeObjectRetain();
  v103 = v247;
  if (!v102)
  {

    swift_bridgeObjectRelease();
    v84 = 0;
    v78 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
    v56 = 0;
    v80 = 0;
    goto LABEL_41;
  }
  v104 = sub_1BA6E35A8(42, 0xE100000000000000);
  v68 = v242;
  if ((v105 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    v84 = 0;
    v78 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
    v56 = 0;
    v80 = 0;
    goto LABEL_52;
  }
  v106 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v99 + 56) + 8 * v104) + 136);
  if (*(_QWORD *)(v106 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v107 = sub_1BA6E35A8(v97, v98);
    if ((v108 & 1) != 0)
    {
      v109 = (uint64_t *)(*(_QWORD *)(v106 + 56) + 48 * v107);
      v110 = *v109;
      v78 = v109[1];
      v112 = v109[2];
      v111 = v109[3];
      v114 = v109[4];
      v113 = v109[5];
      v249 = v111;
      v250 = v114;
      v251 = v113;
      v252 = v110;
      swift_bridgeObjectRetain();
      v248 = v112;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v251 = 0;
      v252 = 0;
      v78 = 0;
      v248 = 0;
      v249 = 0;
      v250 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v85 = v249;
  }
  else
  {
    v251 = 0;
    v252 = 0;
    v78 = 0;
    v248 = 0;
    v85 = 0;
    v250 = 0;
  }

  swift_bridgeObjectRelease();
  v56 = 0;
  v80 = v248;
LABEL_51:
  v86 = v250;
  v87 = v251;
  v84 = v252;
LABEL_52:
  v251 = v87;
  v252 = v84;
  v280[0] = v84;
  v280[1] = v78;
  v280[2] = v80;
  v280[3] = v85;
  v280[4] = v86;
  v280[5] = v87;
  *((_QWORD *)&v257 + 1) = &type metadata for FeedPuzzle;
  *(_QWORD *)&v258 = sub_1BACB5AD0();
  *(_QWORD *)&v256 = swift_allocObject();
  sub_1BA93EB58((uint64_t)&v269, v256 + 16);
  sub_1BA7BC210(&v256, v246);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v249 = v85;
  v250 = v86;
  if (EnumCaseMultiPayload == 8)
  {
    v121 = v237;
    sub_1BA5193C4(v246, v237, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v122 = (uint64_t *)(a12 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
    swift_beginAccess();
    v123 = v122[1];
    v124 = v121 + *(int *)(v225 + 20);
    v125 = *(_QWORD *)(v123 + 16);
    v225 = v124;
    if (v125)
    {
      v248 = v80;
      v244 = v78;
      v126 = *v122;
      v127 = *(_QWORD *)(v124 + 16);
      v128 = *(_QWORD *)(v124 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v129 = sub_1BA6E35A8(v127, v128);
      if ((v130 & 1) != 0)
      {
        v247 = v56;
        v131 = v223;
        sub_1BA4C2DD8(*(_QWORD *)(v123 + 56) + *(_QWORD *)(v222 + 72) * v129, v223, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
        v133 = *(_QWORD *)v131;
        v132 = *(_QWORD *)(v131 + 8);
        v134 = *(_QWORD *)(v131 + 24);
        v216 = *(_QWORD *)(v131 + 16);
        v217 = v133;
        v246 = *(_QWORD *)(v131 + 32);
        v135 = *(_QWORD *)(v131 + 48);
        v243 = *(_QWORD *)(v131 + 40);
        v214 = v126;
        v136 = *(_QWORD *)(v131 + 56);
        v137 = *(_QWORD *)(v131 + 64);
        v215 = *(_QWORD *)(v131 + 72);
        v138 = *(char *)(v131 + 80);
        v224 = v132;
        swift_bridgeObjectRetain();
        v222 = v134;
        swift_bridgeObjectRetain();
        v219 = v136;
        v220 = v135;
        v139 = v135;
        v140 = v215;
        v218 = v137;
        sub_1BA709DE8(v246, v243, v139, v136, v137, v215, v138);
        sub_1BA4A2E80(v131, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v138 & 0x80000000) == 0)
        {
          v78 = v244;
          v141 = v219;
          v142 = v220;
          v143 = v218;
          v144 = v138;
          goto LABEL_67;
        }
        *(_QWORD *)&v256 = v246;
        sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA547334((unint64_t *)&qword_1ED3A2F58, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition);
        sub_1BA4A2870(&qword_1ED3A0FB0, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
        swift_bridgeObjectRetain();
        v151 = sub_1BB872BBC();
        v152 = *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 28);
        v153 = v225;
        v154 = *(_QWORD *)(v225 + v152);
        v155 = *(_QWORD *)(v154 + 16);
        LODWORD(v217) = v138;
        if (!v155)
        {
LABEL_91:
          swift_bridgeObjectRelease();
          *(_QWORD *)&v256 = *(_QWORD *)(v153 + v152);
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1BA547334((unint64_t *)&qword_1ED39EA08, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
          sub_1BA4A2870(&qword_1ED39C9E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
          v180 = sub_1BB872BB0();
          v181 = v246;
          v182 = *(_QWORD *)(v246 + 16);
          v184 = v219;
          v183 = v220;
          v185 = v218;
          if (v182)
          {
            v186 = v246
                 + ((*(unsigned __int8 *)(v235 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v235 + 80));
            v242 = *(uint64_t **)(v235 + 72);
            v187 = (uint64_t)v230;
            do
            {
              sub_1BA4C2DD8(v186, v187, type metadata accessor for FormatPropertyDefinition);
              FormatPropertyDefinition.identifier.getter();
              if (*(_QWORD *)(v180 + 16) && (v190 = sub_1BA6E35A8(v188, v189), (v191 & 1) != 0))
              {
                sub_1BA4C2DD8(*(_QWORD *)(v180 + 56) + *(_QWORD *)(v234 + 72) * v190, v231, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
                v192 = 0;
              }
              else
              {
                v192 = 1;
              }
              v193 = v234;
              v194 = v231;
              v195 = v229;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v234 + 56))(v231, v192, 1, v229);
              swift_bridgeObjectRelease();
              LODWORD(v195) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v193 + 48))(v194, 1, v195);
              sub_1BA604728(v194, (uint64_t)&qword_1ED3D2500, (uint64_t)type metadata accessor for FormatOption, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
              v196 = (_DWORD)v195 == 1;
              v187 = (uint64_t)v230;
              if (v196)
              {
                sub_1BB12B170();
                if ((v197 & 1) != 0)
                {
                  sub_1BA70ABF4(v252, v244);
                  swift_bridgeObjectRelease();
                  v198 = v246;
                  v199 = v243;
                  sub_1BA6C0C20(v246, v243, v220, v219, v218, v215, v217);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  type metadata accessor for FormatLayoutError();
                  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
                  swift_allocError();
                  v201 = v200;
                  sub_1BB468FA8();
                  v203 = v201 + *(int *)(v202 + 48);
                  v204 = v237;
                  sub_1BA4C2DD8(v237, v201, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
                  sub_1BA4C2DD8(v187, v203, type metadata accessor for FormatPropertyDefinition);
                  swift_storeEnumTagMultiPayload();
                  swift_willThrow();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1BA6C0C20(v198, v199, v220, v219, v218, v215, v217);
                  sub_1BA4A2E80(v187, type metadata accessor for FormatPropertyDefinition);
                  v150 = v204;
                  goto LABEL_68;
                }
              }
              sub_1BA4A2E80(v187, type metadata accessor for FormatPropertyDefinition);
              v186 += (uint64_t)v242;
              --v182;
              v184 = v219;
              v183 = v220;
              v185 = v218;
            }
            while (v182);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v181 = v246;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v205 = v243;
          v206 = v215;
          v207 = v217;
          sub_1BA6C0C20(v181, v243, v183, v184, v185, v215, v217);
          sub_1BA6C0C20(v181, v205, v183, v184, v185, v206, v207);
          sub_1BA4A2E80(v237, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          v52 = v253;
          goto LABEL_61;
        }
        v214 = v152;
        v223 = (*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80);
        v156 = v154 + v223;
        v157 = *(_QWORD *)(v234 + 72);
        v216 = v154;
        swift_bridgeObjectRetain();
        v158 = v151;
        v236 = v151;
        v221 = v157;
        while (1)
        {
          sub_1BA4C2DD8(v156, (uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          if (!*(_QWORD *)(v158 + 16))
            break;
          v159 = *v68;
          v160 = v68[1];
          swift_bridgeObjectRetain();
          v161 = sub_1BA6E35A8(v159, v160);
          v162 = v235;
          v163 = v233;
          if ((v164 & 1) != 0)
          {
            sub_1BA4C2DD8(*(_QWORD *)(v158 + 56) + *(_QWORD *)(v235 + 72) * v161, v233, type metadata accessor for FormatPropertyDefinition);
            v165 = 0;
          }
          else
          {
            v165 = 1;
          }
          v166 = v232;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v162 + 56))(v163, v165, 1, v232);
          swift_bridgeObjectRelease();
          v167 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v162 + 48))(v163, 1, v166);
          v168 = v252;
          v157 = v221;
          if (v167 == 1)
            goto LABEL_80;
          v173 = v228;
          sub_1BA5193C4(v163, v228, type metadata accessor for FormatPropertyDefinition);
          type metadata accessor for FormatOptionConverter();
          v174 = v227;
          v175 = v247;
          sub_1BB24F56C(v68, v173, v227);
          if (v175)
          {
            swift_bridgeObjectRelease();
            v208 = v246;
            v209 = v243;
            v211 = v219;
            v210 = v220;
            v212 = v218;
            sub_1BA6C0C20(v246, v243, v220, v219, v218, v215, v217);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA6C0C20(v208, v209, v210, v211, v212, v215, v217);
            sub_1BA70ABF4(v168, v244);
            sub_1BA4A2E80(v228, type metadata accessor for FormatPropertyDefinition);
            sub_1BA4A2E80((uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            swift_bridgeObjectRelease();
            sub_1BA4A2E80(v237, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return sub_1BA93EBE8((uint64_t)&v269);
          }
          sub_1BA4C2DD8((uint64_t)v174, v226, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v176 = v267;
          v177 = swift_isUniquelyReferenced_nonNull_native();
          v247 = 0;
          v170 = (uint64_t)v68;
          if ((v177 & 1) == 0)
            v176 = sub_1BA7AD174(0, *(_QWORD *)(v176 + 16) + 1, 1, v176);
          v158 = v236;
          v179 = *(_QWORD *)(v176 + 16);
          v178 = *(_QWORD *)(v176 + 24);
          if (v179 >= v178 >> 1)
            v176 = sub_1BA7AD174(v178 > 1, v179 + 1, 1, v176);
          *(_QWORD *)(v176 + 16) = v179 + 1;
          sub_1BA5193C4(v226, v176 + v223 + v179 * v157, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v267 = v176;
          sub_1BA4A2E80((uint64_t)v227, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          sub_1BA4A2E80(v228, type metadata accessor for FormatPropertyDefinition);
LABEL_73:
          v68 = (uint64_t *)v170;
          sub_1BA4A2E80(v170, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v156 += v157;
          if (!--v155)
          {
            swift_bridgeObjectRelease();
            v153 = v225;
            v152 = v214;
            goto LABEL_91;
          }
        }
        v163 = v233;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v235 + 56))(v233, 1, 1, v232);
LABEL_80:
        sub_1BA604728(v163, (uint64_t)&qword_1ED3B78C0, (uint64_t)type metadata accessor for FormatPropertyDefinition, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        sub_1BA4C2DD8((uint64_t)v68, v241, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v169 = v267;
        v170 = (uint64_t)v68;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v169 = sub_1BA7AD174(0, *(_QWORD *)(v169 + 16) + 1, 1, v169);
        v158 = v236;
        v172 = *(_QWORD *)(v169 + 16);
        v171 = *(_QWORD *)(v169 + 24);
        if (v172 >= v171 >> 1)
          v169 = sub_1BA7AD174(v171 > 1, v172 + 1, 1, v169);
        *(_QWORD *)(v169 + 16) = v172 + 1;
        sub_1BA5193C4(v241, v169 + v223 + v172 * v157, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v267 = v169;
        goto LABEL_73;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v216 = 0;
      v217 = 0;
      v224 = 0;
      v222 = 0;
      v246 = 0;
      v243 = 0;
      v142 = 0;
      v141 = 0;
      v143 = 0;
      v140 = 0;
      v144 = 0;
      v78 = v244;
    }
    else
    {
      v216 = 0;
      v217 = 0;
      v224 = 0;
      v222 = 0;
      v246 = 0;
      v243 = 0;
      v142 = 0;
      v141 = 0;
      v143 = 0;
      v140 = 0;
      v144 = 0;
    }
LABEL_67:
    sub_1BA70ABF4(v252, v78);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    v148 = *(_QWORD *)(v225 + 24);
    *v149 = *(_QWORD *)(v225 + 16);
    v149[1] = v148;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1BA8CEA24(v217, v224, v216, v222, v246, v243, v142, v141, v143, v140, v144);
    v150 = v237;
LABEL_68:
    sub_1BA4A2E80(v150, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    return sub_1BA93EBE8((uint64_t)&v269);
  }
  v244 = v78;
  v248 = v80;
  if (EnumCaseMultiPayload == 4)
  {
    v116 = v224;
    sub_1BA5193C4(v246, v224, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v117 = sub_1BB11BDF4();
    sub_1BA6D3834(v117);
    v118 = sub_1BB11C124();
    sub_1BA6E3FB8(v118);
    v119 = v116;
    v120 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
  }
  else
  {
    v120 = type metadata accessor for FeedItem;
    v119 = v246;
  }
  sub_1BA4A2E80(v119, v120);
LABEL_61:
  v145 = v268;
  v146 = v267;
  v147 = *(_BYTE *)(v52 + 88);
  if ((v281 & 1) != 0)
  {
    swift_beginAccess();
    sub_1BB464704((uint64_t *)&v269, v145, v146, v280, v239, v240, v147, v238);
  }
  else
  {
    swift_beginAccess();
    sub_1BB465C8C((uint64_t *)&v269, v145, v146, v280, v239, v240, v147, v238);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70ABF4(v252, v244);
  return sub_1BA93EBE8((uint64_t)&v269);
}

uint64_t sub_1BB45F33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  char v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v121;
  int EnumCaseMultiPayload;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(_QWORD);
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t (*v168)();
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t (*v172)();
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t (*v201)(uint64_t);
  uint64_t v202;
  uint64_t (*v203)(uint64_t);
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  BOOL v214;
  char v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unsigned __int8 v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unsigned __int8 v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t *v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  _QWORD *v264;
  uint64_t *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int v274;
  char v275;
  uint64_t v276[5];
  unint64_t v277;
  uint64_t v278[6];
  uint64_t v279;

  v269 = a8;
  v258 = a7;
  v257 = a6;
  v271 = a4;
  v272 = a5;
  v270 = a3;
  v261 = a2;
  v273 = a1;
  v256 = a9;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B78C0, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v260 = (uint64_t)&v233 - v15;
  v247 = type metadata accessor for FormatOption();
  v250 = *(_QWORD *)(v247 - 8);
  MEMORY[0x1E0C80A78](v247);
  v244 = (uint64_t)&v233 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v245 = (uint64_t *)((char *)&v233 - v18);
  MEMORY[0x1E0C80A78](v19);
  v259 = (uint64_t)&v233 - v20;
  MEMORY[0x1E0C80A78](v21);
  v251 = (uint64_t *)((char *)&v233 - v22);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2500, v23, v13);
  MEMORY[0x1E0C80A78](v24);
  v248 = (uint64_t)&v233 - v25;
  v249 = type metadata accessor for FormatPropertyDefinition(0);
  v252 = *(_QWORD *)(v249 - 8);
  MEMORY[0x1E0C80A78](v249);
  v246 = (uint64_t)&v233 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v233 - v28;
  sub_1BA7A2A04(0);
  v240 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v233 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v243);
  v255 = (uint64_t)&v233 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v263);
  v264 = (uint64_t *)((char *)&v233 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v262 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v262);
  v253 = (char *)&v233 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v242 = (uint64_t)&v233 - v37;
  MEMORY[0x1E0C80A78](v38);
  v267 = (uint64_t)&v233 - v39;
  MEMORY[0x1E0C80A78](v40);
  v265 = (uint64_t *)((char *)&v233 - v41);
  v266 = v12;
  v42 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
  v43 = *(_QWORD *)(v42 + 16);
  if (v43)
  {
    swift_bridgeObjectRetain();
    v44 = 0;
    v45 = 0;
    do
    {
      v275 = *(_BYTE *)(v42 + v44 + 32);
      sub_1BA758024();
      v46 = v276[0];
      if ((v276[0] & ~v45) == 0)
        v46 = 0;
      v45 |= v46;
      ++v44;
    }
    while (v43 != v44);
    swift_bridgeObjectRelease();
  }
  else
  {
    v45 = 0;
  }
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v45;
  sub_1BA4B07F0(0, qword_1ED39A920, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v49 = v48;
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = MEMORY[0x1E0DEE9D8];
  v51 = (_QWORD *)(v50 + 16);
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = sub_1BB4690CC;
  *(_QWORD *)(v52 + 24) = v47;
  swift_beginAccess();
  v53 = *(_QWORD **)(v50 + 16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v50 + 16) = v53;
  v239 = v29;
  v241 = v32;
  v254 = v49;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v53 = sub_1BB390184(0, v53[2] + 1, 1, v53);
    *v51 = v53;
  }
  v274 = a11;
  v55 = a10;
  v57 = v53[2];
  v56 = v53[3];
  if (v57 >= v56 >> 1)
  {
    v53 = sub_1BB390184((_QWORD *)(v56 > 1), v57 + 1, 1, v53);
    *v51 = v53;
  }
  v53[2] = v57 + 1;
  v58 = &v53[2 * v57];
  v58[4] = sub_1BB4690D4;
  v58[5] = v52;
  swift_endAccess();
  swift_release();
  v59 = v267;
  v60 = v273;
  v61 = v269;
  v62 = (_QWORD *)v268;
  sub_1BB7832B8(v270, v271, v50, v272, 1, v269, a10, v274 & 1, v267);
  v63 = v62;
  if (!v62)
  {
    swift_release();
    v70 = v265;
    sub_1BA5193C4(v59, (uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v72 = v70[5];
    v71 = v70[6];
    swift_bridgeObjectRetain();
    v73 = v261;
    v74 = sub_1BA78B1DC(v261, v61, a10, v72, v71);
    swift_bridgeObjectRelease();
    v254 = v74;
    v279 = v74;
    swift_bridgeObjectRetain();
    v75 = sub_1BA78B2D4(v73, v61, a10, v72, v71);
    swift_bridgeObjectRelease();
    v253 = (char *)v75;
    v277 = v75;
    if (!a10)
    {
      v91 = 0;
      v92 = 0;
      v93 = 0;
      v89 = 0;
      v76 = 0;
      goto LABEL_50;
    }
    v76 = *(_QWORD *)(v73 + 16);
    if (v76)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v77 = sub_1BA6E35A8(v269, a10);
      if ((v78 & 1) != 0)
      {
        v79 = *(_QWORD *)(*(_QWORD *)(v73 + 56) + 8 * v77);
        swift_retain();
        swift_bridgeObjectRelease();
        v80 = *(_QWORD *)(v79 + 136);
        swift_bridgeObjectRetain();
        swift_release();
        if (*(_QWORD *)(v80 + 16))
        {
          swift_bridgeObjectRetain();
          v81 = sub_1BA6E35A8(v72, v71);
          if ((v82 & 1) != 0)
          {
            v83 = (uint64_t *)(*(_QWORD *)(v80 + 56) + 48 * v81);
            v84 = v83[1];
            v272 = *v83;
            v85 = v83[2];
            v86 = v83[3];
            v87 = v83[4];
            v88 = v83[5];
            v269 = v84;
            v270 = v87;
            swift_bridgeObjectRetain();
            v271 = v85;
            swift_bridgeObjectRetain();
            v89 = v86;
            swift_bridgeObjectRetain();
            v55 = v88;
            swift_bridgeObjectRetain();
          }
          else
          {
            v271 = 0;
            v272 = 0;
            v269 = 0;
            v270 = 0;
            v89 = 0;
            v55 = 0;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v271 = 0;
          v272 = 0;
          v269 = 0;
          v270 = 0;
          v89 = 0;
          v55 = 0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v92 = v269;
        v76 = v270;
        v93 = v271;
        v91 = v272;
        goto LABEL_50;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v91 = 0;
      v92 = 0;
      v93 = 0;
      v89 = 0;
      v76 = 0;
    }
    else
    {
      v91 = 0;
      v92 = 0;
      v93 = 0;
      v89 = 0;
    }
    v55 = 0;
    goto LABEL_50;
  }
  swift_release();
  if ((*(_BYTE *)(v266 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback) & 1) == 0)
    return swift_willThrow();
  v64 = *(_QWORD *)(v42 + 16);
  if (v64)
  {
    swift_bridgeObjectRetain();
    v65 = 0;
    v66 = 0;
    v67 = (uint64_t)v253;
    v68 = MEMORY[0x1E0DEE9D8];
    do
    {
      v275 = *(_BYTE *)(v42 + v65 + 32);
      sub_1BA758024();
      v69 = v276[0];
      if ((v276[0] & ~v66) == 0)
        v69 = 0;
      v66 |= v69;
      ++v65;
    }
    while (v64 != v65);
    swift_bridgeObjectRelease();
  }
  else
  {
    v66 = 0;
    v67 = (uint64_t)v253;
    v68 = MEMORY[0x1E0DEE9D8];
  }
  v94 = swift_allocObject();
  *(_QWORD *)(v94 + 16) = v66;
  v95 = swift_allocObject();
  *(_QWORD *)(v95 + 16) = v68;
  v96 = (_QWORD *)(v95 + 16);
  v97 = swift_allocObject();
  *(_QWORD *)(v97 + 16) = sub_1BB469444;
  *(_QWORD *)(v97 + 24) = v94;
  swift_beginAccess();
  v98 = *(_QWORD **)(v95 + 16);
  swift_retain();
  v99 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v95 + 16) = v98;
  if ((v99 & 1) == 0)
  {
    v98 = sub_1BB390184(0, v98[2] + 1, 1, v98);
    *v96 = v98;
  }
  v101 = v98[2];
  v100 = v98[3];
  if (v101 >= v100 >> 1)
  {
    v98 = sub_1BB390184((_QWORD *)(v100 > 1), v101 + 1, 1, v98);
    *v96 = v98;
  }
  v98[2] = v101 + 1;
  v102 = &v98[2 * v101];
  v102[4] = sub_1BB4690D4;
  v102[5] = v97;
  swift_endAccess();
  swift_release();
  v60 = v273;
  sub_1BB7832B8(v270, v271, v95, v272, 1, 0, 0, v274 & 1, v67);
  swift_release();
  v70 = v265;
  sub_1BA5193C4(v67, (uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v104 = v70[5];
  v103 = v70[6];
  swift_bridgeObjectRetain();
  v105 = v261;
  v106 = sub_1BA78B1DC(v261, 42, 0xE100000000000000, v104, v103);
  swift_bridgeObjectRelease();
  v254 = v106;
  v279 = v106;
  swift_bridgeObjectRetain();
  v107 = sub_1BA78B2D4(v105, 42, 0xE100000000000000, v104, v103);
  swift_bridgeObjectRelease();
  v253 = (char *)v107;
  v277 = v107;
  v108 = *(_QWORD *)(v105 + 16);
  swift_bridgeObjectRetain();
  if (v108 && (v109 = sub_1BA6E35A8(42, 0xE100000000000000), (v110 & 1) != 0))
  {
    v111 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v105 + 56) + 8 * v109) + 136);
    if (*(_QWORD *)(v111 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v112 = sub_1BA6E35A8(v104, v103);
      if ((v113 & 1) != 0)
      {
        v114 = (uint64_t *)(*(_QWORD *)(v111 + 56) + 48 * v112);
        v115 = v114[1];
        v272 = *v114;
        v116 = v114[2];
        v117 = v114[3];
        v118 = v114[4];
        v119 = v114[5];
        v269 = v115;
        v270 = v118;
        swift_bridgeObjectRetain();
        v271 = v116;
        swift_bridgeObjectRetain();
        v268 = v117;
        swift_bridgeObjectRetain();
        v267 = v119;
        swift_bridgeObjectRetain();
      }
      else
      {
        v271 = 0;
        v272 = 0;
        v269 = 0;
        v268 = 0;
        v270 = 0;
        v267 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = v269;
    }
    else
    {
      v271 = 0;
      v272 = 0;
      v92 = 0;
      v268 = 0;
      v270 = 0;
      v267 = 0;
    }

    swift_bridgeObjectRelease();
    v63 = 0;
    v89 = v268;
    v76 = v270;
    v93 = v271;
    v55 = v267;
    v91 = v272;
  }
  else
  {

    swift_bridgeObjectRelease();
    v91 = 0;
    v92 = 0;
    v93 = 0;
    v89 = 0;
    v76 = 0;
    v55 = 0;
    v63 = 0;
  }
LABEL_50:
  v271 = v93;
  v272 = v91;
  v278[0] = v91;
  v278[1] = v92;
  v278[2] = v93;
  v278[3] = v89;
  v268 = v89;
  v270 = v76;
  v278[4] = v76;
  v278[5] = v55;
  v267 = v55;
  v276[3] = v262;
  v276[4] = sub_1BA4A2870(&qword_1ED39AF58, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v276);
  sub_1BA4C2DD8((uint64_t)v70, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v121 = (uint64_t)v264;
  sub_1BA7BC210(v276, (uint64_t)v264);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v269 = v92;
  if (EnumCaseMultiPayload == 8)
  {
    v129 = v255;
    sub_1BA5193C4(v121, v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v130 = (uint64_t *)(a12 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
    swift_beginAccess();
    v131 = v130[1];
    v132 = v129 + *(int *)(v243 + 20);
    v133 = *(_QWORD *)(v131 + 16);
    v243 = v132;
    if (v133)
    {
      v134 = *v130;
      v135 = *(_QWORD *)(v132 + 16);
      v136 = *(_QWORD *)(v132 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v137 = sub_1BA6E35A8(v135, v136);
      if ((v138 & 1) != 0)
      {
        v139 = (uint64_t)v241;
        sub_1BA4C2DD8(*(_QWORD *)(v131 + 56) + *(_QWORD *)(v240 + 72) * v137, (uint64_t)v241, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
        v140 = *(_QWORD *)(v139 + 8);
        v237 = *(_QWORD *)v139;
        v141 = *(_QWORD *)(v139 + 24);
        v264 = *(_QWORD **)(v139 + 16);
        v143 = *(_QWORD *)(v139 + 32);
        v142 = *(_QWORD *)(v139 + 40);
        v144 = *(_QWORD *)(v139 + 48);
        v236 = *(_QWORD *)(v139 + 56);
        v233 = v134;
        v146 = *(_QWORD *)(v139 + 64);
        v145 = *(_QWORD *)(v139 + 72);
        v235 = *(char *)(v139 + 80);
        v242 = v140;
        swift_bridgeObjectRetain();
        v240 = v141;
        swift_bridgeObjectRetain();
        v261 = v143;
        v147 = v143;
        v263 = v142;
        v234 = v144;
        v148 = v144;
        v149 = v236;
        v238 = v146;
        v262 = v145;
        v150 = v235;
        sub_1BA709DE8(v147, v142, v148, v236, v146, v145, v235);
        sub_1BA4A2E80(v139, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v150 & 0x80000000) == 0)
        {
          v151 = v149;
          v70 = v265;
          v152 = v234;
          v153 = v238;
          v154 = v262;
LABEL_65:
          sub_1BA70ABF4(v272, v269);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          type metadata accessor for FormatLayoutError();
          sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
          swift_allocError();
          v158 = *(_QWORD *)(v243 + 24);
          *v159 = *(_QWORD *)(v243 + 16);
          v159[1] = v158;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BA8CEA24(v237, v242, (uint64_t)v264, v240, v261, v263, v152, v151, v153, v154, v150);
          sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          goto LABEL_66;
        }
        v276[0] = v261;
        sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA547334((unint64_t *)&qword_1ED3A2F58, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition);
        sub_1BA4A2870(&qword_1ED3A0FB0, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
        swift_bridgeObjectRetain();
        v161 = sub_1BB872BBC();
        v162 = *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 28);
        v163 = v243;
        v164 = *(_QWORD *)(v243 + v162);
        v165 = *(_QWORD *)(v164 + 16);
        if (!v165)
        {
          v194 = v234;
          v193 = v262;
LABEL_90:
          swift_bridgeObjectRelease();
          v276[0] = *(_QWORD *)(v163 + v162);
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1BA547334((unint64_t *)&qword_1ED39EA08, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
          sub_1BA4A2870(&qword_1ED39C9E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
          v195 = sub_1BB872BB0();
          v196 = *(_QWORD *)(v261 + 16);
          v197 = (uint64_t)v239;
          v198 = v263;
          v199 = v238;
          if (v196)
          {
            v264 = (_QWORD *)v195;
            v200 = v261
                 + ((*(unsigned __int8 *)(v252 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80));
            v260 = *(_QWORD *)(v252 + 72);
            v201 = type metadata accessor for FormatPropertyDefinition;
            do
            {
              v203 = v201;
              sub_1BA4C2DD8(v200, v197, v201);
              v204 = v197;
              FormatPropertyDefinition.identifier.getter();
              v207 = (uint64_t)v264;
              if (v264[2] && (v208 = sub_1BA6E35A8(v205, v206), (v209 & 1) != 0))
              {
                sub_1BA4C2DD8(*(_QWORD *)(v207 + 56) + *(_QWORD *)(v250 + 72) * v208, v248, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
                v210 = 0;
              }
              else
              {
                v210 = 1;
              }
              v211 = v250;
              v212 = v248;
              v213 = v247;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v250 + 56))(v248, v210, 1, v247);
              swift_bridgeObjectRelease();
              LODWORD(v213) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v211 + 48))(v212, 1, v213);
              sub_1BA604728(v212, (uint64_t)&qword_1ED3D2500, (uint64_t)type metadata accessor for FormatOption, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
              v214 = (_DWORD)v213 == 1;
              v197 = v204;
              if (v214)
              {
                sub_1BB12B170();
                if ((v215 & 1) != 0)
                {
                  sub_1BA70ABF4(v272, v269);
                  swift_bridgeObjectRelease();
                  v216 = v261;
                  v217 = v263;
                  v218 = v234;
                  sub_1BA6C0C20(v261, v263, v234, v236, v238, v262, v235);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  type metadata accessor for FormatLayoutError();
                  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
                  swift_allocError();
                  v220 = v219;
                  sub_1BB468FA8();
                  v222 = v220 + *(int *)(v221 + 48);
                  v223 = v255;
                  sub_1BA4C2DD8(v255, v220, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
                  sub_1BA4C2DD8(v197, v222, type metadata accessor for FormatPropertyDefinition);
                  swift_storeEnumTagMultiPayload();
                  swift_willThrow();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1BA6C0C20(v216, v217, v218, v236, v238, v262, v235);
                  sub_1BA4A2E80(v197, type metadata accessor for FormatPropertyDefinition);
                  sub_1BA4A2E80(v223, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
                  v160 = (uint64_t)v265;
                  return sub_1BA4A2E80(v160, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
                }
              }
              v202 = v204;
              v201 = v203;
              sub_1BA4A2E80(v202, v203);
              v200 += v260;
              --v196;
              v198 = v263;
              v199 = v238;
            }
            while (v196);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v194 = v234;
            v149 = v236;
            v193 = v262;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v224 = v261;
          v225 = v235;
          sub_1BA6C0C20(v261, v198, v194, v149, v199, v193, v235);
          sub_1BA6C0C20(v224, v198, v194, v149, v199, v193, v225);
          sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          v70 = v265;
          v60 = v273;
          goto LABEL_59;
        }
        v254 = v161;
        v237 = v162;
        v253 = (char *)((*(unsigned __int8 *)(v250 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80));
        v166 = (uint64_t)&v253[v164];
        v167 = *(_QWORD *)(v250 + 72);
        v241 = (char *)v164;
        swift_bridgeObjectRetain();
        v168 = type metadata accessor for FormatOption;
        v169 = v260;
        v170 = v262;
        v171 = v251;
        while (1)
        {
          v264 = v63;
          v172 = v168;
          sub_1BA4C2DD8(v166, (uint64_t)v171, (uint64_t (*)(_QWORD))v168);
          v173 = v254;
          if (!*(_QWORD *)(v254 + 16))
            break;
          v174 = *v171;
          v175 = v171[1];
          swift_bridgeObjectRetain();
          v176 = sub_1BA6E35A8(v174, v175);
          if ((v177 & 1) != 0)
          {
            v178 = *(_QWORD *)(v173 + 56);
            v179 = v252;
            v169 = v260;
            sub_1BA4C2DD8(v178 + *(_QWORD *)(v252 + 72) * v176, v260, type metadata accessor for FormatPropertyDefinition);
            v180 = 0;
          }
          else
          {
            v180 = 1;
            v179 = v252;
            v169 = v260;
          }
          v181 = v249;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v179 + 56))(v169, v180, 1, v249);
          swift_bridgeObjectRelease();
          v182 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v169, 1, v181);
          v170 = v262;
          if (v182 == 1)
            goto LABEL_78;
          v186 = v246;
          sub_1BA5193C4(v169, v246, type metadata accessor for FormatPropertyDefinition);
          type metadata accessor for FormatOptionConverter();
          v187 = v245;
          v188 = (uint64_t)v264;
          sub_1BB24F56C(v171, v186, v245);
          if (v188)
          {
            swift_bridgeObjectRelease();
            v226 = v261;
            v227 = v263;
            v228 = v234;
            v229 = v236;
            v230 = v238;
            v231 = v262;
            v232 = v235;
            sub_1BA6C0C20(v261, v263, v234, v236, v238, v262, v235);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA6C0C20(v226, v227, v228, v229, v230, v231, v232);
            sub_1BA70ABF4(v272, v269);
            sub_1BA4A2E80(v246, type metadata accessor for FormatPropertyDefinition);
            sub_1BA4A2E80((uint64_t)v171, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            swift_bridgeObjectRelease();
            sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return sub_1BA4A2E80((uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          }
          v168 = v172;
          sub_1BA4C2DD8((uint64_t)v187, v244, (uint64_t (*)(_QWORD))v172);
          v189 = v277;
          v190 = swift_isUniquelyReferenced_nonNull_native();
          v170 = v262;
          if ((v190 & 1) == 0)
            v189 = sub_1BA7AD174(0, *(_QWORD *)(v189 + 16) + 1, 1, v189);
          v63 = 0;
          v192 = *(_QWORD *)(v189 + 16);
          v191 = *(_QWORD *)(v189 + 24);
          if (v192 >= v191 >> 1)
            v189 = sub_1BA7AD174(v191 > 1, v192 + 1, 1, v189);
          *(_QWORD *)(v189 + 16) = v192 + 1;
          sub_1BA5193C4(v244, (uint64_t)&v253[v189 + v192 * v167], (uint64_t (*)(_QWORD))v168);
          v277 = v189;
          sub_1BA4A2E80((uint64_t)v245, (uint64_t (*)(_QWORD))v168);
          sub_1BA4A2E80(v246, type metadata accessor for FormatPropertyDefinition);
LABEL_71:
          v171 = v251;
          sub_1BA4A2E80((uint64_t)v251, (uint64_t (*)(_QWORD))v168);
          v166 += v167;
          --v165;
          v169 = v260;
          if (!v165)
          {
            swift_bridgeObjectRelease();
            v149 = v236;
            v163 = v243;
            v162 = v237;
            v193 = v170;
            v194 = v234;
            goto LABEL_90;
          }
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v252 + 56))(v169, 1, 1, v249);
LABEL_78:
        sub_1BA604728(v169, (uint64_t)&qword_1ED3B78C0, (uint64_t)type metadata accessor for FormatPropertyDefinition, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        v168 = v172;
        sub_1BA4C2DD8((uint64_t)v171, v259, (uint64_t (*)(_QWORD))v172);
        v183 = v277;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v183 = sub_1BA7AD174(0, *(_QWORD *)(v183 + 16) + 1, 1, v183);
        v63 = v264;
        v185 = *(_QWORD *)(v183 + 16);
        v184 = *(_QWORD *)(v183 + 24);
        if (v185 >= v184 >> 1)
          v183 = sub_1BA7AD174(v184 > 1, v185 + 1, 1, v183);
        *(_QWORD *)(v183 + 16) = v185 + 1;
        sub_1BA5193C4(v259, (uint64_t)&v253[v183 + v185 * v167], (uint64_t (*)(_QWORD))v168);
        v277 = v183;
        goto LABEL_71;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v237 = 0;
    v242 = 0;
    v264 = 0;
    v240 = 0;
    v261 = 0;
    v263 = 0;
    v152 = 0;
    v151 = 0;
    v153 = 0;
    v154 = 0;
    LOBYTE(v150) = 0;
    goto LABEL_65;
  }
  if (EnumCaseMultiPayload == 4)
  {
    v123 = v121;
    v124 = v242;
    sub_1BA5193C4(v123, v242, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v125 = sub_1BB11BDF4();
    sub_1BA6D3834(v125);
    v126 = sub_1BB11C124();
    sub_1BA6E3FB8(v126);
    v127 = v124;
    v128 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
  }
  else
  {
    v128 = type metadata accessor for FeedItem;
    v127 = v121;
  }
  sub_1BA4A2E80(v127, v128);
LABEL_59:
  v155 = v279;
  v156 = v277;
  v157 = *(_BYTE *)(v60 + 88);
  if ((v274 & 1) != 0)
  {
    swift_beginAccess();
    sub_1BB464934(v70, v155, v156, v278, v257, v258, v157, v256);
  }
  else
  {
    swift_beginAccess();
    sub_1BB465EBC(v70, v155, v156, v278, v257, v258, v157, v256);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70ABF4(v272, v269);
LABEL_66:
  v160 = (uint64_t)v70;
  return sub_1BA4A2E80(v160, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
}

uint64_t sub_1BB460E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  char v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  unint64_t v103;
  char v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int EnumCaseMultiPayload;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(_QWORD);
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned __int8 v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  id v174;
  unint64_t v175;
  char v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  BOOL v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned __int8 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  id v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  char v264;
  unint64_t v265;
  uint64_t v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  char v276;
  uint64_t v277[8];
  int v278;

  v248 = a8;
  v249 = a3;
  v238 = a6;
  v239 = a7;
  v250 = a4;
  v251 = a5;
  v242 = a2;
  v252 = a1;
  v237 = a9;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B78C0, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v232 = (uint64_t)&v212 - v15;
  v228 = type metadata accessor for FormatOption();
  v233 = *(_QWORD *)(v228 - 8);
  MEMORY[0x1E0C80A78](v228);
  v225 = (uint64_t)&v212 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v226 = (uint64_t *)((char *)&v212 - v18);
  MEMORY[0x1E0C80A78](v19);
  v240 = (uint64_t)&v212 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (uint64_t *)((char *)&v212 - v22);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2500, v24, v13);
  MEMORY[0x1E0C80A78](v25);
  v230 = (uint64_t)&v212 - v26;
  v231 = type metadata accessor for FormatPropertyDefinition(0);
  v234 = *(_QWORD *)(v231 - 8);
  MEMORY[0x1E0C80A78](v231);
  v227 = (uint64_t)&v212 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v229 = (char *)&v212 - v29;
  sub_1BA7A2A04(0);
  v221 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v222 = (unint64_t)&v212 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v224);
  v236 = (uint64_t)&v212 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v33);
  v223 = (uint64_t)&v212 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v243);
  v244 = v12;
  v245 = (uint64_t)&v212 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
  v37 = *(_QWORD *)(v36 + 16);
  v241 = v23;
  if (v37)
  {
    swift_bridgeObjectRetain();
    v38 = 0;
    v39 = 0;
    do
    {
      v254 = *(_BYTE *)(v36 + v38 + 32);
      sub_1BA758024();
      v40 = v253;
      if ((v253 & ~v39) == 0)
        v40 = 0;
      v39 |= v40;
      ++v38;
    }
    while (v37 != v38);
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = 0;
  }
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v39;
  sub_1BA4AD288(0, &qword_1ED3A4978, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FeedItemSorter);
  v43 = v42;
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = MEMORY[0x1E0DEE9D8];
  v45 = (_QWORD *)(v44 + 16);
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = sub_1BB4690A4;
  *(_QWORD *)(v46 + 24) = v41;
  swift_beginAccess();
  v47 = *(_QWORD **)(v44 + 16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v44 + 16) = v47;
  v235 = v43;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v47 = sub_1BB390414(0, v47[2] + 1, 1, v47);
    *v45 = v47;
  }
  v278 = a11;
  v247 = a10;
  v50 = v47[2];
  v49 = v47[3];
  if (v50 >= v49 >> 1)
  {
    v47 = sub_1BB390414((_QWORD *)(v49 > 1), v50 + 1, 1, v47);
    *v45 = v47;
  }
  v47[2] = v50 + 1;
  v51 = &v47[2 * v50];
  v51[4] = sub_1BA6AB18C;
  v51[5] = v46;
  swift_endAccess();
  swift_release();
  v52 = v252;
  v53 = v247;
  v54 = v248;
  v55 = v246;
  sub_1BB78367C(v249, v250, v44, v251, 1, v248, v247, v278 & 1, (uint64_t)&v255);
  v56 = v55;
  if (!v55)
  {
    swift_release();
    v273 = v261;
    v274 = v262;
    v275 = v263;
    v276 = v264;
    v269 = v257;
    v270 = v258;
    v271 = v259;
    v272 = v260;
    v267 = v255;
    v268 = v256;
    v61 = v255;
    v62 = v53;
    v63 = *((_QWORD *)&v255 + 1);
    swift_bridgeObjectRetain();
    v64 = v242;
    v65 = v54;
    v66 = sub_1BA78B1DC(v242, v54, v62, v61, v63);
    swift_bridgeObjectRelease();
    v266 = v66;
    swift_bridgeObjectRetain();
    v67 = sub_1BA78B2D4(v64, v65, v62, v61, v63);
    swift_bridgeObjectRelease();
    v220 = v67;
    v265 = v67;
    v235 = v66;
    if (v62)
    {
      v68 = v241;
      if (!*(_QWORD *)(v64 + 16))
      {
        v84 = 0;
        v78 = 0;
        v80 = 0;
        v85 = 0;
        v86 = 0;
        v87 = 0;
        goto LABEL_52;
      }
      swift_bridgeObjectRetain();
      v69 = v247;
      swift_bridgeObjectRetain();
      v70 = sub_1BA6E35A8(v248, v69);
      if ((v71 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v84 = 0;
        v78 = 0;
        v80 = 0;
        v85 = 0;
        v86 = 0;
        v87 = 0;
        goto LABEL_52;
      }
      v72 = *(_QWORD *)(*(_QWORD *)(v64 + 56) + 8 * v70);
      swift_retain();
      swift_bridgeObjectRelease();
      v73 = *(_QWORD *)(v72 + 136);
      swift_bridgeObjectRetain();
      swift_release();
      if (*(_QWORD *)(v73 + 16))
      {
        swift_bridgeObjectRetain();
        v74 = sub_1BA6E35A8(v61, v63);
        if ((v75 & 1) != 0)
        {
          v76 = (uint64_t *)(*(_QWORD *)(v73 + 56) + 48 * v74);
          v77 = *v76;
          v78 = v76[1];
          v80 = v76[2];
          v79 = v76[3];
          v82 = v76[4];
          v81 = v76[5];
          v249 = v82;
          v250 = v81;
          v251 = v77;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v248 = v79;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v250 = 0;
          v251 = 0;
          v78 = 0;
          v80 = 0;
          v248 = 0;
          v249 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v250 = 0;
        v251 = 0;
        v78 = 0;
        v80 = 0;
        v248 = 0;
        v249 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v85 = v248;
      goto LABEL_51;
    }
    v84 = 0;
    v78 = 0;
    v80 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
LABEL_41:
    v68 = v241;
    goto LABEL_52;
  }
  swift_release();
  if ((*(_BYTE *)(v244 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback) & 1) == 0)
    return swift_willThrow();
  v57 = *(_QWORD *)(v36 + 16);
  if (v57)
  {
    swift_bridgeObjectRetain();
    v58 = 0;
    v59 = 0;
    do
    {
      v254 = *(_BYTE *)(v36 + v58 + 32);
      sub_1BA758024();
      v60 = v253;
      if ((v253 & ~v59) == 0)
        v60 = 0;
      v59 |= v60;
      ++v58;
    }
    while (v57 != v58);
    swift_bridgeObjectRelease();
  }
  else
  {
    v59 = 0;
  }
  v88 = swift_allocObject();
  *(_QWORD *)(v88 + 16) = v59;
  v89 = swift_allocObject();
  *(_QWORD *)(v89 + 16) = MEMORY[0x1E0DEE9D8];
  v90 = (_QWORD *)(v89 + 16);
  v91 = swift_allocObject();
  *(_QWORD *)(v91 + 16) = sub_1BB469440;
  *(_QWORD *)(v91 + 24) = v88;
  swift_beginAccess();
  v92 = *(_QWORD **)(v89 + 16);
  swift_retain();
  v93 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v89 + 16) = v92;
  v246 = v55;
  if ((v93 & 1) == 0)
  {
    v92 = sub_1BB390414(0, v92[2] + 1, 1, v92);
    *v90 = v92;
  }
  v95 = v92[2];
  v94 = v92[3];
  if (v95 >= v94 >> 1)
  {
    v92 = sub_1BB390414((_QWORD *)(v94 > 1), v95 + 1, 1, v92);
    *v90 = v92;
  }
  v92[2] = v95 + 1;
  v96 = &v92[2 * v95];
  v96[4] = sub_1BA6AB18C;
  v96[5] = v91;
  swift_endAccess();
  swift_release();
  v52 = v252;
  sub_1BB78367C(v249, v250, v89, v251, 1, 0, 0, v278 & 1, (uint64_t)&v255);
  swift_release();
  v273 = v261;
  v274 = v262;
  v275 = v263;
  v276 = v264;
  v269 = v257;
  v270 = v258;
  v271 = v259;
  v272 = v260;
  v267 = v255;
  v268 = v256;
  v97 = v255;
  swift_bridgeObjectRetain();
  v98 = v242;
  v99 = sub_1BA78B1DC(v242, 42, 0xE100000000000000, v97, *((uint64_t *)&v97 + 1));
  swift_bridgeObjectRelease();
  v235 = v99;
  v266 = v99;
  swift_bridgeObjectRetain();
  v100 = sub_1BA78B2D4(v98, 42, 0xE100000000000000, v97, *((uint64_t *)&v97 + 1));
  swift_bridgeObjectRelease();
  v220 = v100;
  v265 = v100;
  v101 = *(_QWORD *)(v98 + 16);
  swift_bridgeObjectRetain();
  v102 = v246;
  if (!v101)
  {

    swift_bridgeObjectRelease();
    v84 = 0;
    v78 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
    v56 = 0;
    v80 = 0;
    goto LABEL_41;
  }
  v103 = sub_1BA6E35A8(42, 0xE100000000000000);
  v68 = v241;
  if ((v104 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    v84 = 0;
    v78 = 0;
    v85 = 0;
    v86 = 0;
    v87 = 0;
    v56 = 0;
    v80 = 0;
    goto LABEL_52;
  }
  v105 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v98 + 56) + 8 * v103) + 136);
  if (*(_QWORD *)(v105 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v106 = sub_1BA6E35A8(v97, *((uint64_t *)&v97 + 1));
    if ((v107 & 1) != 0)
    {
      v108 = (uint64_t *)(*(_QWORD *)(v105 + 56) + 48 * v106);
      v109 = *v108;
      v78 = v108[1];
      v111 = v108[2];
      v110 = v108[3];
      v113 = v108[4];
      v112 = v108[5];
      v248 = v110;
      v249 = v113;
      v250 = v112;
      v251 = v109;
      swift_bridgeObjectRetain();
      v247 = v111;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v250 = 0;
      v251 = 0;
      v78 = 0;
      v247 = 0;
      v248 = 0;
      v249 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v85 = v248;
  }
  else
  {
    v250 = 0;
    v251 = 0;
    v78 = 0;
    v247 = 0;
    v85 = 0;
    v249 = 0;
  }

  swift_bridgeObjectRelease();
  v56 = 0;
  v80 = v247;
LABEL_51:
  v86 = v249;
  v87 = v250;
  v84 = v251;
LABEL_52:
  v250 = v87;
  v251 = v84;
  v277[0] = v84;
  v277[1] = v78;
  v277[2] = v80;
  v277[3] = v85;
  v277[4] = v86;
  v277[5] = v87;
  *((_QWORD *)&v256 + 1) = &type metadata for FeedTag;
  *(_QWORD *)&v257 = sub_1BA6A96BC();
  *(_QWORD *)&v255 = swift_allocObject();
  sub_1BA6A955C((uint64_t)&v267, v255 + 16);
  sub_1BA7BC210(&v255, v245);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v248 = v85;
  v249 = v86;
  if (EnumCaseMultiPayload == 8)
  {
    v120 = v236;
    sub_1BA5193C4(v245, v236, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v121 = (uint64_t *)(a12 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
    swift_beginAccess();
    v122 = v121[1];
    v123 = v120 + *(int *)(v224 + 20);
    v124 = *(_QWORD *)(v122 + 16);
    v224 = v123;
    if (v124)
    {
      v247 = v80;
      v243 = v78;
      v125 = *v121;
      v126 = *(_QWORD *)(v123 + 16);
      v127 = *(_QWORD *)(v123 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v128 = sub_1BA6E35A8(v126, v127);
      if ((v129 & 1) != 0)
      {
        v246 = v56;
        v130 = v222;
        sub_1BA4C2DD8(*(_QWORD *)(v122 + 56) + *(_QWORD *)(v221 + 72) * v128, v222, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
        v132 = *(_QWORD *)v130;
        v131 = *(_QWORD *)(v130 + 8);
        v133 = *(_QWORD *)(v130 + 24);
        v215 = *(_QWORD *)(v130 + 16);
        v216 = v132;
        v245 = *(_QWORD *)(v130 + 32);
        v134 = *(_QWORD *)(v130 + 48);
        v242 = *(_QWORD *)(v130 + 40);
        v213 = v125;
        v135 = *(_QWORD *)(v130 + 56);
        v136 = *(_QWORD *)(v130 + 64);
        v214 = *(_QWORD *)(v130 + 72);
        v137 = *(char *)(v130 + 80);
        v223 = v131;
        swift_bridgeObjectRetain();
        v221 = v133;
        swift_bridgeObjectRetain();
        v218 = v135;
        v219 = v134;
        v138 = v134;
        v139 = v214;
        v217 = v136;
        sub_1BA709DE8(v245, v242, v138, v135, v136, v214, v137);
        sub_1BA4A2E80(v130, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v137 & 0x80000000) == 0)
        {
          v78 = v243;
          v140 = v218;
          v141 = v219;
          v142 = v217;
          v143 = v137;
          goto LABEL_67;
        }
        *(_QWORD *)&v255 = v245;
        sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA547334((unint64_t *)&qword_1ED3A2F58, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition);
        sub_1BA4A2870(&qword_1ED3A0FB0, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
        swift_bridgeObjectRetain();
        v150 = sub_1BB872BBC();
        v151 = *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 28);
        v152 = v224;
        v153 = *(_QWORD *)(v224 + v151);
        v154 = *(_QWORD *)(v153 + 16);
        LODWORD(v216) = v137;
        if (!v154)
        {
LABEL_91:
          swift_bridgeObjectRelease();
          *(_QWORD *)&v255 = *(_QWORD *)(v152 + v151);
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1BA547334((unint64_t *)&qword_1ED39EA08, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
          sub_1BA4A2870(&qword_1ED39C9E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
          v179 = sub_1BB872BB0();
          v180 = v245;
          v181 = *(_QWORD *)(v245 + 16);
          v183 = v218;
          v182 = v219;
          v184 = v217;
          if (v181)
          {
            v185 = v245
                 + ((*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80));
            v241 = *(uint64_t **)(v234 + 72);
            v186 = (uint64_t)v229;
            do
            {
              sub_1BA4C2DD8(v185, v186, type metadata accessor for FormatPropertyDefinition);
              FormatPropertyDefinition.identifier.getter();
              if (*(_QWORD *)(v179 + 16) && (v189 = sub_1BA6E35A8(v187, v188), (v190 & 1) != 0))
              {
                sub_1BA4C2DD8(*(_QWORD *)(v179 + 56) + *(_QWORD *)(v233 + 72) * v189, v230, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
                v191 = 0;
              }
              else
              {
                v191 = 1;
              }
              v192 = v233;
              v193 = v230;
              v194 = v228;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v233 + 56))(v230, v191, 1, v228);
              swift_bridgeObjectRelease();
              LODWORD(v194) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v192 + 48))(v193, 1, v194);
              sub_1BA604728(v193, (uint64_t)&qword_1ED3D2500, (uint64_t)type metadata accessor for FormatOption, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
              v195 = (_DWORD)v194 == 1;
              v186 = (uint64_t)v229;
              if (v195)
              {
                sub_1BB12B170();
                if ((v196 & 1) != 0)
                {
                  sub_1BA70ABF4(v251, v243);
                  swift_bridgeObjectRelease();
                  v197 = v245;
                  v198 = v242;
                  sub_1BA6C0C20(v245, v242, v219, v218, v217, v214, v216);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  type metadata accessor for FormatLayoutError();
                  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
                  swift_allocError();
                  v200 = v199;
                  sub_1BB468FA8();
                  v202 = v200 + *(int *)(v201 + 48);
                  v203 = v236;
                  sub_1BA4C2DD8(v236, v200, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
                  sub_1BA4C2DD8(v186, v202, type metadata accessor for FormatPropertyDefinition);
                  swift_storeEnumTagMultiPayload();
                  swift_willThrow();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1BA6C0C20(v197, v198, v219, v218, v217, v214, v216);
                  sub_1BA4A2E80(v186, type metadata accessor for FormatPropertyDefinition);
                  v149 = v203;
                  goto LABEL_68;
                }
              }
              sub_1BA4A2E80(v186, type metadata accessor for FormatPropertyDefinition);
              v185 += (uint64_t)v241;
              --v181;
              v183 = v218;
              v182 = v219;
              v184 = v217;
            }
            while (v181);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v180 = v245;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v204 = v242;
          v205 = v214;
          v206 = v216;
          sub_1BA6C0C20(v180, v242, v182, v183, v184, v214, v216);
          sub_1BA6C0C20(v180, v204, v182, v183, v184, v205, v206);
          sub_1BA4A2E80(v236, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          v52 = v252;
          goto LABEL_61;
        }
        v213 = v151;
        v222 = (*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80);
        v155 = v153 + v222;
        v156 = *(_QWORD *)(v233 + 72);
        v215 = v153;
        swift_bridgeObjectRetain();
        v157 = v150;
        v235 = v150;
        v220 = v156;
        while (1)
        {
          sub_1BA4C2DD8(v155, (uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          if (!*(_QWORD *)(v157 + 16))
            break;
          v158 = *v68;
          v159 = v68[1];
          swift_bridgeObjectRetain();
          v160 = sub_1BA6E35A8(v158, v159);
          v161 = v234;
          v162 = v232;
          if ((v163 & 1) != 0)
          {
            sub_1BA4C2DD8(*(_QWORD *)(v157 + 56) + *(_QWORD *)(v234 + 72) * v160, v232, type metadata accessor for FormatPropertyDefinition);
            v164 = 0;
          }
          else
          {
            v164 = 1;
          }
          v165 = v231;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v161 + 56))(v162, v164, 1, v231);
          swift_bridgeObjectRelease();
          v166 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v161 + 48))(v162, 1, v165);
          v167 = v251;
          v156 = v220;
          if (v166 == 1)
            goto LABEL_80;
          v172 = v227;
          sub_1BA5193C4(v162, v227, type metadata accessor for FormatPropertyDefinition);
          type metadata accessor for FormatOptionConverter();
          v173 = v226;
          v174 = v246;
          sub_1BB24F56C(v68, v172, v226);
          if (v174)
          {
            swift_bridgeObjectRelease();
            v207 = v245;
            v208 = v242;
            v210 = v218;
            v209 = v219;
            v211 = v217;
            sub_1BA6C0C20(v245, v242, v219, v218, v217, v214, v216);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA6C0C20(v207, v208, v209, v210, v211, v214, v216);
            sub_1BA70ABF4(v167, v243);
            sub_1BA4A2E80(v227, type metadata accessor for FormatPropertyDefinition);
            sub_1BA4A2E80((uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            swift_bridgeObjectRelease();
            sub_1BA4A2E80(v236, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return sub_1BA6A94C4((uint64_t)&v267);
          }
          sub_1BA4C2DD8((uint64_t)v173, v225, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v175 = v265;
          v176 = swift_isUniquelyReferenced_nonNull_native();
          v246 = 0;
          v169 = (uint64_t)v68;
          if ((v176 & 1) == 0)
            v175 = sub_1BA7AD174(0, *(_QWORD *)(v175 + 16) + 1, 1, v175);
          v157 = v235;
          v178 = *(_QWORD *)(v175 + 16);
          v177 = *(_QWORD *)(v175 + 24);
          if (v178 >= v177 >> 1)
            v175 = sub_1BA7AD174(v177 > 1, v178 + 1, 1, v175);
          *(_QWORD *)(v175 + 16) = v178 + 1;
          sub_1BA5193C4(v225, v175 + v222 + v178 * v156, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v265 = v175;
          sub_1BA4A2E80((uint64_t)v226, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          sub_1BA4A2E80(v227, type metadata accessor for FormatPropertyDefinition);
LABEL_73:
          v68 = (uint64_t *)v169;
          sub_1BA4A2E80(v169, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v155 += v156;
          if (!--v154)
          {
            swift_bridgeObjectRelease();
            v152 = v224;
            v151 = v213;
            goto LABEL_91;
          }
        }
        v162 = v232;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v234 + 56))(v232, 1, 1, v231);
LABEL_80:
        sub_1BA604728(v162, (uint64_t)&qword_1ED3B78C0, (uint64_t)type metadata accessor for FormatPropertyDefinition, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        sub_1BA4C2DD8((uint64_t)v68, v240, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v168 = v265;
        v169 = (uint64_t)v68;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v168 = sub_1BA7AD174(0, *(_QWORD *)(v168 + 16) + 1, 1, v168);
        v157 = v235;
        v171 = *(_QWORD *)(v168 + 16);
        v170 = *(_QWORD *)(v168 + 24);
        if (v171 >= v170 >> 1)
          v168 = sub_1BA7AD174(v170 > 1, v171 + 1, 1, v168);
        *(_QWORD *)(v168 + 16) = v171 + 1;
        sub_1BA5193C4(v240, v168 + v222 + v171 * v156, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v265 = v168;
        goto LABEL_73;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v215 = 0;
      v216 = 0;
      v223 = 0;
      v221 = 0;
      v245 = 0;
      v242 = 0;
      v141 = 0;
      v140 = 0;
      v142 = 0;
      v139 = 0;
      v143 = 0;
      v78 = v243;
    }
    else
    {
      v215 = 0;
      v216 = 0;
      v223 = 0;
      v221 = 0;
      v245 = 0;
      v242 = 0;
      v141 = 0;
      v140 = 0;
      v142 = 0;
      v139 = 0;
      v143 = 0;
    }
LABEL_67:
    sub_1BA70ABF4(v251, v78);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    v147 = *(_QWORD *)(v224 + 24);
    *v148 = *(_QWORD *)(v224 + 16);
    v148[1] = v147;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1BA8CEA24(v216, v223, v215, v221, v245, v242, v141, v140, v142, v139, v143);
    v149 = v236;
LABEL_68:
    sub_1BA4A2E80(v149, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    return sub_1BA6A94C4((uint64_t)&v267);
  }
  v243 = v78;
  v247 = v80;
  if (EnumCaseMultiPayload == 4)
  {
    v115 = v223;
    sub_1BA5193C4(v245, v223, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v116 = sub_1BB11BDF4();
    sub_1BA6D3834(v116);
    v117 = sub_1BB11C124();
    sub_1BA6E3FB8(v117);
    v118 = v115;
    v119 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
  }
  else
  {
    v119 = type metadata accessor for FeedItem;
    v118 = v245;
  }
  sub_1BA4A2E80(v118, v119);
LABEL_61:
  v144 = v266;
  v145 = v265;
  v146 = *(_BYTE *)(v52 + 88);
  if ((v278 & 1) != 0)
  {
    swift_beginAccess();
    sub_1BB464BD8((uint64_t *)&v267, v144, v145, v277, v238, v239, v146, v237);
  }
  else
  {
    swift_beginAccess();
    sub_1BB46615C((uint64_t *)&v267, v144, v145, v277, v238, v239, v146, v237);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70ABF4(v251, v243);
  return sub_1BA6A94C4((uint64_t)&v267);
}

uint64_t sub_1BB462638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  char v94;
  unint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _OWORD *v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  int EnumCaseMultiPayload;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(_QWORD);
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  char v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int v181;
  _QWORD *v182;
  unint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  BOOL v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unsigned __int8 v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  int v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int v273;
  char v274;
  _QWORD v275[5];
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  _OWORD v283[2];
  unint64_t v284;
  uint64_t v285;
  _OWORD v286[7];
  _OWORD v287[2];
  uint64_t v288[8];
  uint64_t v289;

  v268 = a8;
  v259 = a6;
  v270 = a4;
  v271 = a5;
  v269 = a3;
  v263 = a2;
  v289 = a1;
  v258 = a9;
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B78C0, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v262 = (uint64_t)&v224 - v16;
  v249 = type metadata accessor for FormatOption();
  v253 = *(_QWORD *)(v249 - 8);
  MEMORY[0x1E0C80A78](v249);
  v246 = (uint64_t)&v224 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v248 = (char *)&v224 - v19;
  MEMORY[0x1E0C80A78](v20);
  v261 = (uint64_t)&v224 - v21;
  MEMORY[0x1E0C80A78](v22);
  v254 = (uint64_t *)((char *)&v224 - v23);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2500, v24, v14);
  MEMORY[0x1E0C80A78](v25);
  v251 = (uint64_t)&v224 - v26;
  v252 = type metadata accessor for FormatPropertyDefinition(0);
  v255 = *(_QWORD *)(v252 - 8);
  MEMORY[0x1E0C80A78](v252);
  v247 = (uint64_t)&v224 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v250 = (char *)&v224 - v29;
  sub_1BA7A2A04(0);
  v242 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v243 = (uint64_t)&v224 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v245 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v245);
  v257 = (uint64_t)&v224 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v33);
  v244 = (uint64_t)&v224 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v264);
  v265 = (uint64_t)&v224 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = v12;
  v36 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
  v37 = *(_QWORD *)(v36 + 16);
  if (v37)
  {
    swift_bridgeObjectRetain();
    v38 = 0;
    v39 = 0;
    do
    {
      v274 = *(_BYTE *)(v36 + v38 + 32);
      sub_1BA758024();
      v40 = v275[0];
      if ((v275[0] & ~v39) == 0)
        v40 = 0;
      v39 |= v40;
      ++v38;
    }
    while (v37 != v38);
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = 0;
  }
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v39;
  sub_1BA4AD288(0, &qword_1ED39F300, (uint64_t)&type metadata for FeedIssue, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FeedItemSorter);
  v43 = v42;
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = MEMORY[0x1E0DEE9D8];
  v45 = (_QWORD *)(v44 + 16);
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = sub_1BB468E14;
  *(_QWORD *)(v46 + 24) = v41;
  swift_beginAccess();
  v47 = *(_QWORD **)(v44 + 16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v44 + 16) = v47;
  v260 = a7;
  v256 = v43;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v47 = sub_1BB39058C(0, v47[2] + 1, 1, v47);
    *v45 = v47;
  }
  v273 = a11;
  v272 = a10;
  v50 = v47[2];
  v49 = v47[3];
  if (v50 >= v49 >> 1)
  {
    v47 = sub_1BB39058C((_QWORD *)(v49 > 1), v50 + 1, 1, v47);
    *v45 = v47;
  }
  v47[2] = v50 + 1;
  v51 = &v47[2 * v50];
  v51[4] = sub_1BB468E18;
  v51[5] = v46;
  swift_endAccess();
  swift_release();
  v52 = v272;
  v53 = v267;
  v54 = v268;
  sub_1BB783A3C(v269, v270, v44, v271, 1, v268, v272, v273 & 1, &v276);
  v55 = (void *)v53;
  if (v53)
  {
    swift_release();
    if ((*(_BYTE *)(v266 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback) & 1) == 0)
      return swift_willThrow();
    v56 = *(_QWORD *)(v36 + 16);
    if (v56)
    {
      swift_bridgeObjectRetain();
      v57 = 0;
      v58 = 0;
      v59 = MEMORY[0x1E0DEE9D8];
      do
      {
        v274 = *(_BYTE *)(v36 + v57 + 32);
        sub_1BA758024();
        v60 = v275[0];
        if ((v275[0] & ~v58) == 0)
          v60 = 0;
        v58 |= v60;
        ++v57;
      }
      while (v56 != v57);
      swift_bridgeObjectRelease();
    }
    else
    {
      v58 = 0;
      v59 = MEMORY[0x1E0DEE9D8];
    }
    v89 = swift_allocObject();
    *(_QWORD *)(v89 + 16) = v58;
    v90 = swift_allocObject();
    *(_QWORD *)(v90 + 16) = v59;
    v91 = (_QWORD *)(v90 + 16);
    v92 = swift_allocObject();
    *(_QWORD *)(v92 + 16) = sub_1BB468E14;
    *(_QWORD *)(v92 + 24) = v89;
    swift_beginAccess();
    v93 = *(_QWORD **)(v90 + 16);
    swift_retain();
    v94 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v90 + 16) = v93;
    if ((v94 & 1) == 0)
    {
      v93 = sub_1BB39058C(0, v93[2] + 1, 1, v93);
      *v91 = v93;
    }
    v96 = v93[2];
    v95 = v93[3];
    if (v96 >= v95 >> 1)
    {
      v93 = sub_1BB39058C((_QWORD *)(v95 > 1), v96 + 1, 1, v93);
      *v91 = v93;
    }
    v93[2] = v96 + 1;
    v97 = &v93[2 * v96];
    v97[4] = sub_1BB468E18;
    v97[5] = v92;
    swift_endAccess();
    swift_release();
    sub_1BB783A3C(v269, v270, v90, v271, 1, 0, 0, v273 & 1, &v276);
    swift_release();
    v98 = *((_QWORD *)&v276 + 1);
    v61 = v276;
    v63 = v277;
    v99 = BYTE8(v277);
    LODWORD(v256) = BYTE9(v277);
    v241 = v278;
    LODWORD(v240) = BYTE8(v278);
    v238 = *((_QWORD *)&v279 + 1);
    v239 = v279;
    LODWORD(v237) = v280;
    v235 = v281;
    v236 = *((_QWORD *)&v280 + 1);
    v233 = v282;
    v234 = *((_QWORD *)&v281 + 1);
    v231 = *(_QWORD *)&v283[0];
    v232 = *((_QWORD *)&v282 + 1);
    v229 = *(_QWORD *)&v283[1];
    v230 = *((_QWORD *)&v283[0] + 1);
    v228 = BYTE8(v283[1]);
    swift_bridgeObjectRetain();
    v100 = v263;
    v101 = sub_1BA78B1DC(v263, 42, 0xE100000000000000, v98, v63);
    swift_bridgeObjectRelease();
    v225 = v101;
    v285 = v101;
    swift_bridgeObjectRetain();
    v269 = v98;
    v102 = sub_1BA78B2D4(v100, 42, 0xE100000000000000, v98, v63);
    swift_bridgeObjectRelease();
    v284 = v102;
    v103 = *(_QWORD *)(v100 + 16);
    swift_bridgeObjectRetain();
    v224 = v102;
    LODWORD(v267) = v99;
    if (!v103 || (v104 = sub_1BA6E35A8(42, 0xE100000000000000), (v105 & 1) == 0))
    {

      swift_bridgeObjectRelease();
      v81 = 0;
      v86 = 0;
      v87 = 0;
      v71 = 0;
      v88 = 0;
      v73 = 0;
      v82 = 0;
      goto LABEL_50;
    }
    v106 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v100 + 56) + 8 * v104) + 136);
    if (*(_QWORD *)(v106 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v107 = sub_1BA6E35A8(v269, v63);
      if ((v108 & 1) != 0)
      {
        v109 = (uint64_t *)(*(_QWORD *)(v106 + 56) + 48 * v107);
        v81 = *v109;
        v110 = v109[1];
        v111 = v109[2];
        v112 = v109[3];
        v71 = v109[4];
        v272 = v109[5];
        v227 = v110;
        swift_bridgeObjectRetain();
        v271 = v111;
        swift_bridgeObjectRetain();
        v270 = v112;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v81 = 0;
        v227 = 0;
        v270 = 0;
        v271 = 0;
        v71 = 0;
        v272 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v81 = 0;
      v227 = 0;
      v270 = 0;
      v271 = 0;
      v71 = 0;
      v272 = 0;
    }

    swift_bridgeObjectRelease();
    v73 = 0;
    v82 = v227;
    goto LABEL_49;
  }
  v226 = 0;
  swift_release();
  v62 = *((_QWORD *)&v276 + 1);
  v61 = v276;
  v63 = v277;
  v64 = BYTE8(v277);
  v65 = BYTE9(v277);
  v241 = v278;
  LODWORD(v240) = BYTE8(v278);
  v238 = *((_QWORD *)&v279 + 1);
  v239 = v279;
  LODWORD(v237) = v280;
  v235 = v281;
  v236 = *((_QWORD *)&v280 + 1);
  v233 = v282;
  v234 = *((_QWORD *)&v281 + 1);
  v231 = *(_QWORD *)&v283[0];
  v232 = *((_QWORD *)&v282 + 1);
  v229 = *(_QWORD *)&v283[1];
  v230 = *((_QWORD *)&v283[0] + 1);
  v228 = BYTE8(v283[1]);
  swift_bridgeObjectRetain();
  v66 = v263;
  v67 = sub_1BA78B1DC(v263, v54, v52, v62, v63);
  v68 = v54;
  v69 = v67;
  swift_bridgeObjectRelease();
  v225 = v69;
  v285 = v69;
  swift_bridgeObjectRetain();
  v70 = v68;
  v71 = v272;
  v269 = v62;
  v72 = sub_1BA78B2D4(v66, v70, v272, v62, v63);
  swift_bridgeObjectRelease();
  v284 = v72;
  v224 = v72;
  LODWORD(v267) = v64;
  LODWORD(v256) = v65;
  if (!v71)
  {
    v81 = 0;
    v82 = 0;
    v86 = 0;
    v87 = 0;
    v88 = 0;
    v73 = v226;
    goto LABEL_50;
  }
  v73 = v226;
  if (!*(_QWORD *)(v66 + 16))
  {
LABEL_40:
    v81 = 0;
    v82 = 0;
    v86 = 0;
    v87 = 0;
    v71 = 0;
    v88 = 0;
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v74 = sub_1BA6E35A8(v268, v71);
  if ((v75 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  v76 = *(_QWORD *)(*(_QWORD *)(v66 + 56) + 8 * v74);
  swift_retain();
  swift_bridgeObjectRelease();
  v77 = *(_QWORD *)(v76 + 136);
  swift_bridgeObjectRetain();
  swift_release();
  if (*(_QWORD *)(v77 + 16))
  {
    swift_bridgeObjectRetain();
    v78 = sub_1BA6E35A8(v269, v63);
    if ((v79 & 1) != 0)
    {
      v80 = (uint64_t *)(*(_QWORD *)(v77 + 56) + 48 * v78);
      v81 = *v80;
      v82 = v80[1];
      v83 = v80[2];
      v84 = v80[3];
      v71 = v80[4];
      v272 = v80[5];
      swift_bridgeObjectRetain();
      v271 = v83;
      swift_bridgeObjectRetain();
      v270 = v84;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v81 = 0;
      v82 = 0;
      v270 = 0;
      v271 = 0;
      v71 = 0;
      v272 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v81 = 0;
    v82 = 0;
    v270 = 0;
    v271 = 0;
    v71 = 0;
    v272 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_49:
  v87 = v270;
  v86 = v271;
  v88 = v272;
LABEL_50:
  v288[0] = v81;
  v288[1] = v82;
  v270 = v87;
  v271 = v86;
  v288[2] = v86;
  v288[3] = v87;
  v288[4] = v71;
  v288[5] = v88;
  v272 = v88;
  *(_QWORD *)&v276 = v61;
  *((_QWORD *)&v276 + 1) = v269;
  *(_QWORD *)&v277 = v63;
  BYTE8(v277) = v267;
  BYTE9(v277) = v256;
  *(_QWORD *)&v278 = v241;
  BYTE8(v278) = v240;
  *(_QWORD *)&v279 = v239;
  *((_QWORD *)&v279 + 1) = v238;
  LOBYTE(v280) = v237;
  *((_QWORD *)&v280 + 1) = v236;
  *(_QWORD *)&v281 = v235;
  *((_QWORD *)&v281 + 1) = v234;
  *(_QWORD *)&v282 = v233;
  *((_QWORD *)&v282 + 1) = v232;
  *(_QWORD *)&v283[0] = v231;
  *((_QWORD *)&v283[0] + 1) = v230;
  *(_QWORD *)&v283[1] = v229;
  BYTE8(v283[1]) = v228;
  v286[4] = v280;
  v286[5] = v281;
  v286[2] = v278;
  v286[3] = v279;
  v286[0] = v276;
  v286[1] = v277;
  *(_OWORD *)((char *)v287 + 9) = *(_OWORD *)((char *)v283 + 9);
  v286[6] = v282;
  v287[0] = v283[0];
  v275[3] = &type metadata for FeedIssue;
  v275[4] = sub_1BA6B2E68();
  v113 = (_OWORD *)swift_allocObject();
  v275[0] = v113;
  v114 = v283[0];
  v113[7] = v282;
  v113[8] = v114;
  *(_OWORD *)((char *)v113 + 137) = *(_OWORD *)((char *)v283 + 9);
  v115 = v279;
  v113[3] = v278;
  v113[4] = v115;
  v116 = v281;
  v113[5] = v280;
  v113[6] = v116;
  v117 = v277;
  v113[1] = v276;
  v113[2] = v117;
  sub_1BA8D1F08((uint64_t)&v276);
  v118 = v265;
  sub_1BA7BC210(v275, v265);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v268 = v81;
  v263 = v71;
  if (EnumCaseMultiPayload == 8)
  {
    v128 = v118;
    v129 = v257;
    sub_1BA5193C4(v128, v257, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v130 = (uint64_t *)(a12 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
    swift_beginAccess();
    v131 = v130[1];
    v132 = v129 + *(int *)(v245 + 20);
    v133 = *(_QWORD *)(v131 + 16);
    v264 = v132;
    if (!v133)
    {
      v241 = 0;
      v242 = 0;
      v244 = 0;
      v245 = 0;
      v265 = 0;
      v256 = 0;
      v152 = 0;
      v153 = 0;
      v150 = 0;
      v154 = 0;
      v151 = 0;
      goto LABEL_65;
    }
    v227 = v82;
    v134 = *v130;
    v135 = *(_QWORD *)(v132 + 16);
    v136 = *(_QWORD *)(v132 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v137 = sub_1BA6E35A8(v135, v136);
    if ((v138 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v241 = 0;
      v242 = 0;
      v244 = 0;
      v245 = 0;
      v265 = 0;
      v256 = 0;
      v152 = 0;
      v153 = 0;
      v150 = 0;
      v154 = 0;
      v151 = 0;
      v82 = v227;
      goto LABEL_65;
    }
    v226 = v73;
    v139 = v243;
    sub_1BA4C2DD8(*(_QWORD *)(v131 + 56) + *(_QWORD *)(v242 + 72) * v137, v243, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
    v141 = *(_QWORD *)v139;
    v140 = *(_QWORD *)(v139 + 8);
    v142 = *(_QWORD *)(v139 + 24);
    v241 = *(_QWORD *)(v139 + 16);
    v242 = v141;
    v143 = *(_QWORD *)(v139 + 40);
    v265 = *(_QWORD *)(v139 + 32);
    v145 = *(_QWORD *)(v139 + 48);
    v144 = *(_QWORD *)(v139 + 56);
    v269 = *(_QWORD *)(v139 + 64);
    v238 = v134;
    v146 = *(_QWORD *)(v139 + 72);
    v147 = *(char *)(v139 + 80);
    v245 = v140;
    swift_bridgeObjectRetain();
    v244 = v142;
    v148 = v265;
    swift_bridgeObjectRetain();
    v256 = v143;
    v267 = v145;
    v149 = v145;
    v150 = v269;
    v239 = v146;
    v240 = v144;
    sub_1BA709DE8(v148, v143, v149, v144, v269, v146, v147);
    sub_1BA4A2E80(v139, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
    v151 = v147;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v147 & 0x80000000) == 0)
    {
      v82 = v227;
      v152 = v267;
      v154 = v239;
      v153 = v240;
LABEL_65:
      sub_1BA70ABF4(v268, v82);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v159 = *(_QWORD *)(v264 + 24);
      *v160 = *(_QWORD *)(v264 + 16);
      v160[1] = v159;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      sub_1BA8CEA24(v242, v245, v241, v244, v265, v256, v152, v153, v150, v154, v151);
      v161 = v257;
      goto LABEL_66;
    }
    LODWORD(v238) = v147;
    v275[0] = v148;
    sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA547334((unint64_t *)&qword_1ED3A2F58, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition);
    sub_1BA4A2870(&qword_1ED3A0FB0, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
    swift_bridgeObjectRetain();
    v162 = sub_1BB872BBC();
    v163 = *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 28);
    v164 = *(_QWORD *)(v264 + v163);
    v165 = *(_QWORD *)(v164 + 16);
    if (!v165)
    {
      v184 = v267;
LABEL_90:
      swift_bridgeObjectRelease();
      v275[0] = *(_QWORD *)(v264 + v163);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA547334((unint64_t *)&qword_1ED39EA08, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
      sub_1BA4A2870(&qword_1ED39C9E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
      v191 = sub_1BB872BB0();
      v192 = *(_QWORD *)(v265 + 16);
      if (!v192)
      {
LABEL_101:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v213 = v265;
        v214 = v256;
        v216 = v239;
        v215 = v240;
        v217 = v238;
        sub_1BA6C0C20(v265, v256, v184, v240, v150, v239, v238);
        sub_1BA6C0C20(v213, v214, v184, v215, v150, v216, v217);
        sub_1BA4A2E80(v257, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
        v121 = v259;
        v120 = v260;
        goto LABEL_59;
      }
      v264 = v191;
      v193 = v265 + ((*(unsigned __int8 *)(v255 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v255 + 80));
      v262 = *(_QWORD *)(v255 + 72);
      v194 = (uint64_t)v250;
      while (1)
      {
        sub_1BA4C2DD8(v193, v194, type metadata accessor for FormatPropertyDefinition);
        FormatPropertyDefinition.identifier.getter();
        v197 = v264;
        if (*(_QWORD *)(v264 + 16) && (v198 = sub_1BA6E35A8(v195, v196), (v199 & 1) != 0))
        {
          sub_1BA4C2DD8(*(_QWORD *)(v197 + 56) + *(_QWORD *)(v253 + 72) * v198, v251, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v200 = 0;
        }
        else
        {
          v200 = 1;
        }
        v201 = v253;
        v202 = v251;
        v203 = v249;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v253 + 56))(v251, v200, 1, v249);
        swift_bridgeObjectRelease();
        LODWORD(v203) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v202, 1, v203);
        sub_1BA604728(v202, (uint64_t)&qword_1ED3D2500, (uint64_t)type metadata accessor for FormatOption, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        v204 = (_DWORD)v203 == 1;
        v194 = (uint64_t)v250;
        if (v204)
        {
          sub_1BB12B170();
          if ((v205 & 1) != 0)
            break;
        }
        sub_1BA4A2E80(v194, type metadata accessor for FormatPropertyDefinition);
        v193 += v262;
        --v192;
        v184 = v267;
        v150 = v269;
        if (!v192)
          goto LABEL_101;
      }
      sub_1BA70ABF4(v268, v227);
      swift_bridgeObjectRelease();
      v206 = v265;
      v207 = v256;
      sub_1BA6C0C20(v265, v256, v267, v240, v269, v239, v238);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v209 = v208;
      sub_1BB468FA8();
      v211 = v209 + *(int *)(v210 + 48);
      v212 = v257;
      sub_1BA4C2DD8(v257, v209, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
      sub_1BA4C2DD8(v194, v211, type metadata accessor for FormatPropertyDefinition);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(v206, v207, v267, v240, v269, v239, v238);
      sub_1BA4A2E80(v194, type metadata accessor for FormatPropertyDefinition);
      v161 = v212;
LABEL_66:
      sub_1BA4A2E80(v161, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
      return sub_1BA8D1FE4((uint64_t)&v276);
    }
    v236 = v163;
    v237 = v164;
    v242 = (*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80);
    v243 = v162;
    v166 = v164 + v242;
    v241 = *(_QWORD *)(v253 + 72);
    swift_bridgeObjectRetain();
    v167 = v254;
    v168 = v262;
    v169 = v226;
    while (1)
    {
      sub_1BA4C2DD8(v166, (uint64_t)v167, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v171 = v243;
      if (!*(_QWORD *)(v243 + 16))
        break;
      v172 = *v167;
      v173 = v167[1];
      swift_bridgeObjectRetain();
      v174 = sub_1BA6E35A8(v172, v173);
      if ((v175 & 1) != 0)
      {
        v176 = v255;
        v177 = *(_QWORD *)(v171 + 56) + *(_QWORD *)(v255 + 72) * v174;
        v178 = v262;
        sub_1BA4C2DD8(v177, v262, type metadata accessor for FormatPropertyDefinition);
        v179 = 0;
      }
      else
      {
        v179 = 1;
        v176 = v255;
        v178 = v262;
      }
      v180 = v252;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v176 + 56))(v178, v179, 1, v252);
      swift_bridgeObjectRelease();
      v181 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v176 + 48))(v178, 1, v180);
      v168 = v178;
      v182 = v248;
      if (v181 == 1)
        goto LABEL_78;
      v187 = v247;
      sub_1BA5193C4(v178, v247, type metadata accessor for FormatPropertyDefinition);
      type metadata accessor for FormatOptionConverter();
      sub_1BB24F56C(v167, v187, v182);
      if (v169)
      {
        swift_bridgeObjectRelease();
        v218 = v265;
        v219 = v256;
        v220 = v267;
        v222 = v239;
        v221 = v240;
        v223 = v269;
        sub_1BA6C0C20(v265, v256, v267, v240, v269, v239, v238);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6C0C20(v218, v219, v220, v221, v223, v222, v238);
        sub_1BA70ABF4(v268, v227);
        sub_1BA4A2E80(v247, type metadata accessor for FormatPropertyDefinition);
        sub_1BA4A2E80((uint64_t)v167, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v257, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return sub_1BA8D1FE4((uint64_t)&v276);
      }
      sub_1BA4C2DD8((uint64_t)v182, v246, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v188 = v284;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v188 = sub_1BA7AD174(0, *(_QWORD *)(v188 + 16) + 1, 1, v188);
      v190 = *(_QWORD *)(v188 + 16);
      v189 = *(_QWORD *)(v188 + 24);
      if (v190 >= v189 >> 1)
        v188 = sub_1BA7AD174(v189 > 1, v190 + 1, 1, v188);
      *(_QWORD *)(v188 + 16) = v190 + 1;
      v170 = v241;
      sub_1BA5193C4(v246, v188 + v242 + v190 * v241, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v284 = v188;
      sub_1BA4A2E80((uint64_t)v182, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BA4A2E80(v247, type metadata accessor for FormatPropertyDefinition);
      v184 = v267;
      v150 = v269;
LABEL_71:
      v167 = v254;
      sub_1BA4A2E80((uint64_t)v254, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v166 += v170;
      --v165;
      v168 = v262;
      if (!v165)
      {
        swift_bridgeObjectRelease();
        v163 = v236;
        goto LABEL_90;
      }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v255 + 56))(v168, 1, 1, v252);
LABEL_78:
    sub_1BA604728(v168, (uint64_t)&qword_1ED3B78C0, (uint64_t)type metadata accessor for FormatPropertyDefinition, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
    sub_1BA4C2DD8((uint64_t)v167, v261, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v183 = v284;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v183 = sub_1BA7AD174(0, *(_QWORD *)(v183 + 16) + 1, 1, v183);
    v184 = v267;
    v150 = v269;
    v186 = *(_QWORD *)(v183 + 16);
    v185 = *(_QWORD *)(v183 + 24);
    if (v186 >= v185 >> 1)
      v183 = sub_1BA7AD174(v185 > 1, v186 + 1, 1, v183);
    *(_QWORD *)(v183 + 16) = v186 + 1;
    v170 = v241;
    sub_1BA5193C4(v261, v183 + v242 + v186 * v241, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v284 = v183;
    goto LABEL_71;
  }
  v227 = v82;
  v121 = v259;
  v120 = v260;
  if (EnumCaseMultiPayload == 4)
  {
    v122 = v118;
    v123 = v244;
    sub_1BA5193C4(v122, v244, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v124 = sub_1BB11BDF4();
    sub_1BA6D3834(v124);
    v125 = sub_1BB11C124();
    sub_1BA6E3FB8(v125);
    v126 = v123;
    v127 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
  }
  else
  {
    v127 = type metadata accessor for FeedItem;
    v126 = v118;
  }
  sub_1BA4A2E80(v126, v127);
LABEL_59:
  v155 = v258;
  v156 = v285;
  v157 = v284;
  v158 = *(_BYTE *)(v289 + 88);
  if ((v273 & 1) != 0)
  {
    swift_beginAccess();
    sub_1BB464E48((uint64_t)v286, v156, v157, v288, v121, v120, v158, v155);
  }
  else
  {
    swift_beginAccess();
    sub_1BB4663CC((uint64_t)v286, v156, v157, v288, v121, v120, v158, v155);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70ABF4(v268, v227);
  return sub_1BA8D1FE4((uint64_t)&v276);
}

uint64_t sub_1BB463ECC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[5];
  _QWORD v36[14];
  uint64_t v37;

  v34 = a5;
  v9 = v8;
  v37 = a6;
  v33 = a8;
  v15 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a7 & 1) == 0
    && *(_QWORD *)(*(_QWORD *)(v9 + 8) + 16)
    && (swift_bridgeObjectRetain(), sub_1BA6E35A8(v34, v37), v19 = v18, swift_bridgeObjectRelease(), (v19 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    v20 = v37;
    *(_QWORD *)v21 = v34;
    *(_QWORD *)(v21 + 8) = v20;
    *(_BYTE *)(v21 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v23 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16);
    if (v23)
    {
      v24 = *a1;
      v25 = a1[1];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v24, v25);
      v27 = v26;
      swift_bridgeObjectRelease();
      v23 = 0x4000000000;
      if ((v27 & 1) == 0)
        v23 = 0;
    }
    v36[0] = v23;
    swift_bridgeObjectRetain();
    v28 = sub_1BA78DFA8();
    v29 = sub_1BA78A504(v28, a2);
    swift_bridgeObjectRelease();
    v30 = sub_1BA78A504(MEMORY[0x1E0DEE9D8], v29);
    v35[3] = v15;
    v35[4] = sub_1BA4A2870(&qword_1ED39E460, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t)&protocol conformance descriptor for FeedCustomItem);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v32 = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v35, v30, a3, (uint64_t)a4, (uint64_t)v36);
    sub_1BA78A5B4((uint64_t)v36, v34, v32);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB468B38((uint64_t)v17, v30, a3, (uint64_t)a4, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem, (uint64_t)&unk_1E72548E8, (uint64_t (*)(_QWORD))&unk_1E7254908, &qword_1ED3C9968, v33);
  }
}

uint64_t sub_1BB464144@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[5];
  _QWORD v50[2];
  char v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v56 = a5;
  v47 = a8;
  v48 = a3;
  v15 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v8;
  if ((a7 & 1) == 0
    && *(_QWORD *)(*(_QWORD *)(v8 + 8) + 16)
    && (v46 = v15,
        swift_bridgeObjectRetain(),
        sub_1BA6E35A8(v56, a6),
        v20 = v19,
        swift_bridgeObjectRelease(),
        v18 = v8,
        v15 = v46,
        (v20 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v21 = v56;
    *(_QWORD *)(v21 + 8) = a6;
    *(_BYTE *)(v21 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v46 = v9;
    v23 = *a1;
    v43[1] = v18;
    v24 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 16);
    v45 = a4;
    v44 = a6;
    if (v24)
    {
      v25 = a1[5];
      v26 = a1[6];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v25, v26);
      v28 = v27;
      swift_bridgeObjectRelease();
      v24 = 0x4000000000;
      if ((v28 & 1) == 0)
        v24 = 0;
    }
    v50[0] = v24 | v23;
    swift_bridgeObjectRetain();
    v29 = sub_1BA78DFA8();
    v30 = sub_1BA78A504(v29, a2);
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v49[0] = MEMORY[0x1E0DEE9D8];
    v31 = *(_QWORD *)&v17[*(int *)(v15 + 32)];
    v32 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v33 = sub_1BB8729A0();
    v35 = v34;

    v50[0] = 0;
    v50[1] = 0;
    v51 = 1;
    v52 = xmmword_1BB88C450;
    v53 = v33;
    v54 = v35;
    v55 = v31;
    v36 = sub_1BB16FBA8();
    sub_1BA6E0CBC(0, 0xDuLL);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E9BD8((uint64_t)v36);
    v37 = v49[0];
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v38 = sub_1BA78A504(v37, v30);
    swift_bridgeObjectRelease();
    v49[3] = v15;
    v49[4] = sub_1BA4A2870(&qword_1EF2B1A40, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v49);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v40 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = v48;
    swift_bridgeObjectRetain();
    v42 = v45;
    sub_1BA78A580(v45);
    sub_1BA78A840((uint64_t)v49, v38, v41, (uint64_t)v42, (uint64_t)v50);
    sub_1BA78A5B4((uint64_t)v50, v56, v40);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    swift_bridgeObjectRetain();
    sub_1BA78A580(v42);
    return sub_1BB468B38((uint64_t)v17, v38, v41, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic, (uint64_t)&unk_1E7254868, (uint64_t (*)(_QWORD))&unk_1E7254888, &qword_1ED3C4230, v47);
  }
}

double sub_1BB4644C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  char v15;
  char v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  uint64_t v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  _QWORD v34[5];
  _OWORD v35[7];

  if ((a7 & 1) == 0
    && *(_QWORD *)(*(_QWORD *)(v8 + 8) + 16)
    && (swift_bridgeObjectRetain(), sub_1BA6E35A8(a5, a6), v16 = v15, swift_bridgeObjectRelease(), (v16 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v17 = a5;
    *(_QWORD *)(v17 + 8) = a6;
    *(_BYTE *)(v17 + 56) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  else
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 16);
    if (v19)
    {
      v20 = *(_QWORD *)(a1 + 40);
      v21 = *(_QWORD *)(a1 + 48);
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v20, v21);
      v23 = v22;
      swift_bridgeObjectRelease();
      v19 = 0x4000000000;
      if ((v23 & 1) == 0)
        v19 = 0;
    }
    *(_QWORD *)&v35[0] = *(_QWORD *)a1 | v19;
    swift_bridgeObjectRetain();
    v24 = sub_1BA78DFA8();
    v25 = sub_1BA78A504(v24, a2);
    swift_bridgeObjectRelease();
    v26 = *(_OWORD *)(a1 + 16);
    v35[0] = *(_OWORD *)a1;
    v35[1] = v26;
    v27 = *(_OWORD *)(a1 + 48);
    v35[2] = *(_OWORD *)(a1 + 32);
    v35[3] = v27;
    v28 = sub_1BB16FBA8();
    v29 = sub_1BA78A504((uint64_t)v28, v25);
    swift_bridgeObjectRelease();
    v34[3] = &type metadata for FeedPuzzleType;
    v34[4] = sub_1BACB5BC8();
    v30 = (_OWORD *)swift_allocObject();
    v34[0] = v30;
    v31 = *(_OWORD *)(a1 + 16);
    v30[1] = *(_OWORD *)a1;
    v30[2] = v31;
    v32 = *(_OWORD *)(a1 + 48);
    v30[3] = *(_OWORD *)(a1 + 32);
    v30[4] = v32;
    sub_1BACB5B80(a1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v34, v29, a3, (uint64_t)a4, (uint64_t)v35);
    sub_1BA78A5B4((uint64_t)v35, a5, a6);
    sub_1BACB5B80(a1);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB46815C(a1, v29, a3, (uint64_t)a4, a8);
  }
  return result;
}

uint64_t sub_1BB464704@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD v29[21];
  _QWORD v30[6];
  uint64_t v31;

  v31 = a5;
  if ((a7 & 1) == 0
    && *(_QWORD *)(*(_QWORD *)(v8 + 8) + 16)
    && (swift_bridgeObjectRetain(), sub_1BA6E35A8(v31, a6), v15 = v14, swift_bridgeObjectRelease(), (v15 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v16 = v31;
    *(_QWORD *)(v16 + 8) = a6;
    *(_BYTE *)(v16 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v18 = *a1;
    v19 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 16);
    if (v19)
    {
      v21 = a1[5];
      v20 = a1[6];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v21, v20);
      v23 = v22;
      swift_bridgeObjectRelease();
      v19 = 0x4000000000;
      if ((v23 & 1) == 0)
        v19 = 0;
    }
    v29[0] = v19 | v18;
    swift_bridgeObjectRetain();
    v24 = sub_1BA78DFA8();
    v25 = sub_1BA78A504(v24, a2);
    swift_bridgeObjectRelease();
    v26 = sub_1BB3F10E8();
    v27 = sub_1BA78A504((uint64_t)v26, v25);
    swift_bridgeObjectRelease();
    v30[3] = &type metadata for FeedPuzzle;
    v30[4] = sub_1BACB5AD0();
    v30[0] = swift_allocObject();
    sub_1BA93EB58((uint64_t)a1, v30[0] + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v30, v27, a3, (uint64_t)a4, (uint64_t)v29);
    sub_1BA78A5B4((uint64_t)v29, v31, a6);
    sub_1BA93EB58((uint64_t)a1, (uint64_t)v29);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB468460((uint64_t)v29, v27, a3, (uint64_t)a4, a8);
  }
}

uint64_t sub_1BB464934@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[5];
  _QWORD v41[14];
  uint64_t v42;

  v42 = a6;
  v39 = a5;
  v37 = a8;
  v15 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v8;
  v38 = v8;
  if ((a7 & 1) == 0
    && *(_QWORD *)(*(_QWORD *)(v8 + 8) + 16)
    && (swift_bridgeObjectRetain(),
        sub_1BA6E35A8(v39, v42),
        v20 = v19,
        swift_bridgeObjectRelease(),
        v18 = v38,
        (v20 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    v21 = v42;
    *(_QWORD *)v22 = v39;
    *(_QWORD *)(v22 + 8) = v21;
    *(_BYTE *)(v22 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v36[1] = v9;
    v24 = *a1;
    v25 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 16);
    if (v25)
    {
      v26 = a1[5];
      v27 = a1[6];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v26, v27);
      v29 = v28;
      swift_bridgeObjectRelease();
      v25 = 0x4000000000;
      if ((v29 & 1) == 0)
        v25 = 0;
    }
    v41[0] = v25 | v24;
    swift_bridgeObjectRetain();
    v30 = sub_1BA78DFA8();
    v31 = sub_1BA78A504(v30, a2);
    swift_bridgeObjectRelease();
    v32 = sub_1BB11E25C();
    v33 = sub_1BA78A504((uint64_t)v32, v31);
    swift_bridgeObjectRelease();
    v40[3] = v15;
    v40[4] = sub_1BA4A2870(&qword_1ED39AF58, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v35 = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v40, v33, a3, (uint64_t)a4, (uint64_t)v41);
    sub_1BA78A5B4((uint64_t)v41, v39, v35);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB468B38((uint64_t)v17, v33, a3, (uint64_t)a4, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed, (uint64_t)&unk_1E72546E8, (uint64_t (*)(_QWORD))&unk_1E7254708, &qword_1ED3BE978, v37);
  }
}

uint64_t sub_1BB464BD8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v30[5];
  uint64_t v31[2];
  uint64_t v32;

  v32 = a5;
  if ((a7 & 1) == 0
    && *(_QWORD *)(*(_QWORD *)(v8 + 8) + 16)
    && (swift_bridgeObjectRetain(), sub_1BA6E35A8(v32, a6), v15 = v14, swift_bridgeObjectRelease(), (v15 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v16 = v32;
    *(_QWORD *)(v16 + 8) = a6;
    *(_BYTE *)(v16 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    swift_getObjectType();
    FCTagProviding.traits.getter(v31);
    v18 = v31[0];
    v19 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 16);
    if (v19)
    {
      v21 = *a1;
      v20 = a1[1];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v21, v20);
      v23 = v22;
      swift_bridgeObjectRelease();
      v19 = 0x4000000000;
      if ((v23 & 1) == 0)
        v19 = 0;
    }
    v31[0] = v19 | v18;
    swift_bridgeObjectRetain();
    v24 = sub_1BA78DFA8();
    v25 = sub_1BA78A504(v24, a2);
    swift_bridgeObjectRelease();
    sub_1BA6A955C((uint64_t)a1, (uint64_t)v31);
    ObjectType = swift_getObjectType();
    v27 = sub_1BA781D28(0, 0xE000000000000000, ObjectType);
    sub_1BA6A94C4((uint64_t)v31);
    v28 = sub_1BA78A504((uint64_t)v27, v25);
    swift_bridgeObjectRelease();
    v30[3] = &type metadata for FeedTag;
    v30[4] = sub_1BA6A96BC();
    v30[0] = swift_allocObject();
    sub_1BA6A955C((uint64_t)a1, v30[0] + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v30, v28, a3, (uint64_t)a4, (uint64_t)v31);
    sub_1BA78A5B4((uint64_t)v31, v32, a6);
    sub_1BA6A955C((uint64_t)a1, (uint64_t)v31);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB46863C((uint64_t)v31, v28, a3, (uint64_t)a4, a8);
  }
}

void sub_1BB464E48(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v40[5];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[3];
  uint64_t v49;

  if ((a7 & 1) == 0
    && *(_QWORD *)(*(_QWORD *)(v49 + 8) + 16)
    && (swift_bridgeObjectRetain(), sub_1BA6E35A8(a5, a6), v15 = v14, swift_bridgeObjectRelease(), (v15 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v16 = a5;
    *(_QWORD *)(v16 + 8) = a6;
    *(_BYTE *)(v16 + 56) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  else
  {
    v38 = a5;
    if ((*(_BYTE *)(a1 + 64) & 1) != 0)
    {
      FCIssue.issueCoverModel.getter((uint64_t)&v41);
      if (BYTE8(v44))
      {
        if (BYTE8(v44) == 1)
        {
          sub_1BA899748((void *)v41, *((uint64_t *)&v41 + 1), (void *)v42, *((uint64_t *)&v42 + 1), (void *)v43, *((uint64_t *)&v43 + 1), (void *)v44, 1);
          v18 = 16448;
        }
        else
        {
          v18 = 0;
        }
      }
      else
      {
        sub_1BA899748((void *)v41, *((uint64_t *)&v41 + 1), (void *)v42, *((uint64_t *)&v42 + 1), (void *)v43, *((uint64_t *)&v43 + 1), (void *)v44, 0);
        v18 = 64;
      }
      v19 = a6;
    }
    else
    {
      FCIssue.issueCoverModel.getter((uint64_t)&v41);
      if (BYTE8(v44))
      {
        if (BYTE8(v44) == 1)
        {
          sub_1BA899748((void *)v41, *((uint64_t *)&v41 + 1), (void *)v42, *((uint64_t *)&v42 + 1), (void *)v43, *((uint64_t *)&v43 + 1), (void *)v44, 1);
          v17 = 16448;
        }
        else
        {
          v17 = 0;
        }
      }
      else
      {
        sub_1BA899748((void *)v41, *((uint64_t *)&v41 + 1), (void *)v42, *((uint64_t *)&v42 + 1), (void *)v43, *((uint64_t *)&v43 + 1), (void *)v44, 0);
        v17 = 64;
      }
      v19 = a6;
      v18 = v17 | 0x1000;
    }
    v20 = *(_QWORD *)(*(_QWORD *)(v49 + 56) + 16);
    if (v20)
    {
      v21 = *(_QWORD *)(a1 + 8);
      v22 = *(_QWORD *)(a1 + 16);
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v21, v22);
      v24 = v23;
      swift_bridgeObjectRelease();
      v20 = 0x4000000000;
      if ((v24 & 1) == 0)
        v20 = 0;
    }
    *(_QWORD *)&v41 = v20 | v18;
    swift_bridgeObjectRetain();
    v25 = sub_1BA78DFA8();
    v26 = sub_1BA78A504(v25, a2);
    swift_bridgeObjectRelease();
    v27 = *(_OWORD *)(a1 + 112);
    v47 = *(_OWORD *)(a1 + 96);
    v48[0] = v27;
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)(a1 + 121);
    v28 = *(_OWORD *)(a1 + 48);
    v43 = *(_OWORD *)(a1 + 32);
    v44 = v28;
    v29 = *(_OWORD *)(a1 + 80);
    v45 = *(_OWORD *)(a1 + 64);
    v46 = v29;
    v30 = *(_OWORD *)(a1 + 16);
    v41 = *(_OWORD *)a1;
    v42 = v30;
    v31 = sub_1BA6B3DC0();
    v32 = sub_1BA78A504((uint64_t)v31, v26);
    swift_bridgeObjectRelease();
    v40[3] = &type metadata for FeedIssue;
    v40[4] = sub_1BA6B2E68();
    v33 = (_OWORD *)swift_allocObject();
    v40[0] = v33;
    v34 = *(_OWORD *)(a1 + 112);
    v33[7] = *(_OWORD *)(a1 + 96);
    v33[8] = v34;
    *(_OWORD *)((char *)v33 + 137) = *(_OWORD *)(a1 + 121);
    v35 = *(_OWORD *)(a1 + 48);
    v33[3] = *(_OWORD *)(a1 + 32);
    v33[4] = v35;
    v36 = *(_OWORD *)(a1 + 80);
    v33[5] = *(_OWORD *)(a1 + 64);
    v33[6] = v36;
    v37 = *(_OWORD *)(a1 + 16);
    v33[1] = *(_OWORD *)a1;
    v33[2] = v37;
    sub_1BA8D1F08(a1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v40, v32, a3, (uint64_t)a4, (uint64_t)&v41);
    sub_1BA78A5B4((uint64_t)&v41, v38, v19);
    sub_1BA8D1F08(a1);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BB468818((_OWORD *)a1, v32, a3, (uint64_t)a4, a8);
  }
}

uint64_t sub_1BB4651B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[5];
  _QWORD v41[14];
  uint64_t v42;

  v42 = a6;
  v39 = a5;
  v37 = a8;
  v15 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v8;
  v38 = v8;
  if ((a7 & 1) == 0
    && *(_QWORD *)(*(_QWORD *)(v8 + 8) + 16)
    && (swift_bridgeObjectRetain(),
        sub_1BA6E35A8(v39, v42),
        v20 = v19,
        swift_bridgeObjectRelease(),
        v18 = v38,
        (v20 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    v21 = v42;
    *(_QWORD *)v22 = v39;
    *(_QWORD *)(v22 + 8) = v21;
    *(_BYTE *)(v22 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v36[1] = v9;
    v24 = a1[4];
    v25 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 16);
    if (v25)
    {
      v26 = *a1;
      v27 = a1[1];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v26, v27);
      v29 = v28;
      swift_bridgeObjectRelease();
      v25 = 0x4000000000;
      if ((v29 & 1) == 0)
        v25 = 0;
    }
    v41[0] = v25 | v24;
    swift_bridgeObjectRetain();
    v30 = sub_1BA78DFA8();
    v31 = sub_1BA78A504(v30, a2);
    swift_bridgeObjectRelease();
    v32 = sub_1BA6AF268();
    v33 = sub_1BA78A504((uint64_t)v32, v31);
    swift_bridgeObjectRelease();
    v40[3] = v15;
    v40[4] = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
    v35 = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v40, v33, a3, (uint64_t)a4, (uint64_t)v41);
    sub_1BA78A5B4((uint64_t)v41, v39, v35);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v17, type metadata accessor for FeedHeadline);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB468B38((uint64_t)v17, v33, a3, (uint64_t)a4, type metadata accessor for FeedHeadline, (uint64_t)&unk_1E7254518, (uint64_t (*)(_QWORD))&unk_1E7254538, &qword_1ED3BB8A0, v37);
  }
}

uint64_t sub_1BB465458@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[5];
  _QWORD v36[14];
  uint64_t v37;

  v34 = a5;
  v9 = v8;
  v37 = a6;
  v33 = a8;
  v15 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a7 & 1) == 0
    && *(_QWORD *)(*v9 + 16)
    && (swift_bridgeObjectRetain(), sub_1BA6E35A8(v34, v37), v19 = v18, swift_bridgeObjectRelease(), (v19 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    v20 = v37;
    *(_QWORD *)v21 = v34;
    *(_QWORD *)(v21 + 8) = v20;
    *(_BYTE *)(v21 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v23 = *(_QWORD *)(v9[7] + 16);
    if (v23)
    {
      v24 = *a1;
      v25 = a1[1];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v24, v25);
      v27 = v26;
      swift_bridgeObjectRelease();
      v23 = 0x4000000000;
      if ((v27 & 1) == 0)
        v23 = 0;
    }
    v36[0] = v23;
    swift_bridgeObjectRetain();
    v28 = sub_1BA78DFA8();
    v29 = sub_1BA78A504(v28, a2);
    swift_bridgeObjectRelease();
    v30 = sub_1BA78A504(MEMORY[0x1E0DEE9D8], v29);
    v35[3] = v15;
    v35[4] = sub_1BA4A2870(&qword_1ED39E460, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t)&protocol conformance descriptor for FeedCustomItem);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v32 = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v35, v30, a3, (uint64_t)a4, (uint64_t)v36);
    sub_1BA78A5B4((uint64_t)v36, v34, v32);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB468B38((uint64_t)v17, v30, a3, (uint64_t)a4, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem, (uint64_t)&unk_1E72548E8, (uint64_t (*)(_QWORD))&unk_1E7254908, &qword_1ED3C9968, v33);
  }
}

uint64_t sub_1BB4656D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[5];
  _QWORD v50[2];
  char v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v56 = a5;
  v47 = a8;
  v48 = a3;
  v15 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v8;
  if ((a7 & 1) == 0
    && *(_QWORD *)(*(_QWORD *)v8 + 16)
    && (v46 = v15,
        swift_bridgeObjectRetain(),
        sub_1BA6E35A8(v56, a6),
        v20 = v19,
        swift_bridgeObjectRelease(),
        v18 = v8,
        v15 = v46,
        (v20 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v21 = v56;
    *(_QWORD *)(v21 + 8) = a6;
    *(_BYTE *)(v21 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v46 = v9;
    v23 = *a1;
    v43[1] = v18;
    v24 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 16);
    v45 = a4;
    v44 = a6;
    if (v24)
    {
      v25 = a1[5];
      v26 = a1[6];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v25, v26);
      v28 = v27;
      swift_bridgeObjectRelease();
      v24 = 0x4000000000;
      if ((v28 & 1) == 0)
        v24 = 0;
    }
    v50[0] = v24 | v23;
    swift_bridgeObjectRetain();
    v29 = sub_1BA78DFA8();
    v30 = sub_1BA78A504(v29, a2);
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v49[0] = MEMORY[0x1E0DEE9D8];
    v31 = *(_QWORD *)&v17[*(int *)(v15 + 32)];
    v32 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v33 = sub_1BB8729A0();
    v35 = v34;

    v50[0] = 0;
    v50[1] = 0;
    v51 = 1;
    v52 = xmmword_1BB88C450;
    v53 = v33;
    v54 = v35;
    v55 = v31;
    v36 = sub_1BB16FBA8();
    sub_1BA6E0CBC(0, 0xDuLL);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E9BD8((uint64_t)v36);
    v37 = v49[0];
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v38 = sub_1BA78A504(v37, v30);
    swift_bridgeObjectRelease();
    v49[3] = v15;
    v49[4] = sub_1BA4A2870(&qword_1EF2B1A40, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v49);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    v40 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = v48;
    swift_bridgeObjectRetain();
    v42 = v45;
    sub_1BA78A580(v45);
    sub_1BA78A840((uint64_t)v49, v38, v41, (uint64_t)v42, (uint64_t)v50);
    sub_1BA78A5B4((uint64_t)v50, v56, v40);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    swift_bridgeObjectRetain();
    sub_1BA78A580(v42);
    return sub_1BB468B38((uint64_t)v17, v38, v41, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic, (uint64_t)&unk_1E7254868, (uint64_t (*)(_QWORD))&unk_1E7254888, &qword_1ED3C4230, v47);
  }
}

double sub_1BB465A4C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  _QWORD *v8;
  char v15;
  char v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  uint64_t v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  _QWORD v34[5];
  _OWORD v35[7];

  if ((a7 & 1) == 0
    && *(_QWORD *)(*v8 + 16)
    && (swift_bridgeObjectRetain(), sub_1BA6E35A8(a5, a6), v16 = v15, swift_bridgeObjectRelease(), (v16 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v17 = a5;
    *(_QWORD *)(v17 + 8) = a6;
    *(_BYTE *)(v17 + 56) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  else
  {
    v19 = *(_QWORD *)(v8[7] + 16);
    if (v19)
    {
      v20 = *(_QWORD *)(a1 + 40);
      v21 = *(_QWORD *)(a1 + 48);
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v20, v21);
      v23 = v22;
      swift_bridgeObjectRelease();
      v19 = 0x4000000000;
      if ((v23 & 1) == 0)
        v19 = 0;
    }
    *(_QWORD *)&v35[0] = *(_QWORD *)a1 | v19;
    swift_bridgeObjectRetain();
    v24 = sub_1BA78DFA8();
    v25 = sub_1BA78A504(v24, a2);
    swift_bridgeObjectRelease();
    v26 = *(_OWORD *)(a1 + 16);
    v35[0] = *(_OWORD *)a1;
    v35[1] = v26;
    v27 = *(_OWORD *)(a1 + 48);
    v35[2] = *(_OWORD *)(a1 + 32);
    v35[3] = v27;
    v28 = sub_1BB16FBA8();
    v29 = sub_1BA78A504((uint64_t)v28, v25);
    swift_bridgeObjectRelease();
    v34[3] = &type metadata for FeedPuzzleType;
    v34[4] = sub_1BACB5BC8();
    v30 = (_OWORD *)swift_allocObject();
    v34[0] = v30;
    v31 = *(_OWORD *)(a1 + 16);
    v30[1] = *(_OWORD *)a1;
    v30[2] = v31;
    v32 = *(_OWORD *)(a1 + 48);
    v30[3] = *(_OWORD *)(a1 + 32);
    v30[4] = v32;
    sub_1BACB5B80(a1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v34, v29, a3, (uint64_t)a4, (uint64_t)v35);
    sub_1BA78A5B4((uint64_t)v35, a5, a6);
    sub_1BACB5B80(a1);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB46815C(a1, v29, a3, (uint64_t)a4, a8);
  }
  return result;
}

uint64_t sub_1BB465C8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  _QWORD *v8;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD v29[21];
  _QWORD v30[6];
  uint64_t v31;

  v31 = a5;
  if ((a7 & 1) == 0
    && *(_QWORD *)(*v8 + 16)
    && (swift_bridgeObjectRetain(), sub_1BA6E35A8(v31, a6), v15 = v14, swift_bridgeObjectRelease(), (v15 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v16 = v31;
    *(_QWORD *)(v16 + 8) = a6;
    *(_BYTE *)(v16 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v18 = *a1;
    v19 = *(_QWORD *)(v8[7] + 16);
    if (v19)
    {
      v21 = a1[5];
      v20 = a1[6];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v21, v20);
      v23 = v22;
      swift_bridgeObjectRelease();
      v19 = 0x4000000000;
      if ((v23 & 1) == 0)
        v19 = 0;
    }
    v29[0] = v19 | v18;
    swift_bridgeObjectRetain();
    v24 = sub_1BA78DFA8();
    v25 = sub_1BA78A504(v24, a2);
    swift_bridgeObjectRelease();
    v26 = sub_1BB3F10E8();
    v27 = sub_1BA78A504((uint64_t)v26, v25);
    swift_bridgeObjectRelease();
    v30[3] = &type metadata for FeedPuzzle;
    v30[4] = sub_1BACB5AD0();
    v30[0] = swift_allocObject();
    sub_1BA93EB58((uint64_t)a1, v30[0] + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v30, v27, a3, (uint64_t)a4, (uint64_t)v29);
    sub_1BA78A5B4((uint64_t)v29, v31, a6);
    sub_1BA93EB58((uint64_t)a1, (uint64_t)v29);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB468460((uint64_t)v29, v27, a3, (uint64_t)a4, a8);
  }
}

uint64_t sub_1BB465EBC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[5];
  _QWORD v41[14];
  uint64_t v42;

  v42 = a6;
  v39 = a5;
  v37 = a8;
  v15 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v8;
  v38 = v8;
  if ((a7 & 1) == 0
    && *(_QWORD *)(*(_QWORD *)v8 + 16)
    && (swift_bridgeObjectRetain(),
        sub_1BA6E35A8(v39, v42),
        v20 = v19,
        swift_bridgeObjectRelease(),
        v18 = v38,
        (v20 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    v21 = v42;
    *(_QWORD *)v22 = v39;
    *(_QWORD *)(v22 + 8) = v21;
    *(_BYTE *)(v22 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v36[1] = v9;
    v24 = *a1;
    v25 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 16);
    if (v25)
    {
      v26 = a1[5];
      v27 = a1[6];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v26, v27);
      v29 = v28;
      swift_bridgeObjectRelease();
      v25 = 0x4000000000;
      if ((v29 & 1) == 0)
        v25 = 0;
    }
    v41[0] = v25 | v24;
    swift_bridgeObjectRetain();
    v30 = sub_1BA78DFA8();
    v31 = sub_1BA78A504(v30, a2);
    swift_bridgeObjectRelease();
    v32 = sub_1BB11E25C();
    v33 = sub_1BA78A504((uint64_t)v32, v31);
    swift_bridgeObjectRelease();
    v40[3] = v15;
    v40[4] = sub_1BA4A2870(&qword_1ED39AF58, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v35 = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v40, v33, a3, (uint64_t)a4, (uint64_t)v41);
    sub_1BA78A5B4((uint64_t)v41, v39, v35);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB468B38((uint64_t)v17, v33, a3, (uint64_t)a4, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed, (uint64_t)&unk_1E72546E8, (uint64_t (*)(_QWORD))&unk_1E7254708, &qword_1ED3BE978, v37);
  }
}

uint64_t sub_1BB46615C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  _QWORD *v8;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v30[5];
  uint64_t v31[2];
  uint64_t v32;

  v32 = a5;
  if ((a7 & 1) == 0
    && *(_QWORD *)(*v8 + 16)
    && (swift_bridgeObjectRetain(), sub_1BA6E35A8(v32, a6), v15 = v14, swift_bridgeObjectRelease(), (v15 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v16 = v32;
    *(_QWORD *)(v16 + 8) = a6;
    *(_BYTE *)(v16 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    swift_getObjectType();
    FCTagProviding.traits.getter(v31);
    v18 = v31[0];
    v19 = *(_QWORD *)(v8[7] + 16);
    if (v19)
    {
      v21 = *a1;
      v20 = a1[1];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v21, v20);
      v23 = v22;
      swift_bridgeObjectRelease();
      v19 = 0x4000000000;
      if ((v23 & 1) == 0)
        v19 = 0;
    }
    v31[0] = v19 | v18;
    swift_bridgeObjectRetain();
    v24 = sub_1BA78DFA8();
    v25 = sub_1BA78A504(v24, a2);
    swift_bridgeObjectRelease();
    sub_1BA6A955C((uint64_t)a1, (uint64_t)v31);
    ObjectType = swift_getObjectType();
    v27 = sub_1BA781D28(0, 0xE000000000000000, ObjectType);
    sub_1BA6A94C4((uint64_t)v31);
    v28 = sub_1BA78A504((uint64_t)v27, v25);
    swift_bridgeObjectRelease();
    v30[3] = &type metadata for FeedTag;
    v30[4] = sub_1BA6A96BC();
    v30[0] = swift_allocObject();
    sub_1BA6A955C((uint64_t)a1, v30[0] + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v30, v28, a3, (uint64_t)a4, (uint64_t)v31);
    sub_1BA78A5B4((uint64_t)v31, v32, a6);
    sub_1BA6A955C((uint64_t)a1, (uint64_t)v31);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB46863C((uint64_t)v31, v28, a3, (uint64_t)a4, a8);
  }
}

void sub_1BB4663CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v40[5];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[3];
  _QWORD *v49;

  if ((a7 & 1) == 0
    && *(_QWORD *)(*v49 + 16)
    && (swift_bridgeObjectRetain(), sub_1BA6E35A8(a5, a6), v15 = v14, swift_bridgeObjectRelease(), (v15 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v16 = a5;
    *(_QWORD *)(v16 + 8) = a6;
    *(_BYTE *)(v16 + 56) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  else
  {
    v38 = a5;
    if ((*(_BYTE *)(a1 + 64) & 1) != 0)
    {
      FCIssue.issueCoverModel.getter((uint64_t)&v41);
      if (BYTE8(v44))
      {
        if (BYTE8(v44) == 1)
        {
          sub_1BA899748((void *)v41, *((uint64_t *)&v41 + 1), (void *)v42, *((uint64_t *)&v42 + 1), (void *)v43, *((uint64_t *)&v43 + 1), (void *)v44, 1);
          v18 = 16448;
        }
        else
        {
          v18 = 0;
        }
      }
      else
      {
        sub_1BA899748((void *)v41, *((uint64_t *)&v41 + 1), (void *)v42, *((uint64_t *)&v42 + 1), (void *)v43, *((uint64_t *)&v43 + 1), (void *)v44, 0);
        v18 = 64;
      }
      v19 = a6;
    }
    else
    {
      FCIssue.issueCoverModel.getter((uint64_t)&v41);
      if (BYTE8(v44))
      {
        if (BYTE8(v44) == 1)
        {
          sub_1BA899748((void *)v41, *((uint64_t *)&v41 + 1), (void *)v42, *((uint64_t *)&v42 + 1), (void *)v43, *((uint64_t *)&v43 + 1), (void *)v44, 1);
          v17 = 16448;
        }
        else
        {
          v17 = 0;
        }
      }
      else
      {
        sub_1BA899748((void *)v41, *((uint64_t *)&v41 + 1), (void *)v42, *((uint64_t *)&v42 + 1), (void *)v43, *((uint64_t *)&v43 + 1), (void *)v44, 0);
        v17 = 64;
      }
      v19 = a6;
      v18 = v17 | 0x1000;
    }
    v20 = *(_QWORD *)(v49[7] + 16);
    if (v20)
    {
      v21 = *(_QWORD *)(a1 + 8);
      v22 = *(_QWORD *)(a1 + 16);
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v21, v22);
      v24 = v23;
      swift_bridgeObjectRelease();
      v20 = 0x4000000000;
      if ((v24 & 1) == 0)
        v20 = 0;
    }
    *(_QWORD *)&v41 = v20 | v18;
    swift_bridgeObjectRetain();
    v25 = sub_1BA78DFA8();
    v26 = sub_1BA78A504(v25, a2);
    swift_bridgeObjectRelease();
    v27 = *(_OWORD *)(a1 + 112);
    v47 = *(_OWORD *)(a1 + 96);
    v48[0] = v27;
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)(a1 + 121);
    v28 = *(_OWORD *)(a1 + 48);
    v43 = *(_OWORD *)(a1 + 32);
    v44 = v28;
    v29 = *(_OWORD *)(a1 + 80);
    v45 = *(_OWORD *)(a1 + 64);
    v46 = v29;
    v30 = *(_OWORD *)(a1 + 16);
    v41 = *(_OWORD *)a1;
    v42 = v30;
    v31 = sub_1BA6B3DC0();
    v32 = sub_1BA78A504((uint64_t)v31, v26);
    swift_bridgeObjectRelease();
    v40[3] = &type metadata for FeedIssue;
    v40[4] = sub_1BA6B2E68();
    v33 = (_OWORD *)swift_allocObject();
    v40[0] = v33;
    v34 = *(_OWORD *)(a1 + 112);
    v33[7] = *(_OWORD *)(a1 + 96);
    v33[8] = v34;
    *(_OWORD *)((char *)v33 + 137) = *(_OWORD *)(a1 + 121);
    v35 = *(_OWORD *)(a1 + 48);
    v33[3] = *(_OWORD *)(a1 + 32);
    v33[4] = v35;
    v36 = *(_OWORD *)(a1 + 80);
    v33[5] = *(_OWORD *)(a1 + 64);
    v33[6] = v36;
    v37 = *(_OWORD *)(a1 + 16);
    v33[1] = *(_OWORD *)a1;
    v33[2] = v37;
    sub_1BA8D1F08(a1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v40, v32, a3, (uint64_t)a4, (uint64_t)&v41);
    sub_1BA78A5B4((uint64_t)&v41, v38, v19);
    sub_1BA8D1F08(a1);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BB468818((_OWORD *)a1, v32, a3, (uint64_t)a4, a8);
  }
}

uint64_t sub_1BB466734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[7];
  _OWORD v46[2];
  _OWORD v47[7];
  _OWORD v48[2];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _OWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v8 = (_QWORD *)v6;
  result = sub_1BB467DF0(a4, a3, a1, a2, v6, a5, &v65);
  if (!v7)
  {
    v81 = v73;
    v11 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v11);
    v44 = v74;
    v12 = swift_bridgeObjectRetain();
    sub_1BA7082C0(v12);
    v13 = v75;
    v14 = v76;
    v15 = v77;
    v16 = v78;
    v17 = v79;
    v18 = v80;
    v41 = v8[27];
    v42 = v8[26];
    v43 = v75;
    sub_1BA70A834(v75, v76);
    sub_1BA70ABF4(v42, v41);
    v8[26] = v13;
    v8[27] = v14;
    v8[28] = v15;
    v8[29] = v16;
    v8[30] = v17;
    v8[31] = v18;
    *((_QWORD *)&v50 + 1) = &type metadata for FeedIssue;
    *(_QWORD *)&v51 = sub_1BA6B2E68();
    v19 = (_OWORD *)swift_allocObject();
    v20 = v72[0];
    v45[6] = v71;
    v46[0] = v72[0];
    *(_OWORD *)((char *)v46 + 9) = *(_OWORD *)((char *)v72 + 9);
    v21 = v67;
    v22 = v68;
    v45[2] = v67;
    v45[3] = v68;
    v24 = v69;
    v23 = v70;
    v45[4] = v69;
    v45[5] = v70;
    v26 = v65;
    v25 = v66;
    v45[0] = v65;
    v45[1] = v66;
    v19[7] = v71;
    v19[8] = v20;
    *(_OWORD *)((char *)v19 + 137) = *(_OWORD *)((char *)v72 + 9);
    v19[3] = v21;
    v19[4] = v22;
    v19[5] = v24;
    v19[6] = v23;
    *(_QWORD *)&v49 = v19;
    v19[1] = v26;
    v19[2] = v25;
    sub_1BA8D1F08((uint64_t)v45);
    sub_1BA6B0198((uint64_t)&v49, (uint64_t)(v8 + 19));
    v27 = v71;
    v47[6] = v71;
    v48[0] = v72[0];
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)((char *)v72 + 9);
    v28 = v67;
    v47[2] = v67;
    v47[3] = v68;
    v47[4] = v69;
    v47[5] = v70;
    v47[0] = v65;
    v47[1] = v66;
    v29 = v72[0];
    v30 = v72[0];
    a6[6] = v71;
    a6[7] = v29;
    *(_OWORD *)((char *)a6 + 121) = *(_OWORD *)((char *)v72 + 9);
    v32 = v67;
    v31 = v68;
    v33 = v68;
    v34 = v69;
    a6[2] = v28;
    a6[3] = v31;
    v36 = v69;
    v35 = v70;
    v37 = v70;
    a6[4] = v34;
    a6[5] = v35;
    v38 = v66;
    v40 = v65;
    v39 = v66;
    *a6 = v65;
    a6[1] = v38;
    v55 = v27;
    v56[0] = v30;
    *(_OWORD *)((char *)v56 + 9) = *(_OWORD *)((char *)v72 + 9);
    v51 = v32;
    v52 = v33;
    v53 = v36;
    v54 = v37;
    v49 = v40;
    v50 = v39;
    v57 = v81;
    v58 = v44;
    v59 = v43;
    v60 = v14;
    v61 = v15;
    v62 = v16;
    v63 = v17;
    v64 = v18;
    sub_1BA8D1F08((uint64_t)v47);
    return sub_1BB29ECDC((uint64_t)&v49);
  }
  return result;
}

uint64_t sub_1BB4669B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  _BYTE v22[152];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v8 = v6;
  result = sub_1BB467AE8(a4, a3, a1, a2, (uint64_t)v8, a5, (uint64_t)v22);
  if (!v7)
  {
    v29 = a6;
    v11 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v11);
    v12 = swift_bridgeObjectRetain();
    sub_1BA7082C0(v12);
    v13 = v23;
    v14 = v24;
    v15 = v25;
    v16 = v26;
    v17 = v27;
    v18 = v28;
    v19 = v8[26];
    v20 = v8[27];
    sub_1BA70A834(v23, v24);
    sub_1BA70ABF4(v19, v20);
    v8[26] = v13;
    v8[27] = v14;
    v8[28] = v15;
    v8[29] = v16;
    v8[30] = v17;
    v8[31] = v18;
    v21[3] = &type metadata for FeedTag;
    v21[4] = sub_1BA6A96BC();
    v21[0] = swift_allocObject();
    sub_1BA6A955C((uint64_t)v22, v21[0] + 16);
    sub_1BA6B0198((uint64_t)v21, (uint64_t)(v8 + 19));
    sub_1BA6A955C((uint64_t)v22, v29);
    return sub_1BA604728((uint64_t)v22, (uint64_t)&qword_1ED3A6BD8, (uint64_t)&type metadata for FeedTag, (uint64_t)type metadata accessor for FormatNodeBindingItem, (uint64_t (*)(_QWORD))sub_1BA4AD288);
  }
  return result;
}

uint64_t sub_1BB466B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v32[5];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[5];
  uint64_t v36;

  v8 = v6;
  v36 = a6;
  sub_1BA4B07F0(0, &qword_1ED3BE978, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  v15 = v14;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v32 - v16;
  result = sub_1BA78AC7C(a4, a3, a1, a2, (uint64_t)v8, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t))sub_1BB45F33C);
  if (!v7)
  {
    v19 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v19);
    v20 = swift_bridgeObjectRetain();
    sub_1BA7082C0(v20);
    v21 = (uint64_t *)&v17[*(int *)(v15 + 36)];
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = v21[3];
    v26 = v21[4];
    v27 = v21[5];
    v28 = v8[26];
    v33 = v8[27];
    v34 = v28;
    v29 = v8[28];
    v32[3] = v8[29];
    v32[4] = v29;
    v30 = v8[30];
    v32[1] = v8[31];
    v32[2] = v30;
    sub_1BA70A834(v22, v23);
    sub_1BA70ABF4(v34, v33);
    v8[26] = v22;
    v8[27] = v23;
    v8[28] = v24;
    v8[29] = v25;
    v8[30] = v26;
    v8[31] = v27;
    v35[3] = type metadata accessor for FeedWebEmbed();
    v35[4] = sub_1BA4A2870(&qword_1ED39AF58, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
    sub_1BA4C2DD8((uint64_t)v17, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA6B0198((uint64_t)v35, (uint64_t)(v8 + 19));
    sub_1BA4C2DD8((uint64_t)v17, v36, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    return sub_1BA604728((uint64_t)v17, (uint64_t)&qword_1ED3BE978, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t)type metadata accessor for FormatNodeBindingItem, (uint64_t (*)(_QWORD))sub_1BA4B07F0);
  }
  return result;
}

uint64_t sub_1BB466D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  _BYTE v22[168];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v8 = v6;
  result = sub_1BB4677E0(a4, a3, a1, a2, (uint64_t)v8, a5, (uint64_t)v22);
  if (!v7)
  {
    v29 = a6;
    v11 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v11);
    v12 = swift_bridgeObjectRetain();
    sub_1BA7082C0(v12);
    v13 = v23;
    v14 = v24;
    v15 = v25;
    v16 = v26;
    v17 = v27;
    v18 = v28;
    v19 = v8[26];
    v20 = v8[27];
    sub_1BA70A834(v23, v24);
    sub_1BA70ABF4(v19, v20);
    v8[26] = v13;
    v8[27] = v14;
    v8[28] = v15;
    v8[29] = v16;
    v8[30] = v17;
    v8[31] = v18;
    v21[3] = &type metadata for FeedPuzzle;
    v21[4] = sub_1BACB5AD0();
    v21[0] = swift_allocObject();
    sub_1BA93EB58((uint64_t)v22, v21[0] + 16);
    sub_1BA6B0198((uint64_t)v21, (uint64_t)(v8 + 19));
    sub_1BA93EB58((uint64_t)v22, v29);
    return sub_1BA604728((uint64_t)v22, (uint64_t)&qword_1ED3A0F70, (uint64_t)&type metadata for FeedPuzzle, (uint64_t)type metadata accessor for FormatNodeBindingItem, (uint64_t (*)(_QWORD))sub_1BA4AD288);
  }
  return result;
}

_QWORD *sub_1BB466EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  char v38;
  ValueMetadata *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v8 = (_QWORD *)v6;
  result = (_QWORD *)sub_1BB4674D8(a4, a3, a1, a2, v6, a5, &v52);
  if (!v7)
  {
    v36 = v59;
    v11 = swift_bridgeObjectRetain();
    v67 = 0;
    sub_1BA6E3FB8(v11);
    v35 = v60;
    v12 = swift_bridgeObjectRetain();
    sub_1BA7082C0(v12);
    v13 = v62;
    v14 = v63;
    v15 = v64;
    v16 = v65;
    v17 = v66;
    v26 = v8[27];
    v27 = v8[26];
    v18 = v61;
    v33 = v62;
    v34 = v61;
    v31 = v64;
    v32 = v63;
    v29 = v66;
    v30 = v65;
    sub_1BA70A834(v61, v62);
    sub_1BA70ABF4(v27, v26);
    v8[26] = v18;
    v8[27] = v13;
    v8[28] = v14;
    v8[29] = v15;
    v8[30] = v16;
    v8[31] = v17;
    v39 = &type metadata for FeedPuzzleType;
    v40 = sub_1BACB5BC8();
    v19 = swift_allocObject();
    *(_QWORD *)&v37 = v19;
    v20 = v52;
    LOBYTE(v18) = v53;
    v21 = v54;
    v22 = v55;
    v24 = v57;
    v28 = v56;
    v23 = v56;
    v25 = v58;
    *(_OWORD *)(v19 + 16) = v52;
    *(_BYTE *)(v19 + 32) = v18;
    *(_QWORD *)(v19 + 40) = v21;
    *(_QWORD *)(v19 + 48) = v22;
    *(_QWORD *)(v19 + 56) = v23;
    *(_QWORD *)(v19 + 64) = v24;
    *(_QWORD *)(v19 + 72) = v25;
    sub_1BA75A650(v21, v22);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1BA6B0198((uint64_t)&v37, (uint64_t)(v8 + 19));
    *(_OWORD *)a6 = v20;
    *(_BYTE *)(a6 + 16) = v18;
    *(_QWORD *)(a6 + 24) = v21;
    *(_QWORD *)(a6 + 32) = v22;
    *(_QWORD *)(a6 + 40) = v28;
    *(_QWORD *)(a6 + 48) = v24;
    *(_QWORD *)(a6 + 56) = v25;
    v37 = v20;
    v38 = v18;
    v39 = (ValueMetadata *)v21;
    v40 = v22;
    v41 = v28;
    v42 = v24;
    v43 = v25;
    v44 = v36;
    v45 = v35;
    v46 = v34;
    v47 = v33;
    v48 = v32;
    v49 = v31;
    v50 = v30;
    v51 = v29;
    sub_1BA75A650(v21, v22);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    return sub_1BB29EC34(&v37);
  }
  return result;
}

uint64_t sub_1BB4670D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v32[5];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[5];
  uint64_t v36;

  v8 = v6;
  v36 = a6;
  sub_1BA4B07F0(0, &qword_1ED3C4230, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  v15 = v14;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v32 - v16;
  result = sub_1BA78AC7C(a4, a3, a1, a2, (uint64_t)v8, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t))sub_1BB45A2DC);
  if (!v7)
  {
    v19 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v19);
    v20 = swift_bridgeObjectRetain();
    sub_1BA7082C0(v20);
    v21 = (uint64_t *)&v17[*(int *)(v15 + 36)];
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = v21[3];
    v26 = v21[4];
    v27 = v21[5];
    v28 = v8[26];
    v33 = v8[27];
    v34 = v28;
    v29 = v8[28];
    v32[3] = v8[29];
    v32[4] = v29;
    v30 = v8[30];
    v32[1] = v8[31];
    v32[2] = v30;
    sub_1BA70A834(v22, v23);
    sub_1BA70ABF4(v34, v33);
    v8[26] = v22;
    v8[27] = v23;
    v8[28] = v24;
    v8[29] = v25;
    v8[30] = v26;
    v8[31] = v27;
    v35[3] = type metadata accessor for FeedPuzzleStatistic();
    v35[4] = sub_1BA4A2870(&qword_1EF2B1A40, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
    sub_1BA4C2DD8((uint64_t)v17, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    sub_1BA6B0198((uint64_t)v35, (uint64_t)(v8 + 19));
    sub_1BA4C2DD8((uint64_t)v17, v36, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    return sub_1BA604728((uint64_t)v17, (uint64_t)&qword_1ED3C4230, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t)type metadata accessor for FormatNodeBindingItem, (uint64_t (*)(_QWORD))sub_1BA4B07F0);
  }
  return result;
}

uint64_t sub_1BB4672D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v32[5];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[5];
  uint64_t v36;

  v8 = v6;
  v36 = a6;
  sub_1BA4B07F0(0, &qword_1ED3C9968, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  v15 = v14;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v32 - v16;
  result = sub_1BA78AC7C(a4, a3, a1, a2, (uint64_t)v8, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t))sub_1BB458794);
  if (!v7)
  {
    v19 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v19);
    v20 = swift_bridgeObjectRetain();
    sub_1BA7082C0(v20);
    v21 = (uint64_t *)&v17[*(int *)(v15 + 36)];
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = v21[3];
    v26 = v21[4];
    v27 = v21[5];
    v28 = v8[26];
    v33 = v8[27];
    v34 = v28;
    v29 = v8[28];
    v32[3] = v8[29];
    v32[4] = v29;
    v30 = v8[30];
    v32[1] = v8[31];
    v32[2] = v30;
    sub_1BA70A834(v22, v23);
    sub_1BA70ABF4(v34, v33);
    v8[26] = v22;
    v8[27] = v23;
    v8[28] = v24;
    v8[29] = v25;
    v8[30] = v26;
    v8[31] = v27;
    v35[3] = type metadata accessor for FeedCustomItem();
    v35[4] = sub_1BA4A2870(&qword_1ED39E460, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t)&protocol conformance descriptor for FeedCustomItem);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
    sub_1BA4C2DD8((uint64_t)v17, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    sub_1BA6B0198((uint64_t)v35, (uint64_t)(v8 + 19));
    sub_1BA4C2DD8((uint64_t)v17, v36, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    return sub_1BA604728((uint64_t)v17, (uint64_t)&qword_1ED3C9968, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t)type metadata accessor for FormatNodeBindingItem, (uint64_t (*)(_QWORD))sub_1BA4B07F0);
  }
  return result;
}

uint64_t sub_1BB4674D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v13 = (char *)a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary;
  v14 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
  if (v14 == 255)
  {
    v47 = *(_QWORD *)(a5 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78AF84(a6);
    v15 = *(_QWORD *)(v47 + 16);
    v40 = a2;
    v41 = a4;
    v45 = a3;
    if (v15)
    {
      swift_bridgeObjectRetain();
      v16 = 0;
      v17 = 0;
      do
      {
        v54 = *(_BYTE *)(v47 + v16 + 32);
        sub_1BA758024();
        v18 = v47;
        if ((v47 & ~v17) == 0)
          v18 = 0;
        v17 |= v18;
        ++v16;
      }
      while (v15 != v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(a5 + 136);
    v29 = *(_QWORD *)(a5 + 144);
    v30 = a1[5];
    v39 = a1[4];
    v31 = *(_BYTE *)a5;
    v32 = a1[2];
    v33 = *(_QWORD *)(v40 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_slots);
    v34 = v40 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BB45BE04(v34, v33, v45, v41, v17, v28, v29, v39, (uint64_t)a7, v30, v31, v32);
    swift_endAccess();
  }
  else
  {
    if ((v14 & 1) == 0)
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
    v20 = *(_OWORD *)(v13 + 8);
    v21 = *((_QWORD *)v13 + 3);
    v22 = *((_QWORD *)v13 + 4);
    v23 = *((_QWORD *)v13 + 5);
    v49 = *(_QWORD *)v13;
    v50 = v20;
    v51 = v21;
    v52 = v22;
    v53 = v23;
    v48 = *(_QWORD *)(a5 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78AF84(a6);
    v24 = *(_QWORD *)(v48 + 16);
    if (v24)
    {
      v42 = a4;
      swift_bridgeObjectRetain();
      v25 = 0;
      v26 = 0;
      do
      {
        v54 = *(_BYTE *)(v48 + v25 + 32);
        sub_1BA758024();
        v27 = v48;
        if ((v48 & ~v26) == 0)
          v27 = 0;
        v26 |= v27;
        ++v25;
      }
      while (v24 != v25);
      swift_bridgeObjectRelease();
      a4 = v42;
    }
    else
    {
      v26 = 0;
    }
    swift_bridgeObjectRelease();
    v35 = *(_QWORD *)(a5 + 136);
    v36 = *(_QWORD *)(a5 + 144);
    v37 = *(_BYTE *)a5;
    v38 = a1[2];
    swift_bridgeObjectRetain();
    sub_1BB457E28(a3, a4, v26, v35, v36, &v49, v37, v38, a7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB4677E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v13 = (char *)a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary;
  v14 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
  if (v14 == 255)
  {
    v47 = *(_QWORD *)(a5 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78AF84(a6);
    v15 = *(_QWORD *)(v47 + 16);
    v40 = a2;
    v41 = a4;
    v45 = a3;
    if (v15)
    {
      swift_bridgeObjectRetain();
      v16 = 0;
      v17 = 0;
      do
      {
        v54 = *(_BYTE *)(v47 + v16 + 32);
        sub_1BA758024();
        v18 = v47;
        if ((v47 & ~v17) == 0)
          v18 = 0;
        v17 |= v18;
        ++v16;
      }
      while (v15 != v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(a5 + 136);
    v29 = *(_QWORD *)(a5 + 144);
    v30 = a1[5];
    v39 = a1[4];
    v31 = *(_BYTE *)a5;
    v32 = a1[2];
    v33 = *(_QWORD *)(v40 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_slots);
    v34 = v40 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BB45DB38(v34, v33, v45, v41, v17, v28, v29, v39, a7, v30, v31, v32);
    swift_endAccess();
  }
  else
  {
    if ((v14 & 1) == 0)
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
    v20 = *(_OWORD *)(v13 + 8);
    v21 = *((_QWORD *)v13 + 3);
    v22 = *((_QWORD *)v13 + 4);
    v23 = *((_QWORD *)v13 + 5);
    v49 = *(_QWORD *)v13;
    v50 = v20;
    v51 = v21;
    v52 = v22;
    v53 = v23;
    v48 = *(_QWORD *)(a5 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78AF84(a6);
    v24 = *(_QWORD *)(v48 + 16);
    if (v24)
    {
      v42 = a4;
      swift_bridgeObjectRetain();
      v25 = 0;
      v26 = 0;
      do
      {
        v54 = *(_BYTE *)(v48 + v25 + 32);
        sub_1BA758024();
        v27 = v48;
        if ((v48 & ~v26) == 0)
          v27 = 0;
        v26 |= v27;
        ++v25;
      }
      while (v24 != v25);
      swift_bridgeObjectRelease();
      a4 = v42;
    }
    else
    {
      v26 = 0;
    }
    swift_bridgeObjectRelease();
    v35 = *(_QWORD *)(a5 + 136);
    v36 = *(_QWORD *)(a5 + 144);
    v37 = *(_BYTE *)a5;
    v38 = a1[2];
    swift_bridgeObjectRetain();
    sub_1BB458024(a3, a4, v26, v35, v36, &v49, v37, v38, a7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB467AE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v13 = (char *)a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary;
  v14 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
  if (v14 == 255)
  {
    v47 = *(_QWORD *)(a5 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78AF84(a6);
    v15 = *(_QWORD *)(v47 + 16);
    v40 = a2;
    v41 = a4;
    v45 = a3;
    if (v15)
    {
      swift_bridgeObjectRetain();
      v16 = 0;
      v17 = 0;
      do
      {
        v54 = *(_BYTE *)(v47 + v16 + 32);
        sub_1BA758024();
        v18 = v47;
        if ((v47 & ~v17) == 0)
          v18 = 0;
        v17 |= v18;
        ++v16;
      }
      while (v15 != v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(a5 + 136);
    v29 = *(_QWORD *)(a5 + 144);
    v30 = a1[5];
    v39 = a1[4];
    v31 = *(_BYTE *)a5;
    v32 = a1[2];
    v33 = *(_QWORD *)(v40 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_slots);
    v34 = v40 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BB460E44(v34, v33, v45, v41, v17, v28, v29, v39, a7, v30, v31, v32);
    swift_endAccess();
  }
  else
  {
    if ((v14 & 1) == 0)
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
    v20 = *(_OWORD *)(v13 + 8);
    v21 = *((_QWORD *)v13 + 3);
    v22 = *((_QWORD *)v13 + 4);
    v23 = *((_QWORD *)v13 + 5);
    v49 = *(_QWORD *)v13;
    v50 = v20;
    v51 = v21;
    v52 = v22;
    v53 = v23;
    v48 = *(_QWORD *)(a5 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78AF84(a6);
    v24 = *(_QWORD *)(v48 + 16);
    if (v24)
    {
      v42 = a4;
      swift_bridgeObjectRetain();
      v25 = 0;
      v26 = 0;
      do
      {
        v54 = *(_BYTE *)(v48 + v25 + 32);
        sub_1BA758024();
        v27 = v48;
        if ((v48 & ~v26) == 0)
          v27 = 0;
        v26 |= v27;
        ++v25;
      }
      while (v24 != v25);
      swift_bridgeObjectRelease();
      a4 = v42;
    }
    else
    {
      v26 = 0;
    }
    swift_bridgeObjectRelease();
    v35 = *(_QWORD *)(a5 + 136);
    v36 = *(_QWORD *)(a5 + 144);
    v37 = *(_BYTE *)a5;
    v38 = a1[2];
    swift_bridgeObjectRetain();
    sub_1BB4581EC(a3, a4, v26, v35, v36, &v49, v37, v38, a7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB467DF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v13 = (char *)a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary;
  v14 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
  if (v14 == 255)
  {
    v47 = *(_QWORD *)(a5 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78AF84(a6);
    v15 = *(_QWORD *)(v47 + 16);
    v40 = a2;
    v41 = a4;
    v45 = a3;
    if (v15)
    {
      swift_bridgeObjectRetain();
      v16 = 0;
      v17 = 0;
      do
      {
        v54 = *(_BYTE *)(v47 + v16 + 32);
        sub_1BA758024();
        v18 = v47;
        if ((v47 & ~v17) == 0)
          v18 = 0;
        v17 |= v18;
        ++v16;
      }
      while (v15 != v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(a5 + 136);
    v29 = *(_QWORD *)(a5 + 144);
    v30 = a1[5];
    v39 = a1[4];
    v31 = *(_BYTE *)a5;
    v32 = a1[2];
    v33 = *(_QWORD *)(v40 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_slots);
    v34 = v40 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BB462638(v34, v33, v45, v41, v17, v28, v29, v39, (uint64_t)a7, v30, v31, v32);
    swift_endAccess();
  }
  else
  {
    if ((v14 & 1) == 0)
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
    v20 = *(_OWORD *)(v13 + 8);
    v21 = *((_QWORD *)v13 + 3);
    v22 = *((_QWORD *)v13 + 4);
    v23 = *((_QWORD *)v13 + 5);
    v49 = *(_QWORD *)v13;
    v50 = v20;
    v51 = v21;
    v52 = v22;
    v53 = v23;
    v48 = *(_QWORD *)(a5 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78AF84(a6);
    v24 = *(_QWORD *)(v48 + 16);
    if (v24)
    {
      v42 = a4;
      swift_bridgeObjectRetain();
      v25 = 0;
      v26 = 0;
      do
      {
        v54 = *(_BYTE *)(v48 + v25 + 32);
        sub_1BA758024();
        v27 = v48;
        if ((v48 & ~v26) == 0)
          v27 = 0;
        v26 |= v27;
        ++v25;
      }
      while (v24 != v25);
      swift_bridgeObjectRelease();
      a4 = v42;
    }
    else
    {
      v26 = 0;
    }
    swift_bridgeObjectRelease();
    v35 = *(_QWORD *)(a5 + 136);
    v36 = *(_QWORD *)(a5 + 144);
    v37 = *(_BYTE *)a5;
    v38 = a1[2];
    swift_bridgeObjectRetain();
    sub_1BB4583B4(a3, a4, v26, v35, v36, &v49, v37, v38, a7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB4680F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_1BB46815C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43[3];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[6];
  _BYTE v51[8];
  uint64_t v52;

  v48 = a3;
  sub_1BA78AA1C(a4, (uint64_t)v50);
  v9 = v50[0];
  v10 = v50[1];
  v46 = v50[3];
  v47 = v50[2];
  v44 = v50[5];
  v45 = v50[4];
  v42 = *(_QWORD *)a1;
  v41 = *(_QWORD *)(a1 + 8);
  v37 = *(unsigned __int8 *)(a1 + 16);
  v40 = *(_QWORD *)(a1 + 24);
  v39 = *(_QWORD *)(a1 + 32);
  v38 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)v43 = *(_OWORD *)(a1 + 48);
  v11 = type metadata accessor for FormatOption();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA78AA1C(a4, (uint64_t)v51);
  v15 = v52;
  v36 = a1;
  sub_1BACB5B80(a1);
  if (v15)
  {
    a2 = sub_1BA78A504((uint64_t)&unk_1E72547E8, a2);
    swift_arrayDestroy();
  }
  v16 = v48;
  v17 = *(_QWORD *)(v48 + 16);
  if (v17)
  {
    v32 = v10;
    v33 = v9;
    v34 = a2;
    v35 = a5;
    v49 = MEMORY[0x1E0DEE9D8];
    sub_1BA76B828(0, v17, 0);
    v18 = v49;
    v19 = v16 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v20 = *(_QWORD *)(v12 + 72);
    do
    {
      sub_1BA4C2DD8(v19, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v21 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v14, v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v49 = v18;
      v24 = *(_QWORD *)(v18 + 16);
      v23 = *(_QWORD *)(v18 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1BA76B828(v23 > 1, v24 + 1, 1);
        v18 = v49;
      }
      *(_QWORD *)(v18 + 16) = v24 + 1;
      *(_QWORD *)(v18 + 8 * v24 + 32) = v21 | 0x1000000000000004;
      v19 += v20;
      --v17;
    }
    while (v17);
    sub_1BACB55F8(v36);
    a5 = v35;
    a2 = v34;
    v9 = v33;
    v10 = v32;
  }
  else
  {
    sub_1BACB55F8(v36);
    v18 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v25 = v37 & 1;
  v26 = v41;
  *(_QWORD *)a5 = v42;
  *(_QWORD *)(a5 + 8) = v26;
  *(_BYTE *)(a5 + 16) = v25;
  v27 = v39;
  *(_QWORD *)(a5 + 24) = v40;
  *(_QWORD *)(a5 + 32) = v27;
  *(_QWORD *)(a5 + 40) = v38;
  result = v43[0];
  *(_OWORD *)(a5 + 48) = *(_OWORD *)v43;
  *(_QWORD *)(a5 + 64) = a2;
  *(_QWORD *)(a5 + 72) = v18;
  *(_QWORD *)(a5 + 80) = v9;
  *(_QWORD *)(a5 + 88) = v10;
  v29 = v46;
  *(_QWORD *)(a5 + 96) = v47;
  *(_QWORD *)(a5 + 104) = v29;
  v30 = v44;
  *(_QWORD *)(a5 + 112) = v45;
  *(_QWORD *)(a5 + 120) = v30;
  return result;
}

uint64_t sub_1BB468460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[8];
  uint64_t v31;

  v10 = type metadata accessor for FormatOption();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA93EB58(a1, a5);
  sub_1BA78AA1C(a4, (uint64_t)v30);
  if (v31)
  {
    a2 = sub_1BA78A504((uint64_t)&unk_1E7254768, a2);
    swift_arrayDestroy();
  }
  *(_QWORD *)(a5 + 168) = a2;
  v14 = *(_QWORD *)(a3 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v25 = a1;
    v27 = a5;
    v28 = a4;
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BA76B828(0, v14, 0);
    v15 = v29;
    v16 = *(unsigned __int8 *)(v11 + 80);
    v26 = a3;
    v17 = a3 + ((v16 + 32) & ~v16);
    v18 = *(_QWORD *)(v11 + 72);
    do
    {
      sub_1BA4C2DD8(v17, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v19 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v13, v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v29 = v15;
      v22 = *(_QWORD *)(v15 + 16);
      v21 = *(_QWORD *)(v15 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1BA76B828(v21 > 1, v22 + 1, 1);
        v15 = v29;
      }
      *(_QWORD *)(v15 + 16) = v22 + 1;
      *(_QWORD *)(v15 + 8 * v22 + 32) = v19 | 0x1000000000000004;
      v17 += v18;
      --v14;
    }
    while (v14);
    a5 = v27;
    a4 = v28;
    a1 = v25;
  }
  sub_1BA93EBE8(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a5 + 176) = v15;
  return sub_1BA78AA1C(a4, a5 + 184);
}

uint64_t sub_1BB46863C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[8];
  uint64_t v31;

  v10 = type metadata accessor for FormatOption();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6A955C(a1, a5);
  sub_1BA78AA1C(a4, (uint64_t)v30);
  if (v31)
  {
    a2 = sub_1BA78A504((uint64_t)&unk_1E7254668, a2);
    swift_arrayDestroy();
  }
  *(_QWORD *)(a5 + 152) = a2;
  v14 = *(_QWORD *)(a3 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v25 = a1;
    v27 = a5;
    v28 = a4;
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BA76B828(0, v14, 0);
    v15 = v29;
    v16 = *(unsigned __int8 *)(v11 + 80);
    v26 = a3;
    v17 = a3 + ((v16 + 32) & ~v16);
    v18 = *(_QWORD *)(v11 + 72);
    do
    {
      sub_1BA4C2DD8(v17, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v19 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v13, v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v29 = v15;
      v22 = *(_QWORD *)(v15 + 16);
      v21 = *(_QWORD *)(v15 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1BA76B828(v21 > 1, v22 + 1, 1);
        v15 = v29;
      }
      *(_QWORD *)(v15 + 16) = v22 + 1;
      *(_QWORD *)(v15 + 8 * v22 + 32) = v19 | 0x1000000000000004;
      v17 += v18;
      --v14;
    }
    while (v14);
    a5 = v27;
    a4 = v28;
    a1 = v25;
  }
  sub_1BA6A94C4(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a5 + 160) = v15;
  return sub_1BA78AA1C(a4, a5 + 168);
}

__n128 sub_1BB468818@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __n128 result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[6];
  char v48[8];
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE v57[25];

  v45 = a3;
  sub_1BA78AA1C(a4, (uint64_t)v47);
  v9 = v47[0];
  v44 = v47[1];
  v43 = v47[2];
  v42 = v47[3];
  v41 = v47[4];
  v40 = v47[5];
  v10 = a1[7];
  v56 = a1[6];
  *(_OWORD *)v57 = v10;
  *(_OWORD *)&v57[9] = *(_OWORD *)((char *)a1 + 121);
  v11 = a1[3];
  v52 = a1[2];
  v53 = v11;
  v12 = a1[5];
  v54 = a1[4];
  v55 = v12;
  v13 = *((__n128 *)a1 + 1);
  v50 = *(__n128 *)a1;
  v51 = v13;
  v14 = type metadata accessor for FormatOption();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA78AA1C(a4, (uint64_t)v48);
  v18 = v49;
  v39 = a1;
  sub_1BA8D1F08((uint64_t)a1);
  if (v18)
  {
    a2 = sub_1BA78A504((uint64_t)&unk_1E7254598, a2);
    swift_arrayDestroy();
  }
  v19 = v45;
  v20 = *(_QWORD *)(v45 + 16);
  if (v20)
  {
    v36 = v9;
    v37 = a2;
    v38 = a5;
    v46 = MEMORY[0x1E0DEE9D8];
    sub_1BA76B828(0, v20, 0);
    v21 = v46;
    v22 = v19 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v23 = *(_QWORD *)(v15 + 72);
    do
    {
      sub_1BA4C2DD8(v22, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v24 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v17, v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v46 = v21;
      v27 = *(_QWORD *)(v21 + 16);
      v26 = *(_QWORD *)(v21 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1BA76B828(v26 > 1, v27 + 1, 1);
        v21 = v46;
      }
      *(_QWORD *)(v21 + 16) = v27 + 1;
      *(_QWORD *)(v21 + 8 * v27 + 32) = v24 | 0x1000000000000004;
      v22 += v23;
      --v20;
    }
    while (v20);
    sub_1BA8D1FE4((uint64_t)v39);
    a5 = v38;
    a2 = v37;
    v9 = v36;
  }
  else
  {
    sub_1BA8D1FE4((uint64_t)v39);
    v21 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v28 = *(_OWORD *)v57;
  *(_OWORD *)(a5 + 96) = v56;
  *(_OWORD *)(a5 + 112) = v28;
  *(_OWORD *)(a5 + 121) = *(_OWORD *)&v57[9];
  v29 = v53;
  *(_OWORD *)(a5 + 32) = v52;
  *(_OWORD *)(a5 + 48) = v29;
  v30 = v55;
  *(_OWORD *)(a5 + 64) = v54;
  *(_OWORD *)(a5 + 80) = v30;
  result = v51;
  *(__n128 *)a5 = v50;
  *(__n128 *)(a5 + 16) = result;
  *(_QWORD *)(a5 + 144) = a2;
  *(_QWORD *)(a5 + 152) = v21;
  v32 = v44;
  *(_QWORD *)(a5 + 160) = v9;
  *(_QWORD *)(a5 + 168) = v32;
  v33 = v42;
  *(_QWORD *)(a5 + 176) = v43;
  *(_QWORD *)(a5 + 184) = v33;
  v34 = v40;
  *(_QWORD *)(a5 + 192) = v41;
  *(_QWORD *)(a5 + 200) = v34;
  return result;
}

uint64_t sub_1BB468B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(_QWORD)@<X6>, unint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[8];
  uint64_t v41;

  v37 = a7;
  v38 = a3;
  v16 = type metadata accessor for FormatOption();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = a1;
  sub_1BA4C2DD8(a1, a9, a5);
  sub_1BA78AA1C(a4, (uint64_t)v40);
  if (v41)
  {
    a2 = sub_1BA78A504(a6, a2);
    swift_arrayDestroy();
  }
  v37 = a5;
  sub_1BA4B07F0(0, a8, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  v21 = v20;
  *(_QWORD *)(a9 + *(int *)(v20 + 28)) = a2;
  v22 = v38;
  v23 = *(_QWORD *)(v38 + 16);
  v24 = MEMORY[0x1E0DEE9D8];
  if (v23)
  {
    v33 = v20;
    v34 = a9;
    v35 = a4;
    v39 = MEMORY[0x1E0DEE9D8];
    sub_1BA76B828(0, v23, 0);
    v24 = v39;
    v25 = v22 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v26 = *(_QWORD *)(v17 + 72);
    do
    {
      sub_1BA4C2DD8(v25, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v27 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v19, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v39 = v24;
      v30 = *(_QWORD *)(v24 + 16);
      v29 = *(_QWORD *)(v24 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1BA76B828(v29 > 1, v30 + 1, 1);
        v24 = v39;
      }
      *(_QWORD *)(v24 + 16) = v30 + 1;
      *(_QWORD *)(v24 + 8 * v30 + 32) = v27 | 0x1000000000000004;
      v25 += v26;
      --v23;
    }
    while (v23);
    a9 = v34;
    a4 = v35;
    v21 = v33;
  }
  sub_1BA4A2E80(v36, v37);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + *(int *)(v21 + 32)) = v24;
  return sub_1BA78AA1C(a4, a9 + *(int *)(v21 + 36));
}

uint64_t sub_1BB468D50@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t (*a3)(_QWORD, char *, _QWORD, char *)@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  __int128 v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;

  v5 = *((_QWORD *)a1 + 2);
  v6 = *((_BYTE *)a1 + 24);
  v7 = *((_QWORD *)a1 + 6);
  v8 = *((_QWORD *)a2 + 2);
  v9 = *((_BYTE *)a2 + 24);
  v10 = *((_QWORD *)a2 + 6);
  v18 = *a1;
  v19 = v5;
  v20 = v6;
  v21 = a1[2];
  v22 = v7;
  v23 = *(__int128 *)((char *)a1 + 56);
  v12 = *a2;
  v13 = v8;
  v14 = v9;
  v15 = a2[2];
  v16 = v10;
  v17 = *(__int128 *)((char *)a2 + 56);
  result = a3(v18, (char *)&v18 + 8, v12, (char *)&v12 + 8);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1BB468E04()
{
  return swift_deallocObject();
}

uint64_t sub_1BB468E1C()
{
  return swift_deallocObject();
}

BOOL sub_1BB468E2C(uint64_t a1, _OWORD *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[7];
  _OWORD v16[2];
  _OWORD v17[7];
  _OWORD v18[2];

  v5 = *(_QWORD *)(v4 + 16);
  v6 = a2[7];
  v15[6] = a2[6];
  v16[0] = v6;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)a2 + 121);
  v7 = a2[3];
  v15[2] = a2[2];
  v15[3] = v7;
  v8 = a2[5];
  v15[4] = a2[4];
  v15[5] = v8;
  v9 = a2[1];
  v15[0] = *a2;
  v15[1] = v9;
  v10 = a4[7];
  v17[6] = a4[6];
  v18[0] = v10;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)a4 + 121);
  v11 = a4[3];
  v17[2] = a4[2];
  v17[3] = v11;
  v12 = a4[5];
  v17[4] = a4[4];
  v17[5] = v12;
  v13 = a4[1];
  v17[0] = *a4;
  v17[1] = v13;
  return sub_1BB826F18(a1, (uint64_t)v15, a3, (uint64_t)v17, v5);
}

uint64_t sub_1BB468EB4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t, _OWORD *);
  uint64_t v5;
  uint64_t result;
  _OWORD v7[7];
  _OWORD v8[2];

  v4 = *(uint64_t (**)(uint64_t, _OWORD *))(v2 + 16);
  v5 = *a1;
  v7[5] = *(_OWORD *)(a1 + 11);
  v7[6] = *(_OWORD *)(a1 + 13);
  v8[0] = *(_OWORD *)(a1 + 15);
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 129);
  v7[1] = *(_OWORD *)(a1 + 3);
  v7[2] = *(_OWORD *)(a1 + 5);
  v7[3] = *(_OWORD *)(a1 + 7);
  v7[4] = *(_OWORD *)(a1 + 9);
  v7[0] = *(_OWORD *)(a1 + 1);
  result = v4(v5, v7);
  *a2 = result & 1;
  return result;
}

void sub_1BB468FA8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C4520)
  {
    type metadata accessor for FeedCustomItem();
    type metadata accessor for FormatPropertyDefinition(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C4520);
  }
}

uint64_t sub_1BB469018()
{
  return swift_deallocObject();
}

uint64_t sub_1BB469028()
{
  return swift_deallocObject();
}

uint64_t sub_1BB469038()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

uint64_t sub_1BB469094()
{
  return swift_deallocObject();
}

BOOL sub_1BB4690A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB826CD4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1BB4690AC()
{
  return swift_deallocObject();
}

uint64_t sub_1BB4690BC()
{
  return swift_deallocObject();
}

BOOL sub_1BB4690CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB8269EC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1BB4690D4@<X0>(char *a1@<X0>, char *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1BB4690F8(a1, a2, (unint64_t *)&unk_1ED39BFE0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed, a3);
}

uint64_t sub_1BB4690E8()
{
  return swift_deallocObject();
}

uint64_t sub_1BB4690F8@<X0>(char *a1@<X0>, char *a2@<X1>, unint64_t *a3@<X2>, void (*a4)(uint64_t)@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v5;
  uint64_t (*v9)(uint64_t, char *, _QWORD, char *);
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v9 = *(uint64_t (**)(uint64_t, char *, _QWORD, char *))(v5 + 16);
  v10 = *(_QWORD *)a1;
  sub_1BA6AA16C(0, a3, a4);
  result = v9(v10, &a1[*(int *)(v11 + 48)], *(_QWORD *)a2, &a2[*(int *)(v11 + 48)]);
  *a5 = result & 1;
  return result;
}

uint64_t sub_1BB469164()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 128))
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  if (*(_QWORD *)(v0 + 168))
    __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return swift_deallocObject();
}

uint64_t sub_1BB4691D0()
{
  return swift_deallocObject();
}

BOOL sub_1BB4691E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB8267DC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1BB4691E8()
{
  return swift_deallocObject();
}

uint64_t sub_1BB4691F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB469234()
{
  return swift_deallocObject();
}

uint64_t sub_1BB469248@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  return sub_1BB468D50(a1, a2, *(uint64_t (**)(_QWORD, char *, _QWORD, char *))(v3 + 16), a3);
}

uint64_t sub_1BB469250()
{
  return swift_deallocObject();
}

BOOL sub_1BB469260(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v5 = *(_QWORD *)(v4 + 16);
  if ((v5 & ~*a2) != 0)
    return 0;
  if ((v5 & ~*a4) != 0)
  {
    v7 = 0;
    v6 = 1;
  }
  else
  {
    v7 = __OFSUB__(a1, a3);
    v6 = a1 - a3 < 0;
  }
  return v6 != v7;
}

uint64_t sub_1BB46928C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB4692B0()
{
  return swift_deallocObject();
}

BOOL sub_1BB4692C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB8267C8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1BB4692C8@<X0>(char *a1@<X0>, char *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1BB4690F8(a1, a2, &qword_1EF2B1A50, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, a3);
}

uint64_t sub_1BB4692DC()
{
  return swift_deallocObject();
}

uint64_t sub_1BB4692EC()
{
  return swift_deallocObject();
}

uint64_t sub_1BB4692FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB82661C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1BB469304@<X0>(char *a1@<X0>, char *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1BB4690F8(a1, a2, &qword_1ED39EA58, (void (*)(uint64_t))type metadata accessor for FeedCustomItem, a3);
}

uint64_t sub_1BB469318()
{
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for FormatNodeRebinder.Rebinder(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB469374 + 4 * byte_1BB91A094[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB4693A8 + 4 * byte_1BB91A08F[v4]))();
}

uint64_t sub_1BB4693A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4693B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4693B8);
  return result;
}

uint64_t sub_1BB4693C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4693CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB4693D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4693D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatNodeRebinder.Rebinder()
{
  return &type metadata for FormatNodeRebinder.Rebinder;
}

unint64_t sub_1BB4693F8()
{
  unint64_t result;

  result = qword_1EF2C4538;
  if (!qword_1EF2C4538)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91A0FC, &type metadata for FormatNodeRebinder.Rebinder);
    atomic_store(result, (unint64_t *)&qword_1EF2C4538);
  }
  return result;
}

double sub_1BB469498@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  if (*a1 >> 61 != 1)
    goto LABEL_6;
  v4 = *(_QWORD *)((*a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  v3 = *(_QWORD *)((*a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
  v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v5 = v4 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    swift_bridgeObjectRetain();
    swift_release();
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v3;
    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];
  }
  else
  {
LABEL_6:
    swift_release();
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1BB46951C()
{
  sub_1BB873E34();
  return 0;
}

uint64_t initializeWithCopy for FormatModelContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for FormatModelContext(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_0(a1, a2);
  return a1;
}

_OWORD *assignWithTake for FormatModelContext(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

ValueMetadata *type metadata accessor for FormatInspectionBinding()
{
  return &type metadata for FormatInspectionBinding;
}

uint64_t FormatSnippetNode.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB469634(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  swift_beginAccess();
  v3 = v1[4];
  v4 = v1[5];
  swift_beginAccess();
  v5 = v1[2];
  v6 = v1[3];
  swift_beginAccess();
  v7 = v1[12];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB3D84CC(v3, v4, 0, v5, v6, v7, a1, (uint64_t)v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippetNode.blocks.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSnippetNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSnippetNode.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSnippetNode.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSnippetNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSnippetNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippetNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatSnippetNode.snippetIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSnippetNode.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippetNode.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSnippetNode.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippetNode.description.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSnippetNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippetNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSnippetNode.options.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippetNode.options.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSnippetNode.blocks.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippetNode.blocks.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSnippetNode.__allocating_init(identifier:snippetIdentifier:name:description:selectors:options:blocks:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v19;

  v19 = swift_allocObject();
  FormatSnippetNode.init(identifier:snippetIdentifier:name:description:selectors:options:blocks:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  return v19;
}

uint64_t FormatSnippetNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSnippetNode.__deallocating_deinit()
{
  FormatSnippetNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB469CF0(_QWORD *a1, _QWORD *a2)
{
  return static FormatSnippetNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BB469CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[6];

  v4 = type metadata accessor for FormatOption();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(a2 + 88);
  swift_beginAccess();
  v9 = swift_bridgeObjectRetain();
  sub_1BB3D81F8(v9);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    result = *v8;
    v11 = *(_QWORD *)(*v8 + 16);
    if (v11)
    {
      v12 = result + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v13 = *(_QWORD *)(v5 + 72);
      v14[0] = result;
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1BA4C2DD8(v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v14[5] = *((_QWORD *)v7 + 2);
        swift_retain();
        sub_1BAC49F9C();
        swift_release();
        sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v12 += v13;
        --v11;
      }
      while (v11);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BB469E74(_QWORD *a1)
{
  return sub_1BB469634(a1);
}

uint64_t sub_1BB469E94(uint64_t a1, uint64_t a2)
{
  return FormatSnippetNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BB469EB4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C4540, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippetNode, (uint64_t)&protocol conformance descriptor for FormatSnippetNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB469EF0(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3BDF38, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippetNode, (uint64_t)&protocol conformance descriptor for FormatSnippetNode);
  a1[2] = sub_1BA50AD30(&qword_1ED39FCB0, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippetNode, (uint64_t)&protocol conformance descriptor for FormatSnippetNode);
  result = sub_1BA50AD30(&qword_1EF2C4548, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippetNode, (uint64_t)&protocol conformance descriptor for FormatSnippetNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB469F68(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2C4550, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippetNode, (uint64_t)&protocol conformance descriptor for FormatSnippetNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB469FA4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB469FF0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 56);
  *a2 = *(_QWORD *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB46A03C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 72);
  *a2 = *(_QWORD *)(v3 + 64);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB46A088@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB46A0D4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB46A120@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSnippetNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatSnippetNode.__allocating_init(identifier:snippetIdentifier:name:description:selectors:options:blocks:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void _s8NewsFeed27FormatAccessibilityPropertyO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  int v1;

  if (*(_BYTE *)(a1 + 8))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X10 }
}

uint64_t sub_1BB46A1F0()
{
  char v0;
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  char v5;
  unint64_t v7;
  unint64_t v8;

  if (v2)
    v4 = 4;
  else
    v4 = 0;
  if ((v3 >> 60) & 3 | v4)
  {
    swift_retain();
    sub_1BA72F4F8(v3, v2);
    sub_1BA72E4D0(v1, v0);
    sub_1BA72E4D0(v3, v2);
    v5 = 0;
  }
  else
  {
    v7 = v3;
    v8 = v1;
    sub_1BA72F4F8(v3, v2);
    sub_1BA72F4F8(v1, v0);
    sub_1BA72F4F8(v1, v0);
    sub_1BA72F4F8(v3, v2);
    v5 = _s8NewsFeed26FormatAccessibilityContentO2eeoiySbAC_ACtFZ_0((uint64_t *)&v8, &v7);
    sub_1BA72E4D0(v1, v0);
    sub_1BA72E4D0(v3, v2);
    sub_1BA72E4D0(v3, v2);
    sub_1BA72E4D0(v1, v0);
  }
  return v5 & 1;
}

void sub_1BB46A360()
{
  int v0;
  unint64_t v1;
  int v2;

  if (v0)
    v2 = 4;
  else
    v2 = 0;
  if (((v1 >> 60) & 3 | v2) == 5)
    JUMPOUT(0x1BB46A22CLL);
  JUMPOUT(0x1BB46A258);
}

void sub_1BB46A380()
{
  char v0;
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (v2)
    v4 = 4;
  else
    v4 = 0;
  if (((v3 >> 60) & 3 | v4) == 6)
  {
    v5 = FormatAccessibilityTrait.rawValue.getter();
    v7 = v6;
    if (v5 != FormatAccessibilityTrait.rawValue.getter() || v7 != v8)
      sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA72E4D0(v1, v0);
    JUMPOUT(0x1BB46A33CLL);
  }
  JUMPOUT(0x1BB46A264);
}

unint64_t sub_1BB46A420(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB46A444();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB46A444()
{
  unint64_t result;

  result = qword_1EF2C4558;
  if (!qword_1EF2C4558)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityProperty, &type metadata for FormatAccessibilityProperty);
    atomic_store(result, (unint64_t *)&qword_1EF2C4558);
  }
  return result;
}

unint64_t sub_1BB46A488(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA72F62C();
  a1[2] = sub_1BA733370();
  result = sub_1BB46A4BC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB46A4BC()
{
  unint64_t result;

  result = qword_1EF2C4560;
  if (!qword_1EF2C4560)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityProperty, &type metadata for FormatAccessibilityProperty);
    atomic_store(result, (unint64_t *)&qword_1EF2C4560);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatAccessibilityProperty(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA72F4F8(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

unint64_t destroy for FormatAccessibilityProperty(uint64_t a1)
{
  return sub_1BA72E4D0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for FormatAccessibilityProperty(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA72F4F8(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA72E4D0(v5, v6);
  return a1;
}

uint64_t assignWithTake for FormatAccessibilityProperty(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA72E4D0(v5, v6);
  return a1;
}

uint64_t sub_1BB46A5E0(uint64_t a1)
{
  int v1;

  if (*(_BYTE *)(a1 + 8))
    v1 = 4;
  else
    v1 = 0;
  return (*(_QWORD *)a1 >> 60) & 3 | v1;
}

_QWORD *sub_1BB46A600(_QWORD *result)
{
  *result &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_1BB46A610(uint64_t result, char a2)
{
  *(_QWORD *)result = *(_QWORD *)result & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
  *(_BYTE *)(result + 8) = (a2 & 4) != 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatAccessibilityProperty()
{
  return &type metadata for FormatAccessibilityProperty;
}

uint64_t sub_1BB46A640()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_1BB86E854();
  type metadata accessor for FeedBannerAd();
  v1 = sub_1BB86ECBC();

  return v1;
}

uint64_t sub_1BB46A698(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  _QWORD v36[2];
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v46 = a6;
  v47 = a5;
  v48 = a4;
  v15 = sub_1BB86FE74();
  v45 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v43 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a7;
  v52 = a8;
  v53 = a9;
  v54 = a12;
  v42 = sub_1BB871680();
  v49 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v41 = (char *)v36 - v17;
  v51 = a7;
  v52 = a8;
  v53 = a9;
  v54 = a12;
  v44 = a12;
  v18 = sub_1BB8707B0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v36 - v20;
  v22 = swift_projectBox();
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    v37 = v21;
    v38 = v19;
    v39 = v18;
    v40 = v15;
    v24 = v22;
    v25 = *(_QWORD *)(type metadata accessor for FeedBannerAd() - 8);
    v26 = a1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    v50 = a8;
    v27 = *(_QWORD *)(v25 + 72);
    v36[1] = a1;
    swift_bridgeObjectRetain();
    v28 = v44;
    do
    {
      sub_1BB46A96C(v26, v24, a7, v50, a9, a10, a11, v28);
      v26 += v27;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v30 = v41;
    v29 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v41, v24, v42);
    v31 = v45;
    v32 = v43;
    v33 = v40;
    (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v43, *MEMORY[0x1E0DB7FA0], v40);
    v34 = v37;
    sub_1BB870774();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v29);
    v48(v34);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v34, v39);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E0DB9A20], v18);
    v48(v21);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
}

uint64_t sub_1BB46A96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  id v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v73 = a6;
  v82 = a1;
  MEMORY[0x1E0C80A78](a1);
  v72 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB871E3C();
  v70 = *(_QWORD *)(v14 - 8);
  v71 = v14;
  MEMORY[0x1E0C80A78](v14);
  v69 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB871A40();
  v66 = *(_QWORD *)(v16 - 8);
  v67 = v16;
  MEMORY[0x1E0C80A78](v16);
  v65 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1BB871A70();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v62 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = a3;
  v79 = a4;
  v80 = a5;
  v81 = a8;
  v19 = sub_1BB871680();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v59 - v21;
  v74 = a4;
  v75 = a8;
  v23 = sub_1BB86F778();
  v24 = sub_1BB873A2C();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v59 - v26;
  v28 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v29);
  v68 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v77 = (char *)&v59 - v32;
  swift_beginAccess();
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v76 = a2;
  v33(v22, a2, v19);
  sub_1BB871614();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v27, 1, v23) == 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v34 = (id)qword_1ED476858;
    v35 = sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BB87CE70;
    type metadata accessor for FeedBannerAd();
    v37 = sub_1BB872178();
    v39 = v38;
    *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v36 + 32) = v37;
    *(_QWORD *)(v36 + 40) = v39;
    sub_1BB86EF44("Failed to find placement=%{public}@", 35, 2, &dword_1BA493000, v34, v35, v36);

    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v77, v27, v23);
    v61 = v28;
    if (qword_1ED3BA7F0 != -1)
      swift_once();
    v41 = (void *)qword_1ED476858;
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1BB87A390;
    type metadata accessor for FeedBannerAd();
    v43 = v82;
    v60 = v41;
    v44 = sub_1BB872178();
    v46 = v45;
    *(_QWORD *)(v42 + 56) = MEMORY[0x1E0DEA968];
    v47 = sub_1BA6A2D8C();
    *(_QWORD *)(v42 + 64) = v47;
    *(_QWORD *)(v42 + 32) = v44;
    *(_QWORD *)(v42 + 40) = v46;
    v48 = v62;
    sub_1BB8721B4();
    v49 = v65;
    sub_1BB871A58();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v64);
    v50 = v69;
    sub_1BB871A34();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v67);
    sub_1BB871E30();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v50, v71);
    v51 = sub_1BB872A0C();
    v53 = v52;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v42 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v42 + 104) = v47;
    *(_QWORD *)(v42 + 72) = v51;
    *(_QWORD *)(v42 + 80) = v53;
    v54 = sub_1BB87330C();
    v55 = v60;
    sub_1BB86EF44("Integrating update for placement=%{public}@, state=%{public}@", 61, 2, &dword_1BA493000, v60, v54, v42);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v73 + 16))(v43, v74);
    v56 = v68;
    sub_1BB86F760();
    swift_beginAccess();
    v57 = v77;
    sub_1BB871638();
    swift_endAccess();
    v58 = *(void (**)(char *, uint64_t))(v61 + 8);
    v58(v56, v23);
    return ((uint64_t (*)(char *, uint64_t))v58)(v57, v23);
  }
}

uint64_t sub_1BB46AF60(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v22 = a4;
  v23 = a5;
  v24 = a6;
  v25 = a9;
  v11 = sub_1BB8707B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v21 - v13;
  if (qword_1ED3BA7F0 != -1)
    swift_once();
  v15 = (id)qword_1ED476858;
  v16 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
  v22 = 0;
  v23 = 0xE000000000000000;
  v21[1] = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  v18 = v22;
  v19 = v23;
  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 40) = v19;
  sub_1BB86EF44("Failed to integrate blueprint modify error=%{public}@", 53, 2, &dword_1BA493000, v15, v16, v17);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DB9A20], v11);
  a2(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1BB46B13C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_1BB8721C0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB871D7C();
  v10 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6D5338();
  sub_1BB871BC0();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, &v9[*(int *)(v7 + 20)], v3);
  sub_1BA735370((uint64_t)v9);
  sub_1BB872178();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1BB871D70();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 32));
  v13 = sub_1BB8720C4();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v16);
  return v13;
}

uint64_t sub_1BB46B2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1BB87216C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB872160();
  sub_1BA6D5338();
  sub_1BB871BD8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BB46B3BC()
{
  return sub_1BB46A640();
}

void sub_1BB46B3D4()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t TupleTypeMetadata2;
  uint64_t v2;

  if (!qword_1EF2C4568[0])
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
    sub_1BA4B07F0(255, &qword_1ED3B9378, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5B089C(255, (unint64_t *)&qword_1ED3B9670, (unint64_t *)&qword_1ED3BA030, MEMORY[0x1E0DEDAF0], v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2)
      atomic_store(TupleTypeMetadata2, qword_1EF2C4568);
  }
}

uint64_t sub_1BB46B484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BB871680();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BB46B524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  v10 = *(_QWORD *)(v2 + 56);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB871680() - 8) + 80);
  return sub_1BB46A698(a1, a2, *(_QWORD *)(v2 + 64), *(void (**)(char *))(v2 + 72), *(_QWORD *)(v2 + 80), v2 + ((v11 + 88) & ~v11), v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1BB46B5C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB46B5E8(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1BB46B618()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB46B63C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB46AF60(a1, *(void (**)(char *))(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1BB46B66C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_1BB46B674(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2 + 1;
    v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    v11(a1 + 8, v8, v10);
    v12 = *(int *)(a3 + 72);
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_1BB870AC8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

_QWORD *sub_1BB46B73C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  v7 = *(int *)(a3 + 72);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB870AC8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1BB46B7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 72);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1BB46B840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 72);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1BB46B8CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB46B8D8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB870AC8();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 72)], a2, v8);
  }
}

uint64_t sub_1BB46B954()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB46B960(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB870AC8();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 72)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB46B9D4(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3B0568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for FeedBannerAdBlueprintModifier.Errors()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BB46BA34()
{
  uint64_t v0;

  return sub_1BB46B13C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 104));
}

uint64_t sub_1BB46BA64()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA6D5338();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BB46BAD0()
{
  sub_1BA6D5338();
  return sub_1BB46B2E8();
}

uint64_t sub_1BB46BB44()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA6D5338();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BB46BBA4()
{
  sub_1BA6D5338();
  return sub_1BB871BCC();
}

uint64_t sub_1BB46BC00(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB46BC40 + 4 * byte_1BB91A400[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB46BC60 + 4 * byte_1BB91A405[v4]))();
}

_BYTE *sub_1BB46BC40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB46BC60(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB46BC68(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB46BC70(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB46BC78(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB46BC80(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1BB46BC8C()
{
  JUMPOUT(0x1BCCE5B24);
}

ValueMetadata *type metadata accessor for SportsStandingConcern()
{
  return &type metadata for SportsStandingConcern;
}

uint64_t sub_1BB46BCAC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

uint64_t type metadata accessor for ReportStandingConcernCommandHandler()
{
  return objc_opt_self();
}

void destroy for DebugFormatHistoryMeasurement(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for DebugFormatHistoryMeasurement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for DebugFormatHistoryMeasurement(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v4 = (void *)a2[3];
  v5 = (void *)a1[3];
  a1[3] = v4;
  v6 = v4;

  return a1;
}

_QWORD *assignWithTake for DebugFormatHistoryMeasurement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v5 = (void *)a1[3];
  a1[3] = a2[3];

  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatHistoryMeasurement()
{
  return &type metadata for DebugFormatHistoryMeasurement;
}

uint64_t sub_1BB46BEF8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3D51A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  result = sub_1BB86DF0C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, (unint64_t *)&unk_1ED3D5190);
    result = sub_1BB86DF48();
    if (v10)
    {
      type metadata accessor for LazyAuthTokenStore();
      v6 = swift_allocObject();
      sub_1BA4A2870(&qword_1ED3B07A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
      sub_1BA5D1B18();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B9240, (uint64_t (*)(uint64_t))sub_1BA5D1B18, MEMORY[0x1E0DEAF38]);
      swift_retain();
      sub_1BB873BC4();
      sub_1BA4B07F0(0, &qword_1ED3C47F8, (uint64_t (*)(uint64_t))sub_1BA4C7DCC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
      swift_allocObject();
      *(_QWORD *)(v6 + 16) = sub_1BB86E740();
      sub_1BA841784();
      v8 = v7;
      swift_allocObject();
      v9 = sub_1BB86E260();
      a2[3] = v8;
      a2[4] = sub_1BA4A2870((unint64_t *)&unk_1ED3C47A0, (uint64_t (*)(uint64_t))sub_1BA841784, MEMORY[0x1E0DB3B20]);
      result = swift_release();
      *a2 = v9;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB46C188@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, &qword_1ED3B9830);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39A0);
  result = sub_1BB86DF48();
  if (!v11)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, &qword_1ED3D39F0);
  result = sub_1BB86DF48();
  if (v9)
  {
    v6 = type metadata accessor for FeedContentPrefetchManager();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 104) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v7 + 16) = v5;
    sub_1BA4CECCC(&v10, v7 + 24);
    sub_1BA4CECCC(&v8, v7 + 64);
    a2[3] = v6;
    result = sub_1BA4A2870(&qword_1ED3C5F38, (uint64_t (*)(uint64_t))type metadata accessor for FeedContentPrefetchManager, (uint64_t)&unk_1BB8FEF08);
    a2[4] = result;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BB46C314(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v7[5];
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, &qword_1ED3D53A8);
  result = sub_1BB86DF48();
  v3 = v9;
  if (v9)
  {
    v4 = v10;
    v5 = __swift_project_boxed_opaque_existential_1(v8, v9);
    v7[3] = v3;
    v7[4] = *(_QWORD *)(v4 + 8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v7);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_0, v5, v3);
    sub_1BB86E4D0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BB46C3E8()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LocationDetectionManager()), sel_init);
}

uint64_t sub_1BB46C40C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA505288(0, &qword_1ED3B0800);
  result = sub_1BB86DF48();
  if (v4)
  {
    sub_1BA4CECCC(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1BA4A2870(&qword_1ED3CB078, (uint64_t (*)(uint64_t))type metadata accessor for LocationDetectionManager, (uint64_t)&protocol conformance descriptor for LocationDetectionManager);
    sub_1BB86E5F0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB46C4EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BA505288(0, &qword_1ED3D5790);
    result = sub_1BB86DF48();
    if (v9)
    {
      v6 = type metadata accessor for PuzzleTypeManager();
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = v5;
      result = sub_1BA4CECCC(&v8, v7 + 24);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1E7346D98;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB46C5F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v11;
  uint64_t v12;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B98F0);
  result = sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9900);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA505288(0, (unint64_t *)&unk_1ED3D59E0);
  result = sub_1BB86DF48();
  if (!v12)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3CF9D0);
  result = sub_1BB86DF3C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3BA810);
  result = sub_1BB86DF3C();
  if (result)
  {
    v8 = result;
    v9 = type metadata accessor for PuzzleNotificationAutoEnableManager();
    v10 = (_QWORD *)swift_allocObject();
    v10[7] = v5;
    result = sub_1BA4CECCC(&v11, (uint64_t)(v10 + 2));
    v10[8] = v6;
    v10[9] = v7;
    v10[10] = v8;
    a2[3] = v9;
    a2[4] = &off_1E72F16A8;
    *a2 = v10;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BB46C7E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[5];

  v0 = type metadata accessor for NSAttributedStringWarmupTask();
  v1 = swift_allocObject();
  v3[3] = v0;
  v3[4] = sub_1BA4A2870(&qword_1ED3CC818, (uint64_t (*)(uint64_t))type metadata accessor for NSAttributedStringWarmupTask, (uint64_t)&unk_1BB93DD00);
  v3[0] = v1;
  sub_1BB86E4D0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

_QWORD *sub_1BB46C868(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v6 = sub_1BB86E50C();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA82857C(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v18 - v11;
  v19[3] = type metadata accessor for SportsDataConfigurationService();
  v19[4] = &off_1E727F5F8;
  v19[0] = a1;
  v13 = type metadata accessor for SportsDataConfiguration();
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  sub_1BA53CD68((uint64_t)v12, (uint64_t)v9);
  sub_1BA4B07F0(0, &qword_1ED3C4848, (uint64_t (*)(uint64_t))sub_1BA82857C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4AE8]);
  swift_allocObject();
  v15 = sub_1BB86E86C();
  sub_1BA53CD1C((uint64_t)v12);
  a3[7] = v15;
  v14(v12, 1, 1, v13);
  sub_1BA53CD68((uint64_t)v12, (uint64_t)v9);
  swift_allocObject();
  v16 = sub_1BB86E86C();
  sub_1BA53CD1C((uint64_t)v12);
  a3[8] = v16;
  v18[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870(&qword_1ED3B07F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], MEMORY[0x1E0DB41A8]);
  sub_1BA539E4C(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9250, (uint64_t (*)(uint64_t))sub_1BA539E4C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  sub_1BA8418C4();
  swift_allocObject();
  a3[9] = sub_1BB86E0E0();
  sub_1BA4C010C((uint64_t)v19, (uint64_t)(a3 + 2));
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BA4A2870(&qword_1ED3CD310, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataConfigurationManager, (uint64_t)&unk_1BB8EB160);
  swift_retain();
  sub_1BB86E5F0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return a3;
}

uint64_t sub_1BB46CB3C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BB1F4F7C(a1);
}

void sub_1BB46CB44()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3C4808)
  {
    sub_1BB86C67C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    type metadata accessor for WebEmbedDataSourceWorkItem();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v0, MEMORY[0x1E0CB0018]);
    v1 = sub_1BB86E7B8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3C4808);
  }
}

char *OfflineManager.__allocating_init(offlineProvider:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return OfflineManager.init(offlineProvider:)(a1);
}

uint64_t OfflineManager.State.description.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
    return 0x656E696C66666FLL;
  else
    return 0x656E696C6E6FLL;
}

BOOL OfflineManager.isOnline.getter()
{
  return !OfflineManager.isOffline.getter();
}

id OfflineManager.clear()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  id v4;

  v1 = (_QWORD *)(v0 + qword_1EF2C4690);
  v2 = *(_QWORD *)(v0 + qword_1EF2C4690);
  *v1 = 0;
  v1[1] = 0;
  sub_1BA49EBE0(v2);
  return v4;
}

Swift::Void __swiftcall OfflineManager.triggerIfOffline()()
{
  uint64_t v0;
  void (*v1)(_QWORD *);
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[7];
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OfflineManager.state.getter((uint64_t)&v5);
  if (v6)
  {
    sub_1BA6D6924(v5, v6);
    v1 = *(void (**)(_QWORD *))(v0 + qword_1EF2C4690);
    if (v1)
    {
      swift_retain();
      OfflineManager.state.getter((uint64_t)&v5);
      v2 = v5;
      v3 = v6;
      v4[0] = v5;
      v4[1] = v6;
      v4[2] = v7;
      v4[3] = v8;
      v4[4] = v9;
      v4[5] = v10;
      v4[6] = v11;
      v1(v4);
      sub_1BA49EBE0((uint64_t)v1);
      sub_1BA6D6924(v2, v3);
    }
  }
}

void sub_1BB46CD80(void *a1)
{
  id v2;

  swift_unknownObjectRetain();
  v2 = a1;
  _s8NewsFeed14OfflineManagerC28networkReachabilityDidChangeyySo09FCNetworkF4Type_pSgF_0();
  swift_unknownObjectRelease();

}

id OfflineManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void OfflineManager.init()()
{
  sub_1BB46CF18();
}

void sub_1BB46CE08()
{
  sub_1BB46CF18();
}

id OfflineManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s8NewsFeed14OfflineManagerC28networkReachabilityDidChangeyySo09FCNetworkF4Type_pSgF_0()
{
  uint64_t v0;
  void (*v1)(_QWORD *);
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[7];
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void (**)(_QWORD *))(v0 + qword_1EF2C4690);
  if (v1)
  {
    swift_retain();
    OfflineManager.state.getter((uint64_t)&v6);
    v2 = v6;
    v3 = v7;
    v5[0] = v6;
    v5[1] = v7;
    v5[2] = v8;
    v5[3] = v9;
    v5[4] = v10;
    v5[5] = v11;
    v5[6] = v12;
    v1(v5);
    sub_1BA49EBE0((uint64_t)v1);
    return sub_1BA6D6924(v2, v3);
  }
  return result;
}

void sub_1BB46CF18()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t method lookup function for OfflineManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OfflineManager.__allocating_init(offlineProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

_QWORD *sub_1BB46CF58(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)a2;
    v6 = *((_OWORD *)a2 + 1);
    v7 = *((_OWORD *)a2 + 2);
    a1[6] = a2[6];
    *((_OWORD *)a1 + 1) = v6;
    *((_OWORD *)a1 + 2) = v7;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB46D0B8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB46D170(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t sub_1BB46D1C0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

double sub_1BB46D220(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

void sub_1BB46D36C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  unsigned int v9;
  double v10;
  double v11;
  uint64_t v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CGFloat v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  __objc2_class_ro *v40;
  unint64_t v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  void *v46;
  char v47;
  double v48;
  CGFloat v49;
  double v50;
  double v51;
  double v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 *v62;
  id v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  uint64_t v69;
  id v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  id v80;
  uint64_t v81;
  int *v82;
  id v83;
  int v84;
  id v85;
  double v86;
  id v87;
  void *v88;
  CGFloat v89;
  CGFloat v90;
  CGFloat v91;
  CGFloat v92;
  double Height;
  double Width;
  void *v95;
  void *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char v103;
  double v104;
  double v105;
  uint64_t v106;
  uint64_t v107;
  int64_t v108;
  uint64_t v109;
  unsigned int v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  int64_t v115;
  unint64_t v116;
  id v117;
  CGMutablePathRef Mutable;
  _QWORD v119[2];
  char v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  CGRect v134;
  CGRect v135;

  v112 = *(_QWORD *)a4;
  v113 = *(_QWORD *)(a4 + 8);
  v111 = *(_BYTE *)(a4 + 24);
  v5 = *(char *)(a4 + 25);
  v6 = *(_QWORD *)(a4 + 32);
  v7 = *(double *)a5;
  v8 = *(_QWORD *)(a5 + 8);
  v9 = *(char *)(a5 + 16);
  v128 = *(_QWORD *)(a4 + 16);
  swift_retain();
  FormatFloat.value(contextLayoutOptions:)();
  v11 = v10;
  swift_release();
  v12 = v128;
  v106 = v8;
  v110 = v9;
  v109 = *(_QWORD *)&v7;
  v13 = a2;
  v98 = v5;
  v100 = v6;
  if (v11 == 0.0)
    return;
  v14 = v9;
  if (v9 <= 0xFFFFFFFD)
  {
    v15 = v112;
    v16 = v113;
    v17 = v7;
    if ((v9 & 0x80000000) != 0)
      goto LABEL_74;
    v22 = *(_QWORD *)(v8 + 16);
    if (v22)
    {
      v23 = 0;
      v24 = (char *)(v8 + 32);
      v25 = (char *)(v8 + 32);
      v26 = *(_QWORD *)(v8 + 16);
      do
      {
        v27 = *v25++;
        v28 = qword_1BB91A738[v27];
        if ((v28 & ~v23) == 0)
          v28 = 0;
        v23 |= v28;
        --v26;
      }
      while (v26);
      if (v23 == -1)
        goto LABEL_74;
      v29 = 0;
      do
      {
        v30 = *v24++;
        v31 = qword_1BB91A738[v30];
        if ((v31 & ~v29) == 0)
          v31 = 0;
        v29 |= v31;
        --v22;
      }
      while (v22);
      if (v29 == 15)
      {
LABEL_74:
        v128 = v112;
        v129 = v113;
        v130 = v12;
        LOBYTE(v131) = v111;
        BYTE1(v131) = v98;
        v132 = v100;
        if ((sub_1BAB04A7C() & 1) != 0)
        {
          objc_msgSend(a2, sel_bounds);
          if ((v9 & 0x80000000) != 0)
          {
            v89 = v32;
            v90 = v33;
            v91 = v34;
            v92 = v35;
            Height = CGRectGetHeight(*(CGRect *)&v32);
            v135.origin.x = v89;
            v135.origin.y = v90;
            v135.size.width = v91;
            v135.size.height = v92;
            Width = CGRectGetWidth(v135);
            if (Width >= Height)
              Width = Height;
            v36 = Width * 0.5;
          }
          else
          {
            v36 = v7;
          }
          objc_msgSend(a2, sel_setCornerRadius_, v36, v98);
          v128 = v113;
          FormatColor.color.getter();
          v96 = v95;
          v20 = objc_msgSend(v95, sel_resolvedColorWithTraitCollection_, a3);

          v21 = objc_msgSend(v20, sel_CGColor);
          goto LABEL_69;
        }
      }
    }
  }
  else
  {
    v15 = v112;
    v16 = v113;
    v128 = v112;
    v129 = v113;
    v130 = v12;
    LOBYTE(v131) = v111;
    BYTE1(v131) = v98;
    v132 = v100;
    v17 = v7;
    if ((sub_1BAB04A7C() & 1) != 0)
    {
      v128 = v113;
      FormatColor.color.getter();
      v19 = v18;
      v20 = objc_msgSend(v18, sel_resolvedColorWithTraitCollection_, a3);

      v21 = objc_msgSend(v20, sel_CGColor);
LABEL_69:
      v97 = v21;

      objc_msgSend(a2, sel_setBorderColor_, v97);
      objc_msgSend(a2, sel_setBorderWidth_, v11);
      return;
    }
  }
  Mutable = CGPathCreateMutable();
  v107 = v15 + 56;
  v37 = 1 << *(_BYTE *)(v15 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v116 = v38 & *(_QWORD *)(v15 + 56);
  v108 = (unint64_t)(v37 + 63) >> 6;
  v101 = LOBYTE(v17) & 1;
  v104 = v17;
  v103 = v9 & 1;
  swift_bridgeObjectRetain();
  v39 = 0;
  v40 = &StubThumbnailProcessor;
  v105 = v11;
  while (1)
  {
    if (v116)
    {
      v41 = __clz(__rbit64(v116));
      v116 &= v116 - 1;
      v42 = v41 | (v39 << 6);
      goto LABEL_40;
    }
    v43 = v39 + 1;
    if (__OFADD__(v39, 1))
    {
      __break(1u);
LABEL_71:
      __break(1u);
      return;
    }
    if (v43 >= v108)
      goto LABEL_53;
    v44 = *(_QWORD *)(v107 + 8 * v43);
    ++v39;
    if (!v44)
    {
      v39 = v43 + 1;
      if (v43 + 1 >= v108)
        goto LABEL_53;
      v44 = *(_QWORD *)(v107 + 8 * v39);
      if (!v44)
      {
        v39 = v43 + 2;
        if (v43 + 2 >= v108)
          goto LABEL_53;
        v44 = *(_QWORD *)(v107 + 8 * v39);
        if (!v44)
          break;
      }
    }
LABEL_39:
    v116 = (v44 - 1) & v44;
    v42 = __clz(__rbit64(v44)) + (v39 << 6);
LABEL_40:
    v121 = *(_BYTE *)(*(_QWORD *)(v15 + 48) + v42);
    objc_msgSend(v13, v40[54].name, v98);
    v115 = v39;
    if (v14 <= 0xFFFFFFFD)
    {
      sub_1BA6F2B04(v109, v106, v14);
      objc_msgSend(v13, v40[54].name);
      v47 = v103;
      v46 = (void *)v106;
      v48 = v104;
      if ((v14 & 0x80000000) != 0)
      {
        v53 = v49;
        v54 = v50;
        v55 = v51;
        v56 = v52;
        v57 = CGRectGetHeight(*(CGRect *)&v49);
        v134.origin.x = v53;
        v134.origin.y = v54;
        v134.size.width = v55;
        v134.size.height = v56;
        v58 = CGRectGetWidth(v134);
        if (v58 >= v57)
          v58 = v57;
        v48 = v58 * 0.5;
        sub_1BA6E6CC4(v109, v106, v14);
        v47 = v101;
        v46 = &unk_1E724E3B8;
      }
      v11 = v105;
    }
    else
    {
      v46 = 0;
      v47 = 0;
      v48 = 0.0;
    }
    *(double *)v119 = v48;
    v119[1] = v46;
    v120 = v47;
    sub_1BB69570C((uint64_t)v119);
    v60 = v59;
    swift_bridgeObjectRelease();
    v61 = *(_QWORD *)(v60 + 16);
    if (v61)
    {
      v62 = (unsigned __int8 *)(v60 + 64);
      do
      {
        v65 = (void *)*((_QWORD *)v62 - 4);
        v64 = *((_QWORD *)v62 - 3);
        v67 = *((_QWORD *)v62 - 2);
        v66 = *((_QWORD *)v62 - 1);
        v68 = *v62;
        if (*v62)
        {
          sub_1BB1293B0(*((id *)v62 - 4), *((_QWORD *)v62 - 3), *((_QWORD *)v62 - 2), *((_QWORD *)v62 - 1), *v62);
          v63 = objc_msgSend(v65, sel_CGPath);
          v129 = 0;
          v130 = 0;
          v128 = 0x3FF0000000000000;
          v131 = 0x3FF0000000000000;
          v132 = 0;
          v133 = 0;
          sub_1BB873330();
          sub_1BB1293C8(v65, v64, v67, v66, v68);

        }
        else
        {
          sub_1BAB6EA48();
          v69 = swift_allocObject();
          *(_OWORD *)(v69 + 16) = xmmword_1BB87A390;
          *(_QWORD *)(v69 + 32) = v65;
          *(_QWORD *)(v69 + 40) = v64;
          *(_QWORD *)(v69 + 48) = v67;
          *(_QWORD *)(v69 + 56) = v66;
          v123 = 0;
          v124 = 0;
          v122 = 0x3FF0000000000000;
          v125 = 0x3FF0000000000000;
          v126 = 0;
          v127 = 0;
          sub_1BB873360();
          swift_bridgeObjectRelease();
        }
        v62 += 40;
        --v61;
      }
      while (v61);
    }
    swift_bridgeObjectRelease();
    v16 = v113;
    v13 = a2;
    v40 = &StubThumbnailProcessor;
    v15 = v112;
    v14 = v110;
    v39 = v115;
  }
  v45 = v43 + 3;
  if (v45 < v108)
  {
    v44 = *(_QWORD *)(v107 + 8 * v45);
    if (!v44)
    {
      while (1)
      {
        v39 = v45 + 1;
        if (__OFADD__(v45, 1))
          goto LABEL_71;
        if (v39 >= v108)
          goto LABEL_53;
        v44 = *(_QWORD *)(v107 + 8 * v39);
        ++v45;
        if (v44)
          goto LABEL_39;
      }
    }
    v39 = v45;
    goto LABEL_39;
  }
LABEL_53:
  swift_release();
  v70 = (id)sub_1BB6C20D0();
  if (!v70)
    v70 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatBorderLayer()), sel_init);
  v71 = v70;
  objc_msgSend(v70, sel_setPath_, Mutable, v98);
  v72 = (void *)objc_opt_self();
  v73 = v71;
  v74 = objc_msgSend(v72, sel_clearColor);
  v75 = objc_msgSend(v74, sel_CGColor);

  objc_msgSend(v73, sel_setFillColor_, v75);
  v119[0] = v16;
  v76 = v73;
  FormatColor.color.getter();
  v78 = v77;
  v79 = objc_msgSend(v77, sel_resolvedColorWithTraitCollection_, a3);

  v80 = objc_msgSend(v79, sel_CGColor);
  objc_msgSend(v76, sel_setStrokeColor_, v80);

  objc_msgSend(v76, sel_setLineWidth_, v11);
  v119[0] = MEMORY[0x1E0DEE9D8];
  v81 = *(_QWORD *)(v100 + 16);
  if (v81)
  {
    v82 = (int *)(v100 + 32);
    v83 = v76;
    swift_bridgeObjectRetain();
    do
    {
      v84 = *v82;
      v85 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      LODWORD(v86) = v84;
      if (objc_msgSend(v85, sel_initWithFloat_, v86))
      {
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v119[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v119[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      ++v82;
      --v81;
    }
    while (v81);
  }
  else
  {
    v87 = v76;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  v88 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v76, sel_setLineDashPattern_, v88);

  objc_msgSend(v76, sel_setLineCap_, **((_QWORD **)&unk_1E73123C8 + v99));
  v117 = v76;
  objc_msgSend(v13, sel_bounds);
  objc_msgSend(v117, sel_setFrame_);

  objc_msgSend(v13, sel_addSublayer_, v117);
}

uint64_t sub_1BB46DD40(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1BB46DE58(a1, a2);
  return v4;
}

uint64_t sub_1BB46DD94()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_1BB86F10C();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v1 + 104))(v4, *MEMORY[0x1E0DB2A18], v0, v2);
  sub_1BB86F304();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t *sub_1BB46DE58(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  id v40;
  id v41;
  _QWORD aBlock[6];
  id v43;

  v4 = v2;
  v7 = *v2;
  v8 = sub_1BB86F10C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86D294();
  sub_1BB86D27C();
  if (qword_1ED39E2A8 != -1)
    swift_once();
  sub_1BB86D270();
  swift_release();
  if (LOBYTE(aBlock[0]) != 1)
  {
    sub_1BB025BE8();
    swift_allocError();
    *(_OWORD *)v14 = xmmword_1BB8D2D80;
    *(_BYTE *)(v14 + 16) = 7;
    swift_willThrow();

    goto LABEL_8;
  }
  v2[8] = (uint64_t)a1;
  v2[9] = a2;
  sub_1BA5C6D50();
  v12 = a1;
  swift_retain();
  v13 = sub_1BB86F2F8();
  if (!v3)
  {
    v2[2] = v13;
    sub_1BA5C6D94();
    v15 = sub_1BB86F2F8();
    v43 = v12;
    v2[3] = v15;
    sub_1BA5C6C84();
    v2[4] = sub_1BB86F2F8();
    sub_1BA5C6CC8();
    v2[5] = sub_1BB86F2F8();
    sub_1BA5C6D0C();
    v2[6] = sub_1BB86F2F8();
    sub_1BA5C6DD8();
    v2[7] = sub_1BB86F2F8();
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
    v40 = v17;
    v18 = (void *)sub_1BB872970();
    objc_msgSend(v17, sel_setName_, v18);

    objc_msgSend(v17, sel_setMaxConcurrentOperationCount_, 1);
    objc_msgSend(v17, sel_setQualityOfService_, 25);
    objc_msgSend(v17, sel_setSuspended_, 1);
    v4[10] = (uint64_t)v17;
    v41 = (id)objc_opt_self();
    v19 = swift_allocObject();
    swift_weakInit();
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = *(_QWORD *)(v7 + 80);
    v20[3] = *(_QWORD *)(v7 + 88);
    v20[4] = v19;
    aBlock[4] = sub_1BB46EA4C;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4F1DD8;
    aBlock[3] = &block_descriptor_72;
    v21 = _Block_copy(aBlock);
    v40 = v40;
    swift_release();
    objc_msgSend(v41, sel_scheduleLowPriorityBlock_, v21);
    _Block_release(v21);
    if (qword_1ED39E290 != -1)
      swift_once();
    MEMORY[0x1BCCE5B24](&unk_1BB91A830, v7);
    sub_1BB86D210();
    LODWORD(v41) = LOBYTE(aBlock[0]);
    if (qword_1ED39E298 != -1)
      swift_once();
    sub_1BB86D210();
    v22 = LOBYTE(aBlock[0]);
    v23 = sub_1BB86F2B0();
    v39 = v22;
    v24 = v23;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v37 = v25;
    v26 = swift_allocObject();
    v36 = xmmword_1BB87A390;
    *(_OWORD *)(v26 + 16) = xmmword_1BB87A390;
    v27 = MEMORY[0x1E0DEB418];
    v28 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v26 + 64) = v28;
    v38 = v24;
    *(_QWORD *)(v26 + 32) = v24;
    v29 = v27;
    *(_QWORD *)(v26 + 96) = v27;
    *(_QWORD *)(v26 + 104) = v28;
    *(_QWORD *)(v26 + 72) = 9;
    sub_1BB87330C();
    sub_1BB86EF44("Feed database current user version %ld, latest version %ld", (_QWORD)v36, *((_QWORD *)&v36 + 1));
    swift_bridgeObjectRelease();
    if ((v41 & 1) != 0 || (v39 & 1) != 0)
    {
      LOBYTE(aBlock[0]) = 0;
      MEMORY[0x1BCCE5B24](&unk_1BB91A7F0, v7);
      sub_1BB86D3F0();
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v36;
      v32 = MEMORY[0x1E0DEAFA0];
      v33 = MEMORY[0x1E0DEAFD8];
      *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(v31 + 64) = v33;
      *(_BYTE *)(v31 + 32) = (_BYTE)v41;
      *(_QWORD *)(v31 + 96) = v32;
      *(_QWORD *)(v31 + 104) = v33;
      *(_BYTE *)(v31 + 72) = v39;
      sub_1BB87330C();
      v30 = v43;
      sub_1BB86EF44("Feed database will erase all due to internal settings, clearOnEveryLaunch=%d, clearOnNextLaunch=%d", (_DWORD)v36, DWORD2(v36));
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v38 == 9)
      {
        v30 = v43;
LABEL_22:

        swift_release();
        return v4;
      }
      v34 = sub_1BB87330C();
      v30 = v43;
      sub_1BB86EF44("Feed database will erase all due to version change", 50, 2, &dword_1BA493000, v43, v34, MEMORY[0x1E0DEE9D8]);
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB2A18], v8);
    sub_1BB86F304();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (v38 != 9)
    {
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v35 + 56) = v29;
      *(_QWORD *)(v35 + 64) = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v35 + 32) = 9;
      sub_1BB87330C();
      sub_1BB86EF44("Feed database setting user version to %ld", (_QWORD)v36);
      swift_bridgeObjectRelease();
      sub_1BB86F2D4();
    }
    goto LABEL_22;
  }

  swift_release();
LABEL_8:
  swift_release();
  swift_deallocPartialClassInstance();
  return v4;
}

void sub_1BB46E6C8()
{
  uint64_t Strong;
  id v1;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = *(id *)(Strong + 80);
    swift_release();
    objc_msgSend(v1, sel_setSuspended_, 0);

  }
}

uint64_t sub_1BB46E73C()
{
  uint64_t v0;

  sub_1BB86F1CC();
  sub_1BB86F190();
  if (!v0)
  {
    swift_release();
    sub_1BB86F1F0();
    sub_1BB86F250();
    swift_release();
    sub_1BB86F1CC();
    sub_1BB86F190();
    swift_release();
    sub_1BB86F1F0();
    sub_1BB86F250();
    swift_release();
    sub_1BB86F1CC();
    sub_1BB86F190();
    swift_release();
    sub_1BB86F1F0();
    sub_1BB86F250();
    swift_release();
    sub_1BB86F1CC();
    sub_1BB86F190();
    swift_release();
    sub_1BB86F1F0();
    sub_1BB86F250();
    swift_release();
    sub_1BB86F1CC();
    sub_1BB86F190();
    swift_release();
    sub_1BB86F1F0();
    sub_1BB86F250();
    swift_release();
    sub_1BB86F1CC();
    sub_1BB86F190();
    swift_release();
    sub_1BB86F1F0();
    sub_1BB86F250();
  }
  return swift_release();
}

uint64_t sub_1BB46E978()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v0;
}

uint64_t sub_1BB46E9D4()
{
  sub_1BB46E978();
  return swift_deallocClassInstance();
}

void sub_1BB46E9F4()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BB46EA04()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB46EA28()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BB46EA4C()
{
  sub_1BB46E6C8();
}

uint64_t sub_1BB46EA58()
{
  return sub_1BB46E73C();
}

uint64_t sub_1BB46EA70()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB46EA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  sub_1BA75C064(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1BA75BCB4(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4C2DD8(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_1BB46EB9C + 4 * byte_1BB91A870[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB46EB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
  *(_OWORD *)v0 = xmmword_1BB8D2D90;
  *(_BYTE *)(v0 + 16) = 0;
  return result;
}

void sub_1BB46EC90()
{
  uint64_t v0;
  uint64_t v1;

  *(_OWORD *)v0 = xmmword_1BB8D2DA0;
  *(_BYTE *)(v0 + 16) = 0;
  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
  JUMPOUT(0x1BB46EC74);
}

void sub_1BB46ECB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = swift_projectBox();
  sub_1BA4C2DD8(v3, v1, (uint64_t (*)(_QWORD))sub_1BA75BCB4);
  sub_1BA4C2DD8(v1 + *(int *)(v2 + 36), v0, (uint64_t (*)(_QWORD))sub_1BA75C064);
  sub_1BB46EA9C();
  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))sub_1BA75BCB4);
  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
  swift_release();
  JUMPOUT(0x1BB46EC74);
}

void sub_1BB46ED1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t (*v7)(void);

  sub_1BAC68BE0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, v7);
  JUMPOUT(0x1BB46EC18);
}

void sub_1BB46ED3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t (*v7)(void);

  sub_1BAC68BE0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, v7);
  JUMPOUT(0x1BB46EC6CLL);
}

void sub_1BB46ED64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t (*v7)(void);

  sub_1BAC68BE0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, v7);
  JUMPOUT(0x1BB46EC64);
}

void sub_1BB46ED84(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  char *v27;
  _QWORD v28[7];
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v36 = a1;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6450]);
  v28[5] = v2;
  v28[4] = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v28[3] = (char *)v28 - v3;
  v29 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v29);
  v30 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA75BCB4(0);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v7);
  v31 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3D2BC0, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementResult);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v28[6] = (char *)v28 - v12;
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  MEMORY[0x1E0C80A78](v15);
  v28[2] = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v28[1] = (char *)v28 - v18;
  v19 = type metadata accessor for FormatOptionsNodeStatementResult();
  v33 = *(_QWORD *)(v19 - 8);
  v34 = v19;
  MEMORY[0x1E0C80A78](v19);
  v28[0] = (char *)v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v22 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  sub_1BA4C2DD8(v37, (uint64_t)v28 - v25, v26);
  v27 = (char *)sub_1BB46F0F4 + 4 * byte_1BB91A87E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB46F0F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *v1;
  v4 = sub_1BA793D58();
  v5 = *(_QWORD *)(v2 - 168);
  v6 = sub_1BA728610(v4, v3);
  if (v5)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v7 = v6;
  swift_release();
  v8 = type metadata accessor for FormatVersionRequirement(0);
  v9 = *(_QWORD *)(v2 - 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v9, 1, 1, v8);
  v10 = swift_allocObject();
  v11 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v11;
  v12 = sub_1BA7A9434(v3);
  if (!v12)
    goto LABEL_8;
  if (!v12[2])
  {
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    v13 = 1;
    goto LABEL_9;
  }
  v13 = sub_1BA6E43EC((uint64_t)v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  *v0 = v10 | 0x4000000000000000;
  v0[1] = v13;
  sub_1BA8D81BC(v9, (uint64_t)v0 + *(int *)(*(_QWORD *)(v2 - 208) + 24));
  v15 = *(_QWORD *)(v2 - 200);
  sub_1BA5193C4((uint64_t)v0, v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementResult);
  v16 = type metadata accessor for FormatOptionsNodeStatementEvaluation();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
}

void static FormatOptionsNodeStatementValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[7];
  uint64_t v27;
  char *v28;

  v27 = a1;
  v28 = (char *)a2;
  sub_1BA75BCB4(0);
  v26[0] = v2;
  MEMORY[0x1E0C80A78](v2);
  v26[2] = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v26[3] = (char *)v26 - v5;
  v6 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v6);
  v26[1] = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1E0C80A78](v8);
  v26[5] = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v26[6] = (char *)v26 - v11;
  MEMORY[0x1E0C80A78](v12);
  v26[4] = (char *)v26 - v13;
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  sub_1BB470370();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t)&v22[*(int *)(v23 + 48)];
  sub_1BA4C2DD8(v27, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
  v27 = v24;
  sub_1BA4C2DD8((uint64_t)v28, v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
  v28 = v22;
  v25 = (char *)sub_1BB46FC44 + 4 * word_1BB91A888[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB46FC44()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t (*v6)(_QWORD);

  v2 = *(_QWORD *)(v1 - 208);
  sub_1BA4C2DD8(v2, (uint64_t)v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
  v3 = *v0;
  v4 = *(uint64_t **)(v1 - 216);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    v5 = 0;
    v6 = (uint64_t (*)(_QWORD))sub_1BB470370;
  }
  else
  {
    v5 = sub_1BA882E70(v3, *v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue;
  }
  sub_1BA4A2E80(v2, v6);
  return v5 & 1;
}

void sub_1BB470370()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C4700)
  {
    type metadata accessor for FormatOptionsNodeStatementValue();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C4700);
  }
}

void sub_1BB4703D0(char *a1)
{
  sub_1BB7EF508(*a1);
}

uint64_t sub_1BB4703DC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D1618((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB470420(uint64_t a1)
{
  char *v1;

  sub_1BA9D1618(a1, *v1);
}

uint64_t sub_1BB470428()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D1618((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BB470468()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB8745D8();
  if (v1 != 12)
  {
    FormatOptionType.rawValue.getter();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
  }
  return sub_1BB874608();
}

uint64_t sub_1BB4704EC()
{
  _BYTE *v0;

  if (*v0 == 12)
    return sub_1BB8745D8();
  sub_1BB8745D8();
  FormatOptionType.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB470578()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB8745D8();
  if (v1 != 12)
  {
    FormatOptionType.rawValue.getter();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
  }
  return sub_1BB874608();
}

_QWORD *sub_1BB470600(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain_n();
  v3 = (_BYTE *)(a1 + 40);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if ((*v3 & 1) == 0)
    {
      v6 = *((_QWORD *)v3 - 1);
      if (v6 < 0)
      {
        v8 = *(_QWORD *)(v6 + 16);
        v7 = *(_QWORD *)(v6 + 24);
        swift_bridgeObjectRetain_n();
        sub_1BA7E8124(v6, 0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_1BA6EA0D0(0, v4[2] + 1, 1, v4);
        v10 = v4[2];
        v9 = v4[3];
        if (v10 >= v9 >> 1)
          v4 = sub_1BA6EA0D0((_QWORD *)(v9 > 1), v10 + 1, 1, v4);
        v4[2] = v10 + 1;
        v5 = &v4[2 * v10];
        v5[4] = v8;
        v5[5] = v7;
        swift_bridgeObjectRelease();
        sub_1BA72C46C(v6, 0);
      }
    }
    v3 += 16;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease_n();
  return v4;
}

uint64_t sub_1BB47072C(uint64_t a1)
{
  sub_1BAC68BE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int16 *)(a1 + 48), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, (uint64_t (*)(void))sub_1BA5A7EF8);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatOptionsNodeStatementValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BB4707E0 + 4 * byte_1BB91A8DE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t assignWithCopy for FormatOptionsNodeStatementValue(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BA4A2E80(result, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
    v2 = (char *)&loc_1BB470AEC + 4 * byte_1BB91A902[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for FormatOptionsNodeStatementValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 7)
  {
    v6 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v7 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for FormatOptionsNodeStatementValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      v6 = type metadata accessor for FormatURL();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        v7 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatOptionsNodeStatementValue.CodingValidationType(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
  {
    v6 = *a1;
    v7 = v6 >= 0xC;
    v8 = v6 - 12;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 12;
    if (a2 + 12 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BB470FBC + 4 * byte_1BB91A90B[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FormatOptionsNodeStatementValue.CodingValidationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 12;
  if (a3 + 12 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF4)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BB471064 + 4 * byte_1BB91A915[v5]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BB471098 + 4 * byte_1BB91A910[v5]))();
}

uint64_t sub_1BB471098(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4710A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4710A8);
  return result;
}

uint64_t sub_1BB4710B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4710BCLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BB4710C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4710C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1BB4710D4(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 11;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionsNodeStatementValue.CodingValidationType()
{
  return &type metadata for FormatOptionsNodeStatementValue.CodingValidationType;
}

ValueMetadata *type metadata accessor for FormatOptionsNodeStatementValue.CodingType()
{
  return &type metadata for FormatOptionsNodeStatementValue.CodingType;
}

unint64_t sub_1BB471108()
{
  unint64_t result;

  result = qword_1EF2C4708;
  if (!qword_1EF2C4708)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AB60, &type metadata for FormatOptionsNodeStatementValue.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2C4708);
  }
  return result;
}

uint64_t sub_1BB47114C(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a2;
  if (*a1 == 12)
  {
    if (v2 == 12)
    {
      v3 = 1;
      return v3 & 1;
    }
LABEL_5:
    v3 = 0;
    return v3 & 1;
  }
  if (v2 == 12)
    goto LABEL_5;
  v4 = FormatOptionType.rawValue.getter();
  v6 = v5;
  if (v4 == FormatOptionType.rawValue.getter() && v6 == v7)
    v3 = 1;
  else
    v3 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1BB471214(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, &qword_1ED3D2BC0, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementResult);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB471260()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB471294()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for DebugJournalSectionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB471308 + 4 * byte_1BB91AC25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB47133C + 4 * byte_1BB91AC20[v4]))();
}

uint64_t sub_1BB47133C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB471344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB47134CLL);
  return result;
}

uint64_t sub_1BB471358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB471360);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB471364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB47136C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugJournalSectionState()
{
  return &type metadata for DebugJournalSectionState;
}

unint64_t sub_1BB47138C()
{
  unint64_t result;

  result = qword_1EF2C4710;
  if (!qword_1EF2C4710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AC8C, &type metadata for DebugJournalSectionState);
    atomic_store(result, (unint64_t *)&qword_1EF2C4710);
  }
  return result;
}

id sub_1BB4713D4()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for Images();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1ED3B8FE8 = (uint64_t)result;
  return result;
}

void sub_1BB471424(uint64_t a1)
{
  sub_1BB471508(a1, 0xD00000000000001ELL, 0x80000001BB98E050, &qword_1ED3BA850);
}

id static Images.audioTrackThumbnailFallback.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7210, (id *)&qword_1ED3BA850);
}

void sub_1BB471464(uint64_t a1)
{
  sub_1BB471508(a1, 0xD000000000000013, 0x80000001BB98E030, &qword_1EF2C4718);
}

id static Images.audioBadge.getter()
{
  return sub_1BA4B72EC(qword_1EF2A7218, (id *)&qword_1EF2C4718);
}

void sub_1BB4714A4(uint64_t a1)
{
  sub_1BB471508(a1, 0xD000000000000013, 0x80000001BB98E010, &qword_1ED3B8FE0);
}

id static Images.brandedAudioBadge.getter()
{
  return sub_1BA4B72EC(qword_1ED3BA7E0, (id *)&qword_1ED3B8FE0);
}

void sub_1BB4714E4(uint64_t a1)
{
  sub_1BB471508(a1, 0x6E6F687064616568, 0xEA00000000007365, &qword_1ED39D8E0);
}

void sub_1BB471508(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v5;
  void *v6;
  id v7;

  if (qword_1ED3BB488 != -1)
    swift_once();
  v5 = (id)qword_1ED3B8FE8;
  v6 = (void *)sub_1BB872970();
  v7 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v6, v5, 0);

  if (v7)
    *a4 = v7;
  else
    __break(1u);
}

id static Images.headphones.getter()
{
  return sub_1BA4B72EC(&qword_1ED39E208, (id *)&qword_1ED39D8E0);
}

void static Images.moreActionsButton(tint:pointSize:)(uint64_t a1, double a2)
{
  sub_1BB471680(a1, a2, 0x73697370696C6C65, 0xEF656C637269632ELL, 4);
}

void static Images.moreActionsButtonCompact(tint:pointSize:)(uint64_t a1, double a2)
{
  sub_1BB471680(a1, a2, 0x73697370696C6C65, 0xE800000000000000, 4);
}

void static Images.followButtonPlus(tint:pointSize:)(uint64_t a1, double a2)
{
  sub_1BB471680(a1, a2, 1937075312, 0xE400000000000000, 8);
}

void static Images.followButtonCheckmark(tint:pointSize:)(uint64_t a1, double a2)
{
  sub_1BB471680(a1, a2, 0x72616D6B63656863, 0xE90000000000006BLL, 8);
}

void sub_1BB471680(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  id v9;
  id v10;
  id v11;

  v8 = (void *)sub_1BB872970();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v8);

  if (v9)
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_, a5, a2);
    v11 = objc_msgSend(v9, sel_imageWithConfiguration_, v10);

    objc_msgSend(v11, sel_imageWithTintColor_renderingMode_, a1, 1);
  }
  else
  {
    __break(1u);
  }
}

void sub_1BB471778(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x662E64756F6C6369, 0xEB000000006C6C69, &qword_1ED476400);
}

void static Images.myMagazinesCloud(tint:pointSize:)(uint64_t a1, double a2)
{
  sub_1BB471680(a1, a2, 0x662E64756F6C6369, 0xEB000000006C6C69, 6);
}

void sub_1BB4717D4(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x69632E6B72616D78, 0xEC000000656C6372, &qword_1ED39E270);
}

id static Images.stopSuggesting.getter()
{
  return sub_1BA4B72EC(qword_1ED3ABB78, (id *)&qword_1ED39E270);
}

void sub_1BB471834(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x7269632E73756C70, 0xEB00000000656C63, &qword_1ED39D910);
}

id static Images.followChannelActivity.getter()
{
  return sub_1BA4B72EC(&qword_1ED3AAB30, (id *)&qword_1ED39D910);
}

void sub_1BB471894(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000015, 0x80000001BB96AB10, &qword_1ED39D918);
}

id static Images.unfollowChannelActivity.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7228, (id *)&qword_1ED39D918);
}

void sub_1BB4718F0(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x69632E73756E696DLL, 0xEC000000656C6372, &qword_1EF2C4720);
}

id static Images.unfollowChannelActivity2.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7230, (id *)&qword_1EF2C4720);
}

void sub_1BB471950(uint64_t a1)
{
  sub_1BB4722F8(a1, 1918989427, 0xE400000000000000, &qword_1EF2C4728);
}

id static Images.shortcutTagActivity.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7238, (id *)&qword_1EF2C4728);
}

void sub_1BB4719A0(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x616C732E72617473, 0xEF6C6C69662E6873, &qword_1EF2C4730);
}

id static Images.unShortcutTagActivity.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7240, (id *)&qword_1EF2C4730);
}

void sub_1BB471A04(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x6961722E646E6168, 0xEB00000000646573, &qword_1ED39D8E8);
}

id static Images.blockActivity.getter()
{
  return sub_1BA4B72EC(&qword_1ED3AAB28, (id *)&qword_1ED39D8E8);
}

void sub_1BB471A64(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000016, 0x80000001BB98DFF0, &qword_1EF2C4738);
}

id static Images.unblockActivity.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7250, (id *)&qword_1EF2C4738);
}

void sub_1BB471AC0(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x7568742E646E6168, 0xED0000707573626DLL, &qword_1ED39BD78);
}

id static Images.showMoreActivity.getter()
{
  return sub_1BA4B72EC(&qword_1ED39E9D8, (id *)&qword_1ED39BD78);
}

void sub_1BB471B24(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000012, 0x80000001BB98DFD0, &qword_1ED39BD80);
}

id static Images.showMoreSelectedActivity.getter()
{
  return sub_1BA4B72EC(&qword_1ED39E9F0, (id *)&qword_1ED39BD80);
}

void sub_1BB471B80(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x7568742E646E6168, 0xEF6E776F6473626DLL, &qword_1ED39D8F8);
}

id static Images.showLessActivity.getter()
{
  return sub_1BA4B72EC(&qword_1ED39E9C8, (id *)&qword_1ED39D8F8);
}

void sub_1BB471BE4(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000014, 0x80000001BB98DFB0, &qword_1ED39D920);
}

id static Images.showLessSelectedActivity.getter()
{
  return sub_1BA4B72EC(&qword_1ED39E9E0, (id *)&qword_1ED39D920);
}

void sub_1BB471C40(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x6B72616D6B6F6F62, 0xE800000000000000, &qword_1ED3B02E8);
}

id static Images.saveActivity.getter()
{
  return sub_1BA4B72EC(&qword_1ED3BB478, (id *)&qword_1ED3B02E8);
}

void sub_1BB471C98(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x6B72616D6B6F6F62, 0xED00006C6C69662ELL, &qword_1EF2C4740);
}

id static Images.saveSelectedActivity.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7260, (id *)&qword_1EF2C4740);
}

void sub_1BB471CFC(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD00000000000001BLL, 0x80000001BB98DF90, &qword_1EF2C4748);
}

id static Images.reload.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7268, (id *)&qword_1EF2C4748);
}

void sub_1BB471D58(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x69632E6B72616D78, 0xEC000000656C6372, &qword_1EF2C4750);
}

id static Images.ignoreSuggestionActivity.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7270, (id *)&qword_1EF2C4750);
}

void sub_1BB471D9C(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000011, 0x80000001BB963780, &qword_1EF2C4758);
}

id static Images.stopIgnoringSuggestionActivity.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7278, (id *)&qword_1EF2C4758);
}

void sub_1BB471DDC(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000013, 0x80000001BB96D9B0, &qword_1ED39ECC0);
}

id static Images.iconArticleMarkingShare.getter()
{
  return sub_1BA4B72EC(&qword_1ED39ECD0, (id *)&qword_1ED39ECC0);
}

void sub_1BB471E1C(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000013, 0x80000001BB96D9B0, &qword_1ED3AF888);
}

id static Images.sharrow.getter()
{
  return sub_1BA4B72EC(&qword_1ED3AFB38, (id *)&qword_1ED3AF888);
}

void sub_1BB471E5C(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000015, 0x80000001BB98AE90, &qword_1ED3AF868);
}

id static Images.downloadIssueActivity.getter()
{
  return sub_1BA4B72EC(&qword_1ED3AFB30, (id *)&qword_1ED3AF868);
}

void sub_1BB471E9C(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x6873617274, 0xE500000000000000, &qword_1ED3AF880);
}

id static Images.removeIssueActivity.getter()
{
  return sub_1BA4B72EC(&qword_1ED3AFB28, (id *)&qword_1ED3AF880);
}

void sub_1BB471ED4(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000010, 0x80000001BB98DF70, &qword_1EF2C4760);
}

id static Images.removeIssueFromMyMagazinesActivity.getter()
{
  return sub_1BA4B72EC(qword_1EF2A7280, (id *)&qword_1EF2C4760);
}

void sub_1BB471F14(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD00000000000001ALL, 0x80000001BB97D040, &qword_1ED3AFB10);
}

id static Images.openChannelActivity.getter()
{
  return sub_1BA4B72EC(&qword_1ED3AFB18, (id *)&qword_1ED3AFB10);
}

void sub_1BB471F54(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD00000000000001ALL, 0x80000001BB97D040, &qword_1EF2C4768);
}

id static Images.openPuzzleFullArchive.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7290, (id *)&qword_1EF2C4768);
}

void sub_1BB471F94(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000016, 0x80000001BB9631F0, &qword_1ED39ECB0);
}

id static Images.reportActivity.getter()
{
  return sub_1BA4B72EC(&qword_1ED39ECB8, (id *)&qword_1ED39ECB0);
}

void sub_1BB471FD4(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x657070612E636F64, 0xEA0000000000646ELL, &qword_1EF2C4770);
}

id static Images.readStory.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72A0, (id *)&qword_1EF2C4770);
}

void sub_1BB472014(uint64_t a1)
{
  sub_1BB4722F8(a1, 1802398060, 0xE400000000000000, &qword_1EF2C4778);
}

id static Images.copyLinkActivity.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72A8, (id *)&qword_1EF2C4778);
}

void sub_1BB472048(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x697261666173, 0xE600000000000000, &qword_1EF2C4780);
}

id static Images.openInSafariActivity.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72B0, (id *)&qword_1EF2C4780);
}

void sub_1BB472080(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x6C69662E79616C70, 0xE90000000000006CLL, &qword_1EF2C4788);
}

id static Images.play.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72B8, (id *)&qword_1EF2C4788);
}

void sub_1BB4720C0(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x736E692E74786574, 0xEB00000000747265, &qword_1EF2C4790);
}

id static Images.playNext.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72C0, (id *)&qword_1EF2C4790);
}

void sub_1BB472104(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x7070612E74786574, 0xEB00000000646E65, &qword_1EF2C4798);
}

id static Images.playLast.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72C8, (id *)&qword_1EF2C4798);
}

void sub_1BB472148(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x736E692E74786574, 0xEB00000000747265, &qword_1EF2C47A0);
}

id static Images.playLaterInNewsNext.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72D0, (id *)&qword_1EF2C47A0);
}

void sub_1BB47218C(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x7070612E74786574, 0xEB00000000646E65, &qword_1EF2C47A8);
}

id static Images.playLaterInNewsLast.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72D8, (id *)&qword_1EF2C47A8);
}

void sub_1BB4721D0(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x6873617274, 0xE500000000000000, &qword_1EF2C47B0);
}

id static Images.remove.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72E0, (id *)&qword_1EF2C47B0);
}

void sub_1BB472208(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x6D726F6674786574, 0xEF657A69732E7461, &qword_1EF2C47B8);
}

id static Images.textResize.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72E8, (id *)&qword_1EF2C47B8);
}

void sub_1BB472250(uint64_t a1)
{
  sub_1BB4722F8(a1, 0x6970656C7A7A7570, 0xEB00000000656365, &qword_1EF2C47C0);
}

id static Images.morePuzzlesIcon.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72F0, (id *)&qword_1EF2C47C0);
}

void sub_1BB472294(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000016, 0x80000001BB98E090, &qword_1EF2C47C8);
}

id static Images.resetPuzzleProgressIcon.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A72F8, (id *)&qword_1EF2C47C8);
}

void sub_1BB4722D4(uint64_t a1)
{
  sub_1BB4722F8(a1, 0xD000000000000018, 0x80000001BB98E070, &qword_1EF2C47D0);
}

void sub_1BB4722F8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  void *v5;
  id v6;

  v5 = (void *)sub_1BB872970();
  v6 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v5);

  if (v6)
    *a4 = v6;
  else
    __break(1u);
}

id static Images.setPuzzleStreakEligibleIcon.getter()
{
  return sub_1BA4B72EC(&qword_1EF2A7300, (id *)&qword_1EF2C47D0);
}

void sub_1BB472380()
{
  off_1ED39E200 = (_UNKNOWN *)MEMORY[0x1E0DEE9E0];
}

void sub_1BB472394(uint64_t a1)
{
  sub_1BB472414(a1, qword_1ED3ABB78, (void **)&qword_1ED39E270, qword_1ED39E278);
}

void *static Images.actionSheetStopSuggesting.getter()
{
  return sub_1BB4725E4(&qword_1ED3ABB90, (void **)qword_1ED39E278);
}

void sub_1BB4723F0(uint64_t a1)
{
  sub_1BB472414(a1, &qword_1ED3AAB28, (void **)&qword_1ED39D8E8, &qword_1ED39D8F0);
}

void sub_1BB472414(uint64_t a1, _QWORD *a2, void **a3, _QWORD *a4)
{
  void *v6;
  id v7;
  id v8;

  if (*a2 != -1)
    swift_once();
  v6 = *a3;
  v7 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_scale_, 4, 3, 17.0);
  v8 = objc_msgSend(v6, sel_imageByApplyingSymbolConfiguration_, v7);

  *a4 = v8;
}

void *static Images.actionSheetBlock.getter()
{
  return sub_1BB4725E4(&qword_1ED3ABB88, (void **)&qword_1ED39D8F0);
}

void sub_1BB4724EC(uint64_t a1)
{
  sub_1BB472414(a1, &qword_1EF2A7250, (void **)&qword_1EF2C4738, &qword_1EF2C47D8);
}

void *static Images.actionSheetUnblock.getter()
{
  return sub_1BB4725E4(&qword_1EF2A7310, (void **)&qword_1EF2C47D8);
}

void sub_1BB472548(uint64_t a1)
{
  sub_1BB472414(a1, &qword_1ED3AAB30, (void **)&qword_1ED39D910, &qword_1ED39D900);
}

void *static Images.actionSheetFollow.getter()
{
  return sub_1BB4725E4(&qword_1EF2A7318, (void **)&qword_1ED39D900);
}

void sub_1BB4725A4(uint64_t a1)
{
  sub_1BB472414(a1, &qword_1EF2A7228, (void **)&qword_1ED39D918, &qword_1ED39D908);
}

void *static Images.actionSheetUnfollow.getter()
{
  return sub_1BB4725E4(&qword_1EF2A7320, (void **)&qword_1ED39D908);
}

void *sub_1BB4725E4(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  v4 = v3;
  return v3;
}

id Images.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Images.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Images();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Images.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Images();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(void *a1, void *a2)
{
  _QWORD *v4;
  id v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  _QWORD *v12;
  id v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  id v23;
  char v24;
  void *v25;

  if (qword_1ED39E9B8 != -1)
    swift_once();
  swift_beginAccess();
  v4 = off_1ED39E200;
  if (*((_QWORD *)off_1ED39E200 + 2))
  {
    v5 = a1;
    v6 = sub_1BB4AB230((uint64_t)v5);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(v4[7] + 8 * v6);
      swift_bridgeObjectRetain();

      v9 = a2;
      v10 = sub_1BB77E0B0(v9, v8);
      swift_endAccess();
      swift_bridgeObjectRelease();

      if (v10)
        return (uint64_t)v10;
    }
    else
    {
      swift_endAccess();

    }
  }
  else
  {
    swift_endAccess();
  }
  v11 = objc_msgSend(a1, sel_imageWithRenderingMode_, 2);
  v10 = (void *)sub_1BB873864();

  swift_beginAccess();
  v12 = off_1ED39E200;
  if (!*((_QWORD *)off_1ED39E200 + 2))
  {
LABEL_14:
    swift_endAccess();
    v16 = MEMORY[0x1E0DEE9E0];
    if ((MEMORY[0x1E0DEE9E0] & 0xC000000000000001) == 0)
      goto LABEL_12;
    goto LABEL_15;
  }
  v13 = a1;
  v14 = sub_1BB4AB230((uint64_t)v13);
  if ((v15 & 1) == 0)
  {

    goto LABEL_14;
  }
  v16 = *(_QWORD *)(v12[7] + 8 * v14);
  swift_endAccess();
  swift_bridgeObjectRetain();

  if ((v16 & 0xC000000000000001) == 0)
  {
LABEL_12:
    v17 = a2;
    v18 = v10;
LABEL_19:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BB4BE424((uint64_t)v10, a2, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
    swift_beginAccess();
    v23 = a1;
    v24 = swift_isUniquelyReferenced_nonNull_native();
    v25 = off_1ED39E200;
    off_1ED39E200 = (_UNKNOWN *)0x8000000000000000;
    sub_1BB4BE2B4(v16, v23, v24);
    off_1ED39E200 = v25;

    swift_bridgeObjectRelease();
    swift_endAccess();
    return (uint64_t)v10;
  }
LABEL_15:
  if (v16 >= 0)
    v16 &= 0xFFFFFFFFFFFFFF8uLL;
  v19 = a2;
  v20 = v10;
  result = sub_1BB873BF4();
  if (!__OFADD__(result, 1))
  {
    v16 = sub_1BA968824(v16, result + 1);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Images()
{
  return objc_opt_self();
}

NewsFeed::PuzzleKind_optional FCPuzzleTypeProviding.puzzleKindTraits.getter@<W0>(_QWORD *a1@<X8>)
{
  NewsFeed::PuzzleKind_optional result;
  char v3;

  result.value = FCPuzzleTypeProviding.puzzleKind.getter().value;
  *a1 = qword_1BB91ACD8[v3];
  return result;
}

NewsFeed::PuzzleKind_optional FCPuzzleTypeProviding.traits.getter@<W0>(uint64_t *a1@<X8>)
{
  NewsFeed::PuzzleKind_optional result;
  uint64_t v3;
  uint64_t v4;

  result.value = FCPuzzleTypeProviding.puzzleKindTraits.getter(&v4).value;
  v3 = 0x10000000000;
  if ((v4 & 0xFFFFFEFFFFFFFFFFLL) != 0)
    v3 = v4 | 0x10000000000;
  *a1 = v3;
  return result;
}

uint64_t sub_1BB472A20(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  char v14;
  char v15;

  v13[0] = a4;
  v13[1] = a5;
  sub_1BB472F38(0, &qword_1EF2C47F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB472EF4();
  sub_1BB8746C8();
  v15 = 0;
  sub_1BB87417C();
  if (!v5)
  {
    v14 = 1;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BB472B50()
{
  sub_1BB472EF4();
  return sub_1BB874710();
}

uint64_t sub_1BB472B78()
{
  sub_1BB472EF4();
  return sub_1BB87471C();
}

uint64_t sub_1BB472BA0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1BB472D40(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1BB472BCC(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BB472A20(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1BB472BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C2450, (uint64_t (*)(uint64_t))sub_1BAA85C90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BAFD3CA0();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v11 + 32) = 0x696669746E656449;
  *(_QWORD *)(v11 + 40) = 0xEA00000000007265;
  v12 = MEMORY[0x1E0DEA968];
  v13 = MEMORY[0x1E0DEA9D8];
  *(_QWORD *)(v11 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 80) = v13;
  *(_QWORD *)(v11 + 48) = a1;
  *(_QWORD *)(v11 + 56) = a2;
  *(_BYTE *)(v11 + 88) = 0;
  *(_QWORD *)(v11 + 96) = 1701667150;
  *(_QWORD *)(v11 + 104) = 0xE400000000000000;
  *(_QWORD *)(v11 + 136) = v12;
  *(_QWORD *)(v11 + 144) = v13;
  *(_QWORD *)(v11 + 112) = a3;
  *(_QWORD *)(v11 + 120) = a4;
  *(_BYTE *)(v11 + 152) = 0;
  *(_QWORD *)(inited + 56) = &type metadata for DebugInspectionDataSection;
  *(_QWORD *)(inited + 64) = &off_1E728C9C8;
  *(_QWORD *)(inited + 32) = 6775124;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1BAA85898(inited);
  a5[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a5[4] = (uint64_t)&off_1E728CA90;
  *a5 = result;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionTag()
{
  return &type metadata for DebugInspectionTag;
}

uint64_t sub_1BB472D40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1BB472F38(0, &qword_1EF2C47E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB472EF4();
  sub_1BB87468C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_1BB874098();
    v11 = 1;
    swift_bridgeObjectRetain();
    sub_1BB874098();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1BB472EF4()
{
  unint64_t result;

  result = qword_1EF2C47E8;
  if (!qword_1EF2C47E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AE38, &type metadata for DebugInspectionTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C47E8);
  }
  return result;
}

void sub_1BB472F38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB472EF4();
    v7 = a3(a1, &type metadata for DebugInspectionTag.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for DebugInspectionTag.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB472FE0 + 4 * byte_1BB91AD05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB473014 + 4 * byte_1BB91AD00[v4]))();
}

uint64_t sub_1BB473014(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB47301C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB473024);
  return result;
}

uint64_t sub_1BB473030(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB473038);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB47303C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB473044(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionTag.CodingKeys()
{
  return &type metadata for DebugInspectionTag.CodingKeys;
}

unint64_t sub_1BB473064()
{
  unint64_t result;

  result = qword_1EF2C47F8;
  if (!qword_1EF2C47F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AE10, &type metadata for DebugInspectionTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C47F8);
  }
  return result;
}

unint64_t sub_1BB4730AC()
{
  unint64_t result;

  result = qword_1EF2C4800;
  if (!qword_1EF2C4800)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AD80, &type metadata for DebugInspectionTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4800);
  }
  return result;
}

unint64_t sub_1BB4730F4()
{
  unint64_t result;

  result = qword_1EF2C4808;
  if (!qword_1EF2C4808)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91ADA8, &type metadata for DebugInspectionTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4808);
  }
  return result;
}

uint64_t static FormatCodingEmptyCollectionStrategy.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

BOOL static FormatCodingEmptyCollectionStrategy.shouldEncode(wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3) & 1) == 0;
}

uint64_t sub_1BB473190(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingEmptyCollectionStrategy<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB4731BC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 40);
}

uint64_t sub_1BB4731C4(uint64_t a1)
{
  return static FormatCodingEmptyCollectionStrategy.defaultValue.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

BOOL sub_1BB4731D0(uint64_t a1, uint64_t a2)
{
  return static FormatCodingEmptyCollectionStrategy.shouldEncode(wrappedValue:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

void type metadata accessor for FormatCodingEmptyCollectionStrategy()
{
  JUMPOUT(0x1BCCE5A70);
}

ValueMetadata *type metadata accessor for FormatDerivedDataBlockReference()
{
  return &type metadata for FormatDerivedDataBlockReference;
}

uint64_t sub_1BB473200(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  int v13;
  char v14;
  char v15;

  v13 = a4;
  sub_1BB473650(0, &qword_1EF2C4888, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB47360C();
  sub_1BB8746C8();
  v15 = 0;
  sub_1BB87417C();
  if (!v4)
  {
    v14 = 1;
    sub_1BB874188();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BB473330()
{
  _BYTE *v0;

  if (*v0)
    return 0x73776F726874;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BB47336C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB473850(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB473390()
{
  sub_1BB47360C();
  return sub_1BB874710();
}

uint64_t sub_1BB4733B8()
{
  sub_1BB47360C();
  return sub_1BB87471C();
}

uint64_t sub_1BB4733E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1BB473474(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1BB473410(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BB473200(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

unint64_t sub_1BB473430()
{
  unint64_t result;

  result = qword_1EF2C4870;
  if (!qword_1EF2C4870)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91AF40, &type metadata for FormatDerivedDataBlockReference);
    atomic_store(result, (unint64_t *)&qword_1EF2C4870);
  }
  return result;
}

uint64_t sub_1BB473474(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];

  sub_1BB473650(0, &qword_1EF2C4878, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v10[-v6];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB47360C();
  sub_1BB87468C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10[15] = 0;
    v8 = sub_1BB874098();
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_1BB8740A4();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1BB47360C()
{
  unint64_t result;

  result = qword_1EF2C4880;
  if (!qword_1EF2C4880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91B0BC, &type metadata for FormatDerivedDataBlockReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4880);
  }
  return result;
}

void sub_1BB473650(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB47360C();
    v7 = a3(a1, &type metadata for FormatDerivedDataBlockReference.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataBlockReference.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB4736F8 + 4 * byte_1BB91AF15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB47372C + 4 * byte_1BB91AF10[v4]))();
}

uint64_t sub_1BB47372C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB473734(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB47373CLL);
  return result;
}

uint64_t sub_1BB473748(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB473750);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB473754(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB47375C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataBlockReference.CodingKeys()
{
  return &type metadata for FormatDerivedDataBlockReference.CodingKeys;
}

unint64_t sub_1BB47377C()
{
  unint64_t result;

  result = qword_1EF2C4890;
  if (!qword_1EF2C4890)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91B094, &type metadata for FormatDerivedDataBlockReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4890);
  }
  return result;
}

unint64_t sub_1BB4737C4()
{
  unint64_t result;

  result = qword_1EF2C4898;
  if (!qword_1EF2C4898)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91B004, &type metadata for FormatDerivedDataBlockReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4898);
  }
  return result;
}

unint64_t sub_1BB47380C()
{
  unint64_t result;

  result = qword_1EF2C48A0;
  if (!qword_1EF2C48A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91B02C, &type metadata for FormatDerivedDataBlockReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C48A0);
  }
  return result;
}

uint64_t sub_1BB473850(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73776F726874 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t dispatch thunk of FormatModelFactoryType.createFormatModels(from:context:namespace:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_1BB47394C(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v21;
  _OWORD v22[5];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v21 = a6;
  v13 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a2[2];
  v17 = a2[4];
  v26 = a2[3];
  v27 = v17;
  v18 = *a2;
  v24 = a2[1];
  v25 = v16;
  v23 = v18;
  v19 = *(unsigned __int8 *)(a5 + 8);
  sub_1BA6C8150(a1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 8)
    __asm { BR              X10 }
  sub_1BB473C00((uint64_t)v15);
  v22[2] = v25;
  v22[3] = v26;
  v22[4] = v27;
  v22[0] = v23;
  v22[1] = v24;
  return (*(uint64_t (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 8))(a1, v22, a3, a4, v21, a7);
}

uint64_t sub_1BB473C00(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB473C3C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  void **v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  _QWORD v29[2];
  uint64_t *v30;
  _OWORD v31[5];
  uint64_t v32;

  v30 = a8;
  v29[0] = a9;
  v29[1] = a2;
  v16 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v16);
  v18 = (void **)((char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *a1;
  *v18 = *a1;
  swift_storeEnumTagMultiPayload();
  v20 = a3[3];
  v31[2] = a3[2];
  v31[3] = v20;
  v31[4] = a3[4];
  v21 = a3[1];
  v31[0] = *a3;
  v31[1] = v21;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v22 + 32) = a4;
  *(_QWORD *)(v22 + 40) = a5;
  *(_QWORD *)(v22 + 48) = a6;
  *(_QWORD *)(v22 + 56) = a7;
  v32 = v22;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v23 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_1BB872904();
  v26 = v25;
  swift_bridgeObjectRelease();
  v27 = (*(uint64_t (**)(void **, _OWORD *, uint64_t, uint64_t, _QWORD, uint64_t))(a10 + 8))(v18, v31, v24, v26, v29[0], a10);
  swift_bridgeObjectRelease();
  result = sub_1BB473C00((uint64_t)v18);
  *v30 = v27;
  return result;
}

uint64_t sub_1BB473DE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  _QWORD v27[2];
  uint64_t *v28;
  _OWORD v29[5];
  uint64_t v30;

  v28 = a8;
  v27[0] = a9;
  v27[1] = a2;
  v16 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v16);
  v18 = (_QWORD *)((char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v18 = *a1;
  swift_storeEnumTagMultiPayload();
  v19 = a3[3];
  v29[2] = a3[2];
  v29[3] = v19;
  v29[4] = a3[4];
  v20 = a3[1];
  v29[0] = *a3;
  v29[1] = v20;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v21 + 32) = a4;
  *(_QWORD *)(v21 + 40) = a5;
  *(_QWORD *)(v21 + 48) = a6;
  *(_QWORD *)(v21 + 56) = a7;
  v30 = v21;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_1BB872904();
  v24 = v23;
  swift_bridgeObjectRelease();
  v25 = (*(uint64_t (**)(_QWORD *, _OWORD *, uint64_t, uint64_t, _QWORD, uint64_t))(a10 + 8))(v18, v29, v22, v24, v27[0], a10);
  swift_bridgeObjectRelease();
  result = sub_1BB473C00((uint64_t)v18);
  *v28 = v25;
  return result;
}

uint64_t sub_1BB473F8C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB474008(a1, a2);
}

uint64_t sub_1BB473FA4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB474008(a1, a2);
}

uint64_t sub_1BB473FBC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB473C3C(a1, *(_QWORD *)(v2 + 32), *(_OWORD **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BB473FF0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB474008(a1, a2);
}

uint64_t sub_1BB474008@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB473DE0(a1, *(_QWORD *)(v2 + 32), *(_OWORD **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BB474044(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v12;
  unint64_t v13;

  v4 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C8150(a1, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      v13 = a2 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1BA739250(a2 & 0xDFFFFFFFFFFFFFFFLL);
      sub_1BA94BAC4();
      v10 = v9;
      sub_1BAEB8AB8(a2);
      swift_unknownObjectRelease();
      v8 = v10 ^ 1;
    }
    else
    {
      v13 = a2;
      sub_1BA739250(a2);
      sub_1BA94BAC4();
      v8 = v7;
      sub_1BAEB8AB8(a2);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1BB473C00((uint64_t)v6);
    v8 = 1;
  }
  return v8 & 1;
}

uint64_t static FormatArticleOverrides.empty.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3A6D88 != -1)
    swift_once();
  v2 = type metadata accessor for FormatArticleOverrides();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3A6D68);
  return sub_1BA4C2DD8(v3, a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
}

uint64_t sub_1BB4741E4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[15];
  char v16;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v0);
  v2 = &v15[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA629FB4(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for FormatArticleOverrides();
  __swift_allocate_value_buffer(v9, qword_1ED3A6D68);
  v10 = (_QWORD *)__swift_project_value_buffer(v9, (uint64_t)qword_1ED3A6D68);
  v11 = sub_1BB86C8B0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  v16 = 6;
  v12 = type metadata accessor for FormatArticleThumbnail();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
  v13 = sub_1BB86C67C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v2, 1, 1, v13);
  return FormatArticleOverrides.init(title:displayDate:storyType:shortExcerpt:thumbnail:routeURL:)(0, 0, (uint64_t)v8, &v16, 0, 0, (uint64_t)v5, (uint64_t)v2, v10);
}

uint64_t FormatArticleOverrides.init(title:displayDate:storyType:shortExcerpt:thumbnail:routeURL:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v34 = a8;
  sub_1BA629FB4(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v33 - v21;
  v23 = *a4;
  if (a2)
  {
    v24 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v24 = a1 & 0xFFFFFFFFFFFFLL;
    if (!v24)
    {
      swift_bridgeObjectRelease();
      a1 = 0;
      a2 = 0;
    }
  }
  *a9 = a1;
  a9[1] = a2;
  v25 = (int *)type metadata accessor for FormatArticleOverrides();
  sub_1BA4C2DD8(a3, (uint64_t)a9 + v25[5], (uint64_t (*)(_QWORD))sub_1BA76D78C);
  *((_BYTE *)a9 + v25[6]) = v23;
  if (a6)
  {
    v26 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) == 0)
      v26 = a5 & 0xFFFFFFFFFFFFLL;
    if (!v26)
    {
      swift_bridgeObjectRelease();
      a5 = 0;
      a6 = 0;
    }
  }
  v27 = (_QWORD *)((char *)a9 + v25[7]);
  *v27 = a5;
  v27[1] = a6;
  sub_1BA4C2DD8(a7, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA629FB4);
  v28 = type metadata accessor for FormatArticleThumbnail();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v19, 1, v28) == 1)
  {
    sub_1BA4A2E80(a7, (uint64_t (*)(_QWORD))sub_1BA629FB4);
    sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA629FB4);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v22, 1, 1, v28);
    v30 = v34;
  }
  else
  {
    if (sub_1BA9167D8())
    {
      v31 = 1;
    }
    else
    {
      sub_1BA4C2DD8((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
      v31 = 0;
    }
    v30 = v34;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v22, v31, 1, v28);
    sub_1BA4A2E80(a7, (uint64_t (*)(_QWORD))sub_1BA629FB4);
    sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
  }
  sub_1BA5193C4((uint64_t)v22, (uint64_t)a9 + v25[8], (uint64_t (*)(_QWORD))sub_1BA629FB4);
  return sub_1BA5193C4(v30, (uint64_t)a9 + v25[9], (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
}

uint64_t FormatArticleOverrides.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleOverrides.displayDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatArticleOverrides();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))sub_1BA76D78C);
}

uint64_t FormatArticleOverrides.storyType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FormatArticleOverrides();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t FormatArticleOverrides.shortExcerpt.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatArticleOverrides() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleOverrides.thumbnail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatArticleOverrides();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(_QWORD))sub_1BA629FB4);
}

uint64_t FormatArticleOverrides.routeURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatArticleOverrides();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
}

uint64_t sub_1BB474738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB477728(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB47475C()
{
  sub_1BA62A28C();
  return sub_1BB874710();
}

uint64_t sub_1BB474784()
{
  sub_1BA62A28C();
  return sub_1BB87471C();
}

BOOL _s8NewsFeed22FormatArticleOverridesV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _BOOL8 result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v47)(_QWORD);
  uint64_t v48;
  char v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  int v54;
  int v55;
  char v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  int v70;
  uint64_t v71;
  int *v72;
  int v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  char *v82;
  char v83;
  void (*v84)(char *, uint64_t);
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;

  v102 = sub_1BB86C67C();
  v92 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v87 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA842538();
  v90 = v5;
  MEMORY[0x1E0C80A78](v5);
  v93 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v7);
  v88 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v100 = (char *)&v85 - v10;
  MEMORY[0x1E0C80A78](v11);
  v91 = (uint64_t)&v85 - v12;
  v98 = type metadata accessor for FormatArticleThumbnail();
  v96 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v89 = (uint64_t)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB4779E0(0);
  v95 = v14;
  MEMORY[0x1E0C80A78](v14);
  v99 = (uint64_t)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA629FB4(0);
  MEMORY[0x1E0C80A78](v16);
  v94 = (int *)((char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v101 = (uint64_t)&v85 - v19;
  MEMORY[0x1E0C80A78](v20);
  v97 = (uint64_t)&v85 - v21;
  v22 = sub_1BB86C8B0();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5266EC();
  v27 = v26;
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v85 - v34;
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v85 - v37;
  v39 = a1[1];
  v103 = a2;
  v40 = a2[1];
  if (!v39)
  {
    if (v40)
      return 0;
    goto LABEL_8;
  }
  if (!v40)
    return 0;
  if (*a1 == *v103 && v39 == v40 || (v41 = sub_1BB874398(), result = 0, (v41 & 1) != 0))
  {
LABEL_8:
    v43 = type metadata accessor for FormatArticleOverrides();
    v44 = *(int *)(v43 + 20);
    v85 = a1;
    sub_1BA4C2DD8((uint64_t)a1 + v44, (uint64_t)v38, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    v86 = v43;
    sub_1BA4C2DD8((uint64_t)v103 + *(int *)(v43 + 20), (uint64_t)v35, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    v45 = (uint64_t)&v29[*(int *)(v27 + 48)];
    sub_1BA4C2DD8((uint64_t)v38, (uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    sub_1BA4C2DD8((uint64_t)v35, v45, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    if (v46((uint64_t)v29, 1, v22) == 1)
    {
      sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))sub_1BA76D78C);
      sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))sub_1BA76D78C);
      if (v46(v45, 1, v22) == 1)
      {
        sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BA76D78C);
        goto LABEL_18;
      }
    }
    else
    {
      sub_1BA4C2DD8((uint64_t)v29, (uint64_t)v32, (uint64_t (*)(_QWORD))sub_1BA76D78C);
      if (v46(v45, 1, v22) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v25, v45, v22);
        sub_1BA4A2870((unint64_t *)&qword_1ED3B0520, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
        v49 = sub_1BB872958();
        v50 = *(void (**)(char *, uint64_t))(v23 + 8);
        v50(v25, v22);
        sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))sub_1BA76D78C);
        sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))sub_1BA76D78C);
        v50(v32, v22);
        sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BA76D78C);
        if ((v49 & 1) == 0)
          return 0;
LABEL_18:
        v52 = v85;
        v51 = v86;
        v53 = *(int *)(v86 + 24);
        v54 = *((unsigned __int8 *)v85 + v53);
        v55 = *((unsigned __int8 *)v103 + v53);
        if (v54 == 6)
        {
          if (v55 != 6)
            return 0;
        }
        else
        {
          if (v55 == 6)
            return 0;
          sub_1BB7F8268(v54);
          if ((v56 & 1) == 0)
            return 0;
        }
        v57 = *(int *)(v51 + 28);
        v58 = (_QWORD *)((char *)v52 + v57);
        v59 = *(_QWORD *)((char *)v52 + v57 + 8);
        v60 = (_QWORD *)((char *)v103 + v57);
        v61 = v60[1];
        if (v59)
        {
          v62 = v102;
          if (!v61)
            return 0;
          if (*v58 != *v60 || v59 != v61)
          {
            v63 = sub_1BB874398();
            result = 0;
            if ((v63 & 1) == 0)
              return result;
          }
        }
        else
        {
          v62 = v102;
          if (v61)
            return 0;
        }
        v64 = v97;
        sub_1BA4C2DD8((uint64_t)v52 + *(int *)(v51 + 32), v97, (uint64_t (*)(_QWORD))sub_1BA629FB4);
        v65 = v101;
        sub_1BA4C2DD8((uint64_t)v103 + *(int *)(v51 + 32), v101, (uint64_t (*)(_QWORD))sub_1BA629FB4);
        v66 = v99;
        v67 = v99 + *(int *)(v95 + 48);
        sub_1BA4C2DD8(v64, v99, (uint64_t (*)(_QWORD))sub_1BA629FB4);
        sub_1BA4C2DD8(v65, v67, (uint64_t (*)(_QWORD))sub_1BA629FB4);
        v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
        v69 = v98;
        if (v68(v66, 1, v98) == 1)
        {
          sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))sub_1BA629FB4);
          sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))sub_1BA629FB4);
          v70 = v68(v67, 1, v69);
          v71 = (uint64_t)v100;
          if (v70 == 1)
          {
            sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))sub_1BA629FB4);
LABEL_37:
            v76 = v86;
            v77 = v91;
            sub_1BA4C2DD8((uint64_t)v85 + *(int *)(v86 + 36), v91, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            sub_1BA4C2DD8((uint64_t)v103 + *(int *)(v76 + 36), v71, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            v66 = v93;
            v78 = v93 + *(int *)(v90 + 48);
            sub_1BA4C2DD8(v77, v93, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            sub_1BA4C2DD8(v71, v78, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            v79 = v92;
            v80 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
            if (v80(v66, 1, v62) == 1)
            {
              sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
              sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
              if (v80(v78, 1, v62) == 1)
              {
                sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
                return 1;
              }
              goto LABEL_42;
            }
            v81 = v88;
            sub_1BA4C2DD8(v66, v88, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            if (v80(v78, 1, v62) == 1)
            {
              sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
              sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
              (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v81, v62);
LABEL_42:
              v47 = (uint64_t (*)(_QWORD))sub_1BA842538;
              goto LABEL_43;
            }
            v82 = v87;
            (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v87, v78, v62);
            sub_1BA4A2870((unint64_t *)&unk_1ED3B04D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
            v83 = sub_1BB872958();
            v84 = *(void (**)(char *, uint64_t))(v79 + 8);
            v84(v82, v62);
            sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            v84((char *)v81, v62);
            sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            return (v83 & 1) != 0;
          }
        }
        else
        {
          v72 = v94;
          sub_1BA4C2DD8(v66, (uint64_t)v94, (uint64_t (*)(_QWORD))sub_1BA629FB4);
          v73 = v68(v67, 1, v69);
          v71 = (uint64_t)v100;
          if (v73 != 1)
          {
            v74 = v89;
            sub_1BA5193C4(v67, v89, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
            v75 = _s8NewsFeed22FormatArticleThumbnailV2eeoiySbAC_ACtFZ_0(v72, v74);
            sub_1BA4A2E80(v74, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
            sub_1BA4A2E80(v101, (uint64_t (*)(_QWORD))sub_1BA629FB4);
            sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))sub_1BA629FB4);
            sub_1BA4A2E80((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
            sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))sub_1BA629FB4);
            if (!v75)
              return 0;
            goto LABEL_37;
          }
          sub_1BA4A2E80(v101, (uint64_t (*)(_QWORD))sub_1BA629FB4);
          sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))sub_1BA629FB4);
          sub_1BA4A2E80((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
        }
        v47 = (uint64_t (*)(_QWORD))sub_1BB4779E0;
LABEL_43:
        v48 = v66;
        goto LABEL_14;
      }
      sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))sub_1BA76D78C);
      sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))sub_1BA76D78C);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v32, v22);
    }
    v47 = (uint64_t (*)(_QWORD))sub_1BA5266EC;
    v48 = (uint64_t)v29;
LABEL_14:
    sub_1BA4A2E80(v48, v47);
    return 0;
  }
  return result;
}

uint64_t sub_1BB475124(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(qword_1ED3C9BF0, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleOverrides, (uint64_t)&protocol conformance descriptor for FormatArticleOverrides);
  a1[2] = sub_1BA4A2870(&qword_1ED3A6D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleOverrides, (uint64_t)&protocol conformance descriptor for FormatArticleOverrides);
  result = sub_1BA4A2870(&qword_1EF2C48A8, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleOverrides, (uint64_t)&protocol conformance descriptor for FormatArticleOverrides);
  a1[3] = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatArticleOverrides(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(_QWORD *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *__dst;
  int *v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C8B0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1BA76D78C();
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = v6[7];
    *((_BYTE *)v4 + v6[6]) = *((_BYTE *)a2 + v6[6]);
    v17 = (_QWORD *)((char *)v4 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v6[8];
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = type metadata accessor for FormatArticleThumbnail();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v23))
    {
      sub_1BA629FB4(0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v68 = v6;
      v69 = v24;
      *v21 = *v22;
      *((_BYTE *)v21 + 8) = *((_BYTE *)v22 + 8);
      v27 = v22[3];
      v28 = (int *)v23;
      v21[2] = v22[2];
      v21[3] = v27;
      v29 = v22[5];
      v21[4] = v22[4];
      v21[5] = v29;
      v30 = v22[7];
      v21[6] = v22[6];
      v21[7] = v30;
      v31 = v22[9];
      v21[8] = v22[8];
      v21[9] = v31;
      v70 = v28;
      v32 = v28[9];
      __dst = (char *)v21 + v32;
      v33 = (char *)v22 + v32;
      v34 = type metadata accessor for FormatArticleThumbnailImage();
      v71 = *(_QWORD *)(v34 - 8);
      v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
      v36 = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v72 = v35;
      if (v35(v33, 1, v36))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        v38 = v71;
      }
      else
      {
        v39 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(__dst, v33, v39);
        *(_QWORD *)&__dst[*(int *)(v36 + 20)] = *(_QWORD *)&v33[*(int *)(v36 + 20)];
        v38 = v71;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(__dst, 0, 1, v36);
      }
      v40 = v70[10];
      v41 = (char *)v21 + v40;
      v42 = (char *)v22 + v40;
      v6 = v68;
      if (v72((char *)v22 + v40, 1, v36))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        v44 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v41, v42, v44);
        *(_QWORD *)&v41[*(int *)(v36 + 20)] = *(_QWORD *)&v42[*(int *)(v36 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v36);
      }
      v45 = v70[11];
      v46 = (char *)v21 + v45;
      v47 = (char *)v22 + v45;
      if (v72((char *)v22 + v45, 1, v36))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v49 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v46, v47, v49);
        *(_QWORD *)&v46[*(int *)(v36 + 20)] = *(_QWORD *)&v47[*(int *)(v36 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v46, 0, 1, v36);
      }
      v50 = v70[12];
      v51 = (char *)v21 + v50;
      v52 = (char *)v22 + v50;
      if (v72((char *)v22 + v50, 1, v36))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        v54 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v51, v52, v54);
        *(_QWORD *)&v51[*(int *)(v36 + 20)] = *(_QWORD *)&v52[*(int *)(v36 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v51, 0, 1, v36);
      }
      v55 = v70[13];
      v56 = (char *)v21 + v55;
      v57 = (char *)v22 + v55;
      if (v72(v57, 1, v36))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v59 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v56, v57, v59);
        *(_QWORD *)&v56[*(int *)(v36 + 20)] = *(_QWORD *)&v57[*(int *)(v36 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v56, 0, 1, v36);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v69 + 56))(v21, 0, 1, v70);
    }
    v60 = v6[9];
    v61 = (char *)v4 + v60;
    v62 = (char *)a2 + v60;
    v63 = sub_1BB86C67C();
    v64 = *(_QWORD *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
    {
      sub_1BA6EF3B0();
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
    }
  }
  return v4;
}

_QWORD *assignWithCopy for FormatArticleOverrides(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, int *);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  size_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(char *, uint64_t, uint64_t);
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *__dst;
  int *v114;
  int *v115;
  int *v116;
  _QWORD *v117;
  _QWORD *v118;

  v4 = a2;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)v4 + v6;
  v9 = sub_1BB86C8B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1BA76D78C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)v4 + a3[6]);
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)v4 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (uint64_t)a1 + v18;
  v20 = (char *)v4 + v18;
  v21 = (int *)type metadata accessor for FormatArticleThumbnail();
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23((uint64_t)v20, 1, v21);
  if (!v24)
  {
    if (v25)
    {
      sub_1BA4A2E80(v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
      goto LABEL_13;
    }
    v116 = a3;
    v118 = v4;
    v37 = *(_QWORD *)v20;
    *(_BYTE *)(v19 + 8) = v20[8];
    *(_QWORD *)v19 = v37;
    *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
    *(_QWORD *)(v19 + 24) = *((_QWORD *)v20 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v19 + 32) = *((_QWORD *)v20 + 4);
    *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v19 + 48) = *((_QWORD *)v20 + 6);
    *(_QWORD *)(v19 + 56) = *((_QWORD *)v20 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v19 + 64) = *((_QWORD *)v20 + 8);
    *(_QWORD *)(v19 + 72) = *((_QWORD *)v20 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v38 = v21[9];
    v39 = (char *)(v19 + v38);
    v40 = &v20[v38];
    v41 = type metadata accessor for FormatArticleThumbnailImage();
    v42 = *(_QWORD *)(v41 - 8);
    v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
    v44 = v43(v39, 1, v41);
    v45 = v43(v40, 1, v41);
    if (v44)
    {
      if (v45)
        goto LABEL_43;
      v79 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v39, v40, v79);
      *(_QWORD *)&v39[*(int *)(v41 + 20)] = *(_QWORD *)&v40[*(int *)(v41 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    else
    {
      if (v45)
      {
        sub_1BA4A2E80((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_43:
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        goto LABEL_46;
      }
      v80 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 24))(v39, v40, v80);
      *(_QWORD *)&v39[*(int *)(v41 + 20)] = *(_QWORD *)&v40[*(int *)(v41 + 20)];
    }
LABEL_46:
    v81 = v21[10];
    v82 = (char *)(v19 + v81);
    v83 = &v20[v81];
    v84 = v43((char *)(v19 + v81), 1, v41);
    v85 = v43(v83, 1, v41);
    if (v84)
    {
      if (v85)
        goto LABEL_51;
      v87 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v82, v83, v87);
      *(_QWORD *)&v82[*(int *)(v41 + 20)] = *(_QWORD *)&v83[*(int *)(v41 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v82, 0, 1, v41);
    }
    else
    {
      if (v85)
      {
        sub_1BA4A2E80((uint64_t)v82, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_51:
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        goto LABEL_54;
      }
      v88 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 24))(v82, v83, v88);
      *(_QWORD *)&v82[*(int *)(v41 + 20)] = *(_QWORD *)&v83[*(int *)(v41 + 20)];
    }
LABEL_54:
    v89 = v21[11];
    v90 = (char *)(v19 + v89);
    v91 = &v20[v89];
    v92 = v43((char *)(v19 + v89), 1, v41);
    v93 = v43(v91, 1, v41);
    if (v92)
    {
      if (v93)
        goto LABEL_59;
      v95 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v90, v91, v95);
      *(_QWORD *)&v90[*(int *)(v41 + 20)] = *(_QWORD *)&v91[*(int *)(v41 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v90, 0, 1, v41);
    }
    else
    {
      if (v93)
      {
        sub_1BA4A2E80((uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_59:
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        goto LABEL_62;
      }
      v96 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 24))(v90, v91, v96);
      *(_QWORD *)&v90[*(int *)(v41 + 20)] = *(_QWORD *)&v91[*(int *)(v41 + 20)];
    }
LABEL_62:
    v97 = v21[12];
    v98 = (char *)(v19 + v97);
    v99 = &v20[v97];
    v100 = v43((char *)(v19 + v97), 1, v41);
    v101 = v43(v99, 1, v41);
    if (v100)
    {
      if (!v101)
      {
        v103 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v98, v99, v103);
        *(_QWORD *)&v98[*(int *)(v41 + 20)] = *(_QWORD *)&v99[*(int *)(v41 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v98, 0, 1, v41);
        goto LABEL_70;
      }
    }
    else
    {
      if (!v101)
      {
        v104 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 24))(v98, v99, v104);
        *(_QWORD *)&v98[*(int *)(v41 + 20)] = *(_QWORD *)&v99[*(int *)(v41 + 20)];
        goto LABEL_70;
      }
      sub_1BA4A2E80((uint64_t)v98, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
LABEL_70:
    v105 = v21[13];
    v106 = v19 + v105;
    v107 = &v20[v105];
    v108 = v43((char *)v106, 1, v41);
    v109 = v43(v107, 1, v41);
    a3 = v116;
    v4 = v118;
    if (v108)
    {
      if (!v109)
      {
        v111 = sub_1BB86C67C();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v106, v107, v111);
        *(_QWORD *)(v106 + *(int *)(v41 + 20)) = *(_QWORD *)&v107[*(int *)(v41 + 20)];
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v106, 0, 1, v41);
        goto LABEL_33;
      }
    }
    else
    {
      if (!v109)
      {
        v112 = sub_1BB86C67C();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 24))(v106, v107, v112);
        *(_QWORD *)(v106 + *(int *)(v41 + 20)) = *(_QWORD *)&v107[*(int *)(v41 + 20)];
        goto LABEL_33;
      }
      sub_1BA4A2E80(v106, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    v34 = *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64);
    v35 = (void *)v106;
    v36 = v107;
LABEL_14:
    memcpy(v35, v36, v34);
    goto LABEL_33;
  }
  if (v25)
  {
LABEL_13:
    sub_1BA629FB4(0);
    v34 = *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64);
    v35 = (void *)v19;
    v36 = v20;
    goto LABEL_14;
  }
  v115 = a3;
  v117 = v4;
  v26 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = v20[8];
  *(_QWORD *)v19 = v26;
  *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
  *(_QWORD *)(v19 + 24) = *((_QWORD *)v20 + 3);
  *(_QWORD *)(v19 + 32) = *((_QWORD *)v20 + 4);
  *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
  *(_QWORD *)(v19 + 48) = *((_QWORD *)v20 + 6);
  *(_QWORD *)(v19 + 56) = *((_QWORD *)v20 + 7);
  *(_QWORD *)(v19 + 64) = *((_QWORD *)v20 + 8);
  *(_QWORD *)(v19 + 72) = *((_QWORD *)v20 + 9);
  v114 = v21;
  v27 = v21[9];
  __dst = (char *)(v19 + v27);
  v28 = &v20[v27];
  v29 = type metadata accessor for FormatArticleThumbnailImage();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31(v28, 1, v29))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v46 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(__dst, v28, v46);
    *(_QWORD *)&__dst[*(int *)(v29 + 20)] = *(_QWORD *)&v28[*(int *)(v29 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
  }
  v47 = v30;
  v48 = v114[10];
  v49 = (char *)(v19 + v48);
  v50 = &v20[v48];
  if (v31(&v20[v48], 1, v29))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    v52 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v49, v50, v52);
    *(_QWORD *)&v49[*(int *)(v29 + 20)] = *(_QWORD *)&v50[*(int *)(v29 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v29);
  }
  v53 = v114[11];
  v54 = (char *)(v19 + v53);
  v55 = &v20[v53];
  if (v31(&v20[v53], 1, v29))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    v57 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v54, v55, v57);
    *(_QWORD *)&v54[*(int *)(v29 + 20)] = *(_QWORD *)&v55[*(int *)(v29 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v54, 0, 1, v29);
  }
  v58 = v114[12];
  v59 = (char *)(v19 + v58);
  v60 = &v20[v58];
  if (v31(&v20[v58], 1, v29))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    v62 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v59, v60, v62);
    *(_QWORD *)&v59[*(int *)(v29 + 20)] = *(_QWORD *)&v60[*(int *)(v29 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v59, 0, 1, v29);
  }
  v63 = v114[13];
  v64 = (char *)(v19 + v63);
  v65 = &v20[v63];
  a3 = v115;
  if (v31(v65, 1, v29))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    v67 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v64, v65, v67);
    *(_QWORD *)&v64[*(int *)(v29 + 20)] = *(_QWORD *)&v65[*(int *)(v29 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v64, 0, 1, v29);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v114);
  v4 = v117;
LABEL_33:
  v68 = a3[9];
  v69 = (char *)a1 + v68;
  v70 = (char *)v4 + v68;
  v71 = sub_1BB86C67C();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48);
  v74 = v73(v69, 1, v71);
  v75 = v73(v70, 1, v71);
  if (!v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 24))(v69, v70, v71);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v72 + 8))(v69, v71);
    goto LABEL_38;
  }
  if (v75)
  {
LABEL_38:
    sub_1BA6EF3B0();
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
  return a1;
}

_OWORD *initializeWithTake for FormatArticleOverrides(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BA76D78C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = (int *)type metadata accessor for FormatArticleThumbnail();
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    sub_1BA629FB4(0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v57 = v17;
    *v14 = *v15;
    *((_BYTE *)v14 + 8) = *((_BYTE *)v15 + 8);
    v19 = *((_OWORD *)v15 + 2);
    *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
    *((_OWORD *)v14 + 2) = v19;
    v20 = *((_OWORD *)v15 + 4);
    *((_OWORD *)v14 + 3) = *((_OWORD *)v15 + 3);
    *((_OWORD *)v14 + 4) = v20;
    v21 = v16[9];
    v22 = (char *)v14 + v21;
    v23 = (char *)v15 + v21;
    v24 = type metadata accessor for FormatArticleThumbnailImage();
    v25 = *(_QWORD *)(v24 - 8);
    v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    if (v56(v23, 1, v24))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v27 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v22, v23, v27);
      *(_QWORD *)&v22[*(int *)(v24 + 20)] = *(_QWORD *)&v23[*(int *)(v24 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v28 = v16[10];
    v29 = (char *)v14 + v28;
    v30 = (char *)v15 + v28;
    if (v56((char *)v15 + v28, 1, v24))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v32 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v29, v30, v32);
      *(_QWORD *)&v29[*(int *)(v24 + 20)] = *(_QWORD *)&v30[*(int *)(v24 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v24);
    }
    v33 = v16[11];
    v34 = (char *)v14 + v33;
    v35 = (char *)v15 + v33;
    if (v56((char *)v15 + v33, 1, v24))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v37 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v34, v35, v37);
      *(_QWORD *)&v34[*(int *)(v24 + 20)] = *(_QWORD *)&v35[*(int *)(v24 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v34, 0, 1, v24);
    }
    v38 = v16[12];
    v39 = (char *)v14 + v38;
    v40 = (char *)v15 + v38;
    if (v56((char *)v15 + v38, 1, v24))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      v42 = v25;
    }
    else
    {
      v43 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v39, v40, v43);
      *(_QWORD *)&v39[*(int *)(v24 + 20)] = *(_QWORD *)&v40[*(int *)(v24 + 20)];
      v42 = v25;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v39, 0, 1, v24);
    }
    v44 = v16[13];
    v45 = (char *)v14 + v44;
    v46 = (char *)v15 + v44;
    if (v56(v46, 1, v24))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v48 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v45, v46, v48);
      *(_QWORD *)&v45[*(int *)(v24 + 20)] = *(_QWORD *)&v46[*(int *)(v24 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v24);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v57 + 56))(v14, 0, 1, v16);
  }
  v49 = a3[9];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = sub_1BB86C67C();
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    sub_1BA6EF3B0();
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  return a1;
}

_QWORD *assignWithTake for FormatArticleOverrides(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, int *);
  int v27;
  int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  size_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  int v50;
  uint64_t v51;
  size_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int v93;
  uint64_t v94;
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  int v104;
  uint64_t v105;
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  int v115;
  uint64_t v116;
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  int v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(char *, uint64_t, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1BA76D78C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (uint64_t)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = (int *)type metadata accessor for FormatArticleThumbnail();
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26((uint64_t)v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_1BA4A2E80(v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnail);
      goto LABEL_13;
    }
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_BYTE *)(v22 + 8) = v23[8];
    v41 = *((_QWORD *)v23 + 3);
    *(_QWORD *)(v22 + 16) = *((_QWORD *)v23 + 2);
    *(_QWORD *)(v22 + 24) = v41;
    swift_bridgeObjectRelease();
    v42 = *((_QWORD *)v23 + 5);
    *(_QWORD *)(v22 + 32) = *((_QWORD *)v23 + 4);
    *(_QWORD *)(v22 + 40) = v42;
    swift_bridgeObjectRelease();
    v43 = *((_QWORD *)v23 + 7);
    *(_QWORD *)(v22 + 48) = *((_QWORD *)v23 + 6);
    *(_QWORD *)(v22 + 56) = v43;
    swift_bridgeObjectRelease();
    v44 = *((_QWORD *)v23 + 9);
    *(_QWORD *)(v22 + 64) = *((_QWORD *)v23 + 8);
    *(_QWORD *)(v22 + 72) = v44;
    swift_bridgeObjectRelease();
    v45 = v24[9];
    v46 = v22 + v45;
    v47 = &v23[v45];
    v48 = type metadata accessor for FormatArticleThumbnailImage();
    v133 = *(_QWORD *)(v48 - 8);
    v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 48);
    v131 = v46;
    LODWORD(v46) = v49(v46, 1, v48);
    v135 = v48;
    v50 = v49((uint64_t)v47, 1, v48);
    if ((_DWORD)v46)
    {
      if (v50)
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        v52 = *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64);
        v53 = (void *)v131;
LABEL_43:
        memcpy(v53, v47, v52);
        v87 = v48;
        goto LABEL_46;
      }
      v88 = sub_1BB86C67C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v131, v47, v88);
      v87 = v48;
      *(_QWORD *)(v131 + *(int *)(v48 + 20)) = *(_QWORD *)&v47[*(int *)(v48 + 20)];
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v133 + 56))(v131, 0, 1, v48);
    }
    else
    {
      if (v50)
      {
        sub_1BA4A2E80(v131, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        v52 = *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64);
        v53 = (void *)v131;
        goto LABEL_43;
      }
      v89 = sub_1BB86C67C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 40))(v131, v47, v89);
      v87 = v48;
      *(_QWORD *)(v131 + *(int *)(v48 + 20)) = *(_QWORD *)&v47[*(int *)(v48 + 20)];
    }
LABEL_46:
    v90 = v24[10];
    v91 = (char *)(v22 + v90);
    v92 = &v23[v90];
    v93 = v49(v22 + v90, 1, v87);
    v94 = v87;
    v95 = v93;
    v96 = v49((uint64_t)v92, 1, v94);
    if (v95)
    {
      if (v96)
        goto LABEL_51;
      v99 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v91, v92, v99);
      v98 = v135;
      *(_QWORD *)&v91[*(int *)(v135 + 20)] = *(_QWORD *)&v92[*(int *)(v135 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v91, 0, 1, v135);
    }
    else
    {
      if (v96)
      {
        sub_1BA4A2E80((uint64_t)v91, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_51:
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        v98 = v135;
        goto LABEL_54;
      }
      v100 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 40))(v91, v92, v100);
      v98 = v135;
      *(_QWORD *)&v91[*(int *)(v135 + 20)] = *(_QWORD *)&v92[*(int *)(v135 + 20)];
    }
LABEL_54:
    v101 = v24[11];
    v102 = (char *)(v22 + v101);
    v103 = &v23[v101];
    v104 = v49(v22 + v101, 1, v98);
    v105 = v98;
    v106 = v104;
    v107 = v49((uint64_t)v103, 1, v105);
    if (v106)
    {
      if (v107)
        goto LABEL_59;
      v110 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v102, v103, v110);
      v109 = v135;
      *(_QWORD *)&v102[*(int *)(v135 + 20)] = *(_QWORD *)&v103[*(int *)(v135 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v102, 0, 1, v135);
    }
    else
    {
      if (v107)
      {
        sub_1BA4A2E80((uint64_t)v102, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
LABEL_59:
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        v109 = v135;
        goto LABEL_62;
      }
      v111 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 40))(v102, v103, v111);
      v109 = v135;
      *(_QWORD *)&v102[*(int *)(v135 + 20)] = *(_QWORD *)&v103[*(int *)(v135 + 20)];
    }
LABEL_62:
    v112 = v24[12];
    v113 = (char *)(v22 + v112);
    v114 = &v23[v112];
    v115 = v49(v22 + v112, 1, v109);
    v116 = v109;
    v117 = v115;
    v118 = v49((uint64_t)v114, 1, v116);
    if (v117)
    {
      if (!v118)
      {
        v121 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v113, v114, v121);
        v120 = v135;
        *(_QWORD *)&v113[*(int *)(v135 + 20)] = *(_QWORD *)&v114[*(int *)(v135 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v113, 0, 1, v135);
        goto LABEL_70;
      }
    }
    else
    {
      if (!v118)
      {
        v122 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 40))(v113, v114, v122);
        v120 = v135;
        *(_QWORD *)&v113[*(int *)(v135 + 20)] = *(_QWORD *)&v114[*(int *)(v135 + 20)];
        goto LABEL_70;
      }
      sub_1BA4A2E80((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    v120 = v135;
LABEL_70:
    v123 = v24[13];
    v124 = v22 + v123;
    v125 = &v23[v123];
    v126 = v49(v124, 1, v120);
    v127 = v49((uint64_t)v125, 1, v120);
    if (v126)
    {
      if (!v127)
      {
        v129 = sub_1BB86C67C();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v124, v125, v129);
        *(_QWORD *)(v124 + *(int *)(v120 + 20)) = *(_QWORD *)&v125[*(int *)(v120 + 20)];
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v133 + 56))(v124, 0, 1, v120);
        goto LABEL_33;
      }
    }
    else
    {
      if (!v127)
      {
        v130 = sub_1BB86C67C();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 40))(v124, v125, v130);
        *(_QWORD *)(v124 + *(int *)(v120 + 20)) = *(_QWORD *)&v125[*(int *)(v120 + 20)];
        goto LABEL_33;
      }
      sub_1BA4A2E80(v124, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleThumbnailImage);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    v38 = *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64);
    v39 = (void *)v124;
    v40 = v125;
LABEL_14:
    memcpy(v39, v40, v38);
    goto LABEL_33;
  }
  if (v28)
  {
LABEL_13:
    sub_1BA629FB4(0);
    v38 = *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64);
    v39 = (void *)v22;
    v40 = v23;
    goto LABEL_14;
  }
  v132 = a3;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = v23[8];
  v29 = *((_OWORD *)v23 + 2);
  *(_OWORD *)(v22 + 16) = *((_OWORD *)v23 + 1);
  *(_OWORD *)(v22 + 32) = v29;
  v30 = *((_OWORD *)v23 + 4);
  *(_OWORD *)(v22 + 48) = *((_OWORD *)v23 + 3);
  *(_OWORD *)(v22 + 64) = v30;
  v31 = v24[9];
  v32 = (char *)(v22 + v31);
  v33 = &v23[v31];
  v34 = type metadata accessor for FormatArticleThumbnailImage();
  v35 = *(_QWORD *)(v34 - 8);
  v136 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v134 = v35;
  if (v136(v33, 1, v34))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v54 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v32, v33, v54);
    *(_QWORD *)&v32[*(int *)(v34 + 20)] = *(_QWORD *)&v33[*(int *)(v34 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v55 = v24[10];
  v56 = (char *)(v22 + v55);
  v57 = &v23[v55];
  a3 = v132;
  if (v136(&v23[v55], 1, v34))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    v59 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v56, v57, v59);
    *(_QWORD *)&v56[*(int *)(v34 + 20)] = *(_QWORD *)&v57[*(int *)(v34 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v56, 0, 1, v34);
  }
  v60 = v24[11];
  v61 = (char *)(v22 + v60);
  v62 = &v23[v60];
  if (v136(&v23[v60], 1, v34))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    v64 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v61, v62, v64);
    *(_QWORD *)&v61[*(int *)(v34 + 20)] = *(_QWORD *)&v62[*(int *)(v34 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v61, 0, 1, v34);
  }
  v65 = v24[12];
  v66 = (char *)(v22 + v65);
  v67 = &v23[v65];
  if (v136(&v23[v65], 1, v34))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    v69 = v134;
  }
  else
  {
    v70 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v66, v67, v70);
    *(_QWORD *)&v66[*(int *)(v34 + 20)] = *(_QWORD *)&v67[*(int *)(v34 + 20)];
    v69 = v134;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v66, 0, 1, v34);
  }
  v71 = v24[13];
  v72 = (char *)(v22 + v71);
  v73 = &v23[v71];
  if (v136(v73, 1, v34))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3CBE48, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    v75 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v72, v73, v75);
    *(_QWORD *)&v72[*(int *)(v34 + 20)] = *(_QWORD *)&v73[*(int *)(v34 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v72, 0, 1, v34);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
LABEL_33:
  v76 = a3[9];
  v77 = (char *)a1 + v76;
  v78 = (char *)a2 + v76;
  v79 = sub_1BB86C67C();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
  v82 = v81(v77, 1, v79);
  v83 = v81(v78, 1, v79);
  if (!v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 40))(v77, v78, v79);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v79);
    goto LABEL_38;
  }
  if (v83)
  {
LABEL_38:
    sub_1BA6EF3B0();
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  return a1;
}

uint64_t sub_1BB477484(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1BA76D78C();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = a3[5];
    }
    else
    {
      sub_1BA629FB4(0);
      v10 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        v11 = v13;
        v12 = a3[8];
      }
      else
      {
        sub_1BA6EF3B0();
        v11 = v14;
        v10 = *(_QWORD *)(v14 - 8);
        v12 = a3[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_1BB477554(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    sub_1BA76D78C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      sub_1BA629FB4(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        sub_1BA6EF3B0();
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatArticleOverrides.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB477660 + 4 * byte_1BB91B14B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB477694 + 4 * byte_1BB91B146[v4]))();
}

uint64_t sub_1BB477694(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB47769C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4776A4);
  return result;
}

uint64_t sub_1BB4776B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4776B8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB4776BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4776C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatArticleOverrides.CodingKeys()
{
  return &type metadata for FormatArticleOverrides.CodingKeys;
}

unint64_t sub_1BB4776E4()
{
  unint64_t result;

  result = qword_1EF2C48B0;
  if (!qword_1EF2C48B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91B2F4, &type metadata for FormatArticleOverrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C48B0);
  }
  return result;
}

uint64_t sub_1BB477728(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4479616C70736964 && a2 == 0xEB00000000657461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x70795479726F7473 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63784574726F6873 && a2 == 0xEC00000074707265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x69616E626D756874 && a2 == 0xE90000000000006CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4C52556574756F72 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void sub_1BB4779E0(uint64_t a1)
{
  sub_1BA9ED538(a1, &qword_1ED3A6DA8, sub_1BA629FB4);
}

void sub_1BB4779F4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

uint64_t sub_1BB477A54(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

void FormatPaywallBinding.Text.text(from:selectors:)()
{
  __asm { BR              X12 }
}

uint64_t sub_1BB477DEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0;
  swift_bridgeObjectRetain();
  return v1;
}

BOOL static FormatPaywallBinding.Text.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_1BB478168(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EF2C48B8)
  {
    v2 = sub_1BB4781C0();
    v4 = type metadata accessor for FormatCellAutomation(a1, (uint64_t)&type metadata for PaywallAutomation, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF2C48B8);
  }
}

unint64_t sub_1BB4781C0()
{
  unint64_t result;

  result = qword_1EF2C48C0;
  if (!qword_1EF2C48C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PaywallAutomation, &type metadata for PaywallAutomation);
    atomic_store(result, (unint64_t *)&qword_1EF2C48C0);
  }
  return result;
}

unint64_t sub_1BB478204()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C48C8;
  if (!qword_1EF2C48C8)
  {
    sub_1BB478168(255);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCellAutomation<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C48C8);
  }
  return result;
}

uint64_t sub_1BB47824C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB478288 + 4 * byte_1BB91B392[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB478288()
{
  return 0x4E6C656E6E616863;
}

unint64_t sub_1BB4782AC()
{
  return 0xD000000000000014;
}

uint64_t sub_1BB478368()
{
  return 0x6974616D6F747561;
}

uint64_t sub_1BB478384(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BB47824C(*a1);
  v5 = v4;
  if (v3 == sub_1BB47824C(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB47840C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB47824C(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB47846C()
{
  unsigned __int8 *v0;

  sub_1BB47824C(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB4784AC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BB47824C(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB478508@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB478DF4();
  *a1 = result;
  return result;
}

uint64_t sub_1BB478534@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB47824C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB47855C()
{
  sub_1BB478918();
  return sub_1BB872D60();
}

uint64_t sub_1BB4785B8()
{
  sub_1BB478918();
  return sub_1BB872D0C();
}

void sub_1BB478604(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724F960;
}

uint64_t FormatPaywallBinding.Text.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPaywallBinding.Text.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB478684()
{
  unint64_t result;

  result = qword_1EF2C48D0;
  if (!qword_1EF2C48D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPaywallBinding.Text, &type metadata for FormatPaywallBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2C48D0);
  }
  return result;
}

unint64_t sub_1BB4786C8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4786EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4786EC()
{
  unint64_t result;

  result = qword_1EF2C48D8;
  if (!qword_1EF2C48D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPaywallBinding.Text, &type metadata for FormatPaywallBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2C48D8);
  }
  return result;
}

unint64_t sub_1BB478730(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE75B78();
  a1[2] = sub_1BAEF9A3C();
  result = sub_1BB478684();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB478764@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatPaywallBinding.Text.init(from:)(a1, a2);
}

void sub_1BB478778(_QWORD *a1)
{
  FormatPaywallBinding.Text.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatPaywallBinding.Text()
{
  return &type metadata for FormatPaywallBinding.Text;
}

uint64_t _s4TextOwst_0_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1BB4787EC + 4 * byte_1BB91B3A1[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1BB478820 + 4 * byte_1BB91B39C[v4]))();
}

uint64_t sub_1BB478820(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB478828(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB478830);
  return result;
}

uint64_t sub_1BB47883C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB478844);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1BB478848(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB478850(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4TextO10CodingTypeOMa_4()
{
  return &_s4TextO10CodingTypeON_4;
}

unint64_t sub_1BB478870()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C48E0;
  if (!qword_1EF2C48E0)
  {
    sub_1BA4AD288(255, &qword_1EF2C48E8, (uint64_t)&_s4TextO10CodingTypeON_4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C48E0);
  }
  return result;
}

unint64_t sub_1BB4788D4()
{
  unint64_t result;

  result = qword_1EF2C48F0;
  if (!qword_1EF2C48F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91B5C8, &_s4TextO10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1EF2C48F0);
  }
  return result;
}

unint64_t sub_1BB478918()
{
  unint64_t result;

  result = qword_1ED3C90D0;
  if (!qword_1ED3C90D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91B550, &_s4TextO10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1ED3C90D0);
  }
  return result;
}

void sub_1BB47895C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB4789A4()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v2 = v1[1];
  swift_bridgeObjectRetain();
  sub_1BAAF7494(0x696669746E656449, 0xEA00000000007265, v3, v2, v0);
  v4 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v0, 0, 1, v4);
}

uint64_t sub_1BB478DF4()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_1BB478E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1EF2C48F8, (uint64_t)&type metadata for SubscriptionActivationEligibility, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatSymbolScale.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB478EC8 + 4 * byte_1BB91B620[*v0]))(0x746C7561666564, 0xE700000000000000);
}

uint64_t sub_1BB478EC8()
{
  return 0x6669636570736E75;
}

uint64_t sub_1BB478EE4()
{
  return 0x6C6C616D73;
}

uint64_t sub_1BB478EF8()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1BB478F0C()
{
  return 0x656772616CLL;
}

void sub_1BB478F20(char *a1)
{
  sub_1BB8033A8(*a1);
}

unint64_t sub_1BB478F30()
{
  unint64_t result;

  result = qword_1EF2C4900;
  if (!qword_1EF2C4900)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolScale, &type metadata for FormatSymbolScale);
    atomic_store(result, (unint64_t *)&qword_1EF2C4900);
  }
  return result;
}

void sub_1BB478F74()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB478FC0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB479040()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB47907C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB4790E8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB479130()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB4791B0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB4791E0 + 4 * byte_1BB91B634[*v0]))();
}

void sub_1BB4791E0(_QWORD *a1@<X8>)
{
  *a1 = 0x6669636570736E75;
  a1[1] = 0xEA00000000006465;
}

void sub_1BB479200(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6C616D73;
  a1[1] = 0xE500000000000000;
}

void sub_1BB479218(_QWORD *a1@<X8>)
{
  *a1 = 0x6D756964656DLL;
  a1[1] = 0xE600000000000000;
}

void sub_1BB479230(_QWORD *a1@<X8>)
{
  *a1 = 0x656772616CLL;
  a1[1] = 0xE500000000000000;
}

unint64_t sub_1BB479248(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB479274();
  result = sub_1BA4AAFE4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB479274()
{
  unint64_t result;

  result = qword_1EF2C4908;
  if (!qword_1EF2C4908)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolScale, &type metadata for FormatSymbolScale);
    atomic_store(result, (unint64_t *)&qword_1EF2C4908);
  }
  return result;
}

unint64_t sub_1BB4792B8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4792DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4792DC()
{
  unint64_t result;

  result = qword_1EF2C4910;
  if (!qword_1EF2C4910)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolScale, &type metadata for FormatSymbolScale);
    atomic_store(result, (unint64_t *)&qword_1EF2C4910);
  }
  return result;
}

unint64_t sub_1BB479320(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA598F80();
  a1[2] = sub_1BA5FE290();
  result = sub_1BB478F30();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolScale()
{
  return &type metadata for FormatSymbolScale;
}

uint64_t sub_1BB479364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  void *v20;
  uint64_t result;
  uint64_t v23;
  _BYTE v24[40];
  _BYTE v25[47];
  uint64_t v26;

  v5 = v4;
  v10 = v4[10];
  v9 = v4[11];
  __swift_project_boxed_opaque_existential_1(v4 + 7, v10);
  swift_bridgeObjectRetain();
  v11 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  v12 = sub_1BB8729A0();
  v14 = v13;

  v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8) + 48))(v12, v14, v10);
  swift_bridgeObjectRelease();
  v16 = v4[5];
  v17 = v4[6];
  __swift_project_boxed_opaque_existential_1(v5 + 2, v5[5]);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v17 + 16))(&v26, a3, v16, v17);
  v18 = v26;
  sub_1BA4C010C((uint64_t)(v5 + 12), (uint64_t)v25);
  sub_1BA4C010C((uint64_t)(v5 + 17), (uint64_t)v24);
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  *(_OWORD *)(a4 + 24) = xmmword_1BB881B60;
  *(_QWORD *)(a4 + 40) = a1;
  *(_QWORD *)(a4 + 48) = a2;
  *(_QWORD *)(a4 + 56) = a3;
  *(_QWORD *)(a4 + 64) = v15;
  *(_BYTE *)(a4 + 72) = v18;
  sub_1BA8EDB4C((uint64_t)v25, a4 + 88, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370);
  sub_1BA8EDB4C((uint64_t)v24, a4 + 128, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250);
  *(_QWORD *)(a4 + 80) = MEMORY[0x1E0DEE9E8];
  v19 = v15;
  v20 = (void *)swift_unknownObjectRetain();
  sub_1BB3F0B88(v20, &v23);
  swift_unknownObjectRelease();

  sub_1BA65DB80((uint64_t)v24, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250);
  result = sub_1BA65DB80((uint64_t)v25, &qword_1ED3C0B10, (unint64_t *)&qword_1ED3C4370);
  *(_QWORD *)a4 = v23;
  return result;
}

uint64_t sub_1BB479558()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return swift_deallocClassInstance();
}

BOOL static SharingTopicActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SharingTopicActivity.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t SharingTopicActivity.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB479618()
{
  unint64_t result;

  result = qword_1EF2C4918;
  if (!qword_1EF2C4918)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SharingTopicActivity, &type metadata for SharingTopicActivity);
    atomic_store(result, (unint64_t *)&qword_1EF2C4918);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SharingTopicActivity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB4796A8 + 4 * byte_1BB91B805[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB4796DC + 4 * asc_1BB91B800[v4]))();
}

uint64_t sub_1BB4796DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4796E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4796ECLL);
  return result;
}

uint64_t sub_1BB4796F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB479700);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB479704(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB47970C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharingTopicActivity()
{
  return &type metadata for SharingTopicActivity;
}

uint64_t sub_1BB479728()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BB871890();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BB479798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_id;
  v2 = sub_1BB86C8E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1BB479A28(v0 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_cacheFile);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem__isExpanded;
  sub_1BB479940();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB479844()
{
  return type metadata accessor for DebugFormatFileTreeItem();
}

uint64_t type metadata accessor for DebugFormatFileTreeItem()
{
  uint64_t result;

  result = qword_1EF2C4950;
  if (!qword_1EF2C4950)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB479888()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BB86C8E0();
  if (v0 <= 0x3F)
  {
    sub_1BAA197E8();
    if (v1 <= 0x3F)
    {
      sub_1BB479940();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

void sub_1BB479940()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4960)
  {
    v0 = sub_1BB8718A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4960);
  }
}

unint64_t sub_1BB479998()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C2E78;
  if (!qword_1EF2C2E78)
  {
    v1 = sub_1BB86C8E0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C2E78);
  }
  return result;
}

uint64_t sub_1BB4799E0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8NewsFeed23DebugFormatFileTreeItem_id;
  v4 = sub_1BB86C8E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BB479A28(uint64_t a1)
{
  uint64_t v2;

  sub_1BAA197E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static FormatWebEmbedNodeContent.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  char v33;

  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  v11 = *a1;
  v12 = *a2;
  v13 = (unint64_t)*a1 >> 62;
  if (!(_DWORD)v13)
  {
    if (!(v12 >> 62))
    {
      v19 = *(_BYTE *)(v11 + 40);
      v20 = *(_QWORD *)(v11 + 32);
      v21 = *(_QWORD *)(v12 + 32);
      v22 = *(_BYTE *)(v12 + 40);
      v31 = *(_OWORD *)(v11 + 16);
      v32 = v20;
      v33 = v19;
      v28 = *(_OWORD *)(v12 + 16);
      v29 = v21;
      v30 = v22;
      swift_retain();
      swift_retain();
      v17 = _s8NewsFeed25FormatWebEmbedNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v31, (uint64_t)&v28);
      swift_release();
      swift_release();
      return v17 & 1;
    }
LABEL_12:
    v17 = 0;
    return v17 & 1;
  }
  if ((_DWORD)v13 != 1)
  {
    if (v12 >> 62 == 2)
    {
      v23 = *(_QWORD *)(v11 + 24);
      v24 = *(_QWORD *)(v12 + 16);
      v25 = *(_QWORD *)(v12 + 24);
      *(_QWORD *)&v31 = *(_QWORD *)((v11 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      *((_QWORD *)&v31 + 1) = v23;
      *(_QWORD *)&v28 = v24;
      *((_QWORD *)&v28 + 1) = v25;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatWebEmbedNodeContent.== infix(_:_:)(&v31, &v28) & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = sub_1BA88CE24(v23, v25);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if ((v26 & 1) != 0)
        {
          v17 = 1;
          return v17 & 1;
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    goto LABEL_12;
  }
  if (v12 >> 62 != 1)
    goto LABEL_12;
  v14 = swift_projectBox();
  v15 = swift_projectBox();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v16(v10, v14, v4);
  v16(v7, v15, v4);
  swift_retain();
  swift_retain();
  v17 = MEMORY[0x1BCCDCEFC](v10, v7);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  v18(v10, v4);
  swift_release();
  swift_release();
  return v17 & 1;
}

__int128 *sub_1BB479D3C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - v11;
  v13 = *v2;
  v14 = (unint64_t)*v2 >> 62;
  if ((_DWORD)v14)
  {
    if ((_DWORD)v14 == 1)
    {
      v15 = swift_projectBox();
      v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v16(v12, v15, v6);
      v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
      v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
      v16(v9, (uint64_t)v12, v6);
      type metadata accessor for FormatWebEmbedData();
      swift_allocObject();
      swift_bridgeObjectRetain();
      swift_retain();
      v19 = (__int128 *)sub_1BB1540AC(v17, v18, (uint64_t)v9, a2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    else
    {
      v23 = *(_QWORD *)(v13 + 16);
      v24 = *(_QWORD *)(v13 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BA9A035C(&v26, a1, v23, v24);
      v29 = v26;
      v19 = (__int128 *)sub_1BB479D3C(a1, a2);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
  }
  else
  {
    v20 = *(_QWORD *)(v13 + 32);
    v21 = *(_BYTE *)(v13 + 40);
    v26 = *(_OWORD *)(v13 + 16);
    v27 = v20;
    v28 = v21;
    v19 = &v26;
    v22 = sub_1BB161AB4(a1, a2);
    if (!v3)
      return (__int128 *)v22;
  }
  return v19;
}

unint64_t sub_1BB479F3C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAED0CE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB479F60(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5A5410();
  a1[2] = sub_1BA5DB144();
  result = sub_1BB479F94();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB479F94()
{
  unint64_t result;

  result = qword_1EF2C4A00;
  if (!qword_1EF2C4A00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedNodeContent, &type metadata for FormatWebEmbedNodeContent);
    atomic_store(result, (unint64_t *)&qword_1EF2C4A00);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbedNodeContent()
{
  return &type metadata for FormatWebEmbedNodeContent;
}

uint64_t FormatSourceItemData.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSourceItemData.tipSources.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for FormatSourceItemData()
{
  return &type metadata for FormatSourceItemData;
}

uint64_t FormatBackgroundOptions.layoutOptions.getter()
{
  swift_getObjectType();
  return sub_1BB871008();
}

id FormatBackgroundOptions.context.getter@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

id FormatBackgroundOptions.purpose.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id FormatBackgroundOptions.log.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

_QWORD *FormatBackgroundOptions.init(context:layoutOptionsProvider:purpose:log:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = *result;
  a6[1] = a4;
  a6[2] = a5;
  a6[3] = a2;
  a6[4] = a3;
  return result;
}

uint64_t destroy for FormatBackgroundOptions(id *a1)
{

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for FormatBackgroundOptions(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = v3;
  v7 = v4;
  v8 = v5;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatBackgroundOptions(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 32) = v13;
  return a1;
}

uint64_t assignWithTake for FormatBackgroundOptions(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 32) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for FormatBackgroundOptions()
{
  return &type metadata for FormatBackgroundOptions;
}

void **initializeBufferWithCopyOfBuffer for FormatBackgroundOptions.Context(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for FormatBackgroundOptions.Context(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for FormatBackgroundOptions.Context(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for FormatBackgroundOptions.Context()
{
  return &type metadata for FormatBackgroundOptions.Context;
}

id sub_1BB47A304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v21;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - v6;
  v8 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32PuzzleTypeLinkPresentationSource_puzzleType);
  v9 = objc_msgSend(v8, sel_nameForSharing, v5);
  sub_1BB8729A0();

  v10 = objc_msgSend(v8, sel_identifier);
  if (!v10)
  {
    sub_1BB8729A0();
    v10 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForPuzzleTypeID_, v10);

  if (v11)
  {
    sub_1BB86C5EC();

    v12 = sub_1BB86C67C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 0, 1, v12);
  }
  else
  {
    v12 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  }
  v13 = sub_1BB47A580((uint64_t)v8);
  sub_1BA7E8428((uint64_t)v7, (uint64_t)v3);
  v14 = v13;
  v15 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  sub_1BB86C67C();
  v16 = *(_QWORD *)(v12 - 8);
  v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v3, 1, v12) != 1)
  {
    v17 = (void *)sub_1BB86C58C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v12);
  }
  v18 = objc_msgSend(objc_allocWithZone((Class)NELinkMetadataSource), sel_initWithTitle_url_imageProvider_iconProvider_, v15, v17, v14, v14);

  v19 = objc_msgSend(v18, sel_linkMetadata);
  sub_1BA7F0A80((uint64_t)v7);
  return v19;
}

id sub_1BB47A580(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v2 = sub_1BB86EF38();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36C8]), sel_init);
  sub_1BB86EF2C();
  sub_1BB86EF20();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v7 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = a1;
  aBlock[4] = sub_1BB47AA6C;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BB62466C;
  aBlock[3] = &block_descriptor_73;
  v10 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v6, sel_registerItemForTypeIdentifier_loadHandler_, v7, v10);
  _Block_release(v10);

  return v6;
}

uint64_t sub_1BB47A70C(uint64_t (*a1)(_QWORD, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  sub_1BA4A3FB4(0, &qword_1ED3C1DE0, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - v11;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](a5 + 16);
  if (result)
  {
    v14 = result;
    v15 = sub_1BB872F94();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v14;
    v16[5] = a6;
    v16[6] = a1;
    v16[7] = a2;
    swift_unknownObjectRetain();
    sub_1BA4BEB58((uint64_t)a1);
    sub_1BB1B6AEC((uint64_t)v12, (uint64_t)&unk_1EF2C4A48, (uint64_t)v16);
    return swift_release();
  }
  else if (a1)
  {
    return a1(0, 0);
  }
  return result;
}

uint64_t sub_1BB47A83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v9;

  v7[2] = a6;
  v7[3] = a7;
  v9 = (_QWORD *)swift_task_alloc();
  v7[4] = v9;
  *v9 = v7;
  v9[1] = sub_1BB47A8A0;
  v9[7] = a5;
  return swift_task_switch();
}

uint64_t sub_1BB47A8A0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB47A8FC()
{
  uint64_t v0;
  UIImage *v1;
  NSData *v2;
  NSData *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void (*v8)(void *, _QWORD);
  void *v9;
  id v10;

  v1 = *(UIImage **)(v0 + 40);
  if (v1 && (v2 = UIImagePNGRepresentation(v1)) != 0)
  {
    v3 = v2;
    v4 = sub_1BB86C6E8();
    v6 = v5;

    v7 = (void *)sub_1BB86C6DC();
    sub_1BA69D314(v4, v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = *(void (**)(void *, _QWORD))(v0 + 16);
  v9 = *(void **)(v0 + 40);
  if (v8)
  {
    v10 = v7;
    v8(v7, 0);

  }
  else
  {

    v9 = v7;
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for PuzzleTypeLinkPresentationSource()
{
  return objc_opt_self();
}

uint64_t sub_1BB47AA1C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB47AA40()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB47AA6C(uint64_t (*a1)(_QWORD, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB47A70C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1BB47AA74()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB47AAB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = v0[5];
  v3 = v0[6];
  v4 = v0[7];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1BA4B0D38;
  v5[2] = v3;
  v5[3] = v4;
  v6 = (_QWORD *)swift_task_alloc();
  v5[4] = v6;
  *v6 = v5;
  v6[1] = sub_1BB47A8A0;
  v6[7] = v2;
  return swift_task_switch();
}

uint64_t sub_1BB47AB48(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_1BB47AB60()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;

  v1 = objc_msgSend(*(id *)(v0 + 56), sel_coverImageAssetHandle);
  *(_QWORD *)(v0 + 64) = v1;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = v1;
  v3 = objc_msgSend(v1, sel_filePath);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BB8729A0();
    v7 = v6;

    *(_QWORD *)(v0 + 32) = v5;
    *(_QWORD *)(v0 + 40) = v7;
    sub_1BA92A198();
    swift_allocObject();
    v8 = sub_1BB86E9E0();
  }
  else
  {
    *(_QWORD *)(swift_task_alloc() + 16) = v2;
    sub_1BA92A198();
    swift_allocObject();
    v8 = sub_1BB86EA58();
    swift_task_dealloc();
  }
  *(_QWORD *)(v0 + 72) = v8;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v10;
  *v10 = v0;
  v10[1] = sub_1BB47ACAC;
  return sub_1BB86E908();
}

uint64_t sub_1BB47ACAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BB47AD18()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  void *v5;
  void *v6;
  uint8_t *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;

  swift_release();
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v1 = sub_1BB86EFEC();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED476918);
  swift_unknownObjectRetain_n();
  v2 = sub_1BB86EFC8();
  v3 = sub_1BB8732F4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(void **)(v0 + 88);
  v6 = *(void **)(v0 + 56);
  if (v4)
  {
    v15 = *(void **)(v0 + 64);
    v16 = *(void **)(v0 + 88);
    v7 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v17 = v14;
    *(_DWORD *)v7 = 136315138;
    v8 = objc_msgSend(v6, sel_identifier);
    v9 = sub_1BB8729A0();
    v11 = v10;

    *(_QWORD *)(v0 + 48) = sub_1BA5D2E14(v9, v11, &v17);
    sub_1BB873A8C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_1BA493000, v2, v3, "Failed downloading asset handle for Puzzle Type ID: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v14, -1, -1);
    MEMORY[0x1BCCE5C38](v7, -1, -1);

    v12 = v16;
  }
  else
  {

    swift_unknownObjectRelease_n();
    v12 = v5;
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1BB47AF2C(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v12++, 1))
      break;
    if (v12 >= v10)
      goto LABEL_27;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
    {
      v17 = v12 + 1;
      if (v12 + 1 >= v10)
        goto LABEL_27;
      v16 = *(_QWORD *)(v6 + 8 * v17);
      if (!v16)
      {
        v17 = v12 + 2;
        if (v12 + 2 >= v10)
          goto LABEL_27;
        v16 = *(_QWORD *)(v6 + 8 * v17);
        if (!v16)
        {
          v17 = v12 + 3;
          if (v12 + 3 >= v10)
            goto LABEL_27;
          v16 = *(_QWORD *)(v6 + 8 * v17);
          if (!v16)
          {
            v17 = v12 + 4;
            if (v12 + 4 >= v10)
            {
LABEL_27:
              swift_release();
              v18 = 0;
              return v18 & 1;
            }
            v16 = *(_QWORD *)(v6 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_30;
                if (v12 >= v10)
                  goto LABEL_27;
                v16 = *(_QWORD *)(v6 + 8 * v12);
                ++v17;
                if (v16)
                  goto LABEL_18;
              }
            }
          }
        }
      }
      v12 = v17;
    }
LABEL_18:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_19:
    v19 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v14);
    result = a1(&v19);
    if (v3)
    {
      swift_release();
      return v18 & 1;
    }
    if ((result & 1) != 0)
    {
      swift_release();
      v18 = 1;
      return v18 & 1;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BB47B0CC(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v15;

  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v6 = 4;
      do
      {
        v7 = v6 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x1BCCE4630](v6 - 4, a3);
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_16;
        }
        else
        {
          v8 = *(_QWORD *)(a3 + 8 * v6);
          swift_retain();
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v15 = v8;
        v10 = a1(&v15);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return v12 & 1;
        }
        v11 = v10;
        swift_release();
        if ((v11 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v12 = 1;
          return v12 & 1;
        }
        ++v6;
      }
      while (v9 != v5);
    }
  }
  swift_bridgeObjectRelease();
  v12 = 0;
  return v12 & 1;
}

uint64_t WebEmbedDataVisualization.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[2];
  uint64_t v14;
  unint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB05D18C(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA5193C4((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v14 = 0x3A636972656E6567;
    v15 = 0xE90000000000003ALL;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v8);
    swift_bridgeObjectRelease();
    v9 = v14;
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    v10 = *v7;
    v14 = 0x3A3A7374726F7073;
    v15 = 0xE800000000000000;
    v13[1] = v10;
    SportsDataVisualization.identifier.getter();
    sub_1BB872AFC(v11);
    swift_bridgeObjectRelease();
    swift_release();
    return v14;
  }
  return v9;
}

uint64_t WebEmbedDataVisualization.sportsDataVisualization.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v4);
  v6 = (unint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB05D18C(v2, (uint64_t)v6);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    result = sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v8 = 0xF000000000000007;
  }
  else
  {
    v8 = *v6;
  }
  *a1 = v8;
  return result;
}

uint64_t WebEmbedDataVisualization.urlDataSources.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v1 = v0;
  v2 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB05D18C(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA5193C4((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v8 = *(_QWORD *)&v4[*(int *)(v2 + 24)];
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    v11[1] = *v7;
    SportsDataVisualization.urlDataSources.getter();
    v8 = v9;
    swift_release();
  }
  return v8;
}

uint64_t WebEmbedDataVisualization.webEmbedKind.getter@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  BOOL v6;
  uint64_t result;
  uint64_t v8;

  v3 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB05D18C(v1, (uint64_t)v5);
  v6 = swift_getEnumCaseMultiPayload() == 1;
  result = sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  *a1 = v6;
  return result;
}

uint64_t WebEmbedDataVisualization.kind.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v1 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB05D18C(v0, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() != 1)
    __asm { BR              X11 }
  sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  return 0x636972656E6567;
}

void sub_1BB47B6AC()
{
  swift_release();
  JUMPOUT(0x1BB47B678);
}

void sub_1BB47B6C8()
{
  swift_release();
  JUMPOUT(0x1BB47B678);
}

void sub_1BB47B6E8()
{
  swift_release();
  JUMPOUT(0x1BB47B678);
}

void sub_1BB47B708()
{
  swift_release();
  JUMPOUT(0x1BB47B678);
}

void sub_1BB47B728()
{
  swift_release();
  JUMPOUT(0x1BB47B678);
}

void sub_1BB47B74C()
{
  swift_release();
  JUMPOUT(0x1BB47B678);
}

void sub_1BB47B774()
{
  swift_release();
  JUMPOUT(0x1BB47B678);
}

uint64_t static WebEmbedDataVisualization.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = WebEmbedDataVisualization.identifier.getter();
  v2 = v1;
  if (v0 == WebEmbedDataVisualization.identifier.getter() && v2 == v3)
    v4 = 1;
  else
    v4 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1BB47B828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for WebEmbedDataVisualization();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v19 - v7);
  sub_1BB05D18C(v1, (uint64_t)v19 - v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    return MEMORY[0x1E0DEE9D8];
  }
  v9 = *v8;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)*v8 >> 61 == 2)
  {
    v12 = *(_QWORD *)(v9 + 16) + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations;
    swift_retain();
    swift_retain();
    v11 = sub_1BB71F8EC(v12);
    swift_release();
    swift_release();
  }
  v13 = *(_QWORD *)(v11 + 16);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  v19[1] = v9;
  v20 = v10;
  sub_1BAC79D6C(0, v13, 0);
  v14 = 0;
  v15 = v20;
  do
  {
    *v5 = *(_QWORD *)(v11 + 8 * v14 + 32);
    swift_storeEnumTagMultiPayload();
    v20 = v15;
    v17 = *(_QWORD *)(v15 + 16);
    v16 = *(_QWORD *)(v15 + 24);
    swift_retain();
    if (v17 >= v16 >> 1)
    {
      sub_1BAC79D6C(v16 > 1, v17 + 1, 1);
      v15 = v20;
    }
    ++v14;
    *(_QWORD *)(v15 + 16) = v17 + 1;
    sub_1BA5193C4((uint64_t)v5, v15+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  }
  while (v13 != v14);
  swift_bridgeObjectRelease();
  swift_release();
  return v15;
}

BOOL static WebEmbedKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WebEmbedKind.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t WebEmbedKind.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t WebEmbedDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB47BAE4(SportsDataVisualization.embedUrl.getter, a1);
}

uint64_t WebEmbedDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB47BAE4(SportsDataVisualization.configuredEmbedUrl.getter, a1);
}

uint64_t sub_1BB47BAE4@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[2];

  v4 = v2;
  v6 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB05D18C(v4, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA5193C4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v12 = &v8[*(int *)(v6 + 20)];
    v13 = sub_1BB86C67C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a2, v12, v13);
    return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    v15[1] = *v11;
    a1();
    return swift_release();
  }
}

uint64_t sub_1BB47BC24()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v0 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for WebEmbedDataVisualization();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v5 = (_QWORD *)((char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v22 - v7;
  v9 = sub_1BB47B828();
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v10, 0);
    v11 = v9 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    v22[1] = v9;
    v23 = v12;
    do
    {
      sub_1BB05D18C(v11, (uint64_t)v8);
      sub_1BB05D18C((uint64_t)v8, (uint64_t)v5);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BA5193C4((uint64_t)v5, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
        v26 = 0x3A636972656E6567;
        v27 = 0xE90000000000003ALL;
        swift_bridgeObjectRetain();
        sub_1BB872AFC(v13);
        swift_bridgeObjectRelease();
        v15 = v26;
        v14 = v27;
        sub_1BA4A2E80((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
      }
      else
      {
        v25 = *v5;
        v26 = 0x3A3A7374726F7073;
        v27 = 0xE800000000000000;
        SportsDataVisualization.identifier.getter();
        sub_1BB872AFC(v16);
        swift_bridgeObjectRelease();
        swift_release();
        v15 = v26;
        v14 = v27;
      }
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v17 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v28;
      }
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BA7447E8(v18 > 1, v19 + 1, 1);
        v17 = v28;
      }
      *(_QWORD *)(v17 + 16) = v19 + 1;
      v20 = v17 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v14;
      v11 += v23;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v17;
}

uint64_t sub_1BB47BEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_1BB86C67C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB05D18C(v1, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA5193C4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v12 = *(_QWORD *)&v8[*(int *)(v6 + 24)];
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    v27 = *v11;
    SportsDataVisualization.urlDataSources.getter();
    v12 = v13;
    swift_release();
  }
  v26 = v12;
  if (!(v12 >> 62))
  {
    v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    v27 = v17;
    v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB47DA24();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v23, MEMORY[0x1E0CB0018]);
    v24 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    return v24;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_16;
LABEL_6:
  v27 = MEMORY[0x1E0DEE9D8];
  result = sub_1BAC79D98(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = 0;
    v17 = v27;
    v18 = v26;
    v19 = v26 & 0xC000000000000001;
    do
    {
      if (v19)
      {
        v20 = MEMORY[0x1BCCE4630](v16, v18);
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v20 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v2);
        v18 = v26;
        swift_unknownObjectRelease();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v18 + 8 * v16 + 32) + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v2);
      }
      v27 = v17;
      v22 = *(_QWORD *)(v17 + 16);
      v21 = *(_QWORD *)(v17 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1BAC79D98(v21 > 1, v22 + 1, 1);
        v18 = v26;
        v17 = v27;
      }
      ++v16;
      *(_QWORD *)(v17 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v17+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v22, v5, v2);
    }
    while (v14 != v16);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB47C228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB47C538(a1, a2);
}

uint64_t sub_1BB47C23C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  unint64_t v34;

  v32 = sub_1BB47BEC4();
  v1 = sub_1BB47B828();
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_25:
    v34 = v6;
    v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1BA4B07F0(0, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB86C67C();
    sub_1BB47DA24();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, v28, MEMORY[0x1E0CB0018]);
    v29 = sub_1BB872BC8();
    swift_bridgeObjectRelease();
    v34 = v32;
    sub_1BB3839F8(v29);
    v30 = sub_1BB872BC8();
    result = swift_bridgeObjectRelease();
    *a1 = v30;
    return result;
  }
  v3 = *(_QWORD *)(type metadata accessor for WebEmbedDataVisualization() - 8);
  v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v5 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v6 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    sub_1BB47C23C(&v34, v4);
    v7 = v34;
    v8 = *(_QWORD *)(v34 + 16);
    v9 = *(_QWORD *)(v6 + 16);
    v10 = v9 + v8;
    if (__OFADD__(v9, v8))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v10 <= *(_QWORD *)(v6 + 24) >> 1)
    {
      if (*(_QWORD *)(v7 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v9 <= v10)
        v12 = v9 + v8;
      else
        v12 = v9;
      v6 = sub_1BA6C2E20(isUniquelyReferenced_nonNull_native, v12, 1, v6);
      if (*(_QWORD *)(v7 + 16))
      {
LABEL_14:
        v13 = *(_QWORD *)(v6 + 16);
        v14 = (*(_QWORD *)(v6 + 24) >> 1) - v13;
        v15 = sub_1BB86C67C();
        if (v14 < v8)
          goto LABEL_28;
        v16 = *(_QWORD *)(v15 - 8);
        v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
        v18 = *(_QWORD *)(v16 + 72);
        v19 = v6 + v17 + v18 * v13;
        v20 = v7 + v17;
        v21 = v18 * v8;
        v22 = v19 + v21;
        v23 = v20 + v21;
        if (v20 < v22 && v19 < v23)
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v8)
        {
          v25 = *(_QWORD *)(v6 + 16);
          v26 = __OFADD__(v25, v8);
          v27 = v25 + v8;
          if (v26)
            goto LABEL_29;
          *(_QWORD *)(v6 + 16) = v27;
        }
        goto LABEL_4;
      }
    }
    if (v8)
      goto LABEL_27;
LABEL_4:
    swift_bridgeObjectRelease();
    v4 += v5;
    if (!--v2)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB47C538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t WebEmbedDataVisualization.dataSourcesContains(url:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD v15[2];

  v2 = v1;
  v4 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB05D18C(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA5193C4((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v10 = *(_QWORD *)&v6[*(int *)(v4 + 24)];
    swift_bridgeObjectRetain();
    v11 = sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  }
  else
  {
    v15[0] = *v9;
    SportsDataVisualization.urlDataSources.getter();
    v10 = v12;
    v11 = swift_release();
  }
  MEMORY[0x1E0C80A78](v11);
  v15[-2] = a1;
  v13 = sub_1BB47B0CC(sub_1BB47C6F0, (uint64_t)&v15[-4], v10);
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t sub_1BB47C6F0(_QWORD *a1)
{
  uint64_t v1;

  return MEMORY[0x1BCCDCEFC](*a1 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1BB47C730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = WebEmbedDataVisualization.identifier.getter();
  v2 = v1;
  if (v0 == WebEmbedDataVisualization.identifier.getter() && v2 == v3)
    v4 = 1;
  else
    v4 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t WebEmbedDataVisualization.hash(into:)()
{
  WebEmbedDataVisualization.identifier.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t WebEmbedDataVisualization.hashValue.getter()
{
  sub_1BB8745CC();
  WebEmbedDataVisualization.identifier.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t WebEmbedDataVisualization.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v17 = a2;
  v18 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v18);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB47CE80(0, (unint64_t *)&unk_1ED3AB458, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v19 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - v7;
  v9 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB47CB04();
  v12 = v20;
  sub_1BB87468C();
  if (!v12)
  {
    v20 = v9;
    v24 = 0;
    sub_1BB47CB48();
    v13 = v19;
    sub_1BB8740D4();
    if ((v25 & 1) != 0)
    {
      v23 = 1;
      sub_1BA4A2870(&qword_1EF2C4AC0, (uint64_t (*)(uint64_t))type metadata accessor for GenericDataVisualization, (uint64_t)&protocol conformance descriptor for GenericDataVisualization);
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v13);
      sub_1BA5193C4((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    }
    else
    {
      v22 = 1;
      sub_1BB47CB8C();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v13);
      *v11 = v21;
    }
    v15 = v17;
    swift_storeEnumTagMultiPayload();
    sub_1BA5193C4((uint64_t)v11, v15, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BB47CB04()
{
  unint64_t result;

  result = qword_1ED3A7A10;
  if (!qword_1ED3A7A10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91BED8, &type metadata for WebEmbedDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A7A10);
  }
  return result;
}

unint64_t sub_1BB47CB48()
{
  unint64_t result;

  result = qword_1ED3A7A38;
  if (!qword_1ED3A7A38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91BEB0, &type metadata for WebEmbedDataVisualization.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A7A38);
  }
  return result;
}

unint64_t sub_1BB47CB8C()
{
  unint64_t result;

  result = qword_1ED3A7360;
  if (!qword_1ED3A7360)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualization, &type metadata for SportsDataVisualization);
    atomic_store(result, (unint64_t *)&qword_1ED3A7360);
  }
  return result;
}

uint64_t WebEmbedDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int16 v23;
  char v24;
  char v25;
  char v26;

  v2 = v1;
  v4 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v4);
  v18 = (uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB47CE80(0, (unint64_t *)&unk_1ED3AB6C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v10 = v9;
  v20 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB47CB04();
  sub_1BB8746C8();
  sub_1BB05D18C(v2, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = v18;
    sub_1BA5193C4((uint64_t)v8, v18, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v26 = 1;
    v25 = 0;
    sub_1BB47CEDC();
    v14 = v19;
    sub_1BB8741AC();
    if (!v14)
    {
      v24 = 1;
      sub_1BA4A2870(&qword_1EF2C4AC8, (uint64_t (*)(uint64_t))type metadata accessor for GenericDataVisualization, (uint64_t)&protocol conformance descriptor for GenericDataVisualization);
      sub_1BB8741AC();
    }
    sub_1BA4A2E80(v13, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v10);
  }
  else
  {
    v16 = *v8;
    v23 = 0;
    sub_1BB47CEDC();
    v17 = v19;
    sub_1BB8741AC();
    if (!v17)
    {
      v21 = v16;
      v22 = 1;
      sub_1BB47CF20();
      sub_1BB8741AC();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v10);
    return swift_release();
  }
}

void sub_1BB47CE80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB47CB04();
    v7 = a3(a1, &type metadata for WebEmbedDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB47CEDC()
{
  unint64_t result;

  result = qword_1ED3A7A28;
  if (!qword_1ED3A7A28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91BE88, &type metadata for WebEmbedDataVisualization.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A7A28);
  }
  return result;
}

unint64_t sub_1BB47CF20()
{
  unint64_t result;

  result = qword_1ED3A7358;
  if (!qword_1ED3A7358)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualization, &type metadata for SportsDataVisualization);
    atomic_store(result, (unint64_t *)&qword_1ED3A7358);
  }
  return result;
}

unint64_t sub_1BB47CF68()
{
  unint64_t result;

  result = qword_1EF2C4AD0;
  if (!qword_1EF2C4AD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for WebEmbedKind, &type metadata for WebEmbedKind);
    atomic_store(result, (unint64_t *)&qword_1EF2C4AD0);
  }
  return result;
}

uint64_t sub_1BB47CFAC()
{
  return sub_1BA4A2870(&qword_1ED3A7A60, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualization);
}

uint64_t sub_1BB47CFD8@<X0>(char *a1@<X8>)
{
  return sub_1BA4E2654(a1);
}

uint64_t sub_1BB47CFE4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB47D044()
{
  sub_1BB47CB04();
  return sub_1BB874710();
}

uint64_t sub_1BB47D06C()
{
  sub_1BB47CB04();
  return sub_1BB87471C();
}

uint64_t sub_1BB47D094(char *a1, char *a2)
{
  return sub_1BB7F3BE4(*a1, *a2);
}

uint64_t sub_1BB47D0A0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB47D11C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB47D174()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB47D1EC@<X0>(char *a1@<X8>)
{
  return sub_1BA4E2654(a1);
}

void sub_1BB47D1F8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7374726F7073;
  if (*v1)
    v2 = 0x636972656E6567;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB47D234()
{
  sub_1BB47DA84();
  return sub_1BB872D60();
}

uint64_t sub_1BB47D290()
{
  sub_1BB47DA84();
  return sub_1BB872D0C();
}

uint64_t sub_1BB47D2DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WebEmbedDataVisualization.init(from:)(a1, a2);
}

uint64_t sub_1BB47D2F0(_QWORD *a1)
{
  return WebEmbedDataVisualization.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for WebEmbedKind()
{
  return &type metadata for WebEmbedKind;
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedDataVisualization(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v8 = a2[1];
      *a1 = v7;
      a1[1] = v8;
      v9 = type metadata accessor for GenericDataVisualization();
      v10 = *(int *)(v9 + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1BB86C67C();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for WebEmbedDataVisualization(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for GenericDataVisualization() + 20);
  v3 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for WebEmbedDataVisualization(_QWORD *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = type metadata accessor for GenericDataVisualization();
    v8 = *(int *)(v7 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C67C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
    swift_bridgeObjectRetain();
  }
  else
  {
    *a1 = v5;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for WebEmbedDataVisualization(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      v5 = type metadata accessor for GenericDataVisualization();
      v6 = *(int *)(v5 + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1BB86C67C();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      *(_QWORD *)((char *)a1 + *(int *)(v5 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for WebEmbedDataVisualization(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = type metadata accessor for GenericDataVisualization();
    v7 = *(int *)(v6 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for WebEmbedDataVisualization(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = type metadata accessor for GenericDataVisualization();
      v7 = *(int *)(v6 + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for WebEmbedDataVisualization.CodingType()
{
  return &type metadata for WebEmbedDataVisualization.CodingType;
}

uint64_t _s8NewsFeed12WebEmbedKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB47D884 + 4 * byte_1BB91BB3C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB47D8B8 + 4 * byte_1BB91BB37[v4]))();
}

uint64_t sub_1BB47D8B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB47D8C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB47D8C8);
  return result;
}

uint64_t sub_1BB47D8D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB47D8DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB47D8E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB47D8E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDataVisualization.CodingKeys()
{
  return &type metadata for WebEmbedDataVisualization.CodingKeys;
}

unint64_t sub_1BB47D908()
{
  unint64_t result;

  result = qword_1EF2C4AD8;
  if (!qword_1EF2C4AD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91BDC0, &type metadata for WebEmbedDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4AD8);
  }
  return result;
}

unint64_t sub_1BB47D950()
{
  unint64_t result;

  result = qword_1EF2C4AE0;
  if (!qword_1EF2C4AE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91BE60, &type metadata for WebEmbedDataVisualization.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2C4AE0);
  }
  return result;
}

unint64_t sub_1BB47D998()
{
  unint64_t result;

  result = qword_1ED3A7A20;
  if (!qword_1ED3A7A20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91BCF8, &type metadata for WebEmbedDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A7A20);
  }
  return result;
}

unint64_t sub_1BB47D9E0()
{
  unint64_t result;

  result = qword_1ED3A7A18;
  if (!qword_1ED3A7A18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91BD20, &type metadata for WebEmbedDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A7A18);
  }
  return result;
}

unint64_t sub_1BB47DA24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AAD58;
  if (!qword_1ED3AAD58)
  {
    sub_1BA4B07F0(255, &qword_1ED3AAD50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AAD58);
  }
  return result;
}

unint64_t sub_1BB47DA84()
{
  unint64_t result;

  result = qword_1ED3A7A30;
  if (!qword_1ED3A7A30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91BDE8, &type metadata for WebEmbedDataVisualization.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A7A30);
  }
  return result;
}

void sub_1BB47DAC8()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB47DB20@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;

  sub_1BB872AFC(a1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  return v4;
}

id sub_1BB47DBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  void *ObjCClassFromMetadata;
  void *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t aBlock[6];

  swift_beginAccess();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  sub_1BB47DAC8();
  sub_1BA761FE4(v8, v9, aBlock[0]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v11 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  aBlock[4] = (uint64_t)sub_1BB47DF4C;
  aBlock[5] = (uint64_t)v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BB2B22A4;
  aBlock[3] = (uint64_t)&block_descriptor_74;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v14 = objc_msgSend(ObjCClassFromMetadata, sel_contextualActionWithStyle_title_handler_, 0, v11, v13);
  _Block_release(v13);

  v15 = (void *)objc_opt_self();
  v16 = v14;
  v17 = objc_msgSend(v15, sel_systemOrangeColor);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  v18 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v18);

  objc_msgSend(v16, sel_setImage_, v19);
  swift_release();
  swift_release();
  swift_release();
  return v16;
}

uint64_t type metadata accessor for DebugFormatInventoryPinAction()
{
  return objc_opt_self();
}

uint64_t sub_1BB47DF18()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB47DF4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(uint64_t (**)(uint64_t))(v3 + 32);
  sub_1BB47DAC8();
  sub_1BB2351B8(v6, v7);
  swift_bridgeObjectRelease();
  v8 = a3(1);
  return v5(v8);
}

uint64_t sub_1BB47DFBC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  sub_1BB444E18(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - v8;
  v10 = type metadata accessor for FormatDebuggerContext();
  v42 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB8726B8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *a1;
  v18 = a1[1];
  v19 = a1[2];
  v40 = a1[3];
  v41 = v17;
  v38 = (void *)a1[4];
  v39 = v19;
  sub_1BA657D64();
  *v16 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF738], v13);
  LOBYTE(a1) = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((a1 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  sub_1BB86DD20();
  if (*(_BYTE *)(v2 + 64) == 1)
  {
    v21 = OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count;
    if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count))
    {
      v22 = v2 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_internalContext;
      swift_beginAccess();
      sub_1BB47F860(v22, (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v9, 1, v10) == 1)
      {
        sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB444E18);
        v12 = 1;
        v23 = v18;
        v24 = v39;
        goto LABEL_18;
      }
      sub_1BB47F97C((uint64_t)v9, v12);
      v26 = *(_QWORD *)(v12 + 16);
      v25 = *(_QWORD *)(v12 + 24);
      v23 = v18;
      if (*(_QWORD *)v12 == v41 && *(_QWORD *)(v12 + 8) == v18)
      {
        v24 = v39;
      }
      else
      {
        v27 = sub_1BB874398();
        v24 = v39;
        if ((v27 & 1) == 0)
          goto LABEL_17;
      }
      if (v26 == v24 && v25 == v40)
      {
        v28 = *(_QWORD *)(v12 + 40);
        sub_1BA4A2E80(v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
        v12 = v28 + 1;
        if (!__OFADD__(v28, 1))
        {
LABEL_18:
          v29 = v2 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_callStack;
          swift_beginAccess();
          v30 = (char *)v6 + *(int *)(v10 + 24);
          sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v30, v29, v31);
          *v6 = v41;
          v6[1] = v23;
          v32 = v40;
          v6[2] = v24;
          v6[3] = v32;
          v33 = v38;
          v6[4] = v38;
          v6[5] = v12;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v6, 0, 1, v10);
          swift_bridgeObjectRetain();
          sub_1BB445734(v33);
          result = sub_1BB47E7DC((uint64_t)v6);
          v34 = *(_QWORD *)(v2 + v21);
          v35 = __OFADD__(v34, 1);
          v36 = v34 + 1;
          if (!v35)
          {
            *(_QWORD *)(v2 + v21) = v36;
            sub_1BB86DD2C();
            return sub_1BB8734EC();
          }
          goto LABEL_21;
        }
        __break(1u);
      }
LABEL_17:
      sub_1BA4A2E80(v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatDebuggerContext);
      v12 = 1;
      goto LABEL_18;
    }
  }
  return sub_1BB86DD2C();
}

uint64_t sub_1BB47E34C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BB86DD20();
  *(_BYTE *)(v0 + 64) = 2;
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  sub_1BB86DD2C();
  sub_1BB86DD20();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count) != 1)
    return sub_1BB86DD2C();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count) = 0;
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_breakExecutionState;
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 2;
  sub_1BB86DD2C();
  return sub_1BB8734F8();
}

uint64_t sub_1BB47E410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[32];

  sub_1BB444E18(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB86DD20();
  if (*(_BYTE *)(v0 + 64) == 1)
  {
    swift_beginAccess();
    sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
    sub_1BB86E824();
    swift_endAccess();
    v4 = type metadata accessor for FormatDebuggerContext();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
    sub_1BB47E7DC((uint64_t)v3);
    *(_BYTE *)(v0 + 64) = 0;
    v7[8] = 0;
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
  }
  sub_1BB86DD2C();
  sub_1BB86DD20();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count) != 1)
    return sub_1BB86DD2C();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count) = 0;
  v5 = v0 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_breakExecutionState;
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 2;
  sub_1BB86DD2C();
  return sub_1BB8734F8();
}

uint64_t sub_1BB47E590()
{
  return sub_1BB47E5A0(0);
}

uint64_t sub_1BB47E598()
{
  return sub_1BB47E5A0(1);
}

uint64_t sub_1BB47E5A0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = v1;
  sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  sub_1BB86DD20();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count) != 1)
    return sub_1BB86DD2C();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count) = 0;
  v9 = v1 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_callStack;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_1BB4456C4();
  sub_1BB8730D8();
  sub_1BB873114();
  v10 = sub_1BB873108();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v3 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_breakExecutionState;
  *(_QWORD *)v11 = v10;
  *(_BYTE *)(v11 + 8) = a1;
  sub_1BB86DD2C();
  return sub_1BB8734F8();
}

uint64_t sub_1BB47E718()
{
  uint64_t v0;

  sub_1BB86DD20();
  if (!*(_BYTE *)(v0 + 64))
  {
    swift_beginAccess();
    sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
    sub_1BB86E824();
    swift_endAccess();
    *(_BYTE *)(v0 + 64) = 1;
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
  }
  return sub_1BB86DD2C();
}

uint64_t sub_1BB47E7DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  sub_1BB444E18(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - v7;
  v9 = v1 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_internalContext;
  swift_beginAccess();
  sub_1BB47F938(a1, v9);
  swift_endAccess();
  sub_1BB47F860(v9, (uint64_t)v8);
  sub_1BB47F860((uint64_t)v8, (uint64_t)v5);
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BB444E18);
  return sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))sub_1BB444E18);
}

uint64_t sub_1BB47E8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[8];
  uint64_t v20;

  v1 = v0;
  v2 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v2);
  sub_1BB444E18(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v19[-v7];
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1BB47F7F4();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1BB86E47C();
  v19[7] = 0;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB40C0];
  sub_1BA4AD288(0, &qword_1EF2C4C88, (uint64_t)&type metadata for FormatDebugger.State, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB40C0]);
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_1BB86E47C();
  v10 = type metadata accessor for FormatDebuggerContext();
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v8, 1, 1, v10);
  sub_1BB47F860((uint64_t)v8, (uint64_t)v5);
  sub_1BA4B07F0(0, &qword_1EF2C4C90, (uint64_t (*)(uint64_t))sub_1BB444E18, v9);
  swift_allocObject();
  v12 = sub_1BB86E47C();
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BB444E18);
  *(_QWORD *)(v1 + 32) = v12;
  if (qword_1EF2A6FB0 != -1)
    swift_once();
  sub_1BB47F8A4();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v1 + 40) = sub_1BB86D2F4();
  if (qword_1EF2A6FB8 != -1)
    swift_once();
  swift_allocObject();
  swift_retain();
  v13 = sub_1BB86D2F4();
  v14 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v1 + 48) = v13;
  *(_QWORD *)(v1 + 56) = v14;
  *(_BYTE *)(v1 + 64) = 0;
  v11((_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_internalContext), 1, 1, v10);
  v15 = OBJC_IVAR____TtC8NewsFeed14FormatDebugger_semaphore;
  *(_QWORD *)(v1 + v15) = dispatch_semaphore_create(0);
  v16 = OBJC_IVAR____TtC8NewsFeed14FormatDebugger_lock;
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  *(_QWORD *)(v1 + v16) = sub_1BB86DD50();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count) = 0;
  v17 = v1 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_breakExecutionState;
  *(_QWORD *)v17 = 0;
  *(_BYTE *)(v17 + 8) = 2;
  type metadata accessor for FormatDebuggerCallStackFrame(0);
  sub_1BB86E830();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_internalBindBreakExecution) = 1;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_internalLayoutBreakExecution) = 1;
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2AC();
  swift_release();
  swift_retain();
  sub_1BB86D2D0();
  swift_release();
  sub_1BB86D2AC();
  swift_release();
  return v1;
}

uint64_t sub_1BB47ECF0()
{
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  return swift_release();
}

uint64_t sub_1BB47ED78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  v2 = a1;
  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_18:
    swift_beginAccess();
    *(_QWORD *)(v2 + 56) = v6;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v5 = (uint64_t *)(a2 + 56);
  v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v9 = *(v5 - 3);
    v8 = *(v5 - 2);
    v11 = *(v5 - 1);
    v10 = *v5;
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = sub_1BB4AB3C0(v9, v8, v11, v10);
    v15 = v6[2];
    v16 = (v13 & 1) == 0;
    v17 = v15 + v16;
    if (__OFADD__(v15, v16))
      break;
    v18 = v13;
    if (v6[3] >= v17)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v13 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BB4C9F74();
        if ((v18 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BB4BAF24(v17, isUniquelyReferenced_nonNull_native);
      v19 = sub_1BB4AB3C0(v9, v8, v11, v10);
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_21;
      v14 = v19;
      if ((v18 & 1) != 0)
      {
LABEL_3:
        v7 = (uint64_t *)(v6[7] + 32 * v14);
        swift_bridgeObjectRelease();
        *v7 = v9;
        v7[1] = v8;
        v7[2] = v11;
        v7[3] = v10;
        goto LABEL_4;
      }
    }
    v6[(v14 >> 6) + 8] |= 1 << v14;
    v21 = (uint64_t *)(v6[6] + 32 * v14);
    *v21 = v9;
    v21[1] = v8;
    v21[2] = v11;
    v21[3] = v10;
    v22 = (uint64_t *)(v6[7] + 32 * v14);
    *v22 = v9;
    v22[1] = v8;
    v22[2] = v11;
    v22[3] = v10;
    v23 = v6[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_20;
    v6[2] = v25;
    swift_bridgeObjectRetain();
LABEL_4:
    v5 += 4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      v2 = a1;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB47EF8C()
{
  return sub_1BB47EFA4();
}

uint64_t sub_1BB47EF98()
{
  return sub_1BB47EFA4();
}

uint64_t sub_1BB47EFA4()
{
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  return swift_release();
}

uint64_t sub_1BB47F030@<X0>(uint64_t *a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = v3;
  sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v51 - v11;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v52 = *a1;
  v53 = v14;
  sub_1BB86DD20();
  if ((a2 & 1) != 0)
  {
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_internalLayoutBreakExecution) & 1) == 0)
      goto LABEL_27;
  }
  else if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_internalBindBreakExecution) & 1) == 0)
  {
    goto LABEL_27;
  }
  v51 = v15;
  v16 = v3 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_breakExecutionState;
  v17 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_breakExecutionState);
  if (!*(_BYTE *)(v3 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_breakExecutionState + 8))
  {
    swift_beginAccess();
    v26 = *(_QWORD *)(v3 + 56);
    if (*(_QWORD *)(v26 + 16))
    {
      swift_bridgeObjectRetain();
      v27 = sub_1BB4AB3C0(v52, v13, v53, v51);
      if ((v28 & 1) != 0)
      {
        v29 = (uint64_t *)(*(_QWORD *)(v26 + 56) + 32 * v27);
        v31 = *v29;
        v30 = v29[1];
        v32 = v29[2];
        v33 = v29[3];
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)v16 = 0;
        *(_BYTE *)(v16 + 8) = 2;
        *a3 = v31;
        a3[1] = v30;
        a3[2] = v32;
        a3[3] = v33;
        a3[4] = 1;
        return sub_1BB86DD2C();
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    v47 = v4 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_callStack;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v47, v9);
    sub_1BB4456C4();
    sub_1BB8730D8();
    sub_1BB873114();
    v48 = sub_1BB873108();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v17 >= v48)
    {
      *(_QWORD *)v16 = 0;
      *(_BYTE *)(v16 + 8) = 2;
      *a3 = v52;
      a3[1] = v13;
      v49 = v51;
      a3[2] = v53;
      a3[3] = v49;
      v34 = 1;
      goto LABEL_24;
    }
    goto LABEL_27;
  }
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_breakExecutionState + 8) != 1)
  {
    if (v17)
    {
      *(_QWORD *)v16 = 0;
      v34 = 2;
      *(_BYTE *)(v16 + 8) = 2;
      *a3 = v52;
      a3[1] = v13;
      v35 = v51;
      a3[2] = v53;
      a3[3] = v35;
LABEL_24:
      a3[4] = v34;
      swift_bridgeObjectRetain();
      return sub_1BB86DD2C();
    }
    swift_beginAccess();
    v36 = *(_QWORD *)(v3 + 56);
    if (*(_QWORD *)(v36 + 16))
    {
      swift_bridgeObjectRetain();
      v37 = sub_1BB4AB3C0(v52, v13, v53, v51);
      if ((v38 & 1) != 0)
      {
        v39 = (uint64_t *)(*(_QWORD *)(v36 + 56) + 32 * v37);
        v41 = *v39;
        v40 = v39[1];
        v42 = v39[2];
        v43 = v39[3];
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *a3 = v41;
        a3[1] = v40;
        a3[2] = v42;
        a3[3] = v43;
        a3[4] = 0;
        return sub_1BB86DD2C();
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
LABEL_27:
    a3[4] = 0;
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
    return sub_1BB86DD2C();
  }
  swift_beginAccess();
  v18 = *(_QWORD *)(v3 + 56);
  if (!*(_QWORD *)(v18 + 16))
  {
LABEL_19:
    swift_endAccess();
    v44 = v4 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_callStack;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v44, v9);
    sub_1BB4456C4();
    sub_1BB8730D8();
    sub_1BB873114();
    v45 = sub_1BB873108();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v45 < v17)
    {
      *(_QWORD *)v16 = 0;
      *(_BYTE *)(v16 + 8) = 2;
      *a3 = v52;
      a3[1] = v13;
      v46 = v51;
      a3[2] = v53;
      a3[3] = v46;
      v34 = 3;
      goto LABEL_24;
    }
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  v19 = sub_1BB4AB3C0(v52, v13, v53, v51);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v21 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 32 * v19);
  v23 = *v21;
  v22 = v21[1];
  v24 = v21[2];
  v25 = v21[3];
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 2;
  *a3 = v23;
  a3[1] = v22;
  a3[2] = v24;
  a3[3] = v25;
  a3[4] = 3;
  return sub_1BB86DD2C();
}

uint64_t sub_1BB47F4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_internalContext, (uint64_t (*)(_QWORD))sub_1BB444E18);

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_callStack;
  sub_1BA4B07F0(0, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1BB47F568()
{
  sub_1BB47F4A4();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB47F58C()
{
  return type metadata accessor for FormatDebugger();
}

uint64_t type metadata accessor for FormatDebugger()
{
  uint64_t result;

  result = qword_1EF2C4B78;
  if (!qword_1EF2C4B78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB47F5D0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BB444E18(319);
  if (v0 <= 0x3F)
  {
    sub_1BA4B07F0(319, qword_1EF2B1E70, type metadata accessor for FormatDebuggerCallStackFrame, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4A68]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

ValueMetadata *type metadata accessor for FormatDebugger.BreakExecutionState()
{
  return &type metadata for FormatDebugger.BreakExecutionState;
}

uint64_t storeEnumTagSinglePayload for FormatDebugger.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB47F72C + 4 * byte_1BB91BF65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB47F760 + 4 * asc_1BB91BF60[v4]))();
}

uint64_t sub_1BB47F760(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB47F768(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB47F770);
  return result;
}

uint64_t sub_1BB47F77C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB47F784);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB47F788(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB47F790(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDebugger.State()
{
  return &type metadata for FormatDebugger.State;
}

unint64_t sub_1BB47F7B0()
{
  unint64_t result;

  result = qword_1EF2C4C70;
  if (!qword_1EF2C4C70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91C02C, &type metadata for FormatDebugger.State);
    atomic_store(result, (unint64_t *)&qword_1EF2C4C70);
  }
  return result;
}

void sub_1BB47F7F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4C78)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1EF2C4C80, (uint64_t)&type metadata for FormatDebuggerBreakpoint, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB86E4C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4C78);
  }
}

uint64_t sub_1BB47F860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB444E18(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BB47F8A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BAC58)
  {
    v0 = sub_1BB86D2E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BAC58);
  }
}

void sub_1BB47F900()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_internalLayoutBreakExecution) = *(_BYTE *)(v0 + 24);
}

void sub_1BB47F918()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_internalBindBreakExecution) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1BB47F930()
{
  uint64_t v0;

  return sub_1BB47ED78(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB47F938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB444E18(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB47F97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDebuggerContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1BB47F9C0(uint64_t a1, char a2)
{
  return sub_1BB47F9DC(a1, a2, &OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
}

double sub_1BB47F9DC(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  double v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  void *v16;
  double v17;
  double v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v22;
  char v23;

  v9 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (id *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(_QWORD *)(a1 + *a3 + 8);
  if (a2 < 0)
  {
    sub_1BAF64E08(v15, (uint64_t)v11);
    if (v3)
      return v4;
    v23 = a2 & 0x7F;
    sub_1BAFB5E5C((uint64_t)v11);
    v4 = v18;
    v19 = (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic;
    v20 = (uint64_t)v11;
    goto LABEL_13;
  }
  sub_1BA4A9E78(v15, (uint64_t)v14);
  if (v3)
    return v4;
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v14[5], sel_videoDuration);
  }
  else
  {
    v16 = *(id *)((char *)v14 + *(int *)(v12 + 56));
    if (!v16)
    {
      v4 = 0.0;
      goto LABEL_12;
    }
    objc_msgSend(v16, sel_duration);
  }
  v4 = v17;
LABEL_12:
  v19 = type metadata accessor for FeedHeadline;
  v20 = (uint64_t)v14;
LABEL_13:
  sub_1BA4A2E80(v20, v19);
  return v4;
}

double sub_1BB47FB4C(uint64_t a1, char a2)
{
  uint64_t v2;
  double v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  void *v12;
  double v13;
  double v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  _BYTE v18[16];

  v6 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (id *)&v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2 < 0)
  {
    sub_1BA9AD478();
    if (v2)
      return v3;
    v18[15] = a2 & 0x7F;
    sub_1BAFB5E5C((uint64_t)v8);
    v3 = v14;
    v15 = (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic;
    v16 = (uint64_t)v8;
    goto LABEL_13;
  }
  sub_1BA9AD408();
  if (v2)
    return v3;
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v11[5], sel_videoDuration);
  }
  else
  {
    v12 = *(id *)((char *)v11 + *(int *)(v9 + 56));
    if (!v12)
    {
      v3 = 0.0;
      goto LABEL_12;
    }
    objc_msgSend(v12, sel_duration);
  }
  v3 = v13;
LABEL_12:
  v15 = type metadata accessor for FeedHeadline;
  v16 = (uint64_t)v11;
LABEL_13:
  sub_1BA4A2E80(v16, v15);
  return v3;
}

uint64_t FormatBindingFloatExpression.logic.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BAC6535C(v2);
}

double sub_1BB47FCBC(uint64_t a1, unsigned int a2)
{
  return sub_1BB47FCF4(a1, a2, &OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack);
}

double sub_1BB47FCD8(uint64_t a1, unsigned int a2)
{
  return sub_1BB47FCF4(a1, a2, &OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
}

double sub_1BB47FCF4(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  double v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  int v14;
  double v15;
  void *v16;
  double v17;
  double v18;
  _BYTE v20[16];

  v8 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (id *)&v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = (a2 >> 5) & 3;
  if (!v14)
  {
    sub_1BA70DDB0(*(_QWORD *)(a1 + *a3), (uint64_t)v13);
    if (v3)
      return v4;
    if ((a2 & 1) != 0)
    {
      objc_msgSend(v13[5], sel_videoDuration);
    }
    else
    {
      v16 = *(id *)((char *)v13 + *(int *)(v11 + 56));
      if (!v16)
      {
        v4 = 0.0;
        goto LABEL_15;
      }
      objc_msgSend(v16, sel_duration);
    }
    v4 = v17;
LABEL_15:
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FeedHeadline);
    return v4;
  }
  if (v14 == 1)
  {
    sub_1BB3118E0(*(_QWORD *)(a1 + *a3), (uint64_t)v10);
    if (!v3)
    {
      v20[15] = a2 & 0x9F;
      sub_1BAFB5E5C((uint64_t)v10);
      v4 = v15;
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    }
  }
  else
  {
    v18 = sub_1BB47F9DC(a1, a2 & 0x9F, a3);
    if (!v3)
      return v18;
  }
  return v4;
}

double sub_1BB47FEA4(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  double v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  int v12;
  double v13;
  void *v14;
  double v15;
  double v16;
  uint64_t v18;
  char v19;

  v6 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (id *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (a2 >> 5) & 3;
  if (!v12)
  {
    sub_1BA75D250();
    if (v2)
      return v3;
    if ((a2 & 1) != 0)
    {
      objc_msgSend(v11[5], sel_videoDuration);
    }
    else
    {
      v14 = *(id *)((char *)v11 + *(int *)(v9 + 56));
      if (!v14)
      {
        v3 = 0.0;
        goto LABEL_15;
      }
      objc_msgSend(v14, sel_duration);
    }
    v3 = v15;
LABEL_15:
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FeedHeadline);
    return v3;
  }
  if (v12 == 1)
  {
    sub_1BA9AD170();
    if (!v2)
    {
      v19 = a2 & 0x9F;
      sub_1BAFB5E5C((uint64_t)v8);
      v3 = v13;
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    }
  }
  else
  {
    v16 = sub_1BB47FB4C(a1, a2 & 0x9F);
    if (!v2)
      return v16;
  }
  return v3;
}

void FormatBindingFloatExpression.binding.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FormatBindingFloatExpression.logic.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1BAC653C4(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t (*FormatBindingFloatExpression.logic.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB480074(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  int v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;

  v8 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (id *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (a2 >> 5) & 3;
  if (v14)
  {
    if (v14 != 1)
    {
      sub_1BB47F9DC(a1, a2 & 0x9F, &OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
      goto LABEL_11;
    }
    sub_1BB3118E0(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v10);
    LOBYTE(v20) = a2 & 0x9F;
    sub_1BAFB5E5C((uint64_t)v10);
    v15 = (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic;
    v16 = (uint64_t)v10;
  }
  else
  {
    sub_1BA70DDB0(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v13);
    if ((a2 & 1) != 0)
    {
      objc_msgSend(v13[5], sel_videoDuration);
    }
    else
    {
      v17 = *(id *)((char *)v13 + *(int *)(v11 + 56));
      if (v17)
        objc_msgSend(v17, sel_duration);
    }
    v15 = type metadata accessor for FeedHeadline;
    v16 = (uint64_t)v13;
  }
  sub_1BA4A2E80(v16, v15);
LABEL_11:
  if (a3 == 12)
  {
    sub_1BAC653C4(a3);
    return 0;
  }
  else
  {
    if (a3 != 13)
    {
      v20 = a4;
      sub_1BAC6535C(a3);
      sub_1BB86DD80();
      FormatFloat.value(contextLayoutOptions:)();
      swift_release();
      sub_1BAC653C4(a3);
      __asm { BR              X10 }
    }
    sub_1BAC653C4(a3);
    return 1;
  }
}

void sub_1BB4802D8()
{
  JUMPOUT(0x1BB480288);
}

void sub_1BB4802E4()
{
  JUMPOUT(0x1BB480288);
}

void sub_1BB4802F0()
{
  JUMPOUT(0x1BB480288);
}

uint64_t sub_1BB480314@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingFloatExpression.init(from:)(a1, a2);
}

uint64_t sub_1BB480328(_QWORD *a1)
{
  return FormatBindingFloatExpression.encode(to:)(a1);
}

BOOL _s8NewsFeed28FormatBindingFloatExpressionV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  char v11;
  _BYTE v12[8];
  uint64_t v13;

  v2 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v3 = *((_QWORD *)a1 + 2);
  v5 = *a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = (v2 >> 5) & 3;
  if (v7)
  {
    if (v7 == 1)
    {
      v8 = (v5 ^ v2) & 0xFFFFFF9F;
      if ((v5 & 0x60) != 0x20 || v8 != 0)
        return 0;
      goto LABEL_9;
    }
    if ((v5 & 0x60) == 0x40)
    {
      if ((v2 & 0x80) != 0)
      {
        if ((v5 & 0x80) == 0 || ((v5 ^ v2) & 0x1F) != 0)
          return 0;
      }
      else if ((v5 & 0x80) != 0 || ((v5 ^ v2) & 1) != 0)
      {
        return 0;
      }
LABEL_9:
      if (*((_QWORD *)a1 + 1) == 12)
      {
        if (*((_QWORD *)a2 + 1) == 12)
        {
LABEL_19:
          sub_1BAC653C4(*((_QWORD *)a1 + 1));
          sub_1BAC653C4(v6);
          sub_1BAC653C4(v4);
          return 1;
        }
      }
      else
      {
        if (*((_QWORD *)a1 + 1) == 13)
        {
          if (*((_QWORD *)a2 + 1) != 13)
            goto LABEL_22;
          goto LABEL_19;
        }
        if ((v6 & 0xFE) != 0xC)
        {
          v12[0] = *((_QWORD *)a1 + 1);
          v13 = v3;
          sub_1BAC6535C(v4);
          sub_1BAC6535C(v6);
          sub_1BAC6535C(v6);
          sub_1BAC6535C(v4);
          sub_1BAC6535C(v6);
          sub_1BAC6535C(v4);
          v11 = _s8NewsFeed40FormatBindingFloatExpressionLogicCompareV2eeoiySbAC_ACtFZ_0((uint64_t)v12);
          sub_1BAC653C4(v4);
          sub_1BAC653C4(v6);
          sub_1BAC653C4(v6);
          sub_1BAC653C4(v4);
          sub_1BAC653C4(v6);
          sub_1BAC653C4(v4);
          return (v11 & 1) != 0;
        }
      }
LABEL_22:
      sub_1BAC6535C(*((_QWORD *)a2 + 1));
      sub_1BAC6535C(v4);
      sub_1BAC653C4(v4);
      sub_1BAC653C4(v6);
    }
  }
  else if (!(v5 & 0x60 | (v5 ^ v2) & 1))
  {
    goto LABEL_9;
  }
  return 0;
}

unint64_t sub_1BB480548(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB48056C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB48056C()
{
  unint64_t result;

  result = qword_1EF2C4C98;
  if (!qword_1EF2C4C98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpression, &type metadata for FormatBindingFloatExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C4C98);
  }
  return result;
}

unint64_t sub_1BB4805B0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE83D44();
  a1[2] = sub_1BAEF5C94();
  result = sub_1BB4805E4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4805E4()
{
  unint64_t result;

  result = qword_1EF2C4CA0;
  if (!qword_1EF2C4CA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpression, &type metadata for FormatBindingFloatExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C4CA0);
  }
  return result;
}

uint64_t sub_1BB480628@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = v3;
  a2[1] = v2;
  return sub_1BAC6535C(v3);
}

uint64_t sub_1BB480638(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  v5 = *(_QWORD *)(a2 + 8);
  sub_1BAC6535C(*a1);
  result = sub_1BAC653C4(v5);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  return result;
}

uint64_t destroy for FormatBindingFloatExpression(uint64_t result)
{
  if ((*(_QWORD *)(result + 8) & 0xFELL) != 0xC)
    return swift_release();
  return result;
}

uint64_t _s8NewsFeed28FormatBindingFloatExpressionVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  if ((v3 & 0xFE) == 0xC)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  else
  {
    *(_BYTE *)(a1 + 8) = v3;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_retain();
  }
  return a1;
}

uint64_t assignWithCopy for FormatBindingFloatExpression(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  v6 = v4 & 0xFE;
  if ((*(_QWORD *)(a1 + 8) & 0xFELL) != 0xC)
  {
    if (v6 != 12)
    {
      *(_BYTE *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1BB4807BC(a1 + 8);
    goto LABEL_6;
  }
  if (v6 == 12)
  {
LABEL_6:
    *v3 = *v5;
    return a1;
  }
  *(_BYTE *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t sub_1BB4807BC(uint64_t a1)
{
  destroy for FormatBindingFloatExpressionLogicCompare();
  return a1;
}

uint64_t assignWithTake for FormatBindingFloatExpression(uint64_t a1, uint64_t a2)
{
  char v3;
  _OWORD *v4;
  _OWORD *v5;

  v4 = (_OWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 8);
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v5 = (_OWORD *)(a2 + 8);
  if ((v3 & 0xFE) != 0xCLL)
  {
    if ((*(_QWORD *)(a2 + 8) & 0xFELL) != 0xC)
    {
      *(_BYTE *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_release();
      return a1;
    }
    sub_1BB4807BC(a1 + 8);
  }
  *v4 = *v5;
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingFloatExpression()
{
  return &type metadata for FormatBindingFloatExpression;
}

uint64_t sub_1BB480884(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int isUniquelyReferenced_nonNull_native;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v5 = *(_QWORD *)(a1 + 8 * v3 + 32);
    v6 = *(_QWORD *)(v5 + 16);
    v7 = *(_QWORD *)(v4 + 16);
    v8 = v7 + v6;
    if (__OFADD__(v7, v6))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v8 <= *(_QWORD *)(v4 + 24) >> 1)
    {
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v7 <= v8)
        v10 = v7 + v6;
      else
        v10 = v7;
      v4 = sub_1BA79170C(isUniquelyReferenced_nonNull_native, v10, 1, v4);
      if (*(_QWORD *)(v5 + 16))
      {
LABEL_14:
        v11 = *(_QWORD *)(v4 + 16);
        v12 = (*(_QWORD *)(v4 + 24) >> 1) - v11;
        sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
        if (v12 < v6)
          goto LABEL_28;
        v14 = *(_QWORD *)(v13 - 8);
        v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        v16 = *(_QWORD *)(v14 + 72);
        v17 = v4 + v15 + v16 * v11;
        v18 = v5 + v15;
        v19 = v16 * v6;
        v20 = v17 + v19;
        v21 = v18 + v19;
        if (v18 < v20 && v17 < v21)
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v6)
        {
          v23 = *(_QWORD *)(v4 + 16);
          v24 = __OFADD__(v23, v6);
          v25 = v23 + v6;
          if (v24)
            goto LABEL_29;
          *(_QWORD *)(v4 + 16) = v25;
        }
        goto LABEL_4;
      }
    }
    if (v6)
      goto LABEL_27;
LABEL_4:
    ++v3;
    swift_bridgeObjectRelease();
    if (v1 == v3)
    {
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB480A74(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1E0DEE9D8];
  for (i = 32; ; i += 16)
  {
    v10 = *(_QWORD *)(a1 + i);
    v11 = *(_QWORD *)(v10 + 16);
    v12 = *(_QWORD *)(v8 + 16);
    if (__OFADD__(v12, v11))
      break;
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native() && v12 + v11 <= *(_QWORD *)(v8 + 24) >> 1)
    {
      if (*(_QWORD *)(v10 + 16))
        goto LABEL_11;
    }
    else
    {
      v8 = a2();
      if (*(_QWORD *)(v10 + 16))
      {
LABEL_11:
        v13 = *(_QWORD *)(v8 + 16);
        v14 = (*(_QWORD *)(v8 + 24) >> 1) - v13;
        sub_1BA4CDF6C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
        if (v14 < v11)
          goto LABEL_25;
        v16 = *(_QWORD *)(v15 - 8);
        v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
        v18 = *(_QWORD *)(v16 + 72);
        v19 = v8 + v17 + v18 * v13;
        v20 = v10 + v17;
        v21 = v18 * v11;
        v22 = v19 + v21;
        v23 = v20 + v21;
        if (v20 < v22 && v19 < v23)
          goto LABEL_27;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v25 = *(_QWORD *)(v8 + 16);
          v26 = __OFADD__(v25, v11);
          v27 = v25 + v11;
          if (v26)
            goto LABEL_26;
          *(_QWORD *)(v8 + 16) = v27;
        }
        goto LABEL_4;
      }
    }
    if (v11)
      goto LABEL_24;
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB480C5C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t i;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v46 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v46);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB495154(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatBindingContent();
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  MEMORY[0x1E0C80A78](v7);
  v37 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v36 = (uint64_t)&v35 - v10;
  v11 = type metadata accessor for DebugFormatCacheFile();
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v41 = (uint64_t)&v35 - v15;
  v16 = *(_QWORD *)(a1 + 64);
  v39 = a1 + 64;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v40 = (unint64_t)(v17 + 63) >> 6;
  v47 = a1;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v38 = MEMORY[0x1E0DEE9D8];
  if (v19)
    goto LABEL_8;
LABEL_14:
  v31 = v21 + 1;
  if (!__OFADD__(v21, 1))
  {
    if (v31 < v40)
    {
      v32 = *(_QWORD *)(v39 + 8 * v31);
      ++v21;
      if (v32)
        goto LABEL_29;
      v21 = v31 + 1;
      if (v31 + 1 >= v40)
        goto LABEL_32;
      v32 = *(_QWORD *)(v39 + 8 * v21);
      if (v32)
        goto LABEL_29;
      v21 = v31 + 2;
      if (v31 + 2 >= v40)
        goto LABEL_32;
      v32 = *(_QWORD *)(v39 + 8 * v21);
      if (v32)
        goto LABEL_29;
      v21 = v31 + 3;
      if (v31 + 3 >= v40)
        goto LABEL_32;
      v32 = *(_QWORD *)(v39 + 8 * v21);
      if (v32)
      {
LABEL_29:
        v19 = (v32 - 1) & v32;
        for (i = __clz(__rbit64(v32)) + (v21 << 6); ; i = v24 | (v21 << 6))
        {
          v34 = v41;
          sub_1BA4C2DD8(*(_QWORD *)(v47 + 56) + *(_QWORD *)(v44 + 72) * i, v41, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
          sub_1BA5193C4(v34, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
          sub_1BA4C2DD8((uint64_t)&v13[*(int *)(v45 + 32)], (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
          if (swift_getEnumCaseMultiPayload() == 11)
          {
            sub_1BA5193C4((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatBindingContent);
            v22 = v42;
            v23 = v43;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v6, 0, 1, v43);
          }
          else
          {
            v22 = v42;
            v23 = v43;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v6, 1, 1, v43);
            sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
          }
          sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v6, 1, v23) == 1)
          {
            result = sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BB495154);
            if (!v19)
              goto LABEL_14;
          }
          else
          {
            v26 = v36;
            sub_1BA5193C4((uint64_t)v6, v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatBindingContent);
            sub_1BA5193C4(v26, v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatBindingContent);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v38 = sub_1BB393978(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
            v28 = *(_QWORD *)(v38 + 16);
            v27 = *(_QWORD *)(v38 + 24);
            if (v28 >= v27 >> 1)
              v38 = sub_1BB393978(v27 > 1, v28 + 1, 1, v38);
            v29 = v37;
            v30 = v38;
            *(_QWORD *)(v38 + 16) = v28 + 1;
            result = sub_1BA5193C4(v29, v30+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatBindingContent);
            if (!v19)
              goto LABEL_14;
          }
LABEL_8:
          v24 = __clz(__rbit64(v19));
          v19 &= v19 - 1;
        }
      }
      v33 = v31 + 4;
      if (v33 < v40)
      {
        v32 = *(_QWORD *)(v39 + 8 * v33);
        if (v32)
        {
          v21 = v33;
          goto LABEL_29;
        }
        while (1)
        {
          v21 = v33 + 1;
          if (__OFADD__(v33, 1))
            goto LABEL_34;
          if (v21 >= v40)
            break;
          v32 = *(_QWORD *)(v39 + 8 * v21);
          ++v33;
          if (v32)
            goto LABEL_29;
        }
      }
    }
LABEL_32:
    swift_release();
    return v38;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1BB4810F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;

  v5 = sub_1BB492FB4(a1, a2, a3, a4, a5);
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BB48113C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t (*v22)();
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)();
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  BOOL v66;
  uint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];
  _OWORD *v73;
  _QWORD *v74;
  char *v75;
  int64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int64_t i;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _OWORD v94[4];

  sub_1BAFBE9EC(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for DebugFormatCacheFile();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v83 = (uint64_t)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v6);
  v85 = (uint64_t)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v90 = (uint64_t)v72 - v9;
  sub_1BB494EC0();
  v89 = v10;
  MEMORY[0x1E0C80A78](v10);
  v74 = (_QWORD *)((char *)v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v72 - v13;
  MEMORY[0x1E0C80A78](v15);
  v84 = (char *)v72 - v16;
  v93 = MEMORY[0x1E0DEE9E0];
  v17 = *(_QWORD *)(a1 + 64);
  v77 = a1 + 64;
  v18 = -1 << *(_BYTE *)(a1 + 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v17;
  v72[0] = -1 << *(_BYTE *)(a1 + 32);
  v76 = (unint64_t)(63 - v18) >> 6;
  v73 = v4 + 64;
  result = swift_bridgeObjectRetain();
  i = 0;
  v22 = type metadata accessor for DebugFormatCacheFile;
  v82 = a1;
  v75 = v4;
  if (v20)
    goto LABEL_7;
LABEL_8:
  v24 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v24 < v76)
    {
      v25 = *(_QWORD *)(v77 + 8 * v24);
      v26 = i + 1;
      if (v25)
        goto LABEL_23;
      v26 = i + 2;
      if (i + 2 >= v76)
        goto LABEL_42;
      v25 = *(_QWORD *)(v77 + 8 * v26);
      if (v25)
        goto LABEL_23;
      v26 = i + 3;
      if (i + 3 >= v76)
        goto LABEL_42;
      v25 = *(_QWORD *)(v77 + 8 * v26);
      if (v25)
        goto LABEL_23;
      v26 = i + 4;
      if (i + 4 >= v76)
        goto LABEL_42;
      v25 = *(_QWORD *)(v77 + 8 * v26);
      if (v25)
      {
LABEL_23:
        v91 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v26 << 6);
        for (i = v26; ; v23 = __clz(__rbit64(v20)) | (i << 6))
        {
          v28 = *(_QWORD *)(a1 + 56);
          v29 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v23);
          v31 = *v29;
          v30 = v29[1];
          v32 = v86;
          v33 = v89;
          v34 = v84;
          sub_1BA4C2DD8(v28 + *(_QWORD *)(v86 + 72) * v23, (uint64_t)&v84[*(int *)(v89 + 48)], (uint64_t (*)(_QWORD))v22);
          *v34 = v31;
          v34[1] = v30;
          v92 = v30;
          sub_1BA5193C4((uint64_t)v34, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BB494EC0);
          v35 = (uint64_t)&v14[*(int *)(v33 + 48)];
          v36 = v90;
          sub_1BA4C2DD8(v35, v90, (uint64_t (*)(_QWORD))v22);
          v37 = v87;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v36, 0, 1, v87);
          v38 = v22;
          v39 = v85;
          sub_1BA4C2DD8(v36, v85, (uint64_t (*)(_QWORD))sub_1BAA197E8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v39, 1, v37) == 1)
          {
            swift_bridgeObjectRetain();
            sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))sub_1BAA197E8);
            sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))sub_1BAA197E8);
            result = sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BB494EC0);
            v22 = v38;
            v20 = v91;
            a1 = v82;
            if (!v91)
              goto LABEL_8;
          }
          else
          {
            v40 = v14;
            v41 = v83;
            sub_1BA5193C4(v39, v83, (uint64_t (*)(_QWORD))v38);
            v42 = *(_QWORD *)(v41 + 8);
            v79 = *(_QWORD *)v41;
            v43 = *(_QWORD *)(v41 + 16);
            v81 = *(unsigned __int8 *)(v41 + 24);
            v44 = *(_QWORD *)(v41 + 40);
            v80 = *(_QWORD *)(v41 + 32);
            v45 = v41 + *(int *)(v37 + 24);
            v46 = (uint64_t)v75;
            sub_1BA4C2DD8(v45, (uint64_t)v75, (uint64_t (*)(_QWORD))sub_1BAFBE9EC);
            v47 = type metadata accessor for FormatDerivedDataFile();
            v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47);
            v78 = v42;
            if (v48 == 1)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v49 = v44;
              swift_bridgeObjectRetain();
              sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))sub_1BAFBE9EC);
              v92 = MEMORY[0x1E0DEE9D8];
            }
            else
            {
              v50 = v73[1];
              v94[0] = *v73;
              v94[1] = v50;
              v51 = v73[3];
              v94[2] = v73[2];
              v94[3] = v51;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v49 = v44;
              swift_bridgeObjectRetain();
              sub_1BA8EBB84((uint64_t)v94);
              sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
              v92 = sub_1BB3D7EA0();
              sub_1BA8EBC0C((uint64_t)v94);
            }
            sub_1BA4A2E80(v90, (uint64_t (*)(_QWORD))sub_1BAA197E8);
            sub_1BA4A2E80(v83, (uint64_t (*)(_QWORD))v38);
            v52 = *(int *)(v89 + 48);
            v53 = v74;
            v54 = (char *)v74 + v52;
            v55 = *(_QWORD *)v40;
            v56 = *((_QWORD *)v40 + 1);
            *v74 = *(_QWORD *)v40;
            v53[1] = v56;
            sub_1BA5193C4(v35, (uint64_t)v53 + v52, (uint64_t (*)(_QWORD))v38);
            v57 = v93;
            v58 = *(_QWORD *)(v93 + 16);
            if (*(_QWORD *)(v93 + 24) <= v58)
            {
              sub_1BB4BB2A4(v58 + 1, 1);
              v57 = v93;
            }
            sub_1BB8745CC();
            sub_1BB872A90();
            result = sub_1BB874608();
            v59 = v57 + 64;
            v60 = -1 << *(_BYTE *)(v57 + 32);
            v61 = result & ~v60;
            v62 = v61 >> 6;
            if (((-1 << v61) & ~*(_QWORD *)(v57 + 64 + 8 * (v61 >> 6))) != 0)
            {
              v63 = __clz(__rbit64((-1 << v61) & ~*(_QWORD *)(v57 + 64 + 8 * (v61 >> 6)))) | v61 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              v64 = 0;
              v65 = (unint64_t)(63 - v60) >> 6;
              do
              {
                if (++v62 == v65 && (v64 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_43;
                }
                v66 = v62 == v65;
                if (v62 == v65)
                  v62 = 0;
                v64 |= v66;
                v67 = *(_QWORD *)(v59 + 8 * v62);
              }
              while (v67 == -1);
              v63 = __clz(__rbit64(~v67)) + (v62 << 6);
            }
            *(_QWORD *)(v59 + ((v63 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v63;
            v68 = (_QWORD *)(*(_QWORD *)(v57 + 48) + 16 * v63);
            *v68 = v55;
            v68[1] = v56;
            v69 = *(_QWORD *)(v57 + 56) + (v63 << 7);
            v70 = v78;
            *(_QWORD *)v69 = v79;
            *(_QWORD *)(v69 + 8) = v70;
            *(_QWORD *)(v69 + 16) = v43;
            *(_BYTE *)(v69 + 24) = v81;
            *(_QWORD *)(v69 + 32) = v80;
            *(_QWORD *)(v69 + 40) = v49;
            *(_OWORD *)(v69 + 48) = 0u;
            *(_OWORD *)(v69 + 64) = 0u;
            *(_QWORD *)(v69 + 80) = v92;
            *(_OWORD *)(v69 + 88) = 0u;
            *(_OWORD *)(v69 + 104) = 0u;
            *(_QWORD *)(v69 + 120) = 0;
            ++*(_QWORD *)(v57 + 16);
            v71 = (uint64_t)v54;
            v22 = v38;
            result = sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))v38);
            a1 = v82;
            v14 = v40;
            v20 = v91;
            if (!v91)
              goto LABEL_8;
          }
LABEL_7:
          v91 = (v20 - 1) & v20;
        }
      }
      v27 = i + 5;
      if (i + 5 < v76)
      {
        v25 = *(_QWORD *)(v77 + 8 * v27);
        if (v25)
        {
          v26 = i + 5;
          goto LABEL_23;
        }
        while (1)
        {
          v26 = v27 + 1;
          if (__OFADD__(v27, 1))
            goto LABEL_44;
          if (v26 >= v76)
            break;
          v25 = *(_QWORD *)(v77 + 8 * v26);
          ++v27;
          if (v25)
            goto LABEL_23;
        }
      }
    }
LABEL_42:
    sub_1BA6EBD18();
    return v93;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1BB48193C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  char v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  _QWORD *v16;
  id v17;
  _QWORD *v18;
  _QWORD *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v29;
  void *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v3 = v2;
  v5 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(v5 + 16)
    && (v6 = sub_1BA6E35A8(0x756F724764656546, 0xEC00000067615470), (a2 & 1) != 0)
    && (sub_1BA4C010C(*(_QWORD *)(v5 + 56) + 40 * v6, (uint64_t)&v31),
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B17D0),
        (swift_dynamicCast() & 1) != 0))
  {
    v8 = v29;
    v7 = v30;
    sub_1BB482144(a2, &v31);
    v9 = v31;
    if (v29)
    {
      swift_unknownObjectRetain();
      v10 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    sub_1BB482144(a2, &v31);
    v7 = 0;
    v8 = 0;
    v9 = v31;
  }
  v10 = 1;
LABEL_8:
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBE40, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3258]);
  swift_retain_n();
  v11 = sub_1BB86DD98();
  *(_QWORD *)&v31 = a1;
  BYTE8(v31) = 0;
  BYTE9(v31) = v9;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  *(_QWORD *)&v35 = 0;
  *((_QWORD *)&v35 + 1) = v8;
  v36 = v11;
  if ((v10 & 1) != 0)
  {
    sub_1BB873CB4();
    sub_1BB872AFC("ebug-format-manager");
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v12);
    swift_bridgeObjectRelease();
    if (qword_1EF2A6C58 != -1)
      swift_once();
    sub_1BA9719E4((void *)2, 0, 0, 0, 0xE000000000000000);
    v13 = swift_bridgeObjectRelease();
  }
  else
  {
    v14 = v7;
    swift_unknownObjectRetain();
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v15);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v16);
    v17 = objc_msgSend(v8, sel_name);
    sub_1BB8729A0();

    sub_1BB872AFC(v18);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v19);
    v20 = objc_msgSend(v8, sel_identifier);
    sub_1BB8729A0();

    sub_1BB872AFC(v21);
    swift_bridgeObjectRelease();
    if (qword_1EF2A6C58 != -1)
      swift_once();
    sub_1BA9719E4((void *)2, 0, 0, 0xD00000000000001ALL, 0x80000001BB98E640);
    swift_bridgeObjectRelease();
    sub_1BB349550((uint64_t)v8, v7);
  }
  MEMORY[0x1E0C80A78](v13);
  sub_1BB86EC14();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v3;
  *(_QWORD *)(v22 + 24) = a1;
  v23 = v34;
  *(_OWORD *)(v22 + 64) = v33;
  *(_OWORD *)(v22 + 80) = v23;
  *(_OWORD *)(v22 + 96) = v35;
  *(_QWORD *)(v22 + 112) = v36;
  v24 = v32;
  *(_OWORD *)(v22 + 32) = v31;
  *(_OWORD *)(v22 + 48) = v24;
  swift_retain_n();
  swift_retain();
  sub_1BA70A884(0, 0);
  swift_unknownObjectRetain();
  swift_retain();
  v25 = (void *)sub_1BB86E854();
  sub_1BA4AD288(0, &qword_1EF2C4D88, (uint64_t)&type metadata for FeedFontLoadResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB86E968();
  swift_release();
  swift_release();

  swift_retain();
  v26 = (void *)sub_1BB86E854();
  type metadata accessor for FormatPackageInventory();
  v27 = sub_1BB86E974();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();

  sub_1BA70AB94(0, 0);
  swift_release();
  swift_unknownObjectRelease();
  sub_1BB349550((uint64_t)v8, v7);
  return v27;
}

uint64_t sub_1BB481E94(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  char v8;

  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_release();
  sub_1BB493348();
  sub_1BB86EC14();
  v3 = swift_allocObject();
  *(_BYTE *)(v3 + 16) = v8;
  *(_BYTE *)(v3 + 17) = a2;
  v4 = (void *)sub_1BB86E854();
  sub_1BB219F30(0);
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v5 = (void *)sub_1BB86E854();
  v6 = sub_1BB86EA10();
  swift_release();

  return v6;
}

uint64_t sub_1BB481FEC(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  char v8;

  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_release();
  sub_1BB493348();
  sub_1BB86EC14();
  v3 = swift_allocObject();
  *(_BYTE *)(v3 + 16) = v8;
  *(_BYTE *)(v3 + 17) = a2;
  v4 = (void *)sub_1BB86E854();
  sub_1BB219F68(0);
  sub_1BB86E980();
  swift_release();
  swift_release();

  v5 = (void *)sub_1BB86E854();
  v6 = sub_1BB86EA10();
  swift_release();

  return v6;
}

uint64_t sub_1BB482144@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  int v4;
  uint64_t result;
  char v6;

  v4 = *(unsigned __int8 *)(v2 + 72);
  if (v4 == 8)
  {
    if (qword_1ED3D5158 != -1)
      swift_once();
    sub_1BA50AD30(&qword_1EF2C4D90, a1, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManager, (uint64_t)&unk_1BB91C214);
    result = sub_1BB86D210();
    LOBYTE(v4) = v6;
    *(_BYTE *)(v2 + 72) = v6;
  }
  *a2 = v4;
  return result;
}

_QWORD *sub_1BB4821EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = (_QWORD *)v2;
  v18 = a1;
  v19 = a2;
  v4 = sub_1BB873450();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB87342C();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1BB872664();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v10);
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  v11 = sub_1BB86DD50();
  v12 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v2 + 16) = v11;
  *(_QWORD *)(v2 + 24) = v12;
  *(_QWORD *)(v2 + 32) = v12;
  *(_QWORD *)(v2 + 40) = v12;
  type metadata accessor for DebugFormatService();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v2 + 48) = v13;
  *(_BYTE *)(v2 + 72) = 8;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  sub_1BB872640();
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2BADD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  sub_1BB873420();
  v20 = v14;
  sub_1BA50AD30((unint64_t *)&unk_1ED3B9840, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1BA81D850(0);
  sub_1BA50AD30((unint64_t *)&qword_1ED3B9660, 255, (uint64_t (*)(uint64_t))sub_1BA81D850, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D0], v4);
  v3[10] = sub_1BB87348C();
  v15 = v19;
  v3[7] = v18;
  v3[8] = v15;
  return v3;
}

uint64_t sub_1BB4824B8(uint64_t a1, int a2, char a3, int a4)
{
  _QWORD *v4;
  _QWORD *v5;
  char v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _BYTE *v25;
  void *v26;
  uint64_t v27;
  _QWORD v29[2];
  int v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  int v39;
  int v40;

  v5 = v4;
  v40 = a4;
  v38 = a1;
  v32 = *v4;
  v8 = a3 & 1;
  v30 = a3 & 1;
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[1] = v5[10];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v36 = v12;
  v37 = v14;
  v33 = v9;
  ((void (*)(char *, uint64_t, uint64_t, double))v14)(v13, a1, v9, v11);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v35 = v15 | 7;
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = a2;
  v39 = a2;
  *(_BYTE *)(v16 + 17) = v8;
  v34 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v34(v16 + ((v15 + 18) & ~v15), v13, v9);
  type metadata accessor for DebugFormatManagerIndex();
  v31 = v5;
  sub_1BB86EC08();
  swift_release();
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = a2;
  v18 = v30;
  *(_BYTE *)(v17 + 17) = v30;
  v19 = (void *)sub_1BB86E854();
  sub_1BB86E980();
  swift_release();
  swift_release();

  v20 = v33;
  v37(v13, v38, v33);
  v21 = (v15 + 16) & ~v15;
  v22 = v21 + v36;
  v23 = swift_allocObject();
  v34(v23 + v21, v13, v20);
  *(_BYTE *)(v23 + v22) = v18;
  v24 = (void *)sub_1BB86E854();
  sub_1BA6BC5C0(0, &qword_1EF2C4DD0, (void (*)(uint64_t))type metadata accessor for DebugFormatManagerIndex, (void (*)(uint64_t))sub_1BB4943E0);
  sub_1BB86E980();
  swift_release();
  swift_release();

  v25 = (_BYTE *)swift_allocObject();
  v25[16] = v40;
  v25[17] = v39;
  v25[18] = v18;
  v26 = (void *)sub_1BB86E854();
  sub_1BB493348();
  v27 = sub_1BB86E98C();
  swift_release();
  swift_release();

  return v27;
}

uint64_t sub_1BB4827A0(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v28 = a3;
  v29 = a4;
  v26 = a2;
  sub_1BB493348();
  v6 = v5;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DebugFormatManagerIndex();
  v27 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v27 + 64);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - v13;
  v15 = *(int *)(v6 + 48);
  v16 = *(int *)(v6 + 64);
  sub_1BA4C2DD8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  v17 = *(_QWORD *)(a1 + v15);
  v18 = *(_QWORD *)(a1 + v16);
  sub_1BA5193C4((uint64_t)v8, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  v30 = v17;
  v31 = v26;
  sub_1BB4934C4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB86EC14();
  v19 = (void *)sub_1BB86E854();
  sub_1BA86535C(0);
  sub_1BB86E974();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1BA4C2DD8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  v20 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v21 = swift_allocObject();
  *(_BYTE *)(v21 + 16) = v28;
  *(_BYTE *)(v21 + 17) = v29;
  *(_QWORD *)(v21 + 24) = v18;
  sub_1BA5193C4((uint64_t)v11, v21 + v20, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  v22 = (void *)sub_1BB86E854();
  sub_1BB219F68(0);
  v23 = sub_1BB86E974();
  swift_release();
  swift_release();

  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  return v23;
}

uint64_t sub_1BB4829EC@<X0>(uint64_t *a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;

  v26 = a5;
  v24 = a4;
  v25 = a3;
  v9 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DebugFormatManagerIndex();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DebugFormatFileDirectory(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = 0;
  v19 = 0;
  v20 = *a1;
  if ((a2 & 1) == 0 && (v25 & 1) == 0)
  {
    v19 = v24;
    swift_bridgeObjectRetain();
    v18 = 1;
  }
  sub_1BA4C2DD8(v26, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  sub_1BA5193C4((uint64_t)v14, (uint64_t)v17, type metadata accessor for DebugFormatFileDirectory);
  sub_1BA4C2DD8((uint64_t)&v17[*(int *)(v15 + 20)], (uint64_t)v11, type metadata accessor for DebugFormatFileDirectoryMetadata);
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v17, type metadata accessor for DebugFormatFileDirectory);
  *(_QWORD *)a6 = v20;
  *(_QWORD *)(a6 + 8) = v19;
  *(_BYTE *)(a6 + 16) = v18;
  sub_1BB219F68(0);
  return sub_1BA5193C4((uint64_t)v11, a6 + *(int *)(v21 + 28), type metadata accessor for DebugFormatFileDirectoryMetadata);
}

char *sub_1BB482B94(void *a1)
{
  return sub_1BB482E48(a1, (uint64_t (*)(_QWORD, double))sub_1BB219F68, sub_1BB493490);
}

uint64_t sub_1BB482BB8@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  _BYTE *v35;

  v31 = a3;
  v33 = a2;
  v6 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  MEMORY[0x1E0C80A78](v6);
  v35 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = type metadata accessor for DebugFormatFileDirectory(0);
  MEMORY[0x1E0C80A78](v34);
  v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB493348();
  v11 = v10;
  MEMORY[0x1E0C80A78](v10);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for DebugFormatManagerIndex();
  MEMORY[0x1E0C80A78](v14);
  v16 = &v30[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v30[-v18];
  v20 = *(int *)(v11 + 48);
  v21 = *(int *)(v11 + 64);
  sub_1BA4C2DD8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  v22 = *(_QWORD *)(a1 + v20);
  v23 = *(_QWORD *)(a1 + v21);
  sub_1BA5193C4((uint64_t)v13, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v32;
  v25 = sub_1BB480C5C(v22);
  v32 = v24;
  swift_bridgeObjectRelease();
  if ((v33 & 1) != 0 || (v31 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v23 = 0;
    v26 = 0;
  }
  else
  {
    v26 = 1;
  }
  sub_1BA4C2DD8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  sub_1BA5193C4((uint64_t)v16, (uint64_t)v9, type metadata accessor for DebugFormatFileDirectory);
  sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  v27 = v35;
  sub_1BA4C2DD8((uint64_t)&v9[*(int *)(v34 + 20)], (uint64_t)v35, type metadata accessor for DebugFormatFileDirectoryMetadata);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for DebugFormatFileDirectory);
  *(_QWORD *)a4 = v25;
  *(_QWORD *)(a4 + 8) = v23;
  *(_BYTE *)(a4 + 16) = v26;
  sub_1BB219F30(0);
  return sub_1BA5193C4((uint64_t)v27, a4 + *(int *)(v28 + 28), type metadata accessor for DebugFormatFileDirectoryMetadata);
}

char *sub_1BB482E24(void *a1)
{
  return sub_1BB482E48(a1, (uint64_t (*)(_QWORD, double))sub_1BB219F30, sub_1BB495138);
}

char *sub_1BB482E48(void *a1, uint64_t (*a2)(_QWORD, double), void (*a3)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  int v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  id v30;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD);
  uint64_t v35;
  char *v36;
  void *v37;

  v34 = a3;
  v5 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for DebugFormatFileDirectory(0);
  v7 = MEMORY[0x1E0C80A78](v35);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2(0, v7);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  sub_1BB493474(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DebugFormatManagerIndex();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v32 - v20;
  v37 = a1;
  v22 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v23 = type metadata accessor for DebugFormatManagerError();
  v24 = swift_dynamicCast();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  if (!v24)
  {
    v25(v15, 1, 1, v23);
    v29 = (uint64_t (*)(_QWORD))sub_1BB493474;
LABEL_6:
    sub_1BA4A2E80((uint64_t)v15, v29);
    swift_willThrow();
    v30 = a1;
    return v18;
  }
  v26 = (uint64_t)v21;
  v33 = v10;
  v28 = v35;
  v27 = (uint64_t)v36;
  v25(v15, 0, 1, v23);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    v29 = (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerError;
    goto LABEL_6;
  }
  sub_1BA5193C4((uint64_t)v15, v26, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  sub_1BA4C2DD8(v26, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  sub_1BA5193C4((uint64_t)v18, (uint64_t)v9, type metadata accessor for DebugFormatFileDirectory);
  sub_1BA4C2DD8((uint64_t)&v9[*(int *)(v28 + 20)], v27, type metadata accessor for DebugFormatFileDirectoryMetadata);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for DebugFormatFileDirectory);
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 2;
  sub_1BA5193C4(v27, (uint64_t)&v12[*(int *)(v33 + 28)], type metadata accessor for DebugFormatFileDirectoryMetadata);
  v34(0);
  swift_allocObject();
  v18 = (char *)sub_1BB86E9E0();
  sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  return v18;
}

uint64_t sub_1BB483160(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v3 = a2[3];
  v8 = a2[2];
  v9 = v3;
  v10 = a2[4];
  v11 = *((_QWORD *)a2 + 10);
  v4 = a2[1];
  v6 = *a2;
  v7 = v4;
  result = FormatPackageInventory.resources(context:)((uint64_t)&v6, (uint64_t)&v12);
  if (!v2)
  {
    v6 = v12;
    *(_QWORD *)&v7 = v13;
    sub_1BA4AD288(0, &qword_1ED39C338, (uint64_t)&type metadata for FormatPrefetchResources, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  return result;
}

uint64_t sub_1BB483208(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[5];
  uint64_t v16;

  v7 = *a1;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB8856E0;
  v9 = *(_OWORD *)(a4 + 48);
  v15[2] = *(_OWORD *)(a4 + 32);
  v15[3] = v9;
  v15[4] = *(_OWORD *)(a4 + 64);
  v16 = *(_QWORD *)(a4 + 80);
  v10 = *(_OWORD *)(a4 + 16);
  v15[0] = *(_OWORD *)a4;
  v15[1] = v10;
  v11 = sub_1BB483338(v7, a3, (uint64_t)v15);
  if (v4)
  {
    *(_QWORD *)(v8 + 16) = 0;
    return swift_release();
  }
  else
  {
    v13 = v11;
    sub_1BA4AD288(0, &qword_1ED3B0840, (uint64_t)&type metadata for FeedFontLoadResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    *(_QWORD *)(v8 + 32) = v13;
    *(_QWORD *)&v15[0] = v8;
    sub_1BB872DCC();
    v14 = sub_1BB86E92C();
    swift_bridgeObjectRelease();
    return v14;
  }
}

uint64_t sub_1BB483338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v28[3];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char *v45;
  uint64_t v46;
  _QWORD *aBlock;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  unint64_t v54;

  v29 = a2;
  v37 = sub_1BB872610();
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v35 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1BB872664();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1BB86C8B0();
  v31 = *(_QWORD *)(v46 - 8);
  v8 = *(_QWORD *)(v31 + 64);
  MEMORY[0x1E0C80A78](v46);
  v30 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v45 = (char *)v28 - v10;
  v11 = *(_QWORD **)a3;
  v12 = *(_BYTE *)(a3 + 8);
  v13 = *(_BYTE *)(a3 + 9);
  v44 = *(_OWORD *)(a3 + 16);
  v43 = *(_OWORD *)(a3 + 32);
  v42 = *(_OWORD *)(a3 + 48);
  v41 = *(_OWORD *)(a3 + 64);
  v14 = *(_QWORD *)(a3 + 80);
  v15 = MEMORY[0x1E0DEE9D8];
  v54 = MEMORY[0x1E0DEE9D8];
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
LABEL_6:
    v23 = sub_1BA57FC74(v15);
    swift_bridgeObjectRelease();
    v28[1] = *(_QWORD *)(v40 + 56);
    v24 = sub_1BA57FE08(v23);
    swift_bridgeObjectRelease();
    if ((v24 & 0xC000000000000001) != 0)
    {
      if (sub_1BB873BF4())
        goto LABEL_8;
    }
    else if (*(_QWORD *)(v24 + 16))
    {
LABEL_8:
      aBlock = 0;
      v48 = 0xE000000000000000;
      sub_1BB873CB4();
      sub_1BB872AFC(aBlock);
      v28[2] = v24;
      if ((v24 & 0xC000000000000001) != 0)
        v25 = sub_1BB873BF4();
      else
        v25 = *(_QWORD *)(v24 + 16);
      v54 = v25;
      sub_1BB87420C();
      sub_1BB872AFC(v26);
      swift_bridgeObjectRelease();
      sub_1BB872AFC("Prefetching inventory, id=");
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    aBlock = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v48 = MEMORY[0x1E0DEE9D8];
    sub_1BA4AD288(0, &qword_1ED3B0840, (uint64_t)&type metadata for FeedFontLoadResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  v38 = v8;
  v17 = *(_QWORD *)(type metadata accessor for FormatResource(0) - 8);
  v18 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  v19 = a1;
  v20 = *(_QWORD *)(v17 + 72);
  v39 = v19;
  swift_bridgeObjectRetain();
  while (1)
  {
    aBlock = v11;
    LOBYTE(v48) = v12;
    BYTE1(v48) = v13;
    v49 = v44;
    v50 = v43;
    v51 = v42;
    v52 = v41;
    v53 = v14;
    v21 = v18;
    FormatResource.loadableFonts(in:)((uint64_t)&aBlock);
    if (v3)
      break;
    sub_1BB384364(v22);
    v18 += v20;
    if (!--v16)
    {
      swift_bridgeObjectRelease();
      v15 = v54;
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1BB484080(uint64_t a1, char a2, char a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a4;
  v6 = a3 & 1;
  v39 = sub_1BB86C67C();
  v35 = *(_QWORD *)(v39 - 8);
  v7 = *(_QWORD *)(v35 + 64);
  MEMORY[0x1E0C80A78](v39);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v36 = (char *)&v33 - v9;
  v40 = type metadata accessor for DebugFormatManagerIndex();
  MEMORY[0x1E0C80A78](v40);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB494F28(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DebugFormatFileDirectory(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17.n128_f64[0] = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v33 = a1;
    v34 = v6;
    sub_1BB75A6D8(v6, (uint64_t)&unk_1E7270DB8, (uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_1BA5193C4((uint64_t)v14, (uint64_t)v19, type metadata accessor for DebugFormatFileDirectory);
      sub_1BA4C2DD8((uint64_t)v19, (uint64_t)v11, type metadata accessor for DebugFormatFileDirectory);
      swift_storeEnumTagMultiPayload();
      sub_1BA4B07F0(0, &qword_1EF2C4E00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v31 = sub_1BB86E9E0();
      sub_1BA4A2E80((uint64_t)v19, type metadata accessor for DebugFormatFileDirectory);
      return v31;
    }
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BB494F28);
    v6 = v34;
    a1 = v33;
  }
  v20 = *(_QWORD *)(a1 + 48);
  if (v6)
  {
    v21 = v36;
    v24 = sub_1BB86C5BC();
    v23 = v39;
    v22 = v35;
  }
  else
  {
    v22 = v35;
    v21 = v36;
    v23 = v39;
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v35 + 16))(v36, v37, v39, v17);
  }
  MEMORY[0x1E0C80A78](v24);
  *(&v33 - 4) = v20;
  *(&v33 - 3) = (uint64_t)v21;
  *(&v33 - 2) = (uint64_t)&unk_1E7270DE0;
  sub_1BB86EC14();
  v39 = v20;
  *(_QWORD *)(swift_allocObject() + 16) = &unk_1E7270DE0;
  v25 = (void *)sub_1BB86E854();
  sub_1BB494FA0(0);
  sub_1BB86E974();
  swift_release();
  swift_release();

  v26 = v38;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v38, v21, v23);
  v27 = (*(unsigned __int8 *)(v22 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 10;
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v28 + v27, v26, v23);
  *(_QWORD *)(v28 + ((v7 + v27 + 7) & 0xFFFFFFFFFFFFFFF8)) = &unk_1E7270DE0;
  v29 = (void *)sub_1BB86E854();
  type metadata accessor for DebugFormatService();
  sub_1BB86EA28();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v23);
  v30 = (void *)sub_1BB86E854();
  v31 = sub_1BB86E974();
  swift_release();

  return v31;
}

uint64_t sub_1BB4844B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BA4C2DD8(a1, a2, type metadata accessor for DebugFormatFileDirectory);
  type metadata accessor for DebugFormatManagerIndex();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB484504(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v22 = type metadata accessor for DebugFormatManagerIndex();
  v7 = *(_QWORD *)(v22 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v22);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - v11;
  v13 = type metadata accessor for DebugFormatFileDirectory(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    sub_1BA4C2DD8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
    sub_1BA5193C4((uint64_t)v12, (uint64_t)v15, type metadata accessor for DebugFormatFileDirectory);
    sub_1BB484710((uint64_t)v15, a4 & 1);
    sub_1BA4A2E80((uint64_t)v15, type metadata accessor for DebugFormatFileDirectory);
    sub_1BA4C2DD8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
    v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v17 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v9, v17 + v16, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
    v18 = (void *)sub_1BB86E854();
    v19 = sub_1BB86E974();
    swift_release();
    swift_release();

  }
  else
  {
    sub_1BA4C2DD8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
    sub_1BA4B07F0(0, &qword_1EF2C4E00, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerIndex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  return v19;
}

uint64_t sub_1BB484710(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  if ((a2 & 1) != 0)
  {
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    type metadata accessor for DebugFormatFileDirectory(0);
    sub_1BB560778();
    sub_1BB872AFC(v5);
    swift_bridgeObjectRelease();
    if (qword_1EF2A6C58 != -1)
      swift_once();
    sub_1BA9719E4((void *)2, 0, 0, 0xD000000000000028, 0x80000001BB98E770);
    v6 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v6);
    sub_1BA4B07F0(0, &qword_1EF2C4E08, (uint64_t (*)(uint64_t))sub_1BB4933E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BB86EC14();
    v4 = (void *)sub_1BB86E854();
  }
  else
  {
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    type metadata accessor for DebugFormatFileDirectory(0);
    sub_1BB560778();
    sub_1BB872AFC(v2);
    swift_bridgeObjectRelease();
    if (qword_1EF2A6C58 != -1)
      swift_once();
    sub_1BA9719E4((void *)2, 0, 0, 0xD000000000000024, 0x80000001BB98E7A0);
    v3 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v3);
    sub_1BA4B07F0(0, &qword_1EF2C4E08, (uint64_t (*)(uint64_t))sub_1BB4933E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BB86EC14();
    v4 = (void *)sub_1BB86E854();
  }
  v7 = sub_1BB86E98C();
  swift_release();

  return v7;
}

uint64_t sub_1BB4849DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD v22[2];

  v22[1] = a2;
  v7 = type metadata accessor for DebugFormatManagerIndex();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v22 - v12;
  v14 = type metadata accessor for DebugFormatFileDirectory(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (_QWORD *)((char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  sub_1BA5193C4((uint64_t)v13, (uint64_t)v16, type metadata accessor for DebugFormatFileDirectory);
  sub_1BB484BAC(a3, v16, a4 & 1);
  sub_1BA4A2E80((uint64_t)v16, type metadata accessor for DebugFormatFileDirectory);
  sub_1BA4C2DD8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v10, v18 + v17, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  v19 = (void *)sub_1BB86E854();
  sub_1BA6BC5C0(0, &qword_1EF2C4DD0, (void (*)(uint64_t))type metadata accessor for DebugFormatManagerIndex, (void (*)(uint64_t))sub_1BB4943E0);
  v20 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_1BB484BAC(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v3;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[4];

  v6 = a3 & 1;
  v7 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v25 - v11;
  v13 = type metadata accessor for DebugFormatCacheFileMetadata();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DebugFormatFileDirectory(0);
  sub_1BA4C2DD8((uint64_t)a2 + *(int *)(v16 + 20), (uint64_t)v12, type metadata accessor for DebugFormatFileDirectoryMetadata);
  v17 = sub_1BB86EB84();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v12, v17);
  sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v9, type metadata accessor for DebugFormatFileDirectoryMetadata);
  if (v9[*(int *)(v7 + 28)])
    v18 = &unk_1E7269380;
  else
    v18 = &unk_1E72693A8;
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for DebugFormatFileDirectoryMetadata);
  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for DebugFormatFileDirectoryMetadata);
  *(_QWORD *)&v15[*(int *)(v13 + 20)] = v18;
  v19 = sub_1BB4859B8(a2, v6, (uint64_t)v15);
  v20 = v19;
  v22 = v21;
  if (*(_QWORD *)(v19 + 16))
  {
    MEMORY[0x1E0C80A78](v19);
    v25[-6] = v20;
    if (v6)
      LOBYTE(v25[-5]) = 1;
    else
      LOBYTE(v25[-5]) = 0;
    v25[-4] = a1;
    v25[-3] = v3;
    v25[-2] = v15;
    v25[-1] = v22;
    sub_1BB494598();
    v23 = sub_1BB86EC14();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v25[1] = MEMORY[0x1E0DEE9D8];
    v25[2] = v22;
    v25[3] = MEMORY[0x1E0DEE9D8];
    sub_1BA4B07F0(0, &qword_1EF2C4DE8, (uint64_t (*)(uint64_t))sub_1BB494598, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v23 = sub_1BB86E9E0();
  }
  sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  return v23;
}

uint64_t sub_1BB484E34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  sub_1BA6BC5C0(0, &qword_1EF2C4DD0, (void (*)(uint64_t))type metadata accessor for DebugFormatManagerIndex, (void (*)(uint64_t))sub_1BB4943E0);
  v9 = (_QWORD *)(a3 + *(int *)(v8 + 48));
  sub_1BA4C2DD8(a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  *v9 = v5;
  v9[1] = v6;
  v9[2] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB484ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  id v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;

  v43 = a6;
  v50 = a5;
  v51 = a3;
  v45 = a4;
  v46 = a2;
  v49 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  MEMORY[0x1E0C80A78](v49);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for DebugFormatFileDirectory(0);
  MEMORY[0x1E0C80A78](v48);
  v44 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - v11;
  sub_1BA6BC5C0(0, &qword_1EF2C4DD0, (void (*)(uint64_t))type metadata accessor for DebugFormatManagerIndex, (void (*)(uint64_t))sub_1BB4943E0);
  v14 = v13;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v43 - v15;
  v47 = type metadata accessor for DebugFormatManagerIndex();
  MEMORY[0x1E0C80A78](v47);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v43 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v43 - v23;
  v25 = (uint64_t *)(a1 + *(int *)(v14 + 48));
  sub_1BA4C2DD8(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  v26 = *v25;
  v27 = v25[1];
  v28 = v25[2];
  v29 = v26;
  sub_1BA5193C4((uint64_t)v16, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  if ((v51 & 1) == 0 && (v45 & 1) == 0 && !*(_QWORD *)(v29 + 16) && !*(_QWORD *)(v27 + 16))
  {
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    sub_1BA4C2DD8((uint64_t)v24, v42, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  v51 = v50 & 1;
  sub_1BA4C2DD8((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  sub_1BA5193C4((uint64_t)v21, (uint64_t)v12, type metadata accessor for DebugFormatFileDirectory);
  sub_1BA4C2DD8((uint64_t)&v12[*(int *)(v48 + 20)], (uint64_t)v8, type metadata accessor for DebugFormatFileDirectoryMetadata);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for DebugFormatFileDirectory);
  if (v8[*(int *)(v49 + 28)])
    v30 = &unk_1E7270E08;
  else
    v30 = &unk_1E7270E30;
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for DebugFormatFileDirectoryMetadata);
  sub_1BA4C2DD8((uint64_t)v24, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = v44;
    sub_1BA5193C4((uint64_t)v18, v44, type metadata accessor for DebugFormatFileDirectory);
    v32 = v51;
    sub_1BB75AC3C(v31, v51, (uint64_t)v30);
    sub_1BA4A2E80(v31, type metadata accessor for DebugFormatFileDirectory);
    v33 = v32;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
    v33 = v51;
  }
  v34 = sub_1BB485314(v29, v33, (uint64_t)v30);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v28 + 16))
  {
    v35 = *(id *)(v28 + 32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    swift_willThrow();
    return sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  }
  swift_bridgeObjectRelease();
  sub_1BB493348();
  v38 = *(int *)(v37 + 48);
  v39 = *(int *)(v37 + 64);
  v40 = (uint64_t)v24;
  v41 = v43;
  result = sub_1BA5193C4(v40, v43, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
  *(_QWORD *)(v41 + v38) = v34;
  *(_QWORD *)(v41 + v39) = v29;
  return result;
}

uint64_t sub_1BB485314(uint64_t a1, char a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;
  _QWORD *v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t result;
  _QWORD v58[4];
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v4 = v3;
  v62 = a3;
  v6 = a2 & 1;
  v7 = type metadata accessor for DebugFormatCacheFile();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v64 = (uint64_t)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v63 = (uint64_t)v58 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (_QWORD *)((char *)v58 - v13);
  v15 = v3[2];
  sub_1BB86DD20();
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v60 = v4 + 4;
    v61 = v4 + 3;
    v17 = v4[8];
    v58[2] = v15;
    v58[3] = v17;
    v18 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v19 = *(_QWORD *)(v8 + 72);
    v58[1] = a1;
    swift_bridgeObjectRetain();
    v59 = v19;
    do
    {
      sub_1BA4C2DD8(v18, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v23 = *v14;
      v22 = v14[1];
      v24 = v6;
      if ((_DWORD)v6)
      {
        v36 = v60;
        swift_beginAccess();
        sub_1BA4C2DD8((uint64_t)v14, v64, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v65 = (_QWORD *)*v36;
        v38 = v65;
        *v36 = 0x8000000000000000;
        v40 = sub_1BA6E35A8(v23, v22);
        v41 = v38[2];
        v42 = (v39 & 1) == 0;
        v43 = v41 + v42;
        if (__OFADD__(v41, v42))
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          result = sub_1BB874560();
          __break(1u);
          return result;
        }
        v44 = v39;
        if (v38[3] >= v43)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1BB4C7BF8();
        }
        else
        {
          sub_1BB4B7624(v43, isUniquelyReferenced_nonNull_native);
          v45 = sub_1BA6E35A8(v23, v22);
          if ((v44 & 1) != (v46 & 1))
            goto LABEL_38;
          v40 = v45;
        }
        v6 = v24;
        v47 = v65;
        if ((v44 & 1) != 0)
        {
          v20 = v59;
          sub_1BB4944C4(v64, v65[7] + v40 * v59);
        }
        else
        {
          v65[(v40 >> 6) + 8] |= 1 << v40;
          v48 = (uint64_t *)(v47[6] + 16 * v40);
          *v48 = v23;
          v48[1] = v22;
          v20 = v59;
          sub_1BA5193C4(v64, v47[7] + v40 * v59, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
          v49 = v47[2];
          v50 = __OFADD__(v49, 1);
          v51 = v49 + 1;
          if (v50)
            goto LABEL_36;
          v47[2] = v51;
          swift_bridgeObjectRetain();
        }
        v21 = v60;
      }
      else
      {
        v25 = v61;
        swift_beginAccess();
        sub_1BA4C2DD8((uint64_t)v14, v63, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
        swift_bridgeObjectRetain();
        v26 = swift_isUniquelyReferenced_nonNull_native();
        v65 = (_QWORD *)*v25;
        v27 = v65;
        *v25 = 0x8000000000000000;
        v29 = sub_1BA6E35A8(v23, v22);
        v30 = v27[2];
        v31 = (v28 & 1) == 0;
        v32 = v30 + v31;
        if (__OFADD__(v30, v31))
          goto LABEL_35;
        v33 = v28;
        if (v27[3] >= v32)
        {
          if ((v26 & 1) == 0)
            sub_1BB4C7BF8();
        }
        else
        {
          sub_1BB4B7624(v32, v26);
          v34 = sub_1BA6E35A8(v23, v22);
          if ((v33 & 1) != (v35 & 1))
            goto LABEL_38;
          v29 = v34;
        }
        v6 = v24;
        v47 = v65;
        if ((v33 & 1) != 0)
        {
          v20 = v59;
          sub_1BB4944C4(v63, v65[7] + v29 * v59);
        }
        else
        {
          v65[(v29 >> 6) + 8] |= 1 << v29;
          v52 = (uint64_t *)(v47[6] + 16 * v29);
          *v52 = v23;
          v52[1] = v22;
          v20 = v59;
          sub_1BA5193C4(v63, v47[7] + v29 * v59, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
          v53 = v47[2];
          v50 = __OFADD__(v53, 1);
          v54 = v53 + 1;
          if (v50)
            goto LABEL_37;
          v47[2] = v54;
          swift_bridgeObjectRetain();
        }
        v21 = v61;
      }
      *v21 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_1BB75B84C(v14, v6, v62);
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v18 += v20;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    if ((_DWORD)v6)
      v55 = v60;
    else
      v55 = v61;
  }
  else if ((_DWORD)v6)
  {
    v55 = v4 + 4;
  }
  else
  {
    v55 = v4 + 3;
  }
  swift_beginAccess();
  v56 = *v55;
  swift_bridgeObjectRetain();
  sub_1BB86DD2C();
  return v56;
}

uint64_t *sub_1BB4857B8(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  if (*result)
  {
    sub_1BB86DD20();
    swift_beginAccess();
    type metadata accessor for DebugFormatCacheFile();
    sub_1BB86E6EC();
    swift_endAccess();
    sub_1BB48113C(v1);
    swift_beginAccess();
    sub_1BB86E6EC();
    swift_endAccess();
    swift_bridgeObjectRelease();
    return (uint64_t *)sub_1BB86DD2C();
  }
  return result;
}

uint64_t *sub_1BB4858B8(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  if (*result)
  {
    sub_1BB86DD20();
    swift_beginAccess();
    type metadata accessor for DebugFormatCacheFile();
    sub_1BB86E6EC();
    swift_endAccess();
    sub_1BB48113C(v1);
    swift_beginAccess();
    sub_1BB86E6EC();
    swift_endAccess();
    swift_bridgeObjectRelease();
    return (uint64_t *)sub_1BB86DD2C();
  }
  return result;
}

uint64_t sub_1BB4859B8(uint64_t *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t j;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  BOOL v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  unint64_t i;
  int64_t v65;
  unint64_t v66;
  int64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  BOOL v77;
  uint64_t v78;
  _QWORD *v79;
  BOOL v80;
  unint64_t v81;
  char v82;
  char v83;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD v98[2];
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  int64_t v103;
  uint64_t v104;
  _BYTE v105[16];
  uint64_t *v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v4 = v3;
  v8 = a2 & 1;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v9);
  v100 = (uint64_t)v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v99 = (uint64_t)v98 - v12;
  v98[1] = *(_QWORD *)(v3 + 16);
  sub_1BB86DD20();
  v111 = MEMORY[0x1E0DEE9E8];
  v13 = *a1;
  v106 = &v111;
  v107 = v8;
  v108 = v4;
  v109 = a3;
  swift_bridgeObjectRetain();
  v98[0] = sub_1BAC9CDF0((uint64_t)sub_1BB494D44, (uint64_t)v105, v13);
  if ((a2 & 1) != 0)
  {
    v56 = (uint64_t *)(v4 + 32);
    swift_beginAccess();
    v57 = *(_QWORD *)(v4 + 32);
    v58 = *(_QWORD *)(v57 + 64);
    v102 = v57 + 64;
    v59 = 1 << *(_BYTE *)(v57 + 32);
    if (v59 < 64)
      v60 = ~(-1 << v59);
    else
      v60 = -1;
    v61 = v60 & v58;
    v103 = (unint64_t)(v59 + 63) >> 6;
    v104 = v57;
    result = swift_bridgeObjectRetain();
    v62 = 0;
    v101 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v61)
      goto LABEL_61;
LABEL_62:
    v65 = v62 + 1;
    if (__OFADD__(v62, 1))
      goto LABEL_110;
    if (v65 >= v103)
      goto LABEL_108;
    v66 = *(_QWORD *)(v102 + 8 * v65);
    ++v62;
    if (!v66)
    {
      v62 = v65 + 1;
      if (v65 + 1 >= v103)
        goto LABEL_108;
      v66 = *(_QWORD *)(v102 + 8 * v62);
      if (!v66)
      {
        v62 = v65 + 2;
        if (v65 + 2 >= v103)
          goto LABEL_108;
        v66 = *(_QWORD *)(v102 + 8 * v62);
        if (!v66)
        {
          v62 = v65 + 3;
          if (v65 + 3 >= v103)
            goto LABEL_108;
          v66 = *(_QWORD *)(v102 + 8 * v62);
          if (!v66)
          {
            v62 = v65 + 4;
            if (v65 + 4 >= v103)
              goto LABEL_108;
            v66 = *(_QWORD *)(v102 + 8 * v62);
            if (!v66)
            {
              v67 = v65 + 5;
              if (v67 >= v103)
                goto LABEL_108;
              v66 = *(_QWORD *)(v102 + 8 * v67);
              if (!v66)
              {
                while (1)
                {
                  v62 = v67 + 1;
                  if (__OFADD__(v67, 1))
                    goto LABEL_112;
                  if (v62 >= v103)
                    goto LABEL_108;
                  v66 = *(_QWORD *)(v102 + 8 * v62);
                  ++v67;
                  if (v66)
                    goto LABEL_79;
                }
              }
              v62 = v67;
            }
          }
        }
      }
    }
LABEL_79:
    v61 = (v66 - 1) & v66;
    for (i = __clz(__rbit64(v66)) + (v62 << 6); ; i = v63 | (v62 << 6))
    {
      v68 = (uint64_t *)(*(_QWORD *)(v104 + 48) + 16 * i);
      v69 = *v68;
      v70 = v68[1];
      v71 = v111;
      if (*(_QWORD *)(v111 + 16))
      {
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v72 = sub_1BB874608();
        v73 = -1 << *(_BYTE *)(v71 + 32);
        v74 = v72 & ~v73;
        if (((*(_QWORD *)(v71 + 56 + ((v74 >> 3) & 0xFFFFFFFFFFFFF8)) >> v74) & 1) != 0)
        {
          v75 = *(_QWORD *)(v71 + 48);
          v76 = (_QWORD *)(v75 + 16 * v74);
          v77 = *v76 == v69 && v76[1] == v70;
          if (v77 || (sub_1BB874398() & 1) != 0)
          {
LABEL_60:
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            if (!v61)
              goto LABEL_62;
            goto LABEL_61;
          }
          v78 = ~v73;
          while (1)
          {
            v74 = (v74 + 1) & v78;
            if (((*(_QWORD *)(v71 + 56 + ((v74 >> 3) & 0xFFFFFFFFFFFFF8)) >> v74) & 1) == 0)
              break;
            v79 = (_QWORD *)(v75 + 16 * v74);
            v80 = *v79 == v69 && v79[1] == v70;
            if (v80 || (sub_1BB874398() & 1) != 0)
              goto LABEL_60;
          }
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v81 = sub_1BA6E35A8(v69, v70);
      v83 = v82;
      swift_bridgeObjectRelease();
      if ((v83 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v85 = *v56;
        v110 = *v56;
        *v56 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BB4C7BF8();
          v85 = v110;
        }
        swift_bridgeObjectRelease();
        v86 = *(_QWORD *)(v85 + 56);
        v87 = type metadata accessor for DebugFormatCacheFile();
        v88 = *(_QWORD *)(v87 - 8);
        v89 = v86 + *(_QWORD *)(v88 + 72) * v81;
        v90 = v100;
        sub_1BA5193C4(v89, v100, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
        sub_1BAF0EA34(v81, v85);
        *v56 = v85;
        v91 = v90;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56))(v90, 0, 1, v87);
      }
      else
      {
        v92 = type metadata accessor for DebugFormatCacheFile();
        v91 = v100;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v100, 1, 1, v92);
      }
      swift_endAccess();
      sub_1BA4A2E80(v91, (uint64_t (*)(_QWORD))sub_1BAA197E8);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1BA6EA0D0(0, v101[2] + 1, 1, v101);
        v101 = (_QWORD *)result;
      }
      v94 = v101[2];
      v93 = v101[3];
      if (v94 >= v93 >> 1)
      {
        result = (uint64_t)sub_1BA6EA0D0((_QWORD *)(v93 > 1), v94 + 1, 1, v101);
        v101 = (_QWORD *)result;
      }
      v95 = v101;
      v101[2] = v94 + 1;
      v96 = &v95[2 * v94];
      v96[4] = v69;
      v96[5] = v70;
      if (!v61)
        goto LABEL_62;
LABEL_61:
      v63 = __clz(__rbit64(v61));
      v61 &= v61 - 1;
    }
  }
  v14 = (uint64_t *)(v4 + 24);
  swift_beginAccess();
  v15 = *(_QWORD *)(v4 + 24);
  v16 = *(_QWORD *)(v15 + 64);
  v102 = v15 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  v103 = (unint64_t)(v17 + 63) >> 6;
  v104 = v15;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v101 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v19)
    goto LABEL_8;
LABEL_9:
  v24 = v21 + 1;
  if (!__OFADD__(v21, 1))
  {
    if (v24 < v103)
    {
      v25 = *(_QWORD *)(v102 + 8 * v24);
      ++v21;
      if (v25)
        goto LABEL_26;
      v21 = v24 + 1;
      if (v24 + 1 >= v103)
        goto LABEL_108;
      v25 = *(_QWORD *)(v102 + 8 * v21);
      if (v25)
        goto LABEL_26;
      v21 = v24 + 2;
      if (v24 + 2 >= v103)
        goto LABEL_108;
      v25 = *(_QWORD *)(v102 + 8 * v21);
      if (v25)
        goto LABEL_26;
      v21 = v24 + 3;
      if (v24 + 3 >= v103)
        goto LABEL_108;
      v25 = *(_QWORD *)(v102 + 8 * v21);
      if (v25)
        goto LABEL_26;
      v21 = v24 + 4;
      if (v24 + 4 >= v103)
        goto LABEL_108;
      v25 = *(_QWORD *)(v102 + 8 * v21);
      if (v25)
      {
LABEL_26:
        v19 = (v25 - 1) & v25;
        for (j = __clz(__rbit64(v25)) + (v21 << 6); ; j = v22 | (v21 << 6))
        {
          v27 = (uint64_t *)(*(_QWORD *)(v104 + 48) + 16 * j);
          v28 = *v27;
          v29 = v27[1];
          v30 = v111;
          if (*(_QWORD *)(v111 + 16))
          {
            sub_1BB8745CC();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BB872A90();
            v31 = sub_1BB874608();
            v32 = -1 << *(_BYTE *)(v30 + 32);
            v33 = v31 & ~v32;
            if (((*(_QWORD *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0)
            {
              v34 = *(_QWORD *)(v30 + 48);
              v35 = (_QWORD *)(v34 + 16 * v33);
              v36 = *v35 == v28 && v35[1] == v29;
              if (v36 || (sub_1BB874398() & 1) != 0)
              {
LABEL_7:
                swift_bridgeObjectRelease();
                result = swift_bridgeObjectRelease();
                if (!v19)
                  goto LABEL_9;
                goto LABEL_8;
              }
              v37 = ~v32;
              while (1)
              {
                v33 = (v33 + 1) & v37;
                if (((*(_QWORD *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
                  break;
                v38 = (_QWORD *)(v34 + 16 * v33);
                v39 = *v38 == v28 && v38[1] == v29;
                if (v39 || (sub_1BB874398() & 1) != 0)
                  goto LABEL_7;
              }
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          swift_beginAccess();
          swift_bridgeObjectRetain();
          v40 = sub_1BA6E35A8(v28, v29);
          v42 = v41;
          swift_bridgeObjectRelease();
          if ((v42 & 1) != 0)
          {
            v43 = swift_isUniquelyReferenced_nonNull_native();
            v44 = *v14;
            v110 = *v14;
            *v14 = 0x8000000000000000;
            if ((v43 & 1) == 0)
            {
              sub_1BB4C7BF8();
              v44 = v110;
            }
            swift_bridgeObjectRelease();
            v45 = *(_QWORD *)(v44 + 56);
            v46 = type metadata accessor for DebugFormatCacheFile();
            v47 = *(_QWORD *)(v46 - 8);
            v48 = v45 + *(_QWORD *)(v47 + 72) * v40;
            v49 = v99;
            sub_1BA5193C4(v48, v99, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
            sub_1BAF0EA34(v40, v44);
            *v14 = v44;
            v50 = v49;
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
          }
          else
          {
            v51 = type metadata accessor for DebugFormatCacheFile();
            v50 = v99;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v99, 1, 1, v51);
          }
          swift_endAccess();
          sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))sub_1BAA197E8);
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1BA6EA0D0(0, v101[2] + 1, 1, v101);
            v101 = (_QWORD *)result;
          }
          v53 = v101[2];
          v52 = v101[3];
          if (v53 >= v52 >> 1)
          {
            result = (uint64_t)sub_1BA6EA0D0((_QWORD *)(v52 > 1), v53 + 1, 1, v101);
            v101 = (_QWORD *)result;
          }
          v54 = v101;
          v101[2] = v53 + 1;
          v55 = &v54[2 * v53];
          v55[4] = v28;
          v55[5] = v29;
          if (!v19)
            goto LABEL_9;
LABEL_8:
          v22 = __clz(__rbit64(v19));
          v19 &= v19 - 1;
        }
      }
      v26 = v24 + 5;
      if (v26 < v103)
      {
        v25 = *(_QWORD *)(v102 + 8 * v26);
        if (v25)
        {
          v21 = v26;
          goto LABEL_26;
        }
        while (1)
        {
          v21 = v26 + 1;
          if (__OFADD__(v26, 1))
            goto LABEL_111;
          if (v21 >= v103)
            break;
          v25 = *(_QWORD *)(v102 + 8 * v21);
          ++v26;
          if (v25)
            goto LABEL_26;
        }
      }
    }
LABEL_108:
    swift_release();
    v97 = v98[0];
    swift_bridgeObjectRelease();
    sub_1BB86DD2C();
    return v97;
  }
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
  return result;
}

uint64_t sub_1BB486444@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t);
  uint64_t result;
  _QWORD v61[2];
  void (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t);
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;

  v71 = a5;
  v78 = a3;
  v79 = a4;
  v7 = type metadata accessor for DebugFormatCacheFileMetadata();
  v8 = *(_QWORD *)(v7 - 8);
  v65 = (char *)v7;
  v66 = v8;
  MEMORY[0x1E0C80A78](v7);
  v68 = v9;
  v70 = (uint64_t)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1BB86C67C();
  v64 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v61 - v13;
  v76 = v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v61 - v17;
  v20 = *a1;
  v19 = a1[1];
  v21 = a1[2];
  v77 = *((unsigned __int8 *)a1 + 24);
  v80 = 0;
  v81 = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v69 = a2 & 1;
  v80 = 0x676E696863746546;
  v81 = 0xE900000000000020;
  sub_1BB872AFC((_QWORD *)0x676E69646E6962);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v22);
  swift_bridgeObjectRetain();
  v23 = v20;
  sub_1BB872AFC(v24);
  v25 = v19;
  swift_bridgeObjectRelease();
  v27 = v80;
  v26 = v81;
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4((void *)2, 0, 0, v27, v26);
  swift_bridgeObjectRelease();
  v74 = v18;
  v75 = v23;
  v73 = v25;
  sub_1BB86C5BC();
  sub_1BB86C5BC();
  sub_1BB86C5BC();
  v28 = v64;
  v67 = *(uint64_t (**)(char *, uint64_t))(v64 + 8);
  v29 = v72;
  v30 = v67(v11, v72);
  v63 = *(_QWORD *)(v78 + 48);
  v31 = *(_QWORD *)(v79 + *((int *)v65 + 5));
  MEMORY[0x1E0C80A78](v30);
  v61[-4] = v32;
  v61[-3] = v14;
  v61[-2] = v31;
  sub_1BB86EC14();
  *(_QWORD *)(swift_allocObject() + 16) = v31;
  swift_bridgeObjectRetain();
  v33 = (void *)sub_1BB86E854();
  sub_1BB494714();
  v61[0] = sub_1BB86E974();
  swift_release();
  swift_release();

  v34 = v29;
  v35 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v35(v11, v14, v29);
  v65 = v14;
  v36 = *(unsigned __int8 *)(v28 + 80);
  v37 = (v36 + 24) & ~v36;
  v61[1] = v36 | 7;
  v38 = (v76 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = 10;
  v62 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
  v62(v39 + v37, v11, v34);
  *(_QWORD *)(v39 + v38) = v31;
  swift_bridgeObjectRetain();
  v40 = (void *)sub_1BB86E854();
  type metadata accessor for DebugFormatService();
  v64 = sub_1BB86EA28();
  swift_release();
  swift_release();

  v41 = v34;
  v35(v11, v74, v34);
  v42 = v70;
  sub_1BA4C2DD8(v79, v70, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  v43 = (v36 + 41) & ~v36;
  v44 = *(unsigned __int8 *)(v66 + 80);
  v45 = (v43 + v76 + v44) & ~v44;
  v46 = swift_allocObject();
  v47 = v73;
  *(_QWORD *)(v46 + 16) = v75;
  *(_QWORD *)(v46 + 24) = v47;
  *(_QWORD *)(v46 + 32) = v21;
  *(_BYTE *)(v46 + 40) = v77;
  v62(v46 + v43, v11, v41);
  sub_1BA5193C4(v42, v46 + v45, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  swift_bridgeObjectRetain();
  v48 = (void *)sub_1BB86E854();
  sub_1BA6BC5C0(0, &qword_1EF2C4DF8, sub_1BB0F5160, (void (*)(uint64_t))sub_1BB494714);
  v76 = type metadata accessor for DebugFormatManager();
  sub_1BB86E980();
  swift_release();
  swift_release();

  sub_1BA4C2DD8(v79, v42, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  v49 = (v44 + 49) & ~v44;
  v50 = swift_allocObject();
  v51 = v69;
  *(_BYTE *)(v50 + 16) = v69;
  v52 = v75;
  v53 = v73;
  *(_QWORD *)(v50 + 24) = v75;
  *(_QWORD *)(v50 + 32) = v53;
  *(_QWORD *)(v50 + 40) = v21;
  LOBYTE(v44) = v77;
  *(_BYTE *)(v50 + 48) = v77;
  sub_1BA5193C4(v42, v50 + v49, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  swift_bridgeObjectRetain();
  v54 = (void *)sub_1BB86E854();
  type metadata accessor for DebugFormatCacheFile();
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v55 = swift_allocObject();
  *(_BYTE *)(v55 + 16) = v51;
  *(_QWORD *)(v55 + 24) = v52;
  *(_QWORD *)(v55 + 32) = v53;
  *(_QWORD *)(v55 + 40) = v21;
  *(_BYTE *)(v55 + 48) = v44;
  swift_bridgeObjectRetain();
  v56 = (void *)sub_1BB86E854();
  v57 = sub_1BB86E9A4();
  swift_release();
  swift_release();

  v58 = v72;
  v59 = v67;
  v67(v65, v72);
  result = v59(v74, v58);
  *v71 = v57;
  return result;
}

uint64_t sub_1BB486AE4(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  __int128 v27;
  void *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  char v41;
  __int128 *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  v31 = a6;
  v33 = sub_1BB86C67C();
  v15 = *(_QWORD *)(v33 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v33);
  v17 = a1[1];
  v44 = *a1;
  v45 = v17;
  v46 = *((_QWORD *)a1 + 4);
  v43 = *(_QWORD *)(a2 + 16);
  v37 = a2;
  v38 = a3;
  v39 = a4;
  v40 = a8;
  v41 = a5;
  v42 = &v44;
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_release();
  v32 = *(_QWORD *)(a2 + 48);
  v18 = v32;
  v19 = *(_QWORD *)(a7 + *(int *)(type metadata accessor for DebugFormatCacheFileMetadata() + 20));
  v20 = v31;
  v34 = v18;
  v35 = v31;
  v36 = v19;
  sub_1BB86EC14();
  *(_QWORD *)(swift_allocObject() + 16) = v19;
  swift_bridgeObjectRetain();
  v21 = (void *)sub_1BB86E854();
  sub_1BB0F5160(0);
  sub_1BB86E974();
  swift_release();
  swift_release();

  v22 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v33);
  v23 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 10;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v24 + v23, (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
  *(_QWORD *)(v24 + ((v16 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v19;
  swift_bridgeObjectRetain();
  v25 = (void *)sub_1BB86E854();
  type metadata accessor for DebugFormatService();
  sub_1BB86EA28();
  swift_release();
  swift_release();

  v26 = swift_allocObject();
  v27 = v45;
  *(_OWORD *)(v26 + 16) = v44;
  *(_OWORD *)(v26 + 32) = v27;
  *(_QWORD *)(v26 + 48) = v46;
  sub_1BB4948E8((uint64_t)&v44);
  v28 = (void *)sub_1BB86E854();
  sub_1BA6BC5C0(0, &qword_1EF2C4DF8, sub_1BB0F5160, (void (*)(uint64_t))sub_1BB494714);
  v29 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v29;
}

uint64_t sub_1BB486E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  return sub_1BB487A58(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_1BB49525C, a8, a9);
}

uint64_t sub_1BB486E2C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *__return_ptr, _QWORD *))
{
  char v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  _BYTE v19[24];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v13 = a2 & 1;
  v14 = sub_1BB872E14();
  v19[16] = v13;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA8A3BA8(a8, (uint64_t)v19, v14);
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1BB86E854();
  type metadata accessor for DebugFormatCacheFile();
  sub_1BB86ECBC();
  swift_bridgeObjectRelease();

  *(_QWORD *)(swift_allocObject() + 16) = a6;
  swift_bridgeObjectRetain();
  v16 = (void *)sub_1BB86E854();
  sub_1BB494598();
  v17 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v17;
}

uint64_t sub_1BB486F8C@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t);
  uint64_t result;
  _QWORD v61[2];
  void (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t);
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;

  v71 = a5;
  v78 = a3;
  v79 = a4;
  v7 = type metadata accessor for DebugFormatCacheFileMetadata();
  v8 = *(_QWORD *)(v7 - 8);
  v65 = (char *)v7;
  v66 = v8;
  MEMORY[0x1E0C80A78](v7);
  v68 = v9;
  v70 = (uint64_t)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1BB86C67C();
  v64 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v61 - v13;
  v76 = v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v61 - v17;
  v20 = *a1;
  v19 = a1[1];
  v21 = a1[2];
  v77 = *((unsigned __int8 *)a1 + 24);
  v80 = 0;
  v81 = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v69 = a2 & 1;
  v80 = 0x676E696863746546;
  v81 = 0xE900000000000020;
  sub_1BB872AFC((_QWORD *)0x676E69646E6962);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v22);
  swift_bridgeObjectRetain();
  v23 = v20;
  sub_1BB872AFC(v24);
  v25 = v19;
  swift_bridgeObjectRelease();
  v27 = v80;
  v26 = v81;
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4((void *)2, 0, 0, v27, v26);
  swift_bridgeObjectRelease();
  v74 = v18;
  v75 = v23;
  v73 = v25;
  sub_1BB86C5BC();
  sub_1BB86C5BC();
  sub_1BB86C5BC();
  v28 = v64;
  v67 = *(uint64_t (**)(char *, uint64_t))(v64 + 8);
  v29 = v72;
  v30 = v67(v11, v72);
  v63 = *(_QWORD *)(v78 + 48);
  v31 = *(_QWORD *)(v79 + *((int *)v65 + 5));
  MEMORY[0x1E0C80A78](v30);
  v61[-4] = v32;
  v61[-3] = v14;
  v61[-2] = v31;
  sub_1BB86EC14();
  *(_QWORD *)(swift_allocObject() + 16) = v31;
  swift_bridgeObjectRetain();
  v33 = (void *)sub_1BB86E854();
  sub_1BB494714();
  v61[0] = sub_1BB86E974();
  swift_release();
  swift_release();

  v34 = v29;
  v35 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v35(v11, v14, v29);
  v65 = v14;
  v36 = *(unsigned __int8 *)(v28 + 80);
  v37 = (v36 + 24) & ~v36;
  v61[1] = v36 | 7;
  v38 = (v76 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = 10;
  v62 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
  v62(v39 + v37, v11, v34);
  *(_QWORD *)(v39 + v38) = v31;
  swift_bridgeObjectRetain();
  v40 = (void *)sub_1BB86E854();
  type metadata accessor for DebugFormatService();
  v64 = sub_1BB86EA28();
  swift_release();
  swift_release();

  v41 = v34;
  v35(v11, v74, v34);
  v42 = v70;
  sub_1BA4C2DD8(v79, v70, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  v43 = (v36 + 41) & ~v36;
  v44 = *(unsigned __int8 *)(v66 + 80);
  v45 = (v43 + v76 + v44) & ~v44;
  v46 = swift_allocObject();
  v47 = v73;
  *(_QWORD *)(v46 + 16) = v75;
  *(_QWORD *)(v46 + 24) = v47;
  *(_QWORD *)(v46 + 32) = v21;
  *(_BYTE *)(v46 + 40) = v77;
  v62(v46 + v43, v11, v41);
  sub_1BA5193C4(v42, v46 + v45, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  swift_bridgeObjectRetain();
  v48 = (void *)sub_1BB86E854();
  sub_1BA6BC5C0(0, &qword_1EF2C4DF8, sub_1BB0F5160, (void (*)(uint64_t))sub_1BB494714);
  v76 = type metadata accessor for DebugFormatManager();
  sub_1BB86E980();
  swift_release();
  swift_release();

  sub_1BA4C2DD8(v79, v42, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  v49 = (v44 + 49) & ~v44;
  v50 = swift_allocObject();
  v51 = v69;
  *(_BYTE *)(v50 + 16) = v69;
  v52 = v75;
  v53 = v73;
  *(_QWORD *)(v50 + 24) = v75;
  *(_QWORD *)(v50 + 32) = v53;
  *(_QWORD *)(v50 + 40) = v21;
  LOBYTE(v44) = v77;
  *(_BYTE *)(v50 + 48) = v77;
  sub_1BA5193C4(v42, v50 + v49, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  swift_bridgeObjectRetain();
  v54 = (void *)sub_1BB86E854();
  type metadata accessor for DebugFormatCacheFile();
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v55 = swift_allocObject();
  *(_BYTE *)(v55 + 16) = v51;
  *(_QWORD *)(v55 + 24) = v52;
  *(_QWORD *)(v55 + 32) = v53;
  *(_QWORD *)(v55 + 40) = v21;
  *(_BYTE *)(v55 + 48) = v44;
  swift_bridgeObjectRetain();
  v56 = (void *)sub_1BB86E854();
  v57 = sub_1BB86E9A4();
  swift_release();
  swift_release();

  v58 = v72;
  v59 = v67;
  v67(v65, v72);
  result = v59(v74, v58);
  *v71 = v57;
  return result;
}

uint64_t sub_1BB48762C(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  __int128 v27;
  void *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  char v41;
  __int128 *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  v31 = a6;
  v33 = sub_1BB86C67C();
  v15 = *(_QWORD *)(v33 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v33);
  v17 = a1[1];
  v44 = *a1;
  v45 = v17;
  v46 = *((_QWORD *)a1 + 4);
  v43 = *(_QWORD *)(a2 + 16);
  v37 = a2;
  v38 = a3;
  v39 = a4;
  v40 = a8;
  v41 = a5;
  v42 = &v44;
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_release();
  v32 = *(_QWORD *)(a2 + 48);
  v18 = v32;
  v19 = *(_QWORD *)(a7 + *(int *)(type metadata accessor for DebugFormatCacheFileMetadata() + 20));
  v20 = v31;
  v34 = v18;
  v35 = v31;
  v36 = v19;
  sub_1BB86EC14();
  *(_QWORD *)(swift_allocObject() + 16) = v19;
  swift_bridgeObjectRetain();
  v21 = (void *)sub_1BB86E854();
  sub_1BB0F5160(0);
  sub_1BB86E974();
  swift_release();
  swift_release();

  v22 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v33);
  v23 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 10;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v24 + v23, (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
  *(_QWORD *)(v24 + ((v16 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v19;
  swift_bridgeObjectRetain();
  v25 = (void *)sub_1BB86E854();
  type metadata accessor for DebugFormatService();
  sub_1BB86EA28();
  swift_release();
  swift_release();

  v26 = swift_allocObject();
  v27 = v45;
  *(_OWORD *)(v26 + 16) = v44;
  *(_OWORD *)(v26 + 32) = v27;
  *(_QWORD *)(v26 + 48) = v46;
  sub_1BB4948E8((uint64_t)&v44);
  v28 = (void *)sub_1BB86E854();
  sub_1BA6BC5C0(0, &qword_1EF2C4DF8, sub_1BB0F5160, (void (*)(uint64_t))sub_1BB494714);
  v29 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v29;
}

uint64_t sub_1BB487958(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, double a6)
{
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  __int128 v14;
  double v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v9 = *a5;
  v10 = a5[1];
  *(_QWORD *)&v14 = a2;
  *((_QWORD *)&v14 + 1) = a3;
  v15 = a6;
  v16 = a4;
  v17 = v9;
  v18 = v10;
  v19 = 0u;
  v20 = 0u;
  v21 = MEMORY[0x1E0DEE9D8];
  v22 = 0u;
  v23 = 0u;
  v24 = 0;
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = 0x8000000000000000;
  sub_1BB4C090C(&v14, a2, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 40) = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1BB487A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  return sub_1BB487A58(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_1BB494C6C, a8, a9);
}

uint64_t sub_1BB487A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;

  v43 = a2;
  v44 = a8;
  v53 = a9;
  v48 = a7;
  v52 = a6;
  v45 = a3;
  v14 = type metadata accessor for DebugFormatCacheFileMetadata();
  MEMORY[0x1E0C80A78](v14);
  v49 = (uint64_t)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BC5C0(0, &qword_1EF2C4DF8, sub_1BB0F5160, (void (*)(uint64_t))sub_1BB494714);
  v17 = v16;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v42 - v18;
  sub_1BB0F5160(0);
  MEMORY[0x1E0C80A78](v20);
  v47 = (uint64_t)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v42 - v23;
  v25 = (uint64_t *)(a1 + *(int *)(v17 + 48));
  sub_1BA4C2DD8(a1, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BB0F5160);
  v26 = v25[1];
  v46 = *v25;
  v28 = v25[2];
  v27 = v25[3];
  sub_1BA5193C4((uint64_t)v19, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BB0F5160);
  v55 = 0;
  v56 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  v50 = v28;
  v51 = v27;
  sub_1BA69D44C(v28, v27);
  swift_bridgeObjectRetain();
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v55 = 0xD000000000000015;
  v56 = 0x80000001BB98E6E0;
  sub_1BB872AFC((_QWORD *)0x676E69646E6962);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v29);
  FormatFile.kind.getter();
  FormatFileKind.rawValue.getter();
  sub_1BB872AFC(v30);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v31);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v32);
  swift_bridgeObjectRelease();
  v34 = v55;
  v33 = v56;
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4((void *)2, 0, 0, v34, v33);
  swift_bridgeObjectRelease();
  v35 = v49;
  sub_1BA4C2DD8(v48, v49, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFileMetadata);
  v36 = v47;
  sub_1BA4C2DD8((uint64_t)v24, v47, (uint64_t (*)(_QWORD))sub_1BB0F5160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = v54;
  v38 = sub_1BB0F91DC(v35, v36, a4, a5, v52 & 1, v46, v26, v53, a10);
  if (v37)
  {
    swift_bridgeObjectRelease();
    sub_1BA69D314(v50, v51);
    swift_bridgeObjectRelease();
  }
  else
  {
    v55 = *(_QWORD *)(v43 + 16);
    MEMORY[0x1E0C80A78](v38);
    *(&v42 - 2) = v39;
    *(&v42 - 1) = v40;
    sub_1BB86DD5C();
    swift_retain();
    sub_1BB86E758();
    swift_bridgeObjectRelease();
    sub_1BA69D314(v50, v51);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BB0F5160);
}

uint64_t sub_1BB487E74(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[4];
  _BYTE v11[128];
  uint64_t v12[16];

  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a2;
  v7 = a2[1];
  sub_1BA4C2DD8((uint64_t)a2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  v8 = type metadata accessor for DebugFormatCacheFile();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 0, 1, v8);
  memset(v10, 0, sizeof(v10));
  memset(v12, 0, 40);
  swift_bridgeObjectRetain();
  sub_1BA8EB6E0((uint64_t)v5, v10, v12, (uint64_t)v11);
  sub_1BA6A09F0((uint64_t)v11, (uint64_t)v12, (unint64_t *)&qword_1EF2B86A0, (uint64_t)&type metadata for DebugFormatFileSource);
  swift_beginAccess();
  sub_1BB4AA6EC((uint64_t)v12, v6, v7);
  return swift_endAccess();
}

uint64_t sub_1BB487FA0(void *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1BB873CB4();
  sub_1BB872AFC("values removedFilePaths errors ");
  sub_1BB872AFC((_QWORD *)0x676E69646E6962);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4(a1, 0, 0, 0, 0xE000000000000000);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB488140@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = a1[1];
  *a3 = *a1;
  a3[1] = a2;
  a3[2] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB488180(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  v24 = a5;
  v26 = a4;
  v25 = a3 & 1;
  v6 = type metadata accessor for DebugFormatCacheFile();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (double *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - v14;
  v16 = *(_QWORD *)a1;
  v17 = *(_QWORD *)(a1 + 8);
  v18 = *(double *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1BA6EE5AC(&v27, v16, v17);
  swift_bridgeObjectRelease();
  sub_1BB4883A0(v25, v26, v16, v17, (uint64_t)v15);
  sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAA197E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    v19 = 1;
    v15 = v12;
  }
  else
  {
    sub_1BA5193C4((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    if (v9[2] == v18
      && (v20 = (char *)v9 + *(int *)(v6 + 28), v21 = v24, (sub_1BB86EB3C() & 1) != 0)
      && (v22 = type metadata accessor for DebugFormatCacheFileMetadata(),
          sub_1BA882868(*(_QWORD *)&v20[*(int *)(v22 + 20)], *(_QWORD *)(v21 + *(int *)(v22 + 20)))))
    {
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v19 = 0;
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v19 = 1;
    }
  }
  sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BAA197E8);
  return v19;
}

uint64_t sub_1BB4883A0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((a1 & 1) != 0)
  {
    swift_beginAccess();
    v9 = *(_QWORD *)(a2 + 32);
    if (*(_QWORD *)(v9 + 16))
      goto LABEL_3;
LABEL_6:
    v16 = type metadata accessor for DebugFormatCacheFile();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a5, 1, 1, v16);
    return swift_endAccess();
  }
  swift_beginAccess();
  v9 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_6;
LABEL_3:
  swift_bridgeObjectRetain();
  v10 = sub_1BA6E35A8(a3, a4);
  if ((v11 & 1) != 0)
  {
    v12 = v10;
    v13 = *(_QWORD *)(v9 + 56);
    v14 = type metadata accessor for DebugFormatCacheFile();
    v15 = *(_QWORD *)(v14 - 8);
    sub_1BA4C2DD8(v13 + *(_QWORD *)(v15 + 72) * v12, a5, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a5, 0, 1, v14);
  }
  else
  {
    v17 = type metadata accessor for DebugFormatCacheFile();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a5, 1, 1, v17);
  }
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1BB4884E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  swift_retain();
  v4 = swift_bridgeObjectRetain();
  sub_1BB492AC4(v4, a2, a1);
  swift_release();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BB86E854();
  type metadata accessor for DebugFormatPackageInventory();
  v6 = sub_1BB86ECBC();
  swift_bridgeObjectRelease();

  return v6;
}

uint64_t sub_1BB488574()
{
  sub_1BA4B07F0(0, &qword_1EF2C4DC0, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatPackageInventory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BB4885E4(void (*a1)(char **), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  char *v20;
  uint64_t v21[4];

  v19 = a3;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v19 - v14;
  v21[0] = MEMORY[0x1E0DEE9E8];
  sub_1BA4C2DD8(a8, (uint64_t)&v19 - v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  v16 = type metadata accessor for DebugFormatCacheFile();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
  v17 = sub_1BB488844(a6, a7, (uint64_t)v15, v21);
  sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BAA197E8);
  swift_bridgeObjectRelease();
  v20 = v17;
  a1(&v20);
  return swift_release();
}

char *sub_1BB488844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int64_t v140;
  uint64_t v141;
  uint64_t *v142;
  ValueMetadata *v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  ValueMetadata *v250;
  ValueMetadata *v251;
  int64_t *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  ValueMetadata *v291;
  ValueMetadata *v292;
  uint64_t *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  ValueMetadata *v313;
  ValueMetadata *v314;
  uint64_t *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t *v332;
  uint64_t *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t i;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t *v344;
  uint64_t *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t j;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  ValueMetadata *v359;
  ValueMetadata *v360;
  int64_t *v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  int *v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t (*v399)(_QWORD);
  uint64_t v400;
  uint64_t v401;
  unint64_t v402;
  uint64_t v403;
  uint64_t *v404;
  uint64_t *v405;
  uint64_t v406;
  unint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  unint64_t v481;
  uint64_t *v482;
  uint64_t v483;
  uint64_t *v484;
  uint64_t *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t *v490;
  uint64_t *v491;
  uint64_t v492;
  unint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  char *v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  char *v504;
  uint64_t v505;
  uint64_t *v506;
  void (*v507)(uint64_t, uint64_t);
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  ValueMetadata *v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t *v514;
  uint64_t *v515;
  uint64_t *v516;
  uint64_t v517;
  uint64_t v518;
  char *v519;
  char *v520;
  uint64_t v521;
  uint64_t v522;
  char *v523;
  uint64_t *v524;
  uint64_t *v525;
  ValueMetadata *v526;
  int *v527;
  uint64_t v528;
  uint64_t *v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  ValueMetadata *v533;
  ValueMetadata *v534;
  uint64_t *v535;
  uint64_t v536;
  uint64_t *v537;
  uint64_t v538;
  char *v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  char *v559;
  uint64_t *v560;
  uint64_t *v561;
  uint64_t *v562;
  uint64_t *v563;
  uint64_t *v564;
  uint64_t *v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  char *v573;
  uint64_t v574;
  char *v575;
  char *v576;
  char *v577;
  char *v578;
  char *v579;
  uint64_t *v580;
  char *v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t *v588;
  ValueMetadata *v589;
  uint64_t v590;
  uint64_t v591;
  unint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596[2];
  unsigned __int8 v597;
  unsigned __int8 v598;
  uint64_t v599;
  uint64_t v600[3];
  _QWORD v601[3];
  _QWORD v602[3];
  _QWORD v603[3];
  _QWORD v604[3];
  _QWORD v605[3];
  _QWORD v606[3];
  _QWORD v607[3];
  _QWORD v608[3];
  _QWORD v609[3];
  uint64_t v610;

  v591 = (uint64_t)a4;
  v547 = a3;
  v594 = a2;
  v593 = a1;
  v4 = sub_1BB86EB84();
  v535 = *(uint64_t **)(v4 - 8);
  v536 = v4;
  MEMORY[0x1E0C80A78](v4);
  v549 = (uint64_t)&v510 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v6);
  v572 = (uint64_t)&v510 - v7;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v8);
  v561 = (uint64_t *)((char *)&v510 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v559 = (char *)&v510 - v11;
  MEMORY[0x1E0C80A78](v12);
  v560 = (uint64_t *)((char *)&v510 - v13);
  MEMORY[0x1E0C80A78](v14);
  v562 = (uint64_t *)((char *)&v510 - v15);
  MEMORY[0x1E0C80A78](v16);
  v563 = (uint64_t *)((char *)&v510 - v17);
  MEMORY[0x1E0C80A78](v18);
  v570 = (uint64_t)&v510 - v19;
  MEMORY[0x1E0C80A78](v20);
  v564 = (uint64_t *)((char *)&v510 - v21);
  MEMORY[0x1E0C80A78](v22);
  v565 = (uint64_t *)((char *)&v510 - v23);
  MEMORY[0x1E0C80A78](v24);
  v537 = (uint64_t *)((char *)&v510 - v25);
  v590 = type metadata accessor for DebugFormatCacheFile();
  v546 = *(_QWORD *)(v590 - 8);
  MEMORY[0x1E0C80A78](v590);
  v553 = (uint64_t)&v510 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v551 = (uint64_t)&v510 - v28;
  MEMORY[0x1E0C80A78](v29);
  v552 = (uint64_t)&v510 - v30;
  MEMORY[0x1E0C80A78](v31);
  v554 = (uint64_t)&v510 - v32;
  MEMORY[0x1E0C80A78](v33);
  v555 = (uint64_t)&v510 - v34;
  MEMORY[0x1E0C80A78](v35);
  v556 = (uint64_t)&v510 - v36;
  MEMORY[0x1E0C80A78](v37);
  v557 = (uint64_t)&v510 - v38;
  MEMORY[0x1E0C80A78](v39);
  v558 = (uint64_t)&v510 - v40;
  MEMORY[0x1E0C80A78](v41);
  v589 = (ValueMetadata *)((char *)&v510 - v42);
  MEMORY[0x1E0C80A78](v43);
  v524 = (uint64_t *)((char *)&v510 - v44);
  sub_1BA4CDF6C(0, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v574 = v45;
  v538 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v573 = (char *)&v510 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v47);
  v528 = (uint64_t)&v510 - v48;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v49);
  v582 = (uint64_t)&v510 - v50;
  v527 = (int *)type metadata accessor for FormatCompilerOptions(0);
  v525 = (uint64_t *)*((_QWORD *)v527 - 1);
  MEMORY[0x1E0C80A78](v527);
  v548 = (uint64_t)&v510 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v52);
  v526 = (ValueMetadata *)((char *)&v510 - v53);
  MEMORY[0x1E0C80A78](v54);
  v539 = (char *)&v510 - v55;
  MEMORY[0x1E0C80A78](v56);
  v588 = (uint64_t *)((char *)&v510 - v57);
  MEMORY[0x1E0C80A78](v58);
  v550 = (uint64_t)&v510 - v59;
  sub_1BA4CDF6C(0, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v568 = v60;
  v540 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v577 = (char *)&v510 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v62);
  v529 = (uint64_t *)((char *)&v510 - v63);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v64);
  v583 = (uint64_t)&v510 - v65;
  sub_1BA4CDF6C(0, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v567 = v66;
  v542 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v576 = (char *)&v510 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v68);
  v531 = (uint64_t)&v510 - v69;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v70);
  v584 = (uint64_t)&v510 - v71;
  sub_1BA4CDF6C(0, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v566 = v72;
  v541 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v575 = (char *)&v510 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v74);
  v530 = (uint64_t)&v510 - v75;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v76);
  v585 = (uint64_t)&v510 - v77;
  sub_1BA4CDF6C(0, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v569 = v78;
  v543 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v578 = (char *)&v510 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v80);
  v532 = (uint64_t)&v510 - v81;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v82);
  v586 = (uint64_t)&v510 - v83;
  sub_1BAC87C74(0);
  v580 = v84;
  v544 = *(v84 - 1);
  MEMORY[0x1E0C80A78](v84);
  v579 = (char *)&v510 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v86);
  v533 = (ValueMetadata *)((char *)&v510 - v87);
  sub_1BA709CA4(0);
  MEMORY[0x1E0C80A78](v88);
  v587 = (uint64_t)&v510 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v571 = v90;
  v545 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v581 = (char *)&v510 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v92);
  v534 = (ValueMetadata *)((char *)&v510 - v93);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v94);
  v96 = (uint64_t *)((char *)&v510 - v95);
  sub_1BA4CDF6C(0, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v98 = v97;
  v99 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v101 = (char *)&v510 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v102);
  v104 = (char *)&v510 - v103;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v105);
  v107 = (char *)&v510 - v106;
  v610 = MEMORY[0x1E0DEE9E8];
  v108 = v595;
  swift_retain();
  v109 = v594;
  swift_bridgeObjectRetain();
  v110 = swift_bridgeObjectRetain();
  v111 = v108;
  v112 = v592;
  v113 = sub_1BB4810F0(v110, v111, v109, &v610, (uint64_t *)v591);
  v114 = (uint64_t *)v112;
  if (v112)
  {
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v519 = v107;
  v520 = v104;
  v591 = (uint64_t)v96;
  v521 = v99;
  v522 = v98;
  v523 = v101;
  v592 = v113;
  swift_bridgeObjectRelease();
  v115 = v595;
  swift_retain();
  v116 = (_QWORD *)v594;
  swift_bridgeObjectRetain();
  v117 = swift_bridgeObjectRetain();
  v118 = sub_1BB492908(v117, v115, (uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  v119 = swift_bridgeObjectRetain();
  v120 = sub_1BB49274C(v119, v115, (uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  v121 = swift_bridgeObjectRetain();
  v123 = sub_1BB4925DC(v121, v115, v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  v124 = swift_bridgeObjectRetain();
  v518 = sub_1BB492420(v124, v115, (uint64_t)v116);
  swift_bridgeObjectRelease();
  v125 = v595;
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  v126 = swift_bridgeObjectRetain();
  v517 = sub_1BB492264(v126, v125, (uint64_t)v116);
  swift_bridgeObjectRelease();
  v127 = v595;
  swift_release();
  v128 = v594;
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  v129 = swift_bridgeObjectRetain();
  v130 = sub_1BB4920A8(v129, v127, v128);
  v516 = (uint64_t *)v118;
  swift_bridgeObjectRelease();
  v131 = v595;
  swift_release();
  v132 = v594;
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  v133 = swift_bridgeObjectRetain();
  v134 = sub_1BB491EEC(v133, v131, v132);
  v515 = (uint64_t *)v120;
  swift_bridgeObjectRelease();
  v135 = v595;
  swift_release();
  v136 = v594;
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  v137 = swift_bridgeObjectRetain();
  v138 = sub_1BB491D30(v137, v135, v136);
  v514 = 0;
  v139 = v138;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (v592 >> 62)
  {
    swift_bridgeObjectRetain();
    v140 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v140 = *(_QWORD *)((v592 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v141 = MEMORY[0x1E0DEE9D8];
  v510 = v139;
  v511 = (ValueMetadata *)v130;
  v512 = v134;
  v513 = v123;
  v594 = v140;
  if (v140)
  {
    v609[0] = MEMORY[0x1E0DEE9D8];
    v142 = v609;
    sub_1BA790834(0, v140 & ~(v140 >> 63), 0);
    if (v140 < 0)
    {
      __break(1u);
      goto LABEL_332;
    }
    if ((v592 & 0xC000000000000001) != 0)
    {
      v143 = 0;
      v144 = v594;
      do
      {
        v130 = (uint64_t)&v143->Kind + 1;
        v145 = (uint64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630]() + 16)
                         + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
        swift_beginAccess();
        v146 = *v145;
        v147 = v145[1];
        v148 = v145[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        sub_1BB575C00();
        v114 = *(uint64_t **)(v609[0] + 16);
        sub_1BB575D70((uint64_t)v114);
        sub_1BB575ED8((uint64_t)v114, v146, v147, v148);
        nullsub_1();
        v143 = (ValueMetadata *)v130;
      }
      while (v144 != v130);
    }
    else
    {
      v150 = (uint64_t *)(v592 + 32);
      v151 = v594;
      do
      {
        v152 = *v150++;
        v153 = (uint64_t *)(*(_QWORD *)(v152 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
        swift_beginAccess();
        v154 = *v153;
        v130 = v153[1];
        v155 = v153[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BB575C00();
        v114 = *(uint64_t **)(v609[0] + 16);
        sub_1BB575D70((uint64_t)v114);
        sub_1BB575ED8((uint64_t)v114, v154, v130, v155);
        nullsub_1();
        --v151;
      }
      while (v151);
    }
    v149 = v609[0];
    v141 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v149 = MEMORY[0x1E0DEE9D8];
  }
  v609[0] = v141;
  v156 = *(_QWORD *)(v149 + 16);
  if (v156)
  {
    swift_bridgeObjectRetain();
    v157 = 32;
    do
    {
      v158 = swift_bridgeObjectRetain();
      sub_1BA7A1BE8(v158);
      v157 += 24;
      --v156;
    }
    while (v156);
    swift_bridgeObjectRelease_n();
    v159 = v609[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    v159 = MEMORY[0x1E0DEE9D8];
  }
  v595 = v159;
  v160 = (uint64_t)v516;
  v140 = v516[2];
  v161 = MEMORY[0x1E0DEE9D8];
  if (v140)
  {
    v609[0] = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B688(0, v140, 0);
    v162 = (uint64_t)v520;
    v114 = (uint64_t *)(v160
                     + ((*(unsigned __int8 *)(v521 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v521 + 80)));
    v163 = *(_QWORD *)(v521 + 72);
    v164 = (uint64_t)v519;
    v130 = (uint64_t)&type metadata for FormatGroup;
    do
    {
      sub_1BA8CAF1C((uint64_t)v114, v162, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
      sub_1BA8CAF1C(v162, v164, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      sub_1BB494120(v162, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
      sub_1BB575C6C();
      v165 = *(_QWORD *)(v609[0] + 16);
      sub_1BB575DDC(v165);
      sub_1BB576050(v165, v164);
      nullsub_1();
      v114 = (uint64_t *)((char *)v114 + v163);
      --v140;
    }
    while (v140);
    v161 = v609[0];
  }
  v166 = v594;
  v609[0] = v595;
  v142 = v609;
  sub_1BA7A1BE8(v161);
  v520 = (char *)v609[0];
  if (!v166)
  {
    v140 = sub_1BA90BC38(0);
    goto LABEL_37;
  }
  v608[0] = sub_1BA6B0504();
  v142 = v608;
  sub_1BB575A80(v166);
  if (v166 < 0)
  {
LABEL_332:
    __break(1u);
    goto LABEL_333;
  }
  v114 = (uint64_t *)&unk_1ED3CA000;
  if (sub_1BB6CAD08(v592))
  {
    v167 = (uint64_t *)(v592 + 32);
    v168 = v594;
    do
    {
      v169 = *v167++;
      v170 = (uint64_t *)(*(_QWORD *)(v169 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
      swift_beginAccess();
      v171 = *v170;
      v172 = v170[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v142 = v608;
      sub_1BB575BF4();
      v173 = *(_QWORD *)(v608[0] + 16);
      sub_1BB575D64(v173);
      sub_1BB575EC0(v173, v171, v172);
      nullsub_1();
      --v168;
    }
    while (v168);
  }
  else
  {
    v174 = 0;
    v175 = v594;
    do
    {
      v176 = v174 + 1;
      v177 = (uint64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630]() + 16)
                       + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
      swift_beginAccess();
      v179 = *v177;
      v178 = v177[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      v142 = v608;
      sub_1BB575BF4();
      v180 = *(_QWORD *)(v608[0] + 16);
      sub_1BB575D64(v180);
      sub_1BB575EC0(v180, v179, v178);
      nullsub_1();
      v174 = v176;
    }
    while (v175 != v176);
  }
  v140 = v608[0];
LABEL_37:
  v608[0] = sub_1BA90B940(0);
  v181 = sub_1BA79B898(v140);
  if (!v181)
  {
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  v114 = (uint64_t *)v181;
  if (v181 < 1)
  {
LABEL_333:
    __break(1u);
    goto LABEL_334;
  }
  swift_bridgeObjectRetain();
  v182 = 32;
  do
  {
    v183 = swift_bridgeObjectRetain();
    sub_1BA7A5F0C(v183);
    v182 += 16;
    v114 = (uint64_t *)((char *)v114 - 1);
  }
  while (v114);
  swift_bridgeObjectRelease_n();
LABEL_43:
  v184 = v608[0];
  v185 = sub_1BA79B898((uint64_t)v515);
  if (!v185)
  {
    v190 = sub_1BA90B940(0);
    v191 = v594;
    goto LABEL_49;
  }
  v140 = v185;
  v595 = v184;
  v608[0] = sub_1BA6B0504();
  v142 = v608;
  sub_1BB575AE0(v140);
  if (v140 < 0)
  {
LABEL_334:
    __break(1u);
    goto LABEL_335;
  }
  v114 = (uint64_t *)((char *)v515
                   + ((*(unsigned __int8 *)(v545 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v545 + 80)));
  v186 = *(_QWORD *)(v545 + 72);
  v130 = (uint64_t)v534;
  v187 = (uint64_t *)v591;
  do
  {
    sub_1BA8CAF1C((uint64_t)v114, v130, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA8CAF1C(v130, (uint64_t)v187, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1BB494120(v130, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
    sub_1BB575C60();
    v188 = *(_QWORD *)(v608[0] + 16);
    sub_1BB575DD0(v188);
    v189 = v188;
    v187 = (uint64_t *)v591;
    sub_1BB575F90(v189, v591);
    nullsub_1();
    v114 = (uint64_t *)((char *)v114 + v186);
    --v140;
  }
  while (v140);
  v190 = v608[0];
  v191 = v594;
  v184 = v595;
LABEL_49:
  v608[0] = v184;
  v142 = v608;
  sub_1BA7A5F0C(v190);
  v534 = (ValueMetadata *)v608[0];
  if (!v191)
  {
    v198 = sub_1BA90BC2C(0);
    goto LABEL_59;
  }
  v607[0] = sub_1BA6B0504();
  v142 = v607;
  sub_1BB575A74(v191);
  if (v191 < 0)
  {
LABEL_335:
    __break(1u);
    goto LABEL_336;
  }
  if (sub_1BB6CAD08(v592))
  {
    v114 = (uint64_t *)(v592 + 32);
    v192 = v594;
    do
    {
      v193 = *v114++;
      v194 = (uint64_t *)(*(_QWORD *)(v193 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
      swift_beginAccess();
      v195 = *v194;
      v196 = v194[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v142 = v607;
      sub_1BB575BE8();
      v197 = *(_QWORD *)(v607[0] + 16);
      sub_1BB575D58(v197);
      sub_1BB577E78(v197, v195, v196);
      nullsub_1();
      --v192;
    }
    while (v192);
  }
  else
  {
    v199 = 0;
    v114 = (uint64_t *)&unk_1ED3CA000;
    v200 = v594;
    do
    {
      v201 = v199 + 1;
      v202 = (uint64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630]() + 16)
                       + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
      swift_beginAccess();
      v204 = *v202;
      v203 = v202[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      v142 = v607;
      sub_1BB575BE8();
      v205 = *(_QWORD *)(v607[0] + 16);
      sub_1BB575D58(v205);
      sub_1BB577E78(v205, v204, v203);
      nullsub_1();
      v199 = v201;
    }
    while (v200 != v201);
  }
  v198 = v607[0];
LABEL_59:
  v607[0] = sub_1BA90BA78(0);
  v206 = sub_1BA79B898(v198);
  if (!v206)
  {
    swift_bridgeObjectRelease();
    goto LABEL_65;
  }
  v140 = v206;
  if (v206 < 1)
  {
LABEL_336:
    __break(1u);
    goto LABEL_337;
  }
  swift_bridgeObjectRetain();
  v207 = 32;
  do
  {
    v208 = swift_bridgeObjectRetain();
    sub_1BA7A102C(v208);
    v207 += 16;
    --v140;
  }
  while (v140);
  swift_bridgeObjectRelease_n();
LABEL_65:
  v140 = v513;
  v209 = v607[0];
  v210 = sub_1BA79B898(v513);
  if (!v210)
  {
    v216 = sub_1BA90BA78(0);
    v217 = v594;
    goto LABEL_71;
  }
  v211 = v210;
  v595 = v209;
  v607[0] = sub_1BA6B0504();
  v142 = v607;
  sub_1BB575AD4(v211);
  if (v211 < 0)
  {
LABEL_337:
    __break(1u);
    goto LABEL_338;
  }
  v140 += (*(unsigned __int8 *)(v544 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v544 + 80);
  v212 = *(_QWORD *)(v544 + 72);
  v114 = (uint64_t *)sub_1BA709CA4;
  v130 = (uint64_t)v533;
  v213 = v587;
  do
  {
    sub_1BA4C2DD8(v140, v130, (uint64_t (*)(_QWORD))sub_1BAC87C74);
    sub_1BA4C2DD8(v130, v213, (uint64_t (*)(_QWORD))sub_1BA709CA4);
    sub_1BA4A2E80(v130, (uint64_t (*)(_QWORD))sub_1BAC87C74);
    sub_1BB575C54();
    v214 = *(_QWORD *)(v607[0] + 16);
    sub_1BB575DC4(v214);
    v215 = v214;
    v213 = v587;
    sub_1BB575F84(v215, v587);
    nullsub_1();
    v140 += v212;
    --v211;
  }
  while (v211);
  v216 = v607[0];
  v217 = v594;
  v209 = v595;
LABEL_71:
  v607[0] = v209;
  v142 = v607;
  sub_1BA7A102C(v216);
  v533 = (ValueMetadata *)v607[0];
  if (!v217)
  {
    v225 = sub_1BA90BC20(0);
    goto LABEL_81;
  }
  v606[0] = sub_1BA6B0504();
  v142 = v606;
  sub_1BB575A68(v217);
  if (v217 < 0)
  {
LABEL_338:
    __break(1u);
    goto LABEL_339;
  }
  v114 = (uint64_t *)&unk_1ED3CA000;
  if (sub_1BB6CAD08(v592))
  {
    v218 = (uint64_t *)(v592 + 32);
    v219 = v594;
    do
    {
      v220 = *v218++;
      v221 = (uint64_t *)(*(_QWORD *)(v220 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
      swift_beginAccess();
      v222 = *v221;
      v223 = v221[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v142 = v606;
      sub_1BB575BDC();
      v224 = *(_QWORD *)(v606[0] + 16);
      sub_1BB575D4C(v224);
      sub_1BB577E78(v224, v222, v223);
      nullsub_1();
      --v219;
    }
    while (v219);
  }
  else
  {
    v226 = 0;
    v227 = v594;
    do
    {
      v228 = v226 + 1;
      v229 = (uint64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630]() + 16)
                       + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
      swift_beginAccess();
      v231 = *v229;
      v230 = v229[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      v142 = v606;
      sub_1BB575BDC();
      v232 = *(_QWORD *)(v606[0] + 16);
      sub_1BB575D4C(v232);
      sub_1BB577E78(v232, v231, v230);
      nullsub_1();
      v226 = v228;
    }
    while (v227 != v228);
  }
  v225 = v606[0];
LABEL_81:
  v606[0] = sub_1BA90BA84(0);
  v233 = sub_1BA79B898(v225);
  if (!v233)
  {
    swift_bridgeObjectRelease();
    goto LABEL_87;
  }
  v140 = v233;
  if (v233 < 1)
  {
LABEL_339:
    __break(1u);
    goto LABEL_340;
  }
  swift_bridgeObjectRetain();
  v234 = 32;
  do
  {
    v235 = swift_bridgeObjectRetain();
    sub_1BA791D94(v235);
    v234 += 16;
    --v140;
  }
  while (v140);
  swift_bridgeObjectRelease_n();
LABEL_87:
  v140 = v518;
  v236 = (uint64_t *)v606[0];
  v237 = sub_1BA79B898(v518);
  if (!v237)
  {
    v243 = sub_1BA90BA84(0);
    v130 = v594;
    goto LABEL_93;
  }
  v238 = v237;
  v591 = (uint64_t)v236;
  v606[0] = sub_1BA6B0504();
  v142 = v606;
  sub_1BB575AC8(v238);
  if (v238 < 0)
  {
LABEL_340:
    __break(1u);
    goto LABEL_341;
  }
  v140 += (*(unsigned __int8 *)(v543 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v543 + 80);
  v595 = *(_QWORD *)(v543 + 72);
  v114 = (uint64_t *)sub_1BA896988;
  v239 = v532;
  v240 = v586;
  do
  {
    sub_1BA8CAF1C(v140, v239, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA8CAF1C(v239, v240, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1BB494120(v239, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
    sub_1BB575C48();
    v241 = *(_QWORD *)(v606[0] + 16);
    sub_1BB575DB8(v241);
    v242 = v241;
    v240 = v586;
    sub_1BB575F68(v242, v586);
    nullsub_1();
    v140 += v595;
    --v238;
  }
  while (v238);
  v243 = v606[0];
  v130 = v594;
  v236 = (uint64_t *)v591;
LABEL_93:
  v606[0] = v236;
  v142 = v606;
  sub_1BA791D94(v243);
  v586 = v606[0];
  if (!v130)
  {
    v249 = sub_1BA90BC14(0);
    goto LABEL_103;
  }
  v605[0] = sub_1BA6B0504();
  v142 = v605;
  sub_1BB575A5C(v130);
  if (v130 < 0)
  {
LABEL_341:
    __break(1u);
    goto LABEL_342;
  }
  if (sub_1BB6CAD08(v592))
  {
    v114 = (uint64_t *)(v592 + 32);
    v130 = v594;
    v244 = v594;
    do
    {
      v245 = *v114++;
      v246 = (uint64_t *)(*(_QWORD *)(v245 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
      swift_beginAccess();
      v247 = *v246;
      v140 = v246[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v142 = v605;
      sub_1BB575BD0();
      v248 = *(_QWORD *)(v605[0] + 16);
      sub_1BB575D40(v248);
      sub_1BB577E78(v248, v247, v140);
      nullsub_1();
      --v244;
    }
    while (v244);
  }
  else
  {
    v250 = 0;
    v114 = (uint64_t *)&unk_1ED3CA000;
    v130 = v594;
    do
    {
      v251 = (ValueMetadata *)((char *)&v250->Kind + 1);
      v252 = (int64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630]() + 16)
                              + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
      swift_beginAccess();
      v140 = *v252;
      v253 = v252[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      v142 = v605;
      sub_1BB575BD0();
      v254 = *(_QWORD *)(v605[0] + 16);
      sub_1BB575D40(v254);
      sub_1BB577E78(v254, v140, v253);
      nullsub_1();
      v250 = v251;
    }
    while ((ValueMetadata *)v130 != v251);
  }
  v249 = v605[0];
LABEL_103:
  v605[0] = sub_1BA90BAF4(0);
  v255 = sub_1BA79B898(v249);
  if (!v255)
  {
    swift_bridgeObjectRelease();
    goto LABEL_109;
  }
  v140 = v255;
  if (v255 < 1)
  {
LABEL_342:
    __break(1u);
    goto LABEL_343;
  }
  swift_bridgeObjectRetain();
  v256 = 32;
  do
  {
    v257 = swift_bridgeObjectRetain();
    v142 = v605;
    sub_1BA7949B4(v257);
    v256 += 16;
    --v140;
  }
  while (v140);
  swift_bridgeObjectRelease_n();
  v130 = v594;
LABEL_109:
  v532 = v605[0];
  if (!v130)
  {
    v264 = sub_1BA90BC08(0);
    goto LABEL_119;
  }
  v604[0] = sub_1BA6B0504();
  v142 = v604;
  sub_1BB575A50(v130);
  if (v130 < 0)
  {
LABEL_343:
    __break(1u);
    goto LABEL_344;
  }
  if (sub_1BB6CAD08(v592))
  {
    v114 = (uint64_t *)(v592 + 32);
    v258 = v594;
    do
    {
      v259 = *v114++;
      v260 = (uint64_t *)(*(_QWORD *)(v259 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
      swift_beginAccess();
      v261 = *v260;
      v262 = v260[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v142 = v604;
      sub_1BB575BC4();
      v263 = *(_QWORD *)(v604[0] + 16);
      sub_1BB575D34(v263);
      sub_1BB577E78(v263, v261, v262);
      nullsub_1();
      --v258;
    }
    while (v258);
  }
  else
  {
    v265 = 0;
    v114 = (uint64_t *)&unk_1ED3CA000;
    v266 = v594;
    do
    {
      v267 = v265 + 1;
      v268 = (uint64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630]() + 16)
                       + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
      swift_beginAccess();
      v270 = *v268;
      v269 = v268[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      v142 = v604;
      sub_1BB575BC4();
      v271 = *(_QWORD *)(v604[0] + 16);
      sub_1BB575D34(v271);
      sub_1BB577E78(v271, v270, v269);
      nullsub_1();
      v265 = v267;
    }
    while (v266 != v267);
  }
  v264 = v604[0];
LABEL_119:
  v604[0] = sub_1BA90BAD8(0);
  v272 = sub_1BA79B898(v264);
  if (!v272)
  {
    swift_bridgeObjectRelease();
    goto LABEL_125;
  }
  v140 = v272;
  if (v272 < 1)
  {
LABEL_344:
    __break(1u);
    goto LABEL_345;
  }
  swift_bridgeObjectRetain();
  v273 = 32;
  do
  {
    v274 = swift_bridgeObjectRetain();
    sub_1BA794CEC(v274);
    v273 += 16;
    --v140;
  }
  while (v140);
  swift_bridgeObjectRelease_n();
LABEL_125:
  v140 = v512;
  v275 = (uint64_t *)v604[0];
  v276 = sub_1BA79B898(v512);
  if (!v276)
  {
    v282 = sub_1BA90BAD8(0);
    v130 = v594;
    goto LABEL_131;
  }
  v277 = v276;
  v591 = (uint64_t)v275;
  v604[0] = sub_1BA6B0504();
  v142 = v604;
  sub_1BB575ABC(v277);
  if (v277 < 0)
  {
LABEL_345:
    __break(1u);
    goto LABEL_346;
  }
  v140 += (*(unsigned __int8 *)(v541 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v541 + 80);
  v595 = *(_QWORD *)(v541 + 72);
  v114 = (uint64_t *)sub_1BA8968B4;
  v278 = v530;
  v279 = v585;
  do
  {
    sub_1BA8CAF1C(v140, v278, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA8CAF1C(v278, v279, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1BB494120(v278, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
    sub_1BB575C3C();
    v280 = *(_QWORD *)(v604[0] + 16);
    sub_1BB575DAC(v280);
    v281 = v280;
    v279 = v585;
    sub_1BB575F4C(v281, v585);
    nullsub_1();
    v140 += v595;
    --v277;
  }
  while (v277);
  v282 = v604[0];
  v130 = v594;
  v275 = (uint64_t *)v591;
LABEL_131:
  v604[0] = v275;
  sub_1BA794CEC(v282);
  v585 = v604[0];
  if (!v130)
  {
    v290 = sub_1BA90BBFC(0);
    goto LABEL_141;
  }
  v603[0] = sub_1BA6B0504();
  v142 = v603;
  sub_1BB575A44(v130);
  if (v130 < 0)
  {
LABEL_346:
    __break(1u);
    goto LABEL_347;
  }
  if (sub_1BB6CAD08(v592))
  {
    v283 = (uint64_t *)(v592 + 32);
    v130 = v594;
    v284 = v594;
    do
    {
      v285 = *v283++;
      v286 = (uint64_t *)(*(_QWORD *)(v285 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
      swift_beginAccess();
      v287 = *v286;
      v288 = v286[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB575BB8();
      v289 = *(_QWORD *)(v603[0] + 16);
      sub_1BB575D28(v289);
      sub_1BB577E78(v289, v287, v288);
      nullsub_1();
      --v284;
    }
    while (v284);
  }
  else
  {
    v291 = 0;
    v130 = v594;
    do
    {
      v292 = (ValueMetadata *)((char *)&v291->Kind + 1);
      v293 = (uint64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630]() + 16)
                       + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
      swift_beginAccess();
      v295 = *v293;
      v294 = v293[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BB575BB8();
      v296 = *(_QWORD *)(v603[0] + 16);
      sub_1BB575D28(v296);
      sub_1BB577E78(v296, v295, v294);
      nullsub_1();
      v291 = v292;
    }
    while ((ValueMetadata *)v130 != v292);
  }
  v290 = v603[0];
LABEL_141:
  v297 = (uint64_t)v511;
  v298 = v514;
  v114 = (uint64_t *)sub_1BB480A74(v290, (uint64_t (*)(void))sub_1BA790D24, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
  v140 = (int64_t)v298;
  swift_bridgeObjectRelease();
  v299 = sub_1BA79B898(v297);
  v591 = (uint64_t)v298;
  if (!v299)
  {
    v305 = sub_1BA90BA5C(0);
    goto LABEL_147;
  }
  v300 = v299;
  v587 = (uint64_t)v114;
  v603[0] = sub_1BA6B0504();
  v142 = v603;
  sub_1BB575AB0(v300);
  if (v300 < 0)
  {
LABEL_347:
    __break(1u);
    goto LABEL_348;
  }
  v301 = v297 + ((*(unsigned __int8 *)(v542 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v542 + 80));
  v595 = *(_QWORD *)(v542 + 72);
  v302 = v531;
  v140 = v584;
  do
  {
    sub_1BA8CAF1C(v301, v302, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA8CAF1C(v302, v140, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1BB494120(v302, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
    sub_1BB575C30();
    v303 = *(_QWORD *)(v603[0] + 16);
    sub_1BB575DA0(v303);
    v304 = v303;
    v140 = v584;
    sub_1BB575F30(v304, v584);
    nullsub_1();
    v301 += v595;
    --v300;
  }
  while (v300);
  v305 = v603[0];
  v130 = v594;
  v114 = (uint64_t *)v587;
LABEL_147:
  v603[0] = v114;
  sub_1BA7A53F8(v305);
  v584 = v603[0];
  if (!v130)
  {
    v312 = sub_1BA90BBF0(0);
    goto LABEL_157;
  }
  v602[0] = sub_1BA6B0504();
  v142 = v602;
  sub_1BB575A38(v130);
  if (v130 < 0)
  {
LABEL_348:
    __break(1u);
    goto LABEL_349;
  }
  if (sub_1BB6CAD08(v592))
  {
    v306 = (uint64_t *)(v592 + 32);
    v130 = v594;
    v307 = v594;
    do
    {
      v308 = *v306++;
      v309 = (uint64_t *)(*(_QWORD *)(v308 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
      swift_beginAccess();
      v310 = *v309;
      swift_bridgeObjectRetain();
      sub_1BB575BAC();
      v311 = *(_QWORD *)(v602[0] + 16);
      sub_1BB575D1C(v311);
      sub_1BB575E84(v311, v310);
      nullsub_1();
      --v307;
    }
    while (v307);
  }
  else
  {
    v313 = 0;
    v130 = v594;
    do
    {
      v314 = (ValueMetadata *)((char *)&v313->Kind + 1);
      v315 = (uint64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630]() + 16)
                       + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
      swift_beginAccess();
      v316 = *v315;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BB575BAC();
      v317 = *(_QWORD *)(v602[0] + 16);
      sub_1BB575D1C(v317);
      sub_1BB575E84(v317, v316);
      nullsub_1();
      v313 = v314;
    }
    while ((ValueMetadata *)v130 != v314);
  }
  v312 = v602[0];
LABEL_157:
  v318 = v517;
  v319 = (uint64_t *)v591;
  v114 = (uint64_t *)sub_1BB480884(v312);
  v140 = (int64_t)v319;
  swift_bridgeObjectRelease();
  v320 = sub_1BA79B898(v318);
  v591 = (uint64_t)v319;
  if (!v320)
  {
    v326 = sub_1BA90BAA0(0);
    goto LABEL_163;
  }
  v321 = v320;
  v587 = (uint64_t)v114;
  v602[0] = sub_1BA6B0504();
  v142 = v602;
  sub_1BB575AA4(v321);
  if (v321 < 0)
  {
LABEL_349:
    __break(1u);
    goto LABEL_350;
  }
  v322 = v318 + ((*(unsigned __int8 *)(v540 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v540 + 80));
  v595 = *(_QWORD *)(v540 + 72);
  v140 = (int64_t)v529;
  v323 = v583;
  do
  {
    sub_1BA8CAF1C(v322, v140, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA8CAF1C(v140, v323, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1BB494120(v140, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
    sub_1BB575C24();
    v324 = *(_QWORD *)(v602[0] + 16);
    sub_1BB575D94(v324);
    v325 = v324;
    v323 = v583;
    sub_1BB575F14(v325, v583);
    nullsub_1();
    v322 += v595;
    --v321;
  }
  while (v321);
  v326 = v602[0];
  v130 = v594;
  v114 = (uint64_t *)v587;
LABEL_163:
  v602[0] = v114;
  v142 = v602;
  sub_1BA791DB8(v326);
  v583 = v602[0];
  if (!v130)
  {
    v331 = sub_1BA90BDC0(0);
    goto LABEL_173;
  }
  v601[0] = sub_1BA6B0504();
  v142 = v601;
  sub_1BB575A98(v130);
  if (v130 < 0)
  {
LABEL_350:
    __break(1u);
    goto LABEL_351;
  }
  if (sub_1BB6CAD08(v592))
  {
    v114 = (uint64_t *)(v592 + 32);
    v130 = v594;
    v327 = v594;
    do
    {
      v328 = *v114++;
      v329 = (uint64_t *)(*(_QWORD *)(v328 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
      swift_beginAccess();
      v330 = *v329;
      swift_bridgeObjectRetain();
      sub_1BB575C18();
      v140 = *(_QWORD *)(v601[0] + 16);
      sub_1BB575D88(v140);
      sub_1BB575E84(v140, v330);
      v142 = v601;
      nullsub_1();
      --v327;
    }
    while (v327);
  }
  else
  {
    v332 = 0;
    v130 = v594;
    do
    {
      v114 = (uint64_t *)((char *)v332 + 1);
      v333 = (uint64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630]() + 16)
                       + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
      swift_beginAccess();
      v334 = *v333;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BB575C18();
      v140 = *(_QWORD *)(v601[0] + 16);
      sub_1BB575D88(v140);
      sub_1BB575E84(v140, v334);
      v142 = v601;
      nullsub_1();
      v332 = v114;
    }
    while ((uint64_t *)v130 != v114);
  }
  v331 = v601[0];
LABEL_173:
  v601[0] = sub_1BA90BB0C(0);
  v335 = sub_1BA79B898(v331);
  if (!v335)
  {
    swift_bridgeObjectRelease();
    goto LABEL_179;
  }
  v140 = v335;
  if (v335 < 1)
  {
LABEL_351:
    __break(1u);
    goto LABEL_352;
  }
  swift_bridgeObjectRetain();
  for (i = 0; i != v140; ++i)
  {
    v337 = swift_bridgeObjectRetain();
    sub_1BA6D3834(v337);
  }
  swift_bridgeObjectRelease_n();
  v130 = v594;
LABEL_179:
  v338 = swift_bridgeObjectRetain();
  v142 = v601;
  sub_1BA6D3834(v338);
  v531 = v601[0];
  if (!v130)
  {
    v343 = sub_1BA90BB3C(0);
    goto LABEL_189;
  }
  v600[0] = sub_1BA6B0504();
  v142 = v600;
  sub_1BB575A08(v130);
  if (v130 < 0)
  {
LABEL_352:
    __break(1u);
    goto LABEL_353;
  }
  if (sub_1BB6CAD08(v592))
  {
    v114 = (uint64_t *)(v592 + 32);
    v130 = v594;
    v339 = v594;
    do
    {
      v340 = *v114++;
      v341 = (uint64_t *)(*(_QWORD *)(v340 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
      swift_beginAccess();
      v342 = *v341;
      swift_bridgeObjectRetain();
      sub_1BB575B7C();
      v140 = *(_QWORD *)(v600[0] + 16);
      sub_1BB575CEC(v140);
      sub_1BB577E7C(v140, v342);
      v142 = v600;
      nullsub_1();
      --v339;
    }
    while (v339);
  }
  else
  {
    v344 = 0;
    v130 = v594;
    do
    {
      v114 = (uint64_t *)((char *)v344 + 1);
      v345 = (uint64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630]() + 16)
                       + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
      swift_beginAccess();
      v346 = *v345;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BB575B7C();
      v140 = *(_QWORD *)(v600[0] + 16);
      sub_1BB575CEC(v140);
      sub_1BB577E7C(v140, v346);
      v142 = v600;
      nullsub_1();
      v344 = v114;
    }
    while ((uint64_t *)v130 != v114);
  }
  v343 = v600[0];
LABEL_189:
  v600[0] = sub_1BA90B924(0);
  v347 = sub_1BA79B898(v343);
  if (!v347)
  {
    swift_bridgeObjectRelease();
    goto LABEL_195;
  }
  v140 = v347;
  if (v347 < 1)
  {
LABEL_353:
    __break(1u);
    goto LABEL_354;
  }
  swift_bridgeObjectRetain();
  for (j = 0; j != v140; ++j)
  {
    v349 = swift_bridgeObjectRetain();
    sub_1BA67FB48(v349);
  }
  swift_bridgeObjectRelease_n();
  v130 = v594;
LABEL_195:
  v350 = sub_1BA6E43EC(v600[0]);
  swift_bridgeObjectRelease();
  v351 = swift_bridgeObjectRetain();
  v530 = sub_1BA6E4124(v351, v350);
  if (!v130)
  {
    v358 = sub_1BA90BBE4(0);
    goto LABEL_205;
  }
  v596[0] = sub_1BA6B0504();
  v142 = v596;
  sub_1BB575A2C(v130);
  if (v130 < 0)
  {
LABEL_354:
    __break(1u);
    goto LABEL_355;
  }
  if (sub_1BB6CAD08(v592))
  {
    v352 = (uint64_t *)(v592 + 32);
    v130 = v594;
    v353 = v594;
    do
    {
      v354 = *v352++;
      v355 = (uint64_t *)(*(_QWORD *)(v354 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
      swift_beginAccess();
      v356 = *v355;
      v140 = v355[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB575BA0();
      v357 = *(_QWORD *)(v596[0] + 16);
      sub_1BB575D10(v357);
      sub_1BB577E78(v357, v356, v140);
      nullsub_1();
      --v353;
    }
    while (v353);
  }
  else
  {
    v359 = 0;
    v130 = v594;
    do
    {
      v360 = (ValueMetadata *)((char *)&v359->Kind + 1);
      v361 = (int64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630]() + 16)
                              + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
      swift_beginAccess();
      v140 = *v361;
      v362 = v361[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BB575BA0();
      v363 = *(_QWORD *)(v596[0] + 16);
      sub_1BB575D10(v363);
      sub_1BB577E78(v363, v140, v362);
      nullsub_1();
      v359 = v360;
    }
    while ((ValueMetadata *)v130 != v360);
  }
  v358 = v596[0];
LABEL_205:
  v364 = v510;
  v365 = (uint64_t *)v591;
  v114 = (uint64_t *)sub_1BB480A74(v358, (uint64_t (*)(void))sub_1BA791450, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
  swift_bridgeObjectRelease();
  v366 = sub_1BA79B898(v364);
  v529 = v365;
  if (!v366)
  {
    v372 = sub_1BA90BABC(0);
    goto LABEL_211;
  }
  v140 = v366;
  v591 = (uint64_t)v114;
  v596[0] = sub_1BA6B0504();
  v142 = v596;
  sub_1BB575A8C(v140);
  if (v140 < 0)
  {
LABEL_355:
    __break(1u);
    goto LABEL_356;
  }
  v367 = v364 + ((*(unsigned __int8 *)(v538 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v538 + 80));
  v595 = *(_QWORD *)(v538 + 72);
  v368 = v528;
  v369 = v582;
  do
  {
    sub_1BA8CAF1C(v367, v368, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA8CAF1C(v368, v369, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1BB494120(v368, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
    sub_1BB575C0C();
    v370 = *(_QWORD *)(v596[0] + 16);
    sub_1BB575D7C(v370);
    v371 = v370;
    v369 = v582;
    sub_1BB575EF8(v371, v582);
    nullsub_1();
    v367 += v595;
    --v140;
  }
  while (v140);
  v372 = v596[0];
  v130 = v594;
  v114 = (uint64_t *)v591;
LABEL_211:
  v596[0] = (uint64_t)v114;
  sub_1BA7950C8(v372);
  v528 = v596[0];
  if (!v130)
  {
    v114 = (uint64_t *)sub_1BA90BB24(0);
    goto LABEL_221;
  }
  v596[0] = sub_1BA6B0504();
  v142 = v596;
  sub_1BB5759FC(v130);
  if (v130 < 0)
  {
LABEL_356:
    __break(1u);
    goto LABEL_357;
  }
  if (sub_1BB6CAD08(v592))
  {
    v373 = (uint64_t *)(v592 + 32);
    v374 = (uint64_t)v539;
    v375 = v594;
    do
    {
      v376 = *v373++;
      sub_1BA4C2DD8(*(_QWORD *)(v376 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v374, type metadata accessor for FormatCompilerOptions);
      sub_1BB575B70();
      v140 = *(_QWORD *)(v596[0] + 16);
      sub_1BB575CE0(v140);
      sub_1BB575E78(v140, v374);
      nullsub_1();
      --v375;
    }
    while (v375);
  }
  else
  {
    v377 = 0;
    v378 = (uint64_t)v539;
    v379 = v594;
    do
    {
      v380 = v377 + 1;
      v381 = MEMORY[0x1BCCE4630]();
      sub_1BA4C2DD8(*(_QWORD *)(v381 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v378, type metadata accessor for FormatCompilerOptions);
      swift_unknownObjectRelease();
      sub_1BB575B70();
      v140 = *(_QWORD *)(v596[0] + 16);
      sub_1BB575CE0(v140);
      sub_1BB575E78(v140, v378);
      nullsub_1();
      v377 = v380;
    }
    while (v379 != v380);
  }
  v114 = (uint64_t *)v596[0];
LABEL_221:
  v382 = v593;
  v384 = v546;
  v383 = v547;
  v582 = type metadata accessor for FormatPackage();
  v385 = v382 + *(int *)(v582 + 92);
  v142 = v588;
  sub_1BA4C2DD8(v385, (uint64_t)v588, type metadata accessor for FormatCompilerOptions);
  v386 = sub_1BA79B898((uint64_t)v114);
  if (v386)
  {
    v140 = v386;
    if (v386 >= 1)
    {
      v387 = v527;
      v388 = v527[7];
      v595 = (uint64_t)v142 + v527[6];
      v594 = (uint64_t)v142 + v388;
      v591 = v527[8];
      v389 = (uint64_t)v114
           + ((*((unsigned __int8 *)v525 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v525 + 80));
      v587 = v525[9];
      v525 = v114;
      swift_bridgeObjectRetain();
      v130 = (uint64_t)v526;
      v390 = (uint64_t)v539;
      do
      {
        sub_1BA4C2DD8(v389, v390, type metadata accessor for FormatCompilerOptions);
        v596[0] = *v142;
        swift_bridgeObjectRetain();
        v391 = swift_bridgeObjectRetain();
        sub_1BA791D80(v391);
        v392 = v596[0];
        v596[0] = v588[1];
        swift_bridgeObjectRetain();
        v393 = swift_bridgeObjectRetain();
        sub_1BA791D6C(v393);
        v394 = v596[0];
        v395 = v572;
        sub_1BA8CAF1C(v595, v572, (unint64_t *)&qword_1ED3C0A90, (uint64_t (*)(void))sub_1BA820D04, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
        sub_1BA5193C4(v395, v130 + v387[6], type metadata accessor for FormatCompilerOptions.Newsroom);
        sub_1BA7939F0(v594, v390 + v387[7], (uint64_t *)(v130 + v387[7]));
        v396 = *(uint64_t *)((char *)v588 + v591);
        swift_bridgeObjectRetain();
        v397 = swift_bridgeObjectRetain();
        v142 = v588;
        v398 = sub_1BA7919B0(v397, v396);
        *(_QWORD *)v130 = v392;
        *(_QWORD *)(v130 + 8) = v394;
        *(_QWORD *)(v130 + v387[8]) = v398;
        sub_1BA4A2E80(v390, type metadata accessor for FormatCompilerOptions);
        sub_1BA4A2E80((uint64_t)v142, type metadata accessor for FormatCompilerOptions);
        sub_1BA5193C4(v130, (uint64_t)v142, type metadata accessor for FormatCompilerOptions);
        v389 += v587;
        --v140;
      }
      while (v140);
      v114 = v525;
      swift_bridgeObjectRelease();
      v384 = v546;
      v383 = v547;
      goto LABEL_226;
    }
LABEL_357:
    __break(1u);
    goto LABEL_358;
  }
LABEL_226:
  sub_1BA5193C4((uint64_t)v142, v550, type metadata accessor for FormatCompilerOptions);
  swift_bridgeObjectRelease();
  v599 = sub_1BA6B0504();
  v142 = v537;
  sub_1BA4C2DD8(v383, (uint64_t)v537, (uint64_t (*)(_QWORD))sub_1BAA197E8);
  v595 = *(_QWORD *)(v384 + 48);
  if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v595)(v142, 1, v590) == 1)
  {
    v399 = (uint64_t (*)(_QWORD))sub_1BAA197E8;
    v400 = (uint64_t)v142;
  }
  else
  {
    v114 = v524;
    sub_1BA5193C4((uint64_t)v142, (uint64_t)v524, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v401 = (uint64_t)v589;
    sub_1BA4C2DD8((uint64_t)v114, (uint64_t)v589, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    sub_1BA981510();
    v140 = *(_QWORD *)(v599 + 16);
    sub_1BA981618(v140);
    sub_1BA9816F8(v140, v401);
    v142 = &v599;
    nullsub_1();
    v400 = (uint64_t)v114;
    v399 = (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile;
  }
  sub_1BA4A2E80(v400, v399);
  v596[0] = sub_1BA90BCEC(0);
  v402 = swift_bridgeObjectRetain();
  v403 = sub_1BA79B7B4(v402);
  v591 = v403;
  if (v403)
  {
    if (v403 >= 1)
    {
      v404 = 0;
      if (sub_1BB6CAD08(v592))
      {
        v405 = (uint64_t *)v591;
        do
        {
          v404 = (uint64_t *)((char *)v404 + 1);
          v406 = swift_bridgeObjectRetain();
          sub_1BB387648(v406);
        }
        while (v405 != v404);
      }
      else
      {
        v407 = v592;
        v114 = (uint64_t *)v591;
        do
        {
          v408 = MEMORY[0x1BCCE4630](v404, v407);
          v404 = (uint64_t *)((char *)v404 + 1);
          v409 = *(_QWORD *)(v408 + 24);
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          sub_1BB387648(v409);
        }
        while (v114 != v404);
      }
      goto LABEL_238;
    }
LABEL_358:
    __break(1u);
    goto LABEL_359;
  }
LABEL_238:
  swift_bridgeObjectRelease();
  sub_1BB387648(v596[0]);
  v140 = sub_1BA90BCEC(0);
  v596[0] = v140;
  v142 = v516;
  v410 = sub_1BA79B898((uint64_t)v516);
  if (!v410)
  {
    swift_bridgeObjectRelease();
    goto LABEL_247;
  }
  v411 = v410;
  if (v410 < 1)
  {
LABEL_359:
    __break(1u);
    goto LABEL_360;
  }
  v412 = (uint64_t)v142 + ((*(unsigned __int8 *)(v521 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v521 + 80));
  v594 = *(_QWORD *)(v521 + 72);
  swift_bridgeObjectRetain();
  v114 = v565;
  v413 = (uint64_t)v523;
  do
  {
    v130 = (uint64_t)&type metadata for FormatGroup;
    sub_1BA8CAF1C(v412, v413, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA4C2DD8(v413 + *(int *)(v522 + 36), (uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    sub_1BB494120(v413, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
    if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v595)(v114, 1, v590) == 1)
    {
      sub_1BA4A2E80((uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    }
    else
    {
      v414 = v558;
      sub_1BA5193C4((uint64_t)v114, v558, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v130 = (uint64_t)v589;
      sub_1BA5193C4(v414, (uint64_t)v589, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      sub_1BA981510();
      v415 = *(_QWORD *)(v596[0] + 16);
      sub_1BA981618(v415);
      v416 = v415;
      v114 = v565;
      sub_1BA9816F8(v416, v130);
      nullsub_1();
    }
    v412 += v594;
    --v411;
    v413 = (uint64_t)v523;
  }
  while (v411);
  swift_bridgeObjectRelease_n();
  v140 = v596[0];
LABEL_247:
  sub_1BB387648(v140);
  v140 = sub_1BA90BCEC(0);
  v596[0] = v140;
  v142 = v515;
  v417 = sub_1BA79B898((uint64_t)v515);
  if (!v417)
  {
    swift_bridgeObjectRelease();
    goto LABEL_256;
  }
  v418 = v417;
  if (v417 < 1)
  {
LABEL_360:
    __break(1u);
    goto LABEL_361;
  }
  v419 = (uint64_t)v142 + ((*(unsigned __int8 *)(v545 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v545 + 80));
  v594 = *(_QWORD *)(v545 + 72);
  swift_bridgeObjectRetain();
  v114 = v564;
  v420 = (uint64_t)v581;
  do
  {
    v130 = (uint64_t)&type metadata for FormatItem;
    sub_1BA8CAF1C(v419, v420, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA4C2DD8(v420 + *(int *)(v571 + 36), (uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    sub_1BB494120(v420, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
    if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v595)(v114, 1, v590) == 1)
    {
      sub_1BA4A2E80((uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    }
    else
    {
      v421 = v557;
      sub_1BA5193C4((uint64_t)v114, v557, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v130 = (uint64_t)v589;
      sub_1BA5193C4(v421, (uint64_t)v589, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      sub_1BA981510();
      v422 = *(_QWORD *)(v596[0] + 16);
      sub_1BA981618(v422);
      v423 = v422;
      v114 = v564;
      sub_1BA9816F8(v423, v130);
      nullsub_1();
    }
    v419 += v594;
    --v418;
    v420 = (uint64_t)v581;
  }
  while (v418);
  swift_bridgeObjectRelease_n();
  v140 = v596[0];
LABEL_256:
  v424 = v513;
  v142 = &v599;
  sub_1BB387648(v140);
  v140 = sub_1BA90BCEC(0);
  v596[0] = v140;
  v425 = sub_1BA79B898(v424);
  if (!v425)
  {
    swift_bridgeObjectRelease();
    goto LABEL_265;
  }
  v426 = v425;
  if (v425 < 1)
  {
LABEL_361:
    __break(1u);
    goto LABEL_362;
  }
  v427 = v424 + ((*(unsigned __int8 *)(v544 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v544 + 80));
  v594 = *(_QWORD *)(v544 + 72);
  swift_bridgeObjectRetain();
  v428 = v590;
  v429 = (uint64_t)v589;
  v114 = v580;
  v430 = (uint64_t)v579;
  v130 = (uint64_t)sub_1BAA197E8;
  do
  {
    sub_1BA4C2DD8(v427, v430, (uint64_t (*)(_QWORD))sub_1BAC87C74);
    v431 = v430 + *((int *)v114 + 9);
    v432 = v570;
    sub_1BA4C2DD8(v431, v570, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    sub_1BA4A2E80(v430, (uint64_t (*)(_QWORD))sub_1BAC87C74);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v595)(v432, 1, v428) == 1)
    {
      sub_1BA4A2E80(v432, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    }
    else
    {
      v433 = v556;
      sub_1BA5193C4(v432, v556, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      sub_1BA5193C4(v433, v429, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      sub_1BA981510();
      v434 = *(_QWORD *)(v596[0] + 16);
      sub_1BA981618(v434);
      v435 = v434;
      v429 = (uint64_t)v589;
      sub_1BA9816F8(v435, (uint64_t)v589);
      nullsub_1();
      v428 = v590;
    }
    v427 += v594;
    --v426;
    v114 = v580;
    v430 = (uint64_t)v579;
  }
  while (v426);
  swift_bridgeObjectRelease_n();
  v140 = v596[0];
LABEL_265:
  v436 = v518;
  v142 = &v599;
  sub_1BB387648(v140);
  v140 = sub_1BA90BCEC(0);
  v596[0] = v140;
  v437 = sub_1BA79B898(v436);
  if (!v437)
  {
    swift_bridgeObjectRelease();
    goto LABEL_274;
  }
  v438 = v437;
  if (v437 < 1)
  {
LABEL_362:
    __break(1u);
    goto LABEL_363;
  }
  v439 = v436 + ((*(unsigned __int8 *)(v543 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v543 + 80));
  v594 = *(_QWORD *)(v543 + 72);
  swift_bridgeObjectRetain();
  v114 = v563;
  v440 = (uint64_t)v578;
  do
  {
    v130 = (uint64_t)&type metadata for FormatStyle;
    sub_1BA8CAF1C(v439, v440, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA4C2DD8(v440 + *(int *)(v569 + 36), (uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    sub_1BB494120(v440, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
    if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v595)(v114, 1, v590) == 1)
    {
      sub_1BA4A2E80((uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    }
    else
    {
      v441 = v555;
      sub_1BA5193C4((uint64_t)v114, v555, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v130 = (uint64_t)v589;
      sub_1BA5193C4(v441, (uint64_t)v589, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      sub_1BA981510();
      v442 = *(_QWORD *)(v596[0] + 16);
      sub_1BA981618(v442);
      v443 = v442;
      v114 = v563;
      sub_1BA9816F8(v443, v130);
      nullsub_1();
    }
    v439 += v594;
    --v438;
    v440 = (uint64_t)v578;
  }
  while (v438);
  swift_bridgeObjectRelease_n();
  v140 = v596[0];
LABEL_274:
  v444 = v517;
  v142 = &v599;
  sub_1BB387648(v140);
  v140 = sub_1BA90BCEC(0);
  v596[0] = v140;
  v445 = sub_1BA79B898(v444);
  if (!v445)
  {
    swift_bridgeObjectRelease();
    goto LABEL_283;
  }
  v446 = v445;
  if (v445 < 1)
  {
LABEL_363:
    __break(1u);
    goto LABEL_364;
  }
  v447 = v444 + ((*(unsigned __int8 *)(v540 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v540 + 80));
  v594 = *(_QWORD *)(v540 + 72);
  swift_bridgeObjectRetain();
  v114 = v562;
  v448 = (uint64_t)v577;
  do
  {
    v130 = (uint64_t)&type metadata for FormatDecoration;
    sub_1BA8CAF1C(v447, v448, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA4C2DD8(v448 + *(int *)(v568 + 36), (uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    sub_1BB494120(v448, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
    if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v595)(v114, 1, v590) == 1)
    {
      sub_1BA4A2E80((uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    }
    else
    {
      v449 = v554;
      sub_1BA5193C4((uint64_t)v114, v554, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v130 = (uint64_t)v589;
      sub_1BA5193C4(v449, (uint64_t)v589, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      sub_1BA981510();
      v450 = *(_QWORD *)(v596[0] + 16);
      sub_1BA981618(v450);
      v451 = v450;
      v114 = v562;
      sub_1BA9816F8(v451, v130);
      nullsub_1();
    }
    v447 += v594;
    --v446;
    v448 = (uint64_t)v577;
  }
  while (v446);
  swift_bridgeObjectRelease_n();
  v140 = v596[0];
LABEL_283:
  v452 = (uint64_t)v511;
  v142 = &v599;
  sub_1BB387648(v140);
  v140 = sub_1BA90BCEC(0);
  v596[0] = v140;
  v453 = sub_1BA79B898(v452);
  if (!v453)
  {
    swift_bridgeObjectRelease();
    goto LABEL_292;
  }
  v454 = v453;
  if (v453 < 1)
  {
LABEL_364:
    __break(1u);
    goto LABEL_365;
  }
  v455 = v452 + ((*(unsigned __int8 *)(v542 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v542 + 80));
  v594 = *(_QWORD *)(v542 + 72);
  swift_bridgeObjectRetain();
  v114 = v561;
  v456 = (uint64_t)v576;
  do
  {
    v130 = (uint64_t)&type metadata for FormatType;
    sub_1BA8CAF1C(v455, v456, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA4C2DD8(v456 + *(int *)(v567 + 36), (uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    sub_1BB494120(v456, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
    if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v595)(v114, 1, v590) == 1)
    {
      sub_1BA4A2E80((uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    }
    else
    {
      v457 = v553;
      sub_1BA5193C4((uint64_t)v114, v553, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v130 = (uint64_t)v589;
      sub_1BA5193C4(v457, (uint64_t)v589, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      sub_1BA981510();
      v458 = *(_QWORD *)(v596[0] + 16);
      sub_1BA981618(v458);
      v459 = v458;
      v114 = v561;
      sub_1BA9816F8(v459, v130);
      nullsub_1();
    }
    v455 += v594;
    --v454;
    v456 = (uint64_t)v576;
  }
  while (v454);
  swift_bridgeObjectRelease_n();
  v140 = v596[0];
LABEL_292:
  v460 = v512;
  v142 = &v599;
  sub_1BB387648(v140);
  v140 = sub_1BA90BCEC(0);
  v596[0] = v140;
  v461 = sub_1BA79B898(v460);
  if (!v461)
  {
    swift_bridgeObjectRelease();
    goto LABEL_301;
  }
  v462 = v461;
  if (v461 < 1)
  {
LABEL_365:
    __break(1u);
    goto LABEL_366;
  }
  v463 = v460 + ((*(unsigned __int8 *)(v541 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v541 + 80));
  v594 = *(_QWORD *)(v541 + 72);
  swift_bridgeObjectRetain();
  v114 = v560;
  v464 = (uint64_t)v575;
  do
  {
    v130 = (uint64_t)&type metadata for FormatSupplementary;
    sub_1BA8CAF1C(v463, v464, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA4C2DD8(v464 + *(int *)(v566 + 36), (uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    sub_1BB494120(v464, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
    if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v595)(v114, 1, v590) == 1)
    {
      sub_1BA4A2E80((uint64_t)v114, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    }
    else
    {
      v465 = v552;
      sub_1BA5193C4((uint64_t)v114, v552, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v130 = (uint64_t)v589;
      sub_1BA5193C4(v465, (uint64_t)v589, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      sub_1BA981510();
      v466 = *(_QWORD *)(v596[0] + 16);
      sub_1BA981618(v466);
      v467 = v466;
      v114 = v560;
      sub_1BA9816F8(v467, v130);
      nullsub_1();
    }
    v463 += v594;
    --v462;
    v464 = (uint64_t)v575;
  }
  while (v462);
  swift_bridgeObjectRelease_n();
  v140 = v596[0];
LABEL_301:
  v468 = v510;
  v142 = &v599;
  sub_1BB387648(v140);
  v140 = sub_1BA90BCEC(0);
  v596[0] = v140;
  v469 = sub_1BA79B898(v468);
  if (!v469)
  {
    swift_bridgeObjectRelease();
    goto LABEL_310;
  }
  v470 = v469;
  if (v469 < 1)
  {
LABEL_366:
    __break(1u);
    goto LABEL_367;
  }
  v471 = v468 + ((*(unsigned __int8 *)(v538 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v538 + 80));
  v594 = *(_QWORD *)(v538 + 72);
  swift_bridgeObjectRetain();
  v472 = (uint64_t)v559;
  v473 = (uint64_t)v573;
  v474 = v574;
  do
  {
    sub_1BA8CAF1C(v471, v473, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    sub_1BA4C2DD8(v473 + *(int *)(v474 + 36), v472, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    sub_1BB494120(v473, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v595)(v472, 1, v590) == 1)
    {
      sub_1BA4A2E80(v472, (uint64_t (*)(_QWORD))sub_1BAA197E8);
      v474 = v574;
    }
    else
    {
      v475 = v551;
      sub_1BA5193C4(v472, v551, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v476 = (uint64_t)v589;
      sub_1BA5193C4(v475, (uint64_t)v589, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      sub_1BA981510();
      v477 = *(_QWORD *)(v596[0] + 16);
      sub_1BA981618(v477);
      v478 = v476;
      v474 = v574;
      sub_1BA9816F8(v477, v478);
      nullsub_1();
      v472 = (uint64_t)v559;
    }
    v471 += v594;
    --v470;
    v473 = (uint64_t)v573;
  }
  while (v470);
  swift_bridgeObjectRelease_n();
  v140 = v596[0];
LABEL_310:
  v479 = v593;
  v114 = v535;
  v480 = v536;
  sub_1BB387648(v140);
  v142 = *(uint64_t **)(v479 + 8);
  v595 = *(_QWORD *)v479;
  ((void (*)(uint64_t, uint64_t, uint64_t))v114[2])(v549, v479 + *(int *)(v582 + 96), v480);
  v598 = *(_BYTE *)(v479 + 48);
  v597 = *(_BYTE *)(v479 + 49);
  v130 = *(_QWORD *)(v479 + 24);
  v590 = *(_QWORD *)(v479 + 16);
  v140 = *(_QWORD *)(v479 + 40);
  v589 = *(ValueMetadata **)(v479 + 32);
  sub_1BA4C2DD8(v550, v548, type metadata accessor for FormatCompilerOptions);
  swift_bridgeObjectRetain();
  v594 = (uint64_t)v142;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v596[0] = sub_1BA90BB18(0);
  if (!v591)
  {
    swift_bridgeObjectRelease();
    goto LABEL_323;
  }
  if (v591 < 1)
  {
LABEL_367:
    __break(1u);
LABEL_368:
    __break(1u);
    goto LABEL_369;
  }
  v481 = v592;
  if (sub_1BB6CAD08(v592))
  {
    swift_bridgeObjectRetain();
    v482 = 0;
    v483 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem;
    v484 = (uint64_t *)v591;
    do
    {
      v485 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v481 + 8 * (_QWORD)v482 + 32) + 16) + v483);
      v486 = v485[1];
      if (v486 != 2)
      {
        v487 = *v485;
        sub_1BA8C89D0(*v485, v485[1]);
        sub_1BA9814BC();
        v488 = *(_QWORD *)(v596[0] + 16);
        sub_1BA981594(v488);
        v489 = v488;
        v484 = (uint64_t *)v591;
        sub_1BA981668(v489, v487, v486);
        nullsub_1();
        v481 = v592;
        v483 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem;
      }
      v482 = (uint64_t *)((char *)v482 + 1);
    }
    while (v484 != v482);
  }
  else
  {
    swift_bridgeObjectRetain();
    v490 = 0;
    do
    {
      v491 = (uint64_t *)(*(_QWORD *)(MEMORY[0x1BCCE4630](v490, v481) + 16)
                       + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
      v492 = *v491;
      v493 = v491[1];
      sub_1BA6BAD2C(*v491, v493);
      swift_unknownObjectRelease();
      if (v493 != 2)
      {
        sub_1BA9814BC();
        v494 = *(_QWORD *)(v596[0] + 16);
        sub_1BA981594(v494);
        sub_1BA981668(v494, v492, v493);
        nullsub_1();
      }
      v490 = (uint64_t *)((char *)v490 + 1);
      v481 = v592;
    }
    while ((uint64_t *)v591 != v490);
  }
  swift_bridgeObjectRelease_n();
  v479 = v593;
LABEL_323:
  v495 = v596[0];
  v114 = *(uint64_t **)(v479 + 160);
  v142 = *(uint64_t **)(v479 + 168);
  v496 = sub_1BA79B898(v596[0]);
  if (v496)
  {
    v497 = v496;
    if (v496 >= 1)
    {
      if (v142 != (uint64_t *)2)
      {
        sub_1BA8C89D0((uint64_t)v114, (unint64_t)v142);
        swift_bridgeObjectRelease();
        v498 = 1;
        goto LABEL_372;
      }
      v114 = *(uint64_t **)(v495 + 32);
      v142 = *(uint64_t **)(v495 + 40);
      sub_1BA8C89D0((uint64_t)v114, (unint64_t)v142);
      swift_bridgeObjectRelease();
      if (v497 != 1)
      {
        v498 = 1;
        do
        {
          ++v498;
LABEL_372:
          ;
        }
        while (v498 != v497);
      }
      goto LABEL_369;
    }
    goto LABEL_368;
  }
  sub_1BA6BAD2C((uint64_t)v114, (unint64_t)v142);
  swift_bridgeObjectRelease();
LABEL_369:
  v596[0] = (uint64_t)v114;
  v596[1] = (uint64_t)v142;
  sub_1BA4B07F0(0, &qword_1ED3B9E80, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA6BCBF8(0);
  v104 = v499;
  v500 = swift_allocObject();
  sub_1BA85C270(v500, 1);
  v502 = v501;
  sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v504 = (char *)(v502 + *(int *)(v503 + 48));
  sub_1BA4C2DD8(v593, v502, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v504, 0, 0, 0, 0);
  swift_storeEnumTagMultiPayload();
  v505 = nullsub_1();
  v506 = v529;
  v507 = sub_1BB5765C0(v595, v594, v549, &v598, &v597, v590, v130, (uint64_t)v589, v140, (uint64_t)v520, (uint64_t)v534, (uint64_t)v533, v586, v532, v585, v584, v583, v531, v530,
           v528,
           v548,
           v596,
           v505);
  if (!v506)
  {
    v508 = (uint64_t)v507;
    v509 = v599;
    type metadata accessor for DebugFormatPackageInventory();
    swift_allocObject();
    v104 = (char *)sub_1BB72ADEC(v508, v509);
    swift_bridgeObjectRelease();
    sub_1BA4A2E80(v550, type metadata accessor for FormatCompilerOptions);
    swift_bridgeObjectRelease();
    return v104;
  }
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v550, type metadata accessor for FormatCompilerOptions);
LABEL_4:
  swift_bridgeObjectRelease();
  return v104;
}

uint64_t sub_1BB48CA3C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v3;

  v2 = a1[1];
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(id *)(v2 + 32);
    return swift_willThrow();
  }
  else
  {
    *a2 = *a1;
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1BB48CA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;

  *(_QWORD *)&v65 = a2;
  *(_QWORD *)&v69 = a1;
  *(_QWORD *)&v66 = a3;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v3);
  v64 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for DebugFormatCacheFile();
  *(_QWORD *)&v67 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v63 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v68 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v61 - v13;
  sub_1BA8CAF1C(v69, (uint64_t)&v61 - v13, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA8CF138(0, &qword_1ED3B55A8);
    v16 = (uint64_t)&v14[*(int *)(v15 + 48)];
    v17 = *(_OWORD *)v14;
    v68 = *((_OWORD *)v14 + 1);
    v69 = v17;
    v65 = *((_OWORD *)v14 + 2);
    v18 = *((_QWORD *)v14 + 6);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v20 = v66;
    sub_1BA5193C4(v16, v66 + *(int *)(v19 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v21 = v68;
    *(_OWORD *)v20 = v69;
    *(_OWORD *)(v20 + 16) = v21;
    *(_OWORD *)(v20 + 32) = v65;
    *(_QWORD *)(v20 + 48) = v18;
    sub_1BA4CDF6C(0, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v20 + *(int *)(v22 + 36), 1, 1, v74);
  }
  v24 = v67;
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v26 = (uint64_t)&v14[*(int *)(v25 + 48)];
  *(_QWORD *)&v69 = v9;
  v27 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v62 = v8;
  v27(v11, v14, v8);
  sub_1BA5193C4(v26, v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v28 = v11;
  v29 = sub_1BB86C538();
  v31 = sub_1BA9C0430(1uLL, v29, v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_bridgeObjectRelease();
  v38 = MEMORY[0x1BCCE334C](v31, v33, v35, v37);
  v40 = v39;
  swift_bridgeObjectRelease();
  v41 = v65;
  if (!*(_QWORD *)(v65 + 16))
  {
    v47 = v64;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v64, 1, 1, v74);
    v51 = v62;
LABEL_9:
    sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *v54 = v38;
    v54[1] = v40;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v42 = sub_1BA6E35A8(v38, v40);
  v43 = v74;
  if ((v44 & 1) != 0)
  {
    v45 = *(_QWORD *)(v41 + 56);
    v46 = v24;
    v47 = v64;
    sub_1BA4C2DD8(v45 + *(_QWORD *)(v24 + 72) * v42, v64, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v49 = v47;
    v50 = 0;
  }
  else
  {
    v46 = v24;
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v47 = v64;
    v49 = v64;
    v50 = 1;
  }
  *(_QWORD *)&v65 = v48;
  v48(v49, v50, 1, v43);
  v52 = v66;
  v51 = v62;
  v53 = (uint64_t)v63;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v43) == 1)
    goto LABEL_9;
  sub_1BA5193C4(v47, v53, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BB369DC4();
  if ((swift_dynamicCast() & 1) != 0 && *((_QWORD *)&v70 + 1))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v28, v51);
    v69 = v70;
    v66 = v72;
    v67 = v71;
    v55 = v73;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1BA5193C4(v68, v52 + *(int *)(v56 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v57 = v67;
    *(_OWORD *)v52 = v69;
    *(_OWORD *)(v52 + 16) = v57;
    *(_OWORD *)(v52 + 32) = v66;
    *(_QWORD *)(v52 + 48) = v55;
    sub_1BA4CDF6C(0, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v59 = v52 + *(int *)(v58 + 36);
    sub_1BA5193C4(v53, v59, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v65)(v59, 0, 1, v43);
  }
  type metadata accessor for DebugFormatManagerError();
  sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
  swift_allocError();
  *v60 = v38;
  v60[1] = v40;
  v60[2] = 0xD000000000000012;
  v60[3] = 0x80000001BB961480;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
LABEL_14:
  sub_1BA4A2E80(v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v28, v51);
}

uint64_t sub_1BB48D160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  char v87;
  __int128 v88;
  char v89;
  uint64_t v90;

  *(_QWORD *)&v75 = a2;
  *(_QWORD *)&v80 = a1;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v4);
  v74 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for DebugFormatCacheFile();
  *(_QWORD *)&v78 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v8);
  *(_QWORD *)&v76 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v77 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  *(_QWORD *)&v79 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v71 - v13;
  sub_1BA8CAF1C(v80, (uint64_t)&v71 - v13, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA8CF138(0, &qword_1ED3B5F60);
    v16 = (uint64_t)&v14[*(int *)(v15 + 48)];
    v80 = *(_OWORD *)v14;
    v79 = *((_OWORD *)v14 + 1);
    v77 = *((_OWORD *)v14 + 2);
    v17 = *((_QWORD *)v14 + 6);
    v18 = *((_QWORD *)v14 + 7);
    v19 = v14[80];
    v20 = v14[104];
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v22 = a3 + *(int *)(v21 + 36);
    v75 = *((_OWORD *)v14 + 4);
    v76 = *(_OWORD *)(v14 + 88);
    sub_1BA5193C4(v16, v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v23 = v79;
    *(_OWORD *)a3 = v80;
    *(_OWORD *)(a3 + 16) = v23;
    *(_OWORD *)(a3 + 32) = v77;
    *(_QWORD *)(a3 + 48) = v17;
    *(_QWORD *)(a3 + 56) = v18;
    *(_OWORD *)(a3 + 64) = v75;
    *(_BYTE *)(a3 + 80) = v19;
    *(_OWORD *)(a3 + 88) = v76;
    *(_BYTE *)(a3 + 104) = v20;
    sub_1BA4CDF6C(0, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(a3 + *(int *)(v24 + 36), 1, 1, v90);
  }
  v26 = v78;
  v73 = v7;
  v72 = a3;
  v27 = v90;
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v29 = (uint64_t)&v14[*(int *)(v28 + 48)];
  *(_QWORD *)&v80 = v10;
  (*(void (**)(_QWORD, char *, _QWORD))(v10 + 32))(v79, v14, v77);
  sub_1BA5193C4(v29, v76, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v30 = sub_1BB86C538();
  v32 = sub_1BA9C0430(1uLL, v30, v31);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  swift_bridgeObjectRelease();
  v39 = MEMORY[0x1BCCE334C](v32, v34, v36, v38);
  v41 = v40;
  swift_bridgeObjectRelease();
  v42 = v75;
  if (!*(_QWORD *)(v75 + 16))
  {
    v45 = v39;
    v49 = v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v74, 1, 1, v27);
    v53 = v76;
    v54 = v77;
    v55 = v80;
LABEL_9:
    sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *v57 = v45;
    v57[1] = v41;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v43 = sub_1BA6E35A8(v39, v41);
  v44 = v27;
  v45 = v39;
  if ((v46 & 1) != 0)
  {
    v47 = *(_QWORD *)(v42 + 56);
    v48 = v26;
    v49 = v74;
    sub_1BA4C2DD8(v47 + *(_QWORD *)(v26 + 72) * v43, v74, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v51 = v49;
    v52 = 0;
  }
  else
  {
    v48 = v26;
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v49 = v74;
    v51 = v74;
    v52 = 1;
  }
  *(_QWORD *)&v75 = v50;
  v50(v51, v52, 1, v27);
  v53 = v76;
  v56 = (uint64_t)v73;
  v54 = v77;
  v55 = v80;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v49, 1, v44) == 1)
    goto LABEL_9;
  sub_1BA5193C4(v49, v56, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BB369DC4();
  if ((swift_dynamicCast() & 1) != 0 && *((_QWORD *)&v81 + 1))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(v55 + 8))(v79, v54);
    v80 = v81;
    v79 = v82;
    v78 = v83;
    v58 = v56;
    v59 = v84;
    v60 = v85;
    v61 = v87;
    v62 = v89;
    v63 = v44;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v77 = v86;
    v76 = v88;
    v65 = v72;
    sub_1BA5193C4(v53, v72 + *(int *)(v64 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v66 = v79;
    *(_OWORD *)v65 = v80;
    *(_OWORD *)(v65 + 16) = v66;
    *(_OWORD *)(v65 + 32) = v78;
    *(_QWORD *)(v65 + 48) = v59;
    *(_QWORD *)(v65 + 56) = v60;
    *(_OWORD *)(v65 + 64) = v77;
    *(_BYTE *)(v65 + 80) = v61 & 1;
    *(_OWORD *)(v65 + 88) = v76;
    *(_BYTE *)(v65 + 104) = v62;
    sub_1BA4CDF6C(0, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v68 = v65 + *(int *)(v67 + 36);
    sub_1BA5193C4(v58, v68, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v75)(v68, 0, 1, v63);
  }
  type metadata accessor for DebugFormatManagerError();
  sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
  swift_allocError();
  *v69 = v45;
  v69[1] = v41;
  v69[2] = 0xD000000000000013;
  v69[3] = 0x80000001BB9614C0;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
LABEL_14:
  v70 = v79;
  sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v70, v54);
}

uint64_t sub_1BB48D940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;

  *(_QWORD *)&v70 = a2;
  *(_QWORD *)&v73 = a1;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v4);
  v68 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for DebugFormatCacheFile();
  *(_QWORD *)&v72 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v67 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)&v69 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v71 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v65 - v13;
  sub_1BA8CAF1C(v73, (uint64_t)&v65 - v13, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA8CF138(0, &qword_1ED3B3168);
    v16 = (uint64_t)&v14[*(int *)(v15 + 48)];
    v73 = *(_OWORD *)v14;
    v71 = *((_OWORD *)v14 + 1);
    v70 = *((_OWORD *)v14 + 2);
    v69 = *((_OWORD *)v14 + 3);
    v17 = *((_QWORD *)v14 + 8);
    v18 = *((_QWORD *)v14 + 9);
    v19 = v14[80];
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1BA5193C4(v16, a3 + *(int *)(v20 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v21 = v71;
    *(_OWORD *)a3 = v73;
    *(_OWORD *)(a3 + 16) = v21;
    v22 = v69;
    *(_OWORD *)(a3 + 32) = v70;
    *(_OWORD *)(a3 + 48) = v22;
    *(_QWORD *)(a3 + 64) = v17;
    *(_QWORD *)(a3 + 72) = v18;
    *(_BYTE *)(a3 + 80) = v19;
    sub_1BA4CDF6C(0, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(a3 + *(int *)(v23 + 36), 1, 1, v81);
  }
  v25 = v72;
  v65 = a3;
  v26 = v81;
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v28 = (uint64_t)&v14[*(int *)(v27 + 48)];
  *(_QWORD *)&v73 = v9;
  (*(void (**)(char *, char *, _QWORD))(v9 + 32))(v11, v14, v71);
  v29 = v69;
  sub_1BA5193C4(v28, v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v66 = v11;
  v30 = sub_1BB86C538();
  v32 = sub_1BA9C0430(1uLL, v30, v31);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  swift_bridgeObjectRelease();
  v39 = MEMORY[0x1BCCE334C](v32, v34, v36, v38);
  v41 = v40;
  swift_bridgeObjectRelease();
  v42 = v70;
  if (!*(_QWORD *)(v70 + 16))
  {
    v47 = v68;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v68, 1, 1, v26);
    v51 = v71;
LABEL_9:
    sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *v54 = v39;
    v54[1] = v41;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v43 = sub_1BA6E35A8(v39, v41);
  v45 = v25;
  if ((v44 & 1) != 0)
  {
    v46 = *(_QWORD *)(v42 + 56) + *(_QWORD *)(v25 + 72) * v43;
    v47 = v68;
    sub_1BA4C2DD8(v46, v68, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v49 = v47;
    v50 = 0;
  }
  else
  {
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v47 = v68;
    v49 = v68;
    v50 = 1;
  }
  *(_QWORD *)&v70 = v48;
  v48(v49, v50, 1, v26);
  v52 = v65;
  v51 = v71;
  v53 = (uint64_t)v67;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v47, 1, v26) == 1)
    goto LABEL_9;
  sub_1BA5193C4(v47, v53, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BB369DC4();
  if ((swift_dynamicCast() & 1) != 0 && *((_QWORD *)&v74 + 1))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v66, v51);
    v72 = v75;
    v73 = v74;
    v71 = v76;
    v69 = v77;
    v55 = v53;
    v56 = v78;
    v57 = v79;
    v58 = v80;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1BA5193C4(v29, v52 + *(int *)(v59 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v60 = v72;
    *(_OWORD *)v52 = v73;
    *(_OWORD *)(v52 + 16) = v60;
    v61 = v69;
    *(_OWORD *)(v52 + 32) = v71;
    *(_OWORD *)(v52 + 48) = v61;
    *(_QWORD *)(v52 + 64) = v56;
    *(_QWORD *)(v52 + 72) = v57;
    *(_BYTE *)(v52 + 80) = v58;
    sub_1BA4CDF6C(0, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v63 = v52 + *(int *)(v62 + 36);
    sub_1BA5193C4(v55, v63, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v70)(v63, 0, 1, v26);
  }
  type metadata accessor for DebugFormatManagerError();
  sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
  swift_allocError();
  *v64 = v39;
  v64[1] = v41;
  v64[2] = 0x795474616D726F46;
  v64[3] = 0xEA00000000006570;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
LABEL_14:
  sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v66, v51);
}

uint64_t sub_1BB48E070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __int16 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD, char *, uint64_t);
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  __int16 v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  int v86;
  __int128 v87;
  uint64_t v88;
  __int16 v89;
  char v90;
  uint64_t v91;

  *(_QWORD *)&v76 = a2;
  *(_QWORD *)&v80 = a1;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v4);
  *(_QWORD *)&v75 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for DebugFormatCacheFile();
  *(_QWORD *)&v77 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  *(_QWORD *)&v74 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)&v79 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)&v78 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v72 - v13;
  sub_1BA8CAF1C(v80, (uint64_t)&v72 - v13, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA8CF138(0, &qword_1ED3B4850);
    v16 = (uint64_t)&v14[*(int *)(v15 + 48)];
    v80 = *(_OWORD *)v14;
    v79 = *((_OWORD *)v14 + 1);
    v78 = *((_OWORD *)v14 + 2);
    v76 = *((_OWORD *)v14 + 3);
    v17 = *((_QWORD *)v14 + 8);
    v18 = v14[72];
    v19 = *((_QWORD *)v14 + 12);
    v20 = *((_WORD *)v14 + 52);
    v21 = v14[106];
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v23 = a3 + *(int *)(v22 + 36);
    v75 = *((_OWORD *)v14 + 5);
    sub_1BA5193C4(v16, v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v24 = v79;
    *(_OWORD *)a3 = v80;
    *(_OWORD *)(a3 + 16) = v24;
    v25 = v76;
    *(_OWORD *)(a3 + 32) = v78;
    *(_OWORD *)(a3 + 48) = v25;
    *(_QWORD *)(a3 + 64) = v17;
    *(_BYTE *)(a3 + 72) = v18;
    *(_OWORD *)(a3 + 80) = v75;
    *(_QWORD *)(a3 + 96) = v19;
    *(_BYTE *)(a3 + 106) = v21;
    *(_WORD *)(a3 + 104) = v20;
    sub_1BA4CDF6C(0, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(a3 + *(int *)(v26 + 36), 1, 1, v91);
  }
  v28 = v77;
  v72 = a3;
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v30 = (uint64_t)&v14[*(int *)(v29 + 48)];
  v73 = v10;
  v31 = *(void (**)(_QWORD, char *, uint64_t))(v10 + 32);
  *(_QWORD *)&v80 = v9;
  v31(v78, v14, v9);
  sub_1BA5193C4(v30, v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v32 = sub_1BB86C538();
  v34 = sub_1BA9C0430(1uLL, v32, v33);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  swift_bridgeObjectRelease();
  v41 = MEMORY[0x1BCCE334C](v34, v36, v38, v40);
  v43 = v42;
  swift_bridgeObjectRelease();
  v44 = v76;
  if (!*(_QWORD *)(v76 + 16))
  {
    v50 = v75;
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v28 + 56))(v75, 1, 1, v91);
    v54 = v80;
    v55 = v73;
LABEL_9:
    sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *v58 = v41;
    v58[1] = v43;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v45 = sub_1BA6E35A8(v41, v43);
  v46 = v91;
  if ((v47 & 1) != 0)
  {
    v48 = *(_QWORD *)(v44 + 56);
    v49 = v28;
    v50 = v75;
    sub_1BA4C2DD8(v48 + *(_QWORD *)(v28 + 72) * v45, v75, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    v52 = v50;
    v53 = 0;
  }
  else
  {
    v49 = v28;
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    v50 = v75;
    v52 = v75;
    v53 = 1;
  }
  *(_QWORD *)&v76 = v51;
  v51(v52, v53, 1, v46);
  v56 = v74;
  v54 = v80;
  v57 = v72;
  v55 = v73;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v50, 1, v46) == 1)
    goto LABEL_9;
  sub_1BA5193C4(v50, v56, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BB369DC4();
  if ((swift_dynamicCast() & 1) != 0 && *((_QWORD *)&v81 + 1))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(v55 + 8))(v78, v54);
    v80 = v81;
    v78 = v82;
    v77 = v83;
    v75 = v84;
    v59 = v85;
    v60 = v86;
    v61 = v56;
    v62 = v88;
    v63 = v89;
    v64 = v90;
    v65 = v46;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v74 = v87;
    sub_1BA5193C4(v79, v57 + *(int *)(v66 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v67 = v78;
    *(_OWORD *)v57 = v80;
    *(_OWORD *)(v57 + 16) = v67;
    v68 = v75;
    *(_OWORD *)(v57 + 32) = v77;
    *(_OWORD *)(v57 + 48) = v68;
    *(_QWORD *)(v57 + 64) = v59;
    *(_BYTE *)(v57 + 72) = v60 & 1;
    *(_OWORD *)(v57 + 80) = v74;
    *(_QWORD *)(v57 + 96) = v62;
    *(_BYTE *)(v57 + 106) = v64;
    *(_WORD *)(v57 + 104) = v63;
    sub_1BA4CDF6C(0, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v70 = v57 + *(int *)(v69 + 36);
    sub_1BA5193C4(v61, v70, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v76)(v70, 0, 1, v65);
  }
  type metadata accessor for DebugFormatManagerError();
  sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
  swift_allocError();
  *v71 = v41;
  v71[1] = v43;
  v71[2] = 0xD000000000000010;
  v71[3] = 0x80000001BB9614A0;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
LABEL_14:
  sub_1BA4A2E80(v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  return (*(uint64_t (**)(_QWORD, uint64_t))(v55 + 8))(v78, v54);
}

uint64_t sub_1BB48E848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;

  *(_QWORD *)&v71 = a2;
  *(_QWORD *)&v74 = a1;
  *(_QWORD *)&v72 = a3;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v3);
  v69 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for DebugFormatCacheFile();
  *(_QWORD *)&v73 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v68 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v70 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v66 - v13;
  sub_1BA8CAF1C(v74, (uint64_t)&v66 - v13, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA8CF138(0, &qword_1ED3B3338);
    v16 = (uint64_t)&v14[*(int *)(v15 + 48)];
    v74 = *(_OWORD *)v14;
    v71 = *((_OWORD *)v14 + 1);
    v17 = *((_QWORD *)v14 + 4);
    v18 = *((_QWORD *)v14 + 5);
    v19 = *((_QWORD *)v14 + 8);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v21 = v72;
    v22 = v72 + *(int *)(v20 + 36);
    v70 = *((_OWORD *)v14 + 3);
    sub_1BA5193C4(v16, v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v23 = v71;
    *(_OWORD *)v21 = v74;
    *(_OWORD *)(v21 + 16) = v23;
    *(_QWORD *)(v21 + 32) = v17;
    *(_QWORD *)(v21 + 40) = v18;
    *(_OWORD *)(v21 + 48) = v70;
    *(_QWORD *)(v21 + 64) = v19;
    sub_1BA4CDF6C(0, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v21 + *(int *)(v24 + 36), 1, 1, v81);
  }
  v26 = v73;
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v28 = (uint64_t)&v14[*(int *)(v27 + 48)];
  *(_QWORD *)&v74 = v9;
  v29 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v66 = v8;
  v29(v11, v14, v8);
  v30 = v70;
  sub_1BA5193C4(v28, v70, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v67 = v11;
  v31 = sub_1BB86C538();
  v33 = sub_1BA9C0430(1uLL, v31, v32);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  swift_bridgeObjectRelease();
  v40 = MEMORY[0x1BCCE334C](v33, v35, v37, v39);
  v42 = v41;
  swift_bridgeObjectRelease();
  v43 = v71;
  if (!*(_QWORD *)(v71 + 16))
  {
    v49 = v69;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v69, 1, 1, v81);
    v53 = v66;
LABEL_9:
    sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *v56 = v40;
    v56[1] = v42;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v44 = sub_1BA6E35A8(v40, v42);
  v45 = v81;
  v47 = v26;
  if ((v46 & 1) != 0)
  {
    v48 = *(_QWORD *)(v43 + 56) + *(_QWORD *)(v26 + 72) * v44;
    v49 = v69;
    sub_1BA4C2DD8(v48, v69, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v51 = v49;
    v52 = 0;
  }
  else
  {
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v49 = v69;
    v51 = v69;
    v52 = 1;
  }
  *(_QWORD *)&v71 = v50;
  v50(v51, v52, 1, v45);
  v54 = v72;
  v53 = v66;
  v55 = (uint64_t)v68;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v49, 1, v45) == 1)
    goto LABEL_9;
  sub_1BA5193C4(v49, v55, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BB369DC4();
  if ((swift_dynamicCast() & 1) != 0 && *((_QWORD *)&v75 + 1))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v67, v53);
    v73 = v76;
    v74 = v75;
    v57 = v55;
    v58 = v77;
    v59 = v78;
    v60 = v80;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v72 = v79;
    sub_1BA5193C4(v30, v54 + *(int *)(v61 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v62 = v73;
    *(_OWORD *)v54 = v74;
    *(_OWORD *)(v54 + 16) = v62;
    *(_QWORD *)(v54 + 32) = v58;
    *(_QWORD *)(v54 + 40) = v59;
    *(_OWORD *)(v54 + 48) = v72;
    *(_QWORD *)(v54 + 64) = v60;
    sub_1BA4CDF6C(0, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    v64 = v54 + *(int *)(v63 + 36);
    sub_1BA5193C4(v57, v64, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v71)(v64, 0, 1, v45);
  }
  type metadata accessor for DebugFormatManagerError();
  sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
  swift_allocError();
  *v65 = v40;
  v65[1] = v42;
  v65[2] = 0x745374616D726F46;
  v65[3] = 0xEB00000000656C79;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
LABEL_14:
  sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v67, v53);
}

uint64_t sub_1BB48EF5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;

  v68 = (char *)a1;
  v66 = a2;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v4);
  v67 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DebugFormatCacheFile();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v65 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CED28(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)((char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8((uint64_t)v68, (uint64_t)v18, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3BCE70, (void (*)(uint64_t))type metadata accessor for FormatSnippet, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v21 = (uint64_t)v18 + *(int *)(v20 + 48);
    v22 = *v18;
    sub_1BA709CA4(0);
    sub_1BA5193C4(v21, (uint64_t)&a3[*(int *)(v23 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    *(_QWORD *)a3 = v22;
    sub_1BAC87C74(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(&a3[*(int *)(v24 + 36)], 1, 1, v6);
  }
  v62 = v7;
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v27 = (uint64_t)v18 + *(int *)(v26 + 48);
  v63 = v13;
  v64 = v12;
  (*(void (**)(char *, uint64_t *, uint64_t))(v13 + 32))(v15, v18, v12);
  v68 = v11;
  sub_1BA5193C4(v27, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v28 = v15;
  v29 = sub_1BB86C538();
  v31 = sub_1BA9C0430(1uLL, v29, v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_bridgeObjectRelease();
  v38 = MEMORY[0x1BCCE334C](v31, v33, v35, v37);
  v40 = v39;
  swift_bridgeObjectRelease();
  v41 = v66;
  v42 = v66[2];
  v61 = v38;
  if (!v42)
  {
    v48 = v67;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v67, 1, 1, v6);
    v52 = v63;
    v53 = v64;
LABEL_9:
    sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *v54 = v61;
    v54[1] = v40;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_10:
    sub_1BA4A2E80((uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v28, v53);
  }
  swift_bridgeObjectRetain();
  v43 = sub_1BA6E35A8(v38, v40);
  v44 = v6;
  v45 = v62;
  if ((v46 & 1) != 0)
  {
    v47 = v41[7] + *(_QWORD *)(v62 + 72) * v43;
    v48 = v67;
    sub_1BA4C2DD8(v47, v67, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v49 = *(_QWORD **)(v45 + 56);
    v50 = v48;
    v51 = 0;
  }
  else
  {
    v49 = *(_QWORD **)(v62 + 56);
    v48 = v67;
    v50 = v67;
    v51 = 1;
  }
  v66 = v49;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v49)(v50, v51, 1, v6);
  v52 = v63;
  v53 = v64;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v48, 1, v44) == 1)
    goto LABEL_9;
  sub_1BA5193C4(v48, v65, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BB369DC4();
  type metadata accessor for FormatSnippet();
  if (!swift_dynamicCast() || !v69)
  {
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *(_QWORD *)v59 = v61;
    *(_QWORD *)(v59 + 8) = v40;
    strcpy((char *)(v59 + 16), "FormatSnippet");
    *(_WORD *)(v59 + 30) = -4864;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1BA4A2E80(v65, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v53);
  v55 = v69;
  sub_1BA709CA4(0);
  sub_1BA5193C4((uint64_t)v68, (uint64_t)&a3[*(int *)(v56 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *(_QWORD *)a3 = v55;
  sub_1BAC87C74(0);
  v58 = (uint64_t)&a3[*(int *)(v57 + 36)];
  sub_1BA5193C4(v65, v58, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v66)(v58, 0, 1, v44);
}

uint64_t sub_1BB48F4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t (**v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD *v52;
  int v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t (**v70)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  _BYTE v72[128];
  _OWORD v73[6];
  _OWORD v74[2];
  _BYTE v75[128];
  _BYTE v76[128];
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  _OWORD v83[3];
  uint64_t v84;

  v69 = a1;
  v67 = a2;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v4);
  v68 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DebugFormatCacheFile();
  v70 = *(uint64_t (***)(char *, uint64_t, uint64_t, uint64_t))(v6 - 8);
  v71 = v6;
  MEMORY[0x1E0C80A78](v6);
  v65 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v8);
  v66 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v13);
  v15 = (__int128 *)((char *)&v63 - v14);
  sub_1BA8CAF1C(v69, (uint64_t)&v63 - v14, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA8CF138(0, &qword_1ED3B3108);
    v17 = (uint64_t)v15 + *(int *)(v16 + 48);
    v18 = v15[5];
    v81 = v15[4];
    v82 = v18;
    v83[0] = v15[6];
    *(_OWORD *)((char *)v83 + 9) = *(__int128 *)((char *)v15 + 105);
    v19 = v15[1];
    v77 = *v15;
    v78 = v19;
    v20 = v15[3];
    v79 = v15[2];
    v80 = v20;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1BA5193C4(v17, (uint64_t)a3 + *(int *)(v21 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v22 = v82;
    a3[4] = v81;
    a3[5] = v22;
    a3[6] = v83[0];
    *(_OWORD *)((char *)a3 + 105) = *(_OWORD *)((char *)v83 + 9);
    v23 = v78;
    *a3 = v77;
    a3[1] = v23;
    v24 = v80;
    a3[2] = v79;
    a3[3] = v24;
    sub_1BA4CDF6C(0, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    return v70[7]((char *)a3 + *(int *)(v25 + 36), 1, 1, v71);
  }
  v63 = a3;
  v28 = v70;
  v27 = v71;
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v30 = (uint64_t)v15 + *(int *)(v29 + 48);
  v69 = v10;
  (*(void (**)(char *, __int128 *, uint64_t))(v10 + 32))(v12, v15, v84);
  v31 = v66;
  sub_1BA5193C4(v30, v66, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v64 = v12;
  v32 = sub_1BB86C538();
  v34 = sub_1BA9C0430(1uLL, v32, v33);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  swift_bridgeObjectRelease();
  v41 = MEMORY[0x1BCCE334C](v34, v36, v38, v40);
  v43 = v42;
  swift_bridgeObjectRelease();
  v44 = v67;
  if (!*(_QWORD *)(v67 + 16))
  {
    v45 = v41;
    v50 = (uint64_t)v68;
    v28[7](v68, 1, 1, v27);
LABEL_9:
    sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *v55 = v45;
    v55[1] = v43;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_13:
    sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v64, v84);
  }
  swift_bridgeObjectRetain();
  v45 = v41;
  v46 = sub_1BA6E35A8(v41, v43);
  v47 = v27;
  if ((v48 & 1) != 0)
  {
    v49 = *(_QWORD *)(v44 + 56) + (_QWORD)v28[9] * v46;
    v50 = (uint64_t)v68;
    sub_1BA4C2DD8(v49, (uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v51 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v28[7];
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v51)(v50, 0, 1, v27);
  }
  else
  {
    v51 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v28[7];
    v50 = (uint64_t)v68;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v51)(v68, 1, 1, v27);
  }
  v52 = v63;
  swift_bridgeObjectRelease();
  v53 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v28[6])(v50, 1, v47);
  v54 = v65;
  if (v53 == 1)
    goto LABEL_9;
  sub_1BA5193C4(v50, v65, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BB369DC4();
  if ((swift_dynamicCast() & 1) == 0
    || (v70 = v51,
        nullsub_1(),
        sub_1BA6A09F0((uint64_t)&v77, (uint64_t)v75, &qword_1EF2A9880, (uint64_t)&type metadata for FormatItem),
        sub_1BA6A09F0((uint64_t)v75, (uint64_t)v76, &qword_1EF2A9880, (uint64_t)&type metadata for FormatItem),
        sub_1BA8CF120((uint64_t)v76) == 1))
  {
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *v56 = v45;
    v56[1] = v43;
    v56[2] = 0x744974616D726F46;
    v56[3] = 0xEA00000000006D65;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1BA4A2E80(v54, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v64, v84);
  sub_1BA6A09F0((uint64_t)&v77, (uint64_t)v72, &qword_1EF2A9880, (uint64_t)&type metadata for FormatItem);
  sub_1BA6A09F0((uint64_t)v72, (uint64_t)v73, &qword_1EF2A9880, (uint64_t)&type metadata for FormatItem);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BA5193C4(v31, (uint64_t)v52 + *(int *)(v57 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v58 = v73[5];
  v52[4] = v73[4];
  v52[5] = v58;
  v52[6] = v74[0];
  *(_OWORD *)((char *)v52 + 105) = *(_OWORD *)((char *)v74 + 9);
  v59 = v73[1];
  *v52 = v73[0];
  v52[1] = v59;
  v60 = v73[3];
  v52[2] = v73[2];
  v52[3] = v60;
  sub_1BA4CDF6C(0, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v62 = (uint64_t)v52 + *(int *)(v61 + 36);
  sub_1BA5193C4(v54, v62, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v70)(v62, 0, 1, v47);
}

uint64_t sub_1BB48FC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t (**v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (**v53)(char *, uint64_t, uint64_t, uint64_t);
  char *v54;
  int v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t (**v73)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  _BYTE v75[144];
  _OWORD v76[9];
  _BYTE v77[144];
  _BYTE v78[176];
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;

  v72 = a1;
  v70 = a2;
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v4);
  v71 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DebugFormatCacheFile();
  v73 = *(uint64_t (***)(char *, uint64_t, uint64_t, uint64_t))(v6 - 8);
  v74 = v6;
  MEMORY[0x1E0C80A78](v6);
  v68 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v8);
  v69 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v13);
  v15 = (__int128 *)((char *)&v66 - v14);
  sub_1BA8CAF1C(v72, (uint64_t)&v66 - v14, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA8CF138(0, qword_1ED3B3268);
    v17 = (uint64_t)v15 + *(int *)(v16 + 48);
    v18 = v15[7];
    v85 = v15[6];
    v86 = v18;
    v87 = v15[8];
    v19 = v15[5];
    v83 = v15[4];
    v84 = v19;
    v20 = v15[3];
    v81 = v15[2];
    v82 = v20;
    v21 = v15[1];
    v79 = *v15;
    v80 = v21;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    sub_1BA5193C4(v17, (uint64_t)&a3[*(int *)(v22 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v23 = v86;
    *((_OWORD *)a3 + 6) = v85;
    *((_OWORD *)a3 + 7) = v23;
    *((_OWORD *)a3 + 8) = v87;
    v24 = v82;
    *((_OWORD *)a3 + 2) = v81;
    *((_OWORD *)a3 + 3) = v24;
    v25 = v84;
    *((_OWORD *)a3 + 4) = v83;
    *((_OWORD *)a3 + 5) = v25;
    v26 = v80;
    *(_OWORD *)a3 = v79;
    *((_OWORD *)a3 + 1) = v26;
    sub_1BA4CDF6C(0, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
    return v73[7](&a3[*(int *)(v27 + 36)], 1, 1, v74);
  }
  v66 = a3;
  v30 = v73;
  v29 = v74;
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v32 = (uint64_t)v15 + *(int *)(v31 + 48);
  v72 = v10;
  (*(void (**)(char *, __int128 *, uint64_t))(v10 + 32))(v12, v15, v88);
  v33 = v69;
  sub_1BA5193C4(v32, v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v67 = v12;
  v34 = sub_1BB86C538();
  v36 = sub_1BA9C0430(1uLL, v34, v35);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  swift_bridgeObjectRelease();
  v43 = MEMORY[0x1BCCE334C](v36, v38, v40, v42);
  v45 = v44;
  swift_bridgeObjectRelease();
  v46 = v70;
  if (!*(_QWORD *)(v70 + 16))
  {
    v47 = v43;
    v52 = (uint64_t)v71;
    v30[7](v71, 1, 1, v29);
LABEL_9:
    sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *v57 = v47;
    v57[1] = v45;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_13:
    sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v67, v88);
  }
  swift_bridgeObjectRetain();
  v47 = v43;
  v48 = sub_1BA6E35A8(v43, v45);
  v49 = v29;
  if ((v50 & 1) != 0)
  {
    v51 = *(_QWORD *)(v46 + 56) + (_QWORD)v30[9] * v48;
    v52 = (uint64_t)v71;
    sub_1BA4C2DD8(v51, (uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v53 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v30[7];
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v53)(v52, 0, 1, v29);
  }
  else
  {
    v53 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v30[7];
    v52 = (uint64_t)v71;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v53)(v71, 1, 1, v29);
  }
  v54 = v66;
  swift_bridgeObjectRelease();
  v55 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v30[6])(v52, 1, v49);
  v56 = v68;
  if (v55 == 1)
    goto LABEL_9;
  sub_1BA5193C4(v52, v68, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BB369DC4();
  if ((swift_dynamicCast() & 1) == 0
    || (v73 = v53,
        nullsub_1(),
        sub_1BA6A09F0((uint64_t)&v79, (uint64_t)v77, &qword_1EF2A9890, (uint64_t)&type metadata for FormatGroup),
        sub_1BA6A09F0((uint64_t)v77, (uint64_t)v78, &qword_1EF2A9890, (uint64_t)&type metadata for FormatGroup),
        sub_1BA8CF120((uint64_t)v78) == 1))
  {
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *v58 = v47;
    v58[1] = v45;
    v58[2] = 0x724774616D726F46;
    v58[3] = 0xEB0000000070756FLL;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v67, v88);
  sub_1BA6A09F0((uint64_t)&v79, (uint64_t)v75, &qword_1EF2A9890, (uint64_t)&type metadata for FormatGroup);
  sub_1BA6A09F0((uint64_t)v75, (uint64_t)v76, &qword_1EF2A9890, (uint64_t)&type metadata for FormatGroup);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BA5193C4(v33, (uint64_t)&v54[*(int *)(v59 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v60 = v76[7];
  *((_OWORD *)v54 + 6) = v76[6];
  *((_OWORD *)v54 + 7) = v60;
  *((_OWORD *)v54 + 8) = v76[8];
  v61 = v76[3];
  *((_OWORD *)v54 + 2) = v76[2];
  *((_OWORD *)v54 + 3) = v61;
  v62 = v76[5];
  *((_OWORD *)v54 + 4) = v76[4];
  *((_OWORD *)v54 + 5) = v62;
  v63 = v76[1];
  *(_OWORD *)v54 = v76[0];
  *((_OWORD *)v54 + 1) = v63;
  sub_1BA4CDF6C(0, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v65 = (uint64_t)&v54[*(int *)(v64 + 36)];
  sub_1BA5193C4(v56, v65, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v73)(v65, 0, 1, v49);
}

uint64_t sub_1BB490340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;

  v78 = a2;
  v80 = (char *)a1;
  sub_1BA8CF770(0);
  MEMORY[0x1E0C80A78](v4);
  v75 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for FormatPackage();
  v74 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v73 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAA197E8();
  MEMORY[0x1E0C80A78](v7);
  v79 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DebugFormatCacheFile();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v77 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BB86C67C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8((uint64_t)v80, (uint64_t)v21, v22);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v24 = (uint64_t)&v21[*(int *)(v23 + 48)];
    sub_1BA5193C4((uint64_t)v21, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    sub_1BA8CC824(0);
    sub_1BA5193C4(v24, a3 + *(int *)(v25 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BB4941C0(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3 + *(int *)(v26 + 36), 1, 1, v9);
  }
  v69 = v10;
  v71 = v9;
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v29 = (uint64_t)&v21[*(int *)(v28 + 48)];
  v70 = v16;
  v30 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v72 = v15;
  v30(v18, v21, v15);
  v80 = v14;
  sub_1BA5193C4(v29, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v31 = sub_1BB86C538();
  v33 = sub_1BA9C0430(1uLL, v31, v32);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  swift_bridgeObjectRelease();
  v40 = MEMORY[0x1BCCE334C](v33, v35, v37, v39);
  v42 = v41;
  swift_bridgeObjectRelease();
  v43 = v78;
  v44 = *(_QWORD *)(v78 + 16);
  v68 = v18;
  if (!v44)
  {
    v45 = v40;
    v51 = v79;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v79, 1, 1, v71);
LABEL_9:
    sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))sub_1BAA197E8);
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *v55 = v45;
    v55[1] = v42;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_10:
    v56 = v72;
    v57 = v70;
    sub_1BA4A2E80((uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v68, v56);
  }
  swift_bridgeObjectRetain();
  v45 = v40;
  v46 = sub_1BA6E35A8(v40, v42);
  v47 = v71;
  if ((v48 & 1) != 0)
  {
    v49 = *(_QWORD *)(v43 + 56);
    v50 = v69;
    v51 = v79;
    sub_1BA4C2DD8(v49 + *(_QWORD *)(v69 + 72) * v46, v79, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56);
    v52(v51, 0, 1, v47);
  }
  else
  {
    v50 = v69;
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56);
    v51 = v79;
    v52(v79, 1, 1, v71);
  }
  v53 = v76;
  v54 = (uint64_t)v77;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v51, 1, v47) == 1)
    goto LABEL_9;
  sub_1BA5193C4(v51, v54, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  sub_1BB369DC4();
  v58 = (uint64_t)v75;
  v59 = swift_dynamicCast();
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56);
  if (!v59)
  {
    v60(v58, 1, 1, v53);
    sub_1BA4A2E80(v58, (uint64_t (*)(_QWORD))sub_1BA8CF770);
    type metadata accessor for DebugFormatManagerError();
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    swift_allocError();
    *(_QWORD *)v66 = v45;
    *(_QWORD *)(v66 + 8) = v42;
    strcpy((char *)(v66 + 16), "FormatPackage");
    *(_WORD *)(v66 + 30) = -4864;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1BA4A2E80(v54, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    goto LABEL_10;
  }
  v60(v58, 0, 1, v53);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v72);
  v61 = v58;
  v62 = v73;
  sub_1BA5193C4(v61, v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BA5193C4(v62, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BA8CC824(0);
  sub_1BA5193C4((uint64_t)v80, a3 + *(int *)(v63 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BB4941C0(0);
  v65 = a3 + *(int *)(v64 + 36);
  sub_1BA5193C4(v54, v65, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v52)(v65, 0, 1, v47);
}

void sub_1BB4909C8(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD v14[14];
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v14[2] = a3;
  v5 = sub_1BB872610();
  v20 = *(_QWORD *)(v5 - 8);
  v21 = v5;
  MEMORY[0x1E0C80A78](v5);
  v19 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB872664();
  v17 = *(_QWORD *)(v7 - 8);
  v18 = v7;
  MEMORY[0x1E0C80A78](v7);
  v16 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BB86C8B0();
  v15 = *(_QWORD *)(v23 - 8);
  v9 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v23);
  v14[13] = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v22 = (char *)v14 - v11;
  v12 = *a1;
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_1BB873CB4();
  sub_1BB872AFC("fonts from inventory, role=");
  v14[1] = v12;
  v26 = *(_QWORD *)(v12 + 16);
  sub_1BB87420C();
  sub_1BB872AFC(v13);
  swift_bridgeObjectRelease();
  sub_1BB872AFC("Prefetching inventory, id=");
  __asm { BR              X9 }
}

uint64_t sub_1BB490BB0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;

  sub_1BB872AFC(a1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  v9 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  *(_QWORD *)(v6 - 272) = v9;
  sub_1BB872AFC((_QWORD *)(v6 - 16));
  *(_QWORD *)(v6 - 280) = v8;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v6 - 144);
  v10 = *(_QWORD *)(v6 - 136);
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4((void *)2, 0, 0, v11, v10);
  swift_bridgeObjectRelease();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BB873F30();
    if (v12)
    {
LABEL_5:
      if (v12 >= 1)
      {
        *(_QWORD *)(v6 - 304) = v2 & 0xC000000000000001;
        *(_QWORD *)(v6 - 312) = v5 + 7;
        *(_QWORD *)(v6 - 320) = v3 + 13;
        *(_QWORD *)(v6 - 328) = 0x80000001BB98E700;
        *(_QWORD *)(v6 - 336) = v4;
        *(_QWORD *)(v6 - 288) = v2;
        *(_QWORD *)(v6 - 296) = v12;
        if (*(_QWORD *)(v6 - 304))
          MEMORY[0x1BCCE4630](0, v2);
        else
          v13 = *(id *)(v2 + 32);
        *(_QWORD *)(v6 - 144) = 0;
        *(_QWORD *)(v6 - 136) = 0xE000000000000000;
        sub_1BB873CB4();
        v14 = *(_QWORD *)(v6 - 136);
        *(_QWORD *)(v6 - 144) = *(_QWORD *)(v6 - 144);
        *(_QWORD *)(v6 - 136) = v14;
        sub_1BB872AFC((_QWORD *)(v6 - 72));
        *(_QWORD *)(v6 - 168) = 1;
        __asm { BR              X8 }
      }
      __break(1u);
      JUMPOUT(0x1BB4911CCLL);
    }
  }
  else
  {
    v12 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v15 = *(_QWORD **)(v6 - 352);
  *v15 = *(_QWORD *)(v6 - 360);
  v15[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1BB491204(uint64_t a1, uint64_t a2)
{
  sub_1BB873CB4();
  sub_1BB872AFC("from inventory, role=");
  __asm { BR              X10 }
}

uint64_t sub_1BB491294@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  sub_1BB872AFC(a1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4((void *)2, 0, 0, v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB491420()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_1BB491474()
{
  sub_1BB491420();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatManager()
{
  return objc_opt_self();
}

uint64_t sub_1BB4914B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = a3 < 1;
  v14 = a3 - 1;
  if (v13 || (v15 = sub_1BB578DB8(), (v15 & 1) == 0))
  {
    swift_willThrow();
    v21 = a1;
  }
  else
  {
    MEMORY[0x1E0C80A78](v15);
    *(&v23 - 4) = a2;
    *(&v23 - 3) = a4;
    v24 = a4;
    *(&v23 - 2) = a5;
    sub_1BB86EC14();
    v25 = v14;
    v16 = swift_allocObject();
    v26 = a2;
    *(_QWORD *)(v16 + 16) = a5;
    swift_bridgeObjectRetain();
    v17 = (void *)sub_1BB86E854();
    sub_1BAF5B510(0);
    sub_1BB86E974();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v10);
    v18 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    *(_QWORD *)(v19 + ((v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = a5;
    swift_bridgeObjectRetain();
    v20 = (void *)sub_1BB86E854();
    type metadata accessor for DebugFormatService();
    a2 = sub_1BB86EA28();
    swift_release();
    swift_release();

  }
  return a2;
}

uint64_t sub_1BB4916E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = a3 < 1;
  v14 = a3 - 1;
  if (v13 || (v15 = sub_1BB578DB8(), (v15 & 1) == 0))
  {
    swift_willThrow();
    v21 = a1;
  }
  else
  {
    MEMORY[0x1E0C80A78](v15);
    *(&v23 - 4) = a2;
    *(&v23 - 3) = a4;
    v24 = a4;
    *(&v23 - 2) = a5;
    sub_1BB86EC14();
    v25 = v14;
    v16 = swift_allocObject();
    v26 = a2;
    *(_QWORD *)(v16 + 16) = a5;
    swift_bridgeObjectRetain();
    v17 = (void *)sub_1BB86E854();
    sub_1BB494FA0(0);
    sub_1BB86E974();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v10);
    v18 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    *(_QWORD *)(v19 + ((v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = a5;
    swift_bridgeObjectRetain();
    v20 = (void *)sub_1BB86E854();
    type metadata accessor for DebugFormatService();
    a2 = sub_1BB86EA28();
    swift_release();
    swift_release();

  }
  return a2;
}

uint64_t sub_1BB49190C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = a3 < 1;
  v14 = a3 - 1;
  if (v13 || (v15 = sub_1BB578DB8(), (v15 & 1) == 0))
  {
    swift_willThrow();
    v21 = a1;
  }
  else
  {
    MEMORY[0x1E0C80A78](v15);
    *(&v23 - 4) = a2;
    *(&v23 - 3) = a4;
    v24 = a4;
    *(&v23 - 2) = a5;
    sub_1BB86EC14();
    v25 = v14;
    v16 = swift_allocObject();
    v26 = a2;
    *(_QWORD *)(v16 + 16) = a5;
    swift_bridgeObjectRetain();
    v17 = (void *)sub_1BB86E854();
    sub_1BB0F5160(0);
    sub_1BB86E974();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v10);
    v18 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    *(_QWORD *)(v19 + ((v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = a5;
    swift_bridgeObjectRetain();
    v20 = (void *)sub_1BB86E854();
    type metadata accessor for DebugFormatService();
    a2 = sub_1BB86EA28();
    swift_release();
    swift_release();

  }
  return a2;
}

uint64_t sub_1BB491B38()
{
  uint64_t v0;

  return sub_1BB483160(*(_QWORD *)(v0 + 16), *(__int128 **)(v0 + 24));
}

uint64_t sub_1BB491B50()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64))
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB491BC8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BB483208(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_1BB491BE4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(_QWORD)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;

  v23 = a6;
  v24 = a7;
  v12 = a3(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - v13;
  v15 = *a1;
  v16 = a1[1];
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  v17 = swift_bridgeObjectRetain();
  sub_1BACC8234(v17);
  sub_1BA50AD30(a4, 255, a3, a5);
  v18 = v25;
  sub_1BB86DC78();
  result = swift_release();
  if (!v18)
  {
    v20 = v24;
    sub_1BA5193C4((uint64_t)v14, v24, a3);
    v21 = v23(0);
    v22 = (uint64_t *)(v20 + *(int *)(v21 + 44));
    *v22 = v15;
    v22[1] = v16;
    *(_QWORD *)(v20 + *(int *)(v21 + 48)) = a2;
    swift_bridgeObjectRetain();
    return sub_1BA69D44C(v15, v16);
  }
  return result;
}

uint64_t sub_1BB491D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B6A4(0, v9, 0);
    v10 = v21;
    sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_1BB48CA88(v13, v20, (uint64_t)v8);
      if (v3)
        break;
      v21 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC7B6A4(v14 > 1, v15 + 1, 1);
        v10 = v21;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      sub_1BB494164((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, &qword_1EF2B1638, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
      v13 += v18;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1BB491EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B6C0(0, v9, 0);
    v10 = v21;
    sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_1BB48D160(v13, v20, (uint64_t)v8);
      if (v3)
        break;
      v21 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC7B6C0(v14 > 1, v15 + 1, 1);
        v10 = v21;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      sub_1BB494164((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, &qword_1EF2B1648, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
      v13 += v18;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1BB4920A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B6DC(0, v9, 0);
    v10 = v21;
    sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_1BB48D940(v13, v20, (uint64_t)v8);
      if (v3)
        break;
      v21 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC7B6DC(v14 > 1, v15 + 1, 1);
        v10 = v21;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      sub_1BB494164((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, &qword_1EF2B1658, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
      v13 += v18;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1BB492264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B6F8(0, v9, 0);
    v10 = v21;
    sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_1BB48E070(v13, v20, (uint64_t)v8);
      if (v3)
        break;
      v21 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC7B6F8(v14 > 1, v15 + 1, 1);
        v10 = v21;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      sub_1BB494164((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, &qword_1EF2B1668, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
      v13 += v18;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1BB492420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B714(0, v9, 0);
    v10 = v21;
    sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_1BB48E848(v13, v20, (uint64_t)v8);
      if (v3)
        break;
      v21 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC7B714(v14 > 1, v15 + 1, 1);
        v10 = v21;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      sub_1BB494164((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, &qword_1EF2B1678, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
      v13 += v18;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1BB4925DC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  sub_1BAC87C74(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B730(0, v9, 0);
    v10 = v21;
    sub_1BA8CED28(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_1BB48EF5C(v13, v20, v8);
      if (v3)
        break;
      v21 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC7B730(v14 > 1, v15 + 1, 1);
        v10 = v21;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      sub_1BA5193C4((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, (uint64_t (*)(_QWORD))sub_1BAC87C74);
      v13 += v18;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1BB49274C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (_OWORD *)((char *)&v17 - v7);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B75C(0, v9, 0);
    v10 = v21;
    sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_1BB48F4FC(v13, v20, v8);
      if (v3)
        break;
      v21 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC7B75C(v14 > 1, v15 + 1, 1);
        v10 = v21;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      sub_1BB494164((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, &qword_1EF2B1698, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
      v13 += v18;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1BB492908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B778(0, v9, 0);
    v10 = v21;
    sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_1BB48FC20(v13, v20, v8);
      if (v3)
        break;
      v21 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC7B778(v14 > 1, v15 + 1, 1);
        v10 = v21;
      }
      *(_QWORD *)(v10 + 16) = v15 + 1;
      sub_1BB494164((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, &qword_1EF2B16A8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
      v13 += v18;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1BB492AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;

  v54 = a2;
  v55 = a3;
  v4 = type metadata accessor for FormatPackage();
  v53 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v53 + 64);
  MEMORY[0x1E0C80A78](v4);
  v52 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v51 = (uint64_t)&v42 - v7;
  v8 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DebugFormatCacheFile();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v45 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v42 - v15;
  v46 = v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v42 - v19;
  v21 = *(_QWORD *)(a1 + 64);
  v57 = a1 + 64;
  v63 = MEMORY[0x1E0DEE9D8];
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v58 = (unint64_t)(v22 + 63) >> 6;
  v43 = v5 + 7;
  result = swift_bridgeObjectRetain();
  v26 = 0;
  v56 = a1;
  v49 = v10;
  v50 = v8;
  v47 = v12;
  v48 = v11;
  v60 = v16;
  v44 = v20;
  while (1)
  {
    if (v24)
    {
      v61 = (v24 - 1) & v24;
      v62 = v26;
      v27 = __clz(__rbit64(v24)) | (v26 << 6);
      goto LABEL_24;
    }
    v28 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v58)
      goto LABEL_28;
    v29 = *(_QWORD *)(v57 + 8 * v28);
    v30 = v26 + 1;
    if (!v29)
    {
      v30 = v26 + 2;
      if (v26 + 2 >= v58)
        goto LABEL_28;
      v29 = *(_QWORD *)(v57 + 8 * v30);
      if (!v29)
      {
        v30 = v26 + 3;
        if (v26 + 3 >= v58)
          goto LABEL_28;
        v29 = *(_QWORD *)(v57 + 8 * v30);
        if (!v29)
        {
          v30 = v26 + 4;
          if (v26 + 4 >= v58)
            goto LABEL_28;
          v29 = *(_QWORD *)(v57 + 8 * v30);
          if (!v29)
            break;
        }
      }
    }
LABEL_23:
    v61 = (v29 - 1) & v29;
    v62 = v30;
    v27 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_24:
    sub_1BA4C2DD8(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v12 + 72) * v27, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    sub_1BA5193C4((uint64_t)v20, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    sub_1BA4C2DD8((uint64_t)&v16[*(int *)(v11 + 32)], (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      v32 = v51;
      sub_1BA5193C4((uint64_t)v10, v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      v59 = *(_QWORD *)(v54 + 80);
      v33 = v52;
      sub_1BA4C2DD8(v32, v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      v34 = v45;
      sub_1BA4C2DD8((uint64_t)v60, v45, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      v35 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      v36 = v12;
      v37 = (v43 + v35) & 0xFFFFFFFFFFFFFFF8;
      v38 = (*(unsigned __int8 *)(v36 + 80) + v37 + 8) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      v39 = swift_allocObject();
      sub_1BA5193C4(v33, v39 + v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      *(_QWORD *)(v39 + v37) = v55;
      sub_1BA5193C4(v34, v39 + v38, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      type metadata accessor for DebugFormatPackageInventory();
      type metadata accessor for DebugFormatManager();
      swift_bridgeObjectRetain();
      sub_1BB86EC08();
      swift_release();
      v40 = v32;
      v16 = v60;
      sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      v41 = sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
      MEMORY[0x1BCCE36AC](v41);
      if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      result = sub_1BB872DCC();
      a1 = v56;
      v10 = v49;
      v12 = v47;
      v11 = v48;
      v20 = v44;
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
      result = sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    }
    v24 = v61;
    v26 = v62;
  }
  v31 = v26 + 5;
  if (v26 + 5 >= v58)
  {
LABEL_28:
    swift_release();
    return v63;
  }
  v29 = *(_QWORD *)(v57 + 8 * v31);
  if (v29)
  {
    v30 = v26 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v58)
      goto LABEL_28;
    v29 = *(_QWORD *)(v57 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BB492FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a2;
  v33 = a3;
  sub_1BB4941C0(0);
  v28 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0DEE9D8];
  v35 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v31 = a5;
    sub_1BA6BCBF8(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v29 = *(_QWORD *)(v15 + 72);
    v27[1] = a1;
    swift_bridgeObjectRetain();
    v30 = a4;
    do
    {
      sub_1BB490340(v16, v33, (uint64_t)v11);
      if (v5)
        goto LABEL_12;
      v17 = *a4;
      v19 = *v11;
      v18 = v11[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_1BA761FE4(v19, v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
      {
        type metadata accessor for DebugFormatManagerError();
        sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
        swift_allocError();
        v25 = v11[1];
        *v26 = *v11;
        v26[1] = v25;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_willThrow();
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB4941C0);
LABEL_12:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(&v34, v19, v18);
      swift_bridgeObjectRelease();
      v21 = v31;
      v22 = *v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_1BA761FE4(v19, v18, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
      {
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB4941C0);
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC(&v34, v19, v18);
        swift_bridgeObjectRelease();
        sub_1BB488844(v11, v33, (char *)v11 + *(int *)(v28 + 36), v21);
        v24 = sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB4941C0);
        MEMORY[0x1BCCE36AC](v24);
        if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      a4 = v30;
      v16 += v29;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    return v35;
  }
  return result;
}

void sub_1BB4932B8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BB4909C8(a1, v2, a2);
}

void sub_1BB4932D0(uint64_t a1)
{
  uint64_t v1;

  sub_1BB491204(a1, v1);
}

uint64_t sub_1BB4932E4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16) == 0;
  return result;
}

uint64_t sub_1BB493330()
{
  return sub_1BB4950D4(0);
}

void sub_1BB493348()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF2C4D98)
  {
    type metadata accessor for DebugFormatManagerIndex();
    sub_1BB4933E4();
    sub_1BA4B07F0(255, qword_1EF2BB2C8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF2C4D98);
  }
}

void sub_1BB4933E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4DA0)
  {
    type metadata accessor for DebugFormatCacheFile();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4DA0);
  }
}

uint64_t sub_1BB493448()
{
  return swift_deallocObject();
}

uint64_t sub_1BB493458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB4827A0(a1, a2, *(unsigned __int8 *)(v2 + 16), *(unsigned __int8 *)(v2 + 17));
}

void sub_1BB493474(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C4DA8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB493490(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C4DB0, (uint64_t (*)(uint64_t))sub_1BB219F68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
}

uint64_t sub_1BB4934AC()
{
  uint64_t v0;

  return sub_1BB4884E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BB4934C4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C4DB8)
  {
    sub_1BA86535C(255);
    sub_1BB493534();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C4DB8);
  }
}

void sub_1BB493534()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9670)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3BA030);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9670);
  }
}

uint64_t sub_1BB493598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatManagerIndex() - 8) + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = v0 + ((v1 + 32) & ~v1) + *(int *)(type metadata accessor for DebugFormatFileDirectory(0) + 20);
  v3 = sub_1BB86EB84();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v2, v3);
  v5 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v4(v2 + *(int *)(v5 + 20), v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB493660@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatManagerIndex() - 8) + 80);
  return sub_1BB4829EC(a1, *(_BYTE *)(v2 + 16), *(unsigned __int8 *)(v2 + 17), *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5), a2);
}

uint64_t sub_1BB4936C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = type metadata accessor for FormatPackage();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64) + v3 + 7;
  v5 = type metadata accessor for DebugFormatCacheFile();
  v52 = v0;
  v53 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v3 + 168) >= 3uLL)
    swift_bridgeObjectRelease();
  v50 = (int *)v5;
  v7 = v4 & 0xFFFFFFFFFFFFFFF8;
  v8 = v6 + *(int *)(v1 + 92);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v51 = type metadata accessor for FormatCompilerOptions(0);
  v9 = v8 + *(int *)(v51 + 24);
  v10 = (int *)v1;
  if (*(_QWORD *)(v9 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v48 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  v11 = v9 + *(int *)(v48 + 20);
  v12 = sub_1BB86E710();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  v15 = v8 + *(int *)(v51 + 28);
  if (!v14(v15, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
  v49 = v13;
  v16 = (v7 + v53 + 8) & ~v53;
  swift_bridgeObjectRelease();
  v17 = v6 + v10[24];
  v18 = sub_1BB86EB84();
  v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
  v19(v17, v18);
  v20 = v6 + v10[25];
  v21 = v14;
  if (!v14(v20, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v20, v12);
  swift_bridgeObjectRelease();
  v22 = v52 + v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = v52 + v16 + v50[6];
  v24 = type metadata accessor for FormatDerivedDataFile();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24))
  {
    sub_1BA986FA0(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_BYTE *)(v23 + 16));
    v25 = *(unsigned __int8 *)(v23 + 40);
    if (v25 <= 0xFD)
      sub_1BA895B84(*(_QWORD *)(v23 + 24), *(_QWORD *)(v23 + 32), v25);
    swift_bridgeObjectRelease();
    if (*(unsigned __int16 *)(v23 + 108) >> 9 <= 0x7EuLL)
      sub_1BA8EBC78(*(_QWORD *)(v23 + 64), *(_QWORD *)(v23 + 72), *(_QWORD *)(v23 + 80), *(_QWORD *)(v23 + 88), *(_QWORD *)(v23 + 96), *(unsigned int *)(v23 + 104) | ((unint64_t)*(unsigned __int16 *)(v23 + 108) << 32));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19(v23 + *(int *)(v24 + 32), v18);
  }
  v19(v22 + v50[7], v18);
  type metadata accessor for DebugFormatCacheFileMetadata();
  swift_bridgeObjectRelease();
  v26 = v22 + v50[8];
  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v27 = type metadata accessor for FormatContent(0);
      v28 = v26 + *(int *)(v27 + 20);
      v29 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = v26 + *(int *)(v27 + 40);
      v31 = sub_1BB871E24();
      v32 = *(_QWORD *)(v31 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      goto LABEL_47;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(v26 + 106) != 255)
      {
        v33 = *(unsigned __int16 *)(v26 + 104) | (*(unsigned __int8 *)(v26 + 106) << 16);
        sub_1BB2AECE8(*(_QWORD *)(v26 + 96), v33, SBYTE2(v33));
      }
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v26 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      goto LABEL_47;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v26 + 56) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v26 + 168) >= 3uLL)
        swift_bridgeObjectRelease();
      v34 = v26 + v10[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 = v34 + *(int *)(v51 + 24);
      if (*(_QWORD *)(v35 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v36 = v35 + *(int *)(v48 + 20);
      if (!v21(v36, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v36, v12);
      v37 = v34 + *(int *)(v51 + 28);
      if (!v21(v37, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v37, v12);
      swift_bridgeObjectRelease();
      v19(v26 + v10[24], v18);
      v38 = v26 + v10[25];
      if (!v21(v38, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v38, v12);
      break;
    case 6u:
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 7u:
      swift_release();
      break;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(v26 + 32), *(_QWORD *)(v26 + 40), *(_QWORD *)(v26 + 48), *(_QWORD *)(v26 + 56), *(_QWORD *)(v26 + 64), *(_QWORD *)(v26 + 72), *(_BYTE *)(v26 + 80));
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = v26 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      v40 = type metadata accessor for FormatContent(0);
      v41 = v39 + *(int *)(v40 + 20);
      v42 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = v39 + *(int *)(v40 + 40);
      v44 = sub_1BB871E24();
      v45 = *(_QWORD *)(v44 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
LABEL_47:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_48:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  sub_1BB0F5160(0);
  sub_1BA69D314(*(_QWORD *)(v26 + *(int *)(v46 + 44)), *(_QWORD *)(v26 + *(int *)(v46 + 44) + 8));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB494090()
{
  type metadata accessor for FormatPackage();
  type metadata accessor for DebugFormatCacheFile();
  return sub_1BB488574();
}

uint64_t sub_1BB494114(void (*a1)(char **), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1BB4885E4(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5]);
}

uint64_t sub_1BB494120(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v5;

  sub_1BA4CDF6C(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BB494164(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v7;

  sub_1BA4CDF6C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DebugFormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1BB4941C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF2C4DC8)
  {
    v2 = type metadata accessor for FormatPackage();
    v3 = sub_1BA50AD30((unint64_t *)&unk_1ED3C69B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
    v5 = type metadata accessor for DebugFormatObject(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF2C4DC8);
  }
}

uint64_t sub_1BB49423C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BB86C67C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 18) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BB49429C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 80);
  return sub_1BB484080(a1, *(_BYTE *)(v1 + 16), *(_BYTE *)(v1 + 17), v1 + ((v3 + 18) & ~v3));
}

uint64_t sub_1BB4942EC()
{
  return swift_deallocObject();
}

uint64_t sub_1BB4942FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB484504(a1, a2, *(_BYTE *)(v2 + 16), *(_BYTE *)(v2 + 17));
}

uint64_t sub_1BB494318()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BB86C67C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BB49437C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1BB4849DC(a1, a2, v2 + v6, *(_BYTE *)(v2 + v6 + *(_QWORD *)(v5 + 64)));
}

void sub_1BB4943E0()
{
  uint64_t (*v0)(void);
  unint64_t TupleTypeMetadata3;
  uint64_t v2;

  if (!qword_1EF2C4DD8)
  {
    v0 = MEMORY[0x1E0DEAEC8];
    sub_1BA4B07F0(255, qword_1EF2BB2C8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))v0);
    sub_1BB493534();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v2)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF2C4DD8);
  }
}

uint64_t sub_1BB494494()
{
  return swift_deallocObject();
}

uint64_t sub_1BB4944A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 *v3;

  return sub_1BB484ED8(a1, a2, v3[16], v3[17], v3[18], a3);
}

uint64_t sub_1BB4944C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatCacheFile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB49450C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatManagerIndex() - 8) + 80);
  return sub_1BB484E34(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1BB494564()
{
  return sub_1BB494684((uint64_t)sub_1BAA97DF4, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB494938);
}

void sub_1BB494598()
{
  uint64_t (*v0)(void);
  unint64_t TupleTypeMetadata3;
  uint64_t v2;

  if (!qword_1EF2C4DE0)
  {
    v0 = MEMORY[0x1E0DEAEC8];
    sub_1BA4B07F0(255, qword_1EF2BB2C8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))v0);
    sub_1BB493534();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v2)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF2C4DE0);
  }
}

uint64_t sub_1BB494650()
{
  return sub_1BB494684((uint64_t)sub_1BAA9CE84, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB4946C4);
}

uint64_t sub_1BB494684(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t v2;

  return sub_1BB486E2C(*(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), a1, a2);
}

uint64_t sub_1BB4946C4(uint64_t a1, uint64_t a2)
{
  return sub_1BB494954(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BB486444);
}

uint64_t sub_1BB4946E0()
{
  return sub_1BB5781F4();
}

uint64_t sub_1BB4946FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB578270(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1BB494714()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4DF0)
  {
    v0 = type metadata accessor for DebugFormatServiceResult(0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970]);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4DF0);
  }
}

uint64_t sub_1BB49477C(uint64_t a1, uint64_t a2)
{
  return sub_1BB49485C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD))sub_1BB578368);
}

uint64_t sub_1BB49479C(uint64_t a1, uint64_t a2)
{
  return sub_1BB494A88(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, unint64_t, unint64_t, double))sub_1BB486AE4);
}

uint64_t sub_1BB4947BC(uint64_t a1, uint64_t a2)
{
  return sub_1BB494BCC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, double))sub_1BB486E10);
}

uint64_t sub_1BB4947D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB494804@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB491BE4(a1, *(_QWORD *)(v2 + 16), (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, &qword_1ED3B3030, (uint64_t)&protocol conformance descriptor for FormatFile, (uint64_t (*)(_QWORD))sub_1BB0F5160, a2);
}

uint64_t sub_1BB494840(uint64_t a1, uint64_t a2)
{
  return sub_1BB49485C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD))sub_1BB49190C);
}

uint64_t sub_1BB49485C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return a3(a1, a2, *(_QWORD *)(v3 + 16), v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BB4948D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB494CB4(a1, a2);
}

uint64_t sub_1BB4948E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_1BA69D44C(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB494938(uint64_t a1, uint64_t a2)
{
  return sub_1BB494954(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BB486F8C);
}

uint64_t sub_1BB494954(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v3;

  return a3(a1, *(unsigned __int8 *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), a2);
}

uint64_t sub_1BB49497C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB488140(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t objectdestroy_45Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatCacheFileMetadata() - 8) + 80);
  v6 = (v3 + v4 + v5) & ~v5;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = sub_1BB86EB84();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v6, v7);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB494A6C(uint64_t a1, uint64_t a2)
{
  return sub_1BB494A88(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, unint64_t, unint64_t, double))sub_1BB48762C);
}

uint64_t sub_1BB494A88(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, unint64_t, unint64_t, double))
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatCacheFileMetadata() - 8) + 80);
  return a3(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(unsigned __int8 *)(v3 + 40), v3 + v8, v3 + ((v8 + v9 + v10) & ~v10), *(double *)(v3 + 32));
}

uint64_t objectdestroy_48Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatCacheFileMetadata() - 8) + 80);
  v2 = (v1 + 49) & ~v1;
  swift_bridgeObjectRelease();
  v3 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB494BB0(uint64_t a1, uint64_t a2)
{
  return sub_1BB494BCC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, double))sub_1BB487A3C);
}

uint64_t sub_1BB494BCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, double))
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatCacheFileMetadata() - 8) + 80);
  return a3(a1, a2, *(unsigned __int8 *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(unsigned __int8 *)(v3 + 48), v3 + ((v7 + 49) & ~v7), *(double *)(v3 + 40));
}

uint64_t sub_1BB494C48(void *a1)
{
  return sub_1BB487FA0(a1);
}

uint64_t sub_1BB494C6C()
{
  uint64_t v0;

  return sub_1BB487E74(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1BB494C84()
{
  uint64_t v0;

  return sub_1BB487958(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 48), *(uint64_t **)(v0 + 56), *(double *)(v0 + 40));
}

uint64_t sub_1BB494CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  sub_1BA6BC5C0(0, &qword_1EF2C4DF8, sub_1BB0F5160, (void (*)(uint64_t))sub_1BB494714);
  v6 = a2 + *(int *)(v5 + 48);
  sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))sub_1BB0F5160);
  v7 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(v2 + 48);
  return sub_1BB4948E8(v2 + 16);
}

uint64_t sub_1BB494D44(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB488180(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40)) & 1;
}

uint64_t objectdestroy_33Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatManagerIndex() - 8) + 80);
  swift_bridgeObjectRelease();
  v2 = v0 + ((v1 + 16) & ~v1) + *(int *)(type metadata accessor for DebugFormatFileDirectory(0) + 20);
  v3 = sub_1BB86EB84();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v2, v3);
  v5 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v4(v2 + *(int *)(v5 + 20), v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB494E2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatManagerIndex() - 8) + 80);
  return sub_1BA4C2DD8(v1 + ((v3 + 16) & ~v3), a1, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerIndex);
}

uint64_t sub_1BB494E7C()
{
  return sub_1BB494E90();
}

uint64_t sub_1BB494E90()
{
  uint64_t v0;

  return sub_1BB75B124(*(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

void sub_1BB494EC0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C4E10)
  {
    type metadata accessor for DebugFormatCacheFile();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C4E10);
  }
}

void sub_1BB494F28(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C4E18, type metadata accessor for DebugFormatFileDirectory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB494F44()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB494F68@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB491BE4(a1, *(_QWORD *)(v2 + 16), type metadata accessor for DebugFormatFileDirectory, &qword_1EF2C4E28, (uint64_t)&unk_1BB927168, (uint64_t (*)(_QWORD))sub_1BB494FA0, a2);
}

void sub_1BB494FA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF2C4E20)
  {
    v2 = type metadata accessor for DebugFormatFileDirectory(255);
    v3 = sub_1BA50AD30(&qword_1EF2C4E28, 255, type metadata accessor for DebugFormatFileDirectory, (uint64_t)&unk_1BB927168);
    v4 = sub_1BA50AD30(&qword_1EF2C4E30, 255, type metadata accessor for DebugFormatFileDirectory, (uint64_t)&unk_1BB927140);
    v5 = type metadata accessor for DebugFormatServiceResult(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF2C4E20);
  }
}

uint64_t sub_1BB495050(uint64_t a1, uint64_t a2)
{
  return sub_1BB49485C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD))sub_1BB4916E0);
}

uint64_t sub_1BB495070@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 16) == 0;
  return result;
}

uint64_t sub_1BB4950BC()
{
  return sub_1BB4950D4(1);
}

uint64_t sub_1BB4950D4(char a1)
{
  uint64_t v1;

  return sub_1BB4824B8(*(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1, *(unsigned __int8 *)(v1 + 33));
}

uint64_t sub_1BB49510C()
{
  return swift_deallocObject();
}

uint64_t sub_1BB49511C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB482BB8(a1, *(unsigned __int8 *)(v2 + 16), *(unsigned __int8 *)(v2 + 17), a2);
}

void sub_1BB495138(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C4E38, (uint64_t (*)(uint64_t))sub_1BB219F30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
}

void sub_1BB495154(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2C4E40, (uint64_t (*)(uint64_t))type metadata accessor for FormatBindingContent, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t objectdestroy_42Tm_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BB86C67C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB4951E8(uint64_t a1, uint64_t a2)
{
  return sub_1BB49485C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD))sub_1BB4914B4);
}

uint64_t sub_1BB495204()
{
  return sub_1BAF5B5FC();
}

uint64_t sub_1BB495218()
{
  return sub_1BB4946E0();
}

uint64_t sub_1BB495260@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB494804(a1, a2);
}

uint64_t sub_1BB495274@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB49497C(a1, a2);
}

uint64_t sub_1BB495288@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB4946FC(a1, a2);
}

uint64_t sub_1BB49529C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB494F68(a1, a2);
}

uint64_t sub_1BB4952B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  switch(a4)
  {
    case 0:
      swift_retain();
      goto LABEL_4;
    case 1:
    case 3:
    case 4:
    case 7:
    case 10:
      result = swift_bridgeObjectRetain();
      break;
    case 2:
    case 9:
LABEL_4:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for FormatDOMError(uint64_t a1)
{
  return sub_1BB495334(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_1BB495334(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  switch(a4)
  {
    case 0:
      swift_release();
      goto LABEL_4;
    case 1:
    case 3:
    case 4:
    case 7:
    case 10:
      result = swift_bridgeObjectRelease();
      break;
    case 2:
    case 9:
LABEL_4:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for FormatDOMError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BB4952B0(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatDOMError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BB4952B0(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BB495334(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatDOMError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BB495334(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDOMError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF5 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 245);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 0xB)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatDOMError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 245;
    if (a3 >= 0xF5)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xF5)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BB495548(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 0xAu)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 11);
}

uint64_t sub_1BB495560(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 11;
  if (a2 >= 0xB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 11;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatDOMError()
{
  return &type metadata for FormatDOMError;
}

uint64_t static FormatColumnRowSpan.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  if (*(_QWORD *)a1 == *(_QWORD *)a2)
  {
    v2 = *(_BYTE *)(a2 + 16);
    v3 = *(_QWORD *)(a2 + 8);
    v4 = *(_BYTE *)(a1 + 16);
    v9 = *(_QWORD *)(a1 + 8);
    v10 = v4;
    v7 = v3;
    v8 = v2;
    v5 = _s8NewsFeed11FormatRatioO2eeoiySbAC_ACtFZ_0((uint64_t)&v9, (uint64_t)&v7);
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1BB4955EC(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  if (*(_QWORD *)a1 == *(_QWORD *)a2)
  {
    v2 = *(_BYTE *)(a2 + 16);
    v3 = *(_QWORD *)(a2 + 8);
    v4 = *(_BYTE *)(a1 + 16);
    v9 = *(_QWORD *)(a1 + 8);
    v10 = v4;
    v7 = v3;
    v8 = v2;
    v5 = _s8NewsFeed11FormatRatioO2eeoiySbAC_ACtFZ_0((uint64_t)&v9, (uint64_t)&v7);
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_1BB49564C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB495670();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB495670()
{
  unint64_t result;

  result = qword_1EF2C4E48;
  if (!qword_1EF2C4E48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColumnRowSpan, &type metadata for FormatColumnRowSpan);
    atomic_store(result, (unint64_t *)&qword_1EF2C4E48);
  }
  return result;
}

unint64_t sub_1BB4956B4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6552C4();
  a1[2] = sub_1BA640798();
  result = sub_1BB4956E8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB4956E8()
{
  unint64_t result;

  result = qword_1EF2C4E50;
  if (!qword_1EF2C4E50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColumnRowSpan, &type metadata for FormatColumnRowSpan);
    atomic_store(result, (unint64_t *)&qword_1EF2C4E50);
  }
  return result;
}

uint64_t sub_1BB495730(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatColumnRowSpan(uint64_t a1, uint64_t a2)
{
  char v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatColumnRowSpan(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatColumnRowSpan()
{
  return &type metadata for FormatColumnRowSpan;
}

void FormatSourceItemTipObject.tipSource(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BB6FABC4(a1, a2);
}

uint64_t static FormatSourceItemTipObject.== infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v4;

  v2 = *a1;
  v3 = *a2;
  if (v2 >> 6)
  {
    v4 = v3 & 0xC0;
    if (v2 >> 6 == 1)
    {
      if (v4 == 64)
        return 1;
    }
    else if (v4 == 128)
    {
      return 1;
    }
  }
  else if (v3 <= 0x3F)
  {
    if (*a1)
    {
      if (v2 == 1)
      {
        if (v3 == 1)
          return 1;
      }
      else if (v3 == 2)
      {
        return 1;
      }
    }
    else if (!*a2)
    {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_1BB4958A0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB4958C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB4958C4()
{
  unint64_t result;

  result = qword_1EF2C4E58;
  if (!qword_1EF2C4E58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipObject, &type metadata for FormatSourceItemTipObject);
    atomic_store(result, (unint64_t *)&qword_1EF2C4E58);
  }
  return result;
}

unint64_t sub_1BB495908(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEBB95C();
  a1[2] = sub_1BAEEBCA4();
  result = sub_1BB49593C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB49593C()
{
  unint64_t result;

  result = qword_1EF2C4E60;
  if (!qword_1EF2C4E60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipObject, &type metadata for FormatSourceItemTipObject);
    atomic_store(result, (unint64_t *)&qword_1EF2C4E60);
  }
  return result;
}

uint64_t sub_1BB495980@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatSourceItemTipObject.init(from:)(a1, a2);
}

uint64_t sub_1BB495994(_QWORD *a1)
{
  return FormatSourceItemTipObject.encode(to:)(a1);
}

BOOL sub_1BB4959A8(_BYTE *a1, _BYTE *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v4;

  v2 = *a1;
  v3 = *a2;
  if (v2 >> 6)
  {
    v4 = v3 & 0xC0;
    if (v2 >> 6 == 1)
      return v4 == 64;
    if (v4 == 128)
      return 1;
  }
  else if (v3 <= 0x3F)
  {
    if (*a1)
    {
      if (v2 == 1)
      {
        if (v3 != 1)
          return 0;
      }
      else if (v3 != 2)
      {
        return 0;
      }
      return 1;
    }
    if (!*a2)
      return 1;
  }
  return 0;
}

uint64_t getEnumTagSinglePayload for FormatSourceItemTipBinding(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x3E)
    goto LABEL_17;
  if (a2 + 194 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 194) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 194;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 194;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 194;
  }
LABEL_17:
  v6 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v6 >= 0x3D)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatSourceItemTipObject(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 194 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 194) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3D)
    return ((uint64_t (*)(void))((char *)&loc_1BB495B00 + 4 * byte_1BB91C395[v4]))();
  *a1 = a2 - 62;
  return ((uint64_t (*)(void))((char *)sub_1BB495B34 + 4 * byte_1BB91C390[v4]))();
}

uint64_t sub_1BB495B34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB495B3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB495B44);
  return result;
}

uint64_t sub_1BB495B5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB495B64);
  *(_BYTE *)result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1BB495B68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB495B70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSourceItemTipObject()
{
  return &type metadata for FormatSourceItemTipObject;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding()
{
  return &type metadata for FormatWebEmbedBinding;
}

_QWORD *sub_1BB495B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD, uint64_t, _QWORD *);
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  uint64_t *v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t (*v64)(_QWORD);
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  __int128 v84;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  char *v108;
  uint64_t v109;
  _QWORD *v110;
  char *v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  _QWORD *v117;
  uint64_t v119;
  uint64_t *v120;
  uint64_t *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  unint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD v144[4];
  _QWORD *v145;
  uint64_t v146[29];
  uint64_t v147;
  _OWORD v148[2];
  uint64_t v149;
  _OWORD v150[2];
  uint64_t v151;
  _OWORD v152[2];
  uint64_t v153;
  _OWORD v154[2];
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;

  v132 = a1;
  sub_1BA8C88C8(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v140 = (uint64_t *)((char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v136 = type metadata accessor for WebEmbedDataVisualization();
  v126 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v122 = (uint64_t *)((char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v119 - v9;
  MEMORY[0x1E0C80A78](v11);
  v120 = (uint64_t *)((char *)&v119 - v12);
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v13);
  v130 = (uint64_t)&v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v129 = (uint64_t)&v119 - v16;
  MEMORY[0x1E0C80A78](v17);
  v125 = (uint64_t)&v119 - v18;
  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for FeedHeadline(0);
  v141 = *(_QWORD *)(v22 - 8);
  v142 = v22;
  MEMORY[0x1E0C80A78](v22);
  v134 = (unint64_t)&v119 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB8827B0;
  v144[2] = a2;
  v25 = sub_1BA89F4C0((void (*)(char *))sub_1BB496BA4, (uint64_t)v144, (uint64_t)&unk_1E724F9B8, (uint64_t)&v147);
  sub_1BAF89090(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v25, v148);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v26 = swift_allocObject();
  v137 = (_QWORD *)inited;
  *(_QWORD *)(inited + 32) = v26;
  *(_QWORD *)(v26 + 48) = v149;
  v27 = v148[1];
  *(_OWORD *)(v26 + 16) = v148[0];
  *(_OWORD *)(v26 + 32) = v27;
  v119 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v156 = MEMORY[0x1E0DEE9D8];
  LOBYTE(v152[0]) = 0;
  sub_1BB1F752C((char *)v152, a2, (uint64_t *)v154);
  v121 = (uint64_t *)v10;
  v131 = v4;
  v123 = inited + 32;
  sub_1BB383BA8(*(uint64_t *)&v154[0]);
  LOBYTE(v152[0]) = 1;
  sub_1BB1F752C((char *)v152, a2, (uint64_t *)v154);
  v28 = a2;
  sub_1BB383BA8(*(uint64_t *)&v154[0]);
  v29 = sub_1BA97461C(v156);
  swift_bridgeObjectRelease();
  sub_1BAF89090(1954047316, 0xE400000000000000, 0, 0, v29, v150);
  swift_bridgeObjectRelease();
  v30 = v137;
  v137[12] = &type metadata for FormatInspectionGroup;
  v30[13] = &off_1E72D2F60;
  v31 = swift_allocObject();
  v30[9] = v31;
  *(_QWORD *)(v31 + 48) = v151;
  v32 = v150[1];
  *(_OWORD *)(v31 + 16) = v150[0];
  *(_OWORD *)(v31 + 32) = v32;
  MEMORY[0x1E0C80A78](v31);
  *(&v119 - 2) = a2;
  v33 = sub_1BA89F4EC((void (*)(char *))sub_1BB496BF4, (uint64_t)(&v119 - 4), (uint64_t)&unk_1E724FAB0);
  sub_1BAF89090(5001813, 0xE300000000000000, 0, 0, v33, v152);
  swift_bridgeObjectRelease();
  v30[17] = &type metadata for FormatInspectionGroup;
  v30[18] = &off_1E72D2F60;
  v34 = swift_allocObject();
  v30[14] = v34;
  *(_QWORD *)(v34 + 48) = v153;
  v35 = v152[1];
  *(_OWORD *)(v34 + 16) = v152[0];
  *(_OWORD *)(v34 + 32) = v35;
  v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v37 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v143 = *(_QWORD *)(v5 + 72);
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1BB87FC80;
  v128 = v38;
  v138 = (_QWORD *)(v38 + v37);
  v139 = v37;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v36);
  v40 = v39;
  v41 = swift_initStackObject();
  v133 = xmmword_1BB87CE70;
  *(_OWORD *)(v41 + 16) = xmmword_1BB87CE70;
  v135 = type metadata accessor for FeedWebEmbed();
  sub_1BA4C2DD8(v28 + *(int *)(v135 + 48), (uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48))(v21, 1, v142) == 1)
  {
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
    v42 = (uint64_t)sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v43 = (void (*)(_QWORD *, _QWORD, uint64_t, _QWORD *))v134;
    sub_1BA5193C4((uint64_t)v21, v134, type metadata accessor for FeedHeadline);
    v42 = sub_1BA89DF1C(v132, v43);
    sub_1BA4A2E80((uint64_t)v43, type metadata accessor for FeedHeadline);
  }
  v44 = v136;
  *(_QWORD *)(v41 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v41 + 64) = &off_1E7335C38;
  *(_QWORD *)(v41 + 32) = v42;
  v45 = sub_1BA9747FC(v41);
  swift_setDeallocating();
  v134 = sub_1BA89EA20();
  swift_arrayDestroy();
  v46 = sub_1BB6DF010(v45);
  swift_bridgeObjectRelease();
  v47 = v138;
  sub_1BAAF3C48(0x656E696C64616548, 0xE800000000000000, (uint64_t)v46, 0, 0, v138);
  v48 = type metadata accessor for FormatInspectionItem(0);
  v141 = *(_QWORD *)(*(_QWORD *)(v48 - 8) + 56);
  v142 = v48;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v141)(v47, 0, 1);
  v124 = v40;
  v49 = swift_initStackObject();
  *(_OWORD *)(v49 + 16) = v133;
  v50 = v28 + *(int *)(v135 + 52);
  v51 = (uint64_t (*)(_QWORD))sub_1BA6CAB4C;
  v52 = v125;
  sub_1BA4C2DD8(v50, v125, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 48);
  v54 = v53(v52, 1, v44);
  v127 = v28;
  if (v54 == 1)
    goto LABEL_7;
  v55 = v120;
  sub_1BA4C2DD8(v52, (uint64_t)v120, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v51 = (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization;
    sub_1BA4A2E80((uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
LABEL_7:
    sub_1BA4A2E80(v52, v51);
LABEL_8:
    v56 = sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
    goto LABEL_9;
  }
  v69 = *v55;
  sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  *(_QWORD *)&v156 = v69;
  SportsDataVisualization.event.getter();
  v71 = v70;
  swift_release();
  if (!v71)
    goto LABEL_8;
  v72 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  v73 = sub_1BB8729A0();
  v75 = v74;
  swift_unknownObjectRelease();

  *(_QWORD *)&v156 = v73;
  *((_QWORD *)&v156 + 1) = v75;
  v157 = v71;
  LOBYTE(v158) = 0;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v56 = sub_1BB2A54C4(v132, (uint64_t)&v156);
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease_n();
LABEL_9:
  v57 = (_QWORD *)((char *)v138 + v143);
  *(_QWORD *)(v49 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v49 + 64) = &off_1E7335C38;
  *(_QWORD *)(v49 + 32) = v56;
  v58 = sub_1BA9747FC(v49);
  swift_setDeallocating();
  swift_arrayDestroy();
  v59 = sub_1BB6DF010(v58);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x45207374726F7053, 0xEC000000746E6576, (uint64_t)v59, 0, 0, v57);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v141)(v57, 0, 1, v142);
  v60 = v129;
  sub_1BA4C2DD8(v50, v129, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  v61 = v136;
  if (v53(v60, 1, v136) == 1)
  {
    sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  }
  else
  {
    v62 = v121;
    sub_1BA4C2DD8(v60, (uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v76 = *v62;
      sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      __asm { BR              X10 }
    }
    sub_1BA4A2E80((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    sub_1BA4A2E80(v60, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  }
  v63 = swift_initStackObject();
  *(_OWORD *)(v63 + 16) = v133;
  v64 = (uint64_t (*)(_QWORD))sub_1BA6CAB4C;
  v65 = v50;
  v66 = v130;
  sub_1BA4C2DD8(v65, v130, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if (v53(v66, 1, v61) == 1)
    goto LABEL_16;
  v67 = v122;
  sub_1BA4C2DD8(v66, (uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v64 = (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization;
    sub_1BA4A2E80((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
LABEL_16:
    v68 = 0xF000000000000007;
    goto LABEL_21;
  }
  v68 = *v67;
  v64 = (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization;
LABEL_21:
  v77 = v128;
  sub_1BA4A2E80(v66, v64);
  v78 = (_QWORD *)((char *)v138 + 2 * v143);
  *(_QWORD *)&v156 = v68;
  v79 = sub_1BB647700(v132, &v156);
  sub_1BA6E6CD8(v68);
  *(_QWORD *)(v63 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v63 + 64) = &off_1E7335C38;
  *(_QWORD *)(v63 + 32) = v79;
  v80 = sub_1BA9747FC(v63);
  swift_setDeallocating();
  swift_arrayDestroy();
  v81 = sub_1BB6DF010(v80);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0xD000000000000019, 0x80000001BB98E7D0, (uint64_t)v81, 0, 0, v78);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v141)(v78, 0, 1, v142);
  sub_1BAF89090(0x65626D4520626557, 0xE900000000000064, 0, 0, v77, v154);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v82 = v137;
  v137[22] = &type metadata for FormatInspectionGroup;
  v82[23] = &off_1E72D2F60;
  v83 = swift_allocObject();
  v82[19] = v83;
  *(_QWORD *)(v83 + 48) = v155;
  v84 = v154[1];
  *(_OWORD *)(v83 + 16) = v154[0];
  *(_OWORD *)(v83 + 32) = v84;
  *((_QWORD *)&v157 + 1) = v135;
  v158 = sub_1BA4A2870(&qword_1ED39AF58, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v156);
  sub_1BA4C2DD8(v127, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  sub_1BA7592C4(&v156, v146);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
  v86 = v146[0];
  v146[0] = MEMORY[0x1E0DEE9D8];
  sub_1BAC79E1C(0, 0, 0);
  v87 = v146[0];
  if (v86)
  {
    v138 = v140 + 2;
    v88 = v142;
    do
    {
      *(_QWORD *)&v156 = 91;
      *((_QWORD *)&v156 + 1) = 0xE100000000000000;
      v145 = (_QWORD *)(v86 & -v86);
      v145 = sub_1BA78E0E8();
      sub_1BA6D249C();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B95D0, (uint64_t (*)(uint64_t))sub_1BA6D249C, MEMORY[0x1E0DEAF20]);
      sub_1BB872904();
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v89);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v90);
      v91 = sub_1BA9C0430(1uLL, v156, *((unint64_t *)&v156 + 1));
      v93 = v92;
      swift_bridgeObjectRelease();
      if (__OFSUB__(sub_1BB873A44(), 1))
      {
        __break(1u);
LABEL_33:
        __break(1u);
        v119 = v156;
        swift_bridgeObjectRelease();
        __break(1u);
        JUMPOUT(0x1BB496B88);
      }
      v94 = sub_1BB873A38();
      if ((v95 & 1) != 0)
        v96 = v93;
      else
        v96 = v94;
      if (v96 >> 14 < v91 >> 14)
        goto LABEL_33;
      v97 = sub_1BB873A68();
      v99 = v98;
      v101 = v100;
      v103 = v102;
      swift_bridgeObjectRelease();
      v104 = MEMORY[0x1BCCE334C](v97, v99, v101, v103);
      v106 = v105;
      swift_bridgeObjectRelease();
      v107 = v140;
      v108 = (char *)v140 + *(int *)(v88 + 24);
      *(_QWORD *)v108 = 0;
      *((_QWORD *)v108 + 1) = 0xE000000000000000;
      v109 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v108, 0, 1, v109);
      *v107 = v104;
      v107[1] = v106;
      v110 = v138;
      *v138 = 0;
      v110[1] = 0;
      v111 = (char *)v107 + *(int *)(v88 + 28);
      *(_QWORD *)v111 = 0;
      *((_QWORD *)v111 + 1) = 0;
      v111[16] = -1;
      ((void (*)(uint64_t *, _QWORD, uint64_t, uint64_t))v141)(v107, 0, 1, v88);
      v146[0] = v87;
      v113 = *(_QWORD *)(v87 + 16);
      v112 = *(_QWORD *)(v87 + 24);
      if (v113 >= v112 >> 1)
      {
        sub_1BAC79E1C(v112 > 1, v113 + 1, 1);
        v87 = v146[0];
      }
      v86 ^= v86 & -v86;
      *(_QWORD *)(v87 + 16) = v113 + 1;
      sub_1BA5193C4((uint64_t)v107, v87 + v139 + v113 * v143, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
    }
    while (v86);
  }
  sub_1BAF89090(0x737469617254, 0xE600000000000000, 0, 0, v87, &v156);
  swift_release();
  v114 = (uint64_t)v137;
  v137[27] = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v114 + 224) = &off_1E72D2F60;
  v115 = swift_allocObject();
  *(_QWORD *)(v114 + 192) = v115;
  *(_QWORD *)(v115 + 48) = v158;
  v116 = v157;
  *(_OWORD *)(v115 + 16) = v156;
  *(_OWORD *)(v115 + 32) = v116;
  v117 = sub_1BB6DF010(v114);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v117;
}

void sub_1BB496BA4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BB6899EC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB496BC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB496BF4@<X0>(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA904450(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t FormatModelContext.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v4;
  __int128 v5[2];
  uint64_t v6;
  _BYTE v7[32];
  _QWORD v8[4];

  sub_1BA747A10(v1, (uint64_t)v7);
  sub_1BA4D9CE8(0, &qword_1EF2C4E68);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v5, (uint64_t)v8);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1BB8716C8();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    sub_1BA65DB80((uint64_t)v5, &qword_1EF2C4E70, &qword_1EF2C4E68);
    v4 = sub_1BB8714B8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
}

uint64_t FormatModelContext.rankValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3[2];
  uint64_t v4;
  _BYTE v5[32];
  _QWORD v6[4];

  sub_1BA747A10(v0, (uint64_t)v5);
  sub_1BA4D9CE8(0, &qword_1ED3A3E90);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v3, (uint64_t)v6);
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    v1 = sub_1BB8703A8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    v4 = 0;
    memset(v3, 0, sizeof(v3));
    sub_1BA65DB80((uint64_t)v3, &qword_1EF2C4E78, &qword_1ED3A3E90);
    return 0;
  }
  return v1;
}

uint64_t FormatModelContext.isImpressionable.getter()
{
  uint64_t v0;
  char v1;
  __int128 v3[2];
  uint64_t v4;
  _BYTE v5[32];
  _QWORD v6[4];

  sub_1BA747A10(v0, (uint64_t)v5);
  sub_1BA4D9CE8(0, &qword_1ED3A3D80);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v3, (uint64_t)v6);
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    v1 = sub_1BB86F934();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    v4 = 0;
    memset(v3, 0, sizeof(v3));
    sub_1BA65DB80((uint64_t)v3, &qword_1EF2C4E80, &qword_1ED3A3D80);
    v1 = 0;
  }
  return v1 & 1;
}

uint64_t FormatModelContext.selectionStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8[2];
  uint64_t v9;
  _BYTE v10[32];
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  sub_1BA747A10(v1, (uint64_t)v10);
  sub_1BA4D9CE8(0, &qword_1EF2C4E88);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v8, (uint64_t)v11);
    v3 = v12;
    v4 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    MEMORY[0x1BCCDFDAC](v3, v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    v9 = 0;
    memset(v8, 0, sizeof(v8));
    sub_1BA65DB80((uint64_t)v8, &qword_1EF2C4E90, &qword_1EF2C4E88);
    v6 = *MEMORY[0x1E0DB7518];
    v7 = sub_1BB86F9F4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a1, v6, v7);
  }
}

uint64_t FormatModelContext.highlightStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v4;
  uint64_t v5;
  __int128 v6[2];
  uint64_t v7;
  _BYTE v8[32];
  _QWORD v9[4];

  sub_1BA747A10(v1, (uint64_t)v8);
  sub_1BA4D9CE8(0, &qword_1EF2C4E98);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v6, (uint64_t)v9);
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_1BB86F7B4();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1BA65DB80((uint64_t)v6, &qword_1EF2C4EA0, &qword_1EF2C4E98);
    v4 = *MEMORY[0x1E0DB7420];
    v5 = sub_1BB86F8D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
  }
}

uint64_t FormatModelContext.contextMenu.getter()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3[2];
  uint64_t v4;
  _BYTE v5[32];
  _QWORD v6[4];

  sub_1BA747A10(v0, (uint64_t)v5);
  sub_1BA4D9CE8(0, &qword_1EF2C4EA8);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v3, (uint64_t)v6);
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    v1 = sub_1BB870390();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    v4 = 0;
    memset(v3, 0, sizeof(v3));
    sub_1BA65DB80((uint64_t)v3, qword_1EF2C4EB0, &qword_1EF2C4EA8);
    return 0;
  }
  return v1;
}

uint64_t FormatModelContext.contextMenuWithContext<A, B, C, D>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1BB497218(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x1E0DB8CF8]);
}

uint64_t FormatModelContext.debugContextMenuWithContext<A, B, C, D>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1BB497218(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x1E0DB8CE8]);
}

uint64_t sub_1BB497218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23[2];
  uint64_t v24;
  _BYTE v25[32];
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  sub_1BA747A10(v10, (uint64_t)v25);
  sub_1BA4D9CE8(0, &qword_1EF2C4EA8);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(v23, (uint64_t)v26);
    v20 = v27;
    v19 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v21 = a10(a1, a2, a3, a4, a5, a6, a7, a8, a9, v20, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    v24 = 0;
    memset(v23, 0, sizeof(v23));
    sub_1BA65DB80((uint64_t)v23, qword_1EF2C4EB0, &qword_1EF2C4EA8);
    return 0;
  }
  return v21;
}

_OWORD *FormatModelContext.init(model:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1BA76EAE0(a1, a2);
}

uint64_t sub_1BB497384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return FormatModelContext.contextMenuWithContext<A, B, C, D>(_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1BB497390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return FormatModelContext.debugContextMenuWithContext<A, B, C, D>(_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t destroy for FormatModelContext(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

ValueMetadata *type metadata accessor for FormatModelContext()
{
  return &type metadata for FormatModelContext;
}

void sub_1BB4973C0(void *a1, char a2, void **a3, double a4)
{
  _QWORD *v4;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  _QWORD v30[6];

  v8 = *a3;
  v9 = (void *)v4[2];
  v10 = (void *)v4[3];
  v11 = (void *)v4[4];
  v12 = (void *)v4[5];
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v8;
  v13[3] = v9;
  v13[4] = v10;
  v14 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v30[4] = sub_1BB1C1CFC;
  v30[5] = v13;
  v30[0] = MEMORY[0x1E0C809B0];
  v30[1] = 1107296256;
  v30[2] = sub_1BA61387C;
  v30[3] = &block_descriptor_76;
  v15 = _Block_copy(v30);
  v16 = v9;
  v17 = v10;
  v18 = v16;
  v19 = v17;
  v20 = v18;
  v21 = v19;
  v22 = v11;
  v23 = v12;
  v24 = v8;
  v25 = objc_msgSend(v14, sel_initWithDynamicProvider_, v15);
  _Block_release(v15);

  swift_release();
  objc_msgSend(a1, sel_setBackgroundColor_, v25);

  v26 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v26, sel_setCornerRadius_, a4);

  v27 = objc_msgSend(a1, sel_layer);
  v28 = v27;
  if ((a2 & 1) != 0)
  {
    if ((a2 & 2) != 0)
    {
      v29 = 3;
      if ((a2 & 4) == 0)
        goto LABEL_8;
    }
    else
    {
      v29 = 1;
      if ((a2 & 4) == 0)
        goto LABEL_8;
    }
    goto LABEL_7;
  }
  if ((a2 & 2) == 0)
  {
    v29 = 0;
    if ((a2 & 4) == 0)
      goto LABEL_8;
LABEL_7:
    v29 |= 4uLL;
    goto LABEL_8;
  }
  v29 = 2;
  if ((a2 & 4) != 0)
    goto LABEL_7;
LABEL_8:
  if ((a2 & 8) != 0)
    v29 |= 8uLL;
  objc_msgSend(v27, sel_setMaskedCorners_, v29);

}

void sub_1BB4975D4(void *a1, void **a2)
{
  sub_1BB49760C(a1, a2, (uint64_t)&unk_1E73145A0, (uint64_t)sub_1BB4977DC, (uint64_t)&block_descriptor_14_0);
}

void sub_1BB4975F0(void *a1, void **a2)
{
  sub_1BB49760C(a1, a2, (uint64_t)&unk_1E7314550, (uint64_t)sub_1BB4977DC, (uint64_t)&block_descriptor_7_0);
}

void sub_1BB49760C(void *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  _QWORD v27[6];

  v9 = *a2;
  v10 = (void *)v5[2];
  v11 = (void *)v5[3];
  v12 = (void *)v5[4];
  v13 = (void *)v5[5];
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v9;
  v14[3] = v10;
  v14[4] = v11;
  v15 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v27[4] = a4;
  v27[5] = v14;
  v27[0] = MEMORY[0x1E0C809B0];
  v27[1] = 1107296256;
  v27[2] = sub_1BA61387C;
  v27[3] = a5;
  v16 = _Block_copy(v27);
  v17 = v10;
  v18 = v11;
  v19 = v17;
  v20 = v18;
  v21 = v19;
  v22 = v20;
  v23 = v12;
  v24 = v13;
  v25 = v9;
  v26 = objc_msgSend(v15, sel_initWithDynamicProvider_, v16);
  _Block_release(v16);

  swift_release();
  objc_msgSend(a1, sel_setBackgroundColor_, v26);

}

uint64_t sub_1BB497764()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v0 + 32);

  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArticleThumbnailViewStyler()
{
  return objc_opt_self();
}

uint64_t FormatViewData.background.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB4977FC(v1, a1);
}

uint64_t sub_1BB4977FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatViewData(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for FormatViewBackground(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v18 = *((_QWORD *)a2 + 2);
        v19 = *((_QWORD *)a2 + 3);
        v20 = *((_QWORD *)a2 + 4);
        v21 = *((_QWORD *)a2 + 5);
        v22 = *((_QWORD *)a2 + 6);
        v23 = *((_QWORD *)a2 + 7);
        v35 = *((_QWORD *)a2 + 9);
        v36 = *((_QWORD *)a2 + 8);
        v38 = a2[80];
        sub_1BAA8C5C0(v18, v19, v20, v21, v22, v23, v36, v35, v38);
        a1[2] = v18;
        a1[3] = v19;
        a1[4] = v20;
        a1[5] = v21;
        a1[6] = v22;
        a1[7] = v23;
        a1[8] = v36;
        a1[9] = v35;
        *((_BYTE *)a1 + 80) = v38;
        v24 = *((_QWORD *)a2 + 12);
        v25 = *((_QWORD *)a2 + 13);
        v26 = *((_QWORD *)a2 + 14);
        v27 = *((_QWORD *)a2 + 15);
        v28 = *((_QWORD *)a2 + 16);
        v30 = *((_QWORD *)a2 + 17);
        v29 = *((_QWORD *)a2 + 18);
        v37 = v29;
        v39 = *((_QWORD *)a2 + 11);
        v31 = a2[152];
        sub_1BAA8C5C0(v39, v24, v25, v26, v27, v28, v30, v29, v31);
        a1[11] = v39;
        a1[12] = v24;
        a1[13] = v25;
        a1[14] = v26;
        a1[15] = v27;
        a1[16] = v28;
        a1[17] = v30;
        a1[18] = v37;
        *((_BYTE *)a1 + 152) = v31;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *a1 = *(_QWORD *)a2;
        v11 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = &a2[v11];
        v14 = sub_1BB86FBD4();
        v15 = *(_QWORD *)(v14 - 8);
        v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
        swift_retain();
        if (v16(v13, 1, v14))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        }
      }
      else
      {
        v32 = *(_QWORD *)a2;
        v33 = *((_QWORD *)a2 + 1);
        *a1 = v32;
        a1[1] = v33;
        swift_retain();
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t assignWithCopy for FormatViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(const void *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;

  v4 = type metadata accessor for FormatViewBackground(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v26 = *(_QWORD *)(a2 + 16);
        v27 = *(_QWORD *)(a2 + 32);
        v28 = *(_QWORD *)(a2 + 40);
        v29 = *(_QWORD *)(a2 + 48);
        v30 = *(_QWORD *)(a2 + 56);
        v31 = *(_QWORD *)(a2 + 64);
        v57 = *(_QWORD *)(a2 + 72);
        v58 = *(_QWORD *)(a2 + 24);
        v61 = *(_BYTE *)(a2 + 80);
        sub_1BAA8C5C0(v26, v58, v27, v28, v29, v30, v31, v57, v61);
        *(_QWORD *)(a1 + 16) = v26;
        *(_QWORD *)(a1 + 24) = v58;
        *(_QWORD *)(a1 + 32) = v27;
        *(_QWORD *)(a1 + 40) = v28;
        *(_QWORD *)(a1 + 48) = v29;
        *(_QWORD *)(a1 + 56) = v30;
        *(_QWORD *)(a1 + 64) = v31;
        *(_QWORD *)(a1 + 72) = v57;
        *(_BYTE *)(a1 + 80) = v61;
        v32 = *(_QWORD *)(a2 + 88);
        v33 = *(_QWORD *)(a2 + 104);
        v34 = *(_QWORD *)(a2 + 112);
        v35 = *(_QWORD *)(a2 + 120);
        v36 = *(_QWORD *)(a2 + 128);
        v38 = *(_QWORD *)(a2 + 136);
        v37 = *(_QWORD *)(a2 + 144);
        v59 = v37;
        v62 = *(_QWORD *)(a2 + 96);
        v39 = *(_BYTE *)(a2 + 152);
        sub_1BAA8C5C0(v32, v62, v33, v34, v35, v36, v38, v37, v39);
        *(_QWORD *)(a1 + 88) = v32;
        *(_QWORD *)(a1 + 96) = v62;
        *(_QWORD *)(a1 + 104) = v33;
        *(_QWORD *)(a1 + 112) = v34;
        *(_QWORD *)(a1 + 120) = v35;
        *(_QWORD *)(a1 + 128) = v36;
        *(_QWORD *)(a1 + 136) = v38;
        *(_QWORD *)(a1 + 144) = v59;
        *(_BYTE *)(a1 + 152) = v39;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v10 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
        v11 = (void *)(a1 + v10);
        v12 = (const void *)(a2 + v10);
        v13 = sub_1BB86FBD4();
        v14 = *(_QWORD *)(v13 - 8);
        v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
        swift_retain();
        if (v15(v12, 1, v13))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
      }
      else
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        swift_retain();
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      return a1;
    }
LABEL_9:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  if (v8)
  {
    sub_1BB497FA0(a1);
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_1BB497FA0(a1);
    v18 = swift_getEnumCaseMultiPayload();
    if (v18 == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v41 = *(_QWORD *)(a2 + 16);
      v42 = *(_QWORD *)(a2 + 24);
      v43 = *(_QWORD *)(a2 + 32);
      v44 = *(_QWORD *)(a2 + 40);
      v45 = *(_QWORD *)(a2 + 48);
      v46 = *(_QWORD *)(a2 + 56);
      v47 = *(_QWORD *)(a2 + 64);
      v60 = *(_QWORD *)(a2 + 72);
      v63 = *(_BYTE *)(a2 + 80);
      sub_1BAA8C5C0(v41, v42, v43, v44, v45, v46, v47, v60, v63);
      *(_QWORD *)(a1 + 16) = v41;
      *(_QWORD *)(a1 + 24) = v42;
      *(_QWORD *)(a1 + 32) = v43;
      *(_QWORD *)(a1 + 40) = v44;
      *(_QWORD *)(a1 + 48) = v45;
      *(_QWORD *)(a1 + 56) = v46;
      *(_QWORD *)(a1 + 64) = v47;
      *(_QWORD *)(a1 + 72) = v60;
      *(_BYTE *)(a1 + 80) = v63;
      v48 = *(_QWORD *)(a2 + 88);
      v49 = *(_QWORD *)(a2 + 96);
      v50 = *(_QWORD *)(a2 + 104);
      v51 = *(_QWORD *)(a2 + 112);
      v52 = *(_QWORD *)(a2 + 120);
      v53 = *(_QWORD *)(a2 + 128);
      v55 = *(_QWORD *)(a2 + 136);
      v54 = *(_QWORD *)(a2 + 144);
      v64 = v54;
      v56 = *(_BYTE *)(a2 + 152);
      sub_1BAA8C5C0(v48, v49, v50, v51, v52, v53, v55, v54, v56);
      *(_QWORD *)(a1 + 88) = v48;
      *(_QWORD *)(a1 + 96) = v49;
      *(_QWORD *)(a1 + 104) = v50;
      *(_QWORD *)(a1 + 112) = v51;
      *(_QWORD *)(a1 + 120) = v52;
      *(_QWORD *)(a1 + 128) = v53;
      *(_QWORD *)(a1 + 136) = v55;
      *(_QWORD *)(a1 + 144) = v64;
      *(_BYTE *)(a1 + 152) = v56;
      swift_storeEnumTagMultiPayload();
    }
    else if (v18 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v19 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
      v20 = (void *)(a1 + v19);
      v21 = (const void *)(a2 + v19);
      v22 = sub_1BB86FBD4();
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
      swift_retain();
      if (v24(v21, 1, v22))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_retain();
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BB497FA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatViewBackground(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeWithTake for FormatViewData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for FormatViewBackground(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1BB86FBD4();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

_QWORD *assignWithTake for FormatViewData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for FormatViewBackground(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2)
        return a1;
      sub_1BB497FA0((uint64_t)a1);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_1BB86FBD4();
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v16 = *(_QWORD *)(v5 + 64);
LABEL_9:
      memcpy(a1, a2, v16);
      return a1;
    }
    sub_1BB497FA0((uint64_t)a1);
LABEL_8:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
    goto LABEL_9;
  }
  if (v8)
    goto LABEL_8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v9 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BB86FBD4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatViewData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB4983F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FormatViewData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB49844C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BB118, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t initializeBufferWithCopyOfBuffer for FormatViewBackground(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v15 = a2[2];
      v16 = a2[3];
      v17 = a2[4];
      v18 = a2[5];
      v19 = a2[6];
      v20 = a2[7];
      v21 = a2[8];
      v34 = a2[9];
      v35 = *((_BYTE *)a2 + 80);
      sub_1BAA8C5C0(v15, v16, v17, v18, v19, v20, v21, v34, v35);
      *(_QWORD *)(a1 + 16) = v15;
      *(_QWORD *)(a1 + 24) = v16;
      *(_QWORD *)(a1 + 32) = v17;
      *(_QWORD *)(a1 + 40) = v18;
      *(_QWORD *)(a1 + 48) = v19;
      *(_QWORD *)(a1 + 56) = v20;
      *(_QWORD *)(a1 + 64) = v21;
      *(_QWORD *)(a1 + 72) = v34;
      *(_BYTE *)(a1 + 80) = v35;
      v22 = a2[11];
      v23 = a2[12];
      v24 = a2[13];
      v25 = a2[14];
      v26 = a2[15];
      v27 = a2[16];
      v29 = a2[17];
      v28 = a2[18];
      v36 = v28;
      v30 = *((_BYTE *)a2 + 152);
      sub_1BAA8C5C0(v22, v23, v24, v25, v26, v27, v29, v28, v30);
      *(_QWORD *)(a1 + 88) = v22;
      *(_QWORD *)(a1 + 96) = v23;
      *(_QWORD *)(a1 + 104) = v24;
      *(_QWORD *)(a1 + 112) = v25;
      *(_QWORD *)(a1 + 120) = v26;
      *(_QWORD *)(a1 + 128) = v27;
      *(_QWORD *)(a1 + 136) = v29;
      *(_QWORD *)(a1 + 144) = v36;
      *(_BYTE *)(a1 + 152) = v30;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *a2;
      v7 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
      v8 = (void *)(a1 + v7);
      v9 = (char *)a2 + v7;
      v10 = sub_1BB86FBD4();
      v11 = *(_QWORD *)(v10 - 8);
      v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      swift_retain();
      if (v12(v9, 1, v10))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      v31 = *a2;
      v32 = a2[1];
      *(_QWORD *)a1 = v31;
      *(_QWORD *)(a1 + 8) = v32;
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FormatViewBackground(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      sub_1BAA4E044(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
      return sub_1BAA4E044(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_BYTE *)(a1 + 152));
    case 1:
      swift_release();
      v3 = a1 + *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
      v4 = sub_1BB86FBD4();
      v5 = *(_QWORD *)(v4 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
      break;
    case 0:
      swift_release();
      return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for FormatViewBackground(uint64_t a1, uint64_t *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v32;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v12 = a2[2];
    v13 = a2[3];
    v14 = a2[4];
    v15 = a2[5];
    v16 = a2[6];
    v17 = a2[7];
    v18 = a2[8];
    v19 = a2[9];
    v32 = *((_BYTE *)a2 + 80);
    sub_1BAA8C5C0(v12, v13, v14, v15, v16, v17, v18, v19, v32);
    *(_QWORD *)(a1 + 16) = v12;
    *(_QWORD *)(a1 + 24) = v13;
    *(_QWORD *)(a1 + 32) = v14;
    *(_QWORD *)(a1 + 40) = v15;
    *(_QWORD *)(a1 + 48) = v16;
    *(_QWORD *)(a1 + 56) = v17;
    *(_QWORD *)(a1 + 64) = v18;
    *(_QWORD *)(a1 + 72) = v19;
    *(_BYTE *)(a1 + 80) = v32;
    v20 = a2[11];
    v21 = a2[12];
    v22 = a2[13];
    v23 = a2[14];
    v24 = a2[15];
    v25 = a2[16];
    v26 = a2[17];
    v27 = a2[18];
    v28 = *((_BYTE *)a2 + 152);
    sub_1BAA8C5C0(v20, v21, v22, v23, v24, v25, v26, v27, v28);
    *(_QWORD *)(a1 + 88) = v20;
    *(_QWORD *)(a1 + 96) = v21;
    *(_QWORD *)(a1 + 104) = v22;
    *(_QWORD *)(a1 + 112) = v23;
    *(_QWORD *)(a1 + 120) = v24;
    *(_QWORD *)(a1 + 128) = v25;
    *(_QWORD *)(a1 + 136) = v26;
    *(_QWORD *)(a1 + 144) = v27;
    *(_BYTE *)(a1 + 152) = v28;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)a1 = *a2;
    v5 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
    v6 = (void *)(a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = sub_1BB86FBD4();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
    swift_retain();
    if (v10(v7, 1, v8))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  else
  {
    v29 = *a2;
    v30 = a2[1];
    *(_QWORD *)a1 = v29;
    *(_QWORD *)(a1 + 8) = v30;
    swift_retain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FormatViewBackground(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v30;

  if (a1 != a2)
  {
    sub_1BB497FA0(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v12 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 24);
      v14 = *(_QWORD *)(a2 + 32);
      v15 = *(_QWORD *)(a2 + 40);
      v16 = *(_QWORD *)(a2 + 48);
      v17 = *(_QWORD *)(a2 + 56);
      v18 = *(_QWORD *)(a2 + 64);
      v19 = *(_QWORD *)(a2 + 72);
      v30 = *(_BYTE *)(a2 + 80);
      sub_1BAA8C5C0(v12, v13, v14, v15, v16, v17, v18, v19, v30);
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v15;
      *(_QWORD *)(a1 + 48) = v16;
      *(_QWORD *)(a1 + 56) = v17;
      *(_QWORD *)(a1 + 64) = v18;
      *(_QWORD *)(a1 + 72) = v19;
      *(_BYTE *)(a1 + 80) = v30;
      v20 = *(_QWORD *)(a2 + 88);
      v21 = *(_QWORD *)(a2 + 96);
      v22 = *(_QWORD *)(a2 + 104);
      v23 = *(_QWORD *)(a2 + 112);
      v24 = *(_QWORD *)(a2 + 120);
      v25 = *(_QWORD *)(a2 + 128);
      v26 = *(_QWORD *)(a2 + 136);
      v27 = *(_QWORD *)(a2 + 144);
      v28 = *(_BYTE *)(a2 + 152);
      sub_1BAA8C5C0(v20, v21, v22, v23, v24, v25, v26, v27, v28);
      *(_QWORD *)(a1 + 88) = v20;
      *(_QWORD *)(a1 + 96) = v21;
      *(_QWORD *)(a1 + 104) = v22;
      *(_QWORD *)(a1 + 112) = v23;
      *(_QWORD *)(a1 + 120) = v24;
      *(_QWORD *)(a1 + 128) = v25;
      *(_QWORD *)(a1 + 136) = v26;
      *(_QWORD *)(a1 + 144) = v27;
      *(_BYTE *)(a1 + 152) = v28;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v5 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
      v6 = (void *)(a1 + v5);
      v7 = (const void *)(a2 + v5);
      v8 = sub_1BB86FBD4();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
      swift_retain();
      if (v10(v7, 1, v8))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for FormatViewBackground(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB86FBD4();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for FormatViewBackground(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1BB497FA0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1BB86FBD4();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t destroy for FormatViewBackground.Image()
{
  swift_release();
  return swift_release();
}

_QWORD *_s8NewsFeed20FormatViewBackgroundO5ImageVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for FormatViewBackground.Image(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for FormatViewBackground.Image(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatViewBackground.Image()
{
  return &type metadata for FormatViewBackground.Image;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatViewBackground.Mica(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1BB86FBD4();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    swift_retain();
    if (v10(v7, 1, v8))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for FormatViewBackground.Mica(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86FBD4();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for FormatViewBackground.Mica(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86FBD4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_retain();
  if (v9(v6, 1, v7))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithCopy for FormatViewBackground.Mica(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86FBD4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_QWORD *initializeWithTake for FormatViewBackground.Mica(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86FBD4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for FormatViewBackground.Mica(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86FBD4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatViewBackground.Mica()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB499510(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 126)
  {
    v4 = *(_QWORD *)a1 >> 57;
    v5 = v4 & 0x38 | *(_QWORD *)a1 & 7;
    if (v5)
      return 128 - ((v4 >> 6) | (2 * v5));
    else
      return 0;
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for FormatViewBackground.Mica()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t *sub_1BB4995B8(unint64_t *result, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t *v5;
  uint64_t v6;
  uint64_t v8;

  v5 = result;
  if (a3 == 126)
  {
    v6 = (-(int)a2 >> 1) & 0x3F | ((-(int)a2 & 0x7F) << 6);
    *result = (v6 | (v6 << 57)) & 0xF000000000000007;
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3BA880, (void (*)(uint64_t))MEMORY[0x1E0DB7898]);
    return (unint64_t *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))((char *)v5 + *(int *)(a4 + 20), a2, a2, v8);
  }
  return result;
}

uint64_t destroy for FormatViewBackground.SplitBackground(uint64_t a1)
{
  sub_1BAA4E044(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  return sub_1BAA4E044(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_BYTE *)(a1 + 152));
}

uint64_t initializeWithCopy for FormatViewBackground.SplitBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;

  v2 = a2;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v21 = *(_BYTE *)(a2 + 80);
  sub_1BAA8C5C0(v4, v5, v6, v7, v8, v9, v10, v11, v21);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v21;
  v12 = *(_QWORD *)(v2 + 88);
  v13 = *(_QWORD *)(v2 + 96);
  v14 = *(_QWORD *)(v2 + 104);
  v15 = *(_QWORD *)(v2 + 112);
  v16 = *(_QWORD *)(v2 + 120);
  v17 = *(_QWORD *)(v2 + 128);
  v18 = *(_QWORD *)(v2 + 136);
  v19 = *(_QWORD *)(v2 + 144);
  LOBYTE(v2) = *(_BYTE *)(v2 + 152);
  sub_1BAA8C5C0(v12, v13, v14, v15, v16, v17, v18, v19, v2);
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v13;
  *(_QWORD *)(a1 + 104) = v14;
  *(_QWORD *)(a1 + 112) = v15;
  *(_QWORD *)(a1 + 120) = v16;
  *(_QWORD *)(a1 + 128) = v17;
  *(_QWORD *)(a1 + 136) = v18;
  *(_QWORD *)(a1 + 144) = v19;
  *(_BYTE *)(a1 + 152) = v2;
  return a1;
}

uint64_t assignWithCopy for FormatViewBackground.SplitBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v39;

  v2 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v39 = *(_BYTE *)(a2 + 80);
  sub_1BAA8C5C0(v4, v5, v6, v7, v8, v9, v10, v11, v39);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v39;
  sub_1BAA4E044(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = *(_QWORD *)(v2 + 88);
  v22 = *(_QWORD *)(v2 + 96);
  v23 = *(_QWORD *)(v2 + 104);
  v24 = *(_QWORD *)(v2 + 112);
  v25 = *(_QWORD *)(v2 + 120);
  v26 = *(_QWORD *)(v2 + 128);
  v27 = *(_QWORD *)(v2 + 136);
  v28 = *(_QWORD *)(v2 + 144);
  LOBYTE(v2) = *(_BYTE *)(v2 + 152);
  sub_1BAA8C5C0(v21, v22, v23, v24, v25, v26, v27, v28, v2);
  v29 = *(_QWORD *)(a1 + 88);
  v30 = *(_QWORD *)(a1 + 96);
  v31 = *(_QWORD *)(a1 + 104);
  v32 = *(_QWORD *)(a1 + 112);
  v33 = *(_QWORD *)(a1 + 120);
  v34 = *(_QWORD *)(a1 + 128);
  v35 = *(_QWORD *)(a1 + 136);
  v36 = *(_QWORD *)(a1 + 144);
  v37 = *(_BYTE *)(a1 + 152);
  *(_QWORD *)(a1 + 88) = v21;
  *(_QWORD *)(a1 + 96) = v22;
  *(_QWORD *)(a1 + 104) = v23;
  *(_QWORD *)(a1 + 112) = v24;
  *(_QWORD *)(a1 + 120) = v25;
  *(_QWORD *)(a1 + 128) = v26;
  *(_QWORD *)(a1 + 136) = v27;
  *(_QWORD *)(a1 + 144) = v28;
  *(_BYTE *)(a1 + 152) = v2;
  sub_1BAA4E044(v29, v30, v31, v32, v33, v34, v35, v36, v37);
  return a1;
}

uint64_t assignWithTake for FormatViewBackground.SplitBackground(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v4 = *(_BYTE *)(a2 + 80);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_BYTE *)(a1 + 80);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = v4;
  sub_1BAA4E044(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  v16 = *(_BYTE *)(a2 + 152);
  v17 = *(_QWORD *)(a1 + 88);
  v18 = *(_QWORD *)(a1 + 96);
  v19 = *(_QWORD *)(a1 + 104);
  v20 = *(_QWORD *)(a1 + 112);
  v21 = *(_QWORD *)(a1 + 120);
  v22 = *(_QWORD *)(a1 + 128);
  v23 = *(_QWORD *)(a1 + 136);
  v24 = *(_QWORD *)(a1 + 144);
  v25 = *(_BYTE *)(a1 + 152);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = v16;
  sub_1BAA4E044(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatViewBackground.SplitBackground(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 153))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatViewBackground.SplitBackground(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 152) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 153) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 153) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatViewBackground.SplitBackground()
{
  return &type metadata for FormatViewBackground.SplitBackground;
}

void sub_1BB499A54(void *a1)
{
  id v1;

  v1 = objc_msgSend(objc_msgSend(a1, sel_possiblyUnfetchedAppConfiguration), sel_iAdConfig);
  swift_unknownObjectRelease();
  if (v1)
  {
    objc_msgSend(v1, sel_feedNumberOfViewportsBetweenAds);

  }
  else
  {
    __break(1u);
  }
}

uint64_t static String.feedBannerAd.getter()
{
  return 0x7364612D64656566;
}

uint64_t sub_1BB499AE8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1BB499B0C()
{
  uint64_t v0;

  sub_1BB499A54(*(void **)(v0 + 16));
}

uint64_t FormatImageNodeRequestPath.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeRequest.size.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeRequest.path.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB499B50(_QWORD *a1)
{
  return FormatImageNodeRequest.encode(to:)(a1);
}

uint64_t (*FormatImageNodeRequestSize.adjustments.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB499B7C(_QWORD *a1)
{
  return FormatImageNodeRequestSize.encode(to:)(a1);
}

uint64_t FormatImageNodeRequestPath.adjustments.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*FormatImageNodeRequestPath.adjustments.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t _s8NewsFeed26FormatImageNodeRequestSizeV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_1BA8831B8(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1BB499C28(_QWORD *a1)
{
  return FormatImageNodeRequestPath.encode(to:)(a1);
}

uint64_t sub_1BB499C3C(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA8831B8(*a1, *a2);
}

uint64_t _s8NewsFeed22FormatImageNodeRequestV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  if (*a1)
  {
    if (!v5)
    {
LABEL_12:
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v6 = sub_1BA8831B8(v3, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if ((v6 & 1) == 0)
      return 0;
  }
  else if (v5)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v2)
  {
    if (v4)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v7 = sub_1BA8831B8(v2, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return v7 & 1;
    }
    goto LABEL_12;
  }
  if (v4)
    goto LABEL_13;
  return 1;
}

unint64_t sub_1BB499D48(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB499D6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB499D6C()
{
  unint64_t result;

  result = qword_1EF2C4F00;
  if (!qword_1EF2C4F00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeRequest, &type metadata for FormatImageNodeRequest);
    atomic_store(result, (unint64_t *)&qword_1EF2C4F00);
  }
  return result;
}

uint64_t sub_1BB499DB0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA699154, (uint64_t (*)(void))sub_1BAEF1174, (uint64_t (*)(void))sub_1BB499DCC);
}

unint64_t sub_1BB499DCC()
{
  unint64_t result;

  result = qword_1EF2C4F08;
  if (!qword_1EF2C4F08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeRequest, &type metadata for FormatImageNodeRequest);
    atomic_store(result, (unint64_t *)&qword_1EF2C4F08);
  }
  return result;
}

unint64_t sub_1BB499E10(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB499E34();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB499E34()
{
  unint64_t result;

  result = qword_1EF2C4F10;
  if (!qword_1EF2C4F10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeRequestSize, &type metadata for FormatImageNodeRequestSize);
    atomic_store(result, (unint64_t *)&qword_1EF2C4F10);
  }
  return result;
}

uint64_t sub_1BB499E78(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA824FAC, (uint64_t (*)(void))sub_1BAEF16C0, (uint64_t (*)(void))sub_1BB499E94);
}

unint64_t sub_1BB499E94()
{
  unint64_t result;

  result = qword_1EF2C4F18;
  if (!qword_1EF2C4F18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeRequestSize, &type metadata for FormatImageNodeRequestSize);
    atomic_store(result, (unint64_t *)&qword_1EF2C4F18);
  }
  return result;
}

unint64_t sub_1BB499ED8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB499EFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB499EFC()
{
  unint64_t result;

  result = qword_1EF2C4F20;
  if (!qword_1EF2C4F20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeRequestPath, &type metadata for FormatImageNodeRequestPath);
    atomic_store(result, (unint64_t *)&qword_1EF2C4F20);
  }
  return result;
}

uint64_t sub_1BB499F40(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA8250DC, (uint64_t (*)(void))sub_1BAEF1624, (uint64_t (*)(void))sub_1BB499F5C);
}

unint64_t sub_1BB499F5C()
{
  unint64_t result;

  result = qword_1EF2C4F28;
  if (!qword_1EF2C4F28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeRequestPath, &type metadata for FormatImageNodeRequestPath);
    atomic_store(result, (unint64_t *)&qword_1EF2C4F28);
  }
  return result;
}

uint64_t sub_1BB499FA0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t keypath_setTm_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatImageNodeRequest()
{
  return &type metadata for FormatImageNodeRequest;
}

ValueMetadata *type metadata accessor for FormatImageNodeRequestSize()
{
  return &type metadata for FormatImageNodeRequestSize;
}

ValueMetadata *type metadata accessor for FormatImageNodeRequestPath()
{
  return &type metadata for FormatImageNodeRequestPath;
}

_QWORD *sub_1BB49A024(unint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  __int128 v62;
  _QWORD *v63;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  char *v80;
  uint64_t v81;
  int64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD v85[2];
  uint64_t v86;
  _OWORD v87[2];
  uint64_t v88;
  _OWORD v89[2];
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;

  sub_1BA8C88C8(0);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v66 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v80 = (char *)&v65 - v7;
  v8 = *a1;
  v67 = a1[1];
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v9);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 32) & ~v11;
  v83 = *(_QWORD *)(v4 + 72);
  v73 = v12 + v83;
  v74 = v13;
  v72 = v11 | 7;
  v14 = swift_allocObject();
  v79 = xmmword_1BB87CE70;
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  v84 = v12;
  v68 = (_QWORD *)(v14 + v12);
  v69 = v14;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v9);
  v71 = v15;
  v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = v79;
  v81 = v16;
  v17 = v16 + 32;
  v18 = MEMORY[0x1E0DEE9D8];
  v19 = MEMORY[0x1E0DEE9D8];
  if (v8 >= 2)
  {
    swift_bridgeObjectRetain();
    v19 = v8;
  }
  v75 = v8;
  v20 = *(_QWORD *)(v19 + 16);
  v77 = inited;
  v78 = v3;
  if (v20)
  {
    v76 = v17;
    *(_QWORD *)&v89[0] = v18;
    sub_1BAC79E1C(0, v20, 0);
    v21 = *(_QWORD *)&v89[0];
    v70 = v19;
    v22 = (unsigned __int8 *)(v19 + 64);
    v23 = (uint64_t)v80;
    do
    {
      v82 = v20;
      v24 = *((_QWORD *)v22 - 4);
      v25 = *((_QWORD *)v22 - 3);
      v27 = *((_QWORD *)v22 - 2);
      v26 = *((_QWORD *)v22 - 1);
      v28 = *v22;
      *(_QWORD *)&v91 = v24;
      *((_QWORD *)&v91 + 1) = v25;
      *(_QWORD *)&v92 = v27;
      *((_QWORD *)&v92 + 1) = v26;
      LOBYTE(v93) = v28;
      sub_1BA527164(v24, v25, v27, v26, v28);
      sub_1BB57F94C();
      v29 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v23, 0, 1, v29);
      sub_1BA5271D4(v24, v25, v27, v26, v28);
      *(_QWORD *)&v89[0] = v21;
      v31 = *(_QWORD *)(v21 + 16);
      v30 = *(_QWORD *)(v21 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1BAC79E1C(v30 > 1, v31 + 1, 1);
        v23 = (uint64_t)v80;
        v21 = *(_QWORD *)&v89[0];
      }
      v22 += 40;
      *(_QWORD *)(v21 + 16) = v31 + 1;
      sub_1BA89EB4C(v23, v21 + v84 + v31 * v83);
      v20 = v82 - 1;
    }
    while (v82 != 1);
    swift_bridgeObjectRelease();
    inited = v77;
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1E0DEE9D8];
  }
  v76 = inited + 32;
  sub_1BAF89090(0x656D7473756A6441, 0xEB0000000073746ELL, 0, 0, v21, v85);
  swift_bridgeObjectRelease();
  v32 = v81;
  *(_QWORD *)(v81 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v32 + 64) = &off_1E72D2F60;
  v33 = swift_allocObject();
  *(_QWORD *)(v32 + 32) = v33;
  *(_QWORD *)(v33 + 48) = v86;
  v34 = v85[1];
  *(_OWORD *)(v33 + 16) = v85[0];
  *(_OWORD *)(v33 + 32) = v34;
  v35 = sub_1BA9747FC(v32);
  swift_setDeallocating();
  v70 = sub_1BA89EA20();
  swift_arrayDestroy();
  v36 = sub_1BB6DF010(v35);
  swift_bridgeObjectRelease();
  v37 = v68;
  sub_1BAAF3C48(0x656D7473756A6441, 0xEB0000000073746ELL, (uint64_t)v36, 0, 0, v68);
  v38 = type metadata accessor for FormatInspectionItem(0);
  v80 = *(char **)(*(_QWORD *)(v38 - 8) + 56);
  v81 = v38;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v80)(v37, 0, 1);
  sub_1BAF89090(1702521171, 0xE400000000000000, 0, 0, v69, v87);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v39 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v39;
  *(_QWORD *)(v39 + 48) = v88;
  v40 = v87[1];
  *(_OWORD *)(v39 + 16) = v87[0];
  *(_OWORD *)(v39 + 32) = v40;
  v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = v79;
  v41 = swift_initStackObject();
  *(_OWORD *)(v41 + 16) = v79;
  v42 = MEMORY[0x1E0DEE9D8];
  v43 = MEMORY[0x1E0DEE9D8];
  if (v75 != 1 && v67)
    v43 = swift_bridgeObjectRetain();
  v44 = *(_QWORD *)(v43 + 16);
  if (v44)
  {
    *(_QWORD *)&v79 = v41;
    *(_QWORD *)&v89[0] = v42;
    sub_1BAC79E1C(0, v44, 0);
    v45 = *(_QWORD *)&v89[0];
    v75 = v43;
    v46 = (unsigned __int8 *)(v43 + 64);
    v47 = (uint64_t)v66;
    do
    {
      v82 = v44;
      v48 = *((_QWORD *)v46 - 4);
      v49 = *((_QWORD *)v46 - 3);
      v51 = *((_QWORD *)v46 - 2);
      v50 = *((_QWORD *)v46 - 1);
      v52 = *v46;
      *(_QWORD *)&v91 = v48;
      *((_QWORD *)&v91 + 1) = v49;
      *(_QWORD *)&v92 = v51;
      *((_QWORD *)&v92 + 1) = v50;
      LOBYTE(v93) = v52;
      sub_1BA527164(v48, v49, v51, v50, v52);
      sub_1BB57F94C();
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v80)(v47, 0, 1, v81);
      sub_1BA5271D4(v48, v49, v51, v50, v52);
      *(_QWORD *)&v89[0] = v45;
      v54 = *(_QWORD *)(v45 + 16);
      v53 = *(_QWORD *)(v45 + 24);
      if (v54 >= v53 >> 1)
      {
        sub_1BAC79E1C(v53 > 1, v54 + 1, 1);
        v47 = (uint64_t)v66;
        v45 = *(_QWORD *)&v89[0];
      }
      v46 += 40;
      *(_QWORD *)(v45 + 16) = v54 + 1;
      sub_1BA89EB4C(v47, v45 + v84 + v54 * v83);
      v44 = v82 - 1;
    }
    while (v82 != 1);
    swift_bridgeObjectRelease();
    inited = v77;
    v41 = v79;
  }
  else
  {
    swift_bridgeObjectRelease();
    v45 = MEMORY[0x1E0DEE9D8];
  }
  v55 = v74;
  v56 = (_QWORD *)(v74 + v84);
  sub_1BAF89090(0x656D7473756A6441, 0xEB0000000073746ELL, 0, 0, v45, v89);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v41 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v41 + 64) = &off_1E72D2F60;
  v57 = swift_allocObject();
  *(_QWORD *)(v41 + 32) = v57;
  *(_QWORD *)(v57 + 48) = v90;
  v58 = v89[1];
  *(_OWORD *)(v57 + 16) = v89[0];
  *(_OWORD *)(v57 + 32) = v58;
  v59 = sub_1BA9747FC(v41);
  swift_setDeallocating();
  swift_arrayDestroy();
  v60 = sub_1BB6DF010(v59);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x656D7473756A6441, 0xEB0000000073746ELL, (uint64_t)v60, 0, 0, v56);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v80)(v56, 0, 1, v81);
  sub_1BAF89090(1752457552, 0xE400000000000000, 0, 0, v55, &v91);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v61 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v61;
  *(_QWORD *)(v61 + 48) = v93;
  v62 = v92;
  *(_OWORD *)(v61 + 16) = v91;
  *(_OWORD *)(v61 + 32) = v62;
  v63 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v63;
}

uint64_t sub_1BB49A7F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void FormatResource.loadableFonts(in:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[4];
  __int128 v40;
  uint64_t v41;
  _BYTE v42[8];
  id v43;

  v2 = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v4);
  v36 = (uint64_t)&v35 - v5;
  v6 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FormatFontResource(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  v15 = type metadata accessor for FormatResource(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_OWORD *)(a1 + 48);
  v39[2] = *(_OWORD *)(a1 + 32);
  v39[3] = v18;
  v40 = *(_OWORD *)(a1 + 64);
  v41 = *(_QWORD *)(a1 + 80);
  v19 = *(_OWORD *)(a1 + 16);
  v39[0] = *(_OWORD *)a1;
  v39[1] = v19;
  sub_1BA4C2DD8(v2, (uint64_t)v17, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatResource);
    return;
  }
  sub_1BA5193C4((uint64_t)v17, (uint64_t)v14, type metadata accessor for FormatFontResource);
  sub_1BA4C2DD8((uint64_t)v14, (uint64_t)v11, type metadata accessor for FormatFontResource);
  v21 = (uint64_t)v14;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA5193C4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
    sub_1BA65E330();
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1BB8856E0;
    swift_bridgeObjectRetain();
    v29 = v36;
    v28 = v37;
    sub_1BA7FC74C((uint64_t)v39, v36);
    if (v28)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 16) = 0;
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
      sub_1BA4A2E80(v21, type metadata accessor for FormatFontResource);
      return;
    }
    v37 = v21;
    v30 = sub_1BB86C67C();
    v31 = *(_QWORD *)(v30 - 8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v30);
    v32 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v33 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) != 1)
    {
      v33 = (void *)sub_1BB86C58C();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    }
    v34 = objc_msgSend((id)objc_opt_self(), sel_loadableFontWithName_url_, v32, v33);

    if (v34)
    {
      *(_QWORD *)(v27 + 32) = v34;
      v38 = v27;
      sub_1BB872DCC();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteFont);
      sub_1BA4A2E80(v37, type metadata accessor for FormatFontResource);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  sub_1BA6F3F50(*(_QWORD *)v11, *((_QWORD *)v11 + 1), *((_QWORD *)v11 + 2), v11[24]);
  sub_1BB49ACE8((uint64_t)&v40 + 8, (uint64_t)v42);
  sub_1BB49ACE8((uint64_t)v42, (uint64_t)&v43);
  if (!v43 || (v22 = objc_msgSend(v43, sel_asChannel)) == 0)
  {
LABEL_17:
    sub_1BA4A2E80(v21, type metadata accessor for FormatFontResource);
    return;
  }
  v23 = objc_msgSend(v22, sel_theme);
  if (!v23
    || (v24 = objc_msgSend(v23, sel_defaultHeadlineTemplate),
        swift_unknownObjectRelease(),
        !v24))
  {
    swift_unknownObjectRelease();
    v21 = (uint64_t)v14;
    goto LABEL_17;
  }
  v25 = objc_msgSend(v24, sel_loadableFonts);
  if (v25)
  {
    v26 = v25;
    sub_1BA57FDCC();
    sub_1BB872DB4();

    swift_unknownObjectRelease();
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatFontResource);
    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_1BB49ACE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B9810, (void (*)(uint64_t))sub_1BA78682C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BB49AD3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[8];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v34 = a8;
  v45 = a7;
  v37 = a6;
  v47 = a5;
  v32[3] = a4;
  v39 = a3;
  v44 = a2;
  v46 = a1;
  v35 = a9;
  v32[2] = a10;
  v33 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v33);
  v40 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  MEMORY[0x1E0C80A78](v13);
  v32[6] = (char *)v32 - v14;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v15);
  v36 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v32[7] = (char *)v32 - v18;
  MEMORY[0x1E0C80A78](v19);
  v32[4] = (char *)v32 - v20;
  MEMORY[0x1E0C80A78](v21);
  v32[5] = (char *)v32 - v22;
  v23 = sub_1BB86C67C();
  v42 = *(_QWORD *)(v23 - 8);
  v43 = v23;
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  v32[1] = (char *)v32 - v25;
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  v32[0] = (char *)v32 - v28;
  v29 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v29);
  v41 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v41);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v30);
  v31 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v31);
  __asm { BR              X10 }
}

uint64_t sub_1BB49B098()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(v5 - 112);
  v7 = *(_QWORD *)(v5 - 136);
  v8 = *(_QWORD *)(v5 - 176);
  FormatOptionCollection.subscript.getter(v7, v8, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v0) == 1)
  {
    sub_1BA502AD0(v3, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    *v1 = v7;
    v1[1] = v8;
    swift_storeEnumTagMultiPayload();
    sub_1BA689E84();
    swift_allocError();
    sub_1BA4C2DD8((uint64_t)v1, v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    swift_bridgeObjectRetain();
    swift_willThrow();
    v10 = (uint64_t)v1;
    v11 = type metadata accessor for FormatLayoutError;
  }
  else
  {
    sub_1BA5193C4(v3, v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v12 = *(_QWORD *)(v4 + 16);
    swift_retain();
    v13 = v12;
    v14 = *(_QWORD *)(v5 - 120);
    (*(void (**)(uint64_t, uint64_t))(v5 - 216))(v6, v13);
    swift_release();
    if (!v14)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, uint64_t))(v5 - 272))(*(_QWORD *)(v5 - 96), v7, v8, *(_QWORD *)(v5 - 264), v6);
      swift_release();
    }
    v11 = type metadata accessor for FormatOption;
    v10 = v4;
  }
  return sub_1BA4A2E80(v10, (uint64_t (*)(_QWORD))v11);
}

void sub_1BB49B6E8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a5;
  v23 = a3;
  v24 = a4;
  v30 = a2;
  v31 = a1;
  v29 = a6;
  v22 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v7);
  v25 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
  MEMORY[0x1E0C80A78](v9);
  v21[0] = (char *)v21 - v10;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v21[1] = (char *)v21 - v13;
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1BB86C67C();
  v27 = *(_QWORD *)(v16 - 8);
  v28 = v16;
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  v20 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v20);
  __asm { BR              X10 }
}

uint64_t sub_1BB49B950()
{
  uint64_t v0;

  return sub_1BB636A04(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 112), *(_QWORD *)(v0 - 168), *(_QWORD *)(v0 - 160), *(_QWORD *)(v0 - 120));
}

void sub_1BB49BE64(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[7];
  uint64_t v13;

  v12[3] = a3;
  v12[0] = a4;
  v12[1] = a6;
  v12[5] = a1;
  v12[6] = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v8);
  v13 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v13);
  v12[2] = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v11);
  __asm { BR              X10 }
}

uint64_t sub_1BB49BFDC()
{
  _QWORD *v0;

  sub_1BA689E84();
  swift_allocError();
  *v0 = 0xD000000000000066;
  v0[1] = 0x80000001BB964840;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BB49C2A0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  return sub_1BB49C2BC(a1, a2, &OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack, a3);
}

uint64_t sub_1BB49C2BC@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v10 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + *a3 + 8);
  if (a2 < 0)
  {
    result = sub_1BAF65238(v16, (uint64_t)v12);
    if (v4)
      return result;
    if ((a2 & 1) != 0)
    {
      sub_1BA57B488((uint64_t)&v12[*(int *)(v10 + 36)], a4, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    }
    else
    {
      v20 = &v12[*(int *)(v10 + 32)];
      v21 = sub_1BB86C67C();
      v22 = *(_QWORD *)(v21 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(a4, v20, v21);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(a4, 0, 1, v21);
    }
    v18 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
    v19 = (uint64_t)v12;
  }
  else
  {
    result = sub_1BA4A9E78(v16, (uint64_t)v15);
    if (v4)
      return result;
    v24 = a2;
    sub_1BB2CB030();
    v18 = type metadata accessor for FeedHeadline;
    v19 = (uint64_t)v15;
  }
  return sub_1BA4A2E80(v19, v18);
}

uint64_t sub_1BB49C458@<X0>(char a1@<W1>, uint64_t (*a2)(double)@<X2>, uint64_t (*a3)(double)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v24 = a4;
  v9 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FeedHeadline(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    result = a2(v13);
    if (v4)
      return result;
    if ((a1 & 1) != 0)
    {
      sub_1BA57B488((uint64_t)&v11[*(int *)(v9 + 36)], v24, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    }
    else
    {
      v19 = &v11[*(int *)(v9 + 32)];
      v20 = sub_1BB86C67C();
      v21 = *(_QWORD *)(v20 - 8);
      v22 = v24;
      (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v24, v19, v20);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v22, 0, 1, v20);
    }
    v17 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
    v18 = (uint64_t)v11;
  }
  else
  {
    result = a3(v13);
    if (v4)
      return result;
    v25 = a1;
    sub_1BB2CB030();
    v17 = type metadata accessor for FeedHeadline;
    v18 = (uint64_t)v15;
  }
  return sub_1BA4A2E80(v18, v17);
}

uint64_t sub_1BB49C5F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v30 = a1;
  v3 = v2;
  v29 = a2;
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  v11 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v3, (uint64_t)v16, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v19 = *((_QWORD *)v16 + 2);
      v20 = v30;
      v31 = *(_BYTE *)(v30 + 9);
      sub_1BA4A111C();
      sub_1BB86C5BC();
      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v7, v4);
      swift_bridgeObjectRetain();
      sub_1BAFDEDFC(v20, v19, v29);
      swift_bridgeObjectRelease();
      v21(v10, v4);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v24 = *(_QWORD *)v16;
      v25 = *((_QWORD *)v16 + 1);
      v26 = *((_QWORD *)v16 + 2);
      v27 = v16[24];
      sub_1BB49BE64(v30, v24, v25, v26, v27, v29);
      return sub_1BA5A7EF8(v24, v25, v26, v27);
    }
  }
  else
  {
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    v23 = *(_QWORD *)&v13[*(int *)(v11 + 20)];
    swift_bridgeObjectRetain();
    sub_1BAFDEDFC(v30, v23, v29);
    swift_bridgeObjectRelease();
    return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
  }
}

uint64_t sub_1BB49C850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(uint64_t);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(uint64_t);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void (*v195)(uint64_t);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210[2];
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  char *v237;
  int *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;

  v242 = a1;
  v243 = (char *)a2;
  v239 = a3;
  v5 = type metadata accessor for FormatDecorationContext();
  MEMORY[0x1E0C80A78](v5);
  v210[1] = (uint64_t)v210 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v215 = (char *)v210 - v8;
  MEMORY[0x1E0C80A78](v9);
  v222 = (char *)v210 - v10;
  MEMORY[0x1E0C80A78](v11);
  v214 = (uint64_t)v210 - v12;
  MEMORY[0x1E0C80A78](v13);
  v223 = (uint64_t)v210 - v14;
  MEMORY[0x1E0C80A78](v15);
  v228 = (uint64_t)v210 - v16;
  MEMORY[0x1E0C80A78](v17);
  v220 = (uint64_t)v210 - v18;
  MEMORY[0x1E0C80A78](v19);
  v226 = (uint64_t)v210 - v20;
  MEMORY[0x1E0C80A78](v21);
  v229 = (uint64_t)v210 - v22;
  v238 = (int *)type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v238);
  v210[0] = (uint64_t)v210 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v213 = (uint64_t)v210 - v25;
  MEMORY[0x1E0C80A78](v26);
  v221 = (uint64_t)v210 - v27;
  MEMORY[0x1E0C80A78](v28);
  v212 = (uint64_t)v210 - v29;
  MEMORY[0x1E0C80A78](v30);
  v218 = (uint64_t)v210 - v31;
  MEMORY[0x1E0C80A78](v32);
  v227 = (uint64_t)v210 - v33;
  MEMORY[0x1E0C80A78](v34);
  v219 = (uint64_t)v210 - v35;
  MEMORY[0x1E0C80A78](v36);
  v225 = (uint64_t)v210 - v37;
  MEMORY[0x1E0C80A78](v38);
  v237 = (char *)v210 - v39;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1E0C80A78](v40);
  v211 = (uint64_t)v210 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v216 = (uint64_t)v210 - v43;
  MEMORY[0x1E0C80A78](v44);
  v236 = (char *)v210 - v45;
  MEMORY[0x1E0C80A78](v46);
  v217 = (uint64_t)v210 - v47;
  MEMORY[0x1E0C80A78](v48);
  v235 = (char *)v210 - v49;
  MEMORY[0x1E0C80A78](v50);
  v234 = (char *)v210 - v51;
  MEMORY[0x1E0C80A78](v52);
  v224 = (uint64_t)v210 - v53;
  MEMORY[0x1E0C80A78](v54);
  v233 = (char *)v210 - v55;
  MEMORY[0x1E0C80A78](v56);
  v232 = (char *)v210 - v57;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v58);
  v231 = (char *)v210 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v60);
  v230 = (char *)v210 - v61;
  MEMORY[0x1E0C80A78](v62);
  v64 = (char *)v210 - v63;
  MEMORY[0x1E0C80A78](v65);
  v67 = (char *)v210 - v66;
  MEMORY[0x1E0C80A78](v68);
  v70 = (char *)v210 - v69;
  MEMORY[0x1E0C80A78](v71);
  v73 = (char *)v210 - v72;
  MEMORY[0x1E0C80A78](v74);
  v76 = (char *)v210 - v75;
  MEMORY[0x1E0C80A78](v77);
  v79 = (char *)v210 - v78;
  MEMORY[0x1E0C80A78](v80);
  v82 = (char *)v210 - v81;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  MEMORY[0x1E0C80A78](v83);
  MEMORY[0x1E0C80A78](v84);
  MEMORY[0x1E0C80A78](v85);
  MEMORY[0x1E0C80A78](v86);
  MEMORY[0x1E0C80A78](v87);
  v89 = (char *)v210 - v88;
  MEMORY[0x1E0C80A78](v90);
  v96 = (char *)v210 - v92;
  if (a4 < 3.0)
  {
    v98 = (uint64_t)v234;
    v97 = (uint64_t)v235;
    v99 = (uint64_t)v236;
    v233 = v64;
    v237 = v70;
    v100 = (uint64_t)v230;
    v101 = (uint64_t)v231;
    if (a4 < 2.0)
    {
      if (a4 < 1.0)
        return sub_1BB49C850(v242, v243, 3.0);
      v121 = v94;
      v110 = v91;
      sub_1BA57B488((uint64_t)v243, v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
      v122 = sub_1BB86DA68();
      v123 = *(_QWORD *)(v122 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v110, 1, v122) == 1)
      {
        v114 = v239;
        v113 = v242;
        goto LABEL_15;
      }
      v243 = (char *)v110;
      sub_1BA57B488(v110, v121, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
      v140 = (*(uint64_t (**)(uint64_t, uint64_t))(v123 + 88))(v121, v122);
      v141 = v240;
      v142 = v242;
      if (v140 == *MEMORY[0x1E0DB6228])
      {
        v143 = v241;
        sub_1BA57B488(v241 + v238[7], v99, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v144 = type metadata accessor for FormatURL();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 48))(v99, 1, v144) == 1)
        {
          sub_1BA502AD0(v99, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v145 = sub_1BB86C67C();
          v100 = (uint64_t)v233;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v233, 1, 1, v145);
LABEL_56:
          v178 = v143;
          v179 = v221;
          sub_1BA4C2DD8(v178, v221, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          v180 = v142;
          v181 = &v245;
LABEL_95:
          v208 = *(v181 - 32);
          sub_1BA4C2DD8(v180, v208, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
          sub_1BB86C67C();
          v209 = *(_QWORD *)(v145 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v209 + 48))(v100, 1, v145) != 1)
          {
            sub_1BA4A2E80(v208, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
            sub_1BA4A2E80(v179, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v209 + 32))(v239, v100, v145);
            goto LABEL_100;
          }
          sub_1BB49C5F4(v208, v239);
          sub_1BA4A2E80(v208, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
          sub_1BA4A2E80(v179, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          v188 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v189 = v100;
          goto LABEL_97;
        }
        v100 = (uint64_t)v233;
        sub_1BB49C5F4(v142, (uint64_t)v233);
        if (!v141)
        {
          sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v145 = sub_1BB86C67C();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v100, 0, 1, v145);
          goto LABEL_56;
        }
        goto LABEL_89;
      }
      if (v140 == *MEMORY[0x1E0DB6238])
      {
        v174 = v241;
        v99 = v216;
        sub_1BA57B488(v241 + v238[13], v216, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v175 = type metadata accessor for FormatURL();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 48))(v99, 1, v175) == 1)
        {
          sub_1BA502AD0(v99, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v145 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v100, 1, 1, v145);
LABEL_71:
          v197 = v174;
          v179 = v213;
          sub_1BA4C2DD8(v197, v213, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          v180 = v142;
          v181 = &v244;
          goto LABEL_95;
        }
        sub_1BB49C5F4(v142, v100);
        if (!v141)
        {
          sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v145 = sub_1BB86C67C();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v100, 0, 1, v145);
          goto LABEL_71;
        }
LABEL_89:
        v159 = v99;
        goto LABEL_90;
      }
      if (v140 == *MEMORY[0x1E0DB6240])
      {
        v191 = v241;
        v99 = v211;
        sub_1BA57B488(v241 + v238[16], v211, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v192 = type metadata accessor for FormatURL();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v192 - 8) + 48))(v99, 1, v192) == 1)
        {
          sub_1BA502AD0(v99, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v145 = sub_1BB86C67C();
          v100 = v101;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v101, 1, 1, v145);
        }
        else
        {
          v100 = v101;
          sub_1BB49C5F4(v142, v101);
          if (v141)
            goto LABEL_89;
          sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v145 = sub_1BB86C67C();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v101, 0, 1, v145);
        }
        v207 = v191;
        v179 = v210[0];
        sub_1BA4C2DD8(v207, v210[0], (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        v180 = v142;
        v181 = &v242;
        goto LABEL_95;
      }
      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v121, v122);
      v193 = v239;
      v194 = v142;
      goto LABEL_78;
    }
    v109 = v95;
    v110 = v93;
    sub_1BA57B488((uint64_t)v243, v93, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    v111 = sub_1BB86DA68();
    v112 = *(_QWORD *)(v111 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111) == 1)
    {
      v113 = v242;
      v114 = v239;
LABEL_15:
      sub_1BB49C5F4(v113, v114);
      v108 = v110;
      return sub_1BA502AD0(v108, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    }
    v243 = (char *)v110;
    sub_1BA57B488(v110, v109, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    v124 = (*(uint64_t (**)(uint64_t, uint64_t))(v112 + 88))(v109, v111);
    if (v124 == *MEMORY[0x1E0DB6228])
    {
      v125 = v241;
      sub_1BA57B488(v241 + v238[8], v98, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v126 = type metadata accessor for FormatURL();
      v127 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 48))(v98, 1, v126);
      v128 = v242;
      if (v127 == 1)
      {
        sub_1BA502AD0(v98, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v129 = sub_1BB86C67C();
        v67 = v73;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v73, 1, 1, v129);
LABEL_38:
        v160 = v227;
        sub_1BA4C2DD8(v125, v227, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        v161 = v128;
        v162 = v228;
        sub_1BA4C2DD8(v161, v228, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
        sub_1BB86C67C();
        v163 = *(_QWORD *)(v129 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v67, 1, v129) == 1)
        {
          sub_1BB49C5F4(v162, v239);
          sub_1BA4A2E80(v162, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
          v164 = v160;
LABEL_76:
          sub_1BA4A2E80(v164, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          v188 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v189 = (uint64_t)v67;
          goto LABEL_97;
        }
        sub_1BA4A2E80(v162, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
        v177 = v160;
        goto LABEL_87;
      }
      v67 = v73;
      v158 = v240;
      sub_1BB49C5F4(v242, (uint64_t)v73);
      v159 = v98;
      if (!v158)
      {
        sub_1BA4A2E80(v98, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v129 = sub_1BB86C67C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v73, 0, 1, v129);
        goto LABEL_38;
      }
LABEL_90:
      sub_1BA4A2E80(v159, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      goto LABEL_100;
    }
    v147 = v241;
    v146 = v242;
    if (v124 != *MEMORY[0x1E0DB6238])
    {
      if (v124 != *MEMORY[0x1E0DB6240])
      {
        (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v109, v111);
        v193 = v239;
        v194 = v146;
LABEL_78:
        sub_1BB49C5F4(v194, v193);
        goto LABEL_100;
      }
      v99 = v217;
      sub_1BA57B488(v241 + v238[17], v217, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v176 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v176 - 8) + 48))(v99, 1, v176) == 1)
      {
        sub_1BA502AD0(v99, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v129 = sub_1BB86C67C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v67, 1, 1, v129);
      }
      else
      {
        v198 = v240;
        sub_1BB49C5F4(v146, (uint64_t)v67);
        if (v198)
          goto LABEL_89;
        sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v129 = sub_1BB86C67C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v67, 0, 1, v129);
      }
      v199 = v147;
      v200 = v212;
      sub_1BA4C2DD8(v199, v212, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      v201 = v146;
      v202 = v214;
      sub_1BA4C2DD8(v201, v214, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
      sub_1BB86C67C();
      v163 = *(_QWORD *)(v129 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v67, 1, v129) == 1)
      {
        sub_1BB49C5F4(v202, v239);
        sub_1BA4A2E80(v202, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
        v164 = v200;
        goto LABEL_76;
      }
      sub_1BA4A2E80(v202, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
      v177 = v200;
LABEL_87:
      sub_1BA4A2E80(v177, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      (*(void (**)(uint64_t, char *, uint64_t))(v163 + 32))(v239, v67, v129);
      goto LABEL_100;
    }
    sub_1BA57B488(v241 + v238[14], v97, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v148 = type metadata accessor for FormatURL();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 48))(v97, 1, v148) == 1)
    {
      sub_1BA502AD0(v97, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v149 = sub_1BB86C67C();
      v150 = (uint64_t)v237;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 56))(v237, 1, 1, v149);
    }
    else
    {
      v150 = (uint64_t)v237;
      v182 = v240;
      sub_1BB49C5F4(v146, (uint64_t)v237);
      v159 = v97;
      if (v182)
        goto LABEL_90;
      sub_1BA4A2E80(v97, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v149 = sub_1BB86C67C();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 56))(v150, 0, 1, v149);
    }
    v183 = v147;
    v184 = v218;
    sub_1BA4C2DD8(v183, v218, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    v185 = v146;
    v186 = v223;
    sub_1BA4C2DD8(v185, v223, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
    sub_1BB86C67C();
    v187 = *(_QWORD *)(v149 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v187 + 48))(v150, 1, v149) == 1)
    {
      sub_1BB49C5F4(v186, v239);
      sub_1BA4A2E80(v186, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
      sub_1BA4A2E80(v184, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      v188 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      v189 = v150;
LABEL_97:
      sub_1BA502AD0(v189, (unint64_t *)&qword_1ED3D2E70, v188);
      goto LABEL_100;
    }
    sub_1BA4A2E80(v186, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
    sub_1BA4A2E80(v184, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v187 + 32))(v239, v150, v149);
LABEL_100:
    v108 = (uint64_t)v243;
    return sub_1BA502AD0(v108, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  }
  v103 = (uint64_t)v232;
  v104 = (uint64_t)v233;
  v236 = v79;
  v105 = (uint64_t)v237;
  sub_1BA57B488((uint64_t)v243, (uint64_t)v210 - v92, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  v106 = sub_1BB86DA68();
  v107 = *(_QWORD *)(v106 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v96, 1, v106) == 1)
    goto LABEL_6;
  sub_1BA57B488((uint64_t)v96, (uint64_t)v89, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  v115 = (*(uint64_t (**)(char *, uint64_t))(v107 + 88))(v89, v106);
  if (v115 == *MEMORY[0x1E0DB6228])
  {
    v243 = v96;
    v116 = v241;
    v99 = v103;
    sub_1BA57B488(v241 + v238[9], v103, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v117 = type metadata accessor for FormatURL();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 48))(v103, 1, v117) == 1)
    {
      sub_1BA502AD0(v103, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v118 = sub_1BB86C67C();
      v119 = (uint64_t)v82;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v82, 1, 1, v118);
      v120 = v242;
    }
    else
    {
      v119 = (uint64_t)v82;
      v120 = v242;
      v136 = v240;
      sub_1BB49C5F4(v242, (uint64_t)v82);
      if (v136)
        goto LABEL_89;
      sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v118 = sub_1BB86C67C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v82, 0, 1, v118);
    }
    sub_1BA4C2DD8(v116, v105, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    v137 = v229;
    sub_1BA4C2DD8(v120, v229, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
    sub_1BB86C67C();
    v138 = *(_QWORD *)(v118 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v119, 1, v118) == 1)
    {
      sub_1BB49C5F4(v137, v239);
      v139 = (uint64_t)v243;
      sub_1BA4A2E80(v137, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
      sub_1BA4A2E80(v105, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      sub_1BA502AD0(v119, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v108 = v139;
      return sub_1BA502AD0(v108, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    }
    sub_1BA4A2E80(v137, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
    sub_1BA4A2E80(v105, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v138 + 32))(v239, v119, v118);
    goto LABEL_100;
  }
  if (v115 == *MEMORY[0x1E0DB6238])
  {
    v130 = v241;
    sub_1BA57B488(v241 + v238[15], v104, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v131 = type metadata accessor for FormatURL();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 48))(v104, 1, v131) == 1)
    {
      sub_1BA502AD0(v104, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v132 = sub_1BB86C67C();
      v133 = (uint64_t)v236;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v236, 1, 1, v132);
      v134 = v240;
      v135 = v242;
LABEL_42:
      v167 = v130;
      v168 = v225;
      sub_1BA4C2DD8(v167, v225, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      v169 = v135;
      v170 = v226;
      sub_1BA4C2DD8(v169, v226, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
      sub_1BB86C67C();
      v171 = *(_QWORD *)(v132 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48))(v133, 1, v132) == 1)
      {
        sub_1BB49C5F4(v170, v239);
        if (v134)
        {
          sub_1BA4A2E80(v170, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
          sub_1BA4A2E80(v168, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          v172 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v173 = v133;
LABEL_83:
          sub_1BA502AD0(v173, (unint64_t *)&qword_1ED3D2E70, v172);
          v108 = (uint64_t)v96;
          return sub_1BA502AD0(v108, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
        }
        sub_1BA4A2E80(v170, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
        sub_1BA4A2E80(v168, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        v195 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        v196 = v133;
        goto LABEL_92;
      }
      sub_1BA4A2E80(v170, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
      sub_1BA4A2E80(v168, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v171 + 32))(v239, v133, v132);
      goto LABEL_85;
    }
    v133 = (uint64_t)v236;
    v135 = v242;
    v165 = v240;
    sub_1BB49C5F4(v242, (uint64_t)v236);
    v134 = v165;
    v166 = v104;
    if (!v165)
    {
      sub_1BA4A2E80(v104, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v132 = sub_1BB86C67C();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v133, 0, 1, v132);
      goto LABEL_42;
    }
LABEL_62:
    sub_1BA4A2E80(v166, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    v108 = (uint64_t)v96;
    return sub_1BA502AD0(v108, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  }
  v151 = v241;
  if (v115 == *MEMORY[0x1E0DB6240])
  {
    v152 = v224;
    sub_1BA57B488(v241 + v238[18], v224, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v153 = type metadata accessor for FormatURL();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 48))(v152, 1, v153) == 1)
    {
      sub_1BA502AD0(v152, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v154 = sub_1BB86C67C();
      v155 = v76;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 56))(v76, 1, 1, v154);
      v156 = v240;
      v157 = v242;
    }
    else
    {
      v155 = v76;
      v157 = v242;
      v190 = v240;
      sub_1BB49C5F4(v242, (uint64_t)v76);
      v156 = v190;
      v166 = v152;
      if (v190)
        goto LABEL_62;
      sub_1BA4A2E80(v152, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v154 = sub_1BB86C67C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 56))(v76, 0, 1, v154);
    }
    v203 = v219;
    sub_1BA4C2DD8(v151, v219, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    v204 = v157;
    v205 = v220;
    sub_1BA4C2DD8(v204, v220, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
    sub_1BB86C67C();
    v206 = *(_QWORD *)(v154 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v155, 1, v154) == 1)
    {
      sub_1BB49C5F4(v205, v239);
      if (v156)
      {
        sub_1BA4A2E80(v205, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
        sub_1BA4A2E80(v203, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        v172 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        v173 = (uint64_t)v155;
        goto LABEL_83;
      }
      sub_1BA4A2E80(v205, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
      sub_1BA4A2E80(v203, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      v195 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      v196 = (uint64_t)v155;
LABEL_92:
      sub_1BA502AD0(v196, (unint64_t *)&qword_1ED3D2E70, v195);
      goto LABEL_7;
    }
    sub_1BA4A2E80(v205, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
    sub_1BA4A2E80(v203, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    (*(void (**)(uint64_t, char *, uint64_t))(v206 + 32))(v239, v155, v154);
LABEL_85:
    v108 = (uint64_t)v96;
    return sub_1BA502AD0(v108, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  }
  (*(void (**)(char *, uint64_t))(v107 + 8))(v89, v106);
LABEL_6:
  sub_1BB49C5F4(v242, v239);
LABEL_7:
  v108 = (uint64_t)v96;
  return sub_1BA502AD0(v108, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
}

unint64_t initializeBufferWithCopyOfBuffer for FormatResource(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t *v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t *v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t *v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t *v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t *v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t *v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t *v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t *v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t *v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v206;
  uint64_t v207;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for FormatURL();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v22 = *(_QWORD *)a2;
        v23 = *(_QWORD *)(a2 + 8);
        v24 = *(_QWORD *)(a2 + 16);
        v25 = *(_BYTE *)(a2 + 24);
        sub_1BA690C00(*(_QWORD *)a2, v23, v24, v25);
        *(_QWORD *)a1 = v22;
        *(_QWORD *)(a1 + 8) = v23;
        *(_QWORD *)(a1 + 16) = v24;
        *(_BYTE *)(a1 + 24) = v25;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          v8 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v8;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v26 = sub_1BB86C67C();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
          v27 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(a1 + *(int *)(v27 + 20)) = *(_QWORD *)(a2 + *(int *)(v27 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      v28 = (int *)type metadata accessor for FormatRemoteImage();
      v29 = v28[5];
      v30 = a1 + v29;
      v31 = a2 + v29;
      v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 2)
      {
        v34 = *(_QWORD *)v31;
        v35 = *(_QWORD *)(v31 + 8);
        v36 = *(_QWORD *)(v31 + 16);
        v37 = *(_BYTE *)(v31 + 24);
        sub_1BA690C00(v34, v35, v36, v37);
        *(_QWORD *)v30 = v34;
        *(_QWORD *)(v30 + 8) = v35;
        *(_QWORD *)(v30 + 16) = v36;
        *(_BYTE *)(v30 + 24) = v37;
      }
      else
      {
        if (v32 == 1)
        {
          v33 = *(_QWORD *)(v31 + 8);
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *(_QWORD *)(v30 + 8) = v33;
          *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v38 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v30, v31, v38);
          v39 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v30 + *(int *)(v39 + 20)) = *(_QWORD *)(v31 + *(int *)(v39 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      v40 = v28[6];
      v41 = a1 + v40;
      v42 = a2 + v40;
      v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 2)
      {
        v45 = *(_QWORD *)v42;
        v46 = *(_QWORD *)(v42 + 8);
        v47 = *(_QWORD *)(v42 + 16);
        v48 = *(_BYTE *)(v42 + 24);
        sub_1BA690C00(v45, v46, v47, v48);
        *(_QWORD *)v41 = v45;
        *(_QWORD *)(v41 + 8) = v46;
        *(_QWORD *)(v41 + 16) = v47;
        *(_BYTE *)(v41 + 24) = v48;
      }
      else
      {
        if (v43 == 1)
        {
          v44 = *(_QWORD *)(v42 + 8);
          *(_QWORD *)v41 = *(_QWORD *)v42;
          *(_QWORD *)(v41 + 8) = v44;
          *(_QWORD *)(v41 + 16) = *(_QWORD *)(v42 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v49 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v41, v42, v49);
          v50 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v41 + *(int *)(v50 + 20)) = *(_QWORD *)(v42 + *(int *)(v50 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      v51 = v28[7];
      v52 = (uint64_t *)(a1 + v51);
      v53 = (uint64_t *)(a2 + v51);
      v206 = *(_QWORD *)(v6 - 8);
      v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48);
      if (v54(a2 + v51, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        v56 = swift_getEnumCaseMultiPayload();
        if (v56 == 2)
        {
          v67 = *v53;
          v68 = v53[1];
          v69 = v53[2];
          v70 = *((_BYTE *)v53 + 24);
          sub_1BA690C00(v67, v68, v69, v70);
          *v52 = v67;
          v52[1] = v68;
          v52[2] = v69;
          *((_BYTE *)v52 + 24) = v70;
        }
        else
        {
          if (v56 == 1)
          {
            v57 = v53[1];
            *v52 = *v53;
            v52[1] = v57;
            v52[2] = v53[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v71 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v52, v53, v71);
            v72 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v52 + *(int *)(v72 + 20)) = *(uint64_t *)((char *)v53 + *(int *)(v72 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v52, 0, 1, v6);
      }
      v73 = v28[8];
      v74 = (uint64_t *)(a1 + v73);
      v75 = (uint64_t *)(a2 + v73);
      if (v54(a2 + v73, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        v77 = swift_getEnumCaseMultiPayload();
        if (v77 == 2)
        {
          v79 = *v75;
          v80 = v75[1];
          v81 = v75[2];
          v82 = *((_BYTE *)v75 + 24);
          sub_1BA690C00(v79, v80, v81, v82);
          *v74 = v79;
          v74[1] = v80;
          v74[2] = v81;
          *((_BYTE *)v74 + 24) = v82;
        }
        else
        {
          if (v77 == 1)
          {
            v78 = v75[1];
            *v74 = *v75;
            v74[1] = v78;
            v74[2] = v75[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v83 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v74, v75, v83);
            v84 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v74 + *(int *)(v84 + 20)) = *(uint64_t *)((char *)v75 + *(int *)(v84 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v74, 0, 1, v6);
      }
      v85 = v28[9];
      v86 = (uint64_t *)(a1 + v85);
      v87 = (uint64_t *)(a2 + v85);
      if (v54(a2 + v85, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        v89 = swift_getEnumCaseMultiPayload();
        if (v89 == 2)
        {
          v91 = *v87;
          v92 = v87[1];
          v93 = v87[2];
          v94 = *((_BYTE *)v87 + 24);
          sub_1BA690C00(v91, v92, v93, v94);
          *v86 = v91;
          v86[1] = v92;
          v86[2] = v93;
          *((_BYTE *)v86 + 24) = v94;
        }
        else
        {
          if (v89 == 1)
          {
            v90 = v87[1];
            *v86 = *v87;
            v86[1] = v90;
            v86[2] = v87[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v95 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v86, v87, v95);
            v96 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v86 + *(int *)(v96 + 20)) = *(uint64_t *)((char *)v87 + *(int *)(v96 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v86, 0, 1, v6);
      }
      v97 = v28[10];
      v98 = (uint64_t *)(a1 + v97);
      v99 = (uint64_t *)(a2 + v97);
      if (v54(a2 + v97, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        v101 = swift_getEnumCaseMultiPayload();
        if (v101 == 2)
        {
          v103 = *v99;
          v104 = v99[1];
          v105 = v99[2];
          v106 = *((_BYTE *)v99 + 24);
          sub_1BA690C00(v103, v104, v105, v106);
          *v98 = v103;
          v98[1] = v104;
          v98[2] = v105;
          *((_BYTE *)v98 + 24) = v106;
        }
        else
        {
          if (v101 == 1)
          {
            v102 = v99[1];
            *v98 = *v99;
            v98[1] = v102;
            v98[2] = v99[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v107 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v98, v99, v107);
            v108 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v98 + *(int *)(v108 + 20)) = *(uint64_t *)((char *)v99 + *(int *)(v108 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v98, 0, 1, v6);
      }
      v109 = v28[11];
      v110 = (uint64_t *)(a1 + v109);
      v111 = (uint64_t *)(a2 + v109);
      if (v54(a2 + v109, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        v113 = swift_getEnumCaseMultiPayload();
        if (v113 == 2)
        {
          v115 = *v111;
          v116 = v111[1];
          v117 = v111[2];
          v118 = *((_BYTE *)v111 + 24);
          sub_1BA690C00(v115, v116, v117, v118);
          *v110 = v115;
          v110[1] = v116;
          v110[2] = v117;
          *((_BYTE *)v110 + 24) = v118;
        }
        else
        {
          if (v113 == 1)
          {
            v114 = v111[1];
            *v110 = *v111;
            v110[1] = v114;
            v110[2] = v111[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v119 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v110, v111, v119);
            v120 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v110 + *(int *)(v120 + 20)) = *(uint64_t *)((char *)v111 + *(int *)(v120 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v110, 0, 1, v6);
      }
      v121 = v28[12];
      v122 = (uint64_t *)(a1 + v121);
      v123 = (uint64_t *)(a2 + v121);
      if (v54(a2 + v121, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      }
      else
      {
        v125 = swift_getEnumCaseMultiPayload();
        if (v125 == 2)
        {
          v127 = *v123;
          v128 = v123[1];
          v129 = v123[2];
          v130 = *((_BYTE *)v123 + 24);
          sub_1BA690C00(v127, v128, v129, v130);
          *v122 = v127;
          v122[1] = v128;
          v122[2] = v129;
          *((_BYTE *)v122 + 24) = v130;
        }
        else
        {
          if (v125 == 1)
          {
            v126 = v123[1];
            *v122 = *v123;
            v122[1] = v126;
            v122[2] = v123[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v131 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v122, v123, v131);
            v132 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v122 + *(int *)(v132 + 20)) = *(uint64_t *)((char *)v123 + *(int *)(v132 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v122, 0, 1, v6);
      }
      v133 = v28[13];
      v134 = (uint64_t *)(a1 + v133);
      v135 = (uint64_t *)(a2 + v133);
      if (v54(a2 + v133, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
      }
      else
      {
        v137 = swift_getEnumCaseMultiPayload();
        if (v137 == 2)
        {
          v139 = *v135;
          v140 = v135[1];
          v141 = v135[2];
          v142 = *((_BYTE *)v135 + 24);
          sub_1BA690C00(v139, v140, v141, v142);
          *v134 = v139;
          v134[1] = v140;
          v134[2] = v141;
          *((_BYTE *)v134 + 24) = v142;
        }
        else
        {
          if (v137 == 1)
          {
            v138 = v135[1];
            *v134 = *v135;
            v134[1] = v138;
            v134[2] = v135[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v143 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v134, v135, v143);
            v144 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v134 + *(int *)(v144 + 20)) = *(uint64_t *)((char *)v135 + *(int *)(v144 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v134, 0, 1, v6);
      }
      v145 = v28[14];
      v146 = (uint64_t *)(a1 + v145);
      v147 = (uint64_t *)(a2 + v145);
      if (v54(a2 + v145, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
      }
      else
      {
        v149 = swift_getEnumCaseMultiPayload();
        if (v149 == 2)
        {
          v151 = *v147;
          v152 = v147[1];
          v153 = v147[2];
          v154 = *((_BYTE *)v147 + 24);
          sub_1BA690C00(v151, v152, v153, v154);
          *v146 = v151;
          v146[1] = v152;
          v146[2] = v153;
          *((_BYTE *)v146 + 24) = v154;
        }
        else
        {
          if (v149 == 1)
          {
            v150 = v147[1];
            *v146 = *v147;
            v146[1] = v150;
            v146[2] = v147[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v155 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v146, v147, v155);
            v156 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v146 + *(int *)(v156 + 20)) = *(uint64_t *)((char *)v147 + *(int *)(v156 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v146, 0, 1, v6);
      }
      v157 = v28[15];
      v158 = (uint64_t *)(a1 + v157);
      v159 = (uint64_t *)(a2 + v157);
      if (v54(a2 + v157, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
      }
      else
      {
        v161 = swift_getEnumCaseMultiPayload();
        if (v161 == 2)
        {
          v163 = *v159;
          v164 = v159[1];
          v165 = v159[2];
          v166 = *((_BYTE *)v159 + 24);
          sub_1BA690C00(v163, v164, v165, v166);
          *v158 = v163;
          v158[1] = v164;
          v158[2] = v165;
          *((_BYTE *)v158 + 24) = v166;
        }
        else
        {
          if (v161 == 1)
          {
            v162 = v159[1];
            *v158 = *v159;
            v158[1] = v162;
            v158[2] = v159[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v167 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v158, v159, v167);
            v168 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v158 + *(int *)(v168 + 20)) = *(uint64_t *)((char *)v159 + *(int *)(v168 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v158, 0, 1, v6);
      }
      v169 = v28[16];
      v170 = (uint64_t *)(a1 + v169);
      v171 = (uint64_t *)(a2 + v169);
      if (v54(a2 + v169, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
      }
      else
      {
        v173 = swift_getEnumCaseMultiPayload();
        if (v173 == 2)
        {
          v175 = *v171;
          v176 = v171[1];
          v177 = v171[2];
          v178 = *((_BYTE *)v171 + 24);
          sub_1BA690C00(v175, v176, v177, v178);
          *v170 = v175;
          v170[1] = v176;
          v170[2] = v177;
          *((_BYTE *)v170 + 24) = v178;
        }
        else
        {
          if (v173 == 1)
          {
            v174 = v171[1];
            *v170 = *v171;
            v170[1] = v174;
            v170[2] = v171[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v179 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v170, v171, v179);
            v180 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v170 + *(int *)(v180 + 20)) = *(uint64_t *)((char *)v171 + *(int *)(v180 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v170, 0, 1, v6);
      }
      v181 = v28[17];
      v182 = (uint64_t *)(a1 + v181);
      v183 = (uint64_t *)(a2 + v181);
      if (v54(a2 + v181, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v182, v183, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
      }
      else
      {
        v185 = swift_getEnumCaseMultiPayload();
        if (v185 == 2)
        {
          v187 = *v183;
          v188 = v183[1];
          v189 = v183[2];
          v190 = *((_BYTE *)v183 + 24);
          sub_1BA690C00(v187, v188, v189, v190);
          *v182 = v187;
          v182[1] = v188;
          v182[2] = v189;
          *((_BYTE *)v182 + 24) = v190;
        }
        else
        {
          if (v185 == 1)
          {
            v186 = v183[1];
            *v182 = *v183;
            v182[1] = v186;
            v182[2] = v183[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v191 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v182, v183, v191);
            v192 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v182 + *(int *)(v192 + 20)) = *(uint64_t *)((char *)v183 + *(int *)(v192 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v182, 0, 1, v6);
      }
      v193 = v28[18];
      v194 = (uint64_t *)(a1 + v193);
      v195 = (uint64_t *)(a2 + v193);
      if (v54((uint64_t)v195, 1, v6))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
      }
      else
      {
        v197 = swift_getEnumCaseMultiPayload();
        if (v197 == 2)
        {
          v199 = *v195;
          v200 = v195[1];
          v201 = v195[2];
          v202 = *((_BYTE *)v195 + 24);
          sub_1BA690C00(v199, v200, v201, v202);
          *v194 = v199;
          v194[1] = v200;
          v194[2] = v201;
          *((_BYTE *)v194 + 24) = v202;
        }
        else
        {
          if (v197 == 1)
          {
            v198 = v195[1];
            *v194 = *v195;
            v194[1] = v198;
            v194[2] = v195[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v203 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v203 - 8) + 16))(v194, v195, v203);
            v204 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v194 + *(int *)(v204 + 20)) = *(uint64_t *)((char *)v195 + *(int *)(v204 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v194, 0, 1, v6);
      }
    }
    else
    {
      type metadata accessor for FormatFontResource(0);
      v10 = swift_getEnumCaseMultiPayload();
      v11 = *(_QWORD *)a2;
      if (v10 == 1)
      {
        v12 = *(_QWORD *)(a2 + 8);
        v13 = *(_QWORD *)(a2 + 16);
        v14 = *(_BYTE *)(a2 + 24);
        sub_1BA745F88(v11, v12, v13, v14);
        *(_QWORD *)a1 = v11;
        *(_QWORD *)(a1 + 8) = v12;
        *(_QWORD *)(a1 + 16) = v13;
        *(_BYTE *)(a1 + 24) = v14;
      }
      else
      {
        v15 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = v11;
        *(_QWORD *)(a1 + 8) = v15;
        v16 = (int *)type metadata accessor for FormatRemoteFont();
        v17 = v16[5];
        v18 = a1 + v17;
        v19 = a2 + v17;
        type metadata accessor for FormatURL();
        swift_bridgeObjectRetain();
        v20 = swift_getEnumCaseMultiPayload();
        if (v20 == 2)
        {
          v59 = *(_QWORD *)v19;
          v58 = *(_QWORD *)(v19 + 8);
          v60 = *(_QWORD *)(v19 + 16);
          v207 = v60;
          v61 = *(_BYTE *)(v19 + 24);
          sub_1BA690C00(v59, v58, v60, v61);
          *(_QWORD *)v18 = v59;
          *(_QWORD *)(v18 + 8) = v58;
          *(_QWORD *)(v18 + 16) = v207;
          *(_BYTE *)(v18 + 24) = v61;
        }
        else
        {
          if (v20 == 1)
          {
            v21 = *(_QWORD *)(v19 + 8);
            *(_QWORD *)v18 = *(_QWORD *)v19;
            *(_QWORD *)(v18 + 8) = v21;
            *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            v62 = sub_1BB86C67C();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v18, v19, v62);
            v63 = type metadata accessor for FormatAbsoluteURL();
            *(_QWORD *)(v18 + *(int *)(v63 + 20)) = *(_QWORD *)(v19 + *(int *)(v63 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        *(_QWORD *)(a1 + v16[6]) = *(_QWORD *)(a2 + v16[6]);
        v64 = v16[7];
        v65 = a1 + v64;
        v66 = a2 + v64;
        *(_QWORD *)v65 = *(_QWORD *)v66;
        *(_WORD *)(v65 + 8) = *(_WORD *)(v66 + 8);
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithCopy for FormatResource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t *v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t *v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t *v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t *v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t *v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t *v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t *v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v188;
  uint64_t v189;

  if (a1 != a2)
  {
    sub_1BA4A2E80(a1, type metadata accessor for FormatResource);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = type metadata accessor for FormatURL();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v16 = *(_QWORD *)a2;
        v17 = *(_QWORD *)(a2 + 8);
        v18 = *(_QWORD *)(a2 + 16);
        v19 = *(_BYTE *)(a2 + 24);
        sub_1BA690C00(*(_QWORD *)a2, v17, v18, v19);
        *(_QWORD *)a1 = v16;
        *(_QWORD *)(a1 + 8) = v17;
        *(_QWORD *)(a1 + 16) = v18;
        *(_BYTE *)(a1 + 24) = v19;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v20 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
          v21 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(a1 + *(int *)(v21 + 20)) = *(_QWORD *)(a2 + *(int *)(v21 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      v22 = (int *)type metadata accessor for FormatRemoteImage();
      v23 = v22[5];
      v24 = a1 + v23;
      v25 = a2 + v23;
      v26 = swift_getEnumCaseMultiPayload();
      if (v26 == 2)
      {
        v27 = *(_QWORD *)v25;
        v28 = *(_QWORD *)(v25 + 8);
        v29 = *(_QWORD *)(v25 + 16);
        v30 = *(_BYTE *)(v25 + 24);
        sub_1BA690C00(v27, v28, v29, v30);
        *(_QWORD *)v24 = v27;
        *(_QWORD *)(v24 + 8) = v28;
        *(_QWORD *)(v24 + 16) = v29;
        *(_BYTE *)(v24 + 24) = v30;
      }
      else
      {
        if (v26 == 1)
        {
          *(_QWORD *)v24 = *(_QWORD *)v25;
          *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
          *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v31 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v24, v25, v31);
          v32 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v24 + *(int *)(v32 + 20)) = *(_QWORD *)(v25 + *(int *)(v32 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      v33 = v22[6];
      v34 = a1 + v33;
      v35 = a2 + v33;
      v36 = swift_getEnumCaseMultiPayload();
      if (v36 == 2)
      {
        v37 = *(_QWORD *)v35;
        v38 = *(_QWORD *)(v35 + 8);
        v39 = *(_QWORD *)(v35 + 16);
        v40 = *(_BYTE *)(v35 + 24);
        sub_1BA690C00(v37, v38, v39, v40);
        *(_QWORD *)v34 = v37;
        *(_QWORD *)(v34 + 8) = v38;
        *(_QWORD *)(v34 + 16) = v39;
        *(_BYTE *)(v34 + 24) = v40;
      }
      else
      {
        if (v36 == 1)
        {
          *(_QWORD *)v34 = *(_QWORD *)v35;
          *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
          *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v41 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v34, v35, v41);
          v42 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v34 + *(int *)(v42 + 20)) = *(_QWORD *)(v35 + *(int *)(v42 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      v43 = v22[7];
      v44 = (uint64_t *)(a1 + v43);
      v45 = (uint64_t *)(a2 + v43);
      v46 = *(_QWORD *)(v4 - 8);
      v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
      v188 = v46;
      if (v47(a2 + v43, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v49 = swift_getEnumCaseMultiPayload();
        if (v49 == 2)
        {
          v60 = *v45;
          v61 = v45[1];
          v62 = v45[2];
          v63 = *((_BYTE *)v45 + 24);
          sub_1BA690C00(v60, v61, v62, v63);
          *v44 = v60;
          v44[1] = v61;
          v46 = v188;
          v44[2] = v62;
          *((_BYTE *)v44 + 24) = v63;
        }
        else
        {
          if (v49 == 1)
          {
            *v44 = *v45;
            v44[1] = v45[1];
            v44[2] = v45[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v64 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v44, v45, v64);
            v65 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v44 + *(int *)(v65 + 20)) = *(uint64_t *)((char *)v45 + *(int *)(v65 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v44, 0, 1, v4);
      }
      v66 = v22[8];
      v67 = (uint64_t *)(a1 + v66);
      v68 = (uint64_t *)(a2 + v66);
      if (v47(a2 + v66, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        v70 = swift_getEnumCaseMultiPayload();
        if (v70 == 2)
        {
          v71 = *v68;
          v72 = v68[1];
          v73 = v68[2];
          v74 = *((_BYTE *)v68 + 24);
          sub_1BA690C00(v71, v72, v73, v74);
          *v67 = v71;
          v67[1] = v72;
          v46 = v188;
          v67[2] = v73;
          *((_BYTE *)v67 + 24) = v74;
        }
        else
        {
          if (v70 == 1)
          {
            *v67 = *v68;
            v67[1] = v68[1];
            v67[2] = v68[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v75 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v67, v68, v75);
            v76 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v67 + *(int *)(v76 + 20)) = *(uint64_t *)((char *)v68 + *(int *)(v76 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v67, 0, 1, v4);
      }
      v77 = v22[9];
      v78 = (uint64_t *)(a1 + v77);
      v79 = (uint64_t *)(a2 + v77);
      if (v47(a2 + v77, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        v81 = swift_getEnumCaseMultiPayload();
        if (v81 == 2)
        {
          v82 = *v79;
          v83 = v79[1];
          v84 = v79[2];
          v85 = *((_BYTE *)v79 + 24);
          sub_1BA690C00(v82, v83, v84, v85);
          *v78 = v82;
          v78[1] = v83;
          v46 = v188;
          v78[2] = v84;
          *((_BYTE *)v78 + 24) = v85;
        }
        else
        {
          if (v81 == 1)
          {
            *v78 = *v79;
            v78[1] = v79[1];
            v78[2] = v79[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v86 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v78, v79, v86);
            v87 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v78 + *(int *)(v87 + 20)) = *(uint64_t *)((char *)v79 + *(int *)(v87 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v78, 0, 1, v4);
      }
      v88 = v22[10];
      v89 = (uint64_t *)(a1 + v88);
      v90 = (uint64_t *)(a2 + v88);
      if (v47(a2 + v88, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        v92 = swift_getEnumCaseMultiPayload();
        if (v92 == 2)
        {
          v93 = *v90;
          v94 = v90[1];
          v95 = v90[2];
          v96 = *((_BYTE *)v90 + 24);
          sub_1BA690C00(v93, v94, v95, v96);
          *v89 = v93;
          v89[1] = v94;
          v46 = v188;
          v89[2] = v95;
          *((_BYTE *)v89 + 24) = v96;
        }
        else
        {
          if (v92 == 1)
          {
            *v89 = *v90;
            v89[1] = v90[1];
            v89[2] = v90[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v97 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v89, v90, v97);
            v98 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v89 + *(int *)(v98 + 20)) = *(uint64_t *)((char *)v90 + *(int *)(v98 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v89, 0, 1, v4);
      }
      v99 = v22[11];
      v100 = (uint64_t *)(a1 + v99);
      v101 = (uint64_t *)(a2 + v99);
      if (v47(a2 + v99, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        v103 = swift_getEnumCaseMultiPayload();
        if (v103 == 2)
        {
          v104 = *v101;
          v105 = v101[1];
          v106 = v101[2];
          v107 = *((_BYTE *)v101 + 24);
          sub_1BA690C00(v104, v105, v106, v107);
          *v100 = v104;
          v100[1] = v105;
          v46 = v188;
          v100[2] = v106;
          *((_BYTE *)v100 + 24) = v107;
        }
        else
        {
          if (v103 == 1)
          {
            *v100 = *v101;
            v100[1] = v101[1];
            v100[2] = v101[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v108 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v100, v101, v108);
            v109 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v100 + *(int *)(v109 + 20)) = *(uint64_t *)((char *)v101 + *(int *)(v109 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v100, 0, 1, v4);
      }
      v110 = v22[12];
      v111 = (uint64_t *)(a1 + v110);
      v112 = (uint64_t *)(a2 + v110);
      if (v47(a2 + v110, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      }
      else
      {
        v114 = swift_getEnumCaseMultiPayload();
        if (v114 == 2)
        {
          v115 = *v112;
          v116 = v112[1];
          v117 = v112[2];
          v118 = *((_BYTE *)v112 + 24);
          sub_1BA690C00(v115, v116, v117, v118);
          *v111 = v115;
          v111[1] = v116;
          v46 = v188;
          v111[2] = v117;
          *((_BYTE *)v111 + 24) = v118;
        }
        else
        {
          if (v114 == 1)
          {
            *v111 = *v112;
            v111[1] = v112[1];
            v111[2] = v112[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v119 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v111, v112, v119);
            v120 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v111 + *(int *)(v120 + 20)) = *(uint64_t *)((char *)v112 + *(int *)(v120 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v111, 0, 1, v4);
      }
      v121 = v22[13];
      v122 = (uint64_t *)(a1 + v121);
      v123 = (uint64_t *)(a2 + v121);
      if (v47(a2 + v121, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      }
      else
      {
        v125 = swift_getEnumCaseMultiPayload();
        if (v125 == 2)
        {
          v126 = *v123;
          v127 = v123[1];
          v128 = v123[2];
          v129 = *((_BYTE *)v123 + 24);
          sub_1BA690C00(v126, v127, v128, v129);
          *v122 = v126;
          v122[1] = v127;
          v46 = v188;
          v122[2] = v128;
          *((_BYTE *)v122 + 24) = v129;
        }
        else
        {
          if (v125 == 1)
          {
            *v122 = *v123;
            v122[1] = v123[1];
            v122[2] = v123[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v130 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v122, v123, v130);
            v131 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v122 + *(int *)(v131 + 20)) = *(uint64_t *)((char *)v123 + *(int *)(v131 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v122, 0, 1, v4);
      }
      v132 = v22[14];
      v133 = (uint64_t *)(a1 + v132);
      v134 = (uint64_t *)(a2 + v132);
      if (v47(a2 + v132, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
      }
      else
      {
        v136 = swift_getEnumCaseMultiPayload();
        if (v136 == 2)
        {
          v137 = *v134;
          v138 = v134[1];
          v139 = v134[2];
          v140 = *((_BYTE *)v134 + 24);
          sub_1BA690C00(v137, v138, v139, v140);
          *v133 = v137;
          v133[1] = v138;
          v46 = v188;
          v133[2] = v139;
          *((_BYTE *)v133 + 24) = v140;
        }
        else
        {
          if (v136 == 1)
          {
            *v133 = *v134;
            v133[1] = v134[1];
            v133[2] = v134[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v141 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v133, v134, v141);
            v142 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v133 + *(int *)(v142 + 20)) = *(uint64_t *)((char *)v134 + *(int *)(v142 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v133, 0, 1, v4);
      }
      v143 = v22[15];
      v144 = (uint64_t *)(a1 + v143);
      v145 = (uint64_t *)(a2 + v143);
      if (v47(a2 + v143, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
      }
      else
      {
        v147 = swift_getEnumCaseMultiPayload();
        if (v147 == 2)
        {
          v148 = *v145;
          v149 = v145[1];
          v150 = v145[2];
          v151 = *((_BYTE *)v145 + 24);
          sub_1BA690C00(v148, v149, v150, v151);
          *v144 = v148;
          v144[1] = v149;
          v46 = v188;
          v144[2] = v150;
          *((_BYTE *)v144 + 24) = v151;
        }
        else
        {
          if (v147 == 1)
          {
            *v144 = *v145;
            v144[1] = v145[1];
            v144[2] = v145[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v152 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v144, v145, v152);
            v153 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v144 + *(int *)(v153 + 20)) = *(uint64_t *)((char *)v145 + *(int *)(v153 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v144, 0, 1, v4);
      }
      v154 = v22[16];
      v155 = (uint64_t *)(a1 + v154);
      v156 = (uint64_t *)(a2 + v154);
      if (v47(a2 + v154, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
      }
      else
      {
        v158 = swift_getEnumCaseMultiPayload();
        if (v158 == 2)
        {
          v159 = *v156;
          v160 = v156[1];
          v161 = v156[2];
          v162 = *((_BYTE *)v156 + 24);
          sub_1BA690C00(v159, v160, v161, v162);
          *v155 = v159;
          v155[1] = v160;
          v46 = v188;
          v155[2] = v161;
          *((_BYTE *)v155 + 24) = v162;
        }
        else
        {
          if (v158 == 1)
          {
            *v155 = *v156;
            v155[1] = v156[1];
            v155[2] = v156[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v163 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v155, v156, v163);
            v164 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v155 + *(int *)(v164 + 20)) = *(uint64_t *)((char *)v156 + *(int *)(v164 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v155, 0, 1, v4);
      }
      v165 = v22[17];
      v166 = (uint64_t *)(a1 + v165);
      v167 = (uint64_t *)(a2 + v165);
      if (v47(a2 + v165, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
      }
      else
      {
        v169 = swift_getEnumCaseMultiPayload();
        if (v169 == 2)
        {
          v170 = *v167;
          v171 = v167[1];
          v172 = v167[2];
          v173 = *((_BYTE *)v167 + 24);
          sub_1BA690C00(v170, v171, v172, v173);
          *v166 = v170;
          v166[1] = v171;
          v46 = v188;
          v166[2] = v172;
          *((_BYTE *)v166 + 24) = v173;
        }
        else
        {
          if (v169 == 1)
          {
            *v166 = *v167;
            v166[1] = v167[1];
            v166[2] = v167[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v174 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v166, v167, v174);
            v175 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v166 + *(int *)(v175 + 20)) = *(uint64_t *)((char *)v167 + *(int *)(v175 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v166, 0, 1, v4);
      }
      v176 = v22[18];
      v177 = (uint64_t *)(a1 + v176);
      v178 = (uint64_t *)(a2 + v176);
      if (v47((uint64_t)v178, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
      }
      else
      {
        v180 = swift_getEnumCaseMultiPayload();
        if (v180 == 2)
        {
          v181 = *v178;
          v182 = v178[1];
          v183 = v178[2];
          v184 = *((_BYTE *)v178 + 24);
          sub_1BA690C00(v181, v182, v183, v184);
          *v177 = v181;
          v177[1] = v182;
          v177[2] = v183;
          *((_BYTE *)v177 + 24) = v184;
        }
        else
        {
          if (v180 == 1)
          {
            *v177 = *v178;
            v177[1] = v178[1];
            v177[2] = v178[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            v185 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v177, v178, v185);
            v186 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)v177 + *(int *)(v186 + 20)) = *(uint64_t *)((char *)v178 + *(int *)(v186 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v177, 0, 1, v4);
      }
    }
    else
    {
      type metadata accessor for FormatFontResource(0);
      v6 = swift_getEnumCaseMultiPayload();
      v7 = *(_QWORD *)a2;
      if (v6 == 1)
      {
        v8 = *(_QWORD *)(a2 + 8);
        v9 = *(_QWORD *)(a2 + 16);
        v10 = *(_BYTE *)(a2 + 24);
        sub_1BA745F88(v7, v8, v9, v10);
        *(_QWORD *)a1 = v7;
        *(_QWORD *)(a1 + 8) = v8;
        *(_QWORD *)(a1 + 16) = v9;
        *(_BYTE *)(a1 + 24) = v10;
      }
      else
      {
        *(_QWORD *)a1 = v7;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v11 = (int *)type metadata accessor for FormatRemoteFont();
        v12 = v11[5];
        v13 = a1 + v12;
        v14 = a2 + v12;
        type metadata accessor for FormatURL();
        swift_bridgeObjectRetain();
        v15 = swift_getEnumCaseMultiPayload();
        if (v15 == 2)
        {
          v51 = *(_QWORD *)v14;
          v50 = *(_QWORD *)(v14 + 8);
          v52 = *(_QWORD *)(v14 + 16);
          v189 = v52;
          v53 = *(_BYTE *)(v14 + 24);
          sub_1BA690C00(v51, v50, v52, v53);
          *(_QWORD *)v13 = v51;
          *(_QWORD *)(v13 + 8) = v50;
          *(_QWORD *)(v13 + 16) = v189;
          *(_BYTE *)(v13 + 24) = v53;
        }
        else
        {
          if (v15 == 1)
          {
            *(_QWORD *)v13 = *(_QWORD *)v14;
            *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
            *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            v54 = sub_1BB86C67C();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v13, v14, v54);
            v55 = type metadata accessor for FormatAbsoluteURL();
            *(_QWORD *)(v13 + *(int *)(v55 + 20)) = *(_QWORD *)(v14 + *(int *)(v55 + 20));
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        *(_QWORD *)(a1 + v11[6]) = *(_QWORD *)(a2 + v11[6]);
        v56 = v11[7];
        v57 = a1 + v56;
        v58 = (uint64_t *)(a2 + v56);
        v59 = *v58;
        *(_WORD *)(v57 + 8) = *((_WORD *)v58 + 4);
        *(_QWORD *)v57 = v59;
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for FormatResource(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      v6 = sub_1BB86C67C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 20));
      swift_storeEnumTagMultiPayload();
    }
    v8 = (int *)type metadata accessor for FormatRemoteImage();
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      v17 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
      v18 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v10[*(int *)(v18 + 20)] = *(_QWORD *)&v11[*(int *)(v18 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    v19 = v8[6];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (swift_getEnumCaseMultiPayload())
    {
      v22 = *(_QWORD *)(v4 - 8);
      memcpy(v20, v21, *(_QWORD *)(v22 + 64));
    }
    else
    {
      v23 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
      v24 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v20[*(int *)(v24 + 20)] = *(_QWORD *)&v21[*(int *)(v24 + 20)];
      swift_storeEnumTagMultiPayload();
      v22 = *(_QWORD *)(v4 - 8);
    }
    v25 = v8[7];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    if (v28((char *)a2 + v25, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v26, v27, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v35 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v26, v27, v35);
        v36 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v26[*(int *)(v36 + 20)] = *(_QWORD *)&v27[*(int *)(v36 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v4);
    }
    v37 = v8[8];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    if (v28((char *)a2 + v37, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v38, v39, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v41 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v38, v39, v41);
        v42 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v38[*(int *)(v42 + 20)] = *(_QWORD *)&v39[*(int *)(v42 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v38, 0, 1, v4);
    }
    v43 = v8[9];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    if (v28((char *)a2 + v43, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v44, v45, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v47 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v44, v45, v47);
        v48 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v44[*(int *)(v48 + 20)] = *(_QWORD *)&v45[*(int *)(v48 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v44, 0, 1, v4);
    }
    v49 = v8[10];
    v50 = (char *)a1 + v49;
    v51 = (char *)a2 + v49;
    if (v28((char *)a2 + v49, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v50, v51, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v53 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v50, v51, v53);
        v54 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v50[*(int *)(v54 + 20)] = *(_QWORD *)&v51[*(int *)(v54 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v50, 0, 1, v4);
    }
    v55 = v8[11];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    if (v28((char *)a2 + v55, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v56, v57, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v59 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v56, v57, v59);
        v60 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v56[*(int *)(v60 + 20)] = *(_QWORD *)&v57[*(int *)(v60 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v56, 0, 1, v4);
    }
    v61 = v8[12];
    v62 = (char *)a1 + v61;
    v63 = (char *)a2 + v61;
    if (v28((char *)a2 + v61, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v62, v63, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v65 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v62, v63, v65);
        v66 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v62[*(int *)(v66 + 20)] = *(_QWORD *)&v63[*(int *)(v66 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v62, 0, 1, v4);
    }
    v67 = v8[13];
    v68 = (char *)a1 + v67;
    v69 = (char *)a2 + v67;
    if (v28((char *)a2 + v67, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v68, v69, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v71 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v68, v69, v71);
        v72 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v68[*(int *)(v72 + 20)] = *(_QWORD *)&v69[*(int *)(v72 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v68, 0, 1, v4);
    }
    v73 = v8[14];
    v74 = (char *)a1 + v73;
    v75 = (char *)a2 + v73;
    if (v28((char *)a2 + v73, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v74, v75, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v77 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v74, v75, v77);
        v78 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v74[*(int *)(v78 + 20)] = *(_QWORD *)&v75[*(int *)(v78 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v74, 0, 1, v4);
    }
    v79 = v8[15];
    v80 = (char *)a1 + v79;
    v81 = (char *)a2 + v79;
    if (v28((char *)a2 + v79, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v80, v81, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v83 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v80, v81, v83);
        v84 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v80[*(int *)(v84 + 20)] = *(_QWORD *)&v81[*(int *)(v84 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v80, 0, 1, v4);
    }
    v85 = v8[16];
    v86 = (char *)a1 + v85;
    v87 = (char *)a2 + v85;
    if (v28((char *)a2 + v85, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v86, v87, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v89 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v86, v87, v89);
        v90 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v86[*(int *)(v90 + 20)] = *(_QWORD *)&v87[*(int *)(v90 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v86, 0, 1, v4);
    }
    v91 = v8[17];
    v92 = (char *)a1 + v91;
    v93 = (char *)a2 + v91;
    if (v28((char *)a2 + v91, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v92, v93, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v95 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v92, v93, v95);
        v96 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v92[*(int *)(v96 + 20)] = *(_QWORD *)&v93[*(int *)(v96 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v92, 0, 1, v4);
    }
    v97 = v8[18];
    v98 = (char *)a1 + v97;
    v99 = (char *)a2 + v97;
    if (v28(v99, 1, v4))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v98, v99, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v101 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v98, v99, v101);
        v102 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v98[*(int *)(v102 + 20)] = *(_QWORD *)&v99[*(int *)(v102 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v98, 0, 1, v4);
    }
  }
  else
  {
    v5 = type metadata accessor for FormatFontResource(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v12 = (int *)type metadata accessor for FormatRemoteFont();
      v13 = v12[5];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = type metadata accessor for FormatURL();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v30 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v14, v15, v30);
        v31 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v14[*(int *)(v31 + 20)] = *(_QWORD *)&v15[*(int *)(v31 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      *(_QWORD *)((char *)a1 + v12[6]) = *(_QWORD *)((char *)a2 + v12[6]);
      v32 = v12[7];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_WORD *)v33 + 4) = *((_WORD *)v34 + 4);
      swift_storeEnumTagMultiPayload();
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for FormatResource(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatResource);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = type metadata accessor for FormatURL();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      }
      else
      {
        v6 = sub_1BB86C67C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)((char *)a1 + *(int *)(v7 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 20));
        swift_storeEnumTagMultiPayload();
      }
      v8 = (int *)type metadata accessor for FormatRemoteImage();
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      }
      else
      {
        v17 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
        v18 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v10[*(int *)(v18 + 20)] = *(_QWORD *)&v11[*(int *)(v18 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      v19 = v8[6];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (swift_getEnumCaseMultiPayload())
      {
        v22 = *(_QWORD *)(v4 - 8);
        memcpy(v20, v21, *(_QWORD *)(v22 + 64));
      }
      else
      {
        v23 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
        v24 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v20[*(int *)(v24 + 20)] = *(_QWORD *)&v21[*(int *)(v24 + 20)];
        swift_storeEnumTagMultiPayload();
        v22 = *(_QWORD *)(v4 - 8);
      }
      v25 = v8[7];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      if (v28((char *)a2 + v25, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v26, v27, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v35 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v26, v27, v35);
          v36 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v26[*(int *)(v36 + 20)] = *(_QWORD *)&v27[*(int *)(v36 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v4);
      }
      v37 = v8[8];
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      if (v28((char *)a2 + v37, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v38, v39, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v41 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v38, v39, v41);
          v42 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v38[*(int *)(v42 + 20)] = *(_QWORD *)&v39[*(int *)(v42 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v38, 0, 1, v4);
      }
      v43 = v8[9];
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      if (v28((char *)a2 + v43, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v44, v45, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v47 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v44, v45, v47);
          v48 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v44[*(int *)(v48 + 20)] = *(_QWORD *)&v45[*(int *)(v48 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v44, 0, 1, v4);
      }
      v49 = v8[10];
      v50 = (char *)a1 + v49;
      v51 = (char *)a2 + v49;
      if (v28((char *)a2 + v49, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v50, v51, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v53 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v50, v51, v53);
          v54 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v50[*(int *)(v54 + 20)] = *(_QWORD *)&v51[*(int *)(v54 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v50, 0, 1, v4);
      }
      v55 = v8[11];
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      if (v28((char *)a2 + v55, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v56, v57, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v59 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v56, v57, v59);
          v60 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v56[*(int *)(v60 + 20)] = *(_QWORD *)&v57[*(int *)(v60 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v56, 0, 1, v4);
      }
      v61 = v8[12];
      v62 = (char *)a1 + v61;
      v63 = (char *)a2 + v61;
      if (v28((char *)a2 + v61, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v62, v63, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v65 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v62, v63, v65);
          v66 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v62[*(int *)(v66 + 20)] = *(_QWORD *)&v63[*(int *)(v66 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v62, 0, 1, v4);
      }
      v67 = v8[13];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      if (v28((char *)a2 + v67, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v68, v69, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v71 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v68, v69, v71);
          v72 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v68[*(int *)(v72 + 20)] = *(_QWORD *)&v69[*(int *)(v72 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v68, 0, 1, v4);
      }
      v73 = v8[14];
      v74 = (char *)a1 + v73;
      v75 = (char *)a2 + v73;
      if (v28((char *)a2 + v73, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v74, v75, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v77 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v74, v75, v77);
          v78 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v74[*(int *)(v78 + 20)] = *(_QWORD *)&v75[*(int *)(v78 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v74, 0, 1, v4);
      }
      v79 = v8[15];
      v80 = (char *)a1 + v79;
      v81 = (char *)a2 + v79;
      if (v28((char *)a2 + v79, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v80, v81, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v83 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v80, v81, v83);
          v84 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v80[*(int *)(v84 + 20)] = *(_QWORD *)&v81[*(int *)(v84 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v80, 0, 1, v4);
      }
      v85 = v8[16];
      v86 = (char *)a1 + v85;
      v87 = (char *)a2 + v85;
      if (v28((char *)a2 + v85, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v86, v87, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v89 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v86, v87, v89);
          v90 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v86[*(int *)(v90 + 20)] = *(_QWORD *)&v87[*(int *)(v90 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v86, 0, 1, v4);
      }
      v91 = v8[17];
      v92 = (char *)a1 + v91;
      v93 = (char *)a2 + v91;
      if (v28((char *)a2 + v91, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v92, v93, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v95 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v92, v93, v95);
          v96 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v92[*(int *)(v96 + 20)] = *(_QWORD *)&v93[*(int *)(v96 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v92, 0, 1, v4);
      }
      v97 = v8[18];
      v98 = (char *)a1 + v97;
      v99 = (char *)a2 + v97;
      if (v28(v99, 1, v4))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v98, v99, *(_QWORD *)(v22 + 64));
        }
        else
        {
          v101 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v98, v99, v101);
          v102 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v98[*(int *)(v102 + 20)] = *(_QWORD *)&v99[*(int *)(v102 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v98, 0, 1, v4);
      }
    }
    else
    {
      v5 = type metadata accessor for FormatFontResource(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v12 = (int *)type metadata accessor for FormatRemoteFont();
        v13 = v12[5];
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = type metadata accessor for FormatURL();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          v30 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v14, v15, v30);
          v31 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v14[*(int *)(v31 + 20)] = *(_QWORD *)&v15[*(int *)(v31 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        *(_QWORD *)((char *)a1 + v12[6]) = *(_QWORD *)((char *)a2 + v12[6]);
        v32 = v12[7];
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        *(_QWORD *)v33 = *(_QWORD *)v34;
        *((_WORD *)v33 + 4) = *((_WORD *)v34 + 4);
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t initializeBufferWithCopyOfBuffer for FormatFontResource(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *(_QWORD *)(a2 + 8);
      v9 = *(_QWORD *)(a2 + 16);
      v10 = *(_BYTE *)(a2 + 24);
      sub_1BA745F88(v7, v8, v9, v10);
      *(_QWORD *)a1 = v7;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v9;
      *(_BYTE *)(a1 + 24) = v10;
    }
    else
    {
      v12 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = v7;
      *(_QWORD *)(a1 + 8) = v12;
      v13 = (int *)type metadata accessor for FormatRemoteFont();
      v14 = v13[5];
      v15 = a1 + v14;
      v16 = a2 + v14;
      type metadata accessor for FormatURL();
      swift_bridgeObjectRetain();
      v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 2)
      {
        v19 = *(_QWORD *)v16;
        v20 = *(_QWORD *)(v16 + 8);
        v21 = *(_QWORD *)(v16 + 16);
        v22 = *(_BYTE *)(v16 + 24);
        sub_1BA690C00(v19, v20, v21, v22);
        *(_QWORD *)v15 = v19;
        *(_QWORD *)(v15 + 8) = v20;
        *(_QWORD *)(v15 + 16) = v21;
        *(_BYTE *)(v15 + 24) = v22;
      }
      else
      {
        if (v17 == 1)
        {
          v18 = *(_QWORD *)(v16 + 8);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *(_QWORD *)(v15 + 8) = v18;
          *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v23 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v15, v16, v23);
          v24 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v15 + *(int *)(v24 + 20)) = *(_QWORD *)(v16 + *(int *)(v24 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)(a1 + v13[6]) = *(_QWORD *)(a2 + v13[6]);
      v25 = v13[7];
      v26 = a1 + v25;
      v27 = a2 + v25;
      *(_QWORD *)v26 = *(_QWORD *)v27;
      *(_WORD *)(v26 + 8) = *(_WORD *)(v27 + 8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FormatFontResource(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_1BA6F3F50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_bridgeObjectRelease();
  v3 = a1 + *(int *)(type metadata accessor for FormatRemoteFont() + 20);
  type metadata accessor for FormatURL();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
    return sub_1BA5A7EF8(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    type metadata accessor for FormatAbsoluteURL();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatFontResource(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = *(_QWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 16);
    v8 = *(_BYTE *)(a2 + 24);
    sub_1BA745F88(v5, v6, v7, v8);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = v8;
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v9;
    v10 = (int *)type metadata accessor for FormatRemoteFont();
    v11 = v10[5];
    v12 = a1 + v11;
    v13 = a2 + v11;
    type metadata accessor for FormatURL();
    swift_bridgeObjectRetain();
    v14 = swift_getEnumCaseMultiPayload();
    if (v14 == 2)
    {
      v16 = *(_QWORD *)v13;
      v17 = *(_QWORD *)(v13 + 8);
      v18 = *(_QWORD *)(v13 + 16);
      v19 = *(_BYTE *)(v13 + 24);
      sub_1BA690C00(v16, v17, v18, v19);
      *(_QWORD *)v12 = v16;
      *(_QWORD *)(v12 + 8) = v17;
      *(_QWORD *)(v12 + 16) = v18;
      *(_BYTE *)(v12 + 24) = v19;
    }
    else
    {
      if (v14 == 1)
      {
        v15 = *(_QWORD *)(v13 + 8);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *(_QWORD *)(v12 + 8) = v15;
        *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        v20 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v12, v13, v20);
        v21 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)(v12 + *(int *)(v21 + 20)) = *(_QWORD *)(v13 + *(int *)(v21 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(a1 + v10[6]) = *(_QWORD *)(a2 + v10[6]);
    v22 = v10[7];
    v23 = a1 + v22;
    v24 = a2 + v22;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_WORD *)(v23 + 8) = *(_WORD *)(v24 + 8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FormatFontResource(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_1BA4A2E80(a1, type metadata accessor for FormatFontResource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      v6 = *(_QWORD *)(a2 + 8);
      v7 = *(_QWORD *)(a2 + 16);
      v8 = *(_BYTE *)(a2 + 24);
      sub_1BA745F88(v5, v6, v7, v8);
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v6;
      *(_QWORD *)(a1 + 16) = v7;
      *(_BYTE *)(a1 + 24) = v8;
    }
    else
    {
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v9 = (int *)type metadata accessor for FormatRemoteFont();
      v10 = v9[5];
      v11 = a1 + v10;
      v12 = a2 + v10;
      type metadata accessor for FormatURL();
      swift_bridgeObjectRetain();
      v13 = swift_getEnumCaseMultiPayload();
      if (v13 == 2)
      {
        v14 = *(_QWORD *)v12;
        v15 = *(_QWORD *)(v12 + 8);
        v16 = *(_QWORD *)(v12 + 16);
        v17 = *(_BYTE *)(v12 + 24);
        sub_1BA690C00(v14, v15, v16, v17);
        *(_QWORD *)v11 = v14;
        *(_QWORD *)(v11 + 8) = v15;
        *(_QWORD *)(v11 + 16) = v16;
        *(_BYTE *)(v11 + 24) = v17;
      }
      else
      {
        if (v13 == 1)
        {
          *(_QWORD *)v11 = *(_QWORD *)v12;
          *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
          *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          v18 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
          v19 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)(v11 + *(int *)(v19 + 20)) = *(_QWORD *)(v12 + *(int *)(v19 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)(a1 + v9[6]) = *(_QWORD *)(a2 + v9[6]);
      v20 = v9[7];
      v21 = a1 + v20;
      v22 = (uint64_t *)(a2 + v20);
      v23 = *v22;
      *(_WORD *)(v21 + 8) = *((_WORD *)v22 + 4);
      *(_QWORD *)v21 = v23;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for FormatFontResource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for FormatRemoteFont();
    v7 = v6[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v11 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      v12 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v8[*(int *)(v12 + 20)] = *(_QWORD *)&v9[*(int *)(v12 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
    v13 = v6[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_WORD *)v14 + 4) = *((_WORD *)v15 + 4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for FormatFontResource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatFontResource);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = (int *)type metadata accessor for FormatRemoteFont();
      v7 = v6[5];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for FormatURL();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        v11 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
        v12 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v8[*(int *)(v12 + 20)] = *(_QWORD *)&v9[*(int *)(v12 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
      v13 = v6[7];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_WORD *)v14 + 4) = *((_WORD *)v15 + 4);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t FeedGroupConfigSidecarConfigPlacement.subgroupIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupConfigSidecarConfigPlacement.subtypes.getter()
{
  return swift_bridgeObjectRetain();
}

void FeedGroupConfigSidecarConfigPlacement.position.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

unint64_t sub_1BB4A2BF4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7365707974627573;
  if (*v0 != 1)
    v1 = 0x6E6F697469736F70;
  if (*v0)
    return v1;
  else
    return 0xD000000000000012;
}

uint64_t sub_1BB4A2C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB4A38A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB4A2C78()
{
  sub_1BB4A2E78();
  return sub_1BB874710();
}

uint64_t sub_1BB4A2CA0()
{
  sub_1BB4A2E78();
  return sub_1BB87471C();
}

uint64_t FeedGroupConfigSidecarConfigPlacement.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  char v17;
  char v18;
  char v19;

  sub_1BB4A3170(0, &qword_1ED3AB620, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  v12 = *(_QWORD *)(v1 + 16);
  v15 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB4A2E78();
  sub_1BB8746C8();
  v19 = 0;
  v8 = v13;
  sub_1BB87417C();
  if (!v8)
  {
    v9 = v15;
    v14 = v12;
    v18 = 1;
    sub_1BA6D249C();
    sub_1BA585B78((unint64_t *)&qword_1ED39DA10, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v17 = v9;
    v16 = 2;
    sub_1BB4A2EBC();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB4A2E78()
{
  unint64_t result;

  result = qword_1ED3A52D8;
  if (!qword_1ED3A52D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91CD30, &type metadata for FeedGroupConfigSidecarConfigPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A52D8);
  }
  return result;
}

unint64_t sub_1BB4A2EBC()
{
  unint64_t result;

  result = qword_1ED3A52C0;
  if (!qword_1ED3A52C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupConfigSidecarConfigPlacementPosition, &type metadata for FeedGroupConfigSidecarConfigPlacementPosition);
    atomic_store(result, (unint64_t *)&qword_1ED3A52C0);
  }
  return result;
}

uint64_t FeedGroupConfigSidecarConfigPlacement.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;

  sub_1BB4A3170(0, &qword_1ED3AB3E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB4A2E78();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v19 = v10;
  sub_1BA6D249C();
  v23 = 1;
  sub_1BA585B78((unint64_t *)&qword_1ED3B95F0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v13 = v20;
  v21 = 2;
  sub_1BB4A31CC();
  v18 = v13;
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = v22;
  v15 = v18;
  *(_QWORD *)a2 = v19;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v15;
  *(_BYTE *)(a2 + 24) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BB4A3170(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB4A2E78();
    v7 = a3(a1, &type metadata for FeedGroupConfigSidecarConfigPlacement.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB4A31CC()
{
  unint64_t result;

  result = qword_1ED3A52D0;
  if (!qword_1ED3A52D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupConfigSidecarConfigPlacementPosition, &type metadata for FeedGroupConfigSidecarConfigPlacementPosition);
    atomic_store(result, (unint64_t *)&qword_1ED3A52D0);
  }
  return result;
}

uint64_t sub_1BB4A3210@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupConfigSidecarConfigPlacement.init(from:)(a1, a2);
}

uint64_t sub_1BB4A3224(_QWORD *a1)
{
  return FeedGroupConfigSidecarConfigPlacement.encode(to:)(a1);
}

NewsFeed::FeedGroupConfigSidecarConfigPlacementPosition_optional __swiftcall FeedGroupConfigSidecarConfigPlacementPosition.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedGroupConfigSidecarConfigPlacementPosition_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedGroupConfigSidecarConfigPlacementPosition.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7265746661;
  if (*v0 != 1)
    v1 = 0x6563616C706572;
  if (*v0)
    return v1;
  else
    return 0x65726F666562;
}

uint64_t sub_1BB4A32E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB80453C(*a1, *a2);
}

unint64_t sub_1BB4A32F4()
{
  unint64_t result;

  result = qword_1EF2C4F30;
  if (!qword_1EF2C4F30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupConfigSidecarConfigPlacementPosition, &type metadata for FeedGroupConfigSidecarConfigPlacementPosition);
    atomic_store(result, (unint64_t *)&qword_1EF2C4F30);
  }
  return result;
}

uint64_t sub_1BB4A3338()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB4A33D0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB4A3444()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedGroupConfigSidecarConfigPlacementPosition_optional sub_1BB4A34D8(Swift::String *a1)
{
  return FeedGroupConfigSidecarConfigPlacementPosition.init(rawValue:)(*a1);
}

void sub_1BB4A34E4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x7265746661;
  if (v2 != 1)
  {
    v5 = 0x6563616C706572;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x65726F666562;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB4A353C()
{
  sub_1BB4A39F8();
  return sub_1BB872D60();
}

uint64_t sub_1BB4A3598()
{
  sub_1BB4A39F8();
  return sub_1BB872D0C();
}

uint64_t initializeWithCopy for FeedGroupConfigSidecarConfigPlacement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedGroupConfigSidecarConfigPlacement(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for FeedGroupConfigSidecarConfigPlacement(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for FeedGroupConfigSidecarConfigPlacement()
{
  return &type metadata for FeedGroupConfigSidecarConfigPlacement;
}

ValueMetadata *type metadata accessor for FeedGroupConfigSidecarConfigPlacementPosition()
{
  return &type metadata for FeedGroupConfigSidecarConfigPlacementPosition;
}

uint64_t _s8NewsFeed45FeedGroupConfigSidecarConfigPlacementPositionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB4A3750 + 4 * byte_1BB91CAA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB4A3784 + 4 * byte_1BB91CAA0[v4]))();
}

uint64_t sub_1BB4A3784(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4A378C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB4A3794);
  return result;
}

uint64_t sub_1BB4A37A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB4A37A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB4A37AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB4A37B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupConfigSidecarConfigPlacement.CodingKeys()
{
  return &type metadata for FeedGroupConfigSidecarConfigPlacement.CodingKeys;
}

unint64_t sub_1BB4A37D4()
{
  unint64_t result;

  result = qword_1EF2C4F38;
  if (!qword_1EF2C4F38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91CD08, &type metadata for FeedGroupConfigSidecarConfigPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C4F38);
  }
  return result;
}

unint64_t sub_1BB4A381C()
{
  unint64_t result;

  result = qword_1ED3A52E8;
  if (!qword_1ED3A52E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91CC78, &type metadata for FeedGroupConfigSidecarConfigPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A52E8);
  }
  return result;
}

unint64_t sub_1BB4A3864()
{
  unint64_t result;

  result = qword_1ED3A52E0;
  if (!qword_1ED3A52E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91CCA0, &type metadata for FeedGroupConfigSidecarConfigPlacement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A52E0);
  }
  return result;
}

uint64_t sub_1BB4A38A8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001BB98E910 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365707974627573 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1BB4A39F8()
{
  unint64_t result;

  result = qword_1ED3A52C8;
  if (!qword_1ED3A52C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupConfigSidecarConfigPlacementPosition, &type metadata for FeedGroupConfigSidecarConfigPlacementPosition);
    atomic_store(result, (unint64_t *)&qword_1ED3A52C8);
  }
  return result;
}

NewsFeed::URLScheme __swiftcall URLScheme.init(rawValue:)(NewsFeed::URLScheme rawValue)
{
  NewsFeed::URLScheme *v1;

  *v1 = rawValue;
  return rawValue;
}

void static URLScheme.newsAsset.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7373612D7377656ELL;
  a1[1] = 0xEA00000000007465;
}

void static URLScheme.newsWebArchive.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001BB960F90;
}

uint64_t URLScheme.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *sub_1BB4A3AB0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

ValueMetadata *type metadata accessor for URLScheme()
{
  return &type metadata for URLScheme;
}

uint64_t FeedClusteringResult.InventoryItem.headlineCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FeedClusteringResult.InventoryItem.hardpaywallHeadlineCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t FeedClusteringResult.channelClusteringResult.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringResult.topicClusteringResult.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringResult.inventoryItemsByTagID.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::FeedClusteringResult __swiftcall FeedClusteringResult.init(channelClusteringResult:topicClusteringResult:inventoryItemsByTagID:)(NewsFeed::FeedChannelClusteringResult channelClusteringResult, NewsFeed::FeedTopicClusteringResult topicClusteringResult, Swift::OpaquePointer inventoryItemsByTagID)
{
  uint64_t v3;
  NewsFeed::FeedClusteringResult result;

  *(_QWORD *)v3 = *(_QWORD *)channelClusteringResult.clusters._rawValue;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)topicClusteringResult.clusters._rawValue;
  *(_QWORD *)(v3 + 24) = topicClusteringResult.orphanedHeadlines._rawValue;
  result.topicClusteringResult = topicClusteringResult;
  result.inventoryItemsByTagID = inventoryItemsByTagID;
  result.channelClusteringResult = channelClusteringResult;
  return result;
}

unint64_t static FeedClusteringResult.empty.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  unint64_t result;

  v2 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA8F409C(MEMORY[0x1E0DEE9D8]);
  *a1 = v2;
  a1[1] = v2;
  a1[2] = v2;
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FeedClusteringResult()
{
  return &type metadata for FeedClusteringResult;
}

ValueMetadata *type metadata accessor for FeedClusteringResult.InventoryItem()
{
  return &type metadata for FeedClusteringResult.InventoryItem;
}

unint64_t sub_1BB4A3B88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - v3;
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7E8428(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BA7F0A80((uint64_t)v4);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39E238, (uint64_t (*)(uint64_t))sub_1BB4A3E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BB4A3E70();
    v11 = v10;
    v12 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
    v13 = (v12 + 32) & ~v12;
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
    v15 = (_QWORD *)(v14 + v13);
    v16 = v14 + v13 + *(int *)(v11 + 48);
    *v15 = 0x6465654661746164;
    v15[1] = 0xE800000000000000;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v16, v8, v5);
    v9 = sub_1BA8F3434(v14);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

uint64_t sub_1BB4A3D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed29WebEmbedConfigurationProvider_locale;
  v2 = sub_1BB86C9DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB4A3DB4()
{
  return type metadata accessor for WebEmbedConfigurationProvider();
}

uint64_t type metadata accessor for WebEmbedConfigurationProvider()
{
  uint64_t result;

  result = qword_1ED39BC28;
  if (!qword_1ED39BC28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB4A3DF8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C9DC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1BB4A3E70()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED39E218)
  {
    sub_1BB86C67C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED39E218);
  }
}

id sub_1BB4A3ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14)
{
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  int v56;

  v54 = a5;
  v55 = a8;
  v56 = a6;
  v51 = a3;
  v52 = a4;
  v53 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v47 - v23;
  v25 = sub_1BB86C67C();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v47 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1BB86C9DC();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v47 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1BB4A3B88(a1);
  v34 = *(_QWORD *)(a7 + OBJC_IVAR____TtC8NewsFeed29WebEmbedConfigurationProvider_storeFront + 8);
  v49 = *(_QWORD *)(a7 + OBJC_IVAR____TtC8NewsFeed29WebEmbedConfigurationProvider_storeFront);
  v50 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v32, a7 + OBJC_IVAR____TtC8NewsFeed29WebEmbedConfigurationProvider_locale, v29);
  v35 = *(_QWORD *)(a7 + OBJC_IVAR____TtC8NewsFeed29WebEmbedConfigurationProvider_contentEnvironment + 8);
  v48 = *(_QWORD *)(a7 + OBJC_IVAR____TtC8NewsFeed29WebEmbedConfigurationProvider_contentEnvironment);
  v36 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = objc_msgSend(v36, sel_sharedApplication);
  v38 = objc_msgSend(v37, sel_preferredContentSizeCategory);

  v39 = sub_1BB8729A0();
  v41 = v40;

  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, v51, v25);
  sub_1BA7E8428(v52, (uint64_t)v24);
  v42 = objc_allocWithZone(MEMORY[0x1E0D977B8]);
  v43 = v53;
  swift_unknownObjectRetain();
  v44 = v54;
  v45 = sub_1BB1BCE14(a9, a10, a11, a12, a13, a14, v49, v34, (uint64_t)v32, v48, v35, v39, v41, v50, v43, (uint64_t)v28, (uint64_t)v24, (uint64_t)v44, v56,
          v42);
  swift_unknownObjectRelease();

  return v45;
}

uint64_t sub_1BB4A4184(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  for (i = 48; ; i += 24)
  {
    v5 = *(_QWORD *)(a1 + i);
    v6 = *(_QWORD *)(v5 + 16);
    v7 = v3[2];
    v8 = v7 + v6;
    if (__OFADD__(v7, v6))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v8 <= v3[3] >> 1)
    {
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v7 <= v8)
        v10 = v7 + v6;
      else
        v10 = v7;
      v3 = sub_1BB38C984(isUniquelyReferenced_nonNull_native, v10, 1, v3);
      if (*(_QWORD *)(v5 + 16))
      {
LABEL_14:
        v11 = v3[2];
        if ((v3[3] >> 1) - v11 < v6)
          goto LABEL_28;
        v12 = (unint64_t)&v3[8 * v11 + 4];
        if (v5 + 32 < v12 + (v6 << 6) && v12 < v5 + 32 + (v6 << 6))
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v6)
        {
          v14 = v3[2];
          v15 = __OFADD__(v14, v6);
          v16 = v14 + v6;
          if (v15)
            goto LABEL_29;
          v3[2] = v16;
        }
        goto LABEL_4;
      }
    }
    if (v6)
      goto LABEL_27;
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB4A4338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  char isUniquelyReferenced_nonNull_native;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t result;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v52 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for FormatWebEmbed.Resolved();
  v56 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v57 = (uint64_t)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v55 = (uint64_t)v41 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v41 - v9;
  v44 = *(_QWORD *)(a1 + 16);
  if (!v44)
    return MEMORY[0x1E0DEE9D8];
  v41[0] = a1;
  v41[1] = v1;
  v43 = a1 + 32;
  swift_bridgeObjectRetain();
  v11 = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v54 = v11;
    v13 = (_QWORD *)(v43 + (v11 << 6));
    v14 = v13[4];
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v51 = v12;
      v16 = v13[1];
      v17 = v13[2];
      v18 = v13[3];
      v20 = v13[5];
      v19 = v13[6];
      v53 = v13[7];
      v21 = v14 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
      v49 = v16;
      swift_bridgeObjectRetain();
      v48 = v17;
      swift_bridgeObjectRetain();
      v47 = v18;
      swift_bridgeObjectRetain();
      v50 = v14;
      swift_bridgeObjectRetain_n();
      v46 = v20;
      swift_bridgeObjectRetain();
      v45 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = *(_QWORD *)(v52 + 72);
      v23 = MEMORY[0x1E0DEE9D8];
      do
      {
        sub_1BA4C2DD8(v21, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          v24 = v55;
          sub_1BA5193C4((uint64_t)v4, v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
          sub_1BA5193C4(v24, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
          sub_1BA5193C4((uint64_t)v10, v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v23 = sub_1BA6C1FFC(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
          v26 = *(_QWORD *)(v23 + 16);
          v25 = *(_QWORD *)(v23 + 24);
          if (v26 >= v25 >> 1)
            v23 = sub_1BA6C1FFC(v25 > 1, v26 + 1, 1, v23);
          *(_QWORD *)(v23 + 16) = v26 + 1;
          sub_1BA5193C4(v57, v23+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
        }
        else
        {
          sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
        }
        v21 += v22;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v12 = v51;
    }
    else
    {
      v23 = MEMORY[0x1E0DEE9D8];
    }
    v27 = *(_QWORD *)(v23 + 16);
    v28 = *(_QWORD *)(v12 + 16);
    v29 = v28 + v27;
    if (__OFADD__(v28, v27))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v29 <= *(_QWORD *)(v12 + 24) >> 1)
    {
      if (*(_QWORD *)(v23 + 16))
        goto LABEL_26;
    }
    else
    {
      if (v28 <= v29)
        v31 = v28 + v27;
      else
        v31 = v28;
      v12 = sub_1BA6C1FFC(isUniquelyReferenced_nonNull_native, v31, 1, v12);
      if (*(_QWORD *)(v23 + 16))
      {
LABEL_26:
        v32 = *(_QWORD *)(v12 + 16);
        if ((*(_QWORD *)(v12 + 24) >> 1) - v32 < v27)
          goto LABEL_40;
        v33 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
        v34 = *(_QWORD *)(v56 + 72);
        v35 = v12 + v33 + v34 * v32;
        if (v23 + v33 < v35 + v34 * v27 && v35 < v23 + v33 + v34 * v27)
          goto LABEL_42;
        swift_arrayInitWithCopy();
        if (v27)
        {
          v37 = *(_QWORD *)(v12 + 16);
          v38 = __OFADD__(v37, v27);
          v39 = v37 + v27;
          if (v38)
            goto LABEL_41;
          *(_QWORD *)(v12 + 16) = v39;
        }
        goto LABEL_4;
      }
    }
    if (v27)
      goto LABEL_39;
LABEL_4:
    v11 = v54 + 1;
    swift_bridgeObjectRelease();
    if (v11 == v44)
    {
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB4A47D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  char isUniquelyReferenced_nonNull_native;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t result;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v52 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for FormatCustomItem.Resolved();
  v56 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v57 = (uint64_t)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v55 = (uint64_t)v41 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v41 - v9;
  v44 = *(_QWORD *)(a1 + 16);
  if (!v44)
    return MEMORY[0x1E0DEE9D8];
  v41[0] = a1;
  v41[1] = v1;
  v43 = a1 + 32;
  swift_bridgeObjectRetain();
  v11 = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v54 = v11;
    v13 = (_QWORD *)(v43 + (v11 << 6));
    v14 = v13[4];
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v51 = v12;
      v16 = v13[1];
      v17 = v13[2];
      v18 = v13[3];
      v20 = v13[5];
      v19 = v13[6];
      v53 = v13[7];
      v21 = v14 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
      v49 = v16;
      swift_bridgeObjectRetain();
      v48 = v17;
      swift_bridgeObjectRetain();
      v47 = v18;
      swift_bridgeObjectRetain();
      v50 = v14;
      swift_bridgeObjectRetain_n();
      v46 = v20;
      swift_bridgeObjectRetain();
      v45 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = *(_QWORD *)(v52 + 72);
      v23 = MEMORY[0x1E0DEE9D8];
      do
      {
        sub_1BA4C2DD8(v21, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
        if (swift_getEnumCaseMultiPayload() == 7)
        {
          v24 = v55;
          sub_1BA5193C4((uint64_t)v4, v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
          sub_1BA5193C4(v24, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
          sub_1BA5193C4((uint64_t)v10, v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v23 = sub_1BB392D88(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
          v26 = *(_QWORD *)(v23 + 16);
          v25 = *(_QWORD *)(v23 + 24);
          if (v26 >= v25 >> 1)
            v23 = sub_1BB392D88(v25 > 1, v26 + 1, 1, v23);
          *(_QWORD *)(v23 + 16) = v26 + 1;
          sub_1BA5193C4(v57, v23+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
        }
        else
        {
          sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
        }
        v21 += v22;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v12 = v51;
    }
    else
    {
      v23 = MEMORY[0x1E0DEE9D8];
    }
    v27 = *(_QWORD *)(v23 + 16);
    v28 = *(_QWORD *)(v12 + 16);
    v29 = v28 + v27;
    if (__OFADD__(v28, v27))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v29 <= *(_QWORD *)(v12 + 24) >> 1)
    {
      if (*(_QWORD *)(v23 + 16))
        goto LABEL_26;
    }
    else
    {
      if (v28 <= v29)
        v31 = v28 + v27;
      else
        v31 = v28;
      v12 = sub_1BB392D88(isUniquelyReferenced_nonNull_native, v31, 1, v12);
      if (*(_QWORD *)(v23 + 16))
      {
LABEL_26:
        v32 = *(_QWORD *)(v12 + 16);
        if ((*(_QWORD *)(v12 + 24) >> 1) - v32 < v27)
          goto LABEL_40;
        v33 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
        v34 = *(_QWORD *)(v56 + 72);
        v35 = v12 + v33 + v34 * v32;
        if (v23 + v33 < v35 + v34 * v27 && v35 < v23 + v33 + v34 * v27)
          goto LABEL_42;
        swift_arrayInitWithCopy();
        if (v27)
        {
          v37 = *(_QWORD *)(v12 + 16);
          v38 = __OFADD__(v37, v27);
          v39 = v37 + v27;
          if (v38)
            goto LABEL_41;
          *(_QWORD *)(v12 + 16) = v39;
        }
        goto LABEL_4;
      }
    }
    if (v27)
      goto LABEL_39;
LABEL_4:
    v11 = v54 + 1;
    swift_bridgeObjectRelease();
    if (v11 == v44)
    {
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t FormatContentSubgroup.ResolvedContainer.options.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_1BA6D78DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BB4A4D10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  BOOL v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[11];

  v2 = v1[1];
  v3 = v1[3];
  v4 = v1[5];
  v5 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  v8 = v1[9];
  v27 = v1[2];
  v28 = *v1;
  v26 = v1[4];
  sub_1BA6D78DC();
  v9 = v7;
  swift_bridgeObjectRelease();
  v10 = v6;
  swift_bridgeObjectRelease();
  v11 = v5;
  swift_bridgeObjectRelease();
  v12 = v4;
  swift_bridgeObjectRelease();
  swift_release();
  v13 = v3;
  swift_bridgeObjectRelease();
  v14 = v2;
  swift_bridgeObjectRelease();
  v15 = v8;
  v16 = *(_QWORD *)(v8 + 16);
  if (v16)
  {
    v17 = (uint64_t *)(v8 + 32);
    v18 = v16 - 1;
    do
    {
      v19 = *v17++;
      v30[10] = v19;
      v30[0] = v28;
      v30[1] = v14;
      v30[2] = v27;
      v30[3] = v13;
      v30[4] = v26;
      v30[5] = v12;
      v30[6] = v11;
      v30[7] = v10;
      v30[8] = v9;
      v30[9] = v15;
      v20 = v15;
      v21 = sub_1BB17355C(a1, v30);
      v22 = v21;
      v24 = v18-- != 0;
      if ((v21 & 1) == 0)
        break;
      v15 = v20;
    }
    while (v24);
  }
  else
  {
    v22 = 1;
  }
  swift_bridgeObjectRelease();
  return v22 & 1;
}

uint64_t FormatContentSubgroup.ResolvedContainer.issues.getter()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[9];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v38 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v35 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v2 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = v0[1];
  v4 = v0[3];
  v5 = v0[5];
  v7 = v0[6];
  v6 = v0[7];
  v9 = v0[8];
  v8 = v0[9];
  v10 = v0[4] & 0x7FFFFFFFFFFFFFFFLL;
  v27[8] = v3;
  sub_1BA6D78DC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v11 = v10;
  v12 = sub_1BB4A4184(v9);
  swift_bridgeObjectRelease();
  v40 = v6;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v40;
  v40 = MEMORY[0x1E0DEE9D8];
  v29 = *(_QWORD *)(v13 + 16);
  if (v29)
  {
    v27[3] = v6;
    v27[4] = v7;
    v27[2] = v8;
    v27[5] = v11;
    v27[6] = v5;
    v27[7] = v4;
    v28 = v13 + 32;
    v27[1] = v13;
    swift_bridgeObjectRetain();
    v14 = 0;
    do
    {
      v16 = (_QWORD *)(v28 + (v14 << 6));
      v17 = v16[1];
      v18 = v16[2];
      v19 = v16[3];
      v20 = v16[4];
      v21 = v16[6];
      v22 = v16[7];
      v36 = v14;
      v37 = v22;
      v15 = MEMORY[0x1E0DEE9D8];
      v39 = MEMORY[0x1E0DEE9D8];
      v23 = *(_QWORD *)(v20 + 16);
      if (v23)
      {
        v24 = v20 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
        v34 = v17;
        swift_bridgeObjectRetain();
        v32 = v18;
        swift_bridgeObjectRetain();
        v31 = v19;
        swift_bridgeObjectRetain();
        v33 = v20;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v30 = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = *(_QWORD *)(v35 + 72);
        do
        {
          sub_1BA4C2DD8(v24, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            MEMORY[0x1BCCE36AC]();
            if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
          }
          else
          {
            sub_1BA4A2E80((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          v24 += v25;
          --v23;
        }
        while (v23);
        v15 = v39;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v14 = v36 + 1;
      sub_1BB384000(v15);
    }
    while (v14 != v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.ResolvedContainer.puzzles.getter()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[9];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v38 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v35 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v2 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = v0[1];
  v4 = v0[3];
  v5 = v0[5];
  v7 = v0[6];
  v6 = v0[7];
  v9 = v0[8];
  v8 = v0[9];
  v10 = v0[4] & 0x7FFFFFFFFFFFFFFFLL;
  v27[8] = v3;
  sub_1BA6D78DC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v11 = v10;
  v12 = sub_1BB4A4184(v9);
  swift_bridgeObjectRelease();
  v40 = v6;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v40;
  v40 = MEMORY[0x1E0DEE9D8];
  v29 = *(_QWORD *)(v13 + 16);
  if (v29)
  {
    v27[3] = v6;
    v27[4] = v7;
    v27[2] = v8;
    v27[5] = v11;
    v27[6] = v5;
    v27[7] = v4;
    v28 = v13 + 32;
    v27[1] = v13;
    swift_bridgeObjectRetain();
    v14 = 0;
    do
    {
      v16 = (_QWORD *)(v28 + (v14 << 6));
      v17 = v16[1];
      v18 = v16[2];
      v19 = v16[3];
      v20 = v16[4];
      v21 = v16[6];
      v22 = v16[7];
      v36 = v14;
      v37 = v22;
      v15 = MEMORY[0x1E0DEE9D8];
      v39 = MEMORY[0x1E0DEE9D8];
      v23 = *(_QWORD *)(v20 + 16);
      if (v23)
      {
        v24 = v20 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
        v34 = v17;
        swift_bridgeObjectRetain();
        v32 = v18;
        swift_bridgeObjectRetain();
        v31 = v19;
        swift_bridgeObjectRetain();
        v33 = v20;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v30 = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = *(_QWORD *)(v35 + 72);
        do
        {
          sub_1BA4C2DD8(v24, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            MEMORY[0x1BCCE36AC]();
            if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
          }
          else
          {
            sub_1BA4A2E80((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          v24 += v25;
          --v23;
        }
        while (v23);
        v15 = v39;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v14 = v36 + 1;
      sub_1BA4AF900(v15);
    }
    while (v14 != v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.ResolvedContainer.tags.getter()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[9];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v38 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v35 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v2 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = v0[1];
  v4 = v0[3];
  v5 = v0[5];
  v7 = v0[6];
  v6 = v0[7];
  v9 = v0[8];
  v8 = v0[9];
  v10 = v0[4] & 0x7FFFFFFFFFFFFFFFLL;
  v27[8] = v3;
  sub_1BA6D78DC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v11 = v10;
  v12 = sub_1BB4A4184(v9);
  swift_bridgeObjectRelease();
  v40 = v6;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v40;
  v40 = MEMORY[0x1E0DEE9D8];
  v29 = *(_QWORD *)(v13 + 16);
  if (v29)
  {
    v27[3] = v6;
    v27[4] = v7;
    v27[2] = v8;
    v27[5] = v11;
    v27[6] = v5;
    v27[7] = v4;
    v28 = v13 + 32;
    v27[1] = v13;
    swift_bridgeObjectRetain();
    v14 = 0;
    do
    {
      v16 = (_QWORD *)(v28 + (v14 << 6));
      v17 = v16[1];
      v18 = v16[2];
      v19 = v16[3];
      v20 = v16[4];
      v21 = v16[6];
      v22 = v16[7];
      v36 = v14;
      v37 = v22;
      v15 = MEMORY[0x1E0DEE9D8];
      v39 = MEMORY[0x1E0DEE9D8];
      v23 = *(_QWORD *)(v20 + 16);
      if (v23)
      {
        v24 = v20 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
        v34 = v17;
        swift_bridgeObjectRetain();
        v32 = v18;
        swift_bridgeObjectRetain();
        v31 = v19;
        swift_bridgeObjectRetain();
        v33 = v20;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v30 = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = *(_QWORD *)(v35 + 72);
        do
        {
          sub_1BA4C2DD8(v24, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 2)
          {
            MEMORY[0x1BCCE36AC]();
            if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
          }
          else
          {
            sub_1BA4A2E80((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          v24 += v25;
          --v23;
        }
        while (v23);
        v15 = v39;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v14 = v36 + 1;
      sub_1BB383FF4(v15);
    }
    while (v14 != v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.ResolvedContainer.customItems.getter()
{
  return sub_1BB4A5B68(sub_1BB4A47D0);
}

uint64_t sub_1BB4A5B68(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  sub_1BA6D78DC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v4 = sub_1BB4A4184(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t FormatContentSubgroup.ResolvedContainer.feedItemIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  sub_1BA6D78DC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v3 = sub_1BB4A4184(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v1 + 56;
    do
    {
      v5 += 64;
      v6 = FormatContentSlot.Resolved.feedItemIdentifiers.getter();
      sub_1BA67FB48(v6);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
    v7 = v10;
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  v8 = sub_1BA6E43EC(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t FormatContentSubgroup.ResolvedContainer.itemAuxiliaries.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  sub_1BA6D78DC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v3 = sub_1BB4A4184(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v9 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v1 + 48;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA604764(v8);
      v5 += 64;
      --v4;
    }
    while (v4);
    swift_release();
    swift_bridgeObjectRelease_n();
    v6 = v9;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t FormatContentSubgroup.ResolvedContainer.compilerOptionIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BA6D78DC();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BAB483C4(v0);
  swift_bridgeObjectRelease();
  v2 = sub_1BA6E43EC(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BB4A62BC(char *a1, char *a2)
{
  return sub_1BB7F99AC(*a1, *a2);
}

uint64_t sub_1BB4A62C8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB4A6334()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB4A6374()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB4A63DC@<X0>(char *a1@<X8>)
{
  return sub_1BA4E2654(a1);
}

uint64_t sub_1BB4A63E8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB4A6448()
{
  sub_1BA517138();
  return sub_1BB874710();
}

uint64_t sub_1BB4A6470()
{
  sub_1BA517138();
  return sub_1BB87471C();
}

uint64_t sub_1BB4A6498()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BA6D78DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t FormatContentSubgroup.ResolvedContainer.selectors.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1BA6D78DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t FormatContentSubgroup.ResolvedContainer.filters.getter()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 72);
  sub_1BA6D78DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t FormatContentSubgroup.ResolvedContainer.placeholders.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)();
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD v35[10];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;

  v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v46 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v48 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = v0[1];
  v4 = v0[3];
  v5 = v0[5];
  v7 = v0[6];
  v6 = v0[7];
  v9 = v0[8];
  v8 = v0[9];
  v35[7] = v0[4] & 0x7FFFFFFFFFFFFFFFLL;
  sub_1BA6D78DC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v10 = sub_1BB4A4184(v9);
  swift_bridgeObjectRelease();
  v49 = v6;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v49;
  v49 = MEMORY[0x1E0DEE9D8];
  v37 = *(_QWORD *)(v11 + 16);
  if (v37)
  {
    v35[2] = v8;
    v35[3] = v7;
    v35[4] = v5;
    v35[5] = v4;
    v35[6] = v3;
    v36 = v11 + 32;
    v35[1] = v11;
    swift_bridgeObjectRetain();
    v12 = 0;
    v13 = type metadata accessor for FormatContentSlotItemObject.Resolved;
    v35[8] = v9;
    v35[9] = v6;
    do
    {
      v14 = (_QWORD *)(v36 + (v12 << 6));
      v15 = v14[4];
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        v45 = v12;
        v17 = v14[2];
        v18 = v14[3];
        v19 = v14[5];
        v20 = v14[6];
        v21 = v14[7];
        v22 = v15 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
        v43 = v14[1];
        swift_bridgeObjectRetain();
        v42 = v17;
        swift_bridgeObjectRetain();
        v41 = v18;
        swift_bridgeObjectRetain();
        v44 = v15;
        swift_bridgeObjectRetain_n();
        v40 = v19;
        swift_bridgeObjectRetain();
        v39 = v20;
        swift_bridgeObjectRetain();
        v38 = v21;
        swift_bridgeObjectRetain();
        v23 = *(_QWORD *)(v46 + 72);
        v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v25 = (uint64_t)v48;
        v47 = v23;
        do
        {
          sub_1BA4C2DD8(v22, v25, (uint64_t (*)(_QWORD))v13);
          if (swift_getEnumCaseMultiPayload() <= 7)
          {
            sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))v13);
          }
          else
          {
            v26 = v13;
            v27 = v1;
            v29 = *(_QWORD *)v25;
            v28 = *(_QWORD *)(v25 + 8);
            v30 = *(_BYTE *)(v25 + 16);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v24 = sub_1BB38F5F4(0, v24[2] + 1, 1, v24);
            v32 = v24[2];
            v31 = v24[3];
            if (v32 >= v31 >> 1)
              v24 = sub_1BB38F5F4((_QWORD *)(v31 > 1), v32 + 1, 1, v24);
            v24[2] = v32 + 1;
            v33 = &v24[3 * v32];
            v33[4] = v29;
            v33[5] = v28;
            *((_BYTE *)v33 + 48) = v30;
            v1 = v27;
            v13 = v26;
            v23 = v47;
            v25 = (uint64_t)v48;
          }
          v22 += v23;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v12 = v45;
      }
      else
      {
        v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      ++v12;
      sub_1BA6C5F88((uint64_t)v24);
    }
    while (v12 != v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return v49;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.ResolvedContainer.placeholderIdentifiers.getter()
{
  uint64_t v0;

  sub_1BA6D78DC();
  v0 = FormatContentSubgroup.Resolved.placeholderIdentifiers.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BB4A6BE8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB4A6BF4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *_s17ResolvedContainerOwca(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  sub_1BA6D78DC();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  sub_1BA7F4208();
  return a1;
}

_OWORD *_s17ResolvedContainerOwta(_OWORD *a1, _OWORD *a2)
{
  __int128 v3;
  __int128 v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  sub_1BA7F4208();
  return a1;
}

uint64_t sub_1BB4A6D54(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32) >> 63;
}

uint64_t sub_1BB4A6D60(uint64_t result)
{
  *(_QWORD *)(result + 32) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1BB4A6D70(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 32) = *(_QWORD *)(result + 32) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *_s17ResolvedContainerO10CodingTypeOMa()
{
  return &_s17ResolvedContainerO10CodingTypeON;
}

ValueMetadata *_s17ResolvedContainerO10CodingKeysOMa()
{
  return &_s17ResolvedContainerO10CodingKeysON;
}

unint64_t sub_1BB4A6DA8()
{
  unint64_t result;

  result = qword_1EF2C4F40;
  if (!qword_1EF2C4F40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91D0AC, &_s17ResolvedContainerO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2C4F40);
  }
  return result;
}

unint64_t sub_1BB4A6DF0()
{
  unint64_t result;

  result = qword_1EF2C4F48;
  if (!qword_1EF2C4F48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91D14C, &_s17ResolvedContainerO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2C4F48);
  }
  return result;
}

uint64_t FeedGroupRegion.__allocating_init(groupIdentifier:pluginModel:feedGroupDebug:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  FeedGroupRegion.init(groupIdentifier:pluginModel:feedGroupDebug:)(a1, a2, a3, a4);
  return v8;
}

uint64_t FeedGroupRegion.__allocating_init<A>(items:groupIdentifier:groupItems:namespace:kind:slots:layoutOrder:groupDebug:feedGroupBindingOptions:selectors:feedGroupContextIdentifier:feedGroupRevision:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int128 *a7, uint64_t a8, char *a9, uint64_t a10, __int128 *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  v17 = sub_1BA6D1A38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t FeedGroupRegion.feedGroupIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupRegion.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupRegion.namespace.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupRegion.feedItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupRegion.feedGroupItems.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FeedGroupRegion.feedGroupKind.getter@<X0>(unint64_t *a1@<X8>)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = v1[10];
  v3 = v1[11];
  v4 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_1BA6A4928(v2);
}

uint64_t FeedGroupRegion.feedGroupContextIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGroupRegion.feedSlots.getter()
{
  return swift_bridgeObjectRetain();
}

void FeedGroupRegion.layoutOrder.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 128);
}

uint64_t FeedGroupRegion.feedGroupDebug.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA809900(v1 + 136, a1);
}

__n128 FeedGroupRegion.feedGroupBindingOptions.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;
  __int128 v6;
  __n128 result;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 224);
  v4 = *(_BYTE *)(v1 + 232);
  v5 = *(_BYTE *)(v1 + 233);
  v6 = *(_OWORD *)(v1 + 192);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)(a1 + 16) = v6;
  result = *(__n128 *)(v1 + 208);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 56) = v4;
  *(_BYTE *)(a1 + 57) = v5;
  return result;
}

__n128 FeedGroupRegion.feedGroupBindingOptions.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v6 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_BYTE *)a1 + 56);
  v4 = *((_BYTE *)a1 + 57);
  swift_beginAccess();
  *(_OWORD *)(v1 + 176) = v8;
  *(_OWORD *)(v1 + 192) = v7;
  result = v6;
  *(__n128 *)(v1 + 208) = v6;
  *(_QWORD *)(v1 + 224) = v2;
  *(_BYTE *)(v1 + 232) = v3;
  *(_BYTE *)(v1 + 233) = v4;
  return result;
}

uint64_t (*FeedGroupRegion.feedGroupBindingOptions.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FeedGroupRegion.feedSelectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupRegion.__allocating_init<A>(items:namespace:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  swift_allocObject();
  v12 = sub_1BB4A770C(a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t FeedGroupRegion.init<A>(items:namespace:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  v6 = sub_1BB4A770C(a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t FeedGroupRegion.init<A>(items:groupIdentifier:groupItems:namespace:kind:slots:layoutOrder:groupDebug:feedGroupBindingOptions:selectors:feedGroupContextIdentifier:feedGroupRevision:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int128 *a7, uint64_t a8, char *a9, uint64_t a10, __int128 *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  v17 = sub_1BA6D1CEC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t FeedGroupRegion.__allocating_init(identifier:groupIdentifier:groupItems:namespace:kind:slots:layoutOrder:groupDebug:feedGroupBindingOptions:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __int128 *a8, uint64_t a9, char *a10, uint64_t a11, __int128 *a12, uint64_t a13)
{
  uint64_t v21;

  swift_allocObject();
  v21 = sub_1BB4A798C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t FeedGroupRegion.init(identifier:groupIdentifier:groupItems:namespace:kind:slots:layoutOrder:groupDebug:feedGroupBindingOptions:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __int128 *a8, uint64_t a9, char *a10, uint64_t a11, __int128 *a12, uint64_t a13)
{
  uint64_t v13;

  v13 = sub_1BB4A798C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t FeedGroupRegion.init(groupIdentifier:pluginModel:feedGroupDebug:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v4;
  *(_OWORD *)(v4 + 217) = 0u;
  *(_OWORD *)(v4 + 192) = 0u;
  *(_OWORD *)(v4 + 208) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  v8 = (_OWORD *)(v4 + 176);
  *(_BYTE *)(v4 + 233) = 1;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = _s5TeaUI11PluginModelC8NewsFeedE15debugIdentifierSSvg_0();
  *(_QWORD *)(v4 + 40) = v9;
  sub_1BB86F5C8();
  sub_1BA6F0168();
  *(_QWORD *)(v4 + 104) = sub_1BB873B58();
  *(_QWORD *)(v4 + 112) = v10;
  sub_1BA4B07F0(0, &qword_1ED3A1738, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedItem(0) - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v13 + v12) = a3;
  swift_storeEnumTagMultiPayload();
  v14 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v5 + 64) = v13;
  *(_QWORD *)(v5 + 72) = v14;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v5 + 56) = 0xE000000000000000;
  *(_QWORD *)(v5 + 88) = 0;
  *(_QWORD *)(v5 + 96) = 0;
  *(_QWORD *)(v5 + 80) = 10;
  *(_QWORD *)(v5 + 120) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v5 + 128) = 1;
  sub_1BA809900(a4, v5 + 136);
  swift_beginAccess();
  *(_OWORD *)(v5 + 217) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *v8 = 0u;
  *(_BYTE *)(v5 + 233) = 1;
  sub_1BA554698(a4);
  *(_QWORD *)(v5 + 240) = v14;
  return v5;
}

uint64_t sub_1BB4A74A0(_OWORD *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  _OWORD v16[9];

  v7 = a1[6];
  v8 = a1[8];
  v16[7] = a1[7];
  v16[8] = v8;
  v9 = a1[3];
  v16[2] = a1[2];
  v16[3] = v9;
  v10 = a1[4];
  v16[5] = a1[5];
  v16[6] = v7;
  v16[4] = v10;
  v11 = a1[1];
  v16[0] = *a1;
  v16[1] = v11;
  v12 = *a4;
  *(_OWORD *)(v4 + 192) = 0u;
  *(_OWORD *)(v4 + 208) = 0u;
  *(_OWORD *)(v4 + 217) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(_BYTE *)(v4 + 233) = 1;
  v13 = v16[0];
  *(_OWORD *)(v4 + 16) = v16[0];
  *(_OWORD *)(v4 + 32) = v13;
  swift_bridgeObjectRetain_n();
  sub_1BA8C89E4((uint64_t)v16);
  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 72) = a3;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0xE000000000000000;
  *(_QWORD *)(v4 + 96) = 0;
  *(_QWORD *)(v4 + 104) = 0;
  *(_QWORD *)(v4 + 80) = 6;
  *(_QWORD *)(v4 + 88) = 0;
  v14 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 112) = 0xE000000000000000;
  *(_QWORD *)(v4 + 120) = v14;
  *(_BYTE *)(v4 + 128) = v12;
  *(_OWORD *)(v4 + 136) = 0u;
  *(_OWORD *)(v4 + 152) = 0u;
  *(_QWORD *)(v4 + 168) = 0;
  swift_beginAccess();
  *(_OWORD *)(v4 + 217) = 0u;
  *(_OWORD *)(v4 + 192) = 0u;
  *(_OWORD *)(v4 + 208) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(_BYTE *)(v4 + 233) = 1;
  *(_QWORD *)(v4 + 240) = MEMORY[0x1E0DEE9E8];
  return v4;
}

uint64_t sub_1BB4A75B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v5 = v4;
  v21 = a4;
  v9 = sub_1BB86C8E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v5 + 217) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_BYTE *)(v5 + 233) = 1;
  sub_1BB86C8D4();
  v13 = sub_1BB86C8C8();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v12, v9);
  *(_QWORD *)(v5 + 16) = v13;
  *(_QWORD *)(v5 + 24) = v15;
  sub_1BB86C8D4();
  v17 = sub_1BB86C8C8();
  v19 = v18;
  v16(v12, v9);
  *(_QWORD *)(v5 + 32) = v17;
  *(_QWORD *)(v5 + 40) = v19;
  *(_QWORD *)(v5 + 64) = a1;
  *(_QWORD *)(v5 + 72) = a2;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v5 + 56) = 0xE000000000000000;
  *(_QWORD *)(v5 + 96) = 0;
  *(_QWORD *)(v5 + 104) = 0;
  *(_QWORD *)(v5 + 80) = 6;
  *(_QWORD *)(v5 + 88) = 0;
  *(_QWORD *)(v5 + 112) = 0xE000000000000000;
  *(_QWORD *)(v5 + 120) = a3;
  *(_BYTE *)(v5 + 128) = 0;
  *(_OWORD *)(v5 + 136) = 0u;
  *(_OWORD *)(v5 + 152) = 0u;
  *(_QWORD *)(v5 + 168) = 0;
  swift_beginAccess();
  *(_OWORD *)(v5 + 217) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_BYTE *)(v5 + 233) = 1;
  *(_QWORD *)(v5 + 240) = v21;
  return v5;
}

uint64_t sub_1BB4A770C(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v26;
  uint64_t v29;
  __int128 v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[16];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v7 = v6;
  v30 = *a4;
  v29 = *((_QWORD *)a4 + 2);
  *(_OWORD *)(v6 + 176) = 0u;
  *(_OWORD *)(v6 + 192) = 0u;
  *(_OWORD *)(v6 + 208) = 0u;
  *(_OWORD *)(v6 + 217) = 0u;
  *(_BYTE *)(v6 + 233) = 1;
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v40 = a2;
  v41 = a3;
  swift_bridgeObjectRetain_n();
  sub_1BB872AFC(v11);
  v39 = a1;
  v37 = a5;
  v38 = a6;
  v12 = sub_1BB872EE0();
  v26 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v12);
  v39 = sub_1BAA52384((void (*)(char *, char *))sub_1BB4A7B7C, (uint64_t)v36, v12, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v26, MEMORY[0x1E0DEDD18], v13);
  sub_1BA6D249C();
  sub_1BA50AD30((unint64_t *)&qword_1ED3B95D0, 255, (uint64_t (*)(uint64_t))sub_1BA6D249C, MEMORY[0x1E0DEAF20]);
  sub_1BB872904();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v14);
  swift_bridgeObjectRelease();
  v15 = v41;
  *(_QWORD *)(v6 + 32) = v40;
  *(_QWORD *)(v6 + 40) = v15;
  v40 = a1;
  v34 = a5;
  v35 = a6;
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v12);
  v40 = sub_1BB872BF8();
  v16 = sub_1BB872904();
  v18 = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 104) = v16;
  *(_QWORD *)(v7 + 112) = v18;
  v40 = a1;
  v32 = a5;
  v33 = a6;
  v19 = type metadata accessor for FeedItem(0);
  v21 = sub_1BAA52384((void (*)(char *, char *))sub_1BB4A7B90, (uint64_t)v31, v12, v19, MEMORY[0x1E0DEDCE8], v26, MEMORY[0x1E0DEDD18], v20);
  v22 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v7 + 64) = v21;
  *(_QWORD *)(v7 + 72) = v22;
  *(_QWORD *)(v7 + 48) = a2;
  *(_QWORD *)(v7 + 56) = a3;
  *(_OWORD *)(v7 + 80) = v30;
  *(_QWORD *)(v7 + 96) = v29;
  *(_QWORD *)(v7 + 120) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v7 + 128) = 0;
  *(_OWORD *)(v7 + 136) = 0u;
  *(_OWORD *)(v7 + 152) = 0u;
  *(_QWORD *)(v7 + 168) = 0;
  *(_QWORD *)(v7 + 240) = v22;
  return v7;
}

uint64_t sub_1BB4A798C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __int128 *a8, uint64_t a9, char *a10, uint64_t a11, __int128 *a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  __int128 v21;
  char v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v21 = *a8;
  v16 = *((_QWORD *)a8 + 2);
  v17 = *a10;
  v27 = a12[1];
  v28 = *a12;
  v26 = a12[2];
  v25 = *((_QWORD *)a12 + 6);
  v23 = *((_BYTE *)a12 + 57);
  v24 = *((_BYTE *)a12 + 56);
  *(_OWORD *)(v13 + 192) = 0u;
  *(_OWORD *)(v13 + 208) = 0u;
  *(_OWORD *)(v13 + 217) = 0u;
  *(_OWORD *)(v13 + 176) = 0u;
  *(_BYTE *)(v13 + 233) = 1;
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v18);
  sub_1BB872AFC(v19);
  *(_QWORD *)(v13 + 32) = a6;
  *(_QWORD *)(v13 + 40) = a7;
  *(_QWORD *)(v13 + 64) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v13 + 72) = a5;
  *(_QWORD *)(v13 + 48) = a6;
  *(_QWORD *)(v13 + 56) = a7;
  *(_OWORD *)(v13 + 80) = v21;
  *(_QWORD *)(v13 + 96) = v16;
  *(_QWORD *)(v13 + 104) = 0;
  *(_QWORD *)(v13 + 112) = 0xE000000000000000;
  *(_QWORD *)(v13 + 120) = a9;
  *(_BYTE *)(v13 + 128) = v17;
  sub_1BA6D2544(a11, v13 + 136);
  swift_beginAccess();
  *(_OWORD *)(v13 + 176) = v28;
  *(_OWORD *)(v13 + 192) = v27;
  *(_OWORD *)(v13 + 208) = v26;
  *(_QWORD *)(v13 + 224) = v25;
  *(_BYTE *)(v13 + 232) = v24;
  *(_BYTE *)(v13 + 233) = v23;
  *(_QWORD *)(v13 + 240) = a13;
  return v13;
}

uint64_t method lookup function for FeedGroupRegion()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedGroupRegion.__allocating_init<A>(items:namespace:kind:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FeedGroupRegion.__allocating_init<A>(items:groupIdentifier:groupItems:namespace:kind:slots:layoutOrder:groupDebug:feedGroupBindingOptions:selectors:feedGroupContextIdentifier:feedGroupRevision:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of FeedGroupRegion.__allocating_init(identifier:groupIdentifier:groupItems:namespace:kind:slots:layoutOrder:groupDebug:feedGroupBindingOptions:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of FeedGroupRegion.__allocating_init(groupIdentifier:pluginModel:feedGroupDebug:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1BB4A7B7C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BA561D58(a1);
}

uint64_t sub_1BB4A7B90()
{
  return sub_1BA520778();
}

uint64_t FormatContentPool.init(headlines:headlineLists:issues:tags:tagFeeds:tagFeedFetches:puzzles:puzzleTypes:puzzleStatistics:placeholders:slotPlaceholders:webArchivePromises:resourcePromises:sportsDataVisualizations:genericDataVisualizations:sponsoredAdBanner:)@<X0>(unint64_t a1@<X0>, const char *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, const char *a5@<X4>, const char *a6@<X5>, char *a7@<X6>, const char *a8@<X7>, const char **a9@<X8>, unint64_t a10, const char *a11, const char *a12, const char *a13, const char *a14, unint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  unint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  const char **v44;
  const char *v45;
  unint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  unint64_t v84;
  uint64_t v85;
  _BOOL8 v86;
  uint64_t v87;
  char v88;
  unint64_t v89;
  char v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  const char **v94;
  const char *v95;
  const char *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char v110;
  unint64_t v111;
  uint64_t v112;
  _BOOL8 v113;
  uint64_t v114;
  char v115;
  unint64_t v116;
  char v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  char v133;
  unint64_t v134;
  uint64_t v135;
  _BOOL8 v136;
  uint64_t v137;
  char v138;
  unint64_t v139;
  char v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  id *v146;
  id v147;
  const char *v148;
  char *v149;
  const char *v150;
  const char *v151;
  const char *v152;
  const char *v153;
  const char *v154;
  const char *v155;
  const char **v156;
  uint64_t (*v157)(void);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD v162[2];
  uint64_t v163;
  const char *v164;
  const char *v165;
  const char *v166;
  const char **v167;
  uint64_t v168;
  unint64_t v169;
  char *v170;
  unint64_t v171;
  unint64_t i;
  unint64_t v173;
  unint64_t v174;
  char *v175;
  id *v176;
  const char *v177;

  v173 = (unint64_t)a7;
  v174 = a3;
  v164 = a5;
  v165 = a6;
  v166 = a2;
  v167 = a9;
  v168 = type metadata accessor for PuzzleStatistic();
  v163 = *(_QWORD *)(v168 - 8);
  MEMORY[0x1E0C80A78](v168);
  v175 = (char *)v162 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v176 = (id *)((char *)v162 - v22);
  if (a1 >> 62)
    goto LABEL_25;
  v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v171 = (unint64_t)a8;
  for (i = a4; v23; i = a4)
  {
    v170 = (char *)(a1 & 0xC000000000000001);
    a8 = (const char *)MEMORY[0x1E0DEE9E0];
    v24 = 4;
    v169 = a1;
    while (1)
    {
      v25 = v24 - 4;
      if (!v170)
        break;
      v26 = (void *)MEMORY[0x1BCCE4630](v24 - 4, a1);
      v27 = v24 - 3;
      if (__OFADD__(v25, 1))
        goto LABEL_22;
LABEL_11:
      v28 = v26;
      v29 = objc_msgSend(v26, sel_identifier);
      a4 = sub_1BB8729A0();
      a1 = v30;

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v177 = a8;
      v33 = sub_1BA6E35A8(a4, a1);
      v34 = *((_QWORD *)a8 + 2);
      v35 = (v32 & 1) == 0;
      v36 = v34 + v35;
      if (__OFADD__(v34, v35))
        goto LABEL_23;
      v37 = v32;
      if (*((_QWORD *)a8 + 3) >= v36)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          a8 = v177;
          if ((v32 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          sub_1BB4C94EC((void (*)(_QWORD))sub_1BB4CEEB8);
          a8 = v177;
          if ((v37 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_1BB4ADCD0(v36, isUniquelyReferenced_nonNull_native, (void (*)(_QWORD))sub_1BB4CEEB8);
        v38 = sub_1BA6E35A8(a4, a1);
        if ((v37 & 1) != (v39 & 1))
        {
LABEL_137:
          sub_1BB874560();
          __break(1u);
          JUMPOUT(0x1BB4A9C78);
        }
        v33 = v38;
        a8 = v177;
        if ((v37 & 1) != 0)
        {
LABEL_4:
          a4 = *((_QWORD *)a8 + 7);
          swift_unknownObjectRelease();
          *(_QWORD *)(a4 + 8 * v33) = v28;
          goto LABEL_5;
        }
      }
      *(_QWORD *)&a8[8 * (v33 >> 6) + 64] |= 1 << v33;
      v40 = (uint64_t *)(*((_QWORD *)a8 + 6) + 16 * v33);
      *v40 = a4;
      v40[1] = a1;
      *(_QWORD *)(*((_QWORD *)a8 + 7) + 8 * v33) = v28;
      v41 = *((_QWORD *)a8 + 2);
      v42 = __OFADD__(v41, 1);
      v43 = v41 + 1;
      if (v42)
        goto LABEL_24;
      *((_QWORD *)a8 + 2) = v43;
      swift_bridgeObjectRetain();
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v24;
      a1 = v169;
      if (v27 == v23)
        goto LABEL_27;
    }
    v26 = (void *)swift_unknownObjectRetain();
    v27 = v24 - 3;
    if (!__OFADD__(v25, 1))
      goto LABEL_11;
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain_n();
    v23 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v171 = (unint64_t)a8;
  }
  a8 = (const char *)MEMORY[0x1E0DEE9E0];
LABEL_27:
  swift_bridgeObjectRelease_n();
  v45 = v166;
  v44 = v167;
  *v167 = a8;
  v44[1] = v45;
  v46 = v174;
  if (v174 >> 62)
    goto LABEL_50;
  v47 = *(_QWORD *)((v174 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v47)
  {
LABEL_29:
    v170 = (char *)(v46 & 0xC000000000000001);
    v48 = (const char *)MEMORY[0x1E0DEE9E0];
    v49 = 4;
    while (1)
    {
      if (v170)
        v52 = (id)MEMORY[0x1BCCE4630](v49 - 4, v46);
      else
        v52 = *(id *)(v46 + 8 * v49);
      v53 = v52;
      v54 = v49 - 3;
      if (__OFADD__(v49 - 4, 1))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        swift_bridgeObjectRetain_n();
        v46 = v174;
        v47 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (!v47)
          break;
        goto LABEL_29;
      }
      v55 = objc_msgSend(v52, sel_identifier);
      v56 = sub_1BB8729A0();
      v58 = v57;

      v59 = swift_isUniquelyReferenced_nonNull_native();
      v177 = v48;
      v61 = sub_1BA6E35A8(v56, v58);
      v62 = *((_QWORD *)v48 + 2);
      v63 = (v60 & 1) == 0;
      v64 = v62 + v63;
      if (__OFADD__(v62, v63))
        goto LABEL_48;
      v65 = v60;
      if (*((_QWORD *)v48 + 3) >= v64)
      {
        if ((v59 & 1) != 0)
        {
          v48 = v177;
          if ((v60 & 1) != 0)
            goto LABEL_30;
        }
        else
        {
          sub_1BB4CB870((void (*)(_QWORD))sub_1BB4CEF2C);
          v48 = v177;
          if ((v65 & 1) != 0)
            goto LABEL_30;
        }
      }
      else
      {
        sub_1BB4BD3C0(v64, v59, (void (*)(_QWORD))sub_1BB4CEF2C);
        v66 = sub_1BA6E35A8(v56, v58);
        if ((v65 & 1) != (v67 & 1))
          goto LABEL_137;
        v61 = v66;
        v48 = v177;
        if ((v65 & 1) != 0)
        {
LABEL_30:
          v50 = *((_QWORD *)v48 + 7);
          v51 = 8 * v61;

          *(_QWORD *)(v50 + v51) = v53;
          goto LABEL_31;
        }
      }
      *(_QWORD *)&v48[8 * (v61 >> 6) + 64] |= 1 << v61;
      v68 = (uint64_t *)(*((_QWORD *)v48 + 6) + 16 * v61);
      *v68 = v56;
      v68[1] = v58;
      *(_QWORD *)(*((_QWORD *)v48 + 7) + 8 * v61) = v53;
      v69 = *((_QWORD *)v48 + 2);
      v42 = __OFADD__(v69, 1);
      v70 = v69 + 1;
      if (v42)
        goto LABEL_49;
      *((_QWORD *)v48 + 2) = v70;
      swift_bridgeObjectRetain();
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v49;
      v46 = v174;
      if (v54 == v47)
        goto LABEL_52;
    }
  }
  v48 = (const char *)MEMORY[0x1E0DEE9E0];
LABEL_52:
  swift_bridgeObjectRelease_n();
  v167[2] = v48;
  v71 = i;
  if (i >> 62)
    goto LABEL_76;
  v72 = *(_QWORD *)((i & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v72)
  {
LABEL_54:
    v174 = v71 & 0xC000000000000001;
    v73 = (const char *)MEMORY[0x1E0DEE9E0];
    v74 = 4;
    while (1)
    {
      v76 = v74 - 4;
      if (v174)
      {
        v71 = MEMORY[0x1BCCE4630](v74 - 4, v71);
        v77 = v74 - 3;
        if (__OFADD__(v76, 1))
          goto LABEL_73;
      }
      else
      {
        v71 = *(_QWORD *)(v71 + 8 * v74);
        swift_unknownObjectRetain();
        v77 = v74 - 3;
        if (__OFADD__(v76, 1))
        {
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          swift_bridgeObjectRetain_n();
          v72 = sub_1BB873F30();
          swift_bridgeObjectRelease();
          if (!v72)
            break;
          goto LABEL_54;
        }
      }
      v78 = objc_msgSend((id)v71, sel_identifier);
      v79 = sub_1BB8729A0();
      v81 = v80;

      v82 = swift_isUniquelyReferenced_nonNull_native();
      v177 = v73;
      v84 = sub_1BA6E35A8(v79, v81);
      v85 = *((_QWORD *)v73 + 2);
      v86 = (v83 & 1) == 0;
      v87 = v85 + v86;
      if (__OFADD__(v85, v86))
        goto LABEL_74;
      v88 = v83;
      if (*((_QWORD *)v73 + 3) >= v87)
      {
        if ((v82 & 1) != 0)
        {
          v73 = v177;
          if ((v83 & 1) != 0)
            goto LABEL_55;
        }
        else
        {
          sub_1BB4C94EC((void (*)(_QWORD))sub_1BB4CEFA0);
          v73 = v177;
          if ((v88 & 1) != 0)
            goto LABEL_55;
        }
      }
      else
      {
        sub_1BB4ADCD0(v87, v82, (void (*)(_QWORD))sub_1BB4CEFA0);
        v89 = sub_1BA6E35A8(v79, v81);
        if ((v88 & 1) != (v90 & 1))
          goto LABEL_137;
        v84 = v89;
        v73 = v177;
        if ((v88 & 1) != 0)
        {
LABEL_55:
          v75 = *((_QWORD *)v73 + 7);
          swift_unknownObjectRelease();
          *(_QWORD *)(v75 + 8 * v84) = v71;
          goto LABEL_56;
        }
      }
      *(_QWORD *)&v73[8 * (v84 >> 6) + 64] |= 1 << v84;
      v91 = (uint64_t *)(*((_QWORD *)v73 + 6) + 16 * v84);
      *v91 = v79;
      v91[1] = v81;
      *(_QWORD *)(*((_QWORD *)v73 + 7) + 8 * v84) = v71;
      v92 = *((_QWORD *)v73 + 2);
      v42 = __OFADD__(v92, 1);
      v93 = v92 + 1;
      if (v42)
        goto LABEL_75;
      *((_QWORD *)v73 + 2) = v93;
      swift_bridgeObjectRetain();
LABEL_56:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v74;
      v71 = i;
      if (v77 == v72)
        goto LABEL_78;
    }
  }
  v73 = (const char *)MEMORY[0x1E0DEE9E0];
LABEL_78:
  swift_bridgeObjectRelease_n();
  v94 = v167;
  v95 = v164;
  v96 = v165;
  v167[3] = v73;
  v94[4] = v95;
  v97 = v173;
  v98 = v173 >> 62;
  v94[5] = v96;
  if (v98)
    goto LABEL_102;
  v99 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v99)
  {
LABEL_80:
    v174 = v97 & 0xC000000000000001;
    v97 = MEMORY[0x1E0DEE9E0];
    v100 = 4;
    while (1)
    {
      v102 = v100 - 4;
      if (v174)
      {
        v103 = (void *)MEMORY[0x1BCCE4630](v100 - 4, v173);
        v104 = v100 - 3;
        if (__OFADD__(v102, 1))
          goto LABEL_99;
      }
      else
      {
        v103 = *(void **)(v173 + 8 * v100);
        swift_unknownObjectRetain();
        v104 = v100 - 3;
        if (__OFADD__(v102, 1))
        {
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          swift_bridgeObjectRetain_n();
          v99 = sub_1BB873F30();
          swift_bridgeObjectRelease();
          if (!v99)
            break;
          goto LABEL_80;
        }
      }
      v105 = objc_msgSend(v103, sel_identifier);
      v106 = sub_1BB8729A0();
      v108 = v107;

      v109 = swift_isUniquelyReferenced_nonNull_native();
      v177 = (const char *)v97;
      v111 = sub_1BA6E35A8(v106, v108);
      v112 = *(_QWORD *)(v97 + 16);
      v113 = (v110 & 1) == 0;
      v114 = v112 + v113;
      if (__OFADD__(v112, v113))
        goto LABEL_100;
      v115 = v110;
      if (*(_QWORD *)(v97 + 24) >= v114)
      {
        if ((v109 & 1) != 0)
        {
          v97 = (unint64_t)v177;
          if ((v110 & 1) != 0)
            goto LABEL_81;
        }
        else
        {
          sub_1BB4C94EC((void (*)(_QWORD))sub_1BB4CF014);
          v97 = (unint64_t)v177;
          if ((v115 & 1) != 0)
            goto LABEL_81;
        }
      }
      else
      {
        sub_1BB4ADCD0(v114, v109, (void (*)(_QWORD))sub_1BB4CF014);
        v116 = sub_1BA6E35A8(v106, v108);
        if ((v115 & 1) != (v117 & 1))
          goto LABEL_137;
        v111 = v116;
        v97 = (unint64_t)v177;
        if ((v115 & 1) != 0)
        {
LABEL_81:
          v101 = *(_QWORD *)(v97 + 56);
          swift_unknownObjectRelease();
          *(_QWORD *)(v101 + 8 * v111) = v103;
          goto LABEL_82;
        }
      }
      *(_QWORD *)(v97 + 8 * (v111 >> 6) + 64) |= 1 << v111;
      v118 = (uint64_t *)(*(_QWORD *)(v97 + 48) + 16 * v111);
      *v118 = v106;
      v118[1] = v108;
      *(_QWORD *)(*(_QWORD *)(v97 + 56) + 8 * v111) = v103;
      v119 = *(_QWORD *)(v97 + 16);
      v42 = __OFADD__(v119, 1);
      v120 = v119 + 1;
      if (v42)
        goto LABEL_101;
      *(_QWORD *)(v97 + 16) = v120;
      swift_bridgeObjectRetain();
LABEL_82:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v100;
      if (v104 == v99)
        goto LABEL_104;
    }
  }
  v97 = MEMORY[0x1E0DEE9E0];
LABEL_104:
  swift_bridgeObjectRelease_n();
  v167[6] = (const char *)v97;
  v121 = v171;
  if (v171 >> 62)
    goto LABEL_128;
  v122 = *(_QWORD *)((v171 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v122)
  {
LABEL_106:
    v174 = v121 & 0xC000000000000001;
    v121 = MEMORY[0x1E0DEE9E0];
    v123 = 4;
    while (1)
    {
      v125 = v123 - 4;
      if (v174)
      {
        v126 = (void *)MEMORY[0x1BCCE4630](v123 - 4, v171);
        v127 = v123 - 3;
        if (__OFADD__(v125, 1))
          goto LABEL_125;
      }
      else
      {
        v126 = *(void **)(v171 + 8 * v123);
        swift_unknownObjectRetain();
        v127 = v123 - 3;
        if (__OFADD__(v125, 1))
        {
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          swift_bridgeObjectRetain_n();
          v122 = sub_1BB873F30();
          swift_bridgeObjectRelease();
          if (!v122)
            break;
          goto LABEL_106;
        }
      }
      v128 = objc_msgSend(v126, sel_identifier);
      v129 = sub_1BB8729A0();
      v131 = v130;

      v132 = swift_isUniquelyReferenced_nonNull_native();
      v177 = (const char *)v121;
      v134 = sub_1BA6E35A8(v129, v131);
      v135 = *(_QWORD *)(v121 + 16);
      v136 = (v133 & 1) == 0;
      v137 = v135 + v136;
      if (__OFADD__(v135, v136))
        goto LABEL_126;
      v138 = v133;
      if (*(_QWORD *)(v121 + 24) >= v137)
      {
        if ((v132 & 1) != 0)
        {
          v121 = (unint64_t)v177;
          if ((v133 & 1) != 0)
            goto LABEL_107;
        }
        else
        {
          sub_1BB4C94EC((void (*)(_QWORD))sub_1BB4CF088);
          v121 = (unint64_t)v177;
          if ((v138 & 1) != 0)
            goto LABEL_107;
        }
      }
      else
      {
        sub_1BB4ADCD0(v137, v132, (void (*)(_QWORD))sub_1BB4CF088);
        v139 = sub_1BA6E35A8(v129, v131);
        if ((v138 & 1) != (v140 & 1))
          goto LABEL_137;
        v134 = v139;
        v121 = (unint64_t)v177;
        if ((v138 & 1) != 0)
        {
LABEL_107:
          v124 = *(_QWORD *)(v121 + 56);
          swift_unknownObjectRelease();
          *(_QWORD *)(v124 + 8 * v134) = v126;
          goto LABEL_108;
        }
      }
      *(_QWORD *)(v121 + 8 * (v134 >> 6) + 64) |= 1 << v134;
      v141 = (uint64_t *)(*(_QWORD *)(v121 + 48) + 16 * v134);
      *v141 = v129;
      v141[1] = v131;
      *(_QWORD *)(*(_QWORD *)(v121 + 56) + 8 * v134) = v126;
      v142 = *(_QWORD *)(v121 + 16);
      v42 = __OFADD__(v142, 1);
      v143 = v142 + 1;
      if (v42)
        goto LABEL_127;
      *(_QWORD *)(v121 + 16) = v143;
      swift_bridgeObjectRetain();
LABEL_108:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v123;
      if (v127 == v122)
        goto LABEL_130;
    }
  }
  v121 = MEMORY[0x1E0DEE9E0];
LABEL_130:
  swift_bridgeObjectRelease_n();
  v167[7] = (const char *)v121;
  if (*(_QWORD *)(a10 + 16))
  {
    v144 = a10 + ((*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80));
    v145 = *(_QWORD *)(v163 + 72);
    v169 = a10;
    swift_bridgeObjectRetain();
    i = (unint64_t)"fastestTimeByDifficultyLevel";
    v173 = (unint64_t)"uzzlesSolved";
    v170 = "fficultyLevel";
    v171 = (unint64_t)"averageTimeByDifficultyLevel";
    v146 = v176;
    v174 = v145;
    sub_1BB4CBDC8(v144, (uint64_t)v176);
    v147 = objc_msgSend(*v146, sel_identifier);
    sub_1BB8729A0();

    PuzzleStatisticCategory.statisticType.getter();
    __asm { BR              X9 }
  }
  v148 = (const char *)MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  v167[8] = v148;
  v171 = *(_QWORD *)(a15 + 16);
  if (v171)
  {
    v169 = a15;
    v170 = (char *)(a15 + 32);
    v164 = (const char *)MEMORY[0x1E0DEE9E0];
    v165 = (const char *)MEMORY[0x1E0DEE9E0];
    v162[1] = MEMORY[0x1E0DEE9E0];
    v163 = MEMORY[0x1E0DEE9E0];
    v176 = (id *)MEMORY[0x1E0DEE9E0];
    v166 = (const char *)MEMORY[0x1E0DEE9E0];
    if (*(_QWORD *)(a15 + 16))
    {
      v149 = (char *)&loc_1BB4A8B40 + dword_1BB4A9C9C[*(_QWORD *)v170 >> 61];
      v175 = (char *)MEMORY[0x1E0DEE9E0];
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1BB4A9C34);
  }
  swift_bridgeObjectRelease();
  v150 = (const char *)MEMORY[0x1E0DEE9E0];
  v151 = (const char *)MEMORY[0x1E0DEE9E0];
  v152 = (const char *)MEMORY[0x1E0DEE9E0];
  v153 = (const char *)MEMORY[0x1E0DEE9E0];
  v154 = (const char *)MEMORY[0x1E0DEE9E0];
  v155 = (const char *)MEMORY[0x1E0DEE9E0];
  v156 = v167;
  v167[13] = (const char *)MEMORY[0x1E0DEE9E0];
  v156[14] = v155;
  v156[15] = v154;
  v156[16] = v153;
  v156[17] = v152;
  v156[18] = v151;
  v156[19] = v150;
  v176 = (id *)a16;
  v177 = a11;
  v157 = MEMORY[0x1E0DEAEC8];
  sub_1BA4AD288(0, &qword_1ED3B95B0, (uint64_t)&type metadata for FormatContentPoolPlaceholder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B5A14(&qword_1ED3B95B8, &qword_1ED3B95B0, (uint64_t)&type metadata for FormatContentPoolPlaceholder);
  sub_1BB4CBDE0();
  v158 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  v156[9] = (const char *)v158;
  v177 = a12;
  sub_1BA4AD288(0, &qword_1ED3C2978, (uint64_t)&type metadata for FormatContentPoolSlotPlaceholder, (uint64_t (*)(_QWORD, uint64_t))v157);
  sub_1BA6B5A14((unint64_t *)&unk_1ED3CF850, &qword_1ED3C2978, (uint64_t)&type metadata for FormatContentPoolSlotPlaceholder);
  sub_1BB4CBE24();
  v159 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  v156[10] = (const char *)v159;
  v156[11] = a13;
  v156[12] = a14;
  v156[20] = (const char *)v176;
  v160 = type metadata accessor for FormatContentPool();
  return sub_1BA5193C4(a17, (uint64_t)v156 + *(int *)(v160 + 100), (uint64_t (*)(_QWORD))sub_1BA6D940C);
}

uint64_t sub_1BB4A9CB8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1BA76EAE0((_OWORD *)a1, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BB4BD9CC(v10, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v9;
    swift_bridgeObjectRelease();
    v5 = sub_1BB873E58();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9B8] + 8;
    sub_1BA6ED734(a1, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
    sub_1BAA48E8C(a2, v10);
    v8 = sub_1BB873E58();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a2, v8);
    return sub_1BA6ED734((uint64_t)v10, (unint64_t *)&qword_1ED3BA040, v7);
  }
}

uint64_t sub_1BB4A9DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  sub_1BA4B07F0(0, &qword_1ED3C4198, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for PuzzleStatistic();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1BA5C699C(a1, &qword_1ED3C4198, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatistic);
    sub_1BAA48F88(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BA5C699C((uint64_t)v10, &qword_1ED3C4198, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatistic);
  }
  else
  {
    sub_1BB4CBDD4(a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v4;
    *v4 = 0x8000000000000000;
    sub_1BB4C02E8((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic, (void (*)(_QWORD, __n128))sub_1BA8F6A20, (void (*)(unint64_t, char *))sub_1BB4CBDC8, (void (*)(char *, unint64_t))sub_1BB4CBDD4);
    *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB4A9F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  sub_1BA4B07F0(0, &qword_1EF2A99E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for FormatDerivedDataOption();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1BA5C699C(a1, &qword_1EF2A99E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
    sub_1BAA495E0(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BA5C699C((uint64_t)v10, &qword_1EF2A99E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  }
  else
  {
    sub_1BA8E5414(a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v4;
    *v4 = 0x8000000000000000;
    sub_1BB4C02E8((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption, (void (*)(_QWORD, __n128))sub_1BB4CDBDC, (void (*)(unint64_t, char *))sub_1BAA73640, (void (*)(char *, unint64_t))sub_1BA8E5414);
    *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB4AA110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  sub_1BA4B07F0(0, &qword_1EF2C51B0, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for FormatDerivedDataBindingSlotResult();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1BA5C699C(a1, &qword_1EF2C51B0, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
    sub_1BAA495FC(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BA5C699C((uint64_t)v10, &qword_1EF2C51B0, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataBindingSlotResult);
  }
  else
  {
    sub_1BB4CDCB0(a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v4;
    *v4 = 0x8000000000000000;
    sub_1BB4C02E8((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult, (void (*)(_QWORD, __n128))sub_1BB4CDC40, (void (*)(unint64_t, char *))sub_1BB4CDCA4, (void (*)(char *, unint64_t))sub_1BB4CDCB0);
    *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB4AA2BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1BA76EAE0((_OWORD *)a1, v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BB4BF84C(v8, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v7;
    swift_bridgeObjectRelease();
    return sub_1BA9ECE7C(a2);
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9B8] + 8;
    sub_1BA6ED734(a1, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
    sub_1BAA496E8(a2, v8);
    sub_1BA9ECE7C(a2);
    return sub_1BA6ED734((uint64_t)v8, (unint64_t *)&qword_1ED3BA040, v6);
  }
}

uint64_t sub_1BB4AA394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  sub_1BA4B07F0(0, &qword_1ED3BBD68, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for SharedItem();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1BA5C699C(a1, &qword_1ED3BBD68, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem);
    sub_1BAA499D8(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BA5C699C((uint64_t)v10, &qword_1ED3BBD68, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem);
  }
  else
  {
    sub_1BAF52BCC(a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v4;
    *v4 = 0x8000000000000000;
    sub_1BB4C02E8((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem, (void (*)(_QWORD, __n128))sub_1BB4CE77C, (void (*)(unint64_t, char *))sub_1BAF52AB4, (void (*)(char *, unint64_t))sub_1BAF52BCC);
    *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB4AA540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  sub_1BA4B07F0(0, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  v11 = type metadata accessor for SportsRoster();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1BA5C699C(a1, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
    sub_1BAA49A2C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BA5C699C((uint64_t)v10, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
  }
  else
  {
    sub_1BB42BF10(a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v4;
    *v4 = 0x8000000000000000;
    sub_1BB4C02E8((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster, (void (*)(_QWORD, __n128))sub_1BB4CD184, (void (*)(unint64_t, char *))sub_1BB4CD1E8, (void (*)(char *, unint64_t))sub_1BB42BF10);
    *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB4AA6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  _OWORD v11[8];
  _BYTE v12[128];
  _BYTE v13[128];
  __int128 v14[8];
  _BYTE v15[128];

  v4 = v3;
  sub_1BA6A09F0(a1, (uint64_t)v12, (unint64_t *)&qword_1EF2B86A0, (uint64_t)&type metadata for DebugFormatFileSource);
  sub_1BA6A09F0((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EF2B86A0, (uint64_t)&type metadata for DebugFormatFileSource);
  sub_1BA6A09F0(a1, (uint64_t)v13, (unint64_t *)&qword_1EF2B86A0, (uint64_t)&type metadata for DebugFormatFileSource);
  if (sub_1BA8CF120((uint64_t)v13) == 1)
  {
    sub_1BAA49A48(a2, a3, v11);
    swift_bridgeObjectRelease();
    sub_1BA6A09F0((uint64_t)v11, (uint64_t)v14, (unint64_t *)&qword_1EF2B86A0, (uint64_t)&type metadata for DebugFormatFileSource);
    return sub_1BAF92764((uint64_t)v14);
  }
  else
  {
    sub_1BA6A09F0((uint64_t)v15, (uint64_t)v11, (unint64_t *)&qword_1EF2B86A0, (uint64_t)&type metadata for DebugFormatFileSource);
    v14[4] = v11[4];
    v14[5] = v11[5];
    v14[6] = v11[6];
    v14[7] = v11[7];
    v14[0] = v11[0];
    v14[1] = v11[1];
    v14[2] = v11[2];
    v14[3] = v11[3];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v4;
    *v4 = 0x8000000000000000;
    sub_1BB4C090C(v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v10;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB4AA85C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t *v4;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[2];

  v7 = a4 & 1;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1BA76EAE0((_OWORD *)a1, v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    *v4 = 0x8000000000000000;
    sub_1BB4C0A80(v12, a2, a3, v7, isUniquelyReferenced_nonNull_native);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return sub_1BAA49EA8();
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9B8] + 8;
    sub_1BA6ED734(a1, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
    sub_1BAA49B48(a2, a3, v7, v12);
    sub_1BAA49EA8();
    return sub_1BA6ED734((uint64_t)v12, (unint64_t *)&qword_1ED3BA040, v10);
  }
}

uint64_t sub_1BB4AA964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1BA4CECCC((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BB4C0BD4(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))sub_1BB4CE24C);
    sub_1BAA49C48(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB4CE24C);
  }
}

uint64_t sub_1BB4AAA38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FormatWebEmbed() + 32));
  v7 = v6[1];
  if (v7 && *(_QWORD *)(*(_QWORD *)(v1 + 88) + 16))
  {
    v8 = *v6;
    swift_bridgeObjectRetain();
    sub_1BA6E35A8(v8, v7);
    if ((v9 & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      v10 = (void *)sub_1BB86E854();
      v11 = sub_1BB86E974();
      swift_release();

      return v11;
    }
    swift_bridgeObjectRelease();
  }
  v13 = sub_1BB86C67C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A580, (uint64_t (*)(uint64_t))sub_1BA6EF3B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB4AAB90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FormatWebEmbed() + 36));
  v7 = v6[1];
  if (v7 && *(_QWORD *)(*(_QWORD *)(v1 + 96) + 16))
  {
    v8 = *v6;
    swift_bridgeObjectRetain();
    sub_1BA6E35A8(v8, v7);
    if ((v9 & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      v10 = (void *)sub_1BB86E854();
      v11 = sub_1BB86E974();
      swift_release();

      return v11;
    }
    swift_bridgeObjectRelease();
  }
  v13 = sub_1BB86C67C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A580, (uint64_t (*)(uint64_t))sub_1BA6EF3B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t FormatContentPool.headlines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.headlineLists.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.issues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.tagFeeds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.tagFeedFetches.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.puzzles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.puzzleTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.puzzleStatistics.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.placeholders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.slotPlaceholders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.webArchivePromises.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.resourcePromises.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.scores.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.standings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.brackets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.boxScores.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.lineScores.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.injuryReports.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.keyPlayers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.genericDataVisualizations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentPool.sponsoredAdBanner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatContentPool();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 100), a1, (uint64_t (*)(_QWORD))sub_1BA6D940C);
}

uint64_t sub_1BB4AADCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1BA8CB304(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v6, v7);
  v8 = type metadata accessor for FormatWebArchiveResource.Resolved();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA8CB304);
    v9 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  else
  {
    v11 = &v6[*(int *)(v8 + 24)];
    v12 = sub_1BB86C67C();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(a2, v11, v12);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebArchiveResource.Resolved);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v12);
  }
}

uint64_t sub_1BB4AAF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1BA8F64BC(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v6, v7);
  v8 = type metadata accessor for FormatContentResource.Resolved();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA8F64BC);
    v9 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  else
  {
    v11 = &v6[*(int *)(v8 + 20)];
    v12 = sub_1BB86C67C();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(a2, v11, v12);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentResource.Resolved);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v12);
  }
}

void sub_1BB4AB03C(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BB4AB094()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v1 = sub_1BB874608();
  return sub_1BB4AB998(v0, v1);
}

uint64_t sub_1BB4AB14C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v6[72];

  sub_1BB8745CC();
  sub_1BAFC85CC(a1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  sub_1BB8745E4();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1BB7EB5AC((uint64_t)v6, a2);
    swift_bridgeObjectRelease();
  }
  v4 = sub_1BB874608();
  return sub_1BB4ABBF8(a1, a2, v4);
}

unint64_t sub_1BB4AB200(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB873C30();
  return sub_1BB4AC120(a1, v2);
}

unint64_t sub_1BB4AB230(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB8738AC();
  return sub_1BB4AC1E4(a1, v2, (unint64_t *)&qword_1ED3B99A0);
}

unint64_t sub_1BB4AB27C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB8738AC();
  return sub_1BB4AC1E4(a1, v2, (unint64_t *)&qword_1ED3B9990);
}

unint64_t sub_1BB4AB2C8(uint64_t a1)
{
  return sub_1BB4AB684(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (unint64_t *)&qword_1ED3B04C0, MEMORY[0x1E0CB0018], (void (*)(uint64_t))sub_1BB13F7C8);
}

unint64_t sub_1BB4AB2EC(uint64_t a1)
{
  uint64_t v2;

  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v2 = sub_1BB874608();
  return sub_1BB4AC2F4(a1, v2);
}

unint64_t sub_1BB4AB374(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB8738AC();
  return sub_1BB4AC1E4(a1, v2, (unint64_t *)&qword_1ED3B99C0);
}

unint64_t sub_1BB4AB3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745D8();
  sub_1BB8745D8();
  v8 = sub_1BB874608();
  return sub_1BB4AC3EC(a1, a2, a3, a4, v8);
}

unint64_t sub_1BB4AB454(double a1, double a2)
{
  uint64_t v4;

  sub_1BB8745CC();
  sub_1BB425F48();
  v4 = sub_1BB874608();
  return sub_1BB4AC4D0(v4, a1, a2);
}

uint64_t sub_1BB4AB4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1BB8745CC();
  FormatDerivedDataFileKey.hash(into:)();
  v6 = sub_1BB874608();
  return sub_1BB4AC544(a1, a2, a3, v6);
}

unint64_t sub_1BB4AB52C(unint64_t a1)
{
  uint64_t v2;
  _BYTE v4[72];

  sub_1BB8745CC();
  sub_1BB41AD48((uint64_t)v4);
  v2 = sub_1BB874608();
  return sub_1BB4ACA54(a1, v2);
}

unint64_t sub_1BB4AB584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v4 = sub_1BB874608();
  return sub_1BA6E360C(a1, a2, v4);
}

unint64_t sub_1BB4AB5F8(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1BB8745CC();
  sub_1BB8745D8();
  v2 = sub_1BB874608();
  return sub_1BA7C25B4(a1, v2);
}

unint64_t sub_1BB4AB660(uint64_t a1)
{
  return sub_1BB4AB684(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D60D48], &qword_1EF2C4F78, MEMORY[0x1E0D60D60], (void (*)(uint64_t))sub_1BB4CCE70);
}

unint64_t sub_1BB4AB684(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v10;

  a2(0);
  sub_1BA4A2870(a3, a2, a4);
  v10 = sub_1BB87285C();
  return sub_1BA645340(a1, v10, a2, a5);
}

unint64_t sub_1BB4AB718(char a1)
{
  uint64_t v2;

  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v2 = sub_1BB874608();
  return sub_1BB4ACB64(a1 & 1, v2);
}

uint64_t sub_1BB4AB7A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1BAB071B8(*(_QWORD *)(v1 + 40), a1);
  return sub_1BB4ACC68(a1, v3);
}

uint64_t sub_1BB4AB7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1BB8745CC();
  sub_1BB36AEB8();
  v6 = sub_1BB874608();
  return sub_1BB4ACF58(a1, a2, a3, v6);
}

unint64_t sub_1BB4AB848(uint64_t a1, uint64_t a2, char a3)
{
  char v5;
  uint64_t v6;

  v5 = a3 & 1;
  sub_1BB8745CC();
  sub_1BB8745D8();
  sub_1BB872A90();
  v6 = sub_1BB874608();
  return sub_1BB4AD0F8(a1, a2, v5, v6);
}

unint64_t sub_1BB4AB8CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB8738AC();
  return sub_1BB4AC1E4(a1, v2, &qword_1ED39ECF0);
}

unint64_t sub_1BB4AB918(double a1, double a2, double a3, double a4)
{
  uint64_t v8;

  sub_1BB8745CC();
  sub_1BB4CCCC0(a1, a2, a3, a4);
  v8 = sub_1BB874608();
  return sub_1BB4AD1D4(v8, a1, a2, a3, a4);
}

uint64_t sub_1BB4AB998(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1BB4ABBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  return a3 & ~v4;
}

unint64_t sub_1BB4AC120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1BAF1E538(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1BCCE4558](v9, a1);
      sub_1BA9ECE7C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1BB4AC1E4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1BA49A224(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1BB8738B8();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1BB8738B8();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1BB4AC2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    v7 = *(_QWORD *)(v2 + 48);
    v8 = (_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    v9 = *(_QWORD *)(a1 + 16);
    v10 = *(_QWORD *)(a1 + 24);
    do
    {
      v11 = *(_QWORD *)(v7 + 8 * v5);
      v12 = *(_QWORD *)(v11 + 16) == v9 && *(_QWORD *)(v11 + 24) == v10;
      if (v12 || (sub_1BB874398() & 1) != 0)
      {
        v13 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier) == *v8
           && *(_QWORD *)(v11 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier + 8) == v8[1];
        if (v13 || (sub_1BB874398() & 1) != 0)
          break;
      }
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_1BB4AC3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v16 = (_QWORD *)(v14 + 32 * v8);
      v18 = v16[2];
      v17 = v16[3];
      v19 = *v16 == a1 && v16[1] == a2;
      if ((v19 || (sub_1BB874398() & 1) != 0) && v18 == a3 && v17 == a4)
        break;
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_1BB4AC4D0(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  double *v7;
  double v8;
  BOOL v9;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = (double *)(*(_QWORD *)(v3 + 48) + 16 * result);
      v8 = v7[1];
      v9 = *v7 == a2;
      if (v8 == a3 && v9)
        break;
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_1BB4AC544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v5 = -1 << *(_BYTE *)(v4 + 32);
  v6 = a4 & ~v5;
  if (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    __asm { BR              X8 }
  return a4 & ~v5;
}

unint64_t sub_1BB4ACA54(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v5 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BA4C2DD8(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      v13 = sub_1BB41CA78((uint64_t)v8, a1);
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      if ((v13 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1BB4ACB64(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x73676E69646E6962;
    else
      v6 = 0x736567616B636170;
    while (1)
    {
      v7 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x73676E69646E6962 : 0x736567616B636170;
      if (v7 == v6)
        break;
      v8 = sub_1BB874398();
      swift_bridgeObjectRelease_n();
      if ((v8 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

uint64_t sub_1BB4ACC68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1BB4ACF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v5 = -1 << *(_BYTE *)(v4 + 32);
  v6 = a4 & ~v5;
  if (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    __asm { BR              X9 }
  return a4 & ~v5;
}

unint64_t sub_1BB4AD0F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v11 = ~v6;
    v12 = *(_QWORD *)(v4 + 48);
    do
    {
      v13 = v12 + 24 * v7;
      if ((*(_BYTE *)(v13 + 16) & 1) != 0)
      {
        if ((a3 & 1) == 0)
          goto LABEL_3;
      }
      else if ((a3 & 1) != 0)
      {
        goto LABEL_3;
      }
      v14 = *(_QWORD *)v13 == a1 && *(_QWORD *)(v13 + 8) == a2;
      if (v14 || (sub_1BB874398() & 1) != 0)
        return v7;
LABEL_3:
      v7 = (v7 + 1) & v11;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_1BB4AD1D4(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t i;
  uint64_t v13;
  CGRect v15;
  CGRect v16;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  i = a1 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v15.origin.x = a2;
    v15.origin.y = a3;
    v15.size.width = a4;
    v15.size.height = a5;
    if (!CGRectEqualToRect(*(CGRect *)(*(_QWORD *)(v5 + 48) + 32 * i), v15))
    {
      v13 = ~v7;
      for (i = (i + 1) & v13; ((*(_QWORD *)(v6 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
      {
        v16.origin.x = a2;
        v16.origin.y = a3;
        v16.size.width = a4;
        v16.size.height = a5;
        if (CGRectEqualToRect(*(CGRect *)(*(_QWORD *)(v5 + 48) + 32 * i), v16))
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1BB4AD2E0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6BFC();
  v37 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4AD5EC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  sub_1BA785C04(0);
  v35 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_1BA76EAE0(v22, v36);
    }
    else
    {
      sub_1BA747A10((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_1BB8729A0();
    sub_1BB8745CC();
    sub_1BB872A90();
    v24 = sub_1BB874608();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_1BA76EAE0(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4AD920(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  _OWORD v40[2];

  v3 = v2;
  v5 = sub_1BB873E58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1BA8F5E50();
  v39 = a2;
  v10 = sub_1BB873F54();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_1BA76EAE0((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v21), v40);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_1BA747A10(*(_QWORD *)(v9 + 56) + 32 * v21, (uint64_t)v40);
    }
    result = sub_1BB87285C();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = (uint64_t)sub_1BA76EAE0(v40, (_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v19));
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BB4ADCA0(uint64_t a1, char a2)
{
  return sub_1BB4BD0A4(a1, a2, (void (*)(_QWORD))sub_1BB4CF4E4);
}

uint64_t sub_1BB4ADCAC(uint64_t a1, char a2)
{
  return sub_1BB4BD0A4(a1, a2, (void (*)(_QWORD))sub_1BA8F5FE8);
}

uint64_t sub_1BB4ADCB8(uint64_t a1, char a2)
{
  return sub_1BB4ADCD0(a1, a2, (void (*)(_QWORD))sub_1BB4CEFA0);
}

uint64_t sub_1BB4ADCC4(uint64_t a1, char a2)
{
  return sub_1BB4ADCD0(a1, a2, (void (*)(_QWORD))sub_1BB4CF014);
}

uint64_t sub_1BB4ADCD0(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v37 = a2;
  v7 = sub_1BB873F54();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1BB4ADFE0(uint64_t a1, char a2)
{
  return sub_1BA6F01D0(a1, a2, (void (*)(_QWORD))sub_1BA8F6B98);
}

uint64_t sub_1BB4ADFEC(uint64_t a1, char a2)
{
  return sub_1BB4ADCD0(a1, a2, (void (*)(_QWORD))sub_1BB4CF088);
}

uint64_t sub_1BB4ADFF8(uint64_t a1, char a2)
{
  return sub_1BA6F01D0(a1, a2, (void (*)(_QWORD))sub_1BA8F6B34);
}

uint64_t sub_1BB4AE004(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic, (void (*)(_QWORD, __n128))sub_1BA8F6A20, (void (*)(unint64_t, char *))sub_1BB4CBDD4, (void (*)(unint64_t, char *))sub_1BB4CBDC8);
}

uint64_t sub_1BB4AE028(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  __int128 v43;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6AD0();
  v42 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = v40[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = v40[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 40 * v21;
    v35 = *(_QWORD *)v33;
    v34 = *(_QWORD *)(v33 + 8);
    v43 = *(_OWORD *)(v33 + 16);
    v36 = *(_QWORD *)(v33 + 32);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 40 * v17;
    *(_QWORD *)v19 = v35;
    *(_QWORD *)(v19 + 8) = v34;
    *(_OWORD *)(v19 + 16) = v43;
    *(_QWORD *)(v19 + 32) = v36;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4AE388(uint64_t a1, char a2)
{
  return sub_1BB4BD3C0(a1, a2, (void (*)(_QWORD))sub_1BB4CEF2C);
}

uint64_t sub_1BB4AE394(uint64_t a1, char a2)
{
  return sub_1BB4ADCD0(a1, a2, (void (*)(_QWORD))sub_1BB4CEEB8);
}

uint64_t sub_1BB4AE3A0(uint64_t a1, int a2)
{
  return sub_1BB4AE3B4(a1, a2, type metadata accessor for FormatService.ThemePackage, (void (*)(_QWORD, __n128))sub_1BB4CF3B8);
}

uint64_t sub_1BB4AE3B4(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, __n128))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  uint64_t (*v49)(_QWORD);

  v6 = v4;
  v49 = a3;
  v8 = a3(0);
  v47 = *(_QWORD *)(v8 - 8);
  v9.n128_f64[0] = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - v10;
  v12 = *v4;
  a4(0, v9);
  v48 = a2;
  v13 = sub_1BB873F54();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_41;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v46 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v44 = v4;
  v45 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_22;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v45)
      break;
    v27 = v46;
    v28 = v46[v26];
    ++v21;
    if (!v28)
    {
      v21 = v26 + 1;
      if (v26 + 1 >= v45)
        goto LABEL_34;
      v28 = v46[v21];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v45)
        {
LABEL_34:
          swift_release();
          v6 = v44;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v46[v29];
        if (!v28)
        {
          while (1)
          {
            v21 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v21 >= v45)
              goto LABEL_34;
            v28 = v46[v21];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v21 = v29;
      }
    }
LABEL_21:
    v18 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_22:
    v30 = (uint64_t *)(*(_QWORD *)(v12 + 48) + 16 * v25);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v47 + 72);
    v34 = *(_QWORD *)(v12 + 56) + v33 * v25;
    if ((v48 & 1) != 0)
    {
      sub_1BA5193C4(v34, (uint64_t)v11, v49);
    }
    else
    {
      sub_1BA4C2DD8(v34, (uint64_t)v11, v49);
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v35 = -1 << *(_BYTE *)(v14 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v19 + 8 * (v36 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v19 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v19 + 8 * v37);
      }
      while (v41 == -1);
      v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v22);
    *v23 = v32;
    v23[1] = v31;
    result = sub_1BA5193C4((uint64_t)v11, *(_QWORD *)(v14 + 56) + v33 * v22, v49);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v6 = v44;
  v27 = v46;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v42 = 1 << *(_BYTE *)(v12 + 32);
  if (v42 >= 64)
    bzero(v27, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v42;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v14;
  return result;
}

uint64_t sub_1BB4AE728(uint64_t a1, int a2)
{
  return sub_1BB4AE3B4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebArchiveResource.Resolved, (void (*)(_QWORD, __n128))sub_1BB4CF480);
}

uint64_t sub_1BB4AE73C(uint64_t a1, int a2)
{
  return sub_1BB4AE3B4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentResource.Resolved, (void (*)(_QWORD, __n128))sub_1BB4CF41C);
}

uint64_t sub_1BB4AE750(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F68C4();
  v42 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4AEA70(uint64_t a1, char a2)
{
  return sub_1BB4B57C4(a1, a2, (void (*)(_QWORD))sub_1BA8F6378);
}

uint64_t sub_1BB4AEA7C(uint64_t a1, int a2)
{
  return sub_1BB4AEB0C(a1, a2, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, &qword_1ED39DB08);
}

uint64_t sub_1BB4AEAA0(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, (uint64_t (*)(_QWORD))sub_1BA709CA4, (void (*)(_QWORD, __n128))sub_1BA8F65D0, (void (*)(unint64_t, char *))sub_1BA707100, (void (*)(unint64_t, char *))sub_1BA709A94);
}

uint64_t sub_1BB4AEAC4(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition, (void (*)(_QWORD, __n128))sub_1BA8F6780, (void (*)(unint64_t, char *))sub_1BA7AE86C, (void (*)(unint64_t, char *))sub_1BA7AE5A4);
}

uint64_t sub_1BB4AEAE8(uint64_t a1, int a2)
{
  return sub_1BB4AEB0C(a1, a2, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, &qword_1ED39DB00);
}

uint64_t sub_1BB4AEB0C(uint64_t a1, int a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5, unint64_t *a6)
{
  uint64_t *v6;
  uint64_t *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  int64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  _QWORD *v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  int64_t v52;
  _QWORD *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  unint64_t *v57;
  uint64_t (*v58)(void);

  v11 = v6;
  sub_1BA4CDF6C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v54 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v56 = (uint64_t)&v50 - v14;
  v57 = a3;
  v15 = *v6;
  v58 = a4;
  v16 = a4;
  v17 = a5;
  sub_1BB4CE404(0, a6, a3, v16, a5);
  v55 = a2;
  v18 = sub_1BB873F54();
  v19 = v18;
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_41;
  v20 = 1 << *(_BYTE *)(v15 + 32);
  v21 = *(_QWORD *)(v15 + 64);
  v53 = (_QWORD *)(v15 + 64);
  if (v20 < 64)
    v22 = ~(-1 << v20);
  else
    v22 = -1;
  v23 = v22 & v21;
  v51 = v6;
  v52 = (unint64_t)(v20 + 63) >> 6;
  v24 = v18 + 64;
  result = swift_retain();
  v26 = 0;
  while (1)
  {
    if (v23)
    {
      v29 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v30 = v29 | (v26 << 6);
      goto LABEL_22;
    }
    v31 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v31 >= v52)
      break;
    v32 = v53;
    v33 = v53[v31];
    ++v26;
    if (!v33)
    {
      v26 = v31 + 1;
      if (v31 + 1 >= v52)
        goto LABEL_34;
      v33 = v53[v26];
      if (!v33)
      {
        v34 = v31 + 2;
        if (v34 >= v52)
        {
LABEL_34:
          swift_release();
          v11 = v51;
          if ((v55 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v33 = v53[v34];
        if (!v33)
        {
          while (1)
          {
            v26 = v34 + 1;
            if (__OFADD__(v34, 1))
              goto LABEL_43;
            if (v26 >= v52)
              goto LABEL_34;
            v33 = v53[v26];
            ++v34;
            if (v33)
              goto LABEL_21;
          }
        }
        v26 = v34;
      }
    }
LABEL_21:
    v23 = (v33 - 1) & v33;
    v30 = __clz(__rbit64(v33)) + (v26 << 6);
LABEL_22:
    v35 = *(_QWORD *)(v15 + 56);
    v36 = v15;
    v37 = (uint64_t *)(*(_QWORD *)(v15 + 48) + 16 * v30);
    v39 = *v37;
    v38 = v37[1];
    v40 = *(_QWORD *)(v54 + 72);
    v41 = v35 + v40 * v30;
    if ((v55 & 1) != 0)
    {
      sub_1BA7BE148(v41, v56, v57, v58, v17);
    }
    else
    {
      sub_1BA7BCB94(v41, v56, v57, v58, v17);
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v42 = -1 << *(_BYTE *)(v19 + 32);
    v43 = result & ~v42;
    v44 = v43 >> 6;
    if (((-1 << v43) & ~*(_QWORD *)(v24 + 8 * (v43 >> 6))) != 0)
    {
      v27 = __clz(__rbit64((-1 << v43) & ~*(_QWORD *)(v24 + 8 * (v43 >> 6)))) | v43 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v45 = 0;
      v46 = (unint64_t)(63 - v42) >> 6;
      do
      {
        if (++v44 == v46 && (v45 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v47 = v44 == v46;
        if (v44 == v46)
          v44 = 0;
        v45 |= v47;
        v48 = *(_QWORD *)(v24 + 8 * v44);
      }
      while (v48 == -1);
      v27 = __clz(__rbit64(~v48)) + (v44 << 6);
    }
    *(_QWORD *)(v24 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v28 = (_QWORD *)(*(_QWORD *)(v19 + 48) + 16 * v27);
    *v28 = v39;
    v28[1] = v38;
    result = sub_1BA7BE148(v56, *(_QWORD *)(v19 + 56) + v40 * v27, v57, v58, v17);
    ++*(_QWORD *)(v19 + 16);
    v15 = v36;
  }
  swift_release();
  v11 = v51;
  v32 = v53;
  if ((v55 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v49 = 1 << *(_BYTE *)(v15 + 32);
  if (v49 >= 64)
    bzero(v32, ((unint64_t)(v49 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v32 = -1 << v49;
  *(_QWORD *)(v15 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v11 = v19;
  return result;
}

uint64_t sub_1BB4AEECC(uint64_t a1, char a2)
{
  return sub_1BB4B62CC(a1, a2, &qword_1EF2C5030, &qword_1EF2BAC40, (uint64_t)&type metadata for FormatSourceMap);
}

uint64_t sub_1BB4AEEE8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CD51C();
  v39 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v36 = v2;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 24 * v21;
    v34 = *(_QWORD *)v33;
    v40 = *(_OWORD *)(v33 + 8);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
    *(_QWORD *)v19 = v34;
    *(_OWORD *)(v19 + 8) = v40;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4AF224(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t result;
  int64_t v25;
  char v26;
  _OWORD v27[6];
  _BYTE v28[25];

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1ED3A3038, (void (*)(void))sub_1BB4CE9EC);
  v26 = a2;
  v6 = sub_1BB873F54();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_28;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v25 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v10 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v25 <= 1)
  {
    swift_release();
    v11 = (_QWORD *)(v5 + 64);
    if ((v26 & 1) == 0)
      goto LABEL_28;
    goto LABEL_24;
  }
  v11 = (_QWORD *)(v5 + 64);
  v12 = *(_QWORD *)(v5 + 72);
  v13 = 1;
  if (v12)
    goto LABEL_17;
  v13 = 2;
  if (v25 <= 2)
    goto LABEL_21;
  v12 = *(_QWORD *)(v5 + 80);
  if (v12)
  {
LABEL_17:
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + 16 * v10);
    v16 = (__int128 *)(*(_QWORD *)(v5 + 56) + (v10 << 7));
    if ((v26 & 1) == 0)
    {
      v18 = v16[2];
      v17 = v16[3];
      v19 = *v16;
      v27[1] = v16[1];
      v27[2] = v18;
      v27[0] = v19;
      v21 = v16[5];
      v20 = v16[6];
      v22 = v16[4];
      *(_OWORD *)&v28[9] = *(__int128 *)((char *)v16 + 105);
      v27[5] = v21;
      *(_OWORD *)v28 = v20;
      v27[3] = v17;
      v27[4] = v22;
      swift_bridgeObjectRetain();
      sub_1BA741FD8((uint64_t)v27);
    }
    sub_1BB8745CC();
    __asm { BR              X9 }
  }
  v14 = 3;
  if (v25 > 3)
  {
    v12 = *(_QWORD *)(v5 + 88);
    if (v12)
    {
      v13 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v13 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        JUMPOUT(0x1BB4AF888);
      }
      if (v13 >= v25)
        break;
      v12 = *(_QWORD *)(v5 + 64 + 8 * v13);
      ++v14;
      if (v12)
        goto LABEL_17;
    }
  }
LABEL_21:
  swift_release();
  if ((v26 & 1) == 0)
    goto LABEL_28;
LABEL_24:
  v23 = 1 << *(_BYTE *)(v5 + 32);
  if (v23 >= 64)
    bzero(v11, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v11 = -1 << v23;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_28:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1BB4AF8D0(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatScopedOption, (void (*)(_QWORD, __n128))sub_1BB4CD5F0, (void (*)(unint64_t, char *))sub_1BB4CD660, (void (*)(unint64_t, char *))sub_1BB4CD654);
}

uint64_t sub_1BB4AF8F4(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatJson, (void (*)(_QWORD, __n128))sub_1BB4CD580, (void (*)(unint64_t, char *))sub_1BA9BE630, (void (*)(unint64_t, char *))sub_1BB4CD5E4);
}

uint64_t sub_1BB4AF918(uint64_t a1, int a2)
{
  return sub_1BB4BBDE4(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB48B0], (void (*)(_QWORD, __n128))sub_1BA8F5BFC);
}

uint64_t sub_1BB4AF92C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F5C60();
  v51 = a2;
  v58 = sub_1BB873F54();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v6 = 1 << *(_BYTE *)(v5 + 32);
  v49 = (_QWORD *)(v5 + 64);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v5 + 64);
  v47 = v2;
  v48 = (unint64_t)(v6 + 63) >> 6;
  v9 = v58 + 64;
  result = swift_retain();
  v11 = 0;
  v50 = v5;
  while (1)
  {
    if (v8)
    {
      v52 = (v8 - 1) & v8;
      v53 = v11;
      v24 = __clz(__rbit64(v8)) | (v11 << 6);
      goto LABEL_31;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v25 >= v48)
      break;
    v26 = v49;
    v27 = v49[v25];
    v28 = v11 + 1;
    if (!v27)
    {
      v28 = v11 + 2;
      if (v11 + 2 >= v48)
        goto LABEL_33;
      v27 = v49[v28];
      if (!v27)
      {
        v29 = v11 + 3;
        if (v11 + 3 >= v48)
        {
LABEL_33:
          swift_release();
          v3 = v47;
          if ((v51 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v27 = v49[v29];
        if (!v27)
        {
          while (1)
          {
            v28 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v28 >= v48)
              goto LABEL_33;
            v27 = v49[v28];
            ++v29;
            if (v27)
              goto LABEL_30;
          }
        }
        v28 = v11 + 3;
      }
    }
LABEL_30:
    v52 = (v27 - 1) & v27;
    v53 = v28;
    v24 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_31:
    v34 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v24);
    v36 = *v34;
    v35 = v34[1];
    v37 = *(_QWORD *)(v5 + 56) + 88 * v24;
    v38 = *(_QWORD *)(v37 + 8);
    v39 = *(_QWORD *)(v37 + 24);
    v54 = *(_QWORD *)v37;
    v55 = *(_QWORD *)(v37 + 16);
    v40 = *(_QWORD *)(v37 + 32);
    v41 = *(_QWORD *)(v37 + 40);
    v43 = *(_QWORD *)(v37 + 48);
    v42 = *(_QWORD *)(v37 + 56);
    v45 = *(_QWORD *)(v37 + 64);
    v44 = *(_QWORD *)(v37 + 72);
    v59 = *(_BYTE *)(v37 + 80);
    if ((v51 & 1) == 0)
    {
      v57 = *(_QWORD *)(v37 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA7261E0(v43, v42, v45, v44, v59);
      v38 = v57;
    }
    v56 = v40;
    v12 = v39;
    v13 = v38;
    sub_1BB8745CC();
    sub_1BB872A90();
    v14 = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v58 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v9 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v9 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      v19 = v56;
      v20 = v42;
      result = v45;
      v21 = v44;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v15) >> 6;
      v19 = v56;
      v20 = v42;
      result = v45;
      v21 = v44;
      do
      {
        if (++v17 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v32 = v17 == v31;
        if (v17 == v31)
          v17 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v9 + 8 * v17);
      }
      while (v33 == -1);
      v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    *(_QWORD *)(v9 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v22 = (_QWORD *)(*(_QWORD *)(v58 + 48) + 16 * v18);
    *v22 = v36;
    v22[1] = v35;
    v23 = *(_QWORD *)(v58 + 56) + 88 * v18;
    *(_QWORD *)v23 = v54;
    *(_QWORD *)(v23 + 8) = v13;
    *(_QWORD *)(v23 + 16) = v55;
    *(_QWORD *)(v23 + 24) = v12;
    *(_QWORD *)(v23 + 32) = v19;
    *(_QWORD *)(v23 + 40) = v41;
    *(_QWORD *)(v23 + 48) = v43;
    *(_QWORD *)(v23 + 56) = v20;
    *(_QWORD *)(v23 + 64) = result;
    *(_QWORD *)(v23 + 72) = v21;
    *(_BYTE *)(v23 + 80) = v59;
    ++*(_QWORD *)(v58 + 16);
    v5 = v50;
    v8 = v52;
    v11 = v53;
  }
  swift_release();
  v3 = v47;
  v26 = v49;
  if ((v51 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v46 = 1 << *(_BYTE *)(v5 + 32);
  if (v46 >= 64)
    bzero(v26, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v46;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v58;
  return result;
}

uint64_t sub_1BB4AFD0C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  char v41;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C50A0, (void (*)(void))sub_1BA834FF0);
  v40 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 32 * v21;
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v41 = *(_BYTE *)(v32 + 16);
      v35 = *(_QWORD *)(v32 + 24);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
      *(_QWORD *)v19 = v33;
      *(_QWORD *)(v19 + 8) = v34;
      *(_BYTE *)(v19 + 16) = v41;
      *(_QWORD *)(v19 + 24) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B0058(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  __int128 v40;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CD6D0();
  v38 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v11)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = (__int128 *)(*(_QWORD *)(v5 + 56) + 32 * v22);
    v39 = *v34;
    v40 = v34[1];
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v33;
    v19[1] = v32;
    v20 = (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v18);
    *v20 = v39;
    v20[1] = v40;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B0368(uint64_t a1, char a2)
{
  return sub_1BA6A4974(a1, a2, (void (*)(_QWORD))sub_1BA6B3D08);
}

uint64_t sub_1BB4B0374(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6314();
  v6 = a2;
  v7 = sub_1BB873F54();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1BB4B0684(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CEDFC(0, (unint64_t *)&qword_1ED39EA88, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      v34 = v32;
    }
    result = sub_1BB8738AC();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B0960(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1BB4CCD3C();
  v42 = a2;
  v10 = sub_1BB873F54();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    result = sub_1BB87285C();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BB4B0CF0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  sub_1BA968CEC();
  v35 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v20 = v19 | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v34[v21];
        ++v13;
        if (!v22)
        {
          v13 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v34[v13];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v35 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v34[v23];
            if (!v22)
            {
              while (1)
              {
                v13 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_40;
                if (v13 >= v33)
                  goto LABEL_33;
                v22 = v34[v13];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v13 = v23;
          }
        }
LABEL_30:
        v10 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(void **)(*(_QWORD *)(v5 + 56) + v28);
      if ((v35 & 1) == 0)
      {
        swift_retain();
        v31 = v30;
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      swift_bridgeObjectRelease();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B1010(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F63DC();
  v37 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B1310(uint64_t a1, char a2)
{
  return sub_1BB4BD0A4(a1, a2, (void (*)(_QWORD))sub_1BA6C3EEC);
}

uint64_t sub_1BB4B131C(uint64_t a1, char a2)
{
  return sub_1BB4BD0A4(a1, a2, (void (*)(_QWORD))sub_1BA6C3CCC);
}

uint64_t sub_1BB4B1328(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CD498(0, (unint64_t *)&unk_1EF2C5208, &qword_1EF2C5200, (uint64_t)&type metadata for PuzzleStatsInfo.StatValue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v40 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 112 * v21;
      v45 = *(_OWORD *)(v32 + 32);
      v46 = *(_OWORD *)(v32 + 16);
      v43 = *(_OWORD *)(v32 + 64);
      v44 = *(_OWORD *)(v32 + 48);
      v41 = *(_OWORD *)v32;
      v42 = *(_OWORD *)(v32 + 80);
      v33 = *(_QWORD *)(v32 + 96);
      v34 = *(_BYTE *)(v32 + 104);
      v35 = *(_BYTE *)(v32 + 105);
      if ((v40 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 112 * v17;
      *(_OWORD *)v19 = v41;
      *(_OWORD *)(v19 + 16) = v46;
      *(_OWORD *)(v19 + 32) = v45;
      *(_OWORD *)(v19 + 48) = v44;
      *(_OWORD *)(v19 + 64) = v43;
      *(_OWORD *)(v19 + 80) = v42;
      *(_QWORD *)(v19 + 96) = v33;
      *(_BYTE *)(v19 + 104) = v34;
      *(_BYTE *)(v19 + 105) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B16B0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CEA30();
  result = sub_1BB873F54();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v21 >= v12)
          goto LABEL_33;
        v22 = v30[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v12)
            goto LABEL_33;
          v22 = v30[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v30[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v22 = v30[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v11 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v31 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v20);
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1BB8745CC();
      sub_1BB8745FC();
      sub_1BB8745FC();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        v18 = v31;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        v18 = v31;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17) = v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B19A4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F5B98();
  v38 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v11)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v39 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + v19) = v39;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B1CAC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t i;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int16 v77;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, (unint64_t *)&unk_1EF2C5080, (void (*)(void))sub_1BA834FF0);
  v51 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v49 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v47 = v2;
  v48 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v51 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v48)
      break;
    v27 = v49;
    v28 = v49[v26];
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v48)
        goto LABEL_33;
      v28 = v49[v13];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v48)
        {
LABEL_33:
          swift_release();
          v3 = v47;
          if ((v51 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = v49[v29];
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v13 >= v48)
              goto LABEL_33;
            v28 = v49[v13];
            ++v29;
            if (v28)
              goto LABEL_22;
          }
        }
        v13 = v29;
      }
    }
LABEL_22:
    v10 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if ((v51 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 152 * v18;
      v23 = *(_QWORD *)(v22 + 8);
      v53 = *(_QWORD *)v22;
      v55 = *(_OWORD *)(v22 + 16);
      v52 = *(_BYTE *)(v22 + 40);
      v66 = *(_QWORD *)(v22 + 56);
      v67 = *(_QWORD *)(v22 + 48);
      v65 = *(_QWORD *)(v22 + 64);
      v60 = *(_QWORD *)(v22 + 80);
      v59 = *(_QWORD *)(v22 + 88);
      v58 = *(_QWORD *)(v22 + 96);
      v56 = *(_QWORD *)(v22 + 32);
      v57 = *(_QWORD *)(v22 + 104);
      v24 = *(_QWORD *)(v22 + 120);
      v54 = *(_QWORD *)(v22 + 112);
      v25 = *(_BYTE *)(v22 + 128);
      v61 = *(_QWORD *)(v22 + 136);
      v62 = *(_QWORD *)(v22 + 72);
      v63 = *(_BYTE *)(v22 + 144);
      v64 = *(_BYTE *)(v22 + 145);
      goto LABEL_24;
    }
LABEL_23:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v30;
    v21 = v30[1];
    v31 = *(_QWORD *)(v5 + 56) + 152 * v18;
    v32 = *(_OWORD *)(v31 + 16);
    v68 = *(_OWORD *)v31;
    v69 = v32;
    v33 = *(_OWORD *)(v31 + 80);
    v35 = *(_OWORD *)(v31 + 32);
    v34 = *(_OWORD *)(v31 + 48);
    v72 = *(_OWORD *)(v31 + 64);
    v73 = v33;
    v70 = v35;
    v71 = v34;
    v37 = *(_OWORD *)(v31 + 112);
    v36 = *(_OWORD *)(v31 + 128);
    v38 = *(_OWORD *)(v31 + 96);
    v77 = *(_WORD *)(v31 + 144);
    v75 = v37;
    v76 = v36;
    v74 = v38;
    v64 = HIBYTE(v77);
    v63 = v77;
    v66 = *((_QWORD *)&v71 + 1);
    v67 = v71;
    v65 = v72;
    v61 = *((_QWORD *)&v36 + 1);
    v62 = *((_QWORD *)&v72 + 1);
    v59 = *((_QWORD *)&v73 + 1);
    v60 = v73;
    v57 = *((_QWORD *)&v38 + 1);
    v58 = v38;
    v24 = *((_QWORD *)&v37 + 1);
    v25 = v36;
    v52 = BYTE8(v35);
    v56 = v35;
    v23 = *((_QWORD *)&v68 + 1);
    v54 = v37;
    v55 = v69;
    v53 = v68;
    swift_bridgeObjectRetain();
    sub_1BA9F06B0((uint64_t)&v68);
LABEL_24:
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v39 = -1 << *(_BYTE *)(v7 + 32);
    v40 = result & ~v39;
    v41 = v40 >> 6;
    if (((-1 << v40) & ~*(_QWORD *)(v11 + 8 * (v40 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v40) & ~*(_QWORD *)(v11 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v42 = 0;
      v43 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v44 = v41 == v43;
        if (v41 == v43)
          v41 = 0;
        v42 |= v44;
        v45 = *(_QWORD *)(v11 + 8 * v41);
      }
      while (v45 == -1);
      v14 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 152 * v14;
    *(_QWORD *)v16 = v53;
    *(_QWORD *)(v16 + 8) = v23;
    *(_OWORD *)(v16 + 16) = v55;
    *(_QWORD *)(v16 + 32) = v56;
    *(_BYTE *)(v16 + 40) = v52;
    *(_QWORD *)(v16 + 48) = v67;
    *(_QWORD *)(v16 + 56) = v66;
    *(_QWORD *)(v16 + 64) = v65;
    *(_QWORD *)(v16 + 72) = v62;
    *(_QWORD *)(v16 + 80) = v60;
    *(_QWORD *)(v16 + 88) = v59;
    *(_QWORD *)(v16 + 96) = v58;
    *(_QWORD *)(v16 + 104) = v57;
    *(_QWORD *)(v16 + 112) = v54;
    *(_QWORD *)(v16 + 120) = v24;
    *(_BYTE *)(v16 + 128) = v25;
    *(_QWORD *)(v16 + 136) = v61;
    *(_BYTE *)(v16 + 144) = v63;
    *(_BYTE *)(v16 + 145) = v64;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v47;
  v27 = v49;
  if ((v51 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v46 = 1 << *(_BYTE *)(v5 + 32);
  if (v46 >= 64)
    bzero(v27, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v46;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B2194(uint64_t a1, int a2)
{
  return sub_1BB4BBDE4(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], (void (*)(_QWORD, __n128))sub_1BA8F57F8);
}

uint64_t sub_1BB4B21A8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F56CC();
  result = sub_1BB873F54();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_1BB8745C0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B244C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F5730();
  result = sub_1BB873F54();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_1BB8745C0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B26EC(uint64_t a1, char a2)
{
  return sub_1BB4B26F8(a1, a2, (void (*)(_QWORD))sub_1BB4CCDD0);
}

uint64_t sub_1BB4B26F8(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v39 = a2;
  v7 = sub_1BB873F54();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v37)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v37)
        goto LABEL_33;
      v25 = *(_QWORD *)(v38 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v25 = *(_QWORD *)(v38 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = (__int128 *)(*(_QWORD *)(v6 + 56) + 48 * v22);
    v42 = v34[1];
    v40 = *v34;
    v41 = v34[2];
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v33;
    v19[1] = v32;
    v20 = (_OWORD *)(*(_QWORD *)(v8 + 56) + 48 * v18);
    *v20 = v40;
    v20[1] = v42;
    v20[2] = v41;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v24 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1BB4B2A70(uint64_t a1, char a2)
{
  return sub_1BB4ADCD0(a1, a2, (void (*)(_QWORD))sub_1BB4CDEA4);
}

uint64_t sub_1BB4B2A7C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CE628();
  v40 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 32 * v21);
      v33 = *v32;
      v34 = v32[1];
      v35 = v32[3];
      v41 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 32 * v17);
      *v19 = v33;
      v19[1] = v34;
      v19[2] = v41;
      v19[3] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B2DA0(uint64_t a1, char a2)
{
  return sub_1BB4B62CC(a1, a2, (unint64_t *)&unk_1ED3AB368, (unint64_t *)&qword_1ED3AAF50, (uint64_t)&type metadata for SportsConfigResourceEmbed);
}

uint64_t sub_1BB4B2DBC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  _QWORD *v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  int64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CE5C4();
  v57 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v54 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v52 = v2;
  v53 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  v55 = v5;
  v56 = v7;
  while (1)
  {
    if (v10)
    {
      v58 = (v10 - 1) & v10;
      v59 = v13;
      v28 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_31;
    }
    v29 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v29 >= v53)
      break;
    v30 = v54;
    v31 = v54[v29];
    v32 = v13 + 1;
    if (!v31)
    {
      v32 = v13 + 2;
      if (v13 + 2 >= v53)
        goto LABEL_33;
      v31 = v54[v32];
      if (!v31)
      {
        v33 = v13 + 3;
        if (v13 + 3 >= v53)
        {
LABEL_33:
          swift_release();
          v3 = v52;
          v7 = v56;
          if ((v57 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v31 = v54[v33];
        if (!v31)
        {
          while (1)
          {
            v32 = v33 + 1;
            if (__OFADD__(v33, 1))
              goto LABEL_42;
            if (v32 >= v53)
              goto LABEL_33;
            v31 = v54[v32];
            ++v33;
            if (v31)
              goto LABEL_30;
          }
        }
        v32 = v13 + 3;
      }
    }
LABEL_30:
    v58 = (v31 - 1) & v31;
    v59 = v32;
    v28 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_31:
    v38 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v28);
    v40 = *v38;
    v39 = v38[1];
    v41 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 112 * v28);
    v42 = v41[1];
    v65 = *v41;
    v43 = v41[2];
    v44 = v41[3];
    v46 = v41[4];
    v45 = v41[5];
    v47 = v41[6];
    v48 = v41[7];
    v49 = v41[8];
    v50 = v41[9];
    v69 = v41[10];
    v68 = v41[11];
    v66 = v41[13];
    v67 = v41[12];
    if ((v57 & 1) == 0)
    {
      v63 = v41[2];
      v64 = v41[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BAA3501C(v63, v44);
      swift_bridgeObjectRetain();
      sub_1BAA3510C(v48, v49, v50, v69);
      v43 = v63;
      v42 = v64;
    }
    v62 = v50;
    v61 = v47;
    v60 = v46;
    v14 = v44;
    v15 = v43;
    v16 = v42;
    v7 = v56;
    sub_1BB8745CC();
    sub_1BB872A90();
    v17 = sub_1BB874608();
    v18 = -1 << *(_BYTE *)(v56 + 32);
    v19 = v17 & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      v22 = v60;
      v23 = v61;
      result = v48;
      v24 = v62;
      v25 = v49;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v18) >> 6;
      v22 = v60;
      v23 = v61;
      result = v48;
      v24 = v62;
      v25 = v49;
      do
      {
        if (++v20 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v36 = v20 == v35;
        if (v20 == v35)
          v20 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v11 + 8 * v20);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v20 << 6);
    }
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v26 = (_QWORD *)(*(_QWORD *)(v56 + 48) + 16 * v21);
    *v26 = v40;
    v26[1] = v39;
    v27 = (_QWORD *)(*(_QWORD *)(v56 + 56) + 112 * v21);
    *v27 = v65;
    v27[1] = v16;
    v27[2] = v15;
    v27[3] = v14;
    v27[4] = v22;
    v27[5] = v45;
    v27[6] = v23;
    v27[7] = result;
    v27[8] = v25;
    v27[9] = v24;
    v27[10] = v69;
    v27[11] = v68;
    v27[12] = v67;
    v27[13] = v66;
    ++*(_QWORD *)(v56 + 16);
    v5 = v55;
    v10 = v58;
    v13 = v59;
  }
  swift_release();
  v3 = v52;
  v30 = v54;
  if ((v57 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v51 = 1 << *(_BYTE *)(v5 + 32);
  if (v51 >= 64)
    bzero(v30, ((unint64_t)(v51 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v30 = -1 << v51;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B31C8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  __int128 *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  char v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CDB78();
  v48 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v46 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v45 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v18 = v17 | (v13 << 6);
        if ((v48 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        v26 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v26 >= v45)
          goto LABEL_33;
        v27 = v46[v26];
        ++v13;
        if (!v27)
        {
          v13 = v26 + 1;
          if (v26 + 1 >= v45)
            goto LABEL_33;
          v27 = v46[v13];
          if (!v27)
          {
            v28 = v26 + 2;
            if (v28 >= v45)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v48 & 1) != 0)
              {
                v44 = 1 << *(_BYTE *)(v5 + 32);
                if (v44 >= 64)
                  bzero(v46, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v46 = -1 << v44;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v27 = v46[v28];
            if (!v27)
            {
              while (1)
              {
                v13 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_40;
                if (v13 >= v45)
                  goto LABEL_33;
                v27 = v46[v13];
                ++v28;
                if (v27)
                  goto LABEL_22;
              }
            }
            v13 = v28;
          }
        }
LABEL_22:
        v10 = (v27 - 1) & v27;
        v18 = __clz(__rbit64(v27)) + (v13 << 6);
        if ((v48 & 1) != 0)
        {
LABEL_10:
          v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
          v20 = *v19;
          v21 = v19[1];
          v22 = *(_QWORD *)(v5 + 56) + (v18 << 7);
          v56 = *(_QWORD *)(v22 + 8);
          v57 = *(_QWORD *)v22;
          v55 = *(_QWORD *)(v22 + 16);
          v23 = *(_QWORD *)(v22 + 40);
          v51 = *(_QWORD *)(v22 + 32);
          v52 = *(_QWORD *)(v22 + 24);
          v24 = *(_QWORD *)(v22 + 48);
          v25 = *(unsigned int *)(v22 + 56) | ((unint64_t)*(unsigned __int16 *)(v22 + 60) << 32);
          v49 = *(_OWORD *)(v22 + 64);
          v50 = *(_OWORD *)(v22 + 80);
          v53 = *(_OWORD *)(v22 + 112);
          v54 = *(_OWORD *)(v22 + 96);
          goto LABEL_24;
        }
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v29;
      v21 = v29[1];
      v30 = (__int128 *)(*(_QWORD *)(v5 + 56) + (v18 << 7));
      v32 = v30[2];
      v31 = v30[3];
      v33 = *v30;
      v59 = v30[1];
      v60 = v32;
      v58 = v33;
      v34 = v30[7];
      v36 = v30[4];
      v35 = v30[5];
      v64 = v30[6];
      v65 = v34;
      v62 = v36;
      v63 = v35;
      v61 = v31;
      v53 = v34;
      v54 = v64;
      v56 = *((_QWORD *)&v58 + 1);
      v57 = v58;
      v55 = v59;
      v23 = *((_QWORD *)&v32 + 1);
      v51 = v32;
      v52 = *((_QWORD *)&v59 + 1);
      v24 = v31;
      v25 = DWORD2(v31) | ((unint64_t)WORD6(v31) << 32);
      v49 = v36;
      v50 = v35;
      swift_bridgeObjectRetain();
      sub_1BAF020A4((uint64_t)&v58);
LABEL_24:
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v37 = -1 << *(_BYTE *)(v7 + 32);
      v38 = result & ~v37;
      v39 = v38 >> 6;
      if (((-1 << v38) & ~*(_QWORD *)(v11 + 8 * (v38 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v11 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v40 = 0;
        v41 = (unint64_t)(63 - v37) >> 6;
        do
        {
          if (++v39 == v41 && (v40 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v42 = v39 == v41;
          if (v39 == v41)
            v39 = 0;
          v40 |= v42;
          v43 = *(_QWORD *)(v11 + 8 * v39);
        }
        while (v43 == -1);
        v14 = __clz(__rbit64(~v43)) + (v39 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v20;
      v15[1] = v21;
      v16 = *(_QWORD *)(v7 + 56) + (v14 << 7);
      *(_QWORD *)v16 = v57;
      *(_QWORD *)(v16 + 8) = v56;
      *(_QWORD *)(v16 + 16) = v55;
      *(_QWORD *)(v16 + 24) = v52;
      *(_QWORD *)(v16 + 32) = v51;
      *(_QWORD *)(v16 + 40) = v23;
      *(_QWORD *)(v16 + 48) = v24;
      *(_WORD *)(v16 + 60) = WORD2(v25);
      *(_DWORD *)(v16 + 56) = v25;
      *(_OWORD *)(v16 + 64) = v49;
      *(_OWORD *)(v16 + 80) = v50;
      *(_OWORD *)(v16 + 96) = v54;
      *(_OWORD *)(v16 + 112) = v53;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B35DC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  __int128 *v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C5198, (void (*)(void))sub_1BB4CD890);
  v39 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v36 = v2;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = *(_QWORD *)(v5 + 48) + 24 * v21;
    v32 = *(_QWORD *)v30;
    v31 = *(_QWORD *)(v30 + 8);
    v33 = *(_BYTE *)(v30 + 16);
    v34 = (__int128 *)(*(_QWORD *)(v5 + 56) + 48 * v21);
    v42 = v34[1];
    v40 = *v34;
    v41 = v34[2];
    if ((v39 & 1) == 0)
    {
      sub_1BA987528(v32, v31, v33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB8745D8();
    sub_1BB872A90();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = *(_QWORD *)(v7 + 48) + 24 * v17;
    *(_QWORD *)v18 = v32;
    *(_QWORD *)(v18 + 8) = v31;
    *(_BYTE *)(v18 + 16) = v33;
    v19 = (_OWORD *)(*(_QWORD *)(v7 + 56) + 48 * v17);
    *v19 = v40;
    v19[1] = v42;
    v19[2] = v41;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B399C(uint64_t a1, char a2)
{
  return sub_1BB4BD0A4(a1, a2, (void (*)(_QWORD))sub_1BB4CD9C8);
}

uint64_t sub_1BB4B39A8(uint64_t a1, char a2)
{
  return sub_1BB4B62CC(a1, a2, (unint64_t *)&qword_1ED39ED00, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968]);
}

uint64_t sub_1BB4B39C4(uint64_t a1, char a2)
{
  return sub_1BA6F01D0(a1, a2, (void (*)(_QWORD))sub_1BB4CDCBC);
}

uint64_t sub_1BB4B39D0(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult, (void (*)(_QWORD, __n128))sub_1BB4CDC40, (void (*)(unint64_t, char *))sub_1BB4CDCB0, (void (*)(unint64_t, char *))sub_1BB4CDCA4);
}

uint64_t sub_1BB4B39F4(uint64_t a1, char a2)
{
  return sub_1BB4B57C4(a1, a2, (void (*)(_QWORD))sub_1BB4CDAC0);
}

uint64_t sub_1BB4B3A00(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;
  _BYTE v34[72];

  v3 = v2;
  v5 = type metadata accessor for WebEmbedDatastoreCacheKey();
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1BA8F5620();
  v33 = a2;
  v9 = sub_1BB873F54();
  v10 = (_QWORD *)v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v29 = v2;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v31 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v30 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v21 = v20 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        v23 = v31;
        if (v22 >= v30)
          goto LABEL_24;
        v24 = v31[v22];
        ++v17;
        if (!v24)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v30)
            goto LABEL_24;
          v24 = v31[v17];
          if (!v24)
          {
            v25 = v22 + 2;
            if (v25 >= v30)
            {
LABEL_24:
              swift_release();
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v29;
                goto LABEL_31;
              }
              v28 = 1 << *(_BYTE *)(v8 + 32);
              if (v28 >= 64)
                bzero(v23, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v23 = -1 << v28;
              v3 = v29;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v24 = v31[v25];
            if (!v24)
            {
              while (1)
              {
                v17 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_33;
                if (v17 >= v30)
                  goto LABEL_24;
                v24 = v31[v17];
                ++v25;
                if (v24)
                  goto LABEL_21;
              }
            }
            v17 = v25;
          }
        }
LABEL_21:
        v14 = (v24 - 1) & v24;
        v21 = __clz(__rbit64(v24)) + (v17 << 6);
      }
      v26 = *(_QWORD *)(v32 + 72);
      v27 = *(_QWORD *)(v8 + 48) + v26 * v21;
      if ((v33 & 1) != 0)
      {
        sub_1BA5193C4(v27, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
        v18 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v21);
      }
      else
      {
        sub_1BA4C2DD8(v27, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
        v18 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v21);
        swift_bridgeObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB41AD48((uint64_t)v34);
      sub_1BB874608();
      v19 = sub_1BB873BDC();
      *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      result = sub_1BA5193C4((uint64_t)v7, v10[6] + v26 * v19, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
      *(_QWORD *)(v10[7] + 8 * v19) = v18;
      ++v10[2];
    }
  }
  result = swift_release();
LABEL_31:
  *v3 = v10;
  return result;
}

uint64_t sub_1BB4B3CFC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t i;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C50C0, (void (*)(void))sub_1BA834FF0);
  v51 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v49 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v47 = v2;
  v48 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v51 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v48)
      break;
    v27 = v49;
    v28 = v49[v26];
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v48)
        goto LABEL_33;
      v28 = v49[v13];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v48)
        {
LABEL_33:
          swift_release();
          v3 = v47;
          if ((v51 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = v49[v29];
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v13 >= v48)
              goto LABEL_33;
            v28 = v49[v13];
            ++v29;
            if (v28)
              goto LABEL_22;
          }
        }
        v13 = v29;
      }
    }
LABEL_22:
    v10 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if ((v51 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 152 * v18;
      v23 = *(_QWORD *)(v22 + 8);
      v52 = *(_QWORD *)v22;
      v54 = *(_QWORD *)(v22 + 16);
      v56 = *(_QWORD *)(v22 + 24);
      v57 = *(_QWORD *)(v22 + 40);
      v53 = *(_BYTE *)(v22 + 48);
      v67 = *(_QWORD *)(v22 + 64);
      v68 = *(_QWORD *)(v22 + 56);
      v64 = *(_QWORD *)(v22 + 80);
      v62 = *(_QWORD *)(v22 + 88);
      v61 = *(_QWORD *)(v22 + 96);
      v59 = *(_QWORD *)(v22 + 32);
      v60 = *(_QWORD *)(v22 + 104);
      v58 = *(_QWORD *)(v22 + 112);
      v24 = *(_QWORD *)(v22 + 128);
      v55 = *(_QWORD *)(v22 + 120);
      v25 = *(_BYTE *)(v22 + 136);
      v63 = *(_BYTE *)(v22 + 137);
      v65 = *(_QWORD *)(v22 + 144);
      v66 = *(_QWORD *)(v22 + 72);
      goto LABEL_24;
    }
LABEL_23:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v30;
    v21 = v30[1];
    v31 = *(_QWORD *)(v5 + 56) + 152 * v18;
    v32 = *(_OWORD *)(v31 + 16);
    v69 = *(_OWORD *)v31;
    v70 = v32;
    v33 = *(_OWORD *)(v31 + 80);
    v35 = *(_OWORD *)(v31 + 32);
    v34 = *(_OWORD *)(v31 + 48);
    v73 = *(_OWORD *)(v31 + 64);
    v74 = v33;
    v71 = v35;
    v72 = v34;
    v37 = *(_OWORD *)(v31 + 112);
    v36 = *(_OWORD *)(v31 + 128);
    v38 = *(_OWORD *)(v31 + 96);
    v78 = *(_QWORD *)(v31 + 144);
    v76 = v37;
    v77 = v36;
    v75 = v38;
    v65 = v78;
    v63 = BYTE9(v36);
    v67 = v73;
    v68 = *((_QWORD *)&v72 + 1);
    v66 = *((_QWORD *)&v73 + 1);
    v64 = v74;
    v61 = v38;
    v62 = *((_QWORD *)&v74 + 1);
    v24 = v36;
    v25 = BYTE8(v36);
    v59 = v35;
    v60 = *((_QWORD *)&v38 + 1);
    v57 = *((_QWORD *)&v35 + 1);
    v58 = v37;
    v53 = v72;
    v55 = *((_QWORD *)&v37 + 1);
    v56 = *((_QWORD *)&v70 + 1);
    v23 = *((_QWORD *)&v69 + 1);
    v54 = v70;
    v52 = v69;
    swift_bridgeObjectRetain();
    sub_1BAADEEC0((uint64_t)&v69);
LABEL_24:
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v39 = -1 << *(_BYTE *)(v7 + 32);
    v40 = result & ~v39;
    v41 = v40 >> 6;
    if (((-1 << v40) & ~*(_QWORD *)(v11 + 8 * (v40 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v40) & ~*(_QWORD *)(v11 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v42 = 0;
      v43 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v44 = v41 == v43;
        if (v41 == v43)
          v41 = 0;
        v42 |= v44;
        v45 = *(_QWORD *)(v11 + 8 * v41);
      }
      while (v45 == -1);
      v14 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 152 * v14;
    *(_QWORD *)v16 = v52;
    *(_QWORD *)(v16 + 8) = v23;
    *(_QWORD *)(v16 + 16) = v54;
    *(_QWORD *)(v16 + 24) = v56;
    *(_QWORD *)(v16 + 32) = v59;
    *(_QWORD *)(v16 + 40) = v57;
    *(_BYTE *)(v16 + 48) = v53;
    *(_QWORD *)(v16 + 56) = v68;
    *(_QWORD *)(v16 + 64) = v67;
    *(_QWORD *)(v16 + 72) = v66;
    *(_QWORD *)(v16 + 80) = v64;
    *(_QWORD *)(v16 + 88) = v62;
    *(_QWORD *)(v16 + 96) = v61;
    *(_QWORD *)(v16 + 104) = v60;
    *(_QWORD *)(v16 + 112) = v58;
    *(_QWORD *)(v16 + 120) = v55;
    *(_QWORD *)(v16 + 128) = v24;
    *(_BYTE *)(v16 + 136) = v25;
    *(_BYTE *)(v16 + 137) = v63;
    *(_QWORD *)(v16 + 144) = v65;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v47;
  v27 = v49;
  if ((v51 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v46 = 1 << *(_BYTE *)(v5 + 32);
  if (v46 >= 64)
    bzero(v27, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v46;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B41E8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  char v43;
  int64_t v44;
  uint64_t v45;
  char v46;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C50D0, (void (*)(void))sub_1BA834FF0);
  v43 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v41 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v40 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v44 = v13;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v40)
          goto LABEL_33;
        v23 = v41[v22];
        v24 = v13 + 1;
        if (!v23)
        {
          v24 = v13 + 2;
          if (v13 + 2 >= v40)
            goto LABEL_33;
          v23 = v41[v24];
          if (!v23)
          {
            v25 = v13 + 3;
            if (v13 + 3 >= v40)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v43 & 1) != 0)
              {
                v39 = 1 << *(_BYTE *)(v5 + 32);
                if (v39 >= 64)
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v39;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v41[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v24 >= v40)
                  goto LABEL_33;
                v23 = v41[v24];
                ++v25;
                if (v23)
                  goto LABEL_30;
              }
            }
            v24 = v13 + 3;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v44 = v24;
        v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      v30 = *(_QWORD *)(v5 + 56);
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v33 = *v31;
      v32 = v31[1];
      v34 = (uint64_t *)(v30 + 48 * v21);
      v35 = v34[1];
      v45 = *v34;
      v36 = v34[2];
      v37 = v34[3];
      v38 = v34[4];
      v46 = *((_BYTE *)v34 + 40);
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA5E7FF4(v37);
        sub_1BA5E7FF4(v38);
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v16 == v27;
          if (v16 == v27)
            v16 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v33;
      v18[1] = v32;
      v19 = *(_QWORD *)(v7 + 56) + 48 * v17;
      v13 = v44;
      *(_QWORD *)v19 = v45;
      *(_QWORD *)(v19 + 8) = v35;
      *(_QWORD *)(v19 + 16) = v36;
      *(_QWORD *)(v19 + 24) = v37;
      *(_QWORD *)(v19 + 32) = v38;
      *(_BYTE *)(v19 + 40) = v46;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B4564(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;

  v4 = *v2;
  sub_1BA8F6924(0, (unint64_t *)&unk_1EF2C5090, (void (*)(void))sub_1BA834FF0);
  v48 = a2;
  v54 = sub_1BB873F54();
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
    v42 = v44;
LABEL_42:
    *v42 = v54;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v4 + 32);
  v46 = (_QWORD *)(v4 + 64);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v4 + 64);
  v45 = (unint64_t)(v5 + 63) >> 6;
  v8 = v54 + 64;
  result = swift_retain();
  v10 = 0;
  v47 = v4;
  while (1)
  {
    if (v7)
    {
      v49 = (v7 - 1) & v7;
      v50 = v10;
      v20 = __clz(__rbit64(v7)) | (v10 << 6);
      goto LABEL_31;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v45)
    {
      swift_release();
      v42 = v44;
      v22 = v46;
      if ((v48 & 1) != 0)
      {
LABEL_37:
        v43 = 1 << *(_BYTE *)(v4 + 32);
        if (v43 >= 64)
          bzero(v22, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v43;
        *(_QWORD *)(v4 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v46;
    v23 = v46[v21];
    v24 = v10 + 1;
    if (!v23)
    {
      v24 = v10 + 2;
      if (v10 + 2 >= v45)
        goto LABEL_34;
      v23 = v46[v24];
      if (!v23)
        break;
    }
LABEL_30:
    v49 = (v23 - 1) & v23;
    v50 = v24;
    v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    v30 = *(_QWORD *)(v4 + 56);
    v31 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v20);
    v32 = *v31;
    v33 = v31[1];
    v34 = (uint64_t *)(v30 + (v20 << 6));
    v35 = v34[1];
    v51 = *v34;
    v36 = v34[2];
    v37 = v34[3];
    v38 = *((_BYTE *)v34 + 32);
    v40 = v34[5];
    v39 = v34[6];
    v41 = *((unsigned __int8 *)v34 + 56);
    v52 = *((_BYTE *)v34 + 58);
    v53 = *((_BYTE *)v34 + 57);
    if ((v48 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA6E6C54(v36, v37, v38);
      sub_1BA6E6C54(v40, v39, v41);
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    v11 = sub_1BB874608();
    v12 = -1 << *(_BYTE *)(v54 + 32);
    v13 = v11 & ~v12;
    v14 = v13 >> 6;
    if (((-1 << v13) & ~*(_QWORD *)(v8 + 8 * (v13 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v8 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      v16 = v37;
      v17 = v39;
      result = v41;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v12) >> 6;
      v16 = v37;
      v17 = v39;
      result = v41;
      do
      {
        if (++v14 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v28 = v14 == v27;
        if (v14 == v27)
          v14 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v14);
      }
      while (v29 == -1);
      v15 = __clz(__rbit64(~v29)) + (v14 << 6);
    }
    *(_QWORD *)(v8 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v18 = (_QWORD *)(*(_QWORD *)(v54 + 48) + 16 * v15);
    *v18 = v32;
    v18[1] = v33;
    v19 = *(_QWORD *)(v54 + 56) + (v15 << 6);
    *(_QWORD *)v19 = v51;
    *(_QWORD *)(v19 + 8) = v35;
    *(_QWORD *)(v19 + 16) = v36;
    *(_QWORD *)(v19 + 24) = v16;
    *(_BYTE *)(v19 + 32) = v38;
    *(_QWORD *)(v19 + 40) = v40;
    *(_QWORD *)(v19 + 48) = v17;
    *(_BYTE *)(v19 + 56) = result;
    *(_BYTE *)(v19 + 57) = v53;
    *(_BYTE *)(v19 + 58) = v52;
    ++*(_QWORD *)(v54 + 16);
    v4 = v47;
    v7 = v49;
    v10 = v50;
  }
  v25 = v10 + 3;
  if (v10 + 3 >= v45)
  {
LABEL_34:
    swift_release();
    v42 = v44;
    if ((v48 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v46[v25];
  if (v23)
  {
    v24 = v10 + 3;
    goto LABEL_30;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v45)
      goto LABEL_34;
    v23 = v46[v24];
    ++v25;
    if (v23)
      goto LABEL_30;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1BB4B495C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  uint64_t v43;
  __int128 v44;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F5D28();
  v42 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = v40[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = v40[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 48 * v21;
    v34 = *(_QWORD *)v33;
    v44 = *(_OWORD *)(v33 + 8);
    v35 = *(_QWORD *)(v33 + 24);
    v43 = *(_QWORD *)(v33 + 32);
    v36 = *(_QWORD *)(v33 + 40);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 48 * v17;
    *(_QWORD *)v19 = v34;
    *(_OWORD *)(v19 + 8) = v44;
    *(_QWORD *)(v19 + 24) = v35;
    *(_QWORD *)(v19 + 32) = v43;
    *(_QWORD *)(v19 + 40) = v36;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B4CCC(uint64_t a1, char a2)
{
  return sub_1BB4BD0A4(a1, a2, (void (*)(_QWORD))sub_1BA8F5924);
}

uint64_t sub_1BB4B4CD8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F5988();
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1BA76EAE0((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1BAF1E538(v25, (uint64_t)&v38);
      sub_1BA747A10(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1BB873C30();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1BA76EAE0(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B4FE8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CD2EC(0, &qword_1EF2C50F0, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerManager, (void (*)(void))sub_1BB4CD840);
  v38 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B5320(uint64_t a1, char a2)
{
  return sub_1BA6F01D0(a1, a2, (void (*)(_QWORD))sub_1BB4CEB28);
}

void sub_1BB4B532C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t *v21;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, (unint64_t *)&unk_1ED3B9A70, (void (*)(void))sub_1BA822498);
  v6 = sub_1BB873F54();
  if (*(_QWORD *)(v5 + 16))
  {
    v21 = v3;
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v15 >= v11)
          goto LABEL_22;
        v16 = v8[v15];
        ++v12;
        if (!v16)
        {
          v12 = v15 + 1;
          if (v15 + 1 >= v11)
            goto LABEL_22;
          v16 = v8[v12];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_22:
              swift_release();
              v3 = v21;
              if ((a2 & 1) != 0)
              {
                v20 = 1 << *(_BYTE *)(v5 + 32);
                if (v20 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v20 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v20;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v16 = v8[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_29;
                if (v12 >= v11)
                  goto LABEL_22;
                v16 = v8[v12];
                ++v17;
                if (v16)
                  goto LABEL_19;
              }
            }
            v12 = v17;
          }
        }
LABEL_19:
        v10 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v14);
      if ((a2 & 1) == 0)
        v19 = *(id *)(*(_QWORD *)(v5 + 56) + 16 * v14);
      sub_1BB4C0ED0(v18);
    }
  }
  swift_release();
  *v3 = v6;
}

unint64_t sub_1BB4B5540(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  _BYTE v27[72];

  v3 = v2;
  v5 = *v2;
  sub_1BB4CD2EC(0, (unint64_t *)&qword_1ED3B9A48, (void (*)(uint64_t))type metadata accessor for FormatLayoutView, (void (*)(void))sub_1BA8262E8);
  v6 = sub_1BB873F54();
  v7 = (_QWORD *)v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v26 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_23;
        v19 = v26[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_23;
          v19 = v26[v14];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v11)
            {
LABEL_23:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v25 = 1 << *(_BYTE *)(v5 + 32);
                if (v25 > 63)
                  bzero(v26, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v25;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v26[v20];
            if (!v19)
            {
              while (1)
              {
                v14 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_30;
                if (v14 >= v11)
                  goto LABEL_23;
                v19 = v26[v14];
                ++v20;
                if (v19)
                  goto LABEL_20;
              }
            }
            v14 = v20;
          }
        }
LABEL_20:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = 8 * v17;
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v21);
      v23 = *(void **)(*(_QWORD *)(v5 + 56) + v21);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v24 = v23;
      }
      sub_1BB8745CC();
      sub_1BA5A0D54((uint64_t)v27, v22);
      sub_1BB874608();
      result = sub_1BB873BDC();
      *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v15 = 8 * result;
      *(_QWORD *)(v7[6] + v15) = v22;
      *(_QWORD *)(v7[7] + v15) = v23;
      ++v7[2];
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B57C4(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;

  v4 = v3;
  v6 = *v3;
  a3(0);
  result = sub_1BB873F54();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v32 = -1 << v11;
    v33 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v34 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34)
          goto LABEL_33;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v34)
            goto LABEL_33;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v33 >= 64)
                  bzero((void *)(v6 + 64), 8 * v34);
                else
                  *v10 = v32;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v9 >= v34)
                  goto LABEL_33;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v29);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1BB8745C0();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1BB4B5A74(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CEC54();
  result = sub_1BB873F54();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_1BB8745C0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B5D24(uint64_t a1, char a2)
{
  return sub_1BB4BD3C0(a1, a2, (void (*)(_QWORD))sub_1BA8F5F84);
}

uint64_t sub_1BB4B5D30(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem, (void (*)(_QWORD, __n128))sub_1BB4CE77C, (void (*)(unint64_t, char *))sub_1BAF52BCC, (void (*)(unint64_t, char *))sub_1BAF52AB4);
}

uint64_t sub_1BB4B5D54(uint64_t a1, char a2)
{
  return sub_1BA6F01D0(a1, a2, (void (*)(_QWORD))sub_1BB4CDDA0);
}

uint64_t sub_1BB4B5D60(uint64_t a1, char a2)
{
  return sub_1BB4BD3C0(a1, a2, (void (*)(_QWORD))sub_1BB4CE478);
}

uint64_t sub_1BB4B5D6C(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, type metadata accessor for FeedClusteringOptions, (void (*)(_QWORD, __n128))sub_1BA8F6634, (void (*)(unint64_t, char *))sub_1BAF1EA50, (void (*)(unint64_t, char *))sub_1BB4CE854);
}

uint64_t sub_1BB4B5D90(uint64_t a1, char a2)
{
  return sub_1BB4BD3C0(a1, a2, (void (*)(_QWORD))sub_1BB4CE7E0);
}

uint64_t sub_1BB4B5D9C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t i;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  char v85;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C5078, (void (*)(void))sub_1BA834FF0);
  v53 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v51 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v49 = v2;
  v50 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v53 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v50)
      break;
    v27 = v51;
    v28 = v51[v26];
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v50)
        goto LABEL_33;
      v28 = v51[v13];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v50)
        {
LABEL_33:
          swift_release();
          v3 = v49;
          if ((v53 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = v51[v29];
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v13 >= v50)
              goto LABEL_33;
            v28 = v51[v13];
            ++v29;
            if (v28)
              goto LABEL_22;
          }
        }
        v13 = v29;
      }
    }
LABEL_22:
    v10 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if ((v53 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 184 * v18;
      v23 = *(_QWORD *)(v22 + 8);
      v69 = *(_QWORD *)(v22 + 16);
      v67 = *(_QWORD *)(v22 + 24);
      v61 = *(_QWORD *)(v22 + 40);
      v59 = *(_QWORD *)(v22 + 48);
      v57 = *(_QWORD *)(v22 + 56);
      v24 = *(_QWORD *)(v22 + 72);
      v54 = *(_QWORD *)(v22 + 64);
      v55 = *(_QWORD *)v22;
      v25 = *(_BYTE *)(v22 + 80);
      v64 = *(_QWORD *)(v22 + 96);
      v65 = *(_QWORD *)(v22 + 32);
      v72 = *(_QWORD *)(v22 + 112);
      v73 = *(_QWORD *)(v22 + 104);
      v70 = *(_QWORD *)(v22 + 128);
      v71 = *(_QWORD *)(v22 + 120);
      v68 = *(_QWORD *)(v22 + 136);
      v66 = *(_QWORD *)(v22 + 144);
      v62 = *(_QWORD *)(v22 + 152);
      v63 = *(_QWORD *)(v22 + 88);
      v60 = *(_QWORD *)(v22 + 160);
      v58 = *(_QWORD *)(v22 + 168);
      v56 = *(_BYTE *)(v22 + 176);
      goto LABEL_24;
    }
LABEL_23:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v30;
    v21 = v30[1];
    v31 = *(_QWORD *)(v5 + 56) + 184 * v18;
    v33 = *(_OWORD *)(v31 + 32);
    v32 = *(_OWORD *)(v31 + 48);
    v34 = *(_OWORD *)v31;
    v75 = *(_OWORD *)(v31 + 16);
    v76 = v33;
    v74 = v34;
    v35 = *(_OWORD *)(v31 + 112);
    v37 = *(_OWORD *)(v31 + 64);
    v36 = *(_OWORD *)(v31 + 80);
    v80 = *(_OWORD *)(v31 + 96);
    v81 = v35;
    v78 = v37;
    v79 = v36;
    v39 = *(_OWORD *)(v31 + 144);
    v38 = *(_OWORD *)(v31 + 160);
    v40 = *(_OWORD *)(v31 + 128);
    v85 = *(_BYTE *)(v31 + 176);
    v83 = v39;
    v84 = v38;
    v82 = v40;
    v77 = v32;
    v72 = v81;
    v73 = *((_QWORD *)&v80 + 1);
    v70 = v40;
    v71 = *((_QWORD *)&v81 + 1);
    v58 = *((_QWORD *)&v38 + 1);
    v60 = v38;
    v56 = v85;
    v64 = v80;
    v62 = *((_QWORD *)&v39 + 1);
    v63 = *((_QWORD *)&v79 + 1);
    v23 = *((_QWORD *)&v74 + 1);
    v68 = *((_QWORD *)&v40 + 1);
    v69 = v75;
    v66 = v39;
    v67 = *((_QWORD *)&v75 + 1);
    v61 = *((_QWORD *)&v76 + 1);
    v65 = v76;
    v57 = *((_QWORD *)&v32 + 1);
    v59 = v32;
    v24 = *((_QWORD *)&v37 + 1);
    v25 = v79;
    v54 = v37;
    v55 = v74;
    swift_bridgeObjectRetain();
    sub_1BAC68298((uint64_t)&v74);
LABEL_24:
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v41 = -1 << *(_BYTE *)(v7 + 32);
    v42 = result & ~v41;
    v43 = v42 >> 6;
    if (((-1 << v42) & ~*(_QWORD *)(v11 + 8 * (v42 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v42) & ~*(_QWORD *)(v11 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v44 = 0;
      v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v46 = v43 == v45;
        if (v43 == v45)
          v43 = 0;
        v44 |= v46;
        v47 = *(_QWORD *)(v11 + 8 * v43);
      }
      while (v47 == -1);
      v14 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 184 * v14;
    *(_QWORD *)v16 = v55;
    *(_QWORD *)(v16 + 8) = v23;
    *(_QWORD *)(v16 + 16) = v69;
    *(_QWORD *)(v16 + 24) = v67;
    *(_QWORD *)(v16 + 32) = v65;
    *(_QWORD *)(v16 + 40) = v61;
    *(_QWORD *)(v16 + 48) = v59;
    *(_QWORD *)(v16 + 56) = v57;
    *(_QWORD *)(v16 + 64) = v54;
    *(_QWORD *)(v16 + 72) = v24;
    *(_BYTE *)(v16 + 80) = v25;
    *(_QWORD *)(v16 + 88) = v63;
    *(_QWORD *)(v16 + 96) = v64;
    *(_QWORD *)(v16 + 104) = v73;
    *(_QWORD *)(v16 + 112) = v72;
    *(_QWORD *)(v16 + 120) = v71;
    *(_QWORD *)(v16 + 128) = v70;
    *(_QWORD *)(v16 + 136) = v68;
    *(_QWORD *)(v16 + 144) = v66;
    *(_QWORD *)(v16 + 152) = v62;
    *(_QWORD *)(v16 + 160) = v60;
    *(_QWORD *)(v16 + 168) = v58;
    *(_BYTE *)(v16 + 176) = v56;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v49;
  v27 = v51;
  if ((v53 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v48 = 1 << *(_BYTE *)(v5 + 32);
  if (v48 >= 64)
    bzero(v27, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v48;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B62CC(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v6 = v5;
  v8 = *v5;
  sub_1BB4CD498(0, a3, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v39 = a2;
  v9 = sub_1BB873F54();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v38 = v8 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v8 + 64);
  v37 = (unint64_t)(v11 + 63) >> 6;
  v14 = v9 + 64;
  result = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v22 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v23 = v22 | (v16 << 6);
      goto LABEL_31;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v37)
      break;
    v25 = (_QWORD *)(v8 + 64);
    v26 = *(_QWORD *)(v38 + 8 * v24);
    ++v16;
    if (!v26)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v37)
        goto LABEL_33;
      v26 = *(_QWORD *)(v38 + 8 * v16);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v37)
        {
LABEL_33:
          swift_release();
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v26 = *(_QWORD *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v16 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_42;
            if (v16 >= v37)
              goto LABEL_33;
            v26 = *(_QWORD *)(v38 + 8 * v16);
            ++v27;
            if (v26)
              goto LABEL_30;
          }
        }
        v16 = v27;
      }
    }
LABEL_30:
    v13 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
    v32 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    v34 = *v32;
    v33 = v32[1];
    v35 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v23);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v17 = -1 << *(_BYTE *)(v10 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v30 = v19 == v29;
        if (v19 == v29)
          v19 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v21 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v20);
    *v21 = v34;
    v21[1] = v33;
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v20) = v35;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v25 = (_QWORD *)(v8 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v8 + 32);
  if (v36 >= 64)
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v36;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v6 = v10;
  return result;
}

uint64_t sub_1BB4B65F4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C5018, (void (*)(void))sub_1BB4CD454);
  result = sub_1BB873F54();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = a2;
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_31;
        v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_31;
          v18 = v31[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v18 = v31[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      sub_1BB8745CC();
      sub_1BB8745D8();
      result = sub_1BB874608();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v14) = v20;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B68D4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C5028, (void (*)(void))sub_1BA82DC80);
  result = sub_1BB873F54();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = a2;
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_31;
        v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_31;
          v18 = v31[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v18 = v31[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      sub_1BB8745CC();
      sub_1BB8745D8();
      result = sub_1BB874608();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v14) = v20;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B6BB4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  __int128 *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t i;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  _BYTE v77[25];

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, (unint64_t *)&unk_1EF2C5050, (void (*)(void))sub_1BA834FF0);
  v51 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v49 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v47 = v2;
  v48 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v51 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v48)
      break;
    v27 = v49;
    v28 = v49[v26];
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v48)
        goto LABEL_33;
      v28 = v49[v13];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v48)
        {
LABEL_33:
          swift_release();
          v3 = v47;
          if ((v51 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = v49[v29];
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v13 >= v48)
              goto LABEL_33;
            v28 = v49[v13];
            ++v29;
            if (v28)
              goto LABEL_22;
          }
        }
        v13 = v29;
      }
    }
LABEL_22:
    v10 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if ((v51 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 160 * v18;
      v23 = *(_QWORD *)(v22 + 8);
      v52 = *(_QWORD *)v22;
      v54 = *(_QWORD *)(v22 + 16);
      v56 = *(_QWORD *)(v22 + 24);
      v57 = *(_QWORD *)(v22 + 40);
      v53 = *(_BYTE *)(v22 + 48);
      v67 = *(_QWORD *)(v22 + 64);
      v68 = *(_QWORD *)(v22 + 56);
      v66 = *(_QWORD *)(v22 + 72);
      v62 = *(_QWORD *)(v22 + 88);
      v61 = *(_QWORD *)(v22 + 96);
      v59 = *(_QWORD *)(v22 + 32);
      v60 = *(_QWORD *)(v22 + 104);
      v58 = *(_QWORD *)(v22 + 112);
      v24 = *(_QWORD *)(v22 + 128);
      v55 = *(_QWORD *)(v22 + 120);
      v25 = *(_BYTE *)(v22 + 136);
      v63 = *(_QWORD *)(v22 + 144);
      v64 = *(_QWORD *)(v22 + 80);
      v65 = *(_BYTE *)(v22 + 152);
      goto LABEL_24;
    }
LABEL_23:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v30;
    v21 = v30[1];
    v31 = (__int128 *)(*(_QWORD *)(v5 + 56) + 160 * v18);
    v32 = v31[1];
    v69 = *v31;
    v70 = v32;
    v33 = v31[5];
    v35 = v31[2];
    v34 = v31[3];
    v73 = v31[4];
    v74 = v33;
    v71 = v35;
    v72 = v34;
    v37 = v31[7];
    v36 = v31[8];
    v38 = v31[6];
    *(_OWORD *)&v77[9] = *(__int128 *)((char *)v31 + 137);
    v76 = v37;
    *(_OWORD *)v77 = v36;
    v75 = v38;
    v65 = v77[24];
    v67 = v73;
    v68 = *((_QWORD *)&v72 + 1);
    v66 = *((_QWORD *)&v73 + 1);
    v63 = *(_QWORD *)&v77[16];
    v64 = v33;
    v61 = v38;
    v62 = *((_QWORD *)&v33 + 1);
    v24 = v36;
    v55 = *((_QWORD *)&v37 + 1);
    v25 = BYTE8(v36);
    v59 = v71;
    v60 = *((_QWORD *)&v38 + 1);
    v57 = *((_QWORD *)&v71 + 1);
    v58 = v37;
    v53 = v72;
    v56 = *((_QWORD *)&v70 + 1);
    v23 = *((_QWORD *)&v69 + 1);
    v54 = v70;
    v52 = v69;
    swift_bridgeObjectRetain();
    sub_1BAC68F14((uint64_t)&v69);
LABEL_24:
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v39 = -1 << *(_BYTE *)(v7 + 32);
    v40 = result & ~v39;
    v41 = v40 >> 6;
    if (((-1 << v40) & ~*(_QWORD *)(v11 + 8 * (v40 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v40) & ~*(_QWORD *)(v11 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v42 = 0;
      v43 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v44 = v41 == v43;
        if (v41 == v43)
          v41 = 0;
        v42 |= v44;
        v45 = *(_QWORD *)(v11 + 8 * v41);
      }
      while (v45 == -1);
      v14 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 160 * v14;
    *(_QWORD *)v16 = v52;
    *(_QWORD *)(v16 + 8) = v23;
    *(_QWORD *)(v16 + 16) = v54;
    *(_QWORD *)(v16 + 24) = v56;
    *(_QWORD *)(v16 + 32) = v59;
    *(_QWORD *)(v16 + 40) = v57;
    *(_BYTE *)(v16 + 48) = v53;
    *(_QWORD *)(v16 + 56) = v68;
    *(_QWORD *)(v16 + 64) = v67;
    *(_QWORD *)(v16 + 72) = v66;
    *(_QWORD *)(v16 + 80) = v64;
    *(_QWORD *)(v16 + 88) = v62;
    *(_QWORD *)(v16 + 96) = v61;
    *(_QWORD *)(v16 + 104) = v60;
    *(_QWORD *)(v16 + 112) = v58;
    *(_QWORD *)(v16 + 120) = v55;
    *(_QWORD *)(v16 + 128) = v24;
    *(_BYTE *)(v16 + 136) = v25;
    *(_QWORD *)(v16 + 144) = v63;
    *(_BYTE *)(v16 + 152) = v65;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v47;
  v27 = v49;
  if ((v51 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v46 = 1 << *(_BYTE *)(v5 + 32);
  if (v46 >= 64)
    bzero(v27, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v46;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B70A4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  __int128 *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t i;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C50B0, (void (*)(void))sub_1BA834FF0);
  v53 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v51 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v49 = v2;
  v50 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v53 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v50)
      break;
    v27 = v51;
    v28 = v51[v26];
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v50)
        goto LABEL_33;
      v28 = v51[v13];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v50)
        {
LABEL_33:
          swift_release();
          v3 = v49;
          if ((v53 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = v51[v29];
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v13 >= v50)
              goto LABEL_33;
            v28 = v51[v13];
            ++v29;
            if (v28)
              goto LABEL_22;
          }
        }
        v13 = v29;
      }
    }
LABEL_22:
    v10 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if ((v53 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 208 * v18;
      v23 = *(_QWORD *)(v22 + 8);
      v54 = *(_QWORD *)v22;
      v55 = *(_QWORD *)(v22 + 16);
      v57 = *(_QWORD *)(v22 + 24);
      v59 = *(_OWORD *)(v22 + 32);
      v56 = *(_BYTE *)(v22 + 56);
      v76 = *(_QWORD *)(v22 + 64);
      v73 = *(_QWORD *)(v22 + 72);
      v66 = *(_QWORD *)(v22 + 88);
      v64 = *(_QWORD *)(v22 + 96);
      v63 = *(_QWORD *)(v22 + 104);
      v62 = *(_QWORD *)(v22 + 112);
      v60 = *(_QWORD *)(v22 + 48);
      v61 = *(_QWORD *)(v22 + 120);
      v24 = *(_QWORD *)(v22 + 136);
      v58 = *(_QWORD *)(v22 + 128);
      v25 = *(_BYTE *)(v22 + 144);
      v68 = *(_QWORD *)(v22 + 160);
      v69 = *(_QWORD *)(v22 + 80);
      v65 = *(_BYTE *)(v22 + 168);
      v70 = *(_QWORD *)(v22 + 184);
      v71 = *(_QWORD *)(v22 + 152);
      v67 = *(_BYTE *)(v22 + 192);
      v72 = *(_BYTE *)(v22 + 193);
      v74 = *(_QWORD *)(v22 + 200);
      v75 = *(_QWORD *)(v22 + 176);
      goto LABEL_24;
    }
LABEL_23:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v30;
    v21 = v30[1];
    v31 = (__int128 *)(*(_QWORD *)(v5 + 56) + 208 * v18);
    v77 = *v31;
    v32 = v31[4];
    v34 = v31[1];
    v33 = v31[2];
    v80 = v31[3];
    v81 = v32;
    v78 = v34;
    v79 = v33;
    v35 = v31[8];
    v37 = v31[5];
    v36 = v31[6];
    v84 = v31[7];
    v85 = v35;
    v82 = v37;
    v83 = v36;
    v38 = v31[12];
    v40 = v31[9];
    v39 = v31[10];
    v88 = v31[11];
    v89 = v38;
    v86 = v40;
    v87 = v39;
    v72 = BYTE1(v38);
    v74 = *((_QWORD *)&v38 + 1);
    v75 = v88;
    v67 = v38;
    v70 = *((_QWORD *)&v88 + 1);
    v71 = *((_QWORD *)&v40 + 1);
    v65 = BYTE8(v39);
    v73 = *((_QWORD *)&v81 + 1);
    v76 = v81;
    v68 = v39;
    v66 = *((_QWORD *)&v82 + 1);
    v69 = v82;
    v63 = *((_QWORD *)&v83 + 1);
    v64 = v83;
    v61 = *((_QWORD *)&v84 + 1);
    v62 = v84;
    v24 = *((_QWORD *)&v85 + 1);
    v25 = v40;
    v56 = BYTE8(v80);
    v60 = v80;
    v58 = v85;
    v59 = v79;
    v57 = *((_QWORD *)&v78 + 1);
    v23 = *((_QWORD *)&v77 + 1);
    v54 = v77;
    v55 = v78;
    swift_bridgeObjectRetain();
    sub_1BAC687E4((uint64_t)&v77);
LABEL_24:
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v41 = -1 << *(_BYTE *)(v7 + 32);
    v42 = result & ~v41;
    v43 = v42 >> 6;
    if (((-1 << v42) & ~*(_QWORD *)(v11 + 8 * (v42 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v42) & ~*(_QWORD *)(v11 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v44 = 0;
      v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v46 = v43 == v45;
        if (v43 == v45)
          v43 = 0;
        v44 |= v46;
        v47 = *(_QWORD *)(v11 + 8 * v43);
      }
      while (v47 == -1);
      v14 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 208 * v14;
    *(_QWORD *)v16 = v54;
    *(_QWORD *)(v16 + 8) = v23;
    *(_QWORD *)(v16 + 16) = v55;
    *(_QWORD *)(v16 + 24) = v57;
    *(_OWORD *)(v16 + 32) = v59;
    *(_QWORD *)(v16 + 48) = v60;
    *(_BYTE *)(v16 + 56) = v56;
    *(_QWORD *)(v16 + 64) = v76;
    *(_QWORD *)(v16 + 72) = v73;
    *(_QWORD *)(v16 + 80) = v69;
    *(_QWORD *)(v16 + 88) = v66;
    *(_QWORD *)(v16 + 96) = v64;
    *(_QWORD *)(v16 + 104) = v63;
    *(_QWORD *)(v16 + 112) = v62;
    *(_QWORD *)(v16 + 120) = v61;
    *(_QWORD *)(v16 + 128) = v58;
    *(_QWORD *)(v16 + 136) = v24;
    *(_BYTE *)(v16 + 144) = v25;
    *(_QWORD *)(v16 + 152) = v71;
    *(_QWORD *)(v16 + 160) = v68;
    *(_BYTE *)(v16 + 168) = v65;
    *(_QWORD *)(v16 + 176) = v75;
    *(_QWORD *)(v16 + 184) = v70;
    *(_BYTE *)(v16 + 192) = v67;
    *(_BYTE *)(v16 + 193) = v72;
    *(_QWORD *)(v16 + 200) = v74;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v49;
  v27 = v51;
  if ((v53 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v48 = 1 << *(_BYTE *)(v5 + 32);
  if (v48 >= 64)
    bzero(v27, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v48;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B7624(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile, (void (*)(_QWORD, __n128))sub_1BB4CD8D4, (void (*)(unint64_t, char *))sub_1BB4CD938, (void (*)(unint64_t, char *))sub_1BB1AEDB4);
}

uint64_t sub_1BB4B7648(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;

  v3 = v2;
  v5 = type metadata accessor for FormatDerivedDataFile();
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v48 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  sub_1BB4CD2EC(0, &qword_1EF2C5108, v8, (void (*)(void))sub_1BB4CD890);
  v47 = a2;
  v9 = sub_1BB873F54();
  v10 = v9;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v7 + 32);
  v12 = *(_QWORD *)(v7 + 64);
  v45 = (_QWORD *)(v7 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = v2;
  v44 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v44)
      break;
    v23 = v45;
    v24 = v45[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v44)
        goto LABEL_34;
      v24 = v45[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v44)
        {
LABEL_34:
          swift_release();
          v3 = v43;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v45[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v44)
              goto LABEL_34;
            v24 = v45[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v7 + 56);
    v27 = v7;
    v28 = *(_QWORD *)(v7 + 48) + 24 * v21;
    v29 = *(_QWORD *)v28;
    v30 = *(_QWORD *)(v28 + 8);
    v31 = *(_BYTE *)(v28 + 16);
    v32 = *(_QWORD *)(v46 + 72);
    v33 = v26 + v32 * v21;
    if ((v47 & 1) != 0)
    {
      sub_1BA5193C4(v33, v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    }
    else
    {
      sub_1BA4C2DD8(v33, v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
      sub_1BA987528(v29, v30, v31);
    }
    sub_1BB8745CC();
    sub_1BB8745D8();
    sub_1BB872A90();
    result = sub_1BB874608();
    v34 = -1 << *(_BYTE *)(v10 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v15 + 8 * (v35 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v15 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v15 + 8 * v36);
      }
      while (v40 == -1);
      v18 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = *(_QWORD *)(v10 + 48) + 24 * v18;
    *(_QWORD *)v19 = v29;
    *(_QWORD *)(v19 + 8) = v30;
    *(_BYTE *)(v19 + 16) = v31;
    result = sub_1BA5193C4(v48, *(_QWORD *)(v10 + 56) + v32 * v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
    ++*(_QWORD *)(v10 + 16);
    v7 = v27;
  }
  swift_release();
  v3 = v43;
  v23 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v7 + 32);
  if (v41 >= 64)
    bzero(v23, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v41;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1BB4B7A10(uint64_t a1, char a2)
{
  return sub_1BB4BD3C0(a1, a2, (void (*)(_QWORD))sub_1BB4CE708);
}

uint64_t sub_1BB4B7A1C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[128];
  _QWORD __src[66];
  _BYTE v74[128];
  _BYTE v75[208];

  v4 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C5040, (void (*)(void))sub_1BA834FF0);
  v49 = a2;
  v5 = sub_1BB873F54();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
    v40 = v42;
LABEL_42:
    *v40 = v6;
    return result;
  }
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v44 = (_QWORD *)(v4 + 64);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v4 + 64);
  v43 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 64;
  result = swift_retain();
  v12 = 0;
  v48 = v4;
  v45 = v6;
  while (1)
  {
    if (v9)
    {
      v15 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v16 = v15 | (v12 << 6);
      if ((v49 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v27 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v27 >= v43)
    {
      swift_release();
      v40 = v42;
      v28 = v44;
      if ((v49 & 1) != 0)
      {
LABEL_37:
        v41 = 1 << *(_BYTE *)(v4 + 32);
        if (v41 >= 64)
          bzero(v28, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v28 = -1 << v41;
        *(_QWORD *)(v4 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v28 = v44;
    v29 = v44[v27];
    ++v12;
    if (!v29)
    {
      v12 = v27 + 1;
      if (v27 + 1 >= v43)
        goto LABEL_34;
      v29 = v44[v12];
      if (!v29)
        break;
    }
LABEL_22:
    v9 = (v29 - 1) & v29;
    v16 = __clz(__rbit64(v29)) + (v12 << 6);
    if ((v49 & 1) != 0)
    {
LABEL_10:
      v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v16);
      v71 = *v17;
      v47 = v17[1];
      v18 = *(_QWORD *)(v4 + 56) + 528 * v16;
      v50 = *(_QWORD *)(v18 + 8);
      v51 = *(_QWORD *)v18;
      v52 = *(_QWORD *)(v18 + 16);
      sub_1BA6A09F0(v18 + 24, (uint64_t)v72, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
      v19 = *(_QWORD *)(v18 + 168);
      v46 = *(_QWORD *)(v18 + 160);
      v69 = *(_QWORD *)(v18 + 176);
      v64 = *(_QWORD *)(v18 + 184);
      v59 = *(_QWORD *)(v18 + 200);
      v60 = *(_QWORD *)(v18 + 192);
      v57 = *(_QWORD *)(v18 + 152);
      v58 = *(_QWORD *)(v18 + 208);
      v55 = *(_QWORD *)(v18 + 224);
      v56 = *(_QWORD *)(v18 + 216);
      v54 = *(_QWORD *)(v18 + 232);
      v53 = *(_BYTE *)(v18 + 240);
      v61 = *(_QWORD *)(v18 + 248);
      sub_1BA6A09F0(v18 + 256, (uint64_t)__src, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
      v63 = *(_QWORD *)(v18 + 456);
      v62 = *(_BYTE *)(v18 + 464);
      v66 = *(_QWORD *)(v18 + 472);
      v67 = *(_QWORD *)(v18 + 480);
      v65 = *(_QWORD *)(v18 + 488);
      v70 = *(_QWORD *)(v18 + 496);
      v68 = *(_QWORD *)(v18 + 504);
      v20 = *(_BYTE *)(v18 + 512);
      v21 = *(_QWORD *)(v18 + 520);
      v6 = v45;
      v22 = v47;
      sub_1BA6A09F0((uint64_t)v72, (uint64_t)v74, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
      v23 = __src;
      v24 = v19;
      v25 = v46;
      v26 = v21;
      goto LABEL_24;
    }
LABEL_23:
    v31 = *(_QWORD *)(v4 + 56);
    v32 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v16);
    v22 = v32[1];
    v71 = *v32;
    memcpy(__src, (const void *)(v31 + 528 * v16), sizeof(__src));
    v26 = __src[65];
    v20 = __src[64];
    v65 = __src[61];
    v67 = __src[60];
    v68 = __src[63];
    v66 = __src[59];
    v62 = __src[58];
    v61 = __src[31];
    v25 = __src[20];
    v24 = __src[21];
    v69 = __src[22];
    v70 = __src[62];
    v63 = __src[57];
    v64 = __src[23];
    v59 = __src[25];
    v60 = __src[24];
    v55 = __src[28];
    v56 = __src[27];
    v54 = __src[29];
    v53 = __src[30];
    v57 = __src[19];
    v58 = __src[26];
    v51 = __src[0];
    v52 = __src[2];
    v50 = __src[1];
    swift_bridgeObjectRetain();
    sub_1BAC67FA0((uint64_t)__src);
    sub_1BA6A09F0((uint64_t)&__src[3], (uint64_t)v74, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
    v23 = &__src[32];
LABEL_24:
    sub_1BA6A09F0((uint64_t)v23, (uint64_t)v75, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v33 = -1 << *(_BYTE *)(v6 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v10 + 8 * (v34 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v10 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v10 + 8 * v35);
      }
      while (v39 == -1);
      v13 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    __src[0] = v51;
    __src[1] = v50;
    __src[2] = v52;
    sub_1BA6A09F0((uint64_t)v74, (uint64_t)&__src[3], (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
    __src[19] = v57;
    __src[20] = v25;
    __src[21] = v24;
    __src[22] = v69;
    __src[23] = v64;
    __src[24] = v60;
    __src[25] = v59;
    __src[26] = v58;
    __src[27] = v56;
    __src[28] = v55;
    __src[29] = v54;
    LOBYTE(__src[30]) = v53;
    __src[31] = v61;
    sub_1BA6A09F0((uint64_t)v75, (uint64_t)&__src[32], (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
    LOBYTE(__src[58]) = v62;
    __src[57] = v63;
    __src[59] = v66;
    __src[60] = v67;
    __src[61] = v65;
    __src[62] = v70;
    __src[63] = v68;
    LOBYTE(__src[64]) = v20;
    __src[65] = v26;
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v71;
    v14[1] = v22;
    result = (uint64_t)memcpy((void *)(*(_QWORD *)(v6 + 56) + 528 * v13), __src, 0x210uLL);
    ++*(_QWORD *)(v6 + 16);
    v4 = v48;
  }
  v30 = v27 + 2;
  if (v30 >= v43)
  {
LABEL_34:
    swift_release();
    v40 = v42;
    if ((v49 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v29 = v44[v30];
  if (v29)
  {
    v12 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v12 >= v43)
      goto LABEL_34;
    v29 = v44[v12];
    ++v30;
    if (v29)
      goto LABEL_22;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1BB4B80BC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t i;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  char v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C5038, (void (*)(void))sub_1BA834FF0);
  v53 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v51 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v49 = v2;
  v50 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v53 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v50)
      break;
    v27 = v51;
    v28 = v51[v26];
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v50)
        goto LABEL_33;
      v28 = v51[v13];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v50)
        {
LABEL_33:
          swift_release();
          v3 = v49;
          if ((v53 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = v51[v29];
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v13 >= v50)
              goto LABEL_33;
            v28 = v51[v13];
            ++v29;
            if (v28)
              goto LABEL_22;
          }
        }
        v13 = v29;
      }
    }
LABEL_22:
    v10 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if ((v53 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 200 * v18;
      v23 = *(_QWORD *)(v22 + 8);
      v54 = *(_QWORD *)v22;
      v56 = *(_QWORD *)(v22 + 16);
      v58 = *(_QWORD *)(v22 + 24);
      v59 = *(_QWORD *)(v22 + 40);
      v55 = *(_BYTE *)(v22 + 48);
      v76 = *(_QWORD *)(v22 + 56);
      v74 = *(_QWORD *)(v22 + 64);
      v70 = *(_QWORD *)(v22 + 72);
      v64 = *(_QWORD *)(v22 + 88);
      v63 = *(_QWORD *)(v22 + 96);
      v61 = *(_QWORD *)(v22 + 32);
      v62 = *(_QWORD *)(v22 + 104);
      v60 = *(_QWORD *)(v22 + 112);
      v24 = *(_QWORD *)(v22 + 128);
      v57 = *(_QWORD *)(v22 + 120);
      v25 = *(_BYTE *)(v22 + 136);
      v65 = *(_QWORD *)(v22 + 144);
      v66 = *(_QWORD *)(v22 + 80);
      v67 = *(_BYTE *)(v22 + 152);
      v68 = *(_BYTE *)(v22 + 153);
      v69 = *(_BYTE *)(v22 + 154);
      v71 = *(_OWORD *)(v22 + 160);
      v75 = *(_QWORD *)(v22 + 184);
      v72 = *(_QWORD *)(v22 + 192);
      v73 = *(_QWORD *)(v22 + 176);
      goto LABEL_24;
    }
LABEL_23:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v30;
    v21 = v30[1];
    v31 = *(_QWORD *)(v5 + 56) + 200 * v18;
    v77 = *(_OWORD *)v31;
    v32 = *(_OWORD *)(v31 + 64);
    v34 = *(_OWORD *)(v31 + 16);
    v33 = *(_OWORD *)(v31 + 32);
    v80 = *(_OWORD *)(v31 + 48);
    v81 = v32;
    v78 = v34;
    v79 = v33;
    v35 = *(_OWORD *)(v31 + 128);
    v37 = *(_OWORD *)(v31 + 80);
    v36 = *(_OWORD *)(v31 + 96);
    v84 = *(_OWORD *)(v31 + 112);
    v85 = v35;
    v82 = v37;
    v83 = v36;
    v39 = *(_OWORD *)(v31 + 160);
    v38 = *(_OWORD *)(v31 + 176);
    v40 = *(_OWORD *)(v31 + 144);
    v89 = *(_QWORD *)(v31 + 192);
    v87 = v39;
    v88 = v38;
    v86 = v40;
    v72 = v89;
    v71 = v39;
    v68 = BYTE9(v40);
    v69 = BYTE10(v40);
    v67 = BYTE8(v40);
    v75 = *((_QWORD *)&v38 + 1);
    v76 = *((_QWORD *)&v80 + 1);
    v73 = v38;
    v70 = *((_QWORD *)&v81 + 1);
    v74 = v81;
    v65 = v40;
    v66 = v37;
    v63 = v83;
    v64 = *((_QWORD *)&v37 + 1);
    v24 = v85;
    v25 = BYTE8(v85);
    v61 = v79;
    v62 = *((_QWORD *)&v83 + 1);
    v59 = *((_QWORD *)&v79 + 1);
    v60 = v84;
    v55 = v80;
    v57 = *((_QWORD *)&v84 + 1);
    v58 = *((_QWORD *)&v78 + 1);
    v23 = *((_QWORD *)&v77 + 1);
    v56 = v78;
    v54 = v77;
    swift_bridgeObjectRetain();
    sub_1BAC68490((uint64_t)&v77);
LABEL_24:
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v41 = -1 << *(_BYTE *)(v7 + 32);
    v42 = result & ~v41;
    v43 = v42 >> 6;
    if (((-1 << v42) & ~*(_QWORD *)(v11 + 8 * (v42 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v42) & ~*(_QWORD *)(v11 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v44 = 0;
      v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v46 = v43 == v45;
        if (v43 == v45)
          v43 = 0;
        v44 |= v46;
        v47 = *(_QWORD *)(v11 + 8 * v43);
      }
      while (v47 == -1);
      v14 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 200 * v14;
    *(_QWORD *)v16 = v54;
    *(_QWORD *)(v16 + 8) = v23;
    *(_QWORD *)(v16 + 16) = v56;
    *(_QWORD *)(v16 + 24) = v58;
    *(_QWORD *)(v16 + 32) = v61;
    *(_QWORD *)(v16 + 40) = v59;
    *(_BYTE *)(v16 + 48) = v55;
    *(_QWORD *)(v16 + 56) = v76;
    *(_QWORD *)(v16 + 64) = v74;
    *(_QWORD *)(v16 + 72) = v70;
    *(_QWORD *)(v16 + 80) = v66;
    *(_QWORD *)(v16 + 88) = v64;
    *(_QWORD *)(v16 + 96) = v63;
    *(_QWORD *)(v16 + 104) = v62;
    *(_QWORD *)(v16 + 112) = v60;
    *(_QWORD *)(v16 + 120) = v57;
    *(_QWORD *)(v16 + 128) = v24;
    *(_BYTE *)(v16 + 136) = v25;
    *(_QWORD *)(v16 + 144) = v65;
    *(_BYTE *)(v16 + 152) = v67;
    *(_BYTE *)(v16 + 153) = v68;
    *(_BYTE *)(v16 + 154) = v69;
    *(_OWORD *)(v16 + 160) = v71;
    *(_QWORD *)(v16 + 176) = v73;
    *(_QWORD *)(v16 + 184) = v75;
    *(_QWORD *)(v16 + 192) = v72;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v49;
  v27 = v51;
  if ((v53 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v48 = 1 << *(_BYTE *)(v5 + 32);
  if (v48 >= 64)
    bzero(v27, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v48;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B863C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;

  v3 = v2;
  v5 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1BB4CD2EC(0, (unint64_t *)&unk_1EF2C5060, v9, (void (*)(void))sub_1BA834FF0);
  v44 = a2;
  v10 = sub_1BB873F54();
  v11 = v10;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v8 + 32);
  v13 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = v2;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v41)
      break;
    v24 = v42;
    v25 = v42[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_34;
      v25 = v42[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v41)
              goto LABEL_34;
            v25 = v42[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v22);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v43 + 72);
    v31 = *(_QWORD *)(v8 + 56) + v30 * v22;
    if ((v44 & 1) != 0)
    {
      sub_1BA5193C4(v31, (uint64_t)v7, type metadata accessor for FormatItemNodeStyle.Selector);
    }
    else
    {
      sub_1BA4C2DD8(v31, (uint64_t)v7, type metadata accessor for FormatItemNodeStyle.Selector);
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v19);
    *v20 = v29;
    v20[1] = v28;
    result = sub_1BA5193C4((uint64_t)v7, *(_QWORD *)(v11 + 56) + v30 * v19, type metadata accessor for FormatItemNodeStyle.Selector);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v40;
  v24 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BB4B89D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  char v41;
  uint64_t v42;
  char v43;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C5070, (void (*)(void))sub_1BA834FF0);
  v40 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 40 * v21;
      v33 = *(_QWORD *)(v32 + 8);
      v42 = *(_QWORD *)v32;
      v43 = *(_BYTE *)(v32 + 16);
      v34 = *(_QWORD *)(v32 + 24);
      v35 = *(unsigned __int16 *)(v32 + 32) | (*(unsigned __int8 *)(v32 + 34) << 16);
      v41 = *(_BYTE *)(v32 + 35);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA771834(v34, v35);
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      v19 = *(_QWORD *)(v7 + 56) + 40 * v17;
      *(_QWORD *)v19 = v42;
      *(_QWORD *)(v19 + 8) = v33;
      *(_BYTE *)(v19 + 16) = v43;
      *(_QWORD *)(v19 + 24) = v34;
      *(_BYTE *)(v19 + 34) = BYTE2(v35);
      *(_WORD *)(v19 + 32) = v35;
      *(_BYTE *)(v19 + 35) = v41;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B8D60(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  __int128 *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t i;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _BYTE v74[26];

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C50A8, (void (*)(void))sub_1BA834FF0);
  v50 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v48 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v46 = v2;
  v47 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v50 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v47)
      break;
    v27 = v48;
    v28 = v48[v26];
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v47)
        goto LABEL_33;
      v28 = v48[v13];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v47)
        {
LABEL_33:
          swift_release();
          v3 = v46;
          if ((v50 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = v48[v29];
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v13 >= v47)
              goto LABEL_33;
            v28 = v48[v13];
            ++v29;
            if (v28)
              goto LABEL_22;
          }
        }
        v13 = v29;
      }
    }
LABEL_22:
    v10 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if ((v50 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 144 * v18;
      v23 = *(_QWORD *)(v22 + 8);
      v51 = *(_QWORD *)v22;
      v53 = *(_QWORD *)(v22 + 16);
      v55 = *(_QWORD *)(v22 + 24);
      v56 = *(_QWORD *)(v22 + 40);
      v52 = *(_BYTE *)(v22 + 48);
      v65 = *(_QWORD *)(v22 + 64);
      v66 = *(_QWORD *)(v22 + 56);
      v63 = *(_QWORD *)(v22 + 80);
      v64 = *(_QWORD *)(v22 + 72);
      v60 = *(_QWORD *)(v22 + 96);
      v61 = *(_QWORD *)(v22 + 88);
      v58 = *(_QWORD *)(v22 + 32);
      v59 = *(_QWORD *)(v22 + 104);
      v57 = *(_QWORD *)(v22 + 112);
      v24 = *(_QWORD *)(v22 + 128);
      v54 = *(_QWORD *)(v22 + 120);
      v25 = *(_BYTE *)(v22 + 136);
      v62 = *(_BYTE *)(v22 + 137);
      goto LABEL_24;
    }
LABEL_23:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v30;
    v21 = v30[1];
    v31 = (__int128 *)(*(_QWORD *)(v5 + 56) + 144 * v18);
    v67 = *v31;
    v32 = v31[4];
    v34 = v31[1];
    v33 = v31[2];
    v70 = v31[3];
    v71 = v32;
    v68 = v34;
    v69 = v33;
    v36 = v31[6];
    v35 = v31[7];
    v37 = v31[5];
    *(_OWORD *)&v74[10] = *(__int128 *)((char *)v31 + 122);
    v73 = v36;
    *(_OWORD *)v74 = v35;
    v72 = v37;
    v62 = v74[25];
    v65 = v32;
    v66 = *((_QWORD *)&v70 + 1);
    v63 = v37;
    v64 = *((_QWORD *)&v32 + 1);
    v60 = v36;
    v61 = *((_QWORD *)&v37 + 1);
    v24 = *(_QWORD *)&v74[16];
    v54 = *((_QWORD *)&v35 + 1);
    v25 = v74[24];
    v58 = v69;
    v59 = *((_QWORD *)&v36 + 1);
    v56 = *((_QWORD *)&v69 + 1);
    v57 = v35;
    v52 = v70;
    v55 = *((_QWORD *)&v68 + 1);
    v23 = *((_QWORD *)&v67 + 1);
    v53 = v68;
    v51 = v67;
    swift_bridgeObjectRetain();
    sub_1BAC690CC((uint64_t)&v67);
LABEL_24:
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v38 = -1 << *(_BYTE *)(v7 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v11 + 8 * (v39 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v11 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v11 + 8 * v40);
      }
      while (v44 == -1);
      v14 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 144 * v14;
    *(_QWORD *)v16 = v51;
    *(_QWORD *)(v16 + 8) = v23;
    *(_QWORD *)(v16 + 16) = v53;
    *(_QWORD *)(v16 + 24) = v55;
    *(_QWORD *)(v16 + 32) = v58;
    *(_QWORD *)(v16 + 40) = v56;
    *(_BYTE *)(v16 + 48) = v52;
    *(_QWORD *)(v16 + 56) = v66;
    *(_QWORD *)(v16 + 64) = v65;
    *(_QWORD *)(v16 + 72) = v64;
    *(_QWORD *)(v16 + 80) = v63;
    *(_QWORD *)(v16 + 88) = v61;
    *(_QWORD *)(v16 + 96) = v60;
    *(_QWORD *)(v16 + 104) = v59;
    *(_QWORD *)(v16 + 112) = v57;
    *(_QWORD *)(v16 + 120) = v54;
    *(_QWORD *)(v16 + 128) = v24;
    *(_BYTE *)(v16 + 136) = v25;
    *(_BYTE *)(v16 + 137) = v62;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v46;
  v27 = v48;
  if ((v50 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v45 = 1 << *(_BYTE *)(v5 + 32);
  if (v45 >= 64)
    bzero(v27, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v45;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B9234(uint64_t a1, char a2)
{
  return sub_1BB4B95F8(a1, a2, &qword_1EF2C50B8);
}

uint64_t sub_1BB4B9248(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __int128 v46;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1EF2C5048, (void (*)(void))sub_1BA834FF0);
  v42 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = v40[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = v40[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 56 * v21;
    v34 = *(_QWORD *)(v33 + 8);
    v46 = *(_OWORD *)(v33 + 16);
    v45 = *(_BYTE *)(v33 + 32);
    v35 = *(_QWORD *)(v33 + 40);
    v43 = *(unsigned __int8 *)(v33 + 52);
    v44 = *(_QWORD *)v33;
    v36 = *(unsigned int *)(v33 + 48);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 56 * v17;
    *(_QWORD *)v19 = v44;
    *(_QWORD *)(v19 + 8) = v34;
    *(_OWORD *)(v19 + 16) = v46;
    *(_BYTE *)(v19 + 32) = v45;
    *(_QWORD *)(v19 + 40) = v35;
    *(_BYTE *)(v19 + 52) = (v36 | (unint64_t)(v43 << 32)) >> 32;
    *(_DWORD *)(v19 + 48) = v36;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B95E4(uint64_t a1, char a2)
{
  return sub_1BB4B95F8(a1, a2, &qword_1EF2C50C8);
}

uint64_t sub_1BB4B95F8(uint64_t a1, char a2, unint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t i;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  char v81;

  v4 = v3;
  v6 = *v3;
  sub_1BA8F6924(0, a3, (void (*)(void))sub_1BA834FF0);
  v53 = a2;
  v7 = sub_1BB873F54();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v51 = (_QWORD *)(v6 + 64);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v49 = v3;
  v50 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  for (i = v6; ; v6 = i)
  {
    if (v11)
    {
      v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v19 = v18 | (v14 << 6);
      if ((v53 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v27 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v27 >= v50)
      break;
    v28 = v51;
    v29 = v51[v27];
    ++v14;
    if (!v29)
    {
      v14 = v27 + 1;
      if (v27 + 1 >= v50)
        goto LABEL_33;
      v29 = v51[v14];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v50)
        {
LABEL_33:
          swift_release();
          v4 = v49;
          if ((v53 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v29 = v51[v30];
        if (!v29)
        {
          while (1)
          {
            v14 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_42;
            if (v14 >= v50)
              goto LABEL_33;
            v29 = v51[v14];
            ++v30;
            if (v29)
              goto LABEL_22;
          }
        }
        v14 = v30;
      }
    }
LABEL_22:
    v11 = (v29 - 1) & v29;
    v19 = __clz(__rbit64(v29)) + (v14 << 6);
    if ((v53 & 1) != 0)
    {
LABEL_10:
      v20 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v19);
      v21 = *v20;
      v22 = v20[1];
      v23 = *(_QWORD *)(v6 + 56) + 168 * v19;
      v24 = *(_QWORD *)(v23 + 8);
      v54 = *(_QWORD *)v23;
      v55 = *(_QWORD *)(v23 + 16);
      v57 = *(_QWORD *)(v23 + 24);
      v59 = *(_OWORD *)(v23 + 32);
      v56 = *(_BYTE *)(v23 + 56);
      v69 = *(_QWORD *)(v23 + 72);
      v70 = *(_QWORD *)(v23 + 64);
      v68 = *(_QWORD *)(v23 + 80);
      v64 = *(_QWORD *)(v23 + 96);
      v63 = *(_QWORD *)(v23 + 104);
      v62 = *(_QWORD *)(v23 + 112);
      v60 = *(_QWORD *)(v23 + 48);
      v61 = *(_QWORD *)(v23 + 120);
      v25 = *(_QWORD *)(v23 + 136);
      v58 = *(_QWORD *)(v23 + 128);
      v26 = *(_BYTE *)(v23 + 144);
      v65 = *(_QWORD *)(v23 + 152);
      v66 = *(_QWORD *)(v23 + 88);
      v67 = *(_BYTE *)(v23 + 160);
      goto LABEL_24;
    }
LABEL_23:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v19);
    v21 = *v31;
    v22 = v31[1];
    v32 = *(_QWORD *)(v6 + 56) + 168 * v19;
    v34 = *(_OWORD *)(v32 + 16);
    v33 = *(_OWORD *)(v32 + 32);
    v71 = *(_OWORD *)v32;
    v72 = v34;
    v73 = v33;
    v35 = *(_OWORD *)(v32 + 96);
    v37 = *(_OWORD *)(v32 + 48);
    v36 = *(_OWORD *)(v32 + 64);
    v76 = *(_OWORD *)(v32 + 80);
    v77 = v35;
    v74 = v37;
    v75 = v36;
    v39 = *(_OWORD *)(v32 + 128);
    v38 = *(_OWORD *)(v32 + 144);
    v40 = *(_OWORD *)(v32 + 112);
    v81 = *(_BYTE *)(v32 + 160);
    v79 = v39;
    v80 = v38;
    v78 = v40;
    v67 = v81;
    v69 = *((_QWORD *)&v75 + 1);
    v70 = v75;
    v68 = v76;
    v65 = *((_QWORD *)&v38 + 1);
    v66 = *((_QWORD *)&v76 + 1);
    v63 = *((_QWORD *)&v77 + 1);
    v64 = v77;
    v61 = *((_QWORD *)&v40 + 1);
    v62 = v40;
    v25 = *((_QWORD *)&v39 + 1);
    v26 = v38;
    v56 = BYTE8(v37);
    v60 = v37;
    v58 = v39;
    v59 = v73;
    v57 = *((_QWORD *)&v72 + 1);
    v24 = *((_QWORD *)&v71 + 1);
    v54 = v71;
    v55 = v72;
    swift_bridgeObjectRetain();
    sub_1BAC6926C((uint64_t)&v71);
LABEL_24:
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v41 = -1 << *(_BYTE *)(v8 + 32);
    v42 = result & ~v41;
    v43 = v42 >> 6;
    if (((-1 << v42) & ~*(_QWORD *)(v12 + 8 * (v42 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v42) & ~*(_QWORD *)(v12 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v44 = 0;
      v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v46 = v43 == v45;
        if (v43 == v45)
          v43 = 0;
        v44 |= v46;
        v47 = *(_QWORD *)(v12 + 8 * v43);
      }
      while (v47 == -1);
      v15 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
    *v16 = v21;
    v16[1] = v22;
    v17 = *(_QWORD *)(v8 + 56) + 168 * v15;
    *(_QWORD *)v17 = v54;
    *(_QWORD *)(v17 + 8) = v24;
    *(_QWORD *)(v17 + 16) = v55;
    *(_QWORD *)(v17 + 24) = v57;
    *(_OWORD *)(v17 + 32) = v59;
    *(_QWORD *)(v17 + 48) = v60;
    *(_BYTE *)(v17 + 56) = v56;
    *(_QWORD *)(v17 + 64) = v70;
    *(_QWORD *)(v17 + 72) = v69;
    *(_QWORD *)(v17 + 80) = v68;
    *(_QWORD *)(v17 + 88) = v66;
    *(_QWORD *)(v17 + 96) = v64;
    *(_QWORD *)(v17 + 104) = v63;
    *(_QWORD *)(v17 + 112) = v62;
    *(_QWORD *)(v17 + 120) = v61;
    *(_QWORD *)(v17 + 128) = v58;
    *(_QWORD *)(v17 + 136) = v25;
    *(_BYTE *)(v17 + 144) = v26;
    *(_QWORD *)(v17 + 152) = v65;
    *(_BYTE *)(v17 + 160) = v67;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v49;
  v28 = v51;
  if ((v53 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v48 = 1 << *(_BYTE *)(v6 + 32);
  if (v48 >= 64)
    bzero(v28, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v48;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1BB4B9AF4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  char v43;
  int64_t v44;
  uint64_t v45;
  char v46;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, (unint64_t *)&unk_1EF2C50D8, (void (*)(void))sub_1BA834FF0);
  v43 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v41 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v40 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v44 = v13;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v40)
          goto LABEL_33;
        v23 = v41[v22];
        v24 = v13 + 1;
        if (!v23)
        {
          v24 = v13 + 2;
          if (v13 + 2 >= v40)
            goto LABEL_33;
          v23 = v41[v24];
          if (!v23)
          {
            v25 = v13 + 3;
            if (v13 + 3 >= v40)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v43 & 1) != 0)
              {
                v39 = 1 << *(_BYTE *)(v5 + 32);
                if (v39 >= 64)
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v39;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v41[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v24 >= v40)
                  goto LABEL_33;
                v23 = v41[v24];
                ++v25;
                if (v23)
                  goto LABEL_30;
              }
            }
            v24 = v13 + 3;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v44 = v24;
        v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      v30 = *(_QWORD *)(v5 + 56);
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v33 = *v31;
      v32 = v31[1];
      v34 = (uint64_t *)(v30 + 40 * v21);
      v35 = v34[1];
      v45 = *v34;
      v36 = v34[2];
      v37 = v34[3];
      v38 = *((_BYTE *)v34 + 32);
      v46 = *((_BYTE *)v34 + 33);
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v36, v37, v38);
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v16 == v27;
          if (v16 == v27)
            v16 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v33;
      v18[1] = v32;
      v19 = *(_QWORD *)(v7 + 56) + 40 * v17;
      v13 = v44;
      *(_QWORD *)v19 = v45;
      *(_QWORD *)(v19 + 8) = v35;
      *(_QWORD *)(v19 + 16) = v36;
      *(_QWORD *)(v19 + 24) = v37;
      *(_BYTE *)(v19 + 32) = v38;
      *(_BYTE *)(v19 + 33) = v46;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4B9E68(uint64_t a1, char a2)
{
  return sub_1BA7C2B04(a1, a2, (void (*)(_QWORD))sub_1BB4CD3D4);
}

uint64_t sub_1BB4B9E74(uint64_t a1, char a2)
{
  return sub_1BA6F01D0(a1, a2, (void (*)(_QWORD))sub_1BB4CD058);
}

uint64_t sub_1BB4B9E80(uint64_t a1, char a2)
{
  return sub_1BA6F01D0(a1, a2, (void (*)(_QWORD))sub_1BB4CD0BC);
}

uint64_t sub_1BB4B9E8C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v44 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1BB4CD2EC(0, &qword_1EF2C4FE0, v9, (void (*)(void))sub_1BB4CD014);
  v10 = sub_1BB873F54();
  v11 = v10;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v40 = v2;
  v12 = 1 << *(_BYTE *)(v8 + 32);
  v13 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = a2;
  v17 = v10 + 64;
  result = swift_retain();
  v19 = 0;
  v39 = v16;
  v20 = 16;
  if ((v16 & 1) != 0)
    v20 = 32;
  v43 = v20;
  while (1)
  {
    if (v15)
    {
      v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v23 = v22 | (v19 << 6);
      goto LABEL_24;
    }
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = v42;
    v26 = v42[v24];
    ++v19;
    if (!v26)
    {
      v19 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_33;
      v26 = v42[v19];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_33:
          swift_release();
          v3 = v40;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            v19 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_42;
            if (v19 >= v41)
              goto LABEL_33;
            v26 = v42[v19];
            ++v27;
            if (v26)
              goto LABEL_23;
          }
        }
        v19 = v27;
      }
    }
LABEL_23:
    v15 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v19 << 6);
LABEL_24:
    v28 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v23);
    v29 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v43))(v7, *(_QWORD *)(v8 + 56) + v29 * v23, v44);
    sub_1BB8745CC();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    result = sub_1BB874608();
    v30 = -1 << *(_BYTE *)(v11 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v17 + 8 * v32);
      }
      while (v36 == -1);
      v21 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v17 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_BYTE *)(*(_QWORD *)(v11 + 48) + v21) = v28;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v11 + 56) + v29 * v21, v7, v44);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v40;
  v25 = v42;
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v8 + 32);
  if (v37 >= 64)
    bzero(v25, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v37;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BB4BA240(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster, (void (*)(_QWORD, __n128))sub_1BB4CD184, (void (*)(unint64_t, char *))sub_1BB42BF10, (void (*)(unint64_t, char *))sub_1BB4CD1E8);
}

uint64_t sub_1BB4BA264(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SportsEventStatusResponseEmbed, (void (*)(_QWORD, __n128))sub_1BA8F5AB8, (void (*)(unint64_t, char *))sub_1BB4CD268, (void (*)(unint64_t, char *))sub_1BB42A5BC);
}

uint64_t sub_1BB4BA288(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CD120();
  v36 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4BA598(uint64_t a1, char a2)
{
  return sub_1BB4ADCD0(a1, a2, (void (*)(_QWORD))sub_1BB4CD1F4);
}

uint64_t sub_1BB4BA5A4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  sub_1BA76E804(0);
  v35 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_1BA76EAE0(v22, v36);
    }
    else
    {
      sub_1BA747A10((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_1BB8729A0();
    sub_1BB8745CC();
    sub_1BB872A90();
    v24 = sub_1BB874608();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_1BA76EAE0(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4BA8D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CE4EC();
  v40 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 32 * v21);
      v33 = *v32;
      v34 = v32[1];
      v35 = v32[3];
      v41 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 32 * v17);
      *v19 = v33;
      v19[1] = v34;
      v19[2] = v41;
      v19[3] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4BABFC(uint64_t a1, char a2)
{
  return sub_1BA676EFC(a1, a2, (void (*)(_QWORD))sub_1BB4CD7DC);
}

uint64_t sub_1BB4BAC08(uint64_t a1, char a2)
{
  return sub_1BB4BD0A4(a1, a2, (void (*)(_QWORD))sub_1BB4CE324);
}

uint64_t sub_1BB4BAC14(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  __int128 v38;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CCF74();
  v6 = a2;
  v7 = sub_1BB873F54();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36)
          goto LABEL_33;
        v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_33;
          v24 = v37[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v5 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v36)
                  goto LABEL_33;
                v24 = v37[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v38 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v34 = (id)v38;
        swift_unknownObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v38;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1BB4BAF24(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  __int128 v45;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, (unint64_t *)&unk_1EF2C4FD0, (void (*)(void))sub_1BA9ED5CC);
  v43 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v40 = v2;
  v41 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v22 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_31;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_33;
      v26 = *(_QWORD *)(v42 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_33:
          swift_release();
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_42;
            if (v13 >= v41)
              goto LABEL_33;
            v26 = *(_QWORD *)(v42 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_30;
          }
        }
        v13 = v27;
      }
    }
LABEL_30:
    v10 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_31:
    v32 = 32 * v23;
    v33 = *(_QWORD *)(v5 + 48) + v32;
    v35 = *(_QWORD *)v33;
    v34 = *(_QWORD *)(v33 + 8);
    v36 = *(_QWORD *)(v5 + 56) + v32;
    v37 = *(_QWORD *)v36;
    v38 = *(_QWORD *)(v36 + 8);
    v44 = *(_OWORD *)(v36 + 16);
    v45 = *(_OWORD *)(v33 + 16);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    sub_1BB8745D8();
    sub_1BB8745D8();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      v18 = v45;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v14) >> 6;
      v18 = v45;
      do
      {
        if (++v16 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v30 = v16 == v29;
        if (v16 == v29)
          v16 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v31 == -1);
      v17 = __clz(__rbit64(~v31)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v19 = 32 * v17;
    v20 = *(_QWORD *)(v7 + 48) + v19;
    *(_QWORD *)v20 = v35;
    *(_QWORD *)(v20 + 8) = v34;
    *(_OWORD *)(v20 + 16) = v18;
    v21 = *(_QWORD *)(v7 + 56) + v19;
    *(_QWORD *)v21 = v37;
    *(_QWORD *)(v21 + 8) = v38;
    *(_OWORD *)(v21 + 16) = v44;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4BB2A4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  __int128 *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  _QWORD *v47;
  uint64_t i;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CDE40();
  v49 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v47 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v46 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v18 = v17 | (v13 << 6);
        if ((v49 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        v27 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v27 >= v46)
          goto LABEL_33;
        v28 = v47[v27];
        ++v13;
        if (!v28)
        {
          v13 = v27 + 1;
          if (v27 + 1 >= v46)
            goto LABEL_33;
          v28 = v47[v13];
          if (!v28)
          {
            v29 = v27 + 2;
            if (v29 >= v46)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v49 & 1) != 0)
              {
                v45 = 1 << *(_BYTE *)(v5 + 32);
                if (v45 >= 64)
                  bzero(v47, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v47 = -1 << v45;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v28 = v47[v29];
            if (!v28)
            {
              while (1)
              {
                v13 = v29 + 1;
                if (__OFADD__(v29, 1))
                  goto LABEL_40;
                if (v13 >= v46)
                  goto LABEL_33;
                v28 = v47[v13];
                ++v29;
                if (v28)
                  goto LABEL_22;
              }
            }
            v13 = v29;
          }
        }
LABEL_22:
        v10 = (v28 - 1) & v28;
        v18 = __clz(__rbit64(v28)) + (v13 << 6);
        if ((v49 & 1) != 0)
        {
LABEL_10:
          v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
          v20 = *v19;
          v21 = v19[1];
          v22 = *(_QWORD *)(v5 + 56) + (v18 << 7);
          v23 = *(_QWORD *)(v22 + 8);
          v24 = *(_QWORD *)(v22 + 16);
          v25 = *(_BYTE *)(v22 + 24);
          v50 = *(_QWORD *)(v22 + 40);
          v51 = *(_QWORD *)v22;
          v55 = *(_QWORD *)(v22 + 56);
          v26 = *(_QWORD *)(v22 + 72);
          v52 = *(_QWORD *)(v22 + 64);
          v53 = *(_QWORD *)(v22 + 32);
          v57 = *(_OWORD *)(v22 + 80);
          v58 = *(_QWORD *)(v22 + 48);
          v59 = *(_QWORD *)(v22 + 104);
          v60 = *(_QWORD *)(v22 + 96);
          v56 = *(_QWORD *)(v22 + 112);
          v54 = *(_QWORD *)(v22 + 120);
          goto LABEL_24;
        }
      }
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v30;
      v21 = v30[1];
      v31 = (__int128 *)(*(_QWORD *)(v5 + 56) + (v18 << 7));
      v33 = v31[2];
      v32 = v31[3];
      v34 = *v31;
      v62 = v31[1];
      v63 = v33;
      v61 = v34;
      v35 = v31[7];
      v37 = v31[4];
      v36 = v31[5];
      v67 = v31[6];
      v68 = v35;
      v65 = v37;
      v66 = v36;
      v64 = v32;
      v59 = *((_QWORD *)&v67 + 1);
      v60 = v67;
      v26 = *((_QWORD *)&v37 + 1);
      v56 = v35;
      v57 = v36;
      v58 = v32;
      v54 = *((_QWORD *)&v35 + 1);
      v55 = *((_QWORD *)&v32 + 1);
      v52 = v37;
      v53 = v33;
      v23 = *((_QWORD *)&v61 + 1);
      v50 = *((_QWORD *)&v33 + 1);
      v51 = v61;
      v24 = v62;
      v25 = BYTE8(v62);
      swift_bridgeObjectRetain();
      sub_1BB0F0E74(&v61);
LABEL_24:
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v38 = -1 << *(_BYTE *)(v7 + 32);
      v39 = result & ~v38;
      v40 = v39 >> 6;
      if (((-1 << v39) & ~*(_QWORD *)(v11 + 8 * (v39 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v11 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v41 = 0;
        v42 = (unint64_t)(63 - v38) >> 6;
        do
        {
          if (++v40 == v42 && (v41 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v43 = v40 == v42;
          if (v40 == v42)
            v40 = 0;
          v41 |= v43;
          v44 = *(_QWORD *)(v11 + 8 * v40);
        }
        while (v44 == -1);
        v14 = __clz(__rbit64(~v44)) + (v40 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v20;
      v15[1] = v21;
      v16 = *(_QWORD *)(v7 + 56) + (v14 << 7);
      *(_QWORD *)v16 = v51;
      *(_QWORD *)(v16 + 8) = v23;
      *(_QWORD *)(v16 + 16) = v24;
      *(_BYTE *)(v16 + 24) = v25;
      *(_QWORD *)(v16 + 32) = v53;
      *(_QWORD *)(v16 + 40) = v50;
      *(_QWORD *)(v16 + 48) = v58;
      *(_QWORD *)(v16 + 56) = v55;
      *(_QWORD *)(v16 + 64) = v52;
      *(_QWORD *)(v16 + 72) = v26;
      *(_OWORD *)(v16 + 80) = v57;
      *(_QWORD *)(v16 + 96) = v60;
      *(_QWORD *)(v16 + 104) = v59;
      *(_QWORD *)(v16 + 112) = v56;
      *(_QWORD *)(v16 + 120) = v54;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4BB6E0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;

  v3 = v2;
  v5 = type metadata accessor for DebugFormatCacheFile();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v47 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  sub_1BB4CD2EC(0, &qword_1EF2C51D8, v8, (void (*)(void))sub_1BA9ED498);
  v46 = a2;
  v9 = sub_1BB873F54();
  v10 = v9;
  if (*(_QWORD *)(v7 + 16))
  {
    v42 = v2;
    v11 = 1 << *(_BYTE *)(v7 + 32);
    v12 = *(_QWORD *)(v7 + 64);
    v44 = (_QWORD *)(v7 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v43 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v21 = v20 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v43)
          goto LABEL_34;
        v23 = v44[v22];
        ++v17;
        if (!v23)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v43)
            goto LABEL_34;
          v23 = v44[v17];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v43)
            {
LABEL_34:
              swift_release();
              v3 = v42;
              if ((v46 & 1) != 0)
              {
                v40 = 1 << *(_BYTE *)(v7 + 32);
                if (v40 >= 64)
                  bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v44 = -1 << v40;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v23 = v44[v24];
            if (!v23)
            {
              while (1)
              {
                v17 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v17 >= v43)
                  goto LABEL_34;
                v23 = v44[v17];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v17 = v24;
          }
        }
LABEL_21:
        v14 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v17 << 6);
      }
      v25 = *(_QWORD *)(v7 + 56);
      v26 = v7;
      v27 = *(_QWORD *)(v7 + 48) + 24 * v21;
      v29 = *(_QWORD *)v27;
      v28 = *(_QWORD *)(v27 + 8);
      v30 = *(_BYTE *)(v27 + 16);
      v31 = *(_QWORD *)(v45 + 72);
      v32 = v25 + v31 * v21;
      if ((v46 & 1) != 0)
      {
        sub_1BB4CD938(v32, v47);
      }
      else
      {
        sub_1BB1AEDB4(v32, v47);
        sub_1BA9ED468(v29, v28, v30);
      }
      sub_1BB8745CC();
      sub_1BB8745D8();
      sub_1BB872A90();
      result = sub_1BB874608();
      v33 = -1 << *(_BYTE *)(v10 + 32);
      v34 = result & ~v33;
      v35 = v34 >> 6;
      if (((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v36 = 0;
        v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v38 = v35 == v37;
          if (v35 == v37)
            v35 = 0;
          v36 |= v38;
          v39 = *(_QWORD *)(v15 + 8 * v35);
        }
        while (v39 == -1);
        v18 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = *(_QWORD *)(v10 + 48) + 24 * v18;
      *(_QWORD *)v19 = v29;
      *(_QWORD *)(v19 + 8) = v28;
      *(_BYTE *)(v19 + 16) = v30;
      result = sub_1BB4CD938(v47, *(_QWORD *)(v10 + 56) + v31 * v18);
      ++*(_QWORD *)(v10 + 16);
      v7 = v26;
    }
  }
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1BB4BBA80(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _OWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  char v36;
  _OWORD v37[2];

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1ED3AB2A8, (void (*)(void))sub_1BB4CD798);
  v36 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_34;
        v19 = v35[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_34;
          v19 = v35[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v34)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((v36 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v35[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v34)
                  goto LABEL_34;
                v19 = v35[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = *(_QWORD *)(v5 + 48) + 24 * v17;
      v23 = *(_QWORD *)v21;
      v22 = *(_QWORD *)(v21 + 8);
      v24 = *(_BYTE *)(v21 + 16);
      v25 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((v36 & 1) != 0)
      {
        sub_1BA76EAE0(v25, v37);
      }
      else
      {
        sub_1BA747A10((uint64_t)v25, (uint64_t)v37);
        sub_1BAF92B74();
      }
      sub_1BB8745CC();
      sub_1BB8745D8();
      sub_1BB872A90();
      result = sub_1BB874608();
      v26 = -1 << *(_BYTE *)(v7 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v11 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = *(_QWORD *)(v7 + 48) + 24 * v14;
      *(_QWORD *)v15 = v23;
      *(_QWORD *)(v15 + 8) = v22;
      *(_BYTE *)(v15 + 16) = v24;
      result = (uint64_t)sub_1BA76EAE0(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4BBDD0(uint64_t a1, int a2)
{
  return sub_1BB4BBDE4(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0DDAA80], (void (*)(_QWORD, __n128))sub_1BB4CE110);
}

uint64_t sub_1BB4BBDE4(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, __n128))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  int v47;
  char *v48;
  uint64_t v49;

  v6 = v4;
  v49 = a3(0);
  v8 = *(_QWORD *)(v49 - 8);
  v9.n128_f64[0] = MEMORY[0x1E0C80A78](v49);
  v48 = (char *)&v43 - v10;
  v11 = *v4;
  a4(0, v9);
  v47 = a2;
  v12 = sub_1BB873F54();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v44 = v4;
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 64);
    v46 = (_QWORD *)(v11 + 64);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v45 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 64;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v23 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v24 = v23 | (v20 << 6);
      }
      else
      {
        v25 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v25 >= v45)
          goto LABEL_34;
        v26 = v46[v25];
        ++v20;
        if (!v26)
        {
          v20 = v25 + 1;
          if (v25 + 1 >= v45)
            goto LABEL_34;
          v26 = v46[v20];
          if (!v26)
          {
            v27 = v25 + 2;
            if (v27 >= v45)
            {
LABEL_34:
              swift_release();
              v6 = v44;
              if ((v47 & 1) != 0)
              {
                v42 = 1 << *(_BYTE *)(v11 + 32);
                if (v42 >= 64)
                  bzero(v46, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v46 = -1 << v42;
                *(_QWORD *)(v11 + 16) = 0;
              }
              break;
            }
            v26 = v46[v27];
            if (!v26)
            {
              while (1)
              {
                v20 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_41;
                if (v20 >= v45)
                  goto LABEL_34;
                v26 = v46[v20];
                ++v27;
                if (v26)
                  goto LABEL_21;
              }
            }
            v20 = v27;
          }
        }
LABEL_21:
        v17 = (v26 - 1) & v26;
        v24 = __clz(__rbit64(v26)) + (v20 << 6);
      }
      v28 = *(_QWORD *)(v11 + 56);
      v29 = v11;
      v30 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v24);
      v32 = *v30;
      v31 = v30[1];
      v33 = *(_QWORD *)(v8 + 72);
      v34 = v28 + v33 * v24;
      if ((v47 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v48, v34, v49);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v48, v34, v49);
        swift_bridgeObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v35 = -1 << *(_BYTE *)(v13 + 32);
      v36 = result & ~v35;
      v37 = v36 >> 6;
      if (((-1 << v36) & ~*(_QWORD *)(v18 + 8 * (v36 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v38 = 0;
        v39 = (unint64_t)(63 - v35) >> 6;
        do
        {
          if (++v37 == v39 && (v38 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v40 = v37 == v39;
          if (v37 == v39)
            v37 = 0;
          v38 |= v40;
          v41 = *(_QWORD *)(v18 + 8 * v37);
        }
        while (v41 == -1);
        v21 = __clz(__rbit64(~v41)) + (v37 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      v22 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v21);
      *v22 = v32;
      v22[1] = v31;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 56) + v33 * v21, v48, v49);
      ++*(_QWORD *)(v13 + 16);
      v11 = v29;
    }
  }
  result = swift_release();
  *v6 = v13;
  return result;
}

uint64_t sub_1BB4BC148(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CDD3C();
  result = sub_1BB873F54();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v10;
    v31 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v30;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v17);
      result = sub_1BB8745C0();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      *(_BYTE *)(*(_QWORD *)(v7 + 56) + v15) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4BC3E0(uint64_t a1, char a2)
{
  return sub_1BB4BD3C0(a1, a2, (void (*)(_QWORD))sub_1BB4CE174);
}

uint64_t sub_1BB4BC3EC(uint64_t a1, char a2)
{
  return sub_1BB4BC3F8(a1, a2, (void (*)(_QWORD))sub_1BA8F604C);
}

uint64_t sub_1BB4BC3F8(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v7 = sub_1BB873F54();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v3;
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_bridgeObjectRetain();
    }
    result = sub_1BB8738AC();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1BB4BC6C8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  __int128 v38;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CE0AC();
  v6 = a2;
  v7 = sub_1BB873F54();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36)
          goto LABEL_33;
        v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_33;
          v24 = v37[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v5 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v36)
                  goto LABEL_33;
                v24 = v37[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v38 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v34 = *((id *)&v38 + 1);
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v38;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1BB4BC9D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  char v41;
  __int128 v42;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CE048();
  v41 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v40 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = *(_QWORD *)(v40 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v41 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v40 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = *(_QWORD *)(v40 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 24 * v21;
    v42 = *(_OWORD *)v33;
    v34 = *(void **)(v33 + 16);
    if ((v41 & 1) == 0)
    {
      v35 = v34;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v36 = *((id *)&v42 + 1);
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
    *(_OWORD *)v19 = v42;
    *(_QWORD *)(v19 + 16) = v34;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = (_QWORD *)(v5 + 64);
  if ((v41 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4BCD18(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  CGFloat *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  CGRect v38;

  v3 = v2;
  v5 = *v2;
  sub_1BB4CE550(0, &qword_1EF2C51B8, type metadata accessor for CGRect, (void (*)(void))sub_1BB4CDD20);
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v37 = a2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 64;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v15 << 6);
      }
      else
      {
        v20 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v20 >= v12)
          goto LABEL_31;
        v21 = v9[v20];
        ++v15;
        if (!v21)
        {
          v15 = v20 + 1;
          if (v20 + 1 >= v12)
            goto LABEL_31;
          v21 = v9[v15];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_31:
              swift_release();
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v36 = 1 << *(_BYTE *)(v5 + 32);
              if (v36 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v36;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v9[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_40;
                if (v15 >= v12)
                  goto LABEL_31;
                v21 = v9[v15];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v15 = v22;
          }
        }
LABEL_21:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v15 << 6);
      }
      v23 = *(_QWORD *)(v5 + 48) + 32 * v19;
      v25 = *(double *)(v23 + 16);
      v24 = *(double *)(v23 + 24);
      v27 = *(double *)v23;
      v26 = *(double *)(v23 + 8);
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      sub_1BB8745CC();
      v38.origin.x = v27;
      v38.origin.y = v26;
      v38.size.width = v25;
      v38.size.height = v24;
      CGRectStandardize(v38);
      sub_1BB8745FC();
      sub_1BB8745FC();
      sub_1BB8745FC();
      sub_1BB8745FC();
      result = sub_1BB874608();
      v29 = -1 << *(_BYTE *)(v7 + 32);
      v30 = result & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v13 + 8 * v31);
        }
        while (v35 == -1);
        v16 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = (CGFloat *)(*(_QWORD *)(v7 + 48) + 32 * v16);
      *v17 = v27;
      v17[1] = v26;
      v17[2] = v25;
      v17[3] = v24;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v28;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1BB4BD098(uint64_t a1, char a2)
{
  return sub_1BB4BD0A4(a1, a2, (void (*)(_QWORD))sub_1BB4CDF80);
}

uint64_t sub_1BB4BD0A4(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v37 = a2;
  v7 = sub_1BB873F54();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1BB4BD3B4(uint64_t a1, char a2)
{
  return sub_1BB4BD3C0(a1, a2, (void (*)(_QWORD))sub_1BB4CDF0C);
}

uint64_t sub_1BB4BD3C0(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  a3(0);
  v39 = a2;
  v7 = sub_1BB873F54();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

void sub_1BB4BD6C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1BB4BD6D4(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CECD0);
}

void sub_1BB4BD6D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(_QWORD))
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v7 = v5;
  v12 = *v5;
  v14 = sub_1BA6E35A8(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1BB4CB870(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (uint64_t *)(v20[6] + 16 * v14);
    *v24 = a2;
    v24[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v20[2] = v27;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1BB4BD3C0(v17, a4 & 1, a5);
  v22 = sub_1BA6E35A8(a2, a3);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BB874560();
  __break(1u);
}

uint64_t sub_1BB4BD848(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BB4C1704();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4AD2E0(v15, a4 & 1);
  v21 = sub_1BA6E35A8(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

_OWORD *sub_1BB4BD9A8(_OWORD *a1, void *a2, char a3)
{
  return sub_1BB4C0494(a1, a2, a3, (uint64_t (*)(void *))sub_1BA76E600, (void (*)(void))sub_1BB4C1A98, (void (*)(void))sub_1BB4AD5EC, type metadata accessor for AttributeName);
}

_OWORD *sub_1BB4BD9CC(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1BB873E58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1BA6EDA24(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (_OWORD *)(v20[7] + 32 * v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        return sub_1BA76EAE0(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1BB4C1AA4();
      goto LABEL_7;
    }
    sub_1BB4AD920(v17, a3 & 1);
    v23 = sub_1BA6EDA24(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1BB4C1048(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = (_OWORD *)sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BDB48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BDB60(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CEFA0);
}

uint64_t sub_1BB4BDB54(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BDB60(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CF014);
}

uint64_t sub_1BB4BDB60(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(_QWORD))
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v7 = v5;
  v12 = *v5;
  v14 = sub_1BA6E35A8(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1BB4C94EC(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a2;
    v25[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4ADCD0(v17, a4 & 1, a5);
  v23 = sub_1BA6E35A8(a2, a3);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BDCD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BDB60(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CF088);
}

uint64_t sub_1BB4BDCE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BDB60(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CEEB8);
}

uint64_t sub_1BB4BDCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1BA6E35A8(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1BB4C216C();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4AE750(v17, a5 & 1);
  v23 = sub_1BA6E35A8(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BDE60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BF1D4(a1, a2, a3, a4, &qword_1EF2C5030, &qword_1EF2BAC40, (uint64_t)&type metadata for FormatSourceMap);
}

uint64_t sub_1BB4BDE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v7 = v6;
  v14 = *v6;
  v16 = sub_1BA6E35A8(a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1BB4C2A70();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (_QWORD *)(v22[7] + 24 * v16);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *v23 = a1;
      v23[1] = a2;
      v23[2] = a3;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 16 * v16);
    *v27 = a4;
    v27[1] = a5;
    v28 = (_QWORD *)(v22[7] + 24 * v16);
    *v28 = a1;
    v28[1] = a2;
    v28[2] = a3;
    v29 = v22[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v22[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4AEEE8(v19, a6 & 1);
  v25 = sub_1BA6E35A8(a4, a5);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BE008(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BB4AB14C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1BB4CE9B0((uint64_t)a1, v18[7] + (v12 << 7));
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BB4C2C50();
      goto LABEL_7;
    }
    sub_1BB4AF224(v15, a4 & 1);
    v20 = sub_1BB4AB14C(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1BB4CE9B0((uint64_t)a1, v18[7] + (v12 << 7));
LABEL_11:
      sub_1BB4C11BC(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

void sub_1BB4BE12C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1BB4BD6D4(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CE93C);
}

uint64_t sub_1BB4BE138(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BB4C30D0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BB4CE8C4(a1, v18[7] + 88 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = v18[7] + 88 * v12;
    v24 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v23 = *(_OWORD *)a1;
    *(_OWORD *)(v23 + 16) = v24;
    v25 = *(_OWORD *)(a1 + 32);
    v26 = *(_OWORD *)(a1 + 48);
    v27 = *(_OWORD *)(a1 + 64);
    *(_BYTE *)(v23 + 80) = *(_BYTE *)(a1 + 80);
    *(_OWORD *)(v23 + 48) = v26;
    *(_OWORD *)(v23 + 64) = v27;
    *(_OWORD *)(v23 + 32) = v25;
    v28 = v18[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v18[2] = v30;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4AF92C(v15, a4 & 1);
  v20 = sub_1BA6E35A8(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BB4CE8C4(a1, v18[7] + 88 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

id sub_1BB4BE2B4(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1BB4AB230((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1BB4CAF98((void (*)(_QWORD))sub_1BB4CED44);
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_1BB4BC3F8(v12, a3 & 1, (void (*)(_QWORD))sub_1BB4CED44);
  v18 = sub_1BB4AB230((uint64_t)a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99A0);
  result = (id)sub_1BB874560();
  __break(1u);
  return result;
}

void sub_1BB4BE424(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1BB4AB27C((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1BB4C370C();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];

      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_1BB4B0684(v12, a3 & 1);
  v17 = sub_1BB4AB27C((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  sub_1BB874560();
  __break(1u);
}

uint64_t sub_1BB4BE584(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t);
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v15 = sub_1BB4AB684(a2, v13, (unint64_t *)&qword_1ED3B04C0, MEMORY[0x1E0CB0018], (void (*)(uint64_t))sub_1BB13F7C8);
  v16 = v12[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v12[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    v21 = *v4;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7];
      result = swift_release();
      *(_QWORD *)(v22 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_1BB4C38BC();
    goto LABEL_7;
  }
  sub_1BB4B0960(v18, a3 & 1);
  v24 = sub_1BB4AB684(a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (unint64_t *)&qword_1ED3B04C0, MEMORY[0x1E0CB0018], (void (*)(uint64_t))sub_1BB13F7C8);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_1BB874560();
    __break(1u);
    return result;
  }
  v15 = v24;
  v21 = *v4;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1BB4C1278(v15, (uint64_t)v11, a1, v21);
}

void sub_1BB4BE720(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1BB4AB2EC(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1BB4C3AE8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      swift_retain();
      return;
    }
    goto LABEL_14;
  }
  sub_1BB4B0CF0(v13, a3 & 1);
  v18 = sub_1BB4AB2EC(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for GroupLayoutKey();
  sub_1BB874560();
  __break(1u);
}

uint64_t sub_1BB4BE870(uint64_t a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BA6E35A8(a1, a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C3C88();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a1;
    v20[1] = a2;
    *(double *)(v18[7] + 8 * v12) = a4;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4B1010(result, a3 & 1);
  result = sub_1BA6E35A8(a1, a2);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BE9C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA6E3434(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CE860);
}

uint64_t sub_1BB4BE9D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1BA6A09F0(a1, v18[7] + 112 * v12, &qword_1EF2C5200, (uint64_t)&type metadata for PuzzleStatsInfo.StatValue);
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BB4C4214();
      goto LABEL_7;
    }
    sub_1BB4B1328(v15, a4 & 1);
    v20 = sub_1BA6E35A8(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1BA6A09F0(a1, v18[7] + 112 * v12, &qword_1EF2C5200, (uint64_t)&type metadata for PuzzleStatsInfo.StatValue);
LABEL_11:
      sub_1BB4C1310(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BEB0C(uint64_t a1, char a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  double *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BB4AB454(a3, a4);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C4410();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v21 = (double *)(v18[6] + 16 * v12);
    *v21 = a3;
    v21[1] = a4;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1BB4B16B0(result, a2 & 1);
  result = sub_1BB4AB454(a3, a4);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for CGSize(0);
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BEC48(uint64_t a1, uint64_t a2, char a3, double a4, double a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  double *v21;
  char v22;
  uint64_t *v23;
  double *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1BA6E35A8(a1, a2);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C45B0();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (double *)(v20[7] + 16 * v14);
      *v21 = a4;
      v21[1] = a5;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v23 = (uint64_t *)(v20[6] + 16 * v14);
    *v23 = a1;
    v23[1] = a2;
    v24 = (double *)(v20[7] + 16 * v14);
    *v24 = a4;
    v24[1] = a5;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v20[2] = v27;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4B19A4(result, a3 & 1);
  result = sub_1BA6E35A8(a1, a2);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BEDAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4C0D44(a1, a2, a3, a4, (void (*)(void))sub_1BB4C4994, (void (*)(void))sub_1BB4B2194, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1BB4BEDC8(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1BA4A42A0(a1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C49A8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = 8 * v10;
    *(_QWORD *)(v16[6] + v18) = a1;
    *(double *)(v16[7] + v18) = a3;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1BB4B21A8(result, a2 & 1);
  result = sub_1BA4A42A0(a1);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BEEF0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1BA4A42A0(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C4B30();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = 8 * v10;
    *(_QWORD *)(v16[6] + v18) = a2;
    *(_QWORD *)(v16[7] + v18) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1BB4B244C(result, a3 & 1);
  result = sub_1BA4A42A0(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BF01C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BB4BFC58(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1BB4CF560, (void (*)(_QWORD))sub_1BA8F5794);
}

uint64_t sub_1BB4BF038(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BDB60(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CDEA4);
}

uint64_t sub_1BB4BF044(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BB4C5378();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BB4CDB3C((uint64_t)a1, v18[7] + (v12 << 7));
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + (v12 << 7));
    v24 = *a1;
    v25 = a1[1];
    v26 = a1[3];
    v23[2] = a1[2];
    v23[3] = v26;
    *v23 = v24;
    v23[1] = v25;
    v27 = a1[4];
    v28 = a1[5];
    v29 = a1[7];
    v23[6] = a1[6];
    v23[7] = v29;
    v23[4] = v27;
    v23[5] = v28;
    v30 = v18[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v18[2] = v32;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4B31C8(v15, a4 & 1);
  v20 = sub_1BA6E35A8(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BB4CDB3C((uint64_t)a1, v18[7] + (v12 << 7));
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BF1B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BF1D4(a1, a2, a3, a4, &qword_1EF2C5170, &qword_1EF2C5178, (uint64_t)&type metadata for FormatDerivedDataResultBlock);
}

uint64_t sub_1BB4BF1D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v11;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v11 = v7;
  v15 = *v7;
  v17 = sub_1BA6E35A8(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    sub_1BB4C73DC(a5, a6, a7);
LABEL_7:
    v23 = (_QWORD *)*v11;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v24 + 8 * v17) = a1;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v28 = (uint64_t *)(v23[6] + 16 * v17);
    *v28 = a2;
    v28[1] = a3;
    *(_QWORD *)(v23[7] + 8 * v17) = a1;
    v29 = v23[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v23[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4B62CC(v20, a4 & 1, a5, a6, a7);
  v26 = sub_1BA6E35A8(a2, a3);
  if ((v21 & 1) == (v27 & 1))
  {
    v17 = v26;
    v23 = (_QWORD *)*v11;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BF374(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  uint64_t result;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1BB4AB4B4(a2, a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1BB4C5570();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_OWORD *)(v20[7] + 48 * v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v23 = a1[1];
      *v21 = *a1;
      v21[1] = v23;
      v21[2] = a1[2];
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v26 = v20[6] + 24 * v14;
    *(_QWORD *)v26 = a2;
    *(_QWORD *)(v26 + 8) = a3;
    *(_BYTE *)(v26 + 16) = a4;
    v27 = (_OWORD *)(v20[7] + 48 * v14);
    v28 = a1[1];
    *v27 = *a1;
    v27[1] = v28;
    v27[2] = a1[2];
    v29 = v20[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v20[2] = v31;
      return sub_1BA987528(a2, a3, a4);
    }
    goto LABEL_14;
  }
  sub_1BB4B35DC(v17, a5 & 1);
  v24 = sub_1BB4AB4B4(a2, a3, a4);
  if ((v18 & 1) == (v25 & 1))
  {
    v14 = v24;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BF54C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BF558(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CD944);
}

uint64_t sub_1BB4BF558(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(_QWORD))
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v7 = v5;
  v12 = *v5;
  v14 = sub_1BA6E35A8(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1BB4CB6B0(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a2;
    v25[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4BD0A4(v17, a4 & 1, a5);
  v23 = sub_1BA6E35A8(a2, a3);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BF6CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BF558(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CDA44);
}

uint64_t sub_1BB4BF6D8(uint64_t a1, unint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for WebEmbedDatastoreCacheKey();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_1BB4AB52C(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1BB4C5810();
    goto LABEL_7;
  }
  sub_1BB4B3A00(v16, a3 & 1);
  v22 = sub_1BB4AB52C(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_1BB874560();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_1BA4C2DD8(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  return sub_1BB4C1390(v13, (uint64_t)v10, a1, v19);
}

void sub_1BB4BF834(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1BB4BD6D4(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CD360);
}

uint64_t sub_1BB4BF840(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA6E3434(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CD734);
}

_OWORD *sub_1BB4BF84C(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BB4AB200(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_1BA76EAE0(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BB4C6310();
      goto LABEL_7;
    }
    sub_1BB4B4CD8(v13, a3 & 1);
    v19 = sub_1BB4AB200(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BAF1E538(a2, (uint64_t)v21);
      return sub_1BB4C1428(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_1BB874560();
  __break(1u);
  return result;
}

void sub_1BB4BF984(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BB4AB584(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BB4C64F0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1BB4B4FE8(v15, a4 & 1);
  v20 = sub_1BB4AB584(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BB874560();
  __break(1u);
}

uint64_t sub_1BB4BFAE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA6E3434(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CE1E8);
}

void sub_1BB4BFAEC(uint64_t a1, char a2, char a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  sub_1BB4AB03C(a3);
  v13 = v12;
  v14 = *(_QWORD *)(v10 + 16);
  v15 = (v11 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v17 = v11;
  v18 = *(_QWORD *)(v10 + 24);
  if (v18 >= v16 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v18 >= v16 && (a4 & 1) == 0)
  {
    sub_1BB4C6A0C();
LABEL_7:
    v19 = (_QWORD *)*v5;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7] + 16 * v13;

      *(_QWORD *)v20 = a1;
      *(_BYTE *)(v20 + 8) = a2;
      return;
    }
LABEL_11:
    v19[(v13 >> 6) + 8] |= 1 << v13;
    *(_BYTE *)(v19[6] + v13) = a3;
    v23 = v19[7] + 16 * v13;
    *(_QWORD *)v23 = a1;
    *(_BYTE *)(v23 + 8) = a2;
    v24 = v19[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v19[2] = v26;
      return;
    }
    goto LABEL_14;
  }
  sub_1BB4B532C(v16, a4 & 1);
  sub_1BB4AB03C(a3);
  if ((v17 & 1) == (v22 & 1))
  {
    v13 = v21;
    v19 = (_QWORD *)*v5;
    if ((v17 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BB874560();
  __break(1u);
}

uint64_t sub_1BB4BFC30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BF558(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CEB8C);
}

uint64_t sub_1BB4BFC3C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BB4BFC58(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1BB4CF560, (void (*)(_QWORD))sub_1BB4CE68C);
}

uint64_t sub_1BB4BFC58(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), void (*a5)(_QWORD))
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v8 = v5;
  v12 = *v5;
  v14 = a4(a2);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C6DA4(a5);
LABEL_7:
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v23 = 8 * v14;
    *(_QWORD *)(v20[6] + v23) = a2;
    *(_QWORD *)(v20[7] + v23) = a1;
    v24 = v20[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_1BB4B57C4(result, a3 & 1, a5);
  result = a4(a2);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BFDA8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1BA4A42A0(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C6F44();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1BB4B5A74(result, a3 & 1);
  result = sub_1BA4A42A0(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4BFEE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BF1D4(a1, a2, a3, a4, &qword_1EF2C5240, &qword_1ED3ABC70, (uint64_t)&type metadata for SharedItemManager.ShareAttributionViewContext);
}

uint64_t sub_1BB4BFEFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4C02E8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilingPackage, (void (*)(_QWORD, __n128))sub_1BA8F5A54, (void (*)(unint64_t, char *))sub_1BB4CD884, (void (*)(char *, unint64_t))sub_1BAF5785C);
}

uint64_t sub_1BB4BFF20(uint64_t a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1BB4AB5F8(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C75C4(&qword_1EF2C5018, (void (*)(void))sub_1BB4CD454);
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1BB4B65F4(result, a3 & 1);
  result = sub_1BB4AB5F8(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4C0060(uint64_t a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1BA7C254C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C75C4(&qword_1EF2C5028, (void (*)(void))sub_1BA82DC80);
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1BB4B68D4(result, a3 & 1);
  result = sub_1BA7C254C(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4C01A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4C02E8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile, (void (*)(_QWORD, __n128))sub_1BB4CD8D4, (void (*)(unint64_t, char *))sub_1BB1AEDB4, (void (*)(char *, unint64_t))sub_1BB4CD938);
}

uint64_t sub_1BB4C01C4(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  char v7;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v7 = a2 & 1;
  v8 = (_QWORD *)*v3;
  v10 = sub_1BB4AB718(a2 & 1);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_1BB86C67C();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_1BB4C14A0(v10, v7, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BB4C90B0();
      goto LABEL_7;
    }
    sub_1BB4B9E8C(v13, a3 & 1);
    v20 = sub_1BB4AB718(v7);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1BB4C14A0(v10, v7, a1, v16);
    }
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4C02E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD, __n128), void (*a7)(unint64_t, char *), void (*a8)(char *, unint64_t))
{
  _QWORD *v8;
  _QWORD **v12;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  char v29;

  v12 = (_QWORD **)v8;
  v16 = (_QWORD *)*v8;
  v18 = sub_1BA6E35A8(a2, a3);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
  }
  else
  {
    v22 = v17;
    v23 = v16[3];
    if (v23 >= v21 && (a4 & 1) != 0)
    {
LABEL_7:
      v24 = *v12;
      if ((v22 & 1) != 0)
      {
LABEL_8:
        v25 = v24[7];
        v26 = a5(0);
        return sub_1BA7229AC(a1, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v18, a5);
      }
      goto LABEL_11;
    }
    if (v23 >= v21 && (a4 & 1) == 0)
    {
      sub_1BA7F2324(a5, (void (*)(_QWORD, double))a6, a7, a8);
      goto LABEL_7;
    }
    sub_1BA73E158(v21, a4 & 1, a5, a6, (void (*)(unint64_t, char *))a8, a7);
    v28 = sub_1BA6E35A8(a2, a3);
    if ((v22 & 1) == (v29 & 1))
    {
      v18 = v28;
      v24 = *v12;
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BA7249F8(v18, a2, a3, a1, v24, a5, (uint64_t (*)(uint64_t, unint64_t))a8);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

_OWORD *sub_1BB4C0470(_OWORD *a1, void *a2, char a3)
{
  return sub_1BB4C0494(a1, a2, a3, (uint64_t (*)(void *))sub_1BA76E600, (void (*)(void))sub_1BB4C96A0, (void (*)(void))sub_1BB4BA5A4, type metadata accessor for Key);
}

_OWORD *sub_1BB4C0494(_OWORD *a1, void *a2, char a3, uint64_t (*a4)(void *), void (*a5)(void), void (*a6)(void), void (*a7)(_QWORD))
{
  _QWORD *v7;
  _QWORD **v12;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _OWORD *v24;
  _OWORD *result;
  uint64_t v26;
  char v27;

  v12 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = a4(a2);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a3 & 1) != 0)
    {
LABEL_7:
      v23 = *v12;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = (_OWORD *)(v23[7] + 32 * v17);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        return sub_1BA76EAE0(a1, v24);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v26 = a4(a2);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v12;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BB4C1530(v17, (uint64_t)a2, a1, v23);
      return a2;
    }
  }
  a7(0);
  result = (_OWORD *)sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4C05DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v8 = v7;
  v15 = *v7;
  v17 = sub_1BA6E35A8(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_1BB4C9870();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = (_QWORD *)(v23[7] + 32 * v17);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *v24 = a1;
      v24[1] = a2;
      v24[2] = a3;
      v24[3] = a4;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v28 = (uint64_t *)(v23[6] + 16 * v17);
    *v28 = a5;
    v28[1] = a6;
    v29 = (_QWORD *)(v23[7] + 32 * v17);
    *v29 = a1;
    v29[1] = a2;
    v29[2] = a3;
    v29[3] = a4;
    v30 = v23[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v23[2] = v32;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4BA8D8(v20, a7 & 1);
  v26 = sub_1BA6E35A8(a5, a6);
  if ((v21 & 1) == (v27 & 1))
  {
    v17 = v26;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4C077C(char a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA676A9C(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CD7DC);
}

void sub_1BB4C0788(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1BB4BD6D4(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CCF00);
}

void sub_1BB4C0794(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1BB4BD6D4(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CCE8C);
}

uint64_t sub_1BB4C07A0(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BB4C60FC();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BB4CCFD8((uint64_t)a1, v18[7] + 48 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + 48 * v12);
    v24 = *a1;
    v25 = a1[2];
    v23[1] = a1[1];
    v23[2] = v25;
    *v23 = v24;
    v26 = v18[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v18[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4B495C(v15, a4 & 1);
  v20 = sub_1BA6E35A8(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BB4CCFD8((uint64_t)a1, v18[7] + 48 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4C090C(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BB4CA158();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BB4CDE04((uint64_t)a1, v18[7] + (v12 << 7));
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + (v12 << 7));
    v24 = *a1;
    v25 = a1[1];
    v26 = a1[3];
    v23[2] = a1[2];
    v23[3] = v26;
    *v23 = v24;
    v23[1] = v25;
    v27 = a1[4];
    v28 = a1[5];
    v29 = a1[7];
    v23[6] = a1[6];
    v23[7] = v29;
    v23[4] = v27;
    v23[5] = v28;
    v30 = v18[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v18[2] = v32;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BB4BB2A4(v15, a4 & 1);
  v20 = sub_1BA6E35A8(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BB4CDE04((uint64_t)a1, v18[7] + (v12 << 7));
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

_OWORD *sub_1BB4C0A80(_OWORD *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  char v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v11 = a4 & 1;
  v12 = (_QWORD *)*v5;
  v14 = sub_1BB4AB848(a2, a3, a4 & 1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (_OWORD *)(v20[7] + 32 * v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        return sub_1BA76EAE0(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1BB4CA5A8();
      goto LABEL_7;
    }
    sub_1BB4BBA80(v17, a5 & 1);
    v23 = sub_1BB4AB848(a2, a3, v11);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BB4C1594(v14, a2, a3, v11, a1, v20);
      return (_OWORD *)sub_1BAF92B74();
    }
  }
  result = (_OWORD *)sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4C0BD4(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_1(v19);
        return sub_1BA4CECCC(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BB4CA7DC((void (*)(_QWORD))sub_1BB4CE2B0, (void (*)(_BYTE *, uint64_t))sub_1BA4CECCC);
      goto LABEL_7;
    }
    sub_1BA6CFE70(v15, a4 & 1, (void (*)(_QWORD))sub_1BB4CE2B0, (void (*)(uint64_t, _BYTE *))sub_1BA4CECCC);
    v21 = sub_1BA6E35A8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BB4C1608(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4C0D28(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4C0D44(a1, a2, a3, a4, (void (*)(void))sub_1BB4CAB88, (void (*)(void))sub_1BB4BBDD0, (uint64_t (*)(_QWORD))MEMORY[0x1E0DDAA80]);
}

uint64_t sub_1BB4C0D44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), uint64_t (*a7)(_QWORD))
{
  _QWORD *v7;
  _QWORD **v10;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v10 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_1BA6E35A8(a2, a3);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7];
        v25 = a7(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a1, v25);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v27 = sub_1BA6E35A8(a2, a3);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BB4C1674(v17, a2, a3, a1, v23, a7);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BB4C0EAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA6E3434(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CD66C);
}

void sub_1BB4C0EB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1BB4BD6D4(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CE174);
}

uint64_t sub_1BB4C0EC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BB4BF558(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BB4CDF80);
}

void sub_1BB4C0ED0(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

unint64_t sub_1BB4C0F34()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  char v3;
  unint64_t result;
  uint64_t v5;

  sub_1BB872A90();
  swift_bridgeObjectRelease();
  sub_1BB874608();
  result = sub_1BB873BDC();
  *(_QWORD *)((char *)v0 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(_BYTE *)(v0[6] + result) = v3;
  v5 = v0[7] + 16 * result;
  *(_QWORD *)v5 = v2;
  *(_BYTE *)(v5 + 8) = v1;
  ++v0[2];
  return result;
}

_OWORD *sub_1BB4C1048(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1BB873E58();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_1BA76EAE0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1BB4C10EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  result = sub_1BA7BE148(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

unint64_t sub_1BB4C11BC(unint64_t result, char a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = a5[6] + 16 * result;
  *(_BYTE *)v5 = a2;
  *(_QWORD *)(v5 + 8) = a3;
  v6 = (_OWORD *)(a5[7] + (result << 7));
  v7 = a4[1];
  *v6 = *a4;
  v6[1] = v7;
  v8 = a4[3];
  v6[2] = a4[2];
  v6[3] = v8;
  *(_OWORD *)((char *)v6 + 105) = *(_OWORD *)((char *)a4 + 105);
  v9 = a4[6];
  v10 = a4[4];
  v6[5] = a4[5];
  v6[6] = v9;
  v6[4] = v10;
  v11 = a5[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a5[2] = v13;
  return result;
}

unint64_t sub_1BB4C1230(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1BB4C1278(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1BB86C67C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1BB4C1310(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BA6A09F0(a4, a5[7] + 112 * a1, &qword_1EF2C5200, (uint64_t)&type metadata for PuzzleStatsInfo.StatValue);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1BB4C1390(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for WebEmbedDatastoreCacheKey();
  result = sub_1BA5193C4(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_1BB4C1428(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1BA76EAE0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_1BB4C14A0(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2 & 1;
  v7 = a4[7];
  v8 = sub_1BB86C67C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

_OWORD *sub_1BB4C1530(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1BA76EAE0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

_OWORD *sub_1BB4C1594(unint64_t a1, uint64_t a2, uint64_t a3, char a4, _OWORD *a5, _QWORD *a6)
{
  uint64_t v7;
  _OWORD *result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v7 = a6[6] + 24 * a1;
  *(_QWORD *)v7 = a2;
  *(_QWORD *)(v7 + 8) = a3;
  *(_BYTE *)(v7 + 16) = a4 & 1;
  result = sub_1BA76EAE0(a5, (_OWORD *)(a6[7] + 32 * a1));
  v9 = a6[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a6[2] = v11;
  return result;
}

uint64_t sub_1BB4C1608(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BA4CECCC(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1BB4C1674(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v9 = (_QWORD *)(a5[6] + 16 * a1);
  *v9 = a2;
  v9[1] = a3;
  v10 = a5[7];
  v11 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a4, v11);
  v13 = a5[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a5[2] = v15;
  return result;
}

void *sub_1BB4C1704()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_1BA8F6BFC();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_retain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C18B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_1BA7863C0();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1BA747A10(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1BA76EAE0(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BB4C1A98()
{
  return sub_1BB4C96AC(sub_1BA785C04);
}

void *sub_1BB4C1AA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _OWORD v26[2];

  v1 = v0;
  v2 = sub_1BB873E58();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8F5E50();
  v6 = *v0;
  v7 = sub_1BB873F48();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    sub_1BA747A10(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = sub_1BA76EAE0(v26, (_OWORD *)(*(_QWORD *)(v8 + 56) + v20));
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BB4C1CDC()
{
  return sub_1BB4CB6B0((void (*)(_QWORD))sub_1BB4CF4E4);
}

void *sub_1BB4C1CE8()
{
  return sub_1BB4CB6B0((void (*)(_QWORD))sub_1BA8F5FE8);
}

void *sub_1BB4C1CF4()
{
  return sub_1BB4C94EC((void (*)(_QWORD))sub_1BB4CEFA0);
}

void *sub_1BB4C1D00()
{
  return sub_1BB4C94EC((void (*)(_QWORD))sub_1BB4CF014);
}

void *sub_1BB4C1D0C()
{
  return sub_1BA6E3744((void (*)(_QWORD))sub_1BA8F6B98);
}

void *sub_1BB4C1D18()
{
  return sub_1BB4C94EC((void (*)(_QWORD))sub_1BB4CF088);
}

void *sub_1BB4C1D24()
{
  return sub_1BA6E3744((void (*)(_QWORD))sub_1BA8F6B34);
}

void *sub_1BB4C1D30()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic, (void (*)(_QWORD, double))sub_1BA8F6A20, (void (*)(unint64_t, char *))sub_1BB4CBDC8, (void (*)(char *, unint64_t))sub_1BB4CBDD4);
}

void *sub_1BB4C1D54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  sub_1BA8F6AD0();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v23 = *(_QWORD *)v21;
    v22 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 32);
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v26 = *(_OWORD *)(v21 + 16);
    *v25 = v19;
    v25[1] = v18;
    v27 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v27 = v23;
    *(_QWORD *)(v27 + 8) = v22;
    *(_OWORD *)(v27 + 16) = v26;
    *(_QWORD *)(v27 + 32) = v24;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BB4C1F54()
{
  return sub_1BB4CB870((void (*)(_QWORD))sub_1BB4CEF2C);
}

void *sub_1BB4C1F60()
{
  return sub_1BB4C94EC((void (*)(_QWORD))sub_1BB4CEEB8);
}

void *sub_1BB4C1F6C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_1BA8F6924(0, &qword_1ED3C04B0, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v24 = *(_OWORD *)(v21 + 8);
    *v23 = v19;
    v23[1] = v18;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v22;
    *(_OWORD *)(v25 + 8) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C216C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1BA8F68C4();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C2320()
{
  return sub_1BB4C6DA4((void (*)(_QWORD))sub_1BA8F6378);
}

uint64_t sub_1BB4C232C()
{
  return sub_1BB4C23C8((unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, &qword_1ED39DB08);
}

void *sub_1BB4C2350()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))sub_1BA709CA4, (void (*)(_QWORD, double))sub_1BA8F65D0, (void (*)(unint64_t, char *))sub_1BA709A94, (void (*)(char *, unint64_t))sub_1BA707100);
}

void *sub_1BB4C2374()
{
  return sub_1BB4CB6B0((void (*)(_QWORD))sub_1BA76BB6C);
}

void *sub_1BB4C2380()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition, (void (*)(_QWORD, double))sub_1BA8F6780, (void (*)(unint64_t, char *))sub_1BA7AE5A4, (void (*)(char *, unint64_t))sub_1BA7AE86C);
}

uint64_t sub_1BB4C23A4()
{
  return sub_1BB4C23C8((unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, &qword_1ED39DB00);
}

uint64_t sub_1BB4C23C8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t (*v24)(void);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  int64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t (*v47)(void);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1BA4CDF6C(0, a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v45 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v44 = (char *)&v41 - v10;
  v46 = a1;
  v47 = a2;
  v48 = a3;
  sub_1BB4CE404(0, a4, a1, a2, a3);
  v41 = v4;
  v11 = *v4;
  v12 = sub_1BB873F48();
  v13 = *(_QWORD *)(v11 + 16);
  v50 = v12;
  if (!v13)
  {
    result = swift_release();
    v40 = v50;
    v39 = v41;
LABEL_28:
    *v39 = v40;
    return result;
  }
  v14 = v12;
  v15 = (void *)(v12 + 64);
  v16 = (unint64_t)((1 << *(_BYTE *)(v14 + 32)) + 63) >> 6;
  if (v14 != v11 || (unint64_t)v15 >= v11 + 64 + 8 * v16)
  {
    memmove(v15, (const void *)(v11 + 64), 8 * v16);
    v14 = v50;
  }
  v18 = 0;
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v11 + 16);
  v19 = 1 << *(_BYTE *)(v11 + 32);
  v49 = v11;
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & *(_QWORD *)(v11 + 64);
  v42 = v11 + 64;
  v43 = (unint64_t)(v19 + 63) >> 6;
  v22 = (uint64_t)v44;
  v23 = v46;
  v24 = v47;
  v25 = v48;
  while (1)
  {
    if (v21)
    {
      v26 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v27 = v26 | (v18 << 6);
      result = v49;
      goto LABEL_12;
    }
    v36 = v18 + 1;
    result = v49;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v36 >= v43)
      goto LABEL_26;
    v37 = *(_QWORD *)(v42 + 8 * v36);
    ++v18;
    if (!v37)
    {
      v18 = v36 + 1;
      if (v36 + 1 >= v43)
        goto LABEL_26;
      v37 = *(_QWORD *)(v42 + 8 * v18);
      if (!v37)
        break;
    }
LABEL_25:
    v21 = (v37 - 1) & v37;
    v27 = __clz(__rbit64(v37)) + (v18 << 6);
LABEL_12:
    v29 = 16 * v27;
    v30 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v27);
    v31 = *v30;
    v32 = v30[1];
    v33 = *(_QWORD *)(v45 + 72) * v27;
    sub_1BA7BCB94(*(_QWORD *)(result + 56) + v33, v22, v23, v24, v25);
    v34 = v50;
    v35 = (_QWORD *)(*(_QWORD *)(v50 + 48) + v29);
    *v35 = v31;
    v35[1] = v32;
    sub_1BA7BE148(v22, *(_QWORD *)(v34 + 56) + v33, v23, v24, v25);
    swift_bridgeObjectRetain();
  }
  v38 = v36 + 2;
  if (v38 >= v43)
  {
LABEL_26:
    result = swift_release();
    v39 = v41;
    v40 = v50;
    goto LABEL_28;
  }
  v37 = *(_QWORD *)(v42 + 8 * v38);
  if (v37)
  {
    v18 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    v18 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v18 >= v43)
      goto LABEL_26;
    v37 = *(_QWORD *)(v42 + 8 * v18);
    ++v38;
    if (v37)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BB4C2674()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  sub_1BA60192C();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 40 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    v25 = v21[2];
    v24 = v21[3];
    v26 = v21[4];
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v27 = v18;
    v27[1] = v19;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v28 = v22;
    v28[1] = v23;
    v28[2] = v25;
    v28[3] = v24;
    v28[4] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C2858()
{
  return sub_1BB4C73DC(&qword_1EF2C5030, &qword_1EF2BAC40, (uint64_t)&type metadata for FormatSourceMap);
}

void *sub_1BB4C2874()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;

  sub_1BA77043C();
  v30 = v0;
  v1 = *v0;
  v2 = sub_1BB873F48();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v30 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5)
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  v31 = v1 + 64;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    v27 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v11)
      goto LABEL_26;
    v28 = *(_QWORD *)(v31 + 8 * v27);
    ++v7;
    if (!v28)
    {
      v7 = v27 + 1;
      if (v27 + 1 >= v11)
        goto LABEL_26;
      v28 = *(_QWORD *)(v31 + 8 * v7);
      if (!v28)
        break;
    }
LABEL_25:
    v10 = (v28 - 1) & v28;
    v13 = __clz(__rbit64(v28)) + (v7 << 6);
LABEL_12:
    v14 = 16 * v13;
    v15 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v13);
    v17 = *v15;
    v16 = v15[1];
    v18 = 40 * v13;
    v19 = *(_QWORD *)(v1 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v14);
    v25 = *(_BYTE *)(v19 + 32);
    *v24 = v17;
    v24[1] = v16;
    v26 = *(_QWORD *)(v3 + 56) + v18;
    *(_QWORD *)v26 = v20;
    *(_QWORD *)(v26 + 8) = v21;
    *(_QWORD *)(v26 + 16) = v22;
    *(_QWORD *)(v26 + 24) = v23;
    *(_BYTE *)(v26 + 32) = v25;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BA74AFD8(v20, v21, v22, v23, v25);
  }
  v29 = v27 + 2;
  if (v29 >= v11)
    goto LABEL_26;
  v28 = *(_QWORD *)(v31 + 8 * v29);
  if (v28)
  {
    v7 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v7 >= v11)
      goto LABEL_26;
    v28 = *(_QWORD *)(v31 + 8 * v7);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C2A70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_1BB4CD51C();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v24 = *(_OWORD *)(v21 + 8);
    *v23 = v19;
    v23[1] = v18;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v22;
    *(_OWORD *)(v25 + 8) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C2C50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[25];

  v1 = v0;
  sub_1BA8F6924(0, &qword_1ED3A3038, (void (*)(void))sub_1BB4CE9EC);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      v9 = v36 + 1;
      if (v36 + 1 >= v13)
        goto LABEL_26;
      v37 = *(_QWORD *)(v6 + 8 * v9);
      if (!v37)
        break;
    }
LABEL_25:
    v12 = (v37 - 1) & v37;
    v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v19 = *(_BYTE *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = v15 << 7;
    v23 = *(_OWORD *)(v17 + v21 + 80);
    v22 = *(_OWORD *)(v17 + v21 + 96);
    v24 = *(_OWORD *)(v17 + v21 + 64);
    *(_OWORD *)&v45[9] = *(_OWORD *)(v17 + v21 + 105);
    v44 = v23;
    *(_OWORD *)v45 = v22;
    v43 = v24;
    v26 = *(_OWORD *)(v17 + v21);
    v25 = *(_OWORD *)(v17 + v21 + 16);
    v27 = *(_OWORD *)(v17 + v21 + 48);
    v41 = *(_OWORD *)(v17 + v21 + 32);
    v42 = v27;
    v39 = v26;
    v40 = v25;
    v28 = *(_QWORD *)(v4 + 48) + v16;
    *(_BYTE *)v28 = v19;
    *(_QWORD *)(v28 + 8) = v20;
    v29 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v21);
    v30 = v39;
    v31 = v40;
    v32 = v42;
    v29[2] = v41;
    v29[3] = v32;
    *v29 = v30;
    v29[1] = v31;
    v33 = v43;
    v34 = v44;
    v35 = *(_OWORD *)v45;
    *(_OWORD *)((char *)v29 + 105) = *(_OWORD *)&v45[9];
    v29[5] = v34;
    v29[6] = v35;
    v29[4] = v33;
    swift_bridgeObjectRetain();
    result = (void *)sub_1BA741FD8((uint64_t)&v39);
  }
  v38 = v36 + 2;
  if (v38 >= v13)
    goto LABEL_26;
  v37 = *(_QWORD *)(v6 + 8 * v38);
  if (v37)
  {
    v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v9);
    ++v38;
    if (v37)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C2E80()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data, (void (*)(_QWORD, double))sub_1BA74AFEC, (void (*)(unint64_t, char *))sub_1BA82E948, (void (*)(char *, unint64_t))sub_1BA73E4D0);
}

void *sub_1BB4C2EA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1BA8F6924(0, &qword_1ED3B9A58, (void (*)(void))sub_1BA8262E8);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    swift_bridgeObjectRetain();
    swift_retain();
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C3088()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for FormatScopedOption, (void (*)(_QWORD, double))sub_1BB4CD5F0, (void (*)(unint64_t, char *))sub_1BB4CD654, (void (*)(char *, unint64_t))sub_1BB4CD660);
}

void *sub_1BB4C30AC()
{
  return sub_1BA7F2324((uint64_t (*)(_QWORD))type metadata accessor for FormatJson, (void (*)(_QWORD, double))sub_1BB4CD580, (void (*)(unint64_t, char *))sub_1BB4CD5E4, (void (*)(char *, unint64_t))sub_1BA9BE630);
}

void *sub_1BB4C30D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  BOOL v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;

  sub_1BA8F5C60();
  v38 = v0;
  v1 = *v0;
  v2 = sub_1BB873F48();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    v37 = v3;
    result = (void *)swift_release();
    *v38 = v37;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  v42 = v3;
  if (v6)
  {
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    v3 = v42;
  }
  v40 = v1 + 64;
  v41 = v1;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v39 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v43 = v7;
      v12 = v11 | (v7 << 6);
      v13 = v41;
      v3 = v42;
      goto LABEL_12;
    }
    v33 = v7 + 1;
    v13 = v41;
    v3 = v42;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v39)
      goto LABEL_26;
    v34 = *(_QWORD *)(v40 + 8 * v33);
    v35 = v7 + 1;
    if (!v34)
    {
      v35 = v7 + 2;
      if (v7 + 2 >= v39)
        goto LABEL_26;
      v34 = *(_QWORD *)(v40 + 8 * v35);
      if (!v34)
        break;
    }
LABEL_25:
    v10 = (v34 - 1) & v34;
    v43 = v35;
    v12 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_12:
    v14 = 16 * v12;
    v15 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 16 * v12);
    v17 = *v15;
    v16 = v15[1];
    v18 = 88 * v12;
    v19 = *(_QWORD *)(v13 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = *(_QWORD *)(v19 + 32);
    v25 = *(_QWORD *)(v19 + 40);
    v26 = *(_QWORD *)(v19 + 48);
    v27 = *(_QWORD *)(v19 + 56);
    v28 = *(_QWORD *)(v19 + 64);
    v29 = *(_QWORD *)(v19 + 72);
    v30 = *(_BYTE *)(v19 + 80);
    v31 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v14);
    *v31 = v17;
    v31[1] = v16;
    v32 = *(_QWORD *)(v3 + 56) + v18;
    *(_QWORD *)v32 = v20;
    *(_QWORD *)(v32 + 8) = v21;
    *(_QWORD *)(v32 + 16) = v22;
    *(_QWORD *)(v32 + 24) = v23;
    *(_QWORD *)(v32 + 32) = v24;
    *(_QWORD *)(v32 + 40) = v25;
    *(_QWORD *)(v32 + 48) = v26;
    *(_QWORD *)(v32 + 56) = v27;
    *(_QWORD *)(v32 + 64) = v28;
    *(_QWORD *)(v32 + 72) = v29;
    *(_BYTE *)(v32 + 80) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)sub_1BA7261E0(v26, v27, v28, v29, v30);
    v7 = v43;
  }
  v36 = v7 + 3;
  if (v7 + 3 >= v39)
    goto LABEL_26;
  v34 = *(_QWORD *)(v40 + 8 * v36);
  if (v34)
  {
    v35 = v7 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v35 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v35 >= v39)
      goto LABEL_26;
    v34 = *(_QWORD *)(v40 + 8 * v35);
    ++v36;
    if (v34)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C3328()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  sub_1BA8F6924(0, &qword_1EF2C50A0, (void (*)(void))sub_1BA834FF0);
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_BYTE *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v26 = v18;
    v26[1] = v19;
    v27 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v27 = v22;
    *(_QWORD *)(v27 + 8) = v23;
    *(_BYTE *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BB4C3520()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_1BB4CD6D0();
  v2 = *v0;
  v3 = sub_1BB873F48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = (__int128 *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v23 = *v21;
    v24 = v21[1];
    *v22 = v19;
    v22[1] = v18;
    v25 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v25 = v23;
    v25[1] = v24;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

